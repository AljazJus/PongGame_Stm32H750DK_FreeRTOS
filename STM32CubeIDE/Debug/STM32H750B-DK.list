
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002b620  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003504  9002b8c0  9002b8c0  0002f8c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000004c8  9002edc4  9002edc4  00032dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002f28c  9002f28c  002bbe54  2**0
                  CONTENTS
  6 .ARM          00000008  9002f28c  9002f28c  0003328c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002f294  9002f294  002bbe54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002f294  9002f294  00033294  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002f2ac  9002f2ac  000332ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002f2b4  00034000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00023edc  24000168  9002f41c  00034168  2**3
                  ALLOC
 12 ._user_heap_stack 00002004  24024044  9002f41c  00035044  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  002bbe54  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 00009d8c  90200000  90200000  00035000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000048  90209d8c  90209d8c  0003ed8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 0027d080  90209dd4  90209dd4  0003edd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  002bc000  2**2
                  ALLOC
 18 .debug_line   000758cb  00000000  00000000  002bbe82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000078  00000000  00000000  0033174d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000f4808  00000000  00000000  003317c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00018b4d  00000000  00000000  00425fcd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00003828  00000000  00000000  0043eb20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001b3fe4  00000000  00000000  00442348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000712c  00000000  00000000  005f632c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_macro  0004bc01  00000000  00000000  005fd458  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  00649059  2**0
                  CONTENTS, READONLY
 27 .debug_frame  0000aef4  00000000  00000000  0064911c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loclists 00033d62  00000000  00000000  00654010  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000168 	.word	0x24000168
900002bc:	00000000 	.word	0x00000000
900002c0:	9002b8a8 	.word	0x9002b8a8

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	2400016c 	.word	0x2400016c
900002dc:	9002b8a8 	.word	0x9002b8a8

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
90000716:	f000 b99d 	b.w	90000a54 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f835 	bl	90000798 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f828 	bl	90000798 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f817 	bl	90000798 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f809 	bl	90000798 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__udivmoddi4>:
90000798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000079c:	9d08      	ldr	r5, [sp, #32]
9000079e:	460c      	mov	r4, r1
900007a0:	2b00      	cmp	r3, #0
900007a2:	d14e      	bne.n	90000842 <__udivmoddi4+0xaa>
900007a4:	4694      	mov	ip, r2
900007a6:	458c      	cmp	ip, r1
900007a8:	4686      	mov	lr, r0
900007aa:	fab2 f282 	clz	r2, r2
900007ae:	d962      	bls.n	90000876 <__udivmoddi4+0xde>
900007b0:	b14a      	cbz	r2, 900007c6 <__udivmoddi4+0x2e>
900007b2:	f1c2 0320 	rsb	r3, r2, #32
900007b6:	4091      	lsls	r1, r2
900007b8:	fa20 f303 	lsr.w	r3, r0, r3
900007bc:	fa0c fc02 	lsl.w	ip, ip, r2
900007c0:	4319      	orrs	r1, r3
900007c2:	fa00 fe02 	lsl.w	lr, r0, r2
900007c6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007ca:	fa1f f68c 	uxth.w	r6, ip
900007ce:	fbb1 f4f7 	udiv	r4, r1, r7
900007d2:	ea4f 431e 	mov.w	r3, lr, lsr #16
900007d6:	fb07 1114 	mls	r1, r7, r4, r1
900007da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900007de:	fb04 f106 	mul.w	r1, r4, r6
900007e2:	4299      	cmp	r1, r3
900007e4:	d90a      	bls.n	900007fc <__udivmoddi4+0x64>
900007e6:	eb1c 0303 	adds.w	r3, ip, r3
900007ea:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
900007ee:	f080 8112 	bcs.w	90000a16 <__udivmoddi4+0x27e>
900007f2:	4299      	cmp	r1, r3
900007f4:	f240 810f 	bls.w	90000a16 <__udivmoddi4+0x27e>
900007f8:	3c02      	subs	r4, #2
900007fa:	4463      	add	r3, ip
900007fc:	1a59      	subs	r1, r3, r1
900007fe:	fa1f f38e 	uxth.w	r3, lr
90000802:	fbb1 f0f7 	udiv	r0, r1, r7
90000806:	fb07 1110 	mls	r1, r7, r0, r1
9000080a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000080e:	fb00 f606 	mul.w	r6, r0, r6
90000812:	429e      	cmp	r6, r3
90000814:	d90a      	bls.n	9000082c <__udivmoddi4+0x94>
90000816:	eb1c 0303 	adds.w	r3, ip, r3
9000081a:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
9000081e:	f080 80fc 	bcs.w	90000a1a <__udivmoddi4+0x282>
90000822:	429e      	cmp	r6, r3
90000824:	f240 80f9 	bls.w	90000a1a <__udivmoddi4+0x282>
90000828:	4463      	add	r3, ip
9000082a:	3802      	subs	r0, #2
9000082c:	1b9b      	subs	r3, r3, r6
9000082e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000832:	2100      	movs	r1, #0
90000834:	b11d      	cbz	r5, 9000083e <__udivmoddi4+0xa6>
90000836:	40d3      	lsrs	r3, r2
90000838:	2200      	movs	r2, #0
9000083a:	e9c5 3200 	strd	r3, r2, [r5]
9000083e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000842:	428b      	cmp	r3, r1
90000844:	d905      	bls.n	90000852 <__udivmoddi4+0xba>
90000846:	b10d      	cbz	r5, 9000084c <__udivmoddi4+0xb4>
90000848:	e9c5 0100 	strd	r0, r1, [r5]
9000084c:	2100      	movs	r1, #0
9000084e:	4608      	mov	r0, r1
90000850:	e7f5      	b.n	9000083e <__udivmoddi4+0xa6>
90000852:	fab3 f183 	clz	r1, r3
90000856:	2900      	cmp	r1, #0
90000858:	d146      	bne.n	900008e8 <__udivmoddi4+0x150>
9000085a:	42a3      	cmp	r3, r4
9000085c:	d302      	bcc.n	90000864 <__udivmoddi4+0xcc>
9000085e:	4290      	cmp	r0, r2
90000860:	f0c0 80f0 	bcc.w	90000a44 <__udivmoddi4+0x2ac>
90000864:	1a86      	subs	r6, r0, r2
90000866:	eb64 0303 	sbc.w	r3, r4, r3
9000086a:	2001      	movs	r0, #1
9000086c:	2d00      	cmp	r5, #0
9000086e:	d0e6      	beq.n	9000083e <__udivmoddi4+0xa6>
90000870:	e9c5 6300 	strd	r6, r3, [r5]
90000874:	e7e3      	b.n	9000083e <__udivmoddi4+0xa6>
90000876:	2a00      	cmp	r2, #0
90000878:	f040 8090 	bne.w	9000099c <__udivmoddi4+0x204>
9000087c:	eba1 040c 	sub.w	r4, r1, ip
90000880:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000884:	fa1f f78c 	uxth.w	r7, ip
90000888:	2101      	movs	r1, #1
9000088a:	fbb4 f6f8 	udiv	r6, r4, r8
9000088e:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000892:	fb08 4416 	mls	r4, r8, r6, r4
90000896:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
9000089a:	fb07 f006 	mul.w	r0, r7, r6
9000089e:	4298      	cmp	r0, r3
900008a0:	d908      	bls.n	900008b4 <__udivmoddi4+0x11c>
900008a2:	eb1c 0303 	adds.w	r3, ip, r3
900008a6:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
900008aa:	d202      	bcs.n	900008b2 <__udivmoddi4+0x11a>
900008ac:	4298      	cmp	r0, r3
900008ae:	f200 80cd 	bhi.w	90000a4c <__udivmoddi4+0x2b4>
900008b2:	4626      	mov	r6, r4
900008b4:	1a1c      	subs	r4, r3, r0
900008b6:	fa1f f38e 	uxth.w	r3, lr
900008ba:	fbb4 f0f8 	udiv	r0, r4, r8
900008be:	fb08 4410 	mls	r4, r8, r0, r4
900008c2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008c6:	fb00 f707 	mul.w	r7, r0, r7
900008ca:	429f      	cmp	r7, r3
900008cc:	d908      	bls.n	900008e0 <__udivmoddi4+0x148>
900008ce:	eb1c 0303 	adds.w	r3, ip, r3
900008d2:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
900008d6:	d202      	bcs.n	900008de <__udivmoddi4+0x146>
900008d8:	429f      	cmp	r7, r3
900008da:	f200 80b0 	bhi.w	90000a3e <__udivmoddi4+0x2a6>
900008de:	4620      	mov	r0, r4
900008e0:	1bdb      	subs	r3, r3, r7
900008e2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900008e6:	e7a5      	b.n	90000834 <__udivmoddi4+0x9c>
900008e8:	f1c1 0620 	rsb	r6, r1, #32
900008ec:	408b      	lsls	r3, r1
900008ee:	fa22 f706 	lsr.w	r7, r2, r6
900008f2:	431f      	orrs	r7, r3
900008f4:	fa20 fc06 	lsr.w	ip, r0, r6
900008f8:	fa04 f301 	lsl.w	r3, r4, r1
900008fc:	ea43 030c 	orr.w	r3, r3, ip
90000900:	40f4      	lsrs	r4, r6
90000902:	fa00 f801 	lsl.w	r8, r0, r1
90000906:	0c38      	lsrs	r0, r7, #16
90000908:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000090c:	fbb4 fef0 	udiv	lr, r4, r0
90000910:	fa1f fc87 	uxth.w	ip, r7
90000914:	fb00 441e 	mls	r4, r0, lr, r4
90000918:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000091c:	fb0e f90c 	mul.w	r9, lr, ip
90000920:	45a1      	cmp	r9, r4
90000922:	fa02 f201 	lsl.w	r2, r2, r1
90000926:	d90a      	bls.n	9000093e <__udivmoddi4+0x1a6>
90000928:	193c      	adds	r4, r7, r4
9000092a:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
9000092e:	f080 8084 	bcs.w	90000a3a <__udivmoddi4+0x2a2>
90000932:	45a1      	cmp	r9, r4
90000934:	f240 8081 	bls.w	90000a3a <__udivmoddi4+0x2a2>
90000938:	f1ae 0e02 	sub.w	lr, lr, #2
9000093c:	443c      	add	r4, r7
9000093e:	eba4 0409 	sub.w	r4, r4, r9
90000942:	fa1f f983 	uxth.w	r9, r3
90000946:	fbb4 f3f0 	udiv	r3, r4, r0
9000094a:	fb00 4413 	mls	r4, r0, r3, r4
9000094e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000952:	fb03 fc0c 	mul.w	ip, r3, ip
90000956:	45a4      	cmp	ip, r4
90000958:	d907      	bls.n	9000096a <__udivmoddi4+0x1d2>
9000095a:	193c      	adds	r4, r7, r4
9000095c:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
90000960:	d267      	bcs.n	90000a32 <__udivmoddi4+0x29a>
90000962:	45a4      	cmp	ip, r4
90000964:	d965      	bls.n	90000a32 <__udivmoddi4+0x29a>
90000966:	3b02      	subs	r3, #2
90000968:	443c      	add	r4, r7
9000096a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000096e:	fba0 9302 	umull	r9, r3, r0, r2
90000972:	eba4 040c 	sub.w	r4, r4, ip
90000976:	429c      	cmp	r4, r3
90000978:	46ce      	mov	lr, r9
9000097a:	469c      	mov	ip, r3
9000097c:	d351      	bcc.n	90000a22 <__udivmoddi4+0x28a>
9000097e:	d04e      	beq.n	90000a1e <__udivmoddi4+0x286>
90000980:	b155      	cbz	r5, 90000998 <__udivmoddi4+0x200>
90000982:	ebb8 030e 	subs.w	r3, r8, lr
90000986:	eb64 040c 	sbc.w	r4, r4, ip
9000098a:	fa04 f606 	lsl.w	r6, r4, r6
9000098e:	40cb      	lsrs	r3, r1
90000990:	431e      	orrs	r6, r3
90000992:	40cc      	lsrs	r4, r1
90000994:	e9c5 6400 	strd	r6, r4, [r5]
90000998:	2100      	movs	r1, #0
9000099a:	e750      	b.n	9000083e <__udivmoddi4+0xa6>
9000099c:	f1c2 0320 	rsb	r3, r2, #32
900009a0:	fa20 f103 	lsr.w	r1, r0, r3
900009a4:	fa0c fc02 	lsl.w	ip, ip, r2
900009a8:	fa24 f303 	lsr.w	r3, r4, r3
900009ac:	4094      	lsls	r4, r2
900009ae:	430c      	orrs	r4, r1
900009b0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009b4:	fa00 fe02 	lsl.w	lr, r0, r2
900009b8:	fa1f f78c 	uxth.w	r7, ip
900009bc:	fbb3 f0f8 	udiv	r0, r3, r8
900009c0:	fb08 3110 	mls	r1, r8, r0, r3
900009c4:	0c23      	lsrs	r3, r4, #16
900009c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009ca:	fb00 f107 	mul.w	r1, r0, r7
900009ce:	4299      	cmp	r1, r3
900009d0:	d908      	bls.n	900009e4 <__udivmoddi4+0x24c>
900009d2:	eb1c 0303 	adds.w	r3, ip, r3
900009d6:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
900009da:	d22c      	bcs.n	90000a36 <__udivmoddi4+0x29e>
900009dc:	4299      	cmp	r1, r3
900009de:	d92a      	bls.n	90000a36 <__udivmoddi4+0x29e>
900009e0:	3802      	subs	r0, #2
900009e2:	4463      	add	r3, ip
900009e4:	1a5b      	subs	r3, r3, r1
900009e6:	b2a4      	uxth	r4, r4
900009e8:	fbb3 f1f8 	udiv	r1, r3, r8
900009ec:	fb08 3311 	mls	r3, r8, r1, r3
900009f0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
900009f4:	fb01 f307 	mul.w	r3, r1, r7
900009f8:	42a3      	cmp	r3, r4
900009fa:	d908      	bls.n	90000a0e <__udivmoddi4+0x276>
900009fc:	eb1c 0404 	adds.w	r4, ip, r4
90000a00:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
90000a04:	d213      	bcs.n	90000a2e <__udivmoddi4+0x296>
90000a06:	42a3      	cmp	r3, r4
90000a08:	d911      	bls.n	90000a2e <__udivmoddi4+0x296>
90000a0a:	3902      	subs	r1, #2
90000a0c:	4464      	add	r4, ip
90000a0e:	1ae4      	subs	r4, r4, r3
90000a10:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a14:	e739      	b.n	9000088a <__udivmoddi4+0xf2>
90000a16:	4604      	mov	r4, r0
90000a18:	e6f0      	b.n	900007fc <__udivmoddi4+0x64>
90000a1a:	4608      	mov	r0, r1
90000a1c:	e706      	b.n	9000082c <__udivmoddi4+0x94>
90000a1e:	45c8      	cmp	r8, r9
90000a20:	d2ae      	bcs.n	90000980 <__udivmoddi4+0x1e8>
90000a22:	ebb9 0e02 	subs.w	lr, r9, r2
90000a26:	eb63 0c07 	sbc.w	ip, r3, r7
90000a2a:	3801      	subs	r0, #1
90000a2c:	e7a8      	b.n	90000980 <__udivmoddi4+0x1e8>
90000a2e:	4631      	mov	r1, r6
90000a30:	e7ed      	b.n	90000a0e <__udivmoddi4+0x276>
90000a32:	4603      	mov	r3, r0
90000a34:	e799      	b.n	9000096a <__udivmoddi4+0x1d2>
90000a36:	4630      	mov	r0, r6
90000a38:	e7d4      	b.n	900009e4 <__udivmoddi4+0x24c>
90000a3a:	46d6      	mov	lr, sl
90000a3c:	e77f      	b.n	9000093e <__udivmoddi4+0x1a6>
90000a3e:	4463      	add	r3, ip
90000a40:	3802      	subs	r0, #2
90000a42:	e74d      	b.n	900008e0 <__udivmoddi4+0x148>
90000a44:	4606      	mov	r6, r0
90000a46:	4623      	mov	r3, r4
90000a48:	4608      	mov	r0, r1
90000a4a:	e70f      	b.n	9000086c <__udivmoddi4+0xd4>
90000a4c:	3e02      	subs	r6, #2
90000a4e:	4463      	add	r3, ip
90000a50:	e730      	b.n	900008b4 <__udivmoddi4+0x11c>
90000a52:	bf00      	nop

90000a54 <__aeabi_idiv0>:
90000a54:	4770      	bx	lr
90000a56:	bf00      	nop

90000a58 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000a90 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a5c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a5e:	e003      	b.n	90000a68 <LoopCopyDataInit>

90000a60 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a60:	4b0c      	ldr	r3, [pc, #48]	@ (90000a94 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a62:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a64:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a66:	3104      	adds	r1, #4

90000a68 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a68:	480b      	ldr	r0, [pc, #44]	@ (90000a98 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a6a:	4b0c      	ldr	r3, [pc, #48]	@ (90000a9c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a6c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a6e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a70:	d3f6      	bcc.n	90000a60 <CopyDataInit>
  ldr  r2, =_sbss
90000a72:	4a0b      	ldr	r2, [pc, #44]	@ (90000aa0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a74:	e002      	b.n	90000a7c <LoopFillZerobss>

90000a76 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a76:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a78:	f842 3b04 	str.w	r3, [r2], #4

90000a7c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a7c:	4b09      	ldr	r3, [pc, #36]	@ (90000aa4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a7e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a80:	d3f9      	bcc.n	90000a76 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a82:	f007 f8dd 	bl	90007c40 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a86:	f02a fa17 	bl	9002aeb8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a8a:	f002 ff45 	bl	90003918 <main>
  bx  lr    
90000a8e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000a90:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000a94:	9002f2b4 	.word	0x9002f2b4
  ldr  r0, =_sdata
90000a98:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000a9c:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000aa0:	24000168 	.word	0x24000168
  ldr  r3, = _ebss
90000aa4:	24024044 	.word	0x24024044

90000aa8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000aa8:	e7fe      	b.n	90000aa8 <ADC3_IRQHandler>
	...

90000aac <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000aac:	4770      	bx	lr
90000aae:	bf00      	nop

90000ab0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ab0:	4770      	bx	lr
90000ab2:	bf00      	nop

90000ab4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ab4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ab6:	f002 f8c5 	bl	90002c44 <touchgfx_components_init>
    touchgfx_init();
}
90000aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000abe:	f002 b83f 	b.w	90002b40 <touchgfx_init>
90000ac2:	bf00      	nop

90000ac4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000ac4:	f002 b8c0 	b.w	90002c48 <touchgfx_taskEntry>

90000ac8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000ac8:	6840      	ldr	r0, [r0, #4]
    }
90000aca:	4770      	bx	lr

90000acc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000acc:	6041      	str	r1, [r0, #4]
    }
90000ace:	4770      	bx	lr

90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad0:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ad4:	4b08      	ldr	r3, [pc, #32]	@ (90000af8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000ad6:	4a09      	ldr	r2, [pc, #36]	@ (90000afc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad8:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000adc:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000ae0:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ae4:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000ae8:	430a      	orrs	r2, r1
90000aea:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000aee:	681a      	ldr	r2, [r3, #0]
90000af0:	f042 0201 	orr.w	r2, r2, #1
90000af4:	601a      	str	r2, [r3, #0]
}
90000af6:	4770      	bx	lr
90000af8:	e0001000 	.word	0xe0001000
90000afc:	c5acce55 	.word	0xc5acce55

90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b00:	1a52      	subs	r2, r2, r1
90000b02:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b06:	fbb2 f0f3 	udiv	r0, r2, r3
90000b0a:	4770      	bx	lr

90000b0c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b0c:	4b01      	ldr	r3, [pc, #4]	@ (90000b14 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b0e:	6858      	ldr	r0, [r3, #4]
}
90000b10:	4770      	bx	lr
90000b12:	bf00      	nop
90000b14:	e0001000 	.word	0xe0001000

90000b18 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b1c:	b510      	push	{r4, lr}
90000b1e:	4604      	mov	r4, r0
90000b20:	210c      	movs	r1, #12
90000b22:	f029 fa73 	bl	9002a00c <_ZdlPvj>
90000b26:	4620      	mov	r0, r4
90000b28:	bd10      	pop	{r4, pc}
90000b2a:	bf00      	nop

90000b2c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b2c:	6803      	ldr	r3, [r0, #0]
90000b2e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b60 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b30:	691b      	ldr	r3, [r3, #16]
{
90000b32:	b510      	push	{r4, lr}
90000b34:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b36:	b149      	cbz	r1, 90000b4c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b38:	4293      	cmp	r3, r2
90000b3a:	d10d      	bne.n	90000b58 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b3c:	4b09      	ldr	r3, [pc, #36]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b3e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b40:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b42:	6863      	ldr	r3, [r4, #4]
90000b44:	1a9b      	subs	r3, r3, r2
90000b46:	4403      	add	r3, r0
90000b48:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b4a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b4c:	4293      	cmp	r3, r2
90000b4e:	d105      	bne.n	90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b50:	4b04      	ldr	r3, [pc, #16]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b52:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b54:	60a0      	str	r0, [r4, #8]
}
90000b56:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b58:	4798      	blx	r3
90000b5a:	e7f1      	b.n	90000b40 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b5c:	4798      	blx	r3
90000b5e:	e7f9      	b.n	90000b54 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b60:	90000b0d 	.word	0x90000b0d
90000b64:	e0001000 	.word	0xe0001000

90000b68 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b68:	4770      	bx	lr
90000b6a:	bf00      	nop
90000b6c:	0000      	movs	r0, r0
	...

90000b70 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b70:	b500      	push	{lr}
90000b72:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b74:	2208      	movs	r2, #8
90000b76:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b78:	2000      	movs	r0, #0
90000b7a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b7c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000b98 <_ZN20STM32TouchController4initEv+0x28>
90000b80:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b84:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b88:	f006 ff6c 	bl	90007a64 <BSP_TS_Init>
}
90000b8c:	b005      	add	sp, #20
90000b8e:	f85d fb04 	ldr.w	pc, [sp], #4
90000b92:	bf00      	nop
90000b94:	f3af 8000 	nop.w
90000b98:	000001e0 	.word	0x000001e0
90000b9c:	00000110 	.word	0x00000110

90000ba0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000ba0:	b530      	push	{r4, r5, lr}
90000ba2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000ba4:	2000      	movs	r0, #0
{
90000ba6:	460d      	mov	r5, r1
90000ba8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000baa:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bac:	9001      	str	r0, [sp, #4]
90000bae:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000bb2:	f006 ffe5 	bl	90007b80 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000bb6:	9801      	ldr	r0, [sp, #4]
90000bb8:	b120      	cbz	r0, 90000bc4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bba:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bc0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bc2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bc4:	b005      	add	sp, #20
90000bc6:	bd30      	pop	{r4, r5, pc}

90000bc8 <_ZN20STM32TouchControllerD0Ev>:
90000bc8:	b510      	push	{r4, lr}
90000bca:	4604      	mov	r4, r0
90000bcc:	2104      	movs	r1, #4
90000bce:	f029 fa1d 	bl	9002a00c <_ZdlPvj>
90000bd2:	4620      	mov	r0, r4
90000bd4:	bd10      	pop	{r4, pc}
90000bd6:	bf00      	nop

90000bd8 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000bd8:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000bda:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000bdc:	2b03      	cmp	r3, #3
90000bde:	d82b      	bhi.n	90000c38 <_ZN8touchgfx4GPIO4initEv+0x60>
90000be0:	e8df f003 	tbb	[pc, r3]
90000be4:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000be8:	2140      	movs	r1, #64	@ 0x40
90000bea:	4814      	ldr	r0, [pc, #80]	@ (90000c3c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000bec:	f008 fbb4 	bl	90009358 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000bf0:	2801      	cmp	r0, #1
90000bf2:	d101      	bne.n	90000bf8 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000bf4:	4b12      	ldr	r3, [pc, #72]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000bf6:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000bf8:	2304      	movs	r3, #4
90000bfa:	e7ef      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000bfc:	2140      	movs	r1, #64	@ 0x40
90000bfe:	4811      	ldr	r0, [pc, #68]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c00:	f008 fbaa 	bl	90009358 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c04:	2801      	cmp	r0, #1
90000c06:	d101      	bne.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c08:	4b0d      	ldr	r3, [pc, #52]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c0a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c0c:	2303      	movs	r3, #3
90000c0e:	e7e5      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c10:	2180      	movs	r1, #128	@ 0x80
90000c12:	480c      	ldr	r0, [pc, #48]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c14:	f008 fba0 	bl	90009358 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c18:	2801      	cmp	r0, #1
90000c1a:	d101      	bne.n	90000c20 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c1c:	4b08      	ldr	r3, [pc, #32]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c1e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c20:	2302      	movs	r3, #2
90000c22:	e7db      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c24:	2108      	movs	r1, #8
90000c26:	4808      	ldr	r0, [pc, #32]	@ (90000c48 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c28:	f008 fb96 	bl	90009358 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c2c:	2801      	cmp	r0, #1
90000c2e:	d101      	bne.n	90000c34 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c30:	4b03      	ldr	r3, [pc, #12]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c32:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c34:	2301      	movs	r3, #1
90000c36:	e7d1      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c38:	bd08      	pop	{r3, pc}
90000c3a:	bf00      	nop
90000c3c:	58020000 	.word	0x58020000
90000c40:	24000184 	.word	0x24000184
90000c44:	58020400 	.word	0x58020400
90000c48:	58021800 	.word	0x58021800

90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c4c:	2803      	cmp	r0, #3
90000c4e:	d827      	bhi.n	90000ca0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c50:	e8df f000 	tbb	[pc, r0]
90000c54:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c58:	4b12      	ldr	r3, [pc, #72]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c5a:	2140      	movs	r1, #64	@ 0x40
90000c5c:	4812      	ldr	r0, [pc, #72]	@ (90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c5e:	68da      	ldr	r2, [r3, #12]
90000c60:	fab2 f282 	clz	r2, r2
90000c64:	0952      	lsrs	r2, r2, #5
90000c66:	f008 bb7d 	b.w	90009364 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c6a:	4b0e      	ldr	r3, [pc, #56]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c6c:	2140      	movs	r1, #64	@ 0x40
90000c6e:	480f      	ldr	r0, [pc, #60]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c70:	689a      	ldr	r2, [r3, #8]
90000c72:	fab2 f282 	clz	r2, r2
90000c76:	0952      	lsrs	r2, r2, #5
90000c78:	f008 bb74 	b.w	90009364 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000c7c:	4b09      	ldr	r3, [pc, #36]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c7e:	2180      	movs	r1, #128	@ 0x80
90000c80:	480a      	ldr	r0, [pc, #40]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c82:	685a      	ldr	r2, [r3, #4]
90000c84:	fab2 f282 	clz	r2, r2
90000c88:	0952      	lsrs	r2, r2, #5
90000c8a:	f008 bb6b 	b.w	90009364 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c8e:	4b05      	ldr	r3, [pc, #20]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c90:	2108      	movs	r1, #8
90000c92:	4807      	ldr	r0, [pc, #28]	@ (90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000c94:	681a      	ldr	r2, [r3, #0]
90000c96:	fab2 f282 	clz	r2, r2
90000c9a:	0952      	lsrs	r2, r2, #5
90000c9c:	f008 bb62 	b.w	90009364 <HAL_GPIO_WritePin>
}
90000ca0:	4770      	bx	lr
90000ca2:	bf00      	nop
90000ca4:	24000184 	.word	0x24000184
90000ca8:	58020000 	.word	0x58020000
90000cac:	58020400 	.word	0x58020400
90000cb0:	58021800 	.word	0x58021800

90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cb4:	2803      	cmp	r0, #3
90000cb6:	d827      	bhi.n	90000d08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000cb8:	e8df f000 	tbb	[pc, r0]
90000cbc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cc0:	4b12      	ldr	r3, [pc, #72]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cc2:	2140      	movs	r1, #64	@ 0x40
90000cc4:	4812      	ldr	r0, [pc, #72]	@ (90000d10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cc6:	68da      	ldr	r2, [r3, #12]
90000cc8:	3a00      	subs	r2, #0
90000cca:	bf18      	it	ne
90000ccc:	2201      	movne	r2, #1
90000cce:	f008 bb49 	b.w	90009364 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000cd2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cd4:	2140      	movs	r1, #64	@ 0x40
90000cd6:	480f      	ldr	r0, [pc, #60]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cd8:	689a      	ldr	r2, [r3, #8]
90000cda:	3a00      	subs	r2, #0
90000cdc:	bf18      	it	ne
90000cde:	2201      	movne	r2, #1
90000ce0:	f008 bb40 	b.w	90009364 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000ce4:	4b09      	ldr	r3, [pc, #36]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000ce6:	2180      	movs	r1, #128	@ 0x80
90000ce8:	480a      	ldr	r0, [pc, #40]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cea:	685a      	ldr	r2, [r3, #4]
90000cec:	3a00      	subs	r2, #0
90000cee:	bf18      	it	ne
90000cf0:	2201      	movne	r2, #1
90000cf2:	f008 bb37 	b.w	90009364 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000cf6:	4b05      	ldr	r3, [pc, #20]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf8:	2108      	movs	r1, #8
90000cfa:	4807      	ldr	r0, [pc, #28]	@ (90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000cfc:	681a      	ldr	r2, [r3, #0]
90000cfe:	3a00      	subs	r2, #0
90000d00:	bf18      	it	ne
90000d02:	2201      	movne	r2, #1
90000d04:	f008 bb2e 	b.w	90009364 <HAL_GPIO_WritePin>
}
90000d08:	4770      	bx	lr
90000d0a:	bf00      	nop
90000d0c:	24000184 	.word	0x24000184
90000d10:	58020000 	.word	0x58020000
90000d14:	58020400 	.word	0x58020400
90000d18:	58021800 	.word	0x58021800

90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d1c:	2803      	cmp	r0, #3
90000d1e:	d813      	bhi.n	90000d48 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d20:	e8df f000 	tbb	[pc, r0]
90000d24:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d28:	2140      	movs	r1, #64	@ 0x40
90000d2a:	4808      	ldr	r0, [pc, #32]	@ (90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d2c:	f008 bb1e 	b.w	9000936c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d30:	2140      	movs	r1, #64	@ 0x40
90000d32:	4807      	ldr	r0, [pc, #28]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d34:	f008 bb1a 	b.w	9000936c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d38:	2180      	movs	r1, #128	@ 0x80
90000d3a:	4805      	ldr	r0, [pc, #20]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d3c:	f008 bb16 	b.w	9000936c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d40:	2108      	movs	r1, #8
90000d42:	4804      	ldr	r0, [pc, #16]	@ (90000d54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d44:	f008 bb12 	b.w	9000936c <HAL_GPIO_TogglePin>
}
90000d48:	4770      	bx	lr
90000d4a:	bf00      	nop
90000d4c:	58020000 	.word	0x58020000
90000d50:	58020400 	.word	0x58020400
90000d54:	58021800 	.word	0x58021800

90000d58 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d58:	2000      	movs	r0, #0
90000d5a:	4770      	bx	lr

90000d5c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d5c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d5e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d62:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d66:	4770      	bx	lr

90000d68 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d6c:	1e0a      	subs	r2, r1, #0
90000d6e:	4b03      	ldr	r3, [pc, #12]	@ (90000d7c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d70:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d72:	bf18      	it	ne
90000d74:	2201      	movne	r2, #1
90000d76:	701a      	strb	r2, [r3, #0]
    }
90000d78:	4770      	bx	lr
90000d7a:	bf00      	nop
90000d7c:	2402340b 	.word	0x2402340b

90000d80 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d80:	2000      	movs	r0, #0
90000d82:	4770      	bx	lr

90000d84 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d84:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d86:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d88:	b103      	cbz	r3, 90000d8c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d8a:	4718      	bx	r3
        }
    }
90000d8c:	4770      	bx	lr
90000d8e:	bf00      	nop

90000d90 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d90:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000d94:	4770      	bx	lr
90000d96:	bf00      	nop

90000d98 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d98:	4770      	bx	lr
90000d9a:	bf00      	nop

90000d9c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d9c:	b510      	push	{r4, lr}
90000d9e:	4604      	mov	r4, r0
        swapFrameBuffers();
90000da0:	f012 f8da 	bl	90012f58 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000da4:	6823      	ldr	r3, [r4, #0]
90000da6:	4620      	mov	r0, r4
90000da8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000db0:	4718      	bx	r3
90000db2:	bf00      	nop

90000db4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000db4:	f002 b85e 	b.w	90002e74 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000db8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000db8:	f002 b862 	b.w	90002e80 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dbc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dbc:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dbe:	f002 f8fd 	bl	90002fbc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dc2:	4812      	ldr	r0, [pc, #72]	@ (90000e0c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dc4:	2300      	movs	r3, #0
90000dc6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dca:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dce:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dd2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000dd6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dda:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dde:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000de6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dec:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dee:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000df2:	1c5a      	adds	r2, r3, #1
90000df4:	d1f8      	bne.n	90000de8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000df6:	f1ac 0c20 	sub.w	ip, ip, #32
90000dfa:	f11c 0f20 	cmn.w	ip, #32
90000dfe:	d1f0      	bne.n	90000de2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e04:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e08:	bd10      	pop	{r4, pc}
90000e0a:	bf00      	nop
90000e0c:	e000ed00 	.word	0xe000ed00

90000e10 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e10:	f002 b80c 	b.w	90002e2c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e14 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e14:	f002 b954 	b.w	900030c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e18 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e18:	f002 b93e 	b.w	90003098 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e1c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e1c:	f002 b810 	b.w	90002e40 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e20:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e22:	4b09      	ldr	r3, [pc, #36]	@ (90000e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e24:	881b      	ldrh	r3, [r3, #0]
90000e26:	428b      	cmp	r3, r1
90000e28:	d808      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e2a:	4b08      	ldr	r3, [pc, #32]	@ (90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e2c:	881b      	ldrh	r3, [r3, #0]
90000e2e:	4293      	cmp	r3, r2
90000e30:	d804      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e32:	4807      	ldr	r0, [pc, #28]	@ (90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e34:	4b07      	ldr	r3, [pc, #28]	@ (90000e54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e36:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e38:	801a      	strh	r2, [r3, #0]
    }
90000e3a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e3c:	4b06      	ldr	r3, [pc, #24]	@ (90000e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e3e:	219e      	movs	r1, #158	@ 0x9e
90000e40:	4a06      	ldr	r2, [pc, #24]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e42:	4807      	ldr	r0, [pc, #28]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e44:	f029 fc5c 	bl	9002a700 <__assert_func>
90000e48:	24023400 	.word	0x24023400
90000e4c:	24023402 	.word	0x24023402
90000e50:	24023406 	.word	0x24023406
90000e54:	24023408 	.word	0x24023408
90000e58:	9002b940 	.word	0x9002b940
90000e5c:	9002b9a4 	.word	0x9002b9a4
90000e60:	9002b9e8 	.word	0x9002b9e8

90000e64 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e64:	f011 bbf4 	b.w	90012650 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e68 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e68:	f011 bac8 	b.w	900123fc <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e6c <_ZN11TouchGFXHALD0Ev>:
90000e6c:	b510      	push	{r4, lr}
90000e6e:	4604      	mov	r4, r0
90000e70:	2188      	movs	r1, #136	@ 0x88
90000e72:	f029 f8cb 	bl	9002a00c <_ZdlPvj>
90000e76:	4620      	mov	r0, r4
90000e78:	bd10      	pop	{r4, pc}
90000e7a:	bf00      	nop

90000e7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e7c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e80:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000e84:	4b0b      	ldr	r3, [pc, #44]	@ (90000eb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e86:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e88:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e8a:	d00b      	beq.n	90000ea4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e8c:	b94a      	cbnz	r2, 90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e8e:	4a0a      	ldr	r2, [pc, #40]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000e90:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e94:	4909      	ldr	r1, [pc, #36]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e96:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000e98:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e9c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e9e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea0:	8013      	strh	r3, [r2, #0]
        }
    }
90000ea2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000ea4:	2a00      	cmp	r2, #0
90000ea6:	d0fc      	beq.n	90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ea8:	4a03      	ldr	r2, [pc, #12]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eaa:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eae:	4903      	ldr	r1, [pc, #12]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000eb0:	e7f1      	b.n	90000e96 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000eb2:	bf00      	nop
90000eb4:	24023404 	.word	0x24023404
90000eb8:	24023402 	.word	0x24023402
90000ebc:	24023400 	.word	0x24023400

90000ec0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ec0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ec2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ec6:	b118      	cbz	r0, 90000ed0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ec8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eca:	6803      	ldr	r3, [r0, #0]
90000ecc:	681b      	ldr	r3, [r3, #0]
90000ece:	4718      	bx	r3
    }
90000ed0:	4770      	bx	lr
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ed4:	6840      	ldr	r0, [r0, #4]
90000ed6:	4a04      	ldr	r2, [pc, #16]	@ (90000ee8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ed8:	6803      	ldr	r3, [r0, #0]
90000eda:	699b      	ldr	r3, [r3, #24]
90000edc:	4293      	cmp	r3, r2
90000ede:	d101      	bne.n	90000ee4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ee0:	2000      	movs	r0, #0
90000ee2:	4770      	bx	lr
        return dma.getDMAType();
90000ee4:	4718      	bx	r3
90000ee6:	bf00      	nop
90000ee8:	90000d59 	.word	0x90000d59

90000eec <_ZN11TouchGFXHAL10initializeEv>:
{
90000eec:	b538      	push	{r3, r4, r5, lr}
90000eee:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000ef0:	f002 fa68 	bl	900033c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000ef4:	4a0b      	ldr	r2, [pc, #44]	@ (90000f24 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000ef6:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ef8:	490b      	ldr	r1, [pc, #44]	@ (90000f28 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000efa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000efe:	4293      	cmp	r3, r2
90000f00:	d10d      	bne.n	90000f1e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f02:	4b0a      	ldr	r3, [pc, #40]	@ (90000f2c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f04:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f06:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f08:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f0a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f0e:	4628      	mov	r0, r5
90000f10:	f7ff fdde 	bl	90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f14:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f16:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f18:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f1c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f1e:	4620      	mov	r0, r4
90000f20:	4798      	blx	r3
90000f22:	e7f2      	b.n	90000f0a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f24:	90000d6d 	.word	0x90000d6d
90000f28:	d0000000 	.word	0xd0000000
90000f2c:	2402340b 	.word	0x2402340b

90000f30 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f30:	b1a9      	cbz	r1, 90000f5e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f32:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f34:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f36:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f38:	bf18      	it	ne
90000f3a:	2201      	movne	r2, #1
90000f3c:	490c      	ldr	r1, [pc, #48]	@ (90000f70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f3e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f40:	6802      	ldr	r2, [r0, #0]
90000f42:	490c      	ldr	r1, [pc, #48]	@ (90000f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f44:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f48:	428a      	cmp	r2, r1
90000f4a:	d106      	bne.n	90000f5a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f4c:	1e19      	subs	r1, r3, #0
90000f4e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f52:	bf18      	it	ne
90000f54:	2101      	movne	r1, #1
90000f56:	7011      	strb	r1, [r2, #0]
90000f58:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f5a:	4619      	mov	r1, r3
90000f5c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f5e:	4b07      	ldr	r3, [pc, #28]	@ (90000f7c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f60:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f64:	4a06      	ldr	r2, [pc, #24]	@ (90000f80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f66:	4807      	ldr	r0, [pc, #28]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f68:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f6a:	f029 fbc9 	bl	9002a700 <__assert_func>
90000f6e:	bf00      	nop
90000f70:	2402340a 	.word	0x2402340a
90000f74:	90000d6d 	.word	0x90000d6d
90000f78:	2402340b 	.word	0x2402340b
90000f7c:	9002ba30 	.word	0x9002ba30
90000f80:	9002ba68 	.word	0x9002ba68
90000f84:	9002b9e8 	.word	0x9002b9e8

90000f88 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f88:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f8a:	6803      	ldr	r3, [r0, #0]
{
90000f8c:	4604      	mov	r4, r0
90000f8e:	4d17      	ldr	r5, [pc, #92]	@ (90000fec <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000f90:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000f94:	4798      	blx	r3
    enableInterrupts();
90000f96:	6823      	ldr	r3, [r4, #0]
90000f98:	4620      	mov	r0, r4
90000f9a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000f9c:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000f9e:	f001 f9f5 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fa2:	6823      	ldr	r3, [r4, #0]
90000fa4:	4620      	mov	r0, r4
90000fa6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fa8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
90000faa:	2201      	movs	r2, #1
90000fac:	2104      	movs	r1, #4
90000fae:	4810      	ldr	r0, [pc, #64]	@ (90000ff0 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000fb0:	f008 f9d8 	bl	90009364 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000fb4:	2201      	movs	r2, #1
90000fb6:	2180      	movs	r1, #128	@ 0x80
90000fb8:	480e      	ldr	r0, [pc, #56]	@ (90000ff4 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
90000fba:	f008 f9d3 	bl	90009364 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fbe:	2201      	movs	r2, #1
90000fc0:	480d      	ldr	r0, [pc, #52]	@ (90000ff8 <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000fc2:	4611      	mov	r1, r2
90000fc4:	f008 f9ce 	bl	90009364 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fc8:	f001 f9e0 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fcc:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fce:	4620      	mov	r0, r4
90000fd0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fd2:	42ab      	cmp	r3, r5
90000fd4:	d107      	bne.n	90000fe6 <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
90000fd6:	f011 ffbf 	bl	90012f58 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fda:	6823      	ldr	r3, [r4, #0]
90000fdc:	4620      	mov	r0, r4
90000fde:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90000fe2:	4798      	blx	r3
    }
90000fe4:	e7f0      	b.n	90000fc8 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90000fe6:	4798      	blx	r3
90000fe8:	e7ee      	b.n	90000fc8 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90000fea:	bf00      	nop
90000fec:	90000d9d 	.word	0x90000d9d
90000ff0:	58020000 	.word	0x58020000
90000ff4:	58020c00 	.word	0x58020c00
90000ff8:	58022800 	.word	0x58022800

90000ffc <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000ffc:	4601      	mov	r1, r0
    {
90000ffe:	b508      	push	{r3, lr}
        return instance;
90001000:	4b05      	ldr	r3, [pc, #20]	@ (90001018 <IdleTaskHook+0x1c>)
90001002:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90001004:	b121      	cbz	r1, 90001010 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90001006:	2101      	movs	r1, #1
90001008:	f011 ffc0 	bl	90012f8c <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
9000100c:	2001      	movs	r0, #1
9000100e:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001010:	f011 ffbc 	bl	90012f8c <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001014:	2001      	movs	r0, #1
90001016:	bd08      	pop	{r3, pc}
90001018:	2402340c 	.word	0x2402340c

9000101c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000101c:	6940      	ldr	r0, [r0, #20]
9000101e:	4770      	bx	lr

90001020 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001020:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001024:	4770      	bx	lr
90001026:	bf00      	nop

90001028 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001028:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000102a:	b10b      	cbz	r3, 90001030 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000102c:	2001      	movs	r0, #1
}
9000102e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001030:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001032:	3800      	subs	r0, #0
90001034:	bf18      	it	ne
90001036:	2001      	movne	r0, #1
90001038:	4770      	bx	lr
9000103a:	bf00      	nop

9000103c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000103c:	6880      	ldr	r0, [r0, #8]
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001040:	4770      	bx	lr
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001044:	3004      	adds	r0, #4
{
90001046:	468c      	mov	ip, r1
    *data = videoInfo;
90001048:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000104a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000104e:	4770      	bx	lr

90001050 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001050:	4770      	bx	lr
90001052:	bf00      	nop

90001054 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001054:	b508      	push	{r3, lr}
    assert(0);
90001056:	4a03      	ldr	r2, [pc, #12]	@ (90001064 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001058:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
9000105c:	4b02      	ldr	r3, [pc, #8]	@ (90001068 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000105e:	4803      	ldr	r0, [pc, #12]	@ (9000106c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001060:	f029 fb4e 	bl	9002a700 <__assert_func>
90001064:	9002bb94 	.word	0x9002bb94
90001068:	9002bb90 	.word	0x9002bb90
9000106c:	9002bbf0 	.word	0x9002bbf0

90001070 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001070:	b510      	push	{r4, lr}
90001072:	4604      	mov	r4, r0
90001074:	2148      	movs	r1, #72	@ 0x48
90001076:	f028 ffc9 	bl	9002a00c <_ZdlPvj>
9000107a:	4620      	mov	r0, r4
9000107c:	bd10      	pop	{r4, pc}
9000107e:	bf00      	nop

90001080 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001082:	6803      	ldr	r3, [r0, #0]
90001084:	2901      	cmp	r1, #1
90001086:	4d30      	ldr	r5, [pc, #192]	@ (90001148 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001088:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000108a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000108c:	bf38      	it	cc
9000108e:	2101      	movcc	r1, #1
90001090:	42ab      	cmp	r3, r5
90001092:	460e      	mov	r6, r1
90001094:	d13f      	bne.n	90001116 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001096:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001098:	42a9      	cmp	r1, r5
9000109a:	d947      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000109c:	1e6b      	subs	r3, r5, #1
9000109e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a2:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010a6:	b338      	cbz	r0, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010a8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010aa:	2b0f      	cmp	r3, #15
900010ac:	d940      	bls.n	90001130 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010ae:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010b0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010b4:	68db      	ldr	r3, [r3, #12]
900010b6:	4631      	mov	r1, r6
900010b8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010ba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010bc:	2210      	movs	r2, #16
900010be:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010c0:	6803      	ldr	r3, [r0, #0]
900010c2:	691b      	ldr	r3, [r3, #16]
900010c4:	4798      	blx	r3
900010c6:	b198      	cbz	r0, 900010f0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010c8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ca:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010cc:	b1a3      	cbz	r3, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010ce:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010d0:	7a93      	ldrb	r3, [r2, #10]
900010d2:	7a51      	ldrb	r1, [r2, #9]
900010d4:	041b      	lsls	r3, r3, #16
900010d6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010da:	7a11      	ldrb	r1, [r2, #8]
900010dc:	7ad2      	ldrb	r2, [r2, #11]
900010de:	430b      	orrs	r3, r1
900010e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010e6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	3a04      	subs	r2, #4
900010ea:	441a      	add	r2, r3
900010ec:	61a2      	str	r2, [r4, #24]
}
900010ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010f0:	230d      	movs	r3, #13
900010f2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010f6:	e7e7      	b.n	900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010f8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010fc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010fe:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001100:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
90001102:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001104:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001106:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001108:	041b      	lsls	r3, r3, #16
9000110a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000110e:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001110:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001114:	e7e6      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001116:	4798      	blx	r3
90001118:	4286      	cmp	r6, r0
9000111a:	d907      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000111c:	6823      	ldr	r3, [r4, #0]
9000111e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001120:	42ab      	cmp	r3, r5
90001122:	d00e      	beq.n	90001142 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001124:	4620      	mov	r0, r4
90001126:	4798      	blx	r3
90001128:	4605      	mov	r5, r0
9000112a:	e7b7      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000112c:	4635      	mov	r5, r6
9000112e:	e7b5      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001130:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001132:	4b06      	ldr	r3, [pc, #24]	@ (9000114c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001134:	4a06      	ldr	r2, [pc, #24]	@ (90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001136:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001138:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000113c:	4805      	ldr	r0, [pc, #20]	@ (90001154 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000113e:	f029 fadf 	bl	9002a700 <__assert_func>
    return videoInfo.number_of_frames;
90001142:	68a5      	ldr	r5, [r4, #8]
90001144:	e7aa      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001146:	bf00      	nop
90001148:	9000103d 	.word	0x9000103d
9000114c:	9002bc5c 	.word	0x9002bc5c
90001150:	9002bc70 	.word	0x9002bc70
90001154:	9002bbf0 	.word	0x9002bbf0

90001158 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001158:	6943      	ldr	r3, [r0, #20]
{
9000115a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000115e:	2b00      	cmp	r3, #0
90001160:	f000 80c1 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001164:	4605      	mov	r5, r0
    if (reader != 0)
90001166:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001168:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000116a:	2800      	cmp	r0, #0
9000116c:	f000 80a1 	beq.w	900012b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001170:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001172:	2b07      	cmp	r3, #7
90001174:	f240 80ac 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001178:	6803      	ldr	r3, [r0, #0]
9000117a:	4621      	mov	r1, r4
9000117c:	68db      	ldr	r3, [r3, #12]
9000117e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001180:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001182:	2208      	movs	r2, #8
90001184:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001186:	6803      	ldr	r3, [r0, #0]
90001188:	691b      	ldr	r3, [r3, #16]
9000118a:	4798      	blx	r3
9000118c:	2800      	cmp	r0, #0
9000118e:	f000 808c 	beq.w	900012aa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001192:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001194:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001196:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001198:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000119a:	2800      	cmp	r0, #0
9000119c:	f000 808b 	beq.w	900012b6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011a0:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a2:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011a4:	18a1      	adds	r1, r4, r2
900011a6:	5ca2      	ldrb	r2, [r4, r2]
900011a8:	788c      	ldrb	r4, [r1, #2]
900011aa:	784e      	ldrb	r6, [r1, #1]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011b2:	4314      	orrs	r4, r2
900011b4:	78ca      	ldrb	r2, [r1, #3]
900011b6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011ba:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011bc:	f243 0630 	movw	r6, #12336	@ 0x3030
900011c0:	e03a      	b.n	90001238 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011c2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011c4:	2b07      	cmp	r3, #7
900011c6:	f240 8083 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ca:	6803      	ldr	r3, [r0, #0]
900011cc:	4621      	mov	r1, r4
900011ce:	68db      	ldr	r3, [r3, #12]
900011d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011d4:	2208      	movs	r2, #8
900011d6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011d8:	6803      	ldr	r3, [r0, #0]
900011da:	691b      	ldr	r3, [r3, #16]
900011dc:	4798      	blx	r3
900011de:	b908      	cbnz	r0, 900011e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011e0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011e4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011e6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011e8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ea:	2800      	cmp	r0, #0
900011ec:	d079      	beq.n	900012e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011ee:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011f2:	18ca      	adds	r2, r1, r3
900011f4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f6:	7994      	ldrb	r4, [r2, #6]
900011f8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011fc:	0424      	lsls	r4, r4, #16
900011fe:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001202:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001206:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000120a:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000120c:	f892 8003 	ldrb.w	r8, [r2, #3]
90001210:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001214:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001218:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000121c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001220:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001224:	f246 3164 	movw	r1, #25444	@ 0x6364
90001228:	42b3      	cmp	r3, r6
9000122a:	bf08      	it	eq
9000122c:	428a      	cmpeq	r2, r1
9000122e:	bf0c      	ite	eq
90001230:	2301      	moveq	r3, #1
90001232:	2300      	movne	r3, #0
90001234:	d036      	beq.n	900012a4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001236:	69ab      	ldr	r3, [r5, #24]
90001238:	441c      	add	r4, r3
9000123a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000123c:	f104 0208 	add.w	r2, r4, #8
90001240:	429a      	cmp	r2, r3
90001242:	d22a      	bcs.n	9000129a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001244:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001246:	3409      	adds	r4, #9
        frameNumber++;
90001248:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000124a:	f024 0401 	bic.w	r4, r4, #1
9000124e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001252:	2800      	cmp	r0, #0
90001254:	d1b5      	bne.n	900011c2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001256:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001258:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000125a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000125e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001262:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001264:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001268:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000126c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001270:	188c      	adds	r4, r1, r2
        val |= d[0];
90001272:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001274:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001276:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000127a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000127e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001282:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001286:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000128a:	0424      	lsls	r4, r4, #16
9000128c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001290:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001294:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001298:	e7c4      	b.n	90001224 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000129a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000129c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000129e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012a0:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012a4:	4618      	mov	r0, r3
900012a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012aa:	230d      	movs	r3, #13
900012ac:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012b0:	e76f      	b.n	90001192 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012b2:	1d22      	adds	r2, r4, #4
900012b4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012b6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012b8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012ba:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012bc:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012be:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012c0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012c2:	0424      	lsls	r4, r4, #16
900012c4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012c8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ca:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012ce:	e774      	b.n	900011ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012d2:	4b08      	ldr	r3, [pc, #32]	@ (900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012d4:	4a08      	ldr	r2, [pc, #32]	@ (900012f8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012d6:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012dc:	4807      	ldr	r0, [pc, #28]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012de:	f029 fa0f 	bl	9002a700 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900012e2:	461c      	mov	r4, r3
900012e4:	e7b7      	b.n	90001256 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012e6:	4b06      	ldr	r3, [pc, #24]	@ (90001300 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012e8:	21f6      	movs	r1, #246	@ 0xf6
900012ea:	4a06      	ldr	r2, [pc, #24]	@ (90001304 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012ec:	4803      	ldr	r0, [pc, #12]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ee:	f029 fa07 	bl	9002a700 <__assert_func>
900012f2:	bf00      	nop
900012f4:	9002bc5c 	.word	0x9002bc5c
900012f8:	9002bc70 	.word	0x9002bc70
900012fc:	9002bbf0 	.word	0x9002bbf0
90001300:	9002bcb4 	.word	0x9002bcb4
90001304:	9002bd00 	.word	0x9002bd00

90001308 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001308:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130a:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000130c:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000130e:	4b0e      	ldr	r3, [pc, #56]	@ (90001348 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001310:	2001      	movs	r0, #1
90001312:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001314:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001316:	6023      	str	r3, [r4, #0]
90001318:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000131c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001320:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001324:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001328:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000132c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001330:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001334:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001338:	f00d ff2c 	bl	9000f194 <osSemaphoreNew>
9000133c:	4b03      	ldr	r3, [pc, #12]	@ (9000134c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000133e:	4602      	mov	r2, r0
}
90001340:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001342:	601a      	str	r2, [r3, #0]
}
90001344:	bd10      	pop	{r4, pc}
90001346:	bf00      	nop
90001348:	9002be58 	.word	0x9002be58
9000134c:	240001dc 	.word	0x240001dc

90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001350:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001354:	2100      	movs	r1, #0
    if (reader != 0)
90001356:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001358:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000135a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000135c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001360:	2e00      	cmp	r6, #0
90001362:	f000 81b3 	beq.w	900016cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001366:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001368:	2b47      	cmp	r3, #71	@ 0x47
9000136a:	f240 8270 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000136e:	6833      	ldr	r3, [r6, #0]
90001370:	4630      	mov	r0, r6
90001372:	68db      	ldr	r3, [r3, #12]
90001374:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001376:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001378:	2248      	movs	r2, #72	@ 0x48
9000137a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000137c:	6803      	ldr	r3, [r0, #0]
9000137e:	691b      	ldr	r3, [r3, #16]
90001380:	4798      	blx	r3
90001382:	2800      	cmp	r0, #0
90001384:	f000 80b7 	beq.w	900014f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001388:	2300      	movs	r3, #0
    if (reader != 0)
9000138a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000138c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000138e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001390:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001392:	2e00      	cmp	r6, #0
90001394:	f000 819b 	beq.w	900016ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001398:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000139c:	2204      	movs	r2, #4
9000139e:	49c3      	ldr	r1, [pc, #780]	@ (900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013a0:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013a4:	4620      	mov	r0, r4
900013a6:	f029 fcc3 	bl	9002ad30 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013aa:	2800      	cmp	r0, #0
900013ac:	f040 825f 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013b0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013b4:	2204      	movs	r2, #4
900013b6:	49be      	ldr	r1, [pc, #760]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013b8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013ba:	4448      	add	r0, r9
900013bc:	f029 fcb8 	bl	9002ad30 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013c0:	2800      	cmp	r0, #0
900013c2:	f040 8268 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013c6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ca:	2204      	movs	r2, #4
900013cc:	49b9      	ldr	r1, [pc, #740]	@ (900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013ce:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013d2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013d6:	f029 fcab 	bl	9002ad30 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013da:	4680      	mov	r8, r0
900013dc:	2800      	cmp	r0, #0
900013de:	f040 8250 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e2:	7ca3      	ldrb	r3, [r4, #18]
900013e4:	7c62      	ldrb	r2, [r4, #17]
900013e6:	041b      	lsls	r3, r3, #16
900013e8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013ec:	7c22      	ldrb	r2, [r4, #16]
900013ee:	4313      	orrs	r3, r2
900013f0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013f2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013f6:	f000 8233 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013fa:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013fe:	2204      	movs	r2, #4
90001400:	49ad      	ldr	r1, [pc, #692]	@ (900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90001402:	4448      	add	r0, r9
90001404:	f029 fc94 	bl	9002ad30 <strncmp>
    if (compare(offset, "hdrl", 4))
90001408:	2800      	cmp	r0, #0
9000140a:	d078      	beq.n	900014fe <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000140c:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000140e:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001412:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001416:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001418:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000141a:	2204      	movs	r2, #4
9000141c:	49a7      	ldr	r1, [pc, #668]	@ (900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000141e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001420:	f029 fc86 	bl	9002ad30 <strncmp>
    if (compare(offset, "avih", 4))
90001424:	2800      	cmp	r0, #0
90001426:	f000 80e6 	beq.w	900015f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000142a:	2307      	movs	r3, #7
9000142c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001430:	f1ba 0f00 	cmp.w	sl, #0
90001434:	f000 8190 	beq.w	90001758 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001438:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000143a:	2b0b      	cmp	r3, #11
9000143c:	f240 8207 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001440:	f8da 3000 	ldr.w	r3, [sl]
90001444:	4621      	mov	r1, r4
90001446:	4650      	mov	r0, sl
90001448:	68db      	ldr	r3, [r3, #12]
9000144a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000144c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000144e:	220c      	movs	r2, #12
90001450:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001452:	6803      	ldr	r3, [r0, #0]
90001454:	691b      	ldr	r3, [r3, #16]
90001456:	4798      	blx	r3
90001458:	2800      	cmp	r0, #0
9000145a:	f000 8121 	beq.w	900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000145e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001462:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001464:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001466:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000146a:	f04f 090d 	mov.w	r9, #13
9000146e:	e003      	b.n	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001470:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001474:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001476:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001478:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000147c:	2e00      	cmp	r6, #0
9000147e:	d052      	beq.n	90001526 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001480:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001484:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001486:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001488:	1afb      	subs	r3, r7, r3
9000148a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000148c:	f029 fc50 	bl	9002ad30 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001490:	2800      	cmp	r0, #0
90001492:	d051      	beq.n	90001538 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001494:	f1ba 0f00 	cmp.w	sl, #0
90001498:	f040 80a8 	bne.w	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000149c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000149e:	42a3      	cmp	r3, r4
900014a0:	d94d      	bls.n	9000153e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014a2:	3404      	adds	r4, #4
    if (reader != 0)
900014a4:	b386      	cbz	r6, 90001508 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014a6:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014a8:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014ac:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014ae:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014b0:	eb01 0204 	add.w	r2, r1, r4
900014b4:	5d09      	ldrb	r1, [r1, r4]
900014b6:	7894      	ldrb	r4, [r2, #2]
900014b8:	7850      	ldrb	r0, [r2, #1]
900014ba:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014be:	78d2      	ldrb	r2, [r2, #3]
900014c0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014c4:	ea44 0401 	orr.w	r4, r4, r1
900014c8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014cc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014ce:	f240 81be 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014d2:	6833      	ldr	r3, [r6, #0]
900014d4:	4621      	mov	r1, r4
900014d6:	4630      	mov	r0, r6
900014d8:	68db      	ldr	r3, [r3, #12]
900014da:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014de:	220c      	movs	r2, #12
900014e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014e2:	6803      	ldr	r3, [r0, #0]
900014e4:	691b      	ldr	r3, [r3, #16]
900014e6:	4798      	blx	r3
900014e8:	2800      	cmp	r0, #0
900014ea:	d1c1      	bne.n	90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014ec:	f04f 0a0d 	mov.w	sl, #13
900014f0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014f4:	e7be      	b.n	90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014f6:	230d      	movs	r3, #13
900014f8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014fc:	e744      	b.n	90001388 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014fe:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001502:	f04f 0801 	mov.w	r8, #1
90001506:	e786      	b.n	90001416 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001508:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
9000150a:	1913      	adds	r3, r2, r4
        val |= d[0];
9000150c:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
9000150e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001510:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001512:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001514:	0424      	lsls	r4, r4, #16
90001516:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000151a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000151c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001520:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001522:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001526:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001528:	2204      	movs	r2, #4
9000152a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000152c:	2600      	movs	r6, #0
9000152e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001530:	f029 fbfe 	bl	9002ad30 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001534:	2800      	cmp	r0, #0
90001536:	d1ad      	bne.n	90001494 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001538:	f1ba 0f00 	cmp.w	sl, #0
9000153c:	d156      	bne.n	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000153e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001542:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001544:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001546:	2e00      	cmp	r6, #0
90001548:	f000 8118 	beq.w	9000177c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000154c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000154e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001550:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001554:	f104 0e02 	add.w	lr, r4, #2
90001558:	f104 0c01 	add.w	ip, r4, #1
9000155c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001560:	1ce0      	adds	r0, r4, #3
90001562:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001566:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001568:	f811 900c 	ldrb.w	r9, [r1, ip]
9000156c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001570:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001574:	ea43 0308 	orr.w	r3, r3, r8
90001578:	f811 8000 	ldrb.w	r8, [r1, r0]
9000157c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001580:	443b      	add	r3, r7
90001582:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001584:	f811 300e 	ldrb.w	r3, [r1, lr]
90001588:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000158c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001590:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001594:	5c09      	ldrb	r1, [r1, r0]
90001596:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000159a:	ea44 040c 	orr.w	r4, r4, ip
9000159e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015a2:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015a4:	f240 8153 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015a8:	6833      	ldr	r3, [r6, #0]
900015aa:	4621      	mov	r1, r4
900015ac:	4630      	mov	r0, r6
900015ae:	68db      	ldr	r3, [r3, #12]
900015b0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015b2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015b4:	2204      	movs	r2, #4
900015b6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015b8:	6803      	ldr	r3, [r0, #0]
900015ba:	691b      	ldr	r3, [r3, #16]
900015bc:	4798      	blx	r3
900015be:	2800      	cmp	r0, #0
900015c0:	f000 80cd 	beq.w	9000175e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015c4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015c6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015c8:	2b00      	cmp	r3, #0
900015ca:	f000 816e 	beq.w	900018aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015ce:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015d0:	2204      	movs	r2, #4
900015d2:	493b      	ldr	r1, [pc, #236]	@ (900016c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015d4:	f029 fbac 	bl	9002ad30 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015d8:	2800      	cmp	r0, #0
900015da:	f040 80ca 	bne.w	90001772 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015de:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015e0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015e2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015e4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015e6:	622b      	str	r3, [r5, #32]
}
900015e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015ec:	230a      	movs	r3, #10
900015ee:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015f6:	f1b8 0f00 	cmp.w	r8, #0
900015fa:	f43f af19 	beq.w	90001430 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015fe:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
90001602:	f1ba 0f00 	cmp.w	sl, #0
90001606:	f000 80d4 	beq.w	900017b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
9000160a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000160c:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001612:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001614:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001618:	f812 8001 	ldrb.w	r8, [r2, r1]
9000161c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001620:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001624:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001628:	4438      	add	r0, r7
9000162a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000162c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001630:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001632:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001636:	041b      	lsls	r3, r3, #16
90001638:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000163c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001640:	ea43 0308 	orr.w	r3, r3, r8
90001644:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001648:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000164a:	fbac c303 	umull	ip, r3, ip, r3
9000164e:	099b      	lsrs	r3, r3, #6
90001650:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001652:	78bb      	ldrb	r3, [r7, #2]
90001654:	f897 e001 	ldrb.w	lr, [r7, #1]
90001658:	041b      	lsls	r3, r3, #16
9000165a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000165e:	78ff      	ldrb	r7, [r7, #3]
90001660:	1850      	adds	r0, r2, r1
90001662:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001666:	ea43 030c 	orr.w	r3, r3, ip
9000166a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000166e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001670:	7883      	ldrb	r3, [r0, #2]
90001672:	7847      	ldrb	r7, [r0, #1]
90001674:	041b      	lsls	r3, r3, #16
90001676:	5c51      	ldrb	r1, [r2, r1]
90001678:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000167c:	430b      	orrs	r3, r1
9000167e:	78c1      	ldrb	r1, [r0, #3]
90001680:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001684:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001686:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001688:	788b      	ldrb	r3, [r1, #2]
9000168a:	7848      	ldrb	r0, [r1, #1]
9000168c:	041b      	lsls	r3, r3, #16
9000168e:	5d92      	ldrb	r2, [r2, r6]
90001690:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001694:	4313      	orrs	r3, r2
90001696:	78ca      	ldrb	r2, [r1, #3]
90001698:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000169c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000169e:	e6cb      	b.n	90001438 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016a0:	230d      	movs	r3, #13
900016a2:	469a      	mov	sl, r3
900016a4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016a8:	e6db      	b.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016aa:	bf00      	nop
900016ac:	9002bd34 	.word	0x9002bd34
900016b0:	9002bdec 	.word	0x9002bdec
900016b4:	9002bde4 	.word	0x9002bde4
900016b8:	9002bdb8 	.word	0x9002bdb8
900016bc:	9002bdcc 	.word	0x9002bdcc
900016c0:	9002bddc 	.word	0x9002bddc
900016c4:	9002bdd4 	.word	0x9002bdd4
900016c8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016cc:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016ce:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016d2:	2204      	movs	r2, #4
900016d4:	4976      	ldr	r1, [pc, #472]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016d6:	eb09 0007 	add.w	r0, r9, r7
900016da:	f029 fb29 	bl	9002ad30 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016de:	2800      	cmp	r0, #0
900016e0:	f040 80c5 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016e4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016e8:	2204      	movs	r2, #4
900016ea:	4972      	ldr	r1, [pc, #456]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016ec:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016ee:	4448      	add	r0, r9
900016f0:	f029 fb1e 	bl	9002ad30 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016f4:	2800      	cmp	r0, #0
900016f6:	f040 80ce 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016fa:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016fe:	2204      	movs	r2, #4
90001700:	496d      	ldr	r1, [pc, #436]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90001702:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
90001706:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000170a:	f029 fb11 	bl	9002ad30 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000170e:	4680      	mov	r8, r0
90001710:	2800      	cmp	r0, #0
90001712:	f040 80b6 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001716:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000171a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000171e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001722:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001724:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001726:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001728:	0424      	lsls	r4, r4, #16
9000172a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000172e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001730:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001734:	f000 8094 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001738:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000173c:	2204      	movs	r2, #4
9000173e:	495f      	ldr	r1, [pc, #380]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001740:	4448      	add	r0, r9
90001742:	f029 faf5 	bl	9002ad30 <strncmp>
    if (compare(offset, "hdrl", 4))
90001746:	b970      	cbnz	r0, 90001766 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001748:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000174c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001750:	4448      	add	r0, r9
90001752:	f04f 0a00 	mov.w	sl, #0
90001756:	e65f      	b.n	90001418 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001758:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000175c:	e683      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000175e:	230d      	movs	r3, #13
90001760:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001764:	e72e      	b.n	900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001766:	2306      	movs	r3, #6
    offset += 4;
90001768:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000176c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001770:	e7ee      	b.n	90001750 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001772:	230b      	movs	r3, #11
90001774:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001778:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000177c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000177e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001780:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001782:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001784:	7893      	ldrb	r3, [r2, #2]
90001786:	041b      	lsls	r3, r3, #16
90001788:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000178c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000178e:	78d1      	ldrb	r1, [r2, #3]
90001790:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001794:	443b      	add	r3, r7
90001796:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001798:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000179a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000179c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000179e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017a0:	0424      	lsls	r4, r4, #16
900017a2:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017a6:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017a8:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017ac:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017ae:	4420      	add	r0, r4
900017b0:	e70e      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017b2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017b4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017b8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017bc:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017c0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017c4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017c8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017cc:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017ce:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017d2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017d6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017da:	041b      	lsls	r3, r3, #16
900017dc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017e0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017e4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017e8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017ec:	fbae e303 	umull	lr, r3, lr, r3
900017f0:	099b      	lsrs	r3, r3, #6
900017f2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017f4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017f8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017fc:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017fe:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001800:	041b      	lsls	r3, r3, #16
90001802:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001806:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
9000180a:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
9000180e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001812:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001814:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001816:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000181a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000181e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001822:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001826:	041b      	lsls	r3, r3, #16
90001828:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000182c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001830:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001834:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001836:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001838:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000183a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000183c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000183e:	041b      	lsls	r3, r3, #16
90001840:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001844:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001846:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000184a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000184c:	e60b      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000184e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001850:	4b1b      	ldr	r3, [pc, #108]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001852:	4a1c      	ldr	r2, [pc, #112]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001854:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001856:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000185a:	481b      	ldr	r0, [pc, #108]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185c:	f028 ff50 	bl	9002a700 <__assert_func>
    assert(aviListSize);
90001860:	4b1a      	ldr	r3, [pc, #104]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001862:	f240 1153 	movw	r1, #339	@ 0x153
90001866:	4a1a      	ldr	r2, [pc, #104]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001868:	4817      	ldr	r0, [pc, #92]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186a:	f028 ff49 	bl	9002a700 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000186e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001870:	4b18      	ldr	r3, [pc, #96]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001872:	4a17      	ldr	r2, [pc, #92]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001874:	f44f 719f 	mov.w	r1, #318	@ 0x13e
        lastError = AVI_ERROR_NOT_RIFF;
90001878:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000187c:	4812      	ldr	r0, [pc, #72]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000187e:	f028 ff3f 	bl	9002a700 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001882:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001884:	4b14      	ldr	r3, [pc, #80]	@ (900018d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001886:	4a12      	ldr	r2, [pc, #72]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001888:	f240 114d 	movw	r1, #333	@ 0x14d
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000188c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001890:	480d      	ldr	r0, [pc, #52]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001892:	f028 ff35 	bl	9002a700 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001896:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001898:	4b10      	ldr	r3, [pc, #64]	@ (900018dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000189a:	4a0d      	ldr	r2, [pc, #52]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000189c:	f44f 71a3 	mov.w	r1, #326	@ 0x146
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018a0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018a4:	4808      	ldr	r0, [pc, #32]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a6:	f028 ff2b 	bl	9002a700 <__assert_func>
        src = (const char*)movieData + offset;
900018aa:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018ac:	4420      	add	r0, r4
900018ae:	e68f      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018b0:	9002bd34 	.word	0x9002bd34
900018b4:	9002bdec 	.word	0x9002bdec
900018b8:	9002bde4 	.word	0x9002bde4
900018bc:	9002bdb8 	.word	0x9002bdb8
900018c0:	9002bc5c 	.word	0x9002bc5c
900018c4:	9002bc70 	.word	0x9002bc70
900018c8:	9002bbf0 	.word	0x9002bbf0
900018cc:	9002bdc0 	.word	0x9002bdc0
900018d0:	9002bd58 	.word	0x9002bd58
900018d4:	9002bd3c 	.word	0x9002bd3c
900018d8:	9002bda0 	.word	0x9002bda0
900018dc:	9002bd88 	.word	0x9002bd88
900018e0:	10624dd3 	.word	0x10624dd3

900018e4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018e4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018e6:	2400      	movs	r4, #0
    movieLength = length;
900018e8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018ec:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018ee:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018f2:	f7ff bd2d 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018f6:	bf00      	nop

900018f8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018f8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018fa:	680b      	ldr	r3, [r1, #0]
{
900018fc:	4604      	mov	r4, r0
    movieData = 0;
900018fe:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001900:	4608      	mov	r0, r1
90001902:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001904:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001908:	4798      	blx	r3
9000190a:	4603      	mov	r3, r0
    readVideoHeader();
9000190c:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
9000190e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001914:	f7ff bd1c 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001918 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001918:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000191a:	2400      	movs	r4, #0
9000191c:	4d20      	ldr	r5, [pc, #128]	@ (900019a0 <JPEG_Decode_DMA+0x88>)
    {
9000191e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001920:	4b20      	ldr	r3, [pc, #128]	@ (900019a4 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001922:	602c      	str	r4, [r5, #0]
    {
90001924:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001926:	4d20      	ldr	r5, [pc, #128]	@ (900019a8 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001928:	4f20      	ldr	r7, [pc, #128]	@ (900019ac <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000192a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000192c:	4d20      	ldr	r5, [pc, #128]	@ (900019b0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000192e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001930:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001932:	4d20      	ldr	r5, [pc, #128]	@ (900019b4 <JPEG_Decode_DMA+0x9c>)
90001934:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001936:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001938:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000193e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001940:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001944:	4f1c      	ldr	r7, [pc, #112]	@ (900019b8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001946:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000194a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000194e:	bf18      	it	ne
90001950:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001954:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001956:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001958:	4e18      	ldr	r6, [pc, #96]	@ (900019bc <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000195a:	4d19      	ldr	r5, [pc, #100]	@ (900019c0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000195c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000195e:	4e19      	ldr	r6, [pc, #100]	@ (900019c4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001960:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001964:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001968:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196a:	4e17      	ldr	r6, [pc, #92]	@ (900019c8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000196c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001970:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001972:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001974:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001976:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000197a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000197c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000197e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001980:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001982:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001984:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001988:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000198c:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001990:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001994:	f008 fdd2 	bl	9000a53c <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001998:	4620      	mov	r0, r4
9000199a:	b003      	add	sp, #12
9000199c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000199e:	bf00      	nop
900019a0:	24005df8 	.word	0x24005df8
900019a4:	24005dec 	.word	0x24005dec
900019a8:	240001d8 	.word	0x240001d8
900019ac:	24000194 	.word	0x24000194
900019b0:	240001e0 	.word	0x240001e0
900019b4:	24005de8 	.word	0x24005de8
900019b8:	24005e0c 	.word	0x24005e0c
900019bc:	24005e08 	.word	0x24005e08
900019c0:	24000004 	.word	0x24000004
900019c4:	24005e00 	.word	0x24005e00
900019c8:	24005e04 	.word	0x24005e04

900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019d0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019d2:	2402      	movs	r4, #2
900019d4:	483d      	ldr	r0, [pc, #244]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019d6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019da:	0725      	lsls	r5, r4, #28
900019dc:	d002      	beq.n	900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019de:	f024 040f 	bic.w	r4, r4, #15
900019e2:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019e4:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019e6:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019e8:	4d39      	ldr	r5, [pc, #228]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019ea:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019ec:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019f0:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001aec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
900019f4:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f6:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019f8:	4f36      	ldr	r7, [pc, #216]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019fa:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019fe:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001af0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
90001a02:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a06:	bf18      	it	ne
90001a08:	f1c4 0410 	rsbne	r4, r4, #16
90001a0c:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a0e:	4832      	ldr	r0, [pc, #200]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a10:	f7ff ff82 	bl	90001918 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a14:	4c31      	ldr	r4, [pc, #196]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a16:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a18:	4e31      	ldr	r6, [pc, #196]	@ (90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a1a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a1c:	f8da 3000 	ldr.w	r3, [sl]
90001a20:	b10b      	cbz	r3, 90001a26 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a22:	6833      	ldr	r3, [r6, #0]
90001a24:	bb6b      	cbnz	r3, 90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a26:	6828      	ldr	r0, [r5, #0]
90001a28:	7a03      	ldrb	r3, [r0, #8]
90001a2a:	b93b      	cbnz	r3, 90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a2c:	4b2d      	ldr	r3, [pc, #180]	@ (90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a2e:	681b      	ldr	r3, [r3, #0]
90001a30:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a34:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a38:	2b01      	cmp	r3, #1
90001a3a:	d03b      	beq.n	90001ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a3c:	683b      	ldr	r3, [r7, #0]
90001a3e:	2b01      	cmp	r3, #1
90001a40:	d00d      	beq.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a42:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a44:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a46:	6823      	ldr	r3, [r4, #0]
90001a48:	2b02      	cmp	r3, #2
90001a4a:	d024      	beq.n	90001a96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a4c:	6823      	ldr	r3, [r4, #0]
90001a4e:	2b01      	cmp	r3, #1
90001a50:	d1e4      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a52:	2300      	movs	r3, #0
90001a54:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a58:	6033      	str	r3, [r6, #0]
}
90001a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a5e:	f8d9 3000 	ldr.w	r3, [r9]
90001a62:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a66:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a6a:	2b00      	cmp	r3, #0
90001a6c:	d1e9      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a6e:	f8da 3000 	ldr.w	r3, [sl]
90001a72:	2b00      	cmp	r3, #0
90001a74:	d1e5      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a76:	2102      	movs	r1, #2
90001a78:	4817      	ldr	r0, [pc, #92]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a7a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a7c:	f008 ff0e 	bl	9000a89c <HAL_JPEG_Resume>
90001a80:	e7df      	b.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a82:	4815      	ldr	r0, [pc, #84]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a84:	f009 fcc8 	bl	9000b418 <HAL_JPEG_GetState>
90001a88:	2804      	cmp	r0, #4
90001a8a:	d01a      	beq.n	90001ac2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001a8c:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a8e:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a90:	6823      	ldr	r3, [r4, #0]
90001a92:	2b02      	cmp	r3, #2
90001a94:	d1da      	bne.n	90001a4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001a96:	4b14      	ldr	r3, [pc, #80]	@ (90001ae8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a98:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
90001a9c:	6818      	ldr	r0, [r3, #0]
90001a9e:	f00d fbc5 	bl	9000f22c <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001aa2:	6823      	ldr	r3, [r4, #0]
90001aa4:	2b01      	cmp	r3, #1
90001aa6:	d1b9      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001aa8:	2300      	movs	r3, #0
90001aaa:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aae:	6033      	str	r3, [r6, #0]
}
90001ab0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ab4:	6833      	ldr	r3, [r6, #0]
90001ab6:	2b00      	cmp	r3, #0
90001ab8:	d1c0      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001aba:	6803      	ldr	r3, [r0, #0]
90001abc:	691b      	ldr	r3, [r3, #16]
90001abe:	4798      	blx	r3
90001ac0:	e7bc      	b.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ac2:	4805      	ldr	r0, [pc, #20]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ac4:	f008 fdb8 	bl	9000a638 <HAL_JPEG_Abort>
90001ac8:	e7e0      	b.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aca:	bf00      	nop
90001acc:	24000194 	.word	0x24000194
90001ad0:	24005df0 	.word	0x24005df0
90001ad4:	24005df8 	.word	0x24005df8
90001ad8:	2400911c 	.word	0x2400911c
90001adc:	24005df4 	.word	0x24005df4
90001ae0:	240001d4 	.word	0x240001d4
90001ae4:	240001d8 	.word	0x240001d8
90001ae8:	240001dc 	.word	0x240001dc
90001aec:	24005dfc 	.word	0x24005dfc
90001af0:	24005dec 	.word	0x24005dec
90001af4:	24000004 	.word	0x24000004

90001af8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001af8:	6943      	ldr	r3, [r0, #20]
{
90001afa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001afe:	2b00      	cmp	r3, #0
90001b00:	f000 80ad 	beq.w	90001c5e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b04:	4604      	mov	r4, r0
    if (reader != 0)
90001b06:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b08:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b0a:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b0c:	2800      	cmp	r0, #0
90001b0e:	d05f      	beq.n	90001bd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b10:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b12:	2b07      	cmp	r3, #7
90001b14:	f240 80a9 	bls.w	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b18:	6803      	ldr	r3, [r0, #0]
90001b1a:	4629      	mov	r1, r5
90001b1c:	68db      	ldr	r3, [r3, #12]
90001b1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b22:	2208      	movs	r2, #8
90001b24:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b26:	6803      	ldr	r3, [r0, #0]
90001b28:	691b      	ldr	r3, [r3, #16]
90001b2a:	4798      	blx	r3
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d04a      	beq.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b30:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b34:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b38:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b3a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b3c:	2800      	cmp	r0, #0
90001b3e:	d046      	beq.n	90001bce <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b40:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b42:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b46:	1b52      	subs	r2, r2, r5
90001b48:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4a:	eb03 070c 	add.w	r7, r3, ip
90001b4e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	eb03 0805 	add.w	r8, r3, r5
90001b56:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b5a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b5e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b62:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b66:	78bd      	ldrb	r5, [r7, #2]
90001b68:	78ff      	ldrb	r7, [r7, #3]
90001b6a:	042d      	lsls	r5, r5, #16
90001b6c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b70:	ea45 050e 	orr.w	r5, r5, lr
90001b74:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b78:	189f      	adds	r7, r3, r2
90001b7a:	5c9b      	ldrb	r3, [r3, r2]
90001b7c:	787a      	ldrb	r2, [r7, #1]
90001b7e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b82:	eb01 0e05 	add.w	lr, r1, r5
90001b86:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b88:	f10e 0208 	add.w	r2, lr, #8
90001b8c:	429a      	cmp	r2, r3
90001b8e:	d213      	bcs.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b90:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b94:	459c      	cmp	ip, r3
90001b96:	d138      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b98:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b9c:	429f      	cmp	r7, r3
90001b9e:	d134      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001ba0:	2d00      	cmp	r5, #0
90001ba2:	d136      	bne.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba4:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001ba6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba8:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bac:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bae:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bb0:	d002      	beq.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bb2:	2001      	movs	r0, #1
}
90001bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bb8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bba:	6a23      	ldr	r3, [r4, #32]
90001bbc:	2000      	movs	r0, #0
        frameNumber = 1;
90001bbe:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001bc0:	61a3      	str	r3, [r4, #24]
}
90001bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bc6:	230d      	movs	r3, #13
90001bc8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bcc:	e7b0      	b.n	90001b30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bce:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bd0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bd2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bd4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bd6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bd8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bda:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bde:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001be0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001be2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001be4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001be8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bea:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bec:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bee:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001bf2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001bf6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001bf8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bfa:	042d      	lsls	r5, r5, #16
90001bfc:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c00:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c02:	2000      	movs	r0, #0
90001c04:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c08:	e7bb      	b.n	90001b82 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c0a:	2d00      	cmp	r5, #0
90001c0c:	bf18      	it	ne
90001c0e:	4672      	movne	r2, lr
90001c10:	e7c8      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c12:	f101 0708 	add.w	r7, r1, #8
90001c16:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c18:	b1f0      	cbz	r0, 90001c58 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c1c:	429d      	cmp	r5, r3
90001c1e:	d824      	bhi.n	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c20:	6803      	ldr	r3, [r0, #0]
90001c22:	4639      	mov	r1, r7
90001c24:	68db      	ldr	r3, [r3, #12]
90001c26:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c28:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c2a:	462a      	mov	r2, r5
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c2e:	6803      	ldr	r3, [r0, #0]
90001c30:	691b      	ldr	r3, [r3, #16]
90001c32:	4798      	blx	r3
90001c34:	b910      	cbnz	r0, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c36:	230d      	movs	r3, #13
90001c38:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c3c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c3e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c40:	b126      	cbz	r6, 90001c4c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c42:	4633      	mov	r3, r6
90001c44:	462a      	mov	r2, r5
90001c46:	4620      	mov	r0, r4
90001c48:	f7ff fec0 	bl	900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c4c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c50:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c52:	442a      	add	r2, r5
            frameNumber++;
90001c54:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c56:	e7a5      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c58:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c5a:	4439      	add	r1, r7
90001c5c:	e7f0      	b.n	90001c40 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c5e:	4b07      	ldr	r3, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c60:	21c2      	movs	r1, #194	@ 0xc2
90001c62:	4a07      	ldr	r2, [pc, #28]	@ (90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c64:	4807      	ldr	r0, [pc, #28]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c66:	f028 fd4b 	bl	9002a700 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c6a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c6c:	4b06      	ldr	r3, [pc, #24]	@ (90001c88 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c6e:	4a07      	ldr	r2, [pc, #28]	@ (90001c8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c70:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c72:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c76:	4803      	ldr	r0, [pc, #12]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c78:	f028 fd42 	bl	9002a700 <__assert_func>
90001c7c:	9002bcb4 	.word	0x9002bcb4
90001c80:	9002bdf4 	.word	0x9002bdf4
90001c84:	9002bbf0 	.word	0x9002bbf0
90001c88:	9002bc5c 	.word	0x9002bc5c
90001c8c:	9002bc70 	.word	0x9002bc70

90001c90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c94:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c96:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c9a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c9c:	460e      	mov	r6, r1
90001c9e:	4690      	mov	r8, r2
90001ca0:	461f      	mov	r7, r3
    if (reader != 0)
90001ca2:	2800      	cmp	r0, #0
90001ca4:	f000 80f5 	beq.w	90001e92 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001ca8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001caa:	2b07      	cmp	r3, #7
90001cac:	f240 8106 	bls.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cb0:	6803      	ldr	r3, [r0, #0]
90001cb2:	4649      	mov	r1, r9
90001cb4:	68db      	ldr	r3, [r3, #12]
90001cb6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cb8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cba:	2208      	movs	r2, #8
90001cbc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cbe:	6803      	ldr	r3, [r0, #0]
90001cc0:	691b      	ldr	r3, [r3, #16]
90001cc2:	4798      	blx	r3
90001cc4:	2800      	cmp	r0, #0
90001cc6:	f000 80af 	beq.w	90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cca:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001ccc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cce:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cd0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cd4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cd8:	2800      	cmp	r0, #0
90001cda:	f000 80f8 	beq.w	90001ece <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cde:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ce2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001ce4:	1899      	adds	r1, r3, r2
90001ce6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001ce8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cea:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cee:	f891 c001 	ldrb.w	ip, [r1, #1]
90001cf2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001cf6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cfa:	ea49 0902 	orr.w	r9, r9, r2
90001cfe:	78ca      	ldrb	r2, [r1, #3]
90001d00:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d04:	454b      	cmp	r3, r9
90001d06:	f0c0 80d9 	bcc.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001d0a:	6803      	ldr	r3, [r0, #0]
90001d0c:	4629      	mov	r1, r5
90001d0e:	68db      	ldr	r3, [r3, #12]
90001d10:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d12:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d14:	464a      	mov	r2, r9
90001d16:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d18:	6803      	ldr	r3, [r0, #0]
90001d1a:	691b      	ldr	r3, [r3, #16]
90001d1c:	4798      	blx	r3
90001d1e:	2800      	cmp	r0, #0
90001d20:	d07e      	beq.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d22:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d24:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d26:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d2a:	2302      	movs	r3, #2
90001d2c:	4869      	ldr	r0, [pc, #420]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d2e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d32:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d34:	d16f      	bne.n	90001e16 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d36:	4662      	mov	r2, ip
90001d38:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d3a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d3c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d3e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d40:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d44:	60c3      	str	r3, [r0, #12]
90001d46:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d48:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d4c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d4e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d50:	6143      	str	r3, [r0, #20]
90001d52:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d54:	f003 030f 	and.w	r3, r3, #15
90001d58:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d5a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d5c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d5e:	b236      	sxth	r6, r6
90001d60:	bf28      	it	cs
90001d62:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d64:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d68:	f002 020f 	and.w	r2, r2, #15
90001d6c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001f04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d70:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d74:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d76:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d78:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d7a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d7c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d80:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d84:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d86:	eba3 030c 	sub.w	r3, r3, ip
90001d8a:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001d8c:	6923      	ldr	r3, [r4, #16]
90001d8e:	429e      	cmp	r6, r3
90001d90:	bf28      	it	cs
90001d92:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d94:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d98:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9c:	bf18      	it	ne
90001d9e:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da2:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001da4:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001da8:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001daa:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dac:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dae:	bf18      	it	ne
90001db0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001db4:	4d48      	ldr	r5, [pc, #288]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001db6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001f0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dba:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dbc:	4847      	ldr	r0, [pc, #284]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dbe:	f7ff fdab 	bl	90001918 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001dc2:	4b47      	ldr	r3, [pc, #284]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001dc4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001dc6:	601f      	str	r7, [r3, #0]
90001dc8:	4e46      	ldr	r6, [pc, #280]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dca:	4c47      	ldr	r4, [pc, #284]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dcc:	4f47      	ldr	r7, [pc, #284]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dce:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dd0:	f8da 3000 	ldr.w	r3, [sl]
90001dd4:	b113      	cbz	r3, 90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001dd6:	6833      	ldr	r3, [r6, #0]
90001dd8:	2b00      	cmp	r3, #0
90001dda:	d13b      	bne.n	90001e54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ddc:	6828      	ldr	r0, [r5, #0]
90001dde:	7a03      	ldrb	r3, [r0, #8]
90001de0:	b93b      	cbnz	r3, 90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001de2:	4b43      	ldr	r3, [pc, #268]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001de4:	681b      	ldr	r3, [r3, #0]
90001de6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dea:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dee:	2b01      	cmp	r3, #1
90001df0:	d044      	beq.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001df2:	683b      	ldr	r3, [r7, #0]
90001df4:	2b01      	cmp	r3, #1
90001df6:	d01b      	beq.n	90001e30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001df8:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dfa:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dfc:	6823      	ldr	r3, [r4, #0]
90001dfe:	2b02      	cmp	r3, #2
90001e00:	d032      	beq.n	90001e68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001e02:	6823      	ldr	r3, [r4, #0]
90001e04:	2b01      	cmp	r3, #1
90001e06:	d1e3      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001e08:	2300      	movs	r3, #0
}
90001e0a:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e0c:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e10:	6033      	str	r3, [r6, #0]
}
90001e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e16:	f02c 030f 	bic.w	r3, ip, #15
90001e1a:	3310      	adds	r3, #16
90001e1c:	461a      	mov	r2, r3
90001e1e:	e78c      	b.n	90001d3a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e20:	230d      	movs	r3, #13
90001e22:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e26:	e77c      	b.n	90001d22 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e28:	230d      	movs	r3, #13
90001e2a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e2e:	e74c      	b.n	90001cca <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e30:	f8d9 3000 	ldr.w	r3, [r9]
90001e34:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e38:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e3c:	2b00      	cmp	r3, #0
90001e3e:	d1db      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e40:	f8da 3000 	ldr.w	r3, [sl]
90001e44:	2b00      	cmp	r3, #0
90001e46:	d1d7      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e48:	2102      	movs	r1, #2
90001e4a:	4824      	ldr	r0, [pc, #144]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e4c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e4e:	f008 fd25 	bl	9000a89c <HAL_JPEG_Resume>
90001e52:	e7d1      	b.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e54:	4821      	ldr	r0, [pc, #132]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e56:	f009 fadf 	bl	9000b418 <HAL_JPEG_GetState>
90001e5a:	2804      	cmp	r0, #4
90001e5c:	d015      	beq.n	90001e8a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e5e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e60:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e62:	6823      	ldr	r3, [r4, #0]
90001e64:	2b02      	cmp	r3, #2
90001e66:	d1cc      	bne.n	90001e02 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e68:	4b22      	ldr	r3, [pc, #136]	@ (90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e6a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
90001e6e:	6818      	ldr	r0, [r3, #0]
90001e70:	f00d f9dc 	bl	9000f22c <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e74:	6823      	ldr	r3, [r4, #0]
90001e76:	2b01      	cmp	r3, #1
90001e78:	d1aa      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e7a:	e7c5      	b.n	90001e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e7c:	6833      	ldr	r3, [r6, #0]
90001e7e:	2b00      	cmp	r3, #0
90001e80:	d1b7      	bne.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001e82:	6803      	ldr	r3, [r0, #0]
90001e84:	691b      	ldr	r3, [r3, #16]
90001e86:	4798      	blx	r3
90001e88:	e7b3      	b.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001e8a:	4814      	ldr	r0, [pc, #80]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e8c:	f008 fbd4 	bl	9000a638 <HAL_JPEG_Abort>
90001e90:	e7e5      	b.n	90001e5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e92:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e96:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e98:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e9c:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e9e:	4401      	add	r1, r0
        val |= d[0];
90001ea0:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001ea2:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ea4:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ea8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001eaa:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001eae:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001eb2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001eb6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eba:	e734      	b.n	90001d26 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ebc:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ebe:	4b0e      	ldr	r3, [pc, #56]	@ (90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001ec0:	4a0e      	ldr	r2, [pc, #56]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001ec2:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ec4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001ec8:	480d      	ldr	r0, [pc, #52]	@ (90001f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eca:	f028 fc19 	bl	9002a700 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ece:	4691      	mov	r9, r2
90001ed0:	e7e1      	b.n	90001e96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ed2:	bf00      	nop
90001ed4:	24000194 	.word	0x24000194
90001ed8:	24005df0 	.word	0x24005df0
90001edc:	2400911c 	.word	0x2400911c
90001ee0:	24005de4 	.word	0x24005de4
90001ee4:	240001d4 	.word	0x240001d4
90001ee8:	24005df4 	.word	0x24005df4
90001eec:	24005df8 	.word	0x24005df8
90001ef0:	240001d8 	.word	0x240001d8
90001ef4:	240001dc 	.word	0x240001dc
90001ef8:	9002bc5c 	.word	0x9002bc5c
90001efc:	9002bc70 	.word	0x9002bc70
90001f00:	9002bbf0 	.word	0x9002bbf0
90001f04:	24005dfc 	.word	0x24005dfc
90001f08:	24005dec 	.word	0x24005dec
90001f0c:	24000004 	.word	0x24000004

90001f10 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f10:	684b      	ldr	r3, [r1, #4]
90001f12:	2b01      	cmp	r3, #1
90001f14:	d015      	beq.n	90001f42 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f16:	2b02      	cmp	r3, #2
90001f18:	d00b      	beq.n	90001f32 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f1a:	b94b      	cbnz	r3, 90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f1c:	68cb      	ldr	r3, [r1, #12]
90001f1e:	0758      	lsls	r0, r3, #29
90001f20:	d11e      	bne.n	90001f60 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f22:	688b      	ldr	r3, [r1, #8]
90001f24:	075a      	lsls	r2, r3, #29
90001f26:	d003      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f28:	f023 0307 	bic.w	r3, r3, #7
90001f2c:	3308      	adds	r3, #8
90001f2e:	608b      	str	r3, [r1, #8]
    }
90001f30:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f32:	68cb      	ldr	r3, [r1, #12]
90001f34:	071a      	lsls	r2, r3, #28
90001f36:	d0f4      	beq.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f38:	f023 030f 	bic.w	r3, r3, #15
90001f3c:	3310      	adds	r3, #16
90001f3e:	60cb      	str	r3, [r1, #12]
90001f40:	e7ef      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f42:	68cb      	ldr	r3, [r1, #12]
90001f44:	071a      	lsls	r2, r3, #28
90001f46:	d003      	beq.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f48:	f023 030f 	bic.w	r3, r3, #15
90001f4c:	3310      	adds	r3, #16
90001f4e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f50:	688b      	ldr	r3, [r1, #8]
90001f52:	0718      	lsls	r0, r3, #28
90001f54:	d0ec      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f56:	f023 030f 	bic.w	r3, r3, #15
90001f5a:	3310      	adds	r3, #16
90001f5c:	608b      	str	r3, [r1, #8]
90001f5e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f60:	f023 0307 	bic.w	r3, r3, #7
90001f64:	3308      	adds	r3, #8
90001f66:	60cb      	str	r3, [r1, #12]
90001f68:	e7db      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
90001f6a:	bf00      	nop

90001f6c <HAL_JPEG_GetDataCallback>:
    {
90001f6c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f6e:	4c0c      	ldr	r4, [pc, #48]	@ (90001fa0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f70:	4a0c      	ldr	r2, [pc, #48]	@ (90001fa4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f72:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f74:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f76:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f78:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f7a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f7c:	d302      	bcc.n	90001f84 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f82:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f84:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f86:	4b08      	ldr	r3, [pc, #32]	@ (90001fa8 <HAL_JPEG_GetDataCallback+0x3c>)
90001f88:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f8a:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f8e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f90:	bf28      	it	cs
90001f92:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f96:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f9a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f9c:	f008 bb44 	b.w	9000a628 <HAL_JPEG_ConfigInputBuffer>
90001fa0:	24005e08 	.word	0x24005e08
90001fa4:	24005e04 	.word	0x24005e04
90001fa8:	24005e00 	.word	0x24005e00

90001fac <HAL_JPEG_DataReadyCallback>:
    {
90001fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fb0:	4e4a      	ldr	r6, [pc, #296]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fb2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	4f4a      	ldr	r7, [pc, #296]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fb6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb8:	4d4a      	ldr	r5, [pc, #296]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fba:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fbe:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fc2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc4:	4b48      	ldr	r3, [pc, #288]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc6:	4c49      	ldr	r4, [pc, #292]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fcc:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fd0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fd8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fda:	4d45      	ldr	r5, [pc, #276]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fdc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fde:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fe2:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fe6:	697b      	ldr	r3, [r7, #20]
90001fe8:	428b      	cmp	r3, r1
90001fea:	d260      	bcs.n	900020ae <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fec:	6821      	ldr	r1, [r4, #0]
90001fee:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff0:	6823      	ldr	r3, [r4, #0]
90001ff2:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ff4:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ffc:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002000:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002002:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002006:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000200a:	6823      	ldr	r3, [r4, #0]
9000200c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002014:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002016:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002018:	b12b      	cbz	r3, 90002026 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000201a:	6823      	ldr	r3, [r4, #0]
9000201c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002020:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002024:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002026:	6832      	ldr	r2, [r6, #0]
90002028:	69bb      	ldr	r3, [r7, #24]
9000202a:	4293      	cmp	r3, r2
9000202c:	d922      	bls.n	90002074 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000202e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002030:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002032:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002036:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002038:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000203c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000203e:	2200      	movs	r2, #0
90002040:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002042:	6823      	ldr	r3, [r4, #0]
90002044:	2b01      	cmp	r3, #1
90002046:	d900      	bls.n	9000204a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002048:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000204a:	6823      	ldr	r3, [r4, #0]
9000204c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002050:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002054:	2b00      	cmp	r3, #0
90002056:	d138      	bne.n	900020ca <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002058:	6823      	ldr	r3, [r4, #0]
9000205a:	4640      	mov	r0, r8
9000205c:	68fa      	ldr	r2, [r7, #12]
9000205e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002062:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002066:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000206a:	01d2      	lsls	r2, r2, #7
9000206c:	6859      	ldr	r1, [r3, #4]
9000206e:	f008 fadf 	bl	9000a630 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002072:	69bb      	ldr	r3, [r7, #24]
90002074:	6832      	ldr	r2, [r6, #0]
90002076:	429a      	cmp	r2, r3
90002078:	d20b      	bcs.n	90002092 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000207a:	4b1e      	ldr	r3, [pc, #120]	@ (900020f4 <HAL_JPEG_DataReadyCallback+0x148>)
9000207c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000207e:	7a1b      	ldrb	r3, [r3, #8]
90002080:	b10b      	cbz	r3, 90002086 <HAL_JPEG_DataReadyCallback+0xda>
    }
90002082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002086:	4b1c      	ldr	r3, [pc, #112]	@ (900020f8 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002088:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
9000208c:	6818      	ldr	r0, [r3, #0]
9000208e:	f00d b8ff 	b.w	9000f290 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002092:	6823      	ldr	r3, [r4, #0]
90002094:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
90002096:	4919      	ldr	r1, [pc, #100]	@ (900020fc <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002098:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000209a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
9000209e:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020a2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020a6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a8:	f008 fa86 	bl	9000a5b8 <HAL_JPEG_Pause>
900020ac:	e7e5      	b.n	9000207a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020ae:	6823      	ldr	r3, [r4, #0]
900020b0:	68fa      	ldr	r2, [r7, #12]
900020b2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020ba:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020be:	01d2      	lsls	r2, r2, #7
900020c0:	6859      	ldr	r1, [r3, #4]
    }
900020c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020c6:	f008 bab3 	b.w	9000a630 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ca:	2102      	movs	r1, #2
900020cc:	4640      	mov	r0, r8
900020ce:	f008 fa73 	bl	9000a5b8 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020d2:	4b0b      	ldr	r3, [pc, #44]	@ (90002100 <HAL_JPEG_DataReadyCallback+0x154>)
900020d4:	2201      	movs	r2, #1
900020d6:	601a      	str	r2, [r3, #0]
900020d8:	e7be      	b.n	90002058 <HAL_JPEG_DataReadyCallback+0xac>
900020da:	bf00      	nop
900020dc:	24005de8 	.word	0x24005de8
900020e0:	24000194 	.word	0x24000194
900020e4:	24005e0c 	.word	0x24005e0c
900020e8:	24005de4 	.word	0x24005de4
900020ec:	24005dec 	.word	0x24005dec
900020f0:	24000004 	.word	0x24000004
900020f4:	24005df0 	.word	0x24005df0
900020f8:	240001dc 	.word	0x240001dc
900020fc:	24005dfc 	.word	0x24005dfc
90002100:	24005df8 	.word	0x24005df8

90002104 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002104:	b672      	cpsid	i
        while (1)
90002106:	e7fe      	b.n	90002106 <HAL_JPEG_ErrorCallback+0x2>

90002108 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002108:	4b01      	ldr	r3, [pc, #4]	@ (90002110 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000210a:	2201      	movs	r2, #1
9000210c:	601a      	str	r2, [r3, #0]
    }
9000210e:	4770      	bx	lr
90002110:	24005dfc 	.word	0x24005dfc

90002114 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002114:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002116:	4f1e      	ldr	r7, [pc, #120]	@ (90002190 <DMA2D_CopyBuffer+0x7c>)
90002118:	6903      	ldr	r3, [r0, #16]
9000211a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000211c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000211e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                             + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002122:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002124:	4e1b      	ldr	r6, [pc, #108]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002126:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000212a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000212e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002132:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002136:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002138:	bf18      	it	ne
9000213a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000213e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002140:	6939      	ldr	r1, [r7, #16]
90002142:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002146:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000214a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000214e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002150:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002152:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002154:	7e81      	ldrb	r1, [r0, #26]
90002156:	b1b9      	cbz	r1, 90002188 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002158:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000215a:	f1c1 0110 	rsb	r1, r1, #16
9000215e:	4321      	orrs	r1, r4
90002160:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002162:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002164:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002168:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000216c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000216e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002172:	4809      	ldr	r0, [pc, #36]	@ (90002198 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002174:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002176:	4b07      	ldr	r3, [pc, #28]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
90002178:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000217a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000217c:	4a07      	ldr	r2, [pc, #28]	@ (9000219c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000217e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002180:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002182:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002184:	6018      	str	r0, [r3, #0]
}
90002186:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002188:	f044 0410 	orr.w	r4, r4, #16
9000218c:	6474      	str	r4, [r6, #68]	@ 0x44
9000218e:	e7e8      	b.n	90002162 <DMA2D_CopyBuffer+0x4e>
90002190:	24000194 	.word	0x24000194
90002194:	52001000 	.word	0x52001000
90002198:	00010201 	.word	0x00010201
9000219c:	ff09000b 	.word	0xff09000b

900021a0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021a0:	6902      	ldr	r2, [r0, #16]
{
900021a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021a6:	4605      	mov	r5, r0
900021a8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021aa:	2a00      	cmp	r2, #0
900021ac:	d165      	bne.n	9000227a <DMA2D_CropBuffer+0xda>
900021ae:	4b35      	ldr	r3, [pc, #212]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
900021b0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021b4:	f1cc 0010 	rsb	r0, ip, #16
900021b8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021ba:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021bc:	3901      	subs	r1, #1
900021be:	428a      	cmp	r2, r1
900021c0:	d102      	bne.n	900021c8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021c2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021c4:	1a41      	subs	r1, r0, r1
900021c6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021c8:	7e6e      	ldrb	r6, [r5, #25]
900021ca:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021cc:	2e00      	cmp	r6, #0
900021ce:	d051      	beq.n	90002274 <DMA2D_CropBuffer+0xd4>
900021d0:	f1c7 0110 	rsb	r1, r7, #16
900021d4:	46b8      	mov	r8, r7
900021d6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021d8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021dc:	f1be 0f00 	cmp.w	lr, #0
900021e0:	d002      	beq.n	900021e8 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021e2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021e4:	1b09      	subs	r1, r1, r4
900021e6:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021e8:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                             + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ee:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021f2:	4413      	add	r3, r2
    job.MCU_drawn++;
900021f4:	3201      	adds	r2, #1
                             + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021f6:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021fa:	612a      	str	r2, [r5, #16]
                             + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021fc:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002200:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                             + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002204:	0052      	lsls	r2, r2, #1
90002206:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000220a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000220e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002212:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002214:	b107      	cbz	r7, 90002218 <DMA2D_CropBuffer+0x78>
90002216:	b90e      	cbnz	r6, 9000221c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002218:	2300      	movs	r3, #0
9000221a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000221c:	4b1a      	ldr	r3, [pc, #104]	@ (90002288 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000221e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002220:	4f1a      	ldr	r7, [pc, #104]	@ (9000228c <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002222:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002224:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002226:	4a1a      	ldr	r2, [pc, #104]	@ (90002290 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002228:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000222a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002230:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002232:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002234:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002238:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000223c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000223e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002240:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002244:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002246:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002248:	685b      	ldr	r3, [r3, #4]
9000224a:	9604      	str	r6, [sp, #16]
9000224c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000224e:	4b11      	ldr	r3, [pc, #68]	@ (90002294 <DMA2D_CropBuffer+0xf4>)
90002250:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002252:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002254:	4810      	ldr	r0, [pc, #64]	@ (90002298 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002256:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002258:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000225e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002260:	490e      	ldr	r1, [pc, #56]	@ (9000229c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002262:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002264:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002266:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002268:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000226a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
9000226c:	6019      	str	r1, [r3, #0]
}
9000226e:	b00a      	add	sp, #40	@ 0x28
90002270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002274:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002276:	46b0      	mov	r8, r6
90002278:	e7ae      	b.n	900021d8 <DMA2D_CropBuffer+0x38>
9000227a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000227c:	f04f 0c00 	mov.w	ip, #0
90002280:	4b00      	ldr	r3, [pc, #0]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
90002282:	e79a      	b.n	900021ba <DMA2D_CropBuffer+0x1a>
90002284:	24000194 	.word	0x24000194
90002288:	01e00010 	.word	0x01e00010
9000228c:	240001e4 	.word	0x240001e4
90002290:	24005df0 	.word	0x24005df0
90002294:	52001000 	.word	0x52001000
90002298:	ff09000b 	.word	0xff09000b
9000229c:	00010201 	.word	0x00010201

900022a0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022a0:	4b0d      	ldr	r3, [pc, #52]	@ (900022d8 <DMA2D_ExternalJobCompleted+0x38>)
900022a2:	6902      	ldr	r2, [r0, #16]
900022a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022a6:	429a      	cmp	r2, r3
900022a8:	d000      	beq.n	900022ac <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022aa:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022ac:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022ae:	4b0b      	ldr	r3, [pc, #44]	@ (900022dc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022b0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022b2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022b4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022b6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022b8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022ba:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022bc:	6819      	ldr	r1, [r3, #0]
900022be:	2901      	cmp	r1, #1
900022c0:	d900      	bls.n	900022c4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022c2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022c4:	7e83      	ldrb	r3, [r0, #26]
900022c6:	b113      	cbz	r3, 900022ce <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022c8:	4b05      	ldr	r3, [pc, #20]	@ (900022e0 <DMA2D_ExternalJobCompleted+0x40>)
900022ca:	2201      	movs	r2, #1
900022cc:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022ce:	4b05      	ldr	r3, [pc, #20]	@ (900022e4 <DMA2D_ExternalJobCompleted+0x44>)
900022d0:	6818      	ldr	r0, [r3, #0]
900022d2:	f00c bfdd 	b.w	9000f290 <osSemaphoreRelease>
900022d6:	bf00      	nop
900022d8:	24000194 	.word	0x24000194
900022dc:	240001d8 	.word	0x240001d8
900022e0:	240001d4 	.word	0x240001d4
900022e4:	240001dc 	.word	0x240001dc

900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022e8:	2101      	movs	r1, #1
900022ea:	2200      	movs	r2, #0
{
900022ec:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022ee:	4608      	mov	r0, r1
900022f0:	f00c ff50 	bl	9000f194 <osSemaphoreNew>
900022f4:	4b0b      	ldr	r3, [pc, #44]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022f8:	b140      	cbz	r0, 9000230c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022fa:	2200      	movs	r2, #0
900022fc:	2104      	movs	r1, #4
900022fe:	2001      	movs	r0, #1
90002300:	f00c fff0 	bl	9000f2e4 <osMessageQueueNew>
90002304:	4b08      	ldr	r3, [pc, #32]	@ (90002328 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002306:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002308:	b130      	cbz	r0, 90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000230a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000230c:	4b07      	ldr	r3, [pc, #28]	@ (9000232c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000230e:	2128      	movs	r1, #40	@ 0x28
90002310:	4a07      	ldr	r2, [pc, #28]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002312:	4808      	ldr	r0, [pc, #32]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002314:	f028 f9f4 	bl	9002a700 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002318:	4b07      	ldr	r3, [pc, #28]	@ (90002338 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000231a:	212c      	movs	r1, #44	@ 0x2c
9000231c:	4a04      	ldr	r2, [pc, #16]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000231e:	4805      	ldr	r0, [pc, #20]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002320:	f028 f9ee 	bl	9002a700 <__assert_func>
90002324:	24005e14 	.word	0x24005e14
90002328:	24005e10 	.word	0x24005e10
9000232c:	9002be94 	.word	0x9002be94
90002330:	9002bee0 	.word	0x9002bee0
90002334:	9002bf10 	.word	0x9002bf10
90002338:	9002bf70 	.word	0x9002bf70

9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000233c:	4b02      	ldr	r3, [pc, #8]	@ (90002348 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000233e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
90002342:	6818      	ldr	r0, [r3, #0]
90002344:	f00c bf72 	b.w	9000f22c <osSemaphoreAcquire>
90002348:	24005e14 	.word	0x24005e14

9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000234c:	4b01      	ldr	r3, [pc, #4]	@ (90002354 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000234e:	6818      	ldr	r0, [r3, #0]
90002350:	f00c bf9e 	b.w	9000f290 <osSemaphoreRelease>
90002354:	24005e14 	.word	0x24005e14

90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002358:	4b02      	ldr	r3, [pc, #8]	@ (90002364 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000235a:	2100      	movs	r1, #0
9000235c:	6818      	ldr	r0, [r3, #0]
9000235e:	f00c bf65 	b.w	9000f22c <osSemaphoreAcquire>
90002362:	bf00      	nop
90002364:	24005e14 	.word	0x24005e14

90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002368:	4b01      	ldr	r3, [pc, #4]	@ (90002370 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000236a:	6818      	ldr	r0, [r3, #0]
9000236c:	f00c bf90 	b.w	9000f290 <osSemaphoreRelease>
90002370:	24005e14 	.word	0x24005e14

90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002374:	4803      	ldr	r0, [pc, #12]	@ (90002384 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002376:	2300      	movs	r3, #0
90002378:	4903      	ldr	r1, [pc, #12]	@ (90002388 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000237a:	461a      	mov	r2, r3
9000237c:	6800      	ldr	r0, [r0, #0]
9000237e:	f00c bfed 	b.w	9000f35c <osMessageQueuePut>
90002382:	bf00      	nop
90002384:	24005e10 	.word	0x24005e10
90002388:	2400003c 	.word	0x2400003c

9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
9000238c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000238e:	2300      	movs	r3, #0
{
90002390:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002392:	4c07      	ldr	r4, [pc, #28]	@ (900023b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002394:	461a      	mov	r2, r3
90002396:	a901      	add	r1, sp, #4
90002398:	6820      	ldr	r0, [r4, #0]
9000239a:	f00d f81b 	bl	9000f3d4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000239e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
900023a2:	2200      	movs	r2, #0
900023a4:	a901      	add	r1, sp, #4
900023a6:	6820      	ldr	r0, [r4, #0]
900023a8:	f00d f814 	bl	9000f3d4 <osMessageQueueGet>
}
900023ac:	b002      	add	sp, #8
900023ae:	bd10      	pop	{r4, pc}
900023b0:	24005e10 	.word	0x24005e10

900023b4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023b4:	6803      	ldr	r3, [r0, #0]
900023b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023b8:	4718      	bx	r3
900023ba:	bf00      	nop

900023bc <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023bc:	2001      	movs	r0, #1
900023be:	4770      	bx	lr

900023c0 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023c0:	4905      	ldr	r1, [pc, #20]	@ (900023d8 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023c2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023c6:	4b05      	ldr	r3, [pc, #20]	@ (900023dc <_ZN8STM32DMAD1Ev+0x1c>)
900023c8:	6001      	str	r1, [r0, #0]
900023ca:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023ce:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023d2:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023d6:	4770      	bx	lr
900023d8:	9002c12c 	.word	0x9002c12c
900023dc:	e000e100 	.word	0xe000e100

900023e0 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e0:	4b0f      	ldr	r3, [pc, #60]	@ (90002420 <_ZN8STM32DMA10initializeEv+0x40>)
{
900023e2:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023e4:	490f      	ldr	r1, [pc, #60]	@ (90002424 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023ea:	480f      	ldr	r0, [pc, #60]	@ (90002428 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023ec:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023f0:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023f2:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900023f6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900023fa:	f002 0210 	and.w	r2, r2, #16
900023fe:	9201      	str	r2, [sp, #4]
90002400:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90002402:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002404:	f042 0210 	orr.w	r2, r2, #16
90002408:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
9000240a:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000240c:	f022 0210 	bic.w	r2, r2, #16
90002410:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002412:	4b06      	ldr	r3, [pc, #24]	@ (9000242c <_ZN8STM32DMA10initializeEv+0x4c>)
90002414:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002418:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
9000241a:	b002      	add	sp, #8
9000241c:	4770      	bx	lr
9000241e:	bf00      	nop
90002420:	58024400 	.word	0x58024400
90002424:	24009174 	.word	0x24009174
90002428:	900027fd 	.word	0x900027fd
9000242c:	e000e100 	.word	0xe000e100

90002430 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002430:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002434:	4770      	bx	lr
90002436:	bf00      	nop

90002438 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002438:	4909      	ldr	r1, [pc, #36]	@ (90002460 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000243a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000243e:	4b09      	ldr	r3, [pc, #36]	@ (90002464 <_ZN8STM32DMAD0Ev+0x2c>)
90002440:	b510      	push	{r4, lr}
90002442:	6001      	str	r1, [r0, #0]
90002444:	4604      	mov	r4, r0
90002446:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000244a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000244e:	f3bf 8f6f 	isb	sy
}
90002452:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002456:	f027 fdd9 	bl	9002a00c <_ZdlPvj>
9000245a:	4620      	mov	r0, r4
9000245c:	bd10      	pop	{r4, pc}
9000245e:	bf00      	nop
90002460:	9002c12c 	.word	0x9002c12c
90002464:	e000e100 	.word	0xe000e100

90002468 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002468:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000246c:	b510      	push	{r4, lr}
9000246e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002470:	b963      	cbnz	r3, 9000248c <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
90002472:	6803      	ldr	r3, [r0, #0]
90002474:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002476:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002478:	4924      	ldr	r1, [pc, #144]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
9000247a:	4a25      	ldr	r2, [pc, #148]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000247c:	680b      	ldr	r3, [r1, #0]
9000247e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002482:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002486:	2b01      	cmp	r3, #1
90002488:	d015      	beq.n	900024b6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
9000248a:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
9000248c:	7a03      	ldrb	r3, [r0, #8]
9000248e:	2b00      	cmp	r3, #0
90002490:	d12b      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
90002492:	6860      	ldr	r0, [r4, #4]
90002494:	6803      	ldr	r3, [r0, #0]
90002496:	681b      	ldr	r3, [r3, #0]
90002498:	4798      	blx	r3
9000249a:	4603      	mov	r3, r0
9000249c:	2800      	cmp	r0, #0
9000249e:	d1f4      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024a0:	7a62      	ldrb	r2, [r4, #9]
900024a2:	2a00      	cmp	r2, #0
900024a4:	d0f1      	beq.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024a6:	6822      	ldr	r2, [r4, #0]
900024a8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024aa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024ae:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024b4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024b6:	4817      	ldr	r0, [pc, #92]	@ (90002514 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024b8:	6800      	ldr	r0, [r0, #0]
900024ba:	2800      	cmp	r0, #0
900024bc:	d1e5      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024be:	7a20      	ldrb	r0, [r4, #8]
900024c0:	2800      	cmp	r0, #0
900024c2:	d1e2      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024c6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024ca:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024ce:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024d4:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024d6:	6808      	ldr	r0, [r1, #0]
900024d8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024dc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	b17b      	cbz	r3, 90002502 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	f7ff be5b 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ea:	4b08      	ldr	r3, [pc, #32]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024ec:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ee:	4808      	ldr	r0, [pc, #32]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024f0:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900024f2:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024f8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900024fc:	f7ff fed0 	bl	900022a0 <DMA2D_ExternalJobCompleted>
90002500:	e7c7      	b.n	90002492 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002506:	f7ff be05 	b.w	90002114 <DMA2D_CopyBuffer>
9000250a:	bf00      	nop
9000250c:	240001d8 	.word	0x240001d8
90002510:	24000004 	.word	0x24000004
90002514:	240001d4 	.word	0x240001d4

90002518 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002518:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000251a:	7f8b      	ldrb	r3, [r1, #30]
9000251c:	2b0a      	cmp	r3, #10
9000251e:	d83d      	bhi.n	9000259c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002520:	e8df f003 	tbb	[pc, r3]
90002524:	3c2a063a 	.word	0x3c2a063a
90002528:	063c3c3c 	.word	0x063c3c3c
9000252c:	0606      	.short	0x0606
9000252e:	06          	.byte	0x06
9000252f:	00          	.byte	0x00
90002530:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002532:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002536:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002538:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000253a:	4b1b      	ldr	r3, [pc, #108]	@ (900025a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000253c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002540:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002542:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002546:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002548:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000254a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000254c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000254e:	680e      	ldr	r6, [r1, #0]
        return color;
90002550:	68c8      	ldr	r0, [r1, #12]
90002552:	2e08      	cmp	r6, #8
90002554:	d012      	beq.n	9000257c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002556:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002558:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000255a:	0941      	lsrs	r1, r0, #5
9000255c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002560:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002564:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002566:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000256a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000256c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
9000256e:	490f      	ldr	r1, [pc, #60]	@ (900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002570:	4302      	orrs	r2, r0
90002572:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90002574:	6019      	str	r1, [r3, #0]
    }
}
90002576:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002578:	2400      	movs	r4, #0
9000257a:	e7da      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002580:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002582:	4a0b      	ldr	r2, [pc, #44]	@ (900025b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90002584:	7f09      	ldrb	r1, [r1, #28]
90002586:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
9000258a:	490a      	ldr	r1, [pc, #40]	@ (900025b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000258c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000258e:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002590:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002592:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90002594:	6019      	str	r1, [r3, #0]
}
90002596:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002598:	2402      	movs	r4, #2
9000259a:	e7ca      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
9000259c:	4b06      	ldr	r3, [pc, #24]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
9000259e:	2187      	movs	r1, #135	@ 0x87
900025a0:	4a06      	ldr	r2, [pc, #24]	@ (900025bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025a2:	4807      	ldr	r0, [pc, #28]	@ (900025c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025a4:	f028 f8ac 	bl	9002a700 <__assert_func>
900025a8:	52001000 	.word	0x52001000
900025ac:	00030201 	.word	0x00030201
900025b0:	00010009 	.word	0x00010009
900025b4:	00020201 	.word	0x00020201
900025b8:	9002bfb4 	.word	0x9002bfb4
900025bc:	9002bfd0 	.word	0x9002bfd0
900025c0:	9002c01c 	.word	0x9002c01c

900025c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025c6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025ca:	f1be 0f0b 	cmp.w	lr, #11
900025ce:	f200 80ac 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025d2:	e8df f00e 	tbb	[pc, lr]
900025d6:	605b      	.short	0x605b
900025d8:	aaaaaa46 	.word	0xaaaaaa46
900025dc:	060606aa 	.word	0x060606aa
900025e0:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025e2:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025e4:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025e8:	f1bc 0f0b 	cmp.w	ip, #11
900025ec:	f200 809d 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025f0:	e8df f00c 	tbb	[pc, ip]
900025f4:	9b0d494e 	.word	0x9b0d494e
900025f8:	069b9b9b 	.word	0x069b9b9b
900025fc:	06060606 	.word	0x06060606
    switch (format)
90002600:	f1bc 0f0b 	cmp.w	ip, #11
90002604:	f000 8097 	beq.w	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002608:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000260a:	2701      	movs	r7, #1
9000260c:	e001      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000260e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002610:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002612:	8a8b      	ldrh	r3, [r1, #20]
90002614:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002616:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002618:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000261a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000261c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000261e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002622:	4b4b      	ldr	r3, [pc, #300]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002624:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002626:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002628:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000262a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000262c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000262e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002630:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002632:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002634:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002636:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002638:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000263a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000263c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002640:	d02e      	beq.n	900026a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002642:	d810      	bhi.n	90002666 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002644:	2a20      	cmp	r2, #32
90002646:	d028      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002648:	2a40      	cmp	r2, #64	@ 0x40
9000264a:	d026      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000264c:	2a04      	cmp	r2, #4
9000264e:	d15a      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002650:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002652:	4a40      	ldr	r2, [pc, #256]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002654:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002658:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000265a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000265c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
9000265e:	601a      	str	r2, [r3, #0]
}
90002660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002662:	2600      	movs	r6, #0
90002664:	e7be      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002666:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000266a:	d059      	beq.n	90002720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000266c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90002670:	d149      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002672:	4a39      	ldr	r2, [pc, #228]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002674:	4302      	orrs	r2, r0
90002676:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002678:	4a36      	ldr	r2, [pc, #216]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000267a:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000267c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000267e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002680:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002682:	601a      	str	r2, [r3, #0]
}
90002684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90002686:	2401      	movs	r4, #1
90002688:	4627      	mov	r7, r4
9000268a:	e7c2      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
9000268c:	2602      	movs	r6, #2
9000268e:	e7a9      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90002690:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002692:	4627      	mov	r7, r4
90002694:	e7bd      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90002696:	2601      	movs	r6, #1
90002698:	e7a4      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269a:	4330      	orrs	r0, r6
9000269c:	4b2c      	ldr	r3, [pc, #176]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000269e:	e7d8      	b.n	90002652 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026a0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026a4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026aa:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026ac:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ae:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026b0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026b2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026b4:	b9b1      	cbnz	r1, 900026e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026b6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026b8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ba:	69d8      	ldr	r0, [r3, #28]
900026bc:	4a27      	ldr	r2, [pc, #156]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026be:	3901      	subs	r1, #1
900026c0:	4002      	ands	r2, r0
900026c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026c6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026c8:	4a21      	ldr	r2, [pc, #132]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ca:	69d3      	ldr	r3, [r2, #28]
900026cc:	f043 0320 	orr.w	r3, r3, #32
900026d0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026d2:	69d3      	ldr	r3, [r2, #28]
900026d4:	069b      	lsls	r3, r3, #26
900026d6:	d4fc      	bmi.n	900026d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026d8:	2310      	movs	r3, #16
900026da:	6093      	str	r3, [r2, #8]
            if (blend)
900026dc:	b317      	cbz	r7, 90002724 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
900026de:	4b1d      	ldr	r3, [pc, #116]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026e0:	6013      	str	r3, [r2, #0]
}
900026e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900026e4:	2901      	cmp	r1, #1
900026e6:	d12c      	bne.n	90002742 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026e8:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
900026ea:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ec:	69d8      	ldr	r0, [r3, #28]
900026ee:	4a1b      	ldr	r2, [pc, #108]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026f0:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
                if (blitOp.alpha == 255)
900026f4:	bf18      	it	ne
900026f6:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	4002      	ands	r2, r0
900026fa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026fe:	f042 0210 	orr.w	r2, r2, #16
90002702:	61da      	str	r2, [r3, #28]
                break;
90002704:	e7e0      	b.n	900026c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002706:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002708:	ea46 0600 	orr.w	r6, r6, r0
9000270c:	4b10      	ldr	r3, [pc, #64]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000270e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002712:	bf14      	ite	ne
90002714:	4a12      	ldrne	r2, [pc, #72]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90002716:	f240 2201 	movweq	r2, #513	@ 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
9000271c:	601a      	str	r2, [r3, #0]
}
9000271e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002720:	4a10      	ldr	r2, [pc, #64]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002722:	e7a7      	b.n	90002674 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002724:	4b0e      	ldr	r3, [pc, #56]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002726:	6013      	str	r3, [r2, #0]
}
90002728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000272a:	4b0f      	ldr	r3, [pc, #60]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000272c:	2166      	movs	r1, #102	@ 0x66
9000272e:	4a0f      	ldr	r2, [pc, #60]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002730:	480f      	ldr	r0, [pc, #60]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002732:	f027 ffe5 	bl	9002a700 <__assert_func>
        assert(0 && "Unsupported Format!");
90002736:	4b0c      	ldr	r3, [pc, #48]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002738:	2187      	movs	r1, #135	@ 0x87
9000273a:	4a0e      	ldr	r2, [pc, #56]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000273c:	480c      	ldr	r0, [pc, #48]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000273e:	f027 ffdf 	bl	9002a700 <__assert_func>
                assert(0 && "Unsupported format");
90002742:	4b0d      	ldr	r3, [pc, #52]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002744:	f240 1111 	movw	r1, #273	@ 0x111
90002748:	4a0c      	ldr	r2, [pc, #48]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000274a:	4809      	ldr	r0, [pc, #36]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000274c:	f027 ffd8 	bl	9002a700 <__assert_func>
90002750:	52001000 	.word	0x52001000
90002754:	00020201 	.word	0x00020201
90002758:	00020009 	.word	0x00020009
9000275c:	ffff00ef 	.word	0xffff00ef
90002760:	00010201 	.word	0x00010201
90002764:	0002000a 	.word	0x0002000a
90002768:	9002bfb4 	.word	0x9002bfb4
9000276c:	9002c07c 	.word	0x9002c07c
90002770:	9002c01c 	.word	0x9002c01c
90002774:	9002bfd0 	.word	0x9002bfd0
90002778:	9002c0c8 	.word	0x9002c0c8
9000277c:	9002c0e4 	.word	0x9002c0e4

90002780 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002780:	b510      	push	{r4, lr}
90002782:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002784:	6840      	ldr	r0, [r0, #4]
90002786:	6803      	ldr	r3, [r0, #0]
90002788:	681b      	ldr	r3, [r3, #0]
9000278a:	4798      	blx	r3
9000278c:	b958      	cbnz	r0, 900027a6 <_ZN8STM32DMA5startEv+0x26>
9000278e:	7a63      	ldrb	r3, [r4, #9]
90002790:	b14b      	cbz	r3, 900027a6 <_ZN8STM32DMA5startEv+0x26>
90002792:	7a23      	ldrb	r3, [r4, #8]
90002794:	bb3b      	cbnz	r3, 900027e6 <_ZN8STM32DMA5startEv+0x66>
            execute();
90002796:	6822      	ldr	r2, [r4, #0]
90002798:	4620      	mov	r0, r4
            started_by_external_job = false;
9000279a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
9000279e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027a4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027a6:	4913      	ldr	r1, [pc, #76]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027a8:	4a13      	ldr	r2, [pc, #76]	@ (900027f8 <_ZN8STM32DMA5startEv+0x78>)
900027aa:	680b      	ldr	r3, [r1, #0]
900027ac:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027b0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027b4:	2b01      	cmp	r3, #1
900027b6:	d000      	beq.n	900027ba <_ZN8STM32DMA5startEv+0x3a>
    }
900027b8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ba:	7a20      	ldrb	r0, [r4, #8]
900027bc:	2800      	cmp	r0, #0
900027be:	d1fb      	bne.n	900027b8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027c2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027ca:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027cc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027d0:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027d2:	6808      	ldr	r0, [r1, #0]
900027d4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027d8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027dc:	b133      	cbz	r3, 900027ec <_ZN8STM32DMA5startEv+0x6c>
    }
900027de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e2:	f7ff bcdd 	b.w	900021a0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027e6:	4b03      	ldr	r3, [pc, #12]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027e8:	681b      	ldr	r3, [r3, #0]
    }
900027ea:	bd10      	pop	{r4, pc}
900027ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027f0:	f7ff bc90 	b.w	90002114 <DMA2D_CopyBuffer>
900027f4:	240001d8 	.word	0x240001d8
900027f8:	24000004 	.word	0x24000004

900027fc <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900027fc:	4b2c      	ldr	r3, [pc, #176]	@ (900028b0 <DMA2D_XferCpltCallback+0xb4>)
900027fe:	492d      	ldr	r1, [pc, #180]	@ (900028b4 <DMA2D_XferCpltCallback+0xb8>)
90002800:	681b      	ldr	r3, [r3, #0]
    {
90002802:	b510      	push	{r4, lr}
90002804:	685c      	ldr	r4, [r3, #4]
90002806:	6823      	ldr	r3, [r4, #0]
90002808:	695a      	ldr	r2, [r3, #20]
9000280a:	428a      	cmp	r2, r1
9000280c:	d122      	bne.n	90002854 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000280e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002812:	b192      	cbz	r2, 9000283a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002814:	7a23      	ldrb	r3, [r4, #8]
90002816:	2b00      	cmp	r3, #0
90002818:	d13a      	bne.n	90002890 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000281a:	6860      	ldr	r0, [r4, #4]
9000281c:	6803      	ldr	r3, [r0, #0]
9000281e:	681b      	ldr	r3, [r3, #0]
90002820:	4798      	blx	r3
90002822:	4603      	mov	r3, r0
90002824:	b9a8      	cbnz	r0, 90002852 <DMA2D_XferCpltCallback+0x56>
90002826:	7a62      	ldrb	r2, [r4, #9]
90002828:	b19a      	cbz	r2, 90002852 <DMA2D_XferCpltCallback+0x56>
                execute();
9000282a:	6822      	ldr	r2, [r4, #0]
9000282c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000282e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002832:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002838:	4718      	bx	r3
            executeCompleted();
9000283a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000283c:	4620      	mov	r0, r4
9000283e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002840:	491d      	ldr	r1, [pc, #116]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
90002842:	4a1e      	ldr	r2, [pc, #120]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002844:	680b      	ldr	r3, [r1, #0]
90002846:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000284a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000284e:	2b01      	cmp	r3, #1
90002850:	d004      	beq.n	9000285c <DMA2D_XferCpltCallback+0x60>
90002852:	bd10      	pop	{r4, pc}
90002854:	4620      	mov	r0, r4
90002856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000285a:	4710      	bx	r2
9000285c:	4818      	ldr	r0, [pc, #96]	@ (900028c0 <DMA2D_XferCpltCallback+0xc4>)
9000285e:	6800      	ldr	r0, [r0, #0]
90002860:	2800      	cmp	r0, #0
90002862:	d1f6      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
90002864:	7a20      	ldrb	r0, [r4, #8]
90002866:	2800      	cmp	r0, #0
90002868:	d1f3      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000286a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000286c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002870:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002874:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002876:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000287a:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000287c:	6808      	ldr	r0, [r1, #0]
9000287e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002882:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002886:	b17b      	cbz	r3, 900028a8 <DMA2D_XferCpltCallback+0xac>
90002888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288c:	f7ff bc88 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002890:	4b09      	ldr	r3, [pc, #36]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
90002892:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002894:	4809      	ldr	r0, [pc, #36]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002896:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002898:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000289a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000289e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028a2:	f7ff fcfd 	bl	900022a0 <DMA2D_ExternalJobCompleted>
900028a6:	e7b8      	b.n	9000281a <DMA2D_XferCpltCallback+0x1e>
900028a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ac:	f7ff bc32 	b.w	90002114 <DMA2D_CopyBuffer>
900028b0:	2402340c 	.word	0x2402340c
900028b4:	90002469 	.word	0x90002469
900028b8:	240001d8 	.word	0x240001d8
900028bc:	24000004 	.word	0x24000004
900028c0:	240001d4 	.word	0x240001d4

900028c4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028c4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028c6:	4b0c      	ldr	r3, [pc, #48]	@ (900028f8 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028c8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028ca:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028cc:	2500      	movs	r5, #0
900028ce:	300c      	adds	r0, #12
900028d0:	2260      	movs	r2, #96	@ 0x60
900028d2:	7235      	strb	r5, [r6, #8]
900028d4:	7275      	strb	r5, [r6, #9]
900028d6:	6070      	str	r0, [r6, #4]
900028d8:	f844 3b20 	str.w	r3, [r4], #32
900028dc:	4621      	mov	r1, r4
900028de:	f010 fc99 	bl	90013214 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028e2:	4621      	mov	r1, r4
900028e4:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028e8:	60cd      	str	r5, [r1, #12]
900028ea:	3124      	adds	r1, #36	@ 0x24
900028ec:	4299      	cmp	r1, r3
900028ee:	d1fb      	bne.n	900028e8 <_ZN8STM32DMAC1Ev+0x24>
}
900028f0:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028f2:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
900028f6:	bd70      	pop	{r4, r5, r6, pc}
900028f8:	9002c12c 	.word	0x9002c12c

900028fc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900028fc:	4a03      	ldr	r2, [pc, #12]	@ (9000290c <_ZN8touchgfx5paint8tearDownEv+0x10>)
900028fe:	6813      	ldr	r3, [r2, #0]
90002900:	07db      	lsls	r3, r3, #31
90002902:	d4fc      	bmi.n	900028fe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002904:	2323      	movs	r3, #35	@ 0x23
90002906:	6093      	str	r3, [r2, #8]
}
90002908:	4770      	bx	lr
9000290a:	bf00      	nop
9000290c:	52001000 	.word	0x52001000

90002910 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002910:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002912:	4c11      	ldr	r4, [pc, #68]	@ (90002958 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002914:	6825      	ldr	r5, [r4, #0]
90002916:	07ed      	lsls	r5, r5, #31
90002918:	d4fc      	bmi.n	90002914 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000291a:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000291c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
9000291e:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002920:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002922:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002926:	f04f 0502 	mov.w	r5, #2
9000292a:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000292c:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000292e:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002930:	d00b      	beq.n	9000294a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002932:	490a      	ldr	r1, [pc, #40]	@ (9000295c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002934:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002936:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000293a:	4909      	ldr	r1, [pc, #36]	@ (90002960 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000293c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
9000293e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002940:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90002942:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002944:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90002946:	bc30      	pop	{r4, r5}
90002948:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000294a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
9000294c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000294e:	4b05      	ldr	r3, [pc, #20]	@ (90002964 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002950:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002952:	6023      	str	r3, [r4, #0]
}
90002954:	bc30      	pop	{r4, r5}
90002956:	4770      	bx	lr
90002958:	52001000 	.word	0x52001000
9000295c:	00010009 	.word	0x00010009
90002960:	00020001 	.word	0x00020001
90002964:	00030001 	.word	0x00030001

90002968 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002968:	2001      	movs	r0, #1
9000296a:	4770      	bx	lr

9000296c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
9000296c:	2040      	movs	r0, #64	@ 0x40
9000296e:	4770      	bx	lr

90002970 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002970:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002974:	3008      	adds	r0, #8
90002976:	4770      	bx	lr

90002978 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002978:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
9000297c:	3008      	adds	r0, #8
9000297e:	4770      	bx	lr

90002980 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002980:	2001      	movs	r0, #1
90002982:	4770      	bx	lr

90002984 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002984:	f641 6094 	movw	r0, #7828	@ 0x1e94
90002988:	4770      	bx	lr
9000298a:	bf00      	nop

9000298c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000298c:	f641 6394 	movw	r3, #7828	@ 0x1e94
90002990:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002994:	3008      	adds	r0, #8
90002996:	4770      	bx	lr

90002998 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002998:	f641 6394 	movw	r3, #7828	@ 0x1e94
9000299c:	fb03 0001 	mla	r0, r3, r1, r0
    }
900029a0:	3008      	adds	r0, #8
900029a2:	4770      	bx	lr

900029a4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
900029a4:	2001      	movs	r0, #1
900029a6:	4770      	bx	lr

900029a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
900029a8:	2010      	movs	r0, #16
900029aa:	4770      	bx	lr

900029ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900029ac:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
900029b0:	3008      	adds	r0, #8
900029b2:	4770      	bx	lr

900029b4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900029b4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
900029b8:	3008      	adds	r0, #8
900029ba:	4770      	bx	lr

900029bc <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
900029bc:	4608      	mov	r0, r1
900029be:	f002 bea7 	b.w	90005710 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
900029c2:	bf00      	nop

900029c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
900029c4:	4b03      	ldr	r3, [pc, #12]	@ (900029d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
900029c6:	b510      	push	{r4, lr}
900029c8:	4604      	mov	r4, r0
900029ca:	6003      	str	r3, [r0, #0]
900029cc:	f00f fa6f 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
900029d0:	4620      	mov	r0, r4
900029d2:	bd10      	pop	{r4, pc}
900029d4:	9002c1e4 	.word	0x9002c1e4

900029d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
900029d8:	4b05      	ldr	r3, [pc, #20]	@ (900029f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
900029da:	b510      	push	{r4, lr}
900029dc:	4604      	mov	r4, r0
900029de:	6003      	str	r3, [r0, #0]
900029e0:	f00f fa65 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
900029e4:	2148      	movs	r1, #72	@ 0x48
900029e6:	4620      	mov	r0, r4
900029e8:	f027 fb10 	bl	9002a00c <_ZdlPvj>
900029ec:	4620      	mov	r0, r4
900029ee:	bd10      	pop	{r4, pc}
900029f0:	9002c1e4 	.word	0x9002c1e4

900029f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900029f4:	4b03      	ldr	r3, [pc, #12]	@ (90002a04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900029f6:	b510      	push	{r4, lr}
900029f8:	4604      	mov	r4, r0
900029fa:	6003      	str	r3, [r0, #0]
900029fc:	f00f fa57 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a00:	4620      	mov	r0, r4
90002a02:	bd10      	pop	{r4, pc}
90002a04:	9002c1b0 	.word	0x9002c1b0

90002a08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002a08:	4b06      	ldr	r3, [pc, #24]	@ (90002a24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002a0a:	b510      	push	{r4, lr}
90002a0c:	4604      	mov	r4, r0
90002a0e:	6003      	str	r3, [r0, #0]
90002a10:	f00f fa4d 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a14:	f641 619c 	movw	r1, #7836	@ 0x1e9c
90002a18:	4620      	mov	r0, r4
90002a1a:	f027 faf7 	bl	9002a00c <_ZdlPvj>
90002a1e:	4620      	mov	r0, r4
90002a20:	bd10      	pop	{r4, pc}
90002a22:	bf00      	nop
90002a24:	9002c1b0 	.word	0x9002c1b0

90002a28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002a28:	4b03      	ldr	r3, [pc, #12]	@ (90002a38 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002a2a:	b510      	push	{r4, lr}
90002a2c:	4604      	mov	r4, r0
90002a2e:	6003      	str	r3, [r0, #0]
90002a30:	f00f fa3d 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a34:	4620      	mov	r0, r4
90002a36:	bd10      	pop	{r4, pc}
90002a38:	9002c17c 	.word	0x9002c17c

90002a3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002a3c:	4b05      	ldr	r3, [pc, #20]	@ (90002a54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002a3e:	b510      	push	{r4, lr}
90002a40:	4604      	mov	r4, r0
90002a42:	6003      	str	r3, [r0, #0]
90002a44:	f00f fa33 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a48:	2118      	movs	r1, #24
90002a4a:	4620      	mov	r0, r4
90002a4c:	f027 fade 	bl	9002a00c <_ZdlPvj>
90002a50:	4620      	mov	r0, r4
90002a52:	bd10      	pop	{r4, pc}
90002a54:	9002c17c 	.word	0x9002c17c

90002a58 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002a58:	b510      	push	{r4, lr}
90002a5a:	4604      	mov	r4, r0
90002a5c:	490c      	ldr	r1, [pc, #48]	@ (90002a90 <_ZN12FrontendHeapD1Ev+0x38>)
90002a5e:	4a0d      	ldr	r2, [pc, #52]	@ (90002a94 <_ZN12FrontendHeapD1Ev+0x3c>)
90002a60:	f641 60c8 	movw	r0, #7880	@ 0x1ec8
90002a64:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002a68:	6021      	str	r1, [r4, #0]
90002a6a:	4420      	add	r0, r4
90002a6c:	f8c3 2ec8 	str.w	r2, [r3, #3784]	@ 0xec8
90002a70:	f00f fa1d 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a74:	4620      	mov	r0, r4
90002a76:	4b08      	ldr	r3, [pc, #32]	@ (90002a98 <_ZN12FrontendHeapD1Ev+0x40>)
90002a78:	f840 3f2c 	str.w	r3, [r0, #44]!
90002a7c:	f00f fa17 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a80:	4620      	mov	r0, r4
90002a82:	4b06      	ldr	r3, [pc, #24]	@ (90002a9c <_ZN12FrontendHeapD1Ev+0x44>)
90002a84:	f840 3f14 	str.w	r3, [r0, #20]!
90002a88:	f00f fa11 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a8c:	4620      	mov	r0, r4
90002a8e:	bd10      	pop	{r4, pc}
90002a90:	9002c218 	.word	0x9002c218
90002a94:	9002c1e4 	.word	0x9002c1e4
90002a98:	9002c1b0 	.word	0x9002c1b0
90002a9c:	9002c17c 	.word	0x9002c17c

90002aa0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002aa0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002aa2:	4c0c      	ldr	r4, [pc, #48]	@ (90002ad4 <__tcf_0+0x34>)
90002aa4:	490c      	ldr	r1, [pc, #48]	@ (90002ad8 <__tcf_0+0x38>)
90002aa6:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002aaa:	4a0c      	ldr	r2, [pc, #48]	@ (90002adc <__tcf_0+0x3c>)
90002aac:	480c      	ldr	r0, [pc, #48]	@ (90002ae0 <__tcf_0+0x40>)
90002aae:	6021      	str	r1, [r4, #0]
90002ab0:	f8c3 2ec8 	str.w	r2, [r3, #3784]	@ 0xec8
90002ab4:	f00f f9fb 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ab8:	4620      	mov	r0, r4
90002aba:	4b0a      	ldr	r3, [pc, #40]	@ (90002ae4 <__tcf_0+0x44>)
90002abc:	f840 3f2c 	str.w	r3, [r0, #44]!
90002ac0:	f00f f9f5 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac4:	4620      	mov	r0, r4
90002ac6:	4b08      	ldr	r3, [pc, #32]	@ (90002ae8 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002ac8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002acc:	f840 3f14 	str.w	r3, [r0, #20]!
90002ad0:	f00f b9ed 	b.w	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad4:	24006cf4 	.word	0x24006cf4
90002ad8:	9002c218 	.word	0x9002c218
90002adc:	9002c1e4 	.word	0x9002c1e4
90002ae0:	24008bbc 	.word	0x24008bbc
90002ae4:	9002c1b0 	.word	0x9002c1b0
90002ae8:	9002c17c 	.word	0x9002c17c

90002aec <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002aec:	b510      	push	{r4, lr}
90002aee:	4604      	mov	r4, r0
90002af0:	4a0f      	ldr	r2, [pc, #60]	@ (90002b30 <_ZN12FrontendHeapD0Ev+0x44>)
90002af2:	4910      	ldr	r1, [pc, #64]	@ (90002b34 <_ZN12FrontendHeapD0Ev+0x48>)
90002af4:	f641 60c8 	movw	r0, #7880	@ 0x1ec8
90002af8:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002afc:	6021      	str	r1, [r4, #0]
90002afe:	4420      	add	r0, r4
90002b00:	f8c3 2ec8 	str.w	r2, [r3, #3784]	@ 0xec8
90002b04:	f00f f9d3 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b08:	4620      	mov	r0, r4
90002b0a:	4b0b      	ldr	r3, [pc, #44]	@ (90002b38 <_ZN12FrontendHeapD0Ev+0x4c>)
90002b0c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b10:	f00f f9cd 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b14:	4b09      	ldr	r3, [pc, #36]	@ (90002b3c <_ZN12FrontendHeapD0Ev+0x50>)
90002b16:	4620      	mov	r0, r4
90002b18:	f840 3f14 	str.w	r3, [r0, #20]!
90002b1c:	f00f f9c7 	bl	90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b20:	4620      	mov	r0, r4
90002b22:	f242 0178 	movw	r1, #8312	@ 0x2078
90002b26:	f027 fa71 	bl	9002a00c <_ZdlPvj>
90002b2a:	4620      	mov	r0, r4
90002b2c:	bd10      	pop	{r4, pc}
90002b2e:	bf00      	nop
90002b30:	9002c1e4 	.word	0x9002c1e4
90002b34:	9002c218 	.word	0x9002c218
90002b38:	9002c1b0 	.word	0x9002c1b0
90002b3c:	9002c17c 	.word	0x9002c17c

90002b40 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002b40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002b44:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002b46:	2400      	movs	r4, #0
90002b48:	f002 f896 	bl	90004c78 <_ZN14BitmapDatabase11getInstanceEv>
90002b4c:	4605      	mov	r5, r0
90002b4e:	f002 f897 	bl	90004c80 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002b52:	4623      	mov	r3, r4
90002b54:	4601      	mov	r1, r0
90002b56:	4622      	mov	r2, r4
90002b58:	4628      	mov	r0, r5
90002b5a:	9400      	str	r4, [sp, #0]
90002b5c:	f019 f88c 	bl	9001bc78 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002b60:	4b2a      	ldr	r3, [pc, #168]	@ (90002c0c <touchgfx_init+0xcc>)
90002b62:	4a2b      	ldr	r2, [pc, #172]	@ (90002c10 <touchgfx_init+0xd0>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002b64:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002b66:	4c2b      	ldr	r4, [pc, #172]	@ (90002c14 <touchgfx_init+0xd4>)
90002b68:	601a      	str	r2, [r3, #0]
90002b6a:	f003 fd55 	bl	90006618 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002b6e:	4b2a      	ldr	r3, [pc, #168]	@ (90002c18 <touchgfx_init+0xd8>)
90002b70:	4a2a      	ldr	r2, [pc, #168]	@ (90002c1c <touchgfx_init+0xdc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002b72:	482b      	ldr	r0, [pc, #172]	@ (90002c20 <touchgfx_init+0xe0>)
90002b74:	609a      	str	r2, [r3, #8]
90002b76:	f018 ffe7 	bl	9001bb48 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002b7a:	6823      	ldr	r3, [r4, #0]
90002b7c:	f3bf 8f5b 	dmb	ish
90002b80:	07db      	lsls	r3, r3, #31
90002b82:	d505      	bpl.n	90002b90 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002b84:	4827      	ldr	r0, [pc, #156]	@ (90002c24 <touchgfx_init+0xe4>)
}
90002b86:	b002      	add	sp, #8
90002b88:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002b8c:	f7fe b9ae 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002b90:	4620      	mov	r0, r4
90002b92:	f027 fa3d 	bl	9002a010 <__cxa_guard_acquire>
90002b96:	2800      	cmp	r0, #0
90002b98:	d0f4      	beq.n	90002b84 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002b9a:	4d23      	ldr	r5, [pc, #140]	@ (90002c28 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
90002b9c:	4f23      	ldr	r7, [pc, #140]	@ (90002c2c <touchgfx_init+0xec>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002b9e:	4b24      	ldr	r3, [pc, #144]	@ (90002c30 <touchgfx_init+0xf0>)
        : presenterStorage(pres),
90002ba0:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
90002ba4:	f107 0654 	add.w	r6, r7, #84	@ 0x54
          screenStorage(scr),
90002ba8:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
90002bac:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002bae:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002bb0:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002bb2:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002bb4:	f8c5 8008 	str.w	r8, [r5, #8]
90002bb8:	f00f f97a 	bl	90011eb0 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002bbc:	4b1d      	ldr	r3, [pc, #116]	@ (90002c34 <touchgfx_init+0xf4>)
90002bbe:	4640      	mov	r0, r8
90002bc0:	616b      	str	r3, [r5, #20]
90002bc2:	f00f f975 	bl	90011eb0 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002bc6:	4b1c      	ldr	r3, [pc, #112]	@ (90002c38 <touchgfx_init+0xf8>)
90002bc8:	4638      	mov	r0, r7
90002bca:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002bcc:	f00f f970 	bl	90011eb0 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002bd0:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90002bd4:	4a19      	ldr	r2, [pc, #100]	@ (90002c3c <touchgfx_init+0xfc>)
90002bd6:	f503 6071 	add.w	r0, r3, #3856	@ 0xf10
90002bda:	f8c3 2ec8 	str.w	r2, [r3, #3784]	@ 0xec8
90002bde:	f003 fdad 	bl	9000673c <_ZN5ModelC1Ev>
90002be2:	462a      	mov	r2, r5
90002be4:	f107 0148 	add.w	r1, r7, #72	@ 0x48
90002be8:	4630      	mov	r0, r6
90002bea:	f003 fd95 	bl	90006718 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002bee:	4630      	mov	r0, r6
90002bf0:	f002 fd8e 	bl	90005710 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
90002bf4:	4812      	ldr	r0, [pc, #72]	@ (90002c40 <touchgfx_init+0x100>)
90002bf6:	f027 fda1 	bl	9002a73c <atexit>
90002bfa:	4620      	mov	r0, r4
90002bfc:	f027 fa14 	bl	9002a028 <__cxa_guard_release>
90002c00:	4808      	ldr	r0, [pc, #32]	@ (90002c24 <touchgfx_init+0xe4>)
}
90002c02:	b002      	add	sp, #8
90002c04:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c08:	f7fe b970 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002c0c:	24023470 	.word	0x24023470
90002c10:	24005ea0 	.word	0x24005ea0
90002c14:	24006cf0 	.word	0x24006cf0
90002c18:	24005ec0 	.word	0x24005ec0
90002c1c:	24005ea4 	.word	0x24005ea4
90002c20:	24000040 	.word	0x24000040
90002c24:	24005e18 	.word	0x24005e18
90002c28:	24006cf4 	.word	0x24006cf4
90002c2c:	24008bbc 	.word	0x24008bbc
90002c30:	9002c218 	.word	0x9002c218
90002c34:	9002c17c 	.word	0x9002c17c
90002c38:	9002c1b0 	.word	0x9002c1b0
90002c3c:	9002c1e4 	.word	0x9002c1e4
90002c40:	90002aa1 	.word	0x90002aa1

90002c44 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002c44:	4770      	bx	lr
90002c46:	bf00      	nop

90002c48 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002c48:	4801      	ldr	r0, [pc, #4]	@ (90002c50 <touchgfx_taskEntry+0x8>)
90002c4a:	f7fe b99d 	b.w	90000f88 <_ZN11TouchGFXHAL9taskEntryEv>
90002c4e:	bf00      	nop
90002c50:	24005e18 	.word	0x24005e18

90002c54 <_GLOBAL__sub_I_touchgfx_init>:
}
90002c54:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002c56:	4e27      	ldr	r6, [pc, #156]	@ (90002cf4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002c58:	4b27      	ldr	r3, [pc, #156]	@ (90002cf8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002c5a:	4c28      	ldr	r4, [pc, #160]	@ (90002cfc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002c5c:	4630      	mov	r0, r6
static LCD16bpp display;
90002c5e:	4d28      	ldr	r5, [pc, #160]	@ (90002d00 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002c60:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002c62:	f7ff fe2f 	bl	900028c4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002c66:	4628      	mov	r0, r5
90002c68:	f01d fade 	bl	90020228 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002c6c:	4825      	ldr	r0, [pc, #148]	@ (90002d04 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002c6e:	f016 fd1d 	bl	900196ac <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002c72:	4b25      	ldr	r3, [pc, #148]	@ (90002d08 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002c74:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002c76:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002c7a:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002c7e:	62da      	str	r2, [r3, #44]	@ 0x2c
90002c80:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002c82:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002c84:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002c88:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002c8a:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002c8c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002c90:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002c94:	4c1d      	ldr	r4, [pc, #116]	@ (90002d0c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002c96:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002c98:	4c1d      	ldr	r4, [pc, #116]	@ (90002d10 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002c9a:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002c9c:	4c1d      	ldr	r4, [pc, #116]	@ (90002d14 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002c9e:	8020      	strh	r0, [r4, #0]
90002ca0:	4c1d      	ldr	r4, [pc, #116]	@ (90002d18 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002ca2:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002ca4:	4c1d      	ldr	r4, [pc, #116]	@ (90002d1c <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002ca6:	481e      	ldr	r0, [pc, #120]	@ (90002d20 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002ca8:	8021      	strh	r1, [r4, #0]
90002caa:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002cac:	4c1d      	ldr	r4, [pc, #116]	@ (90002d24 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002cae:	491e      	ldr	r1, [pc, #120]	@ (90002d28 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002cb0:	481e      	ldr	r0, [pc, #120]	@ (90002d2c <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002cb2:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002cb6:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002cba:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002cbe:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002cc0:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002cc4:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002cc8:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002ccc:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002cd0:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002cd4:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002cd8:	7022      	strb	r2, [r4, #0]
90002cda:	6019      	str	r1, [r3, #0]
90002cdc:	4914      	ldr	r1, [pc, #80]	@ (90002d30 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002cde:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002ce2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002ce6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002cea:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002cec:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002cf0:	bd70      	pop	{r4, r5, r6, pc}
90002cf2:	bf00      	nop
90002cf4:	24005f48 	.word	0x24005f48
90002cf8:	9002b930 	.word	0x9002b930
90002cfc:	24006cec 	.word	0x24006cec
90002d00:	24005ec0 	.word	0x24005ec0
90002d04:	24005ea4 	.word	0x24005ea4
90002d08:	24005e18 	.word	0x24005e18
90002d0c:	01000001 	.word	0x01000001
90002d10:	2402340c 	.word	0x2402340c
90002d14:	24023400 	.word	0x24023400
90002d18:	24023406 	.word	0x24023406
90002d1c:	24023402 	.word	0x24023402
90002d20:	24023408 	.word	0x24023408
90002d24:	24023404 	.word	0x24023404
90002d28:	9002bac0 	.word	0x9002bac0
90002d2c:	01010000 	.word	0x01010000
90002d30:	9002b908 	.word	0x9002b908

90002d34 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002d34:	4801      	ldr	r0, [pc, #4]	@ (90002d3c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002d36:	f7ff bb43 	b.w	900023c0 <_ZN8STM32DMAD1Ev>
90002d3a:	bf00      	nop
90002d3c:	24005f48 	.word	0x24005f48

90002d40 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002d40:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002d44:	b112      	cbz	r2, 90002d4c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002d46:	6803      	ldr	r3, [r0, #0]
90002d48:	695b      	ldr	r3, [r3, #20]
90002d4a:	4718      	bx	r3
        }
    }
90002d4c:	4770      	bx	lr
90002d4e:	bf00      	nop

90002d50 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002d50:	2000      	movs	r0, #0
90002d52:	4770      	bx	lr

90002d54 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002d54:	8081      	strh	r1, [r0, #4]
    }
90002d56:	4770      	bx	lr

90002d58 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002d58:	80c1      	strh	r1, [r0, #6]
    }
90002d5a:	4770      	bx	lr

90002d5c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002d5c:	8101      	strh	r1, [r0, #8]
    }
90002d5e:	4770      	bx	lr

90002d60 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002d60:	8141      	strh	r1, [r0, #10]
    }
90002d62:	4770      	bx	lr

90002d64 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002d64:	4770      	bx	lr
90002d66:	bf00      	nop

90002d68 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002d68:	4770      	bx	lr
90002d6a:	bf00      	nop

90002d6c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002d6c:	4770      	bx	lr
90002d6e:	bf00      	nop

90002d70 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002d70:	4770      	bx	lr
90002d72:	bf00      	nop

90002d74 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002d74:	4770      	bx	lr
90002d76:	bf00      	nop

90002d78 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002d78:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002d7c:	6803      	ldr	r3, [r0, #0]
90002d7e:	eba2 020c 	sub.w	r2, r2, ip
90002d82:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002d86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002d88:	eba1 010c 	sub.w	r1, r1, ip
90002d8c:	b212      	sxth	r2, r2
90002d8e:	b209      	sxth	r1, r1
90002d90:	4718      	bx	r3
90002d92:	bf00      	nop

90002d94 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002d94:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002d96:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002d9a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002d9e:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002da2:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002da6:	6010      	str	r0, [r2, #0]
    }
90002da8:	4770      	bx	lr
90002daa:	bf00      	nop

90002dac <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002dac:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002db0:	b11a      	cbz	r2, 90002dba <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002db2:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002db6:	b102      	cbz	r2, 90002dba <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002db8:	6018      	str	r0, [r3, #0]
        }
    }
90002dba:	4770      	bx	lr

90002dbc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002dbc:	2000      	movs	r0, #0
90002dbe:	4770      	bx	lr

90002dc0 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002dc0:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002dc2:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002dc4:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002dc6:	809a      	strh	r2, [r3, #4]
    }
90002dc8:	4770      	bx	lr
90002dca:	bf00      	nop

90002dcc <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002dcc:	4770      	bx	lr
90002dce:	bf00      	nop

90002dd0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002dd0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002dd4:	4770      	bx	lr
90002dd6:	bf00      	nop

90002dd8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002dd8:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002ddc:	4770      	bx	lr
90002dde:	bf00      	nop

90002de0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002de0:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002de4:	688a      	ldr	r2, [r1, #8]
90002de6:	f8c0 c000 	str.w	ip, [r0]
90002dea:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002dec:	4770      	bx	lr
90002dee:	bf00      	nop

90002df0 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002df0:	2200      	movs	r2, #0
90002df2:	6002      	str	r2, [r0, #0]
90002df4:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002df6:	4770      	bx	lr

90002df8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002df8:	2000      	movs	r0, #0
90002dfa:	4770      	bx	lr

90002dfc <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002dfc:	7701      	strb	r1, [r0, #28]
    }
90002dfe:	4770      	bx	lr

90002e00 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002e00:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002e04:	4770      	bx	lr
90002e06:	bf00      	nop

90002e08 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002e08:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002e0c:	4770      	bx	lr
90002e0e:	bf00      	nop

90002e10 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002e10:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002e14:	4770      	bx	lr
90002e16:	bf00      	nop

90002e18 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002e18:	2001      	movs	r0, #1
90002e1a:	4770      	bx	lr

90002e1c <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002e1c:	3098      	adds	r0, #152	@ 0x98
90002e1e:	4770      	bx	lr

90002e20 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002e20:	308c      	adds	r0, #140	@ 0x8c
90002e22:	4770      	bx	lr

90002e24 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002e24:	3084      	adds	r0, #132	@ 0x84
90002e26:	4770      	bx	lr

90002e28 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002e28:	4770      	bx	lr
90002e2a:	bf00      	nop

90002e2c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002e2c:	4b03      	ldr	r3, [pc, #12]	@ (90002e3c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002e2e:	2290      	movs	r2, #144	@ 0x90
90002e30:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002e34:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002e38:	4770      	bx	lr
90002e3a:	bf00      	nop
90002e3c:	e000e100 	.word	0xe000e100

90002e40 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002e40:	4a09      	ldr	r2, [pc, #36]	@ (90002e68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002e42:	490a      	ldr	r1, [pc, #40]	@ (90002e6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002e44:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002e46:	480a      	ldr	r0, [pc, #40]	@ (90002e70 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002e48:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002e4c:	3b01      	subs	r3, #1
90002e4e:	b29b      	uxth	r3, r3
90002e50:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002e52:	6911      	ldr	r1, [r2, #16]
90002e54:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002e58:	3901      	subs	r1, #1
90002e5a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002e5c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002e5e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002e60:	f043 0301 	orr.w	r3, r3, #1
90002e64:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002e66:	4770      	bx	lr
90002e68:	50001000 	.word	0x50001000
90002e6c:	24008d6e 	.word	0x24008d6e
90002e70:	24008d6c 	.word	0x24008d6c

90002e74 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002e74:	4b01      	ldr	r3, [pc, #4]	@ (90002e7c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002e76:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002e7a:	4770      	bx	lr
90002e7c:	50001000 	.word	0x50001000

90002e80 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002e80:	4b02      	ldr	r3, [pc, #8]	@ (90002e8c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002e82:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002e84:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002e88:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002e8a:	4770      	bx	lr
90002e8c:	50001000 	.word	0x50001000

90002e90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002e90:	4770      	bx	lr
90002e92:	bf00      	nop

90002e94 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002e98:	4770      	bx	lr
90002e9a:	bf00      	nop

90002e9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002e9c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002ea0:	2300      	movs	r3, #0
90002ea2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002ea6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002eaa:	4770      	bx	lr

90002eac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002eac:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002eb0:	4770      	bx	lr
90002eb2:	bf00      	nop

90002eb4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002eb4:	b510      	push	{r4, lr}
90002eb6:	4604      	mov	r4, r0
90002eb8:	2130      	movs	r1, #48	@ 0x30
90002eba:	f027 f8a7 	bl	9002a00c <_ZdlPvj>
90002ebe:	4620      	mov	r0, r4
90002ec0:	bd10      	pop	{r4, pc}
90002ec2:	bf00      	nop

90002ec4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002ec4:	b510      	push	{r4, lr}
90002ec6:	4604      	mov	r4, r0
90002ec8:	212c      	movs	r1, #44	@ 0x2c
90002eca:	f027 f89f 	bl	9002a00c <_ZdlPvj>
90002ece:	4620      	mov	r0, r4
90002ed0:	bd10      	pop	{r4, pc}
90002ed2:	bf00      	nop

90002ed4 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002ed4:	b510      	push	{r4, lr}
90002ed6:	4604      	mov	r4, r0
90002ed8:	21bc      	movs	r1, #188	@ 0xbc
90002eda:	f027 f897 	bl	9002a00c <_ZdlPvj>
90002ede:	4620      	mov	r0, r4
90002ee0:	bd10      	pop	{r4, pc}
90002ee2:	bf00      	nop

90002ee4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002ee4:	b911      	cbnz	r1, 90002eec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002ee6:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002eea:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002eec:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002eee:	4a03      	ldr	r2, [pc, #12]	@ (90002efc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002ef0:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002ef4:	4b02      	ldr	r3, [pc, #8]	@ (90002f00 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002ef6:	4803      	ldr	r0, [pc, #12]	@ (90002f04 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002ef8:	f027 fc02 	bl	9002a700 <__assert_func>
90002efc:	9002c238 	.word	0x9002c238
90002f00:	9002c224 	.word	0x9002c224
90002f04:	9002c354 	.word	0x9002c354

90002f08 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002f08:	b921      	cbnz	r1, 90002f14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002f0a:	6840      	ldr	r0, [r0, #4]
90002f0c:	4611      	mov	r1, r2
90002f0e:	6803      	ldr	r3, [r0, #0]
90002f10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002f12:	4718      	bx	r3
        assert(handle < no_streams);
90002f14:	4b03      	ldr	r3, [pc, #12]	@ (90002f24 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002f16:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90002f1a:	4a03      	ldr	r2, [pc, #12]	@ (90002f28 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002f1c:	4803      	ldr	r0, [pc, #12]	@ (90002f2c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002f1e:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002f20:	f027 fbee 	bl	9002a700 <__assert_func>
90002f24:	9002c224 	.word	0x9002c224
90002f28:	9002c39c 	.word	0x9002c39c
90002f2c:	9002c354 	.word	0x9002c354

90002f30 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002f30:	b909      	cbnz	r1, 90002f36 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002f32:	68c0      	ldr	r0, [r0, #12]
90002f34:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002f36:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002f38:	4a03      	ldr	r2, [pc, #12]	@ (90002f48 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002f3a:	f44f 718a 	mov.w	r1, #276	@ 0x114
90002f3e:	4b03      	ldr	r3, [pc, #12]	@ (90002f4c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002f40:	4803      	ldr	r0, [pc, #12]	@ (90002f50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90002f42:	f027 fbdd 	bl	9002a700 <__assert_func>
90002f46:	bf00      	nop
90002f48:	9002c4dc 	.word	0x9002c4dc
90002f4c:	9002c224 	.word	0x9002c224
90002f50:	9002c354 	.word	0x9002c354

90002f54 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002f54:	b921      	cbnz	r1, 90002f60 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90002f56:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90002f58:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90002f5a:	e9c0 3205 	strd	r3, r2, [r0, #20]
90002f5e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002f60:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002f62:	4a03      	ldr	r2, [pc, #12]	@ (90002f70 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90002f64:	2140      	movs	r1, #64	@ 0x40
90002f66:	4b03      	ldr	r3, [pc, #12]	@ (90002f74 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002f68:	4803      	ldr	r0, [pc, #12]	@ (90002f78 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90002f6a:	f027 fbc9 	bl	9002a700 <__assert_func>
90002f6e:	bf00      	nop
90002f70:	9002c624 	.word	0x9002c624
90002f74:	9002c224 	.word	0x9002c224
90002f78:	9002c354 	.word	0x9002c354

90002f7c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90002f7c:	b508      	push	{r3, lr}
90002f7e:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90002f80:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90002f84:	b940      	cbnz	r0, 90002f98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90002f86:	2201      	movs	r2, #1
90002f88:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90002f8c:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90002f90:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90002f94:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90002f96:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002f98:	4b03      	ldr	r3, [pc, #12]	@ (90002fa8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90002f9a:	f240 116b 	movw	r1, #363	@ 0x16b
90002f9e:	4a03      	ldr	r2, [pc, #12]	@ (90002fac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90002fa0:	4803      	ldr	r0, [pc, #12]	@ (90002fb0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
90002fa2:	f027 fbad 	bl	9002a700 <__assert_func>
90002fa6:	bf00      	nop
90002fa8:	9002c770 	.word	0x9002c770
90002fac:	9002c7a0 	.word	0x9002c7a0
90002fb0:	9002c354 	.word	0x9002c354

90002fb4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002fb4:	f00f ba5e 	b.w	90012474 <_ZN8touchgfx3HAL10beginFrameEv>

90002fb8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90002fb8:	f00f ba68 	b.w	9001248c <_ZN8touchgfx3HAL8endFrameEv>

90002fbc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002fbc:	f00f ba24 	b.w	90012408 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90002fc0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90002fc0:	f00f bb85 	b.w	900126ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002fc4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002fc4:	4814      	ldr	r0, [pc, #80]	@ (90003018 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90002fc6:	6943      	ldr	r3, [r0, #20]
90002fc8:	03d9      	lsls	r1, r3, #15
90002fca:	d523      	bpl.n	90003014 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002fcc:	2300      	movs	r3, #0
{
90002fce:	b510      	push	{r4, lr}
90002fd0:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002fd4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002fd8:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002fdc:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002fe0:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002fe4:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002fe8:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002fec:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002ff0:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002ff2:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002ff6:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002ff8:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90002ffc:	1c5a      	adds	r2, r3, #1
90002ffe:	d1f8      	bne.n	90002ff2 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90003000:	f1ac 0c20 	sub.w	ip, ip, #32
90003004:	f11c 0f20 	cmn.w	ip, #32
90003008:	d1f0      	bne.n	90002fec <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000300a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000300e:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90003012:	bd10      	pop	{r4, pc}
90003014:	4770      	bx	lr
90003016:	bf00      	nop
90003018:	e000ed00 	.word	0xe000ed00

9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
9000301c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000301e:	b083      	sub	sp, #12
        assert(handle < no_streams);
90003020:	bb49      	cbnz	r1, 90003076 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
90003022:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003024:	6840      	ldr	r0, [r0, #4]
90003026:	461d      	mov	r5, r3
90003028:	4616      	mov	r6, r2
9000302a:	6803      	ldr	r3, [r0, #0]
9000302c:	691b      	ldr	r3, [r3, #16]
9000302e:	4798      	blx	r3
90003030:	b908      	cbnz	r0, 90003036 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
90003032:	b003      	add	sp, #12
90003034:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003036:	4f13      	ldr	r7, [pc, #76]	@ (90003084 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003038:	2101      	movs	r1, #1
9000303a:	6838      	ldr	r0, [r7, #0]
9000303c:	f00f ffee 	bl	9001301c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003040:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003042:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003044:	4668      	mov	r0, sp
90003046:	f016 fb17 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000304a:	4b0f      	ldr	r3, [pc, #60]	@ (90003088 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000304c:	6860      	ldr	r0, [r4, #4]
9000304e:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003050:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003054:	881b      	ldrh	r3, [r3, #0]
90003056:	f9bd 2000 	ldrsh.w	r2, [sp]
9000305a:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000305e:	6804      	ldr	r4, [r0, #0]
90003060:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003064:	69e4      	ldr	r4, [r4, #28]
90003066:	47a0      	blx	r4
90003068:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000306a:	6803      	ldr	r3, [r0, #0]
9000306c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
9000306e:	b003      	add	sp, #12
90003070:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003074:	4718      	bx	r3
        assert(handle < no_streams);
90003076:	4b05      	ldr	r3, [pc, #20]	@ (9000308c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003078:	21e9      	movs	r1, #233	@ 0xe9
9000307a:	4a05      	ldr	r2, [pc, #20]	@ (90003090 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
9000307c:	4805      	ldr	r0, [pc, #20]	@ (90003094 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000307e:	f027 fb3f 	bl	9002a700 <__assert_func>
90003082:	bf00      	nop
90003084:	2402340c 	.word	0x2402340c
90003088:	24023406 	.word	0x24023406
9000308c:	9002c224 	.word	0x9002c224
90003090:	9002c8b8 	.word	0x9002c8b8
90003094:	9002c354 	.word	0x9002c354

90003098 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003098:	4b08      	ldr	r3, [pc, #32]	@ (900030bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000309a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000309e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900030a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030a6:	f3bf 8f6f 	isb	sy
900030aa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900030ae:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900030b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030b6:	f3bf 8f6f 	isb	sy
}
900030ba:	4770      	bx	lr
900030bc:	e000e100 	.word	0xe000e100

900030c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900030c0:	4b03      	ldr	r3, [pc, #12]	@ (900030d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900030c2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900030c6:	609a      	str	r2, [r3, #8]
900030c8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900030cc:	609a      	str	r2, [r3, #8]
}
900030ce:	4770      	bx	lr
900030d0:	e000e100 	.word	0xe000e100

900030d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900030d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900030d8:	2900      	cmp	r1, #0
900030da:	f040 8096 	bne.w	9000320a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900030de:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900030e2:	4604      	mov	r4, r0
900030e4:	b933      	cbnz	r3, 900030f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900030e6:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900030ea:	b91b      	cbnz	r3, 900030f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900030ec:	2501      	movs	r5, #1
    }
900030ee:	4628      	mov	r0, r5
900030f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900030f4:	4b48      	ldr	r3, [pc, #288]	@ (90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900030f6:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900030f8:	6921      	ldr	r1, [r4, #16]
900030fa:	681b      	ldr	r3, [r3, #0]
900030fc:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
90003100:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90003104:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
90003106:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000310a:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
9000310c:	b979      	cbnz	r1, 9000312e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000310e:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
90003110:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003112:	6961      	ldr	r1, [r4, #20]
90003114:	fb01 f303 	mul.w	r3, r1, r3
90003118:	69a1      	ldr	r1, [r4, #24]
9000311a:	fb01 f202 	mul.w	r2, r1, r2
9000311e:	4293      	cmp	r3, r2
90003120:	d824      	bhi.n	9000316c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003122:	2300      	movs	r3, #0
    }
90003124:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
90003126:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000312a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
9000312e:	6813      	ldr	r3, [r2, #0]
90003130:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003132:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003134:	695b      	ldr	r3, [r3, #20]
90003136:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003138:	69e1      	ldr	r1, [r4, #28]
9000313a:	bb21      	cbnz	r1, 90003186 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
9000313c:	6a23      	ldr	r3, [r4, #32]
9000313e:	2b00      	cmp	r3, #0
90003140:	d142      	bne.n	900031c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003142:	4f36      	ldr	r7, [pc, #216]	@ (9000321c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003144:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003148:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000314a:	2d00      	cmp	r5, #0
9000314c:	d02c      	beq.n	900031a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000314e:	699b      	ldr	r3, [r3, #24]
90003150:	4630      	mov	r0, r6
90003152:	4798      	blx	r3
90003154:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003156:	6833      	ldr	r3, [r6, #0]
90003158:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000315a:	42bb      	cmp	r3, r7
9000315c:	d145      	bne.n	900031ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000315e:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003160:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003162:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003164:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003166:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003168:	60a2      	str	r2, [r4, #8]
9000316a:	e7d2      	b.n	90003112 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
9000316c:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003170:	b138      	cbz	r0, 90003182 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003172:	1a9b      	subs	r3, r3, r2
90003174:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003178:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000317a:	bf98      	it	ls
9000317c:	f102 32ff 	addls.w	r2, r2, #4294967295	@ 0xffffffff
90003180:	6222      	str	r2, [r4, #32]
            return true;
90003182:	2301      	movs	r3, #1
90003184:	e7ce      	b.n	90003124 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003186:	6833      	ldr	r3, [r6, #0]
90003188:	4630      	mov	r0, r6
9000318a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000318c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000318e:	6833      	ldr	r3, [r6, #0]
90003190:	69e5      	ldr	r5, [r4, #28]
90003192:	4630      	mov	r0, r6
90003194:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003196:	4798      	blx	r3
90003198:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
9000319a:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000319c:	bf28      	it	cs
9000319e:	2500      	movcs	r5, #0
900031a0:	4f1e      	ldr	r7, [pc, #120]	@ (9000321c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
900031a2:	bf38      	it	cc
900031a4:	2501      	movcc	r5, #1
900031a6:	e7d6      	b.n	90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900031a8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
900031aa:	42ba      	cmp	r2, r7
900031ac:	d124      	bne.n	900031f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
900031ae:	f8d6 8014 	ldr.w	r8, [r6, #20]
900031b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900031b4:	4630      	mov	r0, r6
900031b6:	4798      	blx	r3
900031b8:	4580      	cmp	r8, r0
900031ba:	d219      	bcs.n	900031f0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900031bc:	6833      	ldr	r3, [r6, #0]
900031be:	4630      	mov	r0, r6
900031c0:	699b      	ldr	r3, [r3, #24]
900031c2:	4798      	blx	r3
900031c4:	4605      	mov	r5, r0
900031c6:	e7c6      	b.n	90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900031c8:	6832      	ldr	r2, [r6, #0]
900031ca:	4f14      	ldr	r7, [pc, #80]	@ (9000321c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900031cc:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900031d0:	42ba      	cmp	r2, r7
900031d2:	d116      	bne.n	90003202 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900031d4:	6970      	ldr	r0, [r6, #20]
900031d6:	18c1      	adds	r1, r0, r3
900031d8:	4630      	mov	r0, r6
900031da:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900031dc:	6a22      	ldr	r2, [r4, #32]
900031de:	68a3      	ldr	r3, [r4, #8]
900031e0:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900031e2:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900031e4:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900031e6:	6222      	str	r2, [r4, #32]
900031e8:	e7ac      	b.n	90003144 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900031ea:	4630      	mov	r0, r6
900031ec:	4798      	blx	r3
900031ee:	e7b7      	b.n	90003160 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900031f0:	2300      	movs	r3, #0
900031f2:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900031f6:	e7ae      	b.n	90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900031f8:	4630      	mov	r0, r6
900031fa:	4790      	blx	r2
900031fc:	6833      	ldr	r3, [r6, #0]
900031fe:	4680      	mov	r8, r0
90003200:	e7d7      	b.n	900031b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003202:	4630      	mov	r0, r6
90003204:	4790      	blx	r2
90003206:	6a23      	ldr	r3, [r4, #32]
90003208:	e7e5      	b.n	900031d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
9000320a:	4b05      	ldr	r3, [pc, #20]	@ (90003220 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
9000320c:	21a9      	movs	r1, #169	@ 0xa9
9000320e:	4a05      	ldr	r2, [pc, #20]	@ (90003224 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
90003210:	4805      	ldr	r0, [pc, #20]	@ (90003228 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
90003212:	f027 fa75 	bl	9002a700 <__assert_func>
90003216:	bf00      	nop
90003218:	2402340c 	.word	0x2402340c
9000321c:	9000101d 	.word	0x9000101d
90003220:	9002c224 	.word	0x9002c224
90003224:	9002ca00 	.word	0x9002ca00
90003228:	9002c354 	.word	0x9002c354

9000322c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
9000322c:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000322e:	bb11      	cbnz	r1, 90003276 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003230:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003232:	6840      	ldr	r0, [r0, #4]
90003234:	4611      	mov	r1, r2
90003236:	461a      	mov	r2, r3
90003238:	6803      	ldr	r3, [r0, #0]
9000323a:	689b      	ldr	r3, [r3, #8]
9000323c:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000323e:	6860      	ldr	r0, [r4, #4]
90003240:	4a10      	ldr	r2, [pc, #64]	@ (90003284 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003242:	6803      	ldr	r3, [r0, #0]
90003244:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003246:	4293      	cmp	r3, r2
90003248:	d10c      	bne.n	90003264 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000324a:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000324c:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000324e:	2300      	movs	r3, #0
90003250:	4a0d      	ldr	r2, [pc, #52]	@ (90003288 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003252:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003254:	60e0      	str	r0, [r4, #12]
90003256:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003258:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000325c:	d104      	bne.n	90003268 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000325e:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003262:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003264:	4798      	blx	r3
90003266:	e7f1      	b.n	9000324c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003268:	4620      	mov	r0, r4
9000326a:	46ac      	mov	ip, r5
9000326c:	2201      	movs	r2, #1
9000326e:	4619      	mov	r1, r3
    }
90003270:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003274:	4760      	bx	ip
        assert(handle < no_streams);
90003276:	4b05      	ldr	r3, [pc, #20]	@ (9000328c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003278:	214e      	movs	r1, #78	@ 0x4e
9000327a:	4a05      	ldr	r2, [pc, #20]	@ (90003290 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
9000327c:	4805      	ldr	r0, [pc, #20]	@ (90003294 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000327e:	f027 fa3f 	bl	9002a700 <__assert_func>
90003282:	bf00      	nop
90003284:	9000101d 	.word	0x9000101d
90003288:	90003301 	.word	0x90003301
9000328c:	9002c224 	.word	0x9002c224
90003290:	9002cb34 	.word	0x9002cb34
90003294:	9002c354 	.word	0x9002c354

90003298 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003298:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000329a:	bb09      	cbnz	r1, 900032e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
9000329c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000329e:	6840      	ldr	r0, [r0, #4]
900032a0:	4611      	mov	r1, r2
900032a2:	6803      	ldr	r3, [r0, #0]
900032a4:	68db      	ldr	r3, [r3, #12]
900032a6:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032a8:	6860      	ldr	r0, [r4, #4]
900032aa:	4a10      	ldr	r2, [pc, #64]	@ (900032ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
900032ac:	6803      	ldr	r3, [r0, #0]
900032ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900032b0:	4293      	cmp	r3, r2
900032b2:	d10c      	bne.n	900032ce <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900032b4:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900032b6:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900032b8:	2300      	movs	r3, #0
900032ba:	4a0d      	ldr	r2, [pc, #52]	@ (900032f0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900032bc:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032be:	60e0      	str	r0, [r4, #12]
900032c0:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900032c2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900032c6:	d104      	bne.n	900032d2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900032c8:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900032cc:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032ce:	4798      	blx	r3
900032d0:	e7f1      	b.n	900032b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900032d2:	4620      	mov	r0, r4
900032d4:	46ac      	mov	ip, r5
900032d6:	2201      	movs	r2, #1
900032d8:	4619      	mov	r1, r3
    }
900032da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900032de:	4760      	bx	ip
        assert(handle < no_streams);
900032e0:	4b04      	ldr	r3, [pc, #16]	@ (900032f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900032e2:	215e      	movs	r1, #94	@ 0x5e
900032e4:	4a04      	ldr	r2, [pc, #16]	@ (900032f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900032e6:	4805      	ldr	r0, [pc, #20]	@ (900032fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900032e8:	f027 fa0a 	bl	9002a700 <__assert_func>
900032ec:	9000101d 	.word	0x9000101d
900032f0:	90003301 	.word	0x90003301
900032f4:	9002c224 	.word	0x9002c224
900032f8:	9002cca0 	.word	0x9002cca0
900032fc:	9002c354 	.word	0x9002c354

90003300 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003300:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003302:	2900      	cmp	r1, #0
90003304:	d14f      	bne.n	900033a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
90003306:	4604      	mov	r4, r0
        switch (cmd)
90003308:	2a05      	cmp	r2, #5
9000330a:	d80b      	bhi.n	90003324 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
9000330c:	e8df f002 	tbb	[pc, r2]
90003310:	3c373311 	.word	0x3c373311
90003314:	0b03      	.short	0x0b03
            stream.isPlaying = false;
90003316:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
90003318:	2201      	movs	r2, #1
            stream.isPlaying = false;
9000331a:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
9000331e:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003320:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003322:	6103      	str	r3, [r0, #16]
    }
90003324:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
90003326:	3b00      	subs	r3, #0
90003328:	bf18      	it	ne
9000332a:	2301      	movne	r3, #1
9000332c:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003330:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003332:	6840      	ldr	r0, [r0, #4]
90003334:	6803      	ldr	r3, [r0, #0]
90003336:	691b      	ldr	r3, [r3, #16]
90003338:	4798      	blx	r3
9000333a:	2800      	cmp	r0, #0
9000333c:	d0f2      	beq.n	90003324 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
9000333e:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003340:	2101      	movs	r1, #1
                if (!stream.repeat)
90003342:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003346:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000334a:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
9000334c:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000334e:	2a00      	cmp	r2, #0
90003350:	d1e8      	bne.n	90003324 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003352:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003354:	4917      	ldr	r1, [pc, #92]	@ (900033b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003356:	6823      	ldr	r3, [r4, #0]
90003358:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000335a:	428a      	cmp	r2, r1
9000335c:	d11e      	bne.n	9000339c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000335e:	6965      	ldr	r5, [r4, #20]
90003360:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003362:	4620      	mov	r0, r4
90003364:	4798      	blx	r3
90003366:	4285      	cmp	r5, r0
90003368:	d1dc      	bne.n	90003324 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000336a:	6823      	ldr	r3, [r4, #0]
9000336c:	4620      	mov	r0, r4
9000336e:	699b      	ldr	r3, [r3, #24]
    }
90003370:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003374:	4718      	bx	r3
            stream.isPlaying = false;
90003376:	2300      	movs	r3, #0
90003378:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
9000337c:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000337e:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003380:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
90003382:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003384:	6102      	str	r2, [r0, #16]
    }
90003386:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003388:	2101      	movs	r1, #1
            stream.frameCount = 0;
9000338a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000338c:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000338e:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
90003392:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003396:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003398:	6102      	str	r2, [r0, #16]
    }
9000339a:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000339c:	4620      	mov	r0, r4
9000339e:	4790      	blx	r2
900033a0:	6823      	ldr	r3, [r4, #0]
900033a2:	4605      	mov	r5, r0
900033a4:	e7dc      	b.n	90003360 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
900033a6:	4b04      	ldr	r3, [pc, #16]	@ (900033b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
900033a8:	216e      	movs	r1, #110	@ 0x6e
900033aa:	4a04      	ldr	r2, [pc, #16]	@ (900033bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
900033ac:	4804      	ldr	r0, [pc, #16]	@ (900033c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
900033ae:	f027 f9a7 	bl	9002a700 <__assert_func>
900033b2:	bf00      	nop
900033b4:	9000101d 	.word	0x9000101d
900033b8:	9002c224 	.word	0x9002c224
900033bc:	9002cdd8 	.word	0x9002cdd8
900033c0:	9002c354 	.word	0x9002c354

900033c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900033c4:	b538      	push	{r3, r4, r5, lr}
900033c6:	4604      	mov	r4, r0
    HAL::initialize();
900033c8:	f00f f86d 	bl	900124a6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900033cc:	6823      	ldr	r3, [r4, #0]
900033ce:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
900033d0:	f015 f83e 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
900033d4:	4601      	mov	r1, r0
900033d6:	4620      	mov	r0, r4
900033d8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900033da:	6823      	ldr	r3, [r4, #0]
900033dc:	4a13      	ldr	r2, [pc, #76]	@ (9000342c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900033de:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
900033e2:	4295      	cmp	r5, r2
900033e4:	d116      	bne.n	90003414 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900033e6:	4a12      	ldr	r2, [pc, #72]	@ (90003430 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900033e8:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900033ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900033ee:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900033f2:	4810      	ldr	r0, [pc, #64]	@ (90003434 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900033f4:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900033f8:	4a0f      	ldr	r2, [pc, #60]	@ (90003438 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900033fa:	7005      	strb	r5, [r0, #0]
900033fc:	4293      	cmp	r3, r2
900033fe:	d110      	bne.n	90003422 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003400:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003402:	4a0e      	ldr	r2, [pc, #56]	@ (9000343c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003404:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003406:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
90003408:	4b0d      	ldr	r3, [pc, #52]	@ (90003440 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
9000340a:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
9000340c:	4a0d      	ldr	r2, [pc, #52]	@ (90003444 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
9000340e:	6459      	str	r1, [r3, #68]	@ 0x44
90003410:	6053      	str	r3, [r2, #4]
}
90003412:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003414:	4a0c      	ldr	r2, [pc, #48]	@ (90003448 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
90003416:	2300      	movs	r3, #0
90003418:	4620      	mov	r0, r4
9000341a:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
9000341e:	47a8      	blx	r5
90003420:	e7f2      	b.n	90003408 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003422:	2100      	movs	r1, #0
90003424:	4620      	mov	r0, r4
90003426:	4798      	blx	r3
90003428:	e7ee      	b.n	90003408 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000342a:	bf00      	nop
9000342c:	90000f31 	.word	0x90000f31
90003430:	d003fc00 	.word	0xd003fc00
90003434:	2402340a 	.word	0x2402340a
90003438:	90000d6d 	.word	0x90000d6d
9000343c:	2402340b 	.word	0x2402340b
90003440:	24008e60 	.word	0x24008e60
90003444:	24008e30 	.word	0x24008e30
90003448:	d007f800 	.word	0xd007f800

9000344c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
9000344c:	4842      	ldr	r0, [pc, #264]	@ (90003558 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
9000344e:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003450:	6804      	ldr	r4, [r0, #0]
90003452:	f3bf 8f5b 	dmb	ish
90003456:	f014 0401 	ands.w	r4, r4, #1
9000345a:	d001      	beq.n	90003460 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
9000345c:	483f      	ldr	r0, [pc, #252]	@ (9000355c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000345e:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003460:	f026 fdd6 	bl	9002a010 <__cxa_guard_acquire>
90003464:	2800      	cmp	r0, #0
90003466:	d0f9      	beq.n	9000345c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003468:	4d3c      	ldr	r5, [pc, #240]	@ (9000355c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000346a:	4b3d      	ldr	r3, [pc, #244]	@ (90003560 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000346c:	4e3d      	ldr	r6, [pc, #244]	@ (90003564 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000346e:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003472:	612c      	str	r4, [r5, #16]
90003474:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003478:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
9000347c:	e9c5 3400 	strd	r3, r4, [r5]
90003480:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003484:	f016 fb71 	bl	90019b6a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003488:	f105 0058 	add.w	r0, r5, #88	@ 0x58
9000348c:	f011 ff8e 	bl	900153ac <_ZN8touchgfx12CanvasWidgetC1Ev>
90003490:	4935      	ldr	r1, [pc, #212]	@ (90003568 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90003492:	4a36      	ldr	r2, [pc, #216]	@ (9000356c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
90003494:	6833      	ldr	r3, [r6, #0]
90003496:	65a9      	str	r1, [r5, #88]	@ 0x58
90003498:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
9000349c:	4934      	ldr	r1, [pc, #208]	@ (90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
9000349e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
900034a2:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
900034a6:	6029      	str	r1, [r5, #0]
900034a8:	b192      	cbz	r2, 900034d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
900034aa:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900034ac:	2800      	cmp	r0, #0
900034ae:	d03f      	beq.n	90003530 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900034b0:	6803      	ldr	r3, [r0, #0]
900034b2:	4c30      	ldr	r4, [pc, #192]	@ (90003574 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
900034b4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900034b6:	42a2      	cmp	r2, r4
900034b8:	d017      	beq.n	900034ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900034ba:	4790      	blx	r2
        return auxiliaryLCD;
900034bc:	6833      	ldr	r3, [r6, #0]
900034be:	fab0 f680 	clz	r6, r0
900034c2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900034c4:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900034c6:	2800      	cmp	r0, #0
900034c8:	d03e      	beq.n	90003548 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900034ca:	6803      	ldr	r3, [r0, #0]
900034cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900034ce:	e00a      	b.n	900034e6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900034d0:	6898      	ldr	r0, [r3, #8]
900034d2:	4c28      	ldr	r4, [pc, #160]	@ (90003574 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900034d4:	6802      	ldr	r2, [r0, #0]
900034d6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900034d8:	42a2      	cmp	r2, r4
900034da:	d1ee      	bne.n	900034ba <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900034dc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900034de:	b120      	cbz	r0, 900034ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900034e0:	6803      	ldr	r3, [r0, #0]
900034e2:	2601      	movs	r6, #1
900034e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900034e6:	42a3      	cmp	r3, r4
900034e8:	d129      	bne.n	9000353e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900034ea:	4923      	ldr	r1, [pc, #140]	@ (90003578 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900034ec:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900034ee:	2300      	movs	r3, #0
        : AbstractPainter(),
900034f0:	2464      	movs	r4, #100	@ 0x64
900034f2:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
900034f6:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900034fa:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900034fe:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
90003502:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
90003506:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
9000350a:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
9000350e:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
90003512:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
90003516:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
9000351a:	4a18      	ldr	r2, [pc, #96]	@ (9000357c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
9000351c:	4818      	ldr	r0, [pc, #96]	@ (90003580 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
9000351e:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003522:	f027 f90b 	bl	9002a73c <atexit>
90003526:	480c      	ldr	r0, [pc, #48]	@ (90003558 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
90003528:	f026 fd7e 	bl	9002a028 <__cxa_guard_release>
}
9000352c:	480b      	ldr	r0, [pc, #44]	@ (9000355c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000352e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003530:	6898      	ldr	r0, [r3, #8]
90003532:	4c10      	ldr	r4, [pc, #64]	@ (90003574 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003534:	6803      	ldr	r3, [r0, #0]
90003536:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003538:	42a2      	cmp	r2, r4
9000353a:	d0d6      	beq.n	900034ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000353c:	e7bd      	b.n	900034ba <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000353e:	4798      	blx	r3
90003540:	2800      	cmp	r0, #0
90003542:	bf08      	it	eq
90003544:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003548:	2e00      	cmp	r6, #0
9000354a:	d1ce      	bne.n	900034ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000354c:	4b0d      	ldr	r3, [pc, #52]	@ (90003584 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
9000354e:	212c      	movs	r1, #44	@ 0x2c
90003550:	4a0d      	ldr	r2, [pc, #52]	@ (90003588 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003552:	480e      	ldr	r0, [pc, #56]	@ (9000358c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003554:	f027 f8d4 	bl	9002a700 <__assert_func>
90003558:	24008d70 	.word	0x24008d70
9000355c:	24008d74 	.word	0x24008d74
90003560:	9002e384 	.word	0x9002e384
90003564:	2402340c 	.word	0x2402340c
90003568:	9002d064 	.word	0x9002d064
9000356c:	9002d044 	.word	0x9002d044
90003570:	9002d0dc 	.word	0x9002d0dc
90003574:	90002df9 	.word	0x90002df9
90003578:	9002e338 	.word	0x9002e338
9000357c:	9002e318 	.word	0x9002e318
90003580:	90002e29 	.word	0x90002e29
90003584:	9002cf3c 	.word	0x9002cf3c
90003588:	9002cf9c 	.word	0x9002cf9c
9000358c:	9002cfd8 	.word	0x9002cfd8

90003590 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003590:	b510      	push	{r4, lr}
        return instance;
90003592:	4c14      	ldr	r4, [pc, #80]	@ (900035e4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90003594:	6823      	ldr	r3, [r4, #0]
90003596:	b323      	cbz	r3, 900035e2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003598:	4b13      	ldr	r3, [pc, #76]	@ (900035e8 <HAL_LTDC_LineEventCallback+0x58>)
9000359a:	4a14      	ldr	r2, [pc, #80]	@ (900035ec <HAL_LTDC_LineEventCallback+0x5c>)
9000359c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000359e:	8811      	ldrh	r1, [r2, #0]
900035a0:	428b      	cmp	r3, r1
900035a2:	d00a      	beq.n	900035ba <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
900035a4:	f008 f8e4 	bl	9000b770 <HAL_LTDC_ProgramLineEvent>
900035a8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
900035aa:	6803      	ldr	r3, [r0, #0]
900035ac:	6a1b      	ldr	r3, [r3, #32]
900035ae:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
900035b0:	2000      	movs	r0, #0
        }
    }
900035b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900035b6:	f7fd bb7d 	b.w	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900035ba:	4b0d      	ldr	r3, [pc, #52]	@ (900035f0 <HAL_LTDC_LineEventCallback+0x60>)
900035bc:	8819      	ldrh	r1, [r3, #0]
900035be:	f008 f8d7 	bl	9000b770 <HAL_LTDC_ProgramLineEvent>
        return instance;
900035c2:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900035c4:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
900035c8:	3301      	adds	r3, #1
900035ca:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
900035ce:	f7fe fed1 	bl	90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900035d2:	6820      	ldr	r0, [r4, #0]
900035d4:	f00f fcc0 	bl	90012f58 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900035d8:	2000      	movs	r0, #0
    }
900035da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900035de:	f7fd bb35 	b.w	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900035e2:	bd10      	pop	{r4, pc}
900035e4:	2402340c 	.word	0x2402340c
900035e8:	50001000 	.word	0x50001000
900035ec:	24008d6e 	.word	0x24008d6e
900035f0:	24008d6c 	.word	0x24008d6c

900035f4 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900035f4:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900035f6:	480b      	ldr	r0, [pc, #44]	@ (90003624 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900035f8:	f7fd fe86 	bl	90001308 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900035fc:	4c0a      	ldr	r4, [pc, #40]	@ (90003628 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900035fe:	4b0b      	ldr	r3, [pc, #44]	@ (9000362c <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
90003600:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
90003602:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
90003606:	2101      	movs	r1, #1
90003608:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
9000360a:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
9000360c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
90003610:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
90003614:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
90003616:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
9000361a:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
9000361e:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
90003622:	bd10      	pop	{r4, pc}
90003624:	24008e60 	.word	0x24008e60
90003628:	9002d128 	.word	0x9002d128
9000362c:	24008e30 	.word	0x24008e30

90003630 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003630:	4901      	ldr	r1, [pc, #4]	@ (90003638 <vApplicationIdleHook+0x8>)
90003632:	2000      	movs	r0, #0
90003634:	f00d bf2e 	b.w	90011494 <vTaskSetApplicationTaskTag>
90003638:	90000ffd 	.word	0x90000ffd

9000363c <StartDefaultTask>:
void StartDefaultTask(void *argument)
{
  /* USER CODE BEGIN 5 */
  /* Infinite loop */

  for(;;)
9000363c:	e7fe      	b.n	9000363c <StartDefaultTask>
9000363e:	bf00      	nop

90003640 <inputReadStick1>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_inputReadStick1 */
void inputReadStick1(void *argument)
{
90003640:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	ADC_ChannelConfTypeDef sConfig1 = {0}; // Declare and initialize sConfig2
	HAL_ADC_ConfigChannel(&hadc1, &sConfig1); // Configure channel for the desired pin
	for(;;)
	{
	// Read the analog value from the pin using hadc1
	HAL_ADC_Start(&hadc1);
90003644:	4d21      	ldr	r5, [pc, #132]	@ (900036cc <inputReadStick1+0x8c>)
{
90003646:	b089      	sub	sp, #36	@ 0x24
	ADC_ChannelConfTypeDef sConfig1 = {0}; // Declare and initialize sConfig2
90003648:	2300      	movs	r3, #0
9000364a:	4e21      	ldr	r6, [pc, #132]	@ (900036d0 <inputReadStick1+0x90>)
9000364c:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 900036d4 <inputReadStick1+0x94>
	HAL_ADC_ConfigChannel(&hadc1, &sConfig1); // Configure channel for the desired pin
90003650:	a901      	add	r1, sp, #4

	HAL_ADC_PollForConversion(&hadc1, 0);
	uint32_t analogValue = HAL_ADC_GetValue(&hadc1);
	int transform=analogValue/1000-31;
90003652:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 900036d8 <inputReadStick1+0x98>
	HAL_ADC_ConfigChannel(&hadc1, &sConfig1); // Configure channel for the desired pin
90003656:	4628      	mov	r0, r5
	ADC_ChannelConfTypeDef sConfig1 = {0}; // Declare and initialize sConfig2
90003658:	9307      	str	r3, [sp, #28]
9000365a:	e9cd 3301 	strd	r3, r3, [sp, #4]
9000365e:	e9cd 3303 	strd	r3, r3, [sp, #12]
90003662:	e9cd 3305 	strd	r3, r3, [sp, #20]
	HAL_ADC_ConfigChannel(&hadc1, &sConfig1); // Configure channel for the desired pin
90003666:	f004 fc05 	bl	90007e74 <HAL_ADC_ConfigChannel>
	HAL_ADC_Start(&hadc1);
9000366a:	4628      	mov	r0, r5
9000366c:	f004 feec 	bl	90008448 <HAL_ADC_Start>
	HAL_ADC_PollForConversion(&hadc1, 0);
90003670:	2100      	movs	r1, #0
90003672:	4628      	mov	r0, r5
90003674:	f004 fb78 	bl	90007d68 <HAL_ADC_PollForConversion>
	uint32_t analogValue = HAL_ADC_GetValue(&hadc1);
90003678:	4628      	mov	r0, r5
9000367a:	f004 fbf7 	bl	90007e6c <HAL_ADC_GetValue>
9000367e:	4604      	mov	r4, r0
	HAL_ADC_Stop(&hadc1);
90003680:	4628      	mov	r0, r5
90003682:	f004 ff99 	bl	900085b8 <HAL_ADC_Stop>
	int transform=analogValue/1000-31;
90003686:	fba9 3c04 	umull	r3, ip, r9, r4
	leftStick.p.y-=transform/10;
9000368a:	f8df e050 	ldr.w	lr, [pc, #80]	@ 900036dc <inputReadStick1+0x9c>
	leftStick.p.y= leftStick.p.y <10 ? 10 :leftStick.p.y;
	leftStick.p.y= leftStick.p.y >202 ? 202 :leftStick.p.y;
	osMessageQueuePut(stickQue1Handle, &leftStick, 0, 0);
9000368e:	2300      	movs	r3, #0
	int transform=analogValue/1000-31;
90003690:	ea4f 1c9c 	mov.w	ip, ip, lsr #6
	leftStick.p.y-=transform/10;
90003694:	6877      	ldr	r7, [r6, #4]
	osMessageQueuePut(stickQue1Handle, &leftStick, 0, 0);
90003696:	490e      	ldr	r1, [pc, #56]	@ (900036d0 <inputReadStick1+0x90>)
90003698:	461a      	mov	r2, r3
	int transform=analogValue/1000-31;
9000369a:	f1ac 0c1f 	sub.w	ip, ip, #31
	osMessageQueuePut(stickQue1Handle, &leftStick, 0, 0);
9000369e:	f8d8 0000 	ldr.w	r0, [r8]
	leftStick.p.y-=transform/10;
900036a2:	fb8e 4e0c 	smull	r4, lr, lr, ip
900036a6:	ea4f 74ec 	mov.w	r4, ip, asr #31
900036aa:	eba4 04ae 	sub.w	r4, r4, lr, asr #2
900036ae:	443c      	add	r4, r7
	leftStick.p.y= leftStick.p.y <10 ? 10 :leftStick.p.y;
900036b0:	2c0a      	cmp	r4, #10
900036b2:	bfb8      	it	lt
900036b4:	240a      	movlt	r4, #10
	leftStick.p.y= leftStick.p.y >202 ? 202 :leftStick.p.y;
900036b6:	2cca      	cmp	r4, #202	@ 0xca
900036b8:	bfa8      	it	ge
900036ba:	24ca      	movge	r4, #202	@ 0xca
900036bc:	6074      	str	r4, [r6, #4]
	osMessageQueuePut(stickQue1Handle, &leftStick, 0, 0);
900036be:	f00b fe4d 	bl	9000f35c <osMessageQueuePut>
	osDelay(10);
900036c2:	200a      	movs	r0, #10
900036c4:	f00b fd58 	bl	9000f178 <osDelay>
	for(;;)
900036c8:	e7cf      	b.n	9000366a <inputReadStick1+0x2a>
900036ca:	bf00      	nop
900036cc:	24009264 	.word	0x24009264
900036d0:	240092d8 	.word	0x240092d8
900036d4:	24008eb4 	.word	0x24008eb4
900036d8:	10624dd3 	.word	0x10624dd3
900036dc:	66666667 	.word	0x66666667

900036e0 <inputReadStick2>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_inputReadStick2 */
void inputReadStick2(void *argument)
{
900036e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  ADC_ChannelConfTypeDef sConfig2 = {0}; // Declare and initialize sConfig2
  HAL_ADC_ConfigChannel(&hadc2, &sConfig2); // Configure channel for the desired pin
  for(;;)
  {
    // Read the analog value from a different pin using hadc1
    HAL_ADC_Start(&hadc2);
900036e4:	4d21      	ldr	r5, [pc, #132]	@ (9000376c <inputReadStick2+0x8c>)
{
900036e6:	b089      	sub	sp, #36	@ 0x24
  ADC_ChannelConfTypeDef sConfig2 = {0}; // Declare and initialize sConfig2
900036e8:	2300      	movs	r3, #0
900036ea:	4e21      	ldr	r6, [pc, #132]	@ (90003770 <inputReadStick2+0x90>)
900036ec:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 90003774 <inputReadStick2+0x94>
  HAL_ADC_ConfigChannel(&hadc2, &sConfig2); // Configure channel for the desired pin
900036f0:	a901      	add	r1, sp, #4

    HAL_ADC_PollForConversion(&hadc2, 0);
    uint32_t analogValue = HAL_ADC_GetValue(&hadc2);
    HAL_ADC_Stop(&hadc2);
    int transform=analogValue/1000-31;
900036f2:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 90003778 <inputReadStick2+0x98>
  HAL_ADC_ConfigChannel(&hadc2, &sConfig2); // Configure channel for the desired pin
900036f6:	4628      	mov	r0, r5
  ADC_ChannelConfTypeDef sConfig2 = {0}; // Declare and initialize sConfig2
900036f8:	9307      	str	r3, [sp, #28]
900036fa:	e9cd 3301 	strd	r3, r3, [sp, #4]
900036fe:	e9cd 3303 	strd	r3, r3, [sp, #12]
90003702:	e9cd 3305 	strd	r3, r3, [sp, #20]
  HAL_ADC_ConfigChannel(&hadc2, &sConfig2); // Configure channel for the desired pin
90003706:	f004 fbb5 	bl	90007e74 <HAL_ADC_ConfigChannel>
    HAL_ADC_Start(&hadc2);
9000370a:	4628      	mov	r0, r5
9000370c:	f004 fe9c 	bl	90008448 <HAL_ADC_Start>
    HAL_ADC_PollForConversion(&hadc2, 0);
90003710:	2100      	movs	r1, #0
90003712:	4628      	mov	r0, r5
90003714:	f004 fb28 	bl	90007d68 <HAL_ADC_PollForConversion>
    uint32_t analogValue = HAL_ADC_GetValue(&hadc2);
90003718:	4628      	mov	r0, r5
9000371a:	f004 fba7 	bl	90007e6c <HAL_ADC_GetValue>
9000371e:	4604      	mov	r4, r0
    HAL_ADC_Stop(&hadc2);
90003720:	4628      	mov	r0, r5
90003722:	f004 ff49 	bl	900085b8 <HAL_ADC_Stop>
    int transform=analogValue/1000-31;
90003726:	fba9 3c04 	umull	r3, ip, r9, r4
    // Add the analog value to stickQue2Handle message queue
	rightStick.p.y-=transform/10;
9000372a:	f8df e050 	ldr.w	lr, [pc, #80]	@ 9000377c <inputReadStick2+0x9c>
	rightStick.p.y= rightStick.p.y <10 ? 10 :rightStick.p.y;
	rightStick.p.y= rightStick.p.y >202 ? 202 :rightStick.p.y;
	osMessageQueuePut(stickQue2Handle, &rightStick.p, 0,0);
9000372e:	2300      	movs	r3, #0
    int transform=analogValue/1000-31;
90003730:	ea4f 1c9c 	mov.w	ip, ip, lsr #6
	rightStick.p.y-=transform/10;
90003734:	6877      	ldr	r7, [r6, #4]
	osMessageQueuePut(stickQue2Handle, &rightStick.p, 0,0);
90003736:	490e      	ldr	r1, [pc, #56]	@ (90003770 <inputReadStick2+0x90>)
90003738:	461a      	mov	r2, r3
    int transform=analogValue/1000-31;
9000373a:	f1ac 0c1f 	sub.w	ip, ip, #31
	osMessageQueuePut(stickQue2Handle, &rightStick.p, 0,0);
9000373e:	f8d8 0000 	ldr.w	r0, [r8]
	rightStick.p.y-=transform/10;
90003742:	fb8e 4e0c 	smull	r4, lr, lr, ip
90003746:	ea4f 74ec 	mov.w	r4, ip, asr #31
9000374a:	eba4 04ae 	sub.w	r4, r4, lr, asr #2
9000374e:	443c      	add	r4, r7
	rightStick.p.y= rightStick.p.y <10 ? 10 :rightStick.p.y;
90003750:	2c0a      	cmp	r4, #10
90003752:	bfb8      	it	lt
90003754:	240a      	movlt	r4, #10
	rightStick.p.y= rightStick.p.y >202 ? 202 :rightStick.p.y;
90003756:	2cca      	cmp	r4, #202	@ 0xca
90003758:	bfa8      	it	ge
9000375a:	24ca      	movge	r4, #202	@ 0xca
9000375c:	6074      	str	r4, [r6, #4]
	osMessageQueuePut(stickQue2Handle, &rightStick.p, 0,0);
9000375e:	f00b fdfd 	bl	9000f35c <osMessageQueuePut>
	osDelay(10);
90003762:	200a      	movs	r0, #10
90003764:	f00b fd08 	bl	9000f178 <osDelay>
  for(;;)
90003768:	e7cf      	b.n	9000370a <inputReadStick2+0x2a>
9000376a:	bf00      	nop
9000376c:	24009200 	.word	0x24009200
90003770:	240092e8 	.word	0x240092e8
90003774:	24008eb0 	.word	0x24008eb0
90003778:	10624dd3 	.word	0x10624dd3
9000377c:	66666667 	.word	0x66666667

90003780 <Bot>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Bot */
void Bot(void *argument)
{
90003780:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003784:	ed2d 8b02 	vpush	{d8}
  /* Infinite loop */
	while(1){

		int tmp= ballPos.y+(rand()%60-30);

		int dif= (rightStick.p.y-tmp)*0.1;
90003788:	ed9f 8b1d 	vldr	d8, [pc, #116]	@ 90003800 <Bot+0x80>
9000378c:	4f1e      	ldr	r7, [pc, #120]	@ (90003808 <Bot+0x88>)
9000378e:	f8df 9080 	ldr.w	r9, [pc, #128]	@ 90003810 <Bot+0x90>
90003792:	4e1e      	ldr	r6, [pc, #120]	@ (9000380c <Bot+0x8c>)
		int tmp= ballPos.y+(rand()%60-30);
90003794:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 90003814 <Bot+0x94>
90003798:	f8d7 8004 	ldr.w	r8, [r7, #4]
9000379c:	f027 f8c0 	bl	9002a920 <rand>
900037a0:	4684      	mov	ip, r0
		int dif= (rightStick.p.y-tmp)*0.1;
900037a2:	f8d9 4004 	ldr.w	r4, [r9, #4]

		rightStick.p.y-=dif;
		rightStick.p.y= rightStick.p.y <10 ? 10 :rightStick.p.y;
		rightStick.p.y= rightStick.p.y >202 ? 202 :rightStick.p.y;
		osMessageQueuePut(stickQue2Handle, &rightStick.p, 0,0);
900037a6:	2300      	movs	r3, #0
900037a8:	4649      	mov	r1, r9
		int tmp= ballPos.y+(rand()%60-30);
900037aa:	fb8b ea0c 	smull	lr, sl, fp, ip
900037ae:	ea4f 7eec 	mov.w	lr, ip, asr #31
		osMessageQueuePut(stickQue2Handle, &rightStick.p, 0,0);
900037b2:	6830      	ldr	r0, [r6, #0]
900037b4:	461a      	mov	r2, r3
		int tmp= ballPos.y+(rand()%60-30);
900037b6:	44e2      	add	sl, ip
900037b8:	ebce 1e6a 	rsb	lr, lr, sl, asr #5
900037bc:	ebce 1e0e 	rsb	lr, lr, lr, lsl #4
900037c0:	ebac 0c8e 	sub.w	ip, ip, lr, lsl #2
900037c4:	f1ac 0c1e 	sub.w	ip, ip, #30
900037c8:	44c4      	add	ip, r8
		int dif= (rightStick.p.y-tmp)*0.1;
900037ca:	eba4 050c 	sub.w	r5, r4, ip
900037ce:	ee07 5a10 	vmov	s14, r5
900037d2:	eeb8 7bc7 	vcvt.f64.s32	d7, s14
900037d6:	ee27 7b08 	vmul.f64	d7, d7, d8
900037da:	eebd 7bc7 	vcvt.s32.f64	s14, d7
		rightStick.p.y-=dif;
900037de:	ee17 5a10 	vmov	r5, s14
900037e2:	1b64      	subs	r4, r4, r5
		rightStick.p.y= rightStick.p.y <10 ? 10 :rightStick.p.y;
900037e4:	2c0a      	cmp	r4, #10
900037e6:	bfb8      	it	lt
900037e8:	240a      	movlt	r4, #10
		rightStick.p.y= rightStick.p.y >202 ? 202 :rightStick.p.y;
900037ea:	2cca      	cmp	r4, #202	@ 0xca
900037ec:	bfa8      	it	ge
900037ee:	24ca      	movge	r4, #202	@ 0xca
900037f0:	f8c9 4004 	str.w	r4, [r9, #4]
		osMessageQueuePut(stickQue2Handle, &rightStick.p, 0,0);
900037f4:	f00b fdb2 	bl	9000f35c <osMessageQueuePut>
		osDelay(30);
900037f8:	201e      	movs	r0, #30
900037fa:	f00b fcbd 	bl	9000f178 <osDelay>
	while(1){
900037fe:	e7cb      	b.n	90003798 <Bot+0x18>
90003800:	9999999a 	.word	0x9999999a
90003804:	3fb99999 	.word	0x3fb99999
90003808:	240092d0 	.word	0x240092d0
9000380c:	24008eb0 	.word	0x24008eb0
90003810:	240092e8 	.word	0x240092e8
90003814:	88888889 	.word	0x88888889

90003818 <SystemClock_Config>:
{
90003818:	b570      	push	{r4, r5, r6, lr}
9000381a:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
9000381c:	224c      	movs	r2, #76	@ 0x4c
9000381e:	2100      	movs	r1, #0
90003820:	a80a      	add	r0, sp, #40	@ 0x28
90003822:	f027 fa97 	bl	9002ad54 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003826:	2220      	movs	r2, #32
90003828:	2100      	movs	r1, #0
9000382a:	a802      	add	r0, sp, #8
9000382c:	f027 fa92 	bl	9002ad54 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003830:	2002      	movs	r0, #2
90003832:	f008 fa07 	bl	9000bc44 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90003836:	4b22      	ldr	r3, [pc, #136]	@ (900038c0 <SystemClock_Config+0xa8>)
90003838:	2100      	movs	r1, #0
9000383a:	4a22      	ldr	r2, [pc, #136]	@ (900038c4 <SystemClock_Config+0xac>)
9000383c:	9101      	str	r1, [sp, #4]
9000383e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003840:	f021 0101 	bic.w	r1, r1, #1
90003844:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003846:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003848:	f003 0301 	and.w	r3, r3, #1
9000384c:	9301      	str	r3, [sp, #4]
9000384e:	6993      	ldr	r3, [r2, #24]
90003850:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
90003854:	6193      	str	r3, [r2, #24]
90003856:	6993      	ldr	r3, [r2, #24]
90003858:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
9000385c:	9301      	str	r3, [sp, #4]
9000385e:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003860:	6993      	ldr	r3, [r2, #24]
90003862:	0499      	lsls	r1, r3, #18
90003864:	d5fc      	bpl.n	90003860 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003866:	2201      	movs	r2, #1
90003868:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
9000386c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
9000386e:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003870:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003872:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90003874:	9417      	str	r4, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003876:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
9000387a:	2205      	movs	r2, #5
9000387c:	23a0      	movs	r3, #160	@ 0xa0
9000387e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003882:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003884:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003888:	9318      	str	r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
9000388a:	e9cd 4619 	strd	r4, r6, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
9000388e:	e9cd 551b 	strd	r5, r5, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003892:	f008 fa6d 	bl	9000bd70 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003896:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003898:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
9000389a:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
9000389c:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
9000389e:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900038a2:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
900038a4:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
900038a6:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
900038a8:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
900038aa:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
900038ac:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
900038b0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
900038b4:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
900038b6:	f008 fddb 	bl	9000c470 <HAL_RCC_ClockConfig>
}
900038ba:	b01e      	add	sp, #120	@ 0x78
900038bc:	bd70      	pop	{r4, r5, r6, pc}
900038be:	bf00      	nop
900038c0:	58000400 	.word	0x58000400
900038c4:	58024800 	.word	0x58024800

900038c8 <PeriphCommonClock_Config>:
{
900038c8:	b500      	push	{lr}
900038ca:	b0b1      	sub	sp, #196	@ 0xc4
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900038cc:	229c      	movs	r2, #156	@ 0x9c
900038ce:	2100      	movs	r1, #0
900038d0:	a809      	add	r0, sp, #36	@ 0x24
900038d2:	f027 fa3f 	bl	9002ad54 <memset>
  PeriphClkInitStruct.PLL2.PLL2M = 2;
900038d6:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLL2.PLL2N = 12;
900038d8:	210c      	movs	r1, #12
  PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOMEDIUM;
900038da:	2220      	movs	r2, #32
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900038dc:	4668      	mov	r0, sp
  PeriphClkInitStruct.PLL2.PLL2M = 2;
900038de:	9302      	str	r3, [sp, #8]
  PeriphClkInitStruct.PLL2.PLL2P = 2;
900038e0:	9304      	str	r3, [sp, #16]
  PeriphClkInitStruct.PLL2.PLL2N = 12;
900038e2:	9103      	str	r1, [sp, #12]
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
900038e4:	9305      	str	r3, [sp, #20]
  PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOMEDIUM;
900038e6:	9208      	str	r2, [sp, #32]
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
900038e8:	ed9f 7b07 	vldr	d7, [pc, #28]	@ 90003908 <PeriphCommonClock_Config+0x40>
900038ec:	ed8d 7b00 	vstr	d7, [sp]
  PeriphClkInitStruct.PLL2.PLL2R = 2;
900038f0:	ed9f 7b07 	vldr	d7, [pc, #28]	@ 90003910 <PeriphCommonClock_Config+0x48>
900038f4:	ed8d 7b06 	vstr	d7, [sp, #24]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900038f8:	f009 f8c4 	bl	9000ca84 <HAL_RCCEx_PeriphCLKConfig>
}
900038fc:	b031      	add	sp, #196	@ 0xc4
900038fe:	f85d fb04 	ldr.w	pc, [sp], #4
90003902:	bf00      	nop
90003904:	f3af 8000 	nop.w
90003908:	00080000 	.word	0x00080000
9000390c:	00000000 	.word	0x00000000
90003910:	00000002 	.word	0x00000002
90003914:	000000c0 	.word	0x000000c0

90003918 <main>:
	leftStick.h=60;
90003918:	203c      	movs	r0, #60	@ 0x3c
	leftStick.p.x=10;
9000391a:	4bd4      	ldr	r3, [pc, #848]	@ (90003c6c <main+0x354>)
9000391c:	210a      	movs	r1, #10
	leftStick.p.y=106;
9000391e:	226a      	movs	r2, #106	@ 0x6a
	leftStick.w=5;
90003920:	2405      	movs	r4, #5
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003922:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003924:	2603      	movs	r6, #3
{
90003926:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
	leftStick.p.y=106;
9000392a:	e9c3 1200 	strd	r1, r2, [r3]
	leftStick.w=5;
9000392e:	e9c3 0402 	strd	r0, r4, [r3, #8]
	rightStick.p.x=460;
90003932:	4bcf      	ldr	r3, [pc, #828]	@ (90003c70 <main+0x358>)
90003934:	f44f 74e6 	mov.w	r4, #460	@ 0x1cc
{
90003938:	b0a7      	sub	sp, #156	@ 0x9c
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000393a:	271b      	movs	r7, #27
	rightStick.p.y=106;
9000393c:	605a      	str	r2, [r3, #4]
	rightStick.p.x=460;
9000393e:	601c      	str	r4, [r3, #0]
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003940:	2400      	movs	r4, #0
	ballPos.x=240;
90003942:	4acc      	ldr	r2, [pc, #816]	@ (90003c74 <main+0x35c>)
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003944:	9419      	str	r4, [sp, #100]	@ 0x64
90003946:	941c      	str	r4, [sp, #112]	@ 0x70
	rightStick.w=10;
90003948:	e9c3 0102 	strd	r0, r1, [r3, #8]
	ballPos.x=240;
9000394c:	21f0      	movs	r1, #240	@ 0xf0
	ballPos.y=136;
9000394e:	2388      	movs	r3, #136	@ 0x88
	ballPos.x=240;
90003950:	6011      	str	r1, [r2, #0]
	ballPos.y=136;
90003952:	6053      	str	r3, [r2, #4]
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003954:	e9cd 441a 	strd	r4, r4, [sp, #104]	@ 0x68
  HAL_MPU_Disable();
90003958:	f005 f8ea 	bl	90008b30 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
9000395c:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003960:	4bc5      	ldr	r3, [pc, #788]	@ (90003c78 <main+0x360>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003962:	a819      	add	r0, sp, #100	@ 0x64
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003964:	f8ad 5064 	strh.w	r5, [sp, #100]	@ 0x64
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003968:	e9cd 231a 	strd	r2, r3, [sp, #104]	@ 0x68
9000396c:	4bc3      	ldr	r3, [pc, #780]	@ (90003c7c <main+0x364>)
9000396e:	931c      	str	r3, [sp, #112]	@ 0x70
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003970:	f005 f8fc 	bl	90008b6c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003974:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003978:	a819      	add	r0, sp, #100	@ 0x64
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000397a:	f88d 406f 	strb.w	r4, [sp, #111]	@ 0x6f
  MPU_InitStruct.BaseAddress = 0x90000000;
9000397e:	931a      	str	r3, [sp, #104]	@ 0x68
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003980:	f8ad 4072 	strh.w	r4, [sp, #114]	@ 0x72
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003984:	f88d 5065 	strb.w	r5, [sp, #101]	@ 0x65
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003988:	f88d 706c 	strb.w	r7, [sp, #108]	@ 0x6c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000398c:	f005 f8ee 	bl	90008b6c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003990:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003992:	a819      	add	r0, sp, #100	@ 0x64
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003994:	f8ad 606f 	strh.w	r6, [sp, #111]	@ 0x6f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003998:	f88d 3065 	strb.w	r3, [sp, #101]	@ 0x65
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
9000399c:	231a      	movs	r3, #26
9000399e:	f88d 306c 	strb.w	r3, [sp, #108]	@ 0x6c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900039a2:	f240 1301 	movw	r3, #257	@ 0x101
900039a6:	f8ad 3072 	strh.w	r3, [sp, #114]	@ 0x72
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039aa:	f005 f8df 	bl	90008b6c <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900039ae:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039b2:	a819      	add	r0, sp, #100	@ 0x64
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900039b4:	f8ad 4072 	strh.w	r4, [sp, #114]	@ 0x72

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900039b8:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900039ba:	f8ad 306f 	strh.w	r3, [sp, #111]	@ 0x6f
  MPU_InitStruct.BaseAddress = 0xD0000000;
900039be:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900039c2:	f88d 706c 	strb.w	r7, [sp, #108]	@ 0x6c
  MPU_InitStruct.BaseAddress = 0xD0000000;
900039c6:	931a      	str	r3, [sp, #104]	@ 0x68
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
900039c8:	f88d 6065 	strb.w	r6, [sp, #101]	@ 0x65
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039cc:	f005 f8ce 	bl	90008b6c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900039d0:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039d2:	a819      	add	r0, sp, #100	@ 0x64
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900039d4:	f88d 606f 	strb.w	r6, [sp, #111]	@ 0x6f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900039d8:	f88d 306c 	strb.w	r3, [sp, #108]	@ 0x6c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900039dc:	f88d 4065 	strb.w	r4, [sp, #101]	@ 0x65
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900039e0:	f88d 5072 	strb.w	r5, [sp, #114]	@ 0x72
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900039e4:	f005 f8c2 	bl	90008b6c <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
900039e8:	4620      	mov	r0, r4
900039ea:	f005 f8af 	bl	90008b4c <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
900039ee:	4aa4      	ldr	r2, [pc, #656]	@ (90003c80 <main+0x368>)
900039f0:	6953      	ldr	r3, [r2, #20]
900039f2:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
900039f6:	d111      	bne.n	90003a1c <main+0x104>
  __ASM volatile ("dsb 0xF":::"memory");
900039f8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900039fc:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003a00:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003a04:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003a08:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003a0c:	6953      	ldr	r3, [r2, #20]
90003a0e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003a12:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003a14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003a18:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003a1c:	4898      	ldr	r0, [pc, #608]	@ (90003c80 <main+0x368>)
90003a1e:	6943      	ldr	r3, [r0, #20]
90003a20:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003a24:	d124      	bne.n	90003a70 <main+0x158>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003a26:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003a2a:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003a2e:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a32:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003a36:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003a3a:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003a3e:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a40:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003a44:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a46:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003a4a:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003a4c:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003a50:	1c5a      	adds	r2, r3, #1
90003a52:	d1f8      	bne.n	90003a46 <main+0x12e>
    } while(sets-- != 0U);
90003a54:	3c20      	subs	r4, #32
90003a56:	f114 0f20 	cmn.w	r4, #32
90003a5a:	d1f1      	bne.n	90003a40 <main+0x128>
90003a5c:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003a60:	6943      	ldr	r3, [r0, #20]
90003a62:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003a66:	6143      	str	r3, [r0, #20]
90003a68:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003a6c:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003a70:	f004 f928 	bl	90007cc4 <HAL_Init>
  SystemClock_Config();
90003a74:	f7ff fed0 	bl	90003818 <SystemClock_Config>
  PeriphCommonClock_Config();
90003a78:	f7ff ff26 	bl	900038c8 <PeriphCommonClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003a7c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a7e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003a80:	4d80      	ldr	r5, [pc, #512]	@ (90003c84 <main+0x36c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003a82:	21c0      	movs	r1, #192	@ 0xc0
90003a84:	4880      	ldr	r0, [pc, #512]	@ (90003c88 <main+0x370>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a86:	941d      	str	r4, [sp, #116]	@ 0x74
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003a88:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003a8a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003a8c:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003a90:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90003a94:	2704      	movs	r7, #4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003a96:	f04f 0a02 	mov.w	sl, #2
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003a9a:	f04f 0b05 	mov.w	fp, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a9e:	e9cd 4419 	strd	r4, r4, [sp, #100]	@ 0x64
90003aa2:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003aa6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003aaa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003aae:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ab2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ab6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003aba:	9301      	str	r3, [sp, #4]
90003abc:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003abe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ac2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90003ac6:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003aca:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ace:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90003ad2:	9302      	str	r3, [sp, #8]
90003ad4:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003ad6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ada:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003ade:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ae2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ae6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003aea:	9303      	str	r3, [sp, #12]
90003aec:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003aee:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003af2:	f043 0310 	orr.w	r3, r3, #16
90003af6:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003afa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003afe:	f003 0310 	and.w	r3, r3, #16
90003b02:	9304      	str	r3, [sp, #16]
90003b04:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003b06:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b0a:	f043 0302 	orr.w	r3, r3, #2
90003b0e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b12:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b16:	f003 0302 	and.w	r3, r3, #2
90003b1a:	9305      	str	r3, [sp, #20]
90003b1c:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003b1e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b22:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003b26:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b2a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b2e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003b32:	9306      	str	r3, [sp, #24]
90003b34:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003b36:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b3a:	f043 0308 	orr.w	r3, r3, #8
90003b3e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b42:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b46:	f003 0308 	and.w	r3, r3, #8
90003b4a:	9307      	str	r3, [sp, #28]
90003b4c:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003b4e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b52:	f043 0301 	orr.w	r3, r3, #1
90003b56:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b5a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b5e:	f003 0301 	and.w	r3, r3, #1
90003b62:	9308      	str	r3, [sp, #32]
90003b64:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003b66:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b6a:	f043 0320 	orr.w	r3, r3, #32
90003b6e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b72:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b76:	f003 0320 	and.w	r3, r3, #32
90003b7a:	9309      	str	r3, [sp, #36]	@ 0x24
90003b7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003b7e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b82:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003b86:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003b8a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003b8e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003b92:	930a      	str	r3, [sp, #40]	@ 0x28
90003b94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003b96:	f005 fbe5 	bl	90009364 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003b9a:	4622      	mov	r2, r4
90003b9c:	2180      	movs	r1, #128	@ 0x80
90003b9e:	483b      	ldr	r0, [pc, #236]	@ (90003c8c <main+0x374>)
90003ba0:	f005 fbe0 	bl	90009364 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003ba4:	4622      	mov	r2, r4
90003ba6:	2108      	movs	r1, #8
90003ba8:	4839      	ldr	r0, [pc, #228]	@ (90003c90 <main+0x378>)
90003baa:	f005 fbdb 	bl	90009364 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003bae:	2201      	movs	r2, #1
90003bb0:	4838      	ldr	r0, [pc, #224]	@ (90003c94 <main+0x37c>)
90003bb2:	4611      	mov	r1, r2
90003bb4:	f005 fbd6 	bl	90009364 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003bb8:	4622      	mov	r2, r4
90003bba:	2144      	movs	r1, #68	@ 0x44
90003bbc:	4836      	ldr	r0, [pc, #216]	@ (90003c98 <main+0x380>)
90003bbe:	f005 fbd1 	bl	90009364 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003bc2:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003bc4:	a919      	add	r1, sp, #100	@ 0x64
90003bc6:	4830      	ldr	r0, [pc, #192]	@ (90003c88 <main+0x370>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003bc8:	e9cd 3619 	strd	r3, r6, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003bcc:	e9cd 491b 	strd	r4, r9, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003bd0:	f005 f9b6 	bl	90008f40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003bd4:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003bd6:	a919      	add	r1, sp, #100	@ 0x64
90003bd8:	482c      	ldr	r0, [pc, #176]	@ (90003c8c <main+0x374>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003bda:	9319      	str	r3, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003bdc:	941c      	str	r4, [sp, #112]	@ 0x70
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003bde:	e9cd 641a 	strd	r6, r4, [sp, #104]	@ 0x68
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003be2:	f005 f9ad 	bl	90008f40 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003be6:	a919      	add	r1, sp, #100	@ 0x64
90003be8:	4829      	ldr	r0, [pc, #164]	@ (90003c90 <main+0x378>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003bea:	e9cd 8619 	strd	r8, r6, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003bee:	e9cd 491b 	strd	r4, r9, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003bf2:	f005 f9a5 	bl	90008f40 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003bf6:	a919      	add	r1, sp, #100	@ 0x64
90003bf8:	4826      	ldr	r0, [pc, #152]	@ (90003c94 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003bfa:	e9cd 6619 	strd	r6, r6, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003bfe:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003c02:	f005 f99d 	bl	90008f40 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90003c06:	a919      	add	r1, sp, #100	@ 0x64
90003c08:	4823      	ldr	r0, [pc, #140]	@ (90003c98 <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c0a:	e9cd 7619 	strd	r7, r6, [sp, #100]	@ 0x64
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003c0e:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90003c12:	f005 f995 	bl	90008f40 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003c16:	f8cd 9070 	str.w	r9, [sp, #112]	@ 0x70
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003c1a:	f04f 0940 	mov.w	r9, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003c1e:	a919      	add	r1, sp, #100	@ 0x64
90003c20:	481d      	ldr	r0, [pc, #116]	@ (90003c98 <main+0x380>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003c22:	f8cd 9064 	str.w	r9, [sp, #100]	@ 0x64
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003c26:	e9cd 641a 	strd	r6, r4, [sp, #104]	@ 0x68
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003c2a:	f005 f989 	bl	90008f40 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c2e:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c32:	4622      	mov	r2, r4
90003c34:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c36:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c38:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c3a:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003c3e:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003c42:	4d16      	ldr	r5, [pc, #88]	@ (90003c9c <main+0x384>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003c44:	4033      	ands	r3, r6
90003c46:	9300      	str	r3, [sp, #0]
90003c48:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003c4a:	f004 ff15 	bl	90008a78 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003c4e:	207a      	movs	r0, #122	@ 0x7a
90003c50:	f004 ff4e 	bl	90008af0 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003c54:	4621      	mov	r1, r4
90003c56:	2234      	movs	r2, #52	@ 0x34
90003c58:	a819      	add	r0, sp, #100	@ 0x64
90003c5a:	f027 f87b 	bl	9002ad54 <memset>
  hltdc.Instance = LTDC;
90003c5e:	4b10      	ldr	r3, [pc, #64]	@ (90003ca0 <main+0x388>)
  hltdc.Init.AccumulatedVBP = 11;
90003c60:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.AccumulatedActiveH = 283;
90003c62:	f240 2c0a 	movw	ip, #522	@ 0x20a
  hltdc.Instance = LTDC;
90003c66:	602b      	str	r3, [r5, #0]
90003c68:	e01c      	b.n	90003ca4 <main+0x38c>
90003c6a:	bf00      	nop
90003c6c:	240092d8 	.word	0x240092d8
90003c70:	240092e8 	.word	0x240092e8
90003c74:	240092d0 	.word	0x240092d0
90003c78:	03000012 	.word	0x03000012
90003c7c:	01010001 	.word	0x01010001
90003c80:	e000ed00 	.word	0xe000ed00
90003c84:	58024400 	.word	0x58024400
90003c88:	58020400 	.word	0x58020400
90003c8c:	58020c00 	.word	0x58020c00
90003c90:	58021800 	.word	0x58021800
90003c94:	58022800 	.word	0x58022800
90003c98:	58020000 	.word	0x58020000
90003c9c:	24008f9c 	.word	0x24008f9c
90003ca0:	50001000 	.word	0x50001000
  hltdc.Init.HorizontalSync = 39;
90003ca4:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.TotalHeigh = 285;
90003ca6:	f44f 7e04 	mov.w	lr, #528	@ 0x210
  hltdc.Init.VerticalSync = 8;
90003caa:	f8c5 8018 	str.w	r8, [r5, #24]
  hltdc.Init.HorizontalSync = 39;
90003cae:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003cb0:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003cb2:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003cb4:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003cb8:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003cbc:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003cc0:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003cc2:	e9c5 c309 	strd	ip, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003cc6:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003cca:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.TotalHeigh = 285;
90003cce:	e9c5 e30b 	strd	lr, r3, [r5, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003cd2:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003cd6:	f007 fba3 	bl	9000b420 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003cda:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003cde:	4622      	mov	r2, r4
90003ce0:	a919      	add	r1, sp, #100	@ 0x64
  pLayerCfg.WindowX1 = 480;
90003ce2:	931a      	str	r3, [sp, #104]	@ 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003ce4:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003ce6:	9323      	str	r3, [sp, #140]	@ 0x8c
  pLayerCfg.WindowY1 = 272;
90003ce8:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003cec:	4dc3      	ldr	r5, [pc, #780]	@ (90003ffc <main+0x6e4>)
  pLayerCfg.WindowY1 = 272;
90003cee:	931c      	str	r3, [sp, #112]	@ 0x70
  pLayerCfg.ImageHeight = 272;
90003cf0:	9324      	str	r3, [sp, #144]	@ 0x90
  pLayerCfg.Alpha = 255;
90003cf2:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003cf4:	9419      	str	r4, [sp, #100]	@ 0x64
  pLayerCfg.Alpha = 255;
90003cf6:	931e      	str	r3, [sp, #120]	@ 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003cf8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  pLayerCfg.WindowY0 = 0;
90003cfc:	941b      	str	r4, [sp, #108]	@ 0x6c
  pLayerCfg.Alpha0 = 0;
90003cfe:	941f      	str	r4, [sp, #124]	@ 0x7c
  pLayerCfg.FBStartAdress = 0;
90003d00:	9422      	str	r4, [sp, #136]	@ 0x88
  pLayerCfg.Backcolor.Blue = 0;
90003d02:	f8ad 4094 	strh.w	r4, [sp, #148]	@ 0x94
  pLayerCfg.Backcolor.Red = 0;
90003d06:	f88d 4096 	strb.w	r4, [sp, #150]	@ 0x96
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003d0a:	f8cd a074 	str.w	sl, [sp, #116]	@ 0x74
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003d0e:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003d12:	9320      	str	r3, [sp, #128]	@ 0x80
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003d14:	f007 fc58 	bl	9000b5c8 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003d18:	4bb9      	ldr	r3, [pc, #740]	@ (90004000 <main+0x6e8>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003d1a:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003d1c:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003d1e:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003d20:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003d22:	e9c5 4a01 	strd	r4, sl, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003d26:	e9c5 4a11 	strd	r4, sl, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003d2a:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003d2e:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003d32:	f004 ffc3 	bl	90008cbc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003d36:	4631      	mov	r1, r6
90003d38:	4628      	mov	r0, r5
  hadc1.Instance = ADC1;
90003d3a:	4db2      	ldr	r5, [pc, #712]	@ (90004004 <main+0x6ec>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003d3c:	f005 f896 	bl	90008e6c <HAL_DMA2D_ConfigLayer>
  SdramTiming.ExitSelfRefreshDelay = 7;
90003d40:	2207      	movs	r2, #7
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d42:	48b1      	ldr	r0, [pc, #708]	@ (90004008 <main+0x6f0>)
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003d44:	a919      	add	r1, sp, #100	@ 0x64
  SdramTiming.ExitSelfRefreshDelay = 7;
90003d46:	921a      	str	r2, [sp, #104]	@ 0x68
  SdramTiming.RowCycleDelay = 7;
90003d48:	921c      	str	r2, [sp, #112]	@ 0x70
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d4a:	4ab0      	ldr	r2, [pc, #704]	@ (9000400c <main+0x6f4>)
  SdramTiming.LoadToActiveDelay = 2;
90003d4c:	f8cd a064 	str.w	sl, [sp, #100]	@ 0x64
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003d50:	6002      	str	r2, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003d52:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003d56:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003d5a:	f04f 0910 	mov.w	r9, #16
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003d5e:	6182      	str	r2, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003d60:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  SdramTiming.WriteRecoveryTime = 5;
90003d64:	f8cd b074 	str.w	fp, [sp, #116]	@ 0x74
  sConfig.Rank = ADC_REGULAR_RANK_1;
90003d68:	f04f 0b06 	mov.w	fp, #6
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003d6c:	6202      	str	r2, [r0, #32]
  SdramTiming.SelfRefreshTime = 4;
90003d6e:	971b      	str	r7, [sp, #108]	@ 0x6c
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003d70:	60c7      	str	r7, [r0, #12]
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003d72:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003d74:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003d76:	f8c0 9010 	str.w	r9, [r0, #16]
  SdramTiming.RCDDelay = 2;
90003d7a:	e9cd aa1e 	strd	sl, sl, [sp, #120]	@ 0x78
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003d7e:	f44f 5a80 	mov.w	sl, #4096	@ 0x1000
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003d82:	e9c0 6401 	strd	r6, r4, [r0, #4]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003d86:	f8c0 a024 	str.w	sl, [r0, #36]	@ 0x24
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003d8a:	f00a f96b 	bl	9000e064 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90003d8e:	4620      	mov	r0, r4
90003d90:	f003 fd34 	bl	900077fc <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003d94:	4620      	mov	r0, r4
90003d96:	f003 fd7b 	bl	90007890 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003d9a:	f7fc fe87 	bl	90000aac <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003d9e:	4a9c      	ldr	r2, [pc, #624]	@ (90004010 <main+0x6f8>)
90003da0:	489c      	ldr	r0, [pc, #624]	@ (90004014 <main+0x6fc>)
90003da2:	6002      	str	r2, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003da4:	f006 fa98 	bl	9000a2d8 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003da8:	489b      	ldr	r0, [pc, #620]	@ (90004018 <main+0x700>)
90003daa:	4a9c      	ldr	r2, [pc, #624]	@ (9000401c <main+0x704>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003dac:	8084      	strh	r4, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003dae:	6206      	str	r6, [r0, #32]
  hcrc.Instance = CRC;
90003db0:	6002      	str	r2, [r0, #0]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003db2:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003db6:	f004 ff0b 	bl	90008bd0 <HAL_CRC_Init>
  hadc1.Instance = ADC1;
90003dba:	4a99      	ldr	r2, [pc, #612]	@ (90004020 <main+0x708>)
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
90003dbc:	4628      	mov	r0, r5
  hadc1.Init.LowPowerAutoWait = DISABLE;
90003dbe:	82ac      	strh	r4, [r5, #20]
  hadc1.Instance = ADC1;
90003dc0:	602a      	str	r2, [r5, #0]
  hadc1.Init.NbrOfConversion = 1;
90003dc2:	61ae      	str	r6, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
90003dc4:	772c      	strb	r4, [r5, #28]
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
90003dc6:	636c      	str	r4, [r5, #52]	@ 0x34
  hadc1.Init.OversamplingMode = DISABLE;
90003dc8:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
  ADC_MultiModeTypeDef multimode = {0};
90003dcc:	9412      	str	r4, [sp, #72]	@ 0x48
  ADC_ChannelConfTypeDef sConfig = {0};
90003dce:	941f      	str	r4, [sp, #124]	@ 0x7c
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
90003dd0:	e9c5 4703 	strd	r4, r7, [r5, #12]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
90003dd4:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
90003dd8:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
90003ddc:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
  ADC_ChannelConfTypeDef sConfig = {0};
90003de0:	e9cd 4419 	strd	r4, r4, [sp, #100]	@ 0x64
90003de4:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
90003de8:	e9cd 441d 	strd	r4, r4, [sp, #116]	@ 0x74
  ADC_MultiModeTypeDef multimode = {0};
90003dec:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
90003df0:	f004 fcc2 	bl	90008778 <HAL_ADC_Init>
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
90003df4:	a912      	add	r1, sp, #72	@ 0x48
90003df6:	4628      	mov	r0, r5
  multimode.Mode = ADC_MODE_INDEPENDENT;
90003df8:	9412      	str	r4, [sp, #72]	@ 0x48
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
90003dfa:	f004 fdc9 	bl	90008990 <HAL_ADCEx_MultiModeConfigChannel>
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
90003dfe:	f240 73ff 	movw	r3, #2047	@ 0x7ff
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
90003e02:	a919      	add	r1, sp, #100	@ 0x64
90003e04:	4628      	mov	r0, r5
  hadc2.Instance = ADC2;
90003e06:	4d87      	ldr	r5, [pc, #540]	@ (90004024 <main+0x70c>)
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
90003e08:	941b      	str	r4, [sp, #108]	@ 0x6c
  sConfig.Offset = 0;
90003e0a:	941e      	str	r4, [sp, #120]	@ 0x78
  sConfig.OffsetSignedSaturation = DISABLE;
90003e0c:	f88d 407d 	strb.w	r4, [sp, #125]	@ 0x7d
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
90003e10:	e9cd 371c 	strd	r3, r7, [sp, #112]	@ 0x70
  sConfig.Rank = ADC_REGULAR_RANK_1;
90003e14:	e9cd 6b19 	strd	r6, fp, [sp, #100]	@ 0x64
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
90003e18:	f004 f82c 	bl	90007e74 <HAL_ADC_ConfigChannel>
  hadc2.Instance = ADC2;
90003e1c:	4a82      	ldr	r2, [pc, #520]	@ (90004028 <main+0x710>)
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
90003e1e:	4628      	mov	r0, r5
  hadc2.Init.NbrOfConversion = 1;
90003e20:	61ae      	str	r6, [r5, #24]
  hadc2.Init.LowPowerAutoWait = DISABLE;
90003e22:	82ac      	strh	r4, [r5, #20]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
90003e24:	772c      	strb	r4, [r5, #28]
  hadc2.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
90003e26:	636c      	str	r4, [r5, #52]	@ 0x34
  hadc2.Init.OversamplingMode = DISABLE;
90003e28:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
  hadc2.Instance = ADC2;
90003e2c:	602a      	str	r2, [r5, #0]
  ADC_ChannelConfTypeDef sConfig = {0};
90003e2e:	941f      	str	r4, [sp, #124]	@ 0x7c
  readStick2Handle = osThreadNew(inputReadStick2, NULL, &readStick2_attributes);
90003e30:	4e7e      	ldr	r6, [pc, #504]	@ (9000402c <main+0x714>)
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
90003e32:	e9c5 4703 	strd	r4, r7, [r5, #12]
  hadc2.Init.Resolution = ADC_RESOLUTION_16B;
90003e36:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
90003e3a:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
90003e3e:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
  ADC_ChannelConfTypeDef sConfig = {0};
90003e42:	e9cd 4419 	strd	r4, r4, [sp, #100]	@ 0x64
90003e46:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
90003e4a:	e9cd 441d 	strd	r4, r4, [sp, #116]	@ 0x74
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
90003e4e:	f004 fc93 	bl	90008778 <HAL_ADC_Init>
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
90003e52:	f240 73ff 	movw	r3, #2047	@ 0x7ff
  sConfig.Channel = ADC_CHANNEL_1;
90003e56:	4a76      	ldr	r2, [pc, #472]	@ (90004030 <main+0x718>)
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
90003e58:	4628      	mov	r0, r5
90003e5a:	a919      	add	r1, sp, #100	@ 0x64
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
90003e5c:	941b      	str	r4, [sp, #108]	@ 0x6c
  sConfig.Offset = 0;
90003e5e:	941e      	str	r4, [sp, #120]	@ 0x78
  sConfig.OffsetSignedSaturation = DISABLE;
90003e60:	f88d 407d 	strb.w	r4, [sp, #125]	@ 0x7d
  sConfig.Channel = ADC_CHANNEL_1;
90003e64:	9219      	str	r2, [sp, #100]	@ 0x64
  sConfig.Rank = ADC_REGULAR_RANK_1;
90003e66:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
  htim1.Instance = TIM1;
90003e6a:	4d72      	ldr	r5, [pc, #456]	@ (90004034 <main+0x71c>)
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
90003e6c:	e9cd 371c 	strd	r3, r7, [sp, #112]	@ 0x70
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
90003e70:	f004 f800 	bl	90007e74 <HAL_ADC_ConfigChannel>
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
90003e74:	4621      	mov	r1, r4
90003e76:	222c      	movs	r2, #44	@ 0x2c
90003e78:	a819      	add	r0, sp, #100	@ 0x64
  TIM_MasterConfigTypeDef sMasterConfig = {0};
90003e7a:	940d      	str	r4, [sp, #52]	@ 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
90003e7c:	9418      	str	r4, [sp, #96]	@ 0x60
  readStick1Handle = osThreadNew(inputReadStick1, NULL, &readStick1_attributes);
90003e7e:	4f6e      	ldr	r7, [pc, #440]	@ (90004038 <main+0x720>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
90003e80:	e9cd 440e 	strd	r4, r4, [sp, #56]	@ 0x38
90003e84:	e9cd 4410 	strd	r4, r4, [sp, #64]	@ 0x40
  TIM_MasterConfigTypeDef sMasterConfig = {0};
90003e88:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
90003e8c:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
90003e90:	e9cd 4414 	strd	r4, r4, [sp, #80]	@ 0x50
90003e94:	e9cd 4416 	strd	r4, r4, [sp, #88]	@ 0x58
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
90003e98:	f026 ff5c 	bl	9002ad54 <memset>
  htim1.Instance = TIM1;
90003e9c:	4a67      	ldr	r2, [pc, #412]	@ (9000403c <main+0x724>)
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
90003e9e:	4628      	mov	r0, r5
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
90003ea0:	61ac      	str	r4, [r5, #24]
  htim1.Instance = TIM1;
90003ea2:	602a      	str	r2, [r5, #0]
  htim1.Init.Period = 65535;
90003ea4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
90003ea8:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim1.Init.Period = 65535;
90003eac:	60ea      	str	r2, [r5, #12]
  htim1.Init.RepetitionCounter = 0;
90003eae:	e9c5 4404 	strd	r4, r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
90003eb2:	f00a f9c3 	bl	9000e23c <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
90003eb6:	a90e      	add	r1, sp, #56	@ 0x38
90003eb8:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
90003eba:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
90003ebe:	f00a fc87 	bl	9000e7d0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
90003ec2:	4628      	mov	r0, r5
90003ec4:	f00a fac6 	bl	9000e454 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
90003ec8:	a90b      	add	r1, sp, #44	@ 0x2c
90003eca:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
90003ecc:	940d      	str	r4, [sp, #52]	@ 0x34
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
90003ece:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
90003ed2:	f00a ff5f 	bl	9000ed94 <HAL_TIMEx_MasterConfigSynchronization>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
90003ed6:	2260      	movs	r2, #96	@ 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
90003ed8:	a912      	add	r1, sp, #72	@ 0x48
90003eda:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
90003edc:	9212      	str	r2, [sp, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
90003ede:	4622      	mov	r2, r4
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
90003ee0:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
90003ee4:	e9cd 4415 	strd	r4, r4, [sp, #84]	@ 0x54
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
90003ee8:	e9cd 4417 	strd	r4, r4, [sp, #92]	@ 0x5c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
90003eec:	f00a fe38 	bl	9000eb60 <HAL_TIM_PWM_ConfigChannel>
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
90003ef0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
90003ef4:	a919      	add	r1, sp, #100	@ 0x64
90003ef6:	4628      	mov	r0, r5
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
90003ef8:	921e      	str	r2, [sp, #120]	@ 0x78
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
90003efa:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
90003efe:	941d      	str	r4, [sp, #116]	@ 0x74
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
90003f00:	9221      	str	r2, [sp, #132]	@ 0x84
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
90003f02:	e9cd 4419 	strd	r4, r4, [sp, #100]	@ 0x64
  sBreakDeadTimeConfig.DeadTime = 0;
90003f06:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
90003f0a:	e9cd 441f 	strd	r4, r4, [sp, #124]	@ 0x7c
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
90003f0e:	e9cd 4422 	strd	r4, r4, [sp, #136]	@ 0x88
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
90003f12:	f00a ff99 	bl	9000ee48 <HAL_TIMEx_ConfigBreakDeadTime>
  HAL_TIM_MspPostInit(&htim1);
90003f16:	4628      	mov	r0, r5
90003f18:	f000 fcca 	bl	900048b0 <HAL_TIM_MspPostInit>
  htim2.Instance = TIM2;
90003f1c:	4d48      	ldr	r5, [pc, #288]	@ (90004040 <main+0x728>)
  htim2.Init.Prescaler = 71;
90003f1e:	f04f 4c80 	mov.w	ip, #1073741824	@ 0x40000000
90003f22:	2247      	movs	r2, #71	@ 0x47
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
90003f24:	4628      	mov	r0, r5
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
90003f26:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
90003f28:	612c      	str	r4, [r5, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
90003f2a:	61ac      	str	r4, [r5, #24]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
90003f2c:	9414      	str	r4, [sp, #80]	@ 0x50
  htim2.Init.Prescaler = 71;
90003f2e:	e9c5 c200 	strd	ip, r2, [r5]
  htim2.Init.Period = 999;
90003f32:	f240 32e7 	movw	r2, #999	@ 0x3e7
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
90003f36:	e9cd 4419 	strd	r4, r4, [sp, #100]	@ 0x64
  htim2.Init.Period = 999;
90003f3a:	60ea      	str	r2, [r5, #12]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
90003f3c:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
90003f40:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
90003f44:	f00a f97a 	bl	9000e23c <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
90003f48:	a919      	add	r1, sp, #100	@ 0x64
90003f4a:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
90003f4c:	f8cd a064 	str.w	sl, [sp, #100]	@ 0x64
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
90003f50:	f00a fc3e 	bl	9000e7d0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
90003f54:	a912      	add	r1, sp, #72	@ 0x48
90003f56:	4628      	mov	r0, r5
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
90003f58:	9412      	str	r4, [sp, #72]	@ 0x48
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
90003f5a:	9414      	str	r4, [sp, #80]	@ 0x50
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
90003f5c:	f00a ff1a 	bl	9000ed94 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
90003f60:	f7fc fda8 	bl	90000ab4 <MX_TouchGFX_Init>
  myCollisionHandle = osThreadNew(Collision, NULL, &myCollision_attributes);
90003f64:	4d37      	ldr	r5, [pc, #220]	@ (90004044 <main+0x72c>)
  MX_TouchGFX_PreOSInit();
90003f66:	f7fc fda3 	bl	90000ab0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003f6a:	f00b f877 	bl	9000f05c <osKernelInitialize>
  srand(time(NULL));
90003f6e:	4620      	mov	r0, r4
90003f70:	f026 fef8 	bl	9002ad64 <time>
90003f74:	f026 fca6 	bl	9002a8c4 <srand>
  stickQue1Handle = osMessageQueueNew (16, sizeof(Position), &stickQue1_attributes);
90003f78:	4641      	mov	r1, r8
90003f7a:	4a33      	ldr	r2, [pc, #204]	@ (90004048 <main+0x730>)
90003f7c:	4648      	mov	r0, r9
90003f7e:	f00b f9b1 	bl	9000f2e4 <osMessageQueueNew>
90003f82:	4b32      	ldr	r3, [pc, #200]	@ (9000404c <main+0x734>)
  stickQue2Handle = osMessageQueueNew (16, sizeof(Position), &stickQue2_attributes);
90003f84:	4641      	mov	r1, r8
90003f86:	4a32      	ldr	r2, [pc, #200]	@ (90004050 <main+0x738>)
  stickQue1Handle = osMessageQueueNew (16, sizeof(Position), &stickQue1_attributes);
90003f88:	6018      	str	r0, [r3, #0]
  stickQue2Handle = osMessageQueueNew (16, sizeof(Position), &stickQue2_attributes);
90003f8a:	4648      	mov	r0, r9
90003f8c:	f00b f9aa 	bl	9000f2e4 <osMessageQueueNew>
90003f90:	4b30      	ldr	r3, [pc, #192]	@ (90004054 <main+0x73c>)
  BallQueueHandle = osMessageQueueNew (16, sizeof(Position), &BallQueue_attributes);
90003f92:	4641      	mov	r1, r8
90003f94:	4a30      	ldr	r2, [pc, #192]	@ (90004058 <main+0x740>)
  stickQue2Handle = osMessageQueueNew (16, sizeof(Position), &stickQue2_attributes);
90003f96:	6018      	str	r0, [r3, #0]
  BallQueueHandle = osMessageQueueNew (16, sizeof(Position), &BallQueue_attributes);
90003f98:	4648      	mov	r0, r9
90003f9a:	f00b f9a3 	bl	9000f2e4 <osMessageQueueNew>
90003f9e:	4b2f      	ldr	r3, [pc, #188]	@ (9000405c <main+0x744>)
90003fa0:	4602      	mov	r2, r0
  scoreQueHandle = osMessageQueueNew (16, sizeof(Position), &scoreQue_attributes);
90003fa2:	4641      	mov	r1, r8
90003fa4:	4648      	mov	r0, r9
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003fa6:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90004098 <main+0x780>
  BallQueueHandle = osMessageQueueNew (16, sizeof(Position), &BallQueue_attributes);
90003faa:	601a      	str	r2, [r3, #0]
  scoreQueHandle = osMessageQueueNew (16, sizeof(Position), &scoreQue_attributes);
90003fac:	4a2c      	ldr	r2, [pc, #176]	@ (90004060 <main+0x748>)
90003fae:	f00b f999 	bl	9000f2e4 <osMessageQueueNew>
90003fb2:	4b2c      	ldr	r3, [pc, #176]	@ (90004064 <main+0x74c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003fb4:	4621      	mov	r1, r4
90003fb6:	4a2c      	ldr	r2, [pc, #176]	@ (90004068 <main+0x750>)
  scoreQueHandle = osMessageQueueNew (16, sizeof(Position), &scoreQue_attributes);
90003fb8:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003fba:	482c      	ldr	r0, [pc, #176]	@ (9000406c <main+0x754>)
90003fbc:	f00b f87a 	bl	9000f0b4 <osThreadNew>
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003fc0:	4621      	mov	r1, r4
90003fc2:	4a2b      	ldr	r2, [pc, #172]	@ (90004070 <main+0x758>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003fc4:	f8c8 0000 	str.w	r0, [r8]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003fc8:	482a      	ldr	r0, [pc, #168]	@ (90004074 <main+0x75c>)
90003fca:	f00b f873 	bl	9000f0b4 <osThreadNew>
90003fce:	4b2a      	ldr	r3, [pc, #168]	@ (90004078 <main+0x760>)
  readStick1Handle = osThreadNew(inputReadStick1, NULL, &readStick1_attributes);
90003fd0:	4621      	mov	r1, r4
90003fd2:	4a2a      	ldr	r2, [pc, #168]	@ (9000407c <main+0x764>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003fd4:	6018      	str	r0, [r3, #0]
  readStick1Handle = osThreadNew(inputReadStick1, NULL, &readStick1_attributes);
90003fd6:	482a      	ldr	r0, [pc, #168]	@ (90004080 <main+0x768>)
90003fd8:	f00b f86c 	bl	9000f0b4 <osThreadNew>
  readStick2Handle = osThreadNew(inputReadStick2, NULL, &readStick2_attributes);
90003fdc:	4621      	mov	r1, r4
90003fde:	4a29      	ldr	r2, [pc, #164]	@ (90004084 <main+0x76c>)
  readStick1Handle = osThreadNew(inputReadStick1, NULL, &readStick1_attributes);
90003fe0:	6038      	str	r0, [r7, #0]
  readStick2Handle = osThreadNew(inputReadStick2, NULL, &readStick2_attributes);
90003fe2:	4829      	ldr	r0, [pc, #164]	@ (90004088 <main+0x770>)
90003fe4:	f00b f866 	bl	9000f0b4 <osThreadNew>
  myCollisionHandle = osThreadNew(Collision, NULL, &myCollision_attributes);
90003fe8:	4621      	mov	r1, r4
90003fea:	4a28      	ldr	r2, [pc, #160]	@ (9000408c <main+0x774>)
  readStick2Handle = osThreadNew(inputReadStick2, NULL, &readStick2_attributes);
90003fec:	6030      	str	r0, [r6, #0]
  myCollisionHandle = osThreadNew(Collision, NULL, &myCollision_attributes);
90003fee:	4828      	ldr	r0, [pc, #160]	@ (90004090 <main+0x778>)
90003ff0:	f00b f860 	bl	9000f0b4 <osThreadNew>
  myBotHandle = osThreadNew(Bot, NULL, &myBot_attributes);
90003ff4:	4621      	mov	r1, r4
90003ff6:	4a27      	ldr	r2, [pc, #156]	@ (90004094 <main+0x77c>)
  myCollisionHandle = osThreadNew(Collision, NULL, &myCollision_attributes);
90003ff8:	6028      	str	r0, [r5, #0]
90003ffa:	e04f      	b.n	9000409c <main+0x784>
90003ffc:	24009174 	.word	0x24009174
90004000:	52001000 	.word	0x52001000
90004004:	24009264 	.word	0x24009264
90004008:	24008ed0 	.word	0x24008ed0
9000400c:	52004140 	.word	0x52004140
90004010:	52003000 	.word	0x52003000
90004014:	2400911c 	.word	0x2400911c
90004018:	240091dc 	.word	0x240091dc
9000401c:	58024c00 	.word	0x58024c00
90004020:	40022000 	.word	0x40022000
90004024:	24009200 	.word	0x24009200
90004028:	40022100 	.word	0x40022100
9000402c:	24008ec0 	.word	0x24008ec0
90004030:	04300002 	.word	0x04300002
90004034:	24008f50 	.word	0x24008f50
90004038:	24008ec4 	.word	0x24008ec4
9000403c:	40010000 	.word	0x40010000
90004040:	24008f04 	.word	0x24008f04
90004044:	24008ebc 	.word	0x24008ebc
90004048:	9002d218 	.word	0x9002d218
9000404c:	24008eb4 	.word	0x24008eb4
90004050:	9002d200 	.word	0x9002d200
90004054:	24008eb0 	.word	0x24008eb0
90004058:	9002d1e8 	.word	0x9002d1e8
9000405c:	24008eac 	.word	0x24008eac
90004060:	9002d1d0 	.word	0x9002d1d0
90004064:	24008ea8 	.word	0x24008ea8
90004068:	9002d2e4 	.word	0x9002d2e4
9000406c:	9000363d 	.word	0x9000363d
90004070:	9002d2c0 	.word	0x9002d2c0
90004074:	90000ac5 	.word	0x90000ac5
90004078:	24008ec8 	.word	0x24008ec8
9000407c:	9002d29c 	.word	0x9002d29c
90004080:	90003641 	.word	0x90003641
90004084:	9002d278 	.word	0x9002d278
90004088:	900036e1 	.word	0x900036e1
9000408c:	9002d254 	.word	0x9002d254
90004090:	90004189 	.word	0x90004189
90004094:	9002d230 	.word	0x9002d230
90004098:	24008ecc 	.word	0x24008ecc
  myBotHandle = osThreadNew(Bot, NULL, &myBot_attributes);
9000409c:	480c      	ldr	r0, [pc, #48]	@ (900040d0 <main+0x7b8>)
9000409e:	f00b f809 	bl	9000f0b4 <osThreadNew>
900040a2:	4c0c      	ldr	r4, [pc, #48]	@ (900040d4 <main+0x7bc>)
900040a4:	4603      	mov	r3, r0
  osThreadSuspend(defaultTaskHandle);
900040a6:	f8d8 0000 	ldr.w	r0, [r8]
  myBotHandle = osThreadNew(Bot, NULL, &myBot_attributes);
900040aa:	6023      	str	r3, [r4, #0]
  osThreadSuspend(defaultTaskHandle);
900040ac:	f00b f844 	bl	9000f138 <osThreadSuspend>
  osThreadSuspend(readStick1Handle);
900040b0:	6838      	ldr	r0, [r7, #0]
900040b2:	f00b f841 	bl	9000f138 <osThreadSuspend>
  osThreadSuspend(readStick2Handle);
900040b6:	6830      	ldr	r0, [r6, #0]
900040b8:	f00b f83e 	bl	9000f138 <osThreadSuspend>
  osThreadSuspend(myCollisionHandle);
900040bc:	6828      	ldr	r0, [r5, #0]
900040be:	f00b f83b 	bl	9000f138 <osThreadSuspend>
  osThreadSuspend(myBotHandle);
900040c2:	6820      	ldr	r0, [r4, #0]
900040c4:	f00b f838 	bl	9000f138 <osThreadSuspend>
  osKernelStart();
900040c8:	f00a ffda 	bl	9000f080 <osKernelStart>
  while (1)
900040cc:	e7fe      	b.n	900040cc <main+0x7b4>
900040ce:	bf00      	nop
900040d0:	90003781 	.word	0x90003781
900040d4:	24008eb8 	.word	0x24008eb8

900040d8 <vy_change>:
int vy_change(int vy){
900040d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900040dc:	4604      	mov	r4, r0
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
900040de:	f008 fb31 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
900040e2:	4a25      	ldr	r2, [pc, #148]	@ (90004178 <vy_change+0xa0>)
900040e4:	4603      	mov	r3, r0
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
900040e6:	4825      	ldr	r0, [pc, #148]	@ (9000417c <vy_change+0xa4>)
	vy = -vy; // reverse y direction
900040e8:	4266      	negs	r6, r4
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
900040ea:	fba2 2303 	umull	r2, r3, r2, r3
	long randNum = rand() % 10; // generate a random number between 0 and 9
900040ee:	4d24      	ldr	r5, [pc, #144]	@ (90004180 <vy_change+0xa8>)
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
900040f0:	6801      	ldr	r1, [r0, #0]
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
900040f2:	0a9a      	lsrs	r2, r3, #10
    uint32_t pulse = period / 2;
900040f4:	0adb      	lsrs	r3, r3, #11
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
900040f6:	62ca      	str	r2, [r1, #44]	@ 0x2c
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, pulse);
900040f8:	634b      	str	r3, [r1, #52]	@ 0x34
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
900040fa:	2100      	movs	r1, #0
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
900040fc:	60c2      	str	r2, [r0, #12]
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
900040fe:	f00a fa47 	bl	9000e590 <HAL_TIM_PWM_Start>
    HAL_TIM_Base_Start_IT(&htim2);
90004102:	4820      	ldr	r0, [pc, #128]	@ (90004184 <vy_change+0xac>)
90004104:	f00a f938 	bl	9000e378 <HAL_TIM_Base_Start_IT>
	long randNum = rand() % 10; // generate a random number between 0 and 9
90004108:	f026 fc0a 	bl	9002a920 <rand>
9000410c:	fb85 3200 	smull	r3, r2, r5, r0
90004110:	17c3      	asrs	r3, r0, #31
90004112:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
90004116:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000411a:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
	if (randNum >= 5) { // 50% chance to change velocity
9000411e:	2b04      	cmp	r3, #4
90004120:	dd1b      	ble.n	9000415a <vy_change+0x82>
		int change = randNum < 8 ? 1 : 2; // 30% chance for 1, 20% chance for 2
90004122:	2b07      	cmp	r3, #7
90004124:	bfcb      	itete	gt
90004126:	f06f 0801 	mvngt.w	r8, #1
9000412a:	f04f 38ff 	movle.w	r8, #4294967295	@ 0xffffffff
9000412e:	2702      	movgt	r7, #2
90004130:	2701      	movle	r7, #1
		randNum = rand() % 10;
90004132:	f026 fbf5 	bl	9002a920 <rand>
90004136:	fb85 3500 	smull	r3, r5, r5, r0
9000413a:	17c3      	asrs	r3, r0, #31
9000413c:	ebc3 05a5 	rsb	r5, r3, r5, asr #2
90004140:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90004144:	eba0 0045 	sub.w	r0, r0, r5, lsl #1
		change *= randNum < 5 ? 1 : -1; // 30% chance for 1, 20% chance for 2
90004148:	2804      	cmp	r0, #4
9000414a:	dc09      	bgt.n	90004160 <vy_change+0x88>
		}else if (vy<0 && vy+change>=0){
9000414c:	2c00      	cmp	r4, #0
9000414e:	eba7 0304 	sub.w	r3, r7, r4
90004152:	dd0d      	ble.n	90004170 <vy_change+0x98>
90004154:	2b00      	cmp	r3, #0
90004156:	db0b      	blt.n	90004170 <vy_change+0x98>
			vy-=change;
90004158:	1bf6      	subs	r6, r6, r7
}
9000415a:	4630      	mov	r0, r6
9000415c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if(vy>0 && vy+change<=0){
90004160:	2c00      	cmp	r4, #0
90004162:	eba8 0604 	sub.w	r6, r8, r4
90004166:	daf8      	bge.n	9000415a <vy_change+0x82>
90004168:	2e00      	cmp	r6, #0
9000416a:	dcf6      	bgt.n	9000415a <vy_change+0x82>
			vy-=change;
9000416c:	1b3e      	subs	r6, r7, r4
9000416e:	e7f4      	b.n	9000415a <vy_change+0x82>
90004170:	461e      	mov	r6, r3
}
90004172:	4630      	mov	r0, r6
90004174:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90004178:	c9a633fd 	.word	0xc9a633fd
9000417c:	24008f50 	.word	0x24008f50
90004180:	66666667 	.word	0x66666667
90004184:	24008f04 	.word	0x24008f04

90004188 <Collision>:
{
90004188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	int vx=3,vy=3;
9000418c:	2503      	movs	r5, #3
{
9000418e:	b083      	sub	sp, #12
90004190:	4c93      	ldr	r4, [pc, #588]	@ (900043e0 <Collision+0x258>)
90004192:	f8df 8268 	ldr.w	r8, [pc, #616]	@ 900043fc <Collision+0x274>
	int vx=3,vy=3;
90004196:	462e      	mov	r6, r5
90004198:	f8df 9250 	ldr.w	r9, [pc, #592]	@ 900043ec <Collision+0x264>
9000419c:	4f91      	ldr	r7, [pc, #580]	@ (900043e4 <Collision+0x25c>)
9000419e:	f8df b260 	ldr.w	fp, [pc, #608]	@ 90004400 <Collision+0x278>
900041a2:	f8df a260 	ldr.w	sl, [pc, #608]	@ 90004404 <Collision+0x27c>
900041a6:	e08c      	b.n	900042c2 <Collision+0x13a>
		}else if(ballPos.y+ (2*r)>262){
900041a8:	2bf2      	cmp	r3, #242	@ 0xf2
900041aa:	f300 8099 	bgt.w	900042e0 <Collision+0x158>
		if (ballPos.x - r < leftStick.p.x + leftStick.w &&
900041ae:	6823      	ldr	r3, [r4, #0]
900041b0:	f8d8 1000 	ldr.w	r1, [r8]
900041b4:	f8d8 200c 	ldr.w	r2, [r8, #12]
900041b8:	f1a3 000a 	sub.w	r0, r3, #10
900041bc:	440a      	add	r2, r1
900041be:	4290      	cmp	r0, r2
900041c0:	da0f      	bge.n	900041e2 <Collision+0x5a>
		    ballPos.x + r > leftStick.p.x &&
900041c2:	f103 020a 	add.w	r2, r3, #10
		if (ballPos.x - r < leftStick.p.x + leftStick.w &&
900041c6:	4291      	cmp	r1, r2
900041c8:	da0b      	bge.n	900041e2 <Collision+0x5a>
		    ballPos.y - r < leftStick.p.y + leftStick.h &&
900041ca:	6861      	ldr	r1, [r4, #4]
900041cc:	e9d8 0201 	ldrd	r0, r2, [r8, #4]
900041d0:	f1a1 0c0a 	sub.w	ip, r1, #10
900041d4:	4402      	add	r2, r0
		    ballPos.x + r > leftStick.p.x &&
900041d6:	4594      	cmp	ip, r2
900041d8:	da03      	bge.n	900041e2 <Collision+0x5a>
		    ballPos.y + r > leftStick.p.y) {
900041da:	310a      	adds	r1, #10
		    ballPos.y - r < leftStick.p.y + leftStick.h &&
900041dc:	4288      	cmp	r0, r1
900041de:	f2c0 8087 	blt.w	900042f0 <Collision+0x168>
		if (ballPos.x  < rightStick.p.x + rightStick.w &&
900041e2:	6839      	ldr	r1, [r7, #0]
900041e4:	68fa      	ldr	r2, [r7, #12]
900041e6:	440a      	add	r2, r1
900041e8:	429a      	cmp	r2, r3
900041ea:	dd0d      	ble.n	90004208 <Collision+0x80>
		    ballPos.x + 2*r > rightStick.p.x &&
900041ec:	f103 0214 	add.w	r2, r3, #20
		if (ballPos.x  < rightStick.p.x + rightStick.w &&
900041f0:	4291      	cmp	r1, r2
900041f2:	da09      	bge.n	90004208 <Collision+0x80>
		    ballPos.y   < rightStick.p.y + rightStick.h &&
900041f4:	6861      	ldr	r1, [r4, #4]
900041f6:	e9d7 0201 	ldrd	r0, r2, [r7, #4]
900041fa:	4402      	add	r2, r0
		    ballPos.x + 2*r > rightStick.p.x &&
900041fc:	4291      	cmp	r1, r2
900041fe:	da03      	bge.n	90004208 <Collision+0x80>
		    ballPos.y + 2*r > rightStick.p.y) {
90004200:	3114      	adds	r1, #20
		    ballPos.y   < rightStick.p.y + rightStick.h &&
90004202:	4288      	cmp	r0, r1
90004204:	f2c0 809e 	blt.w	90004344 <Collision+0x1bc>
		if(ballPos.x<0 ||ballPos.x>480){
90004208:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
9000420c:	d94d      	bls.n	900042aa <Collision+0x122>
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
9000420e:	f008 fa99 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
90004212:	4a75      	ldr	r2, [pc, #468]	@ (900043e8 <Collision+0x260>)
90004214:	4603      	mov	r3, r0
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
90004216:	f8d9 5000 	ldr.w	r5, [r9]
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
9000421a:	2100      	movs	r1, #0
9000421c:	4873      	ldr	r0, [pc, #460]	@ (900043ec <Collision+0x264>)
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
9000421e:	fba2 2303 	umull	r2, r3, r2, r3
90004222:	0a1a      	lsrs	r2, r3, #8
    uint32_t pulse = period / 2;
90004224:	0a5b      	lsrs	r3, r3, #9
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
90004226:	62ea      	str	r2, [r5, #44]	@ 0x2c
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, pulse);
90004228:	636b      	str	r3, [r5, #52]	@ 0x34
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
9000422a:	f8c9 200c 	str.w	r2, [r9, #12]
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
9000422e:	f00a f9af 	bl	9000e590 <HAL_TIM_PWM_Start>
    HAL_TIM_Base_Start_IT(&htim2);
90004232:	486f      	ldr	r0, [pc, #444]	@ (900043f0 <Collision+0x268>)
90004234:	f00a f8a0 	bl	9000e378 <HAL_TIM_Base_Start_IT>
			if(ballPos.x<0){
90004238:	6823      	ldr	r3, [r4, #0]
			score.x=0;
9000423a:	2000      	movs	r0, #0
9000423c:	2100      	movs	r1, #0
			if(ballPos.x<0){
9000423e:	2b00      	cmp	r3, #0
				score.y=1;
90004240:	f04f 0301 	mov.w	r3, #1
			long randNum = rand()% 10;
90004244:	4d6b      	ldr	r5, [pc, #428]	@ (900043f4 <Collision+0x26c>)
			score.x=0;
90004246:	e9cd 0100 	strd	r0, r1, [sp]
				score.y=1;
9000424a:	bfb8      	it	lt
9000424c:	9301      	strlt	r3, [sp, #4]
			osMessageQueuePut(scoreQueHandle, &score, 0,0);
9000424e:	4669      	mov	r1, sp
				score.x=1;
90004250:	bfa8      	it	ge
90004252:	9300      	strge	r3, [sp, #0]
			osMessageQueuePut(scoreQueHandle, &score, 0,0);
90004254:	2300      	movs	r3, #0
90004256:	f8db 0000 	ldr.w	r0, [fp]
9000425a:	461a      	mov	r2, r3
9000425c:	f00b f87e 	bl	9000f35c <osMessageQueuePut>
			ballPos.x=240;
90004260:	2388      	movs	r3, #136	@ 0x88
90004262:	22f0      	movs	r2, #240	@ 0xf0
90004264:	e9c4 2300 	strd	r2, r3, [r4]
			long randNum = rand()% 10;
90004268:	f026 fb5a 	bl	9002a920 <rand>
9000426c:	fb85 3200 	smull	r3, r2, r5, r0
90004270:	17c3      	asrs	r3, r0, #31
90004272:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
90004276:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000427a:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
			vx= randNum < 5 ? 3 : -3;
9000427e:	2804      	cmp	r0, #4
90004280:	bfcc      	ite	gt
90004282:	f06f 0602 	mvngt.w	r6, #2
90004286:	2603      	movle	r6, #3
			randNum = rand()% 10;
90004288:	f026 fb4a 	bl	9002a920 <rand>
9000428c:	fb85 3500 	smull	r3, r5, r5, r0
90004290:	17c3      	asrs	r3, r0, #31
90004292:	ebc3 05a5 	rsb	r5, r3, r5, asr #2
		ballPos.x+=vx;
90004296:	6823      	ldr	r3, [r4, #0]
			randNum = rand()% 10;
90004298:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000429c:	eba0 0045 	sub.w	r0, r0, r5, lsl #1
			vy= randNum < 5 ? 3 : -3;
900042a0:	2804      	cmp	r0, #4
900042a2:	bfcc      	ite	gt
900042a4:	f06f 0502 	mvngt.w	r5, #2
900042a8:	2503      	movle	r5, #3
		ballPos.y+=vy;
900042aa:	6862      	ldr	r2, [r4, #4]
		ballPos.x+=vx;
900042ac:	4433      	add	r3, r6
		osMessageQueuePut(BallQueueHandle, &ballPos, 0,0);
900042ae:	494c      	ldr	r1, [pc, #304]	@ (900043e0 <Collision+0x258>)
		ballPos.y+=vy;
900042b0:	442a      	add	r2, r5
		osMessageQueuePut(BallQueueHandle, &ballPos, 0,0);
900042b2:	f8da 0000 	ldr.w	r0, [sl]
		ballPos.y+=vy;
900042b6:	e9c4 3200 	strd	r3, r2, [r4]
		osMessageQueuePut(BallQueueHandle, &ballPos, 0,0);
900042ba:	2300      	movs	r3, #0
900042bc:	461a      	mov	r2, r3
900042be:	f00b f84d 	bl	9000f35c <osMessageQueuePut>
		osDelay(30);
900042c2:	201e      	movs	r0, #30
900042c4:	f00a ff58 	bl	9000f178 <osDelay>
		if(ballPos.y<10){
900042c8:	6863      	ldr	r3, [r4, #4]
900042ca:	2b09      	cmp	r3, #9
900042cc:	f73f af6c 	bgt.w	900041a8 <Collision+0x20>
			vy = vy_change(vy);
900042d0:	4628      	mov	r0, r5
900042d2:	f7ff ff01 	bl	900040d8 <vy_change>
			vy= vy>0 ? vy :-vy;
900042d6:	ea80 75e0 	eor.w	r5, r0, r0, asr #31
900042da:	eba5 75e0 	sub.w	r5, r5, r0, asr #31
900042de:	e766      	b.n	900041ae <Collision+0x26>
			vy = vy_change(vy);
900042e0:	4628      	mov	r0, r5
900042e2:	f7ff fef9 	bl	900040d8 <vy_change>
			vy= vy>0 ? -vy :vy;
900042e6:	ea80 75e0 	eor.w	r5, r0, r0, asr #31
900042ea:	ebc5 75e0 	rsb	r5, r5, r0, asr #31
900042ee:	e75e      	b.n	900041ae <Collision+0x26>
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
900042f0:	f008 fa28 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
900042f4:	4b40      	ldr	r3, [pc, #256]	@ (900043f8 <Collision+0x270>)
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
900042f6:	f8d9 c000 	ldr.w	ip, [r9]
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
900042fa:	2100      	movs	r1, #0
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
900042fc:	fba3 2300 	umull	r2, r3, r3, r0
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
90004300:	483a      	ldr	r0, [pc, #232]	@ (900043ec <Collision+0x264>)
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
90004302:	0a9a      	lsrs	r2, r3, #10
    uint32_t pulse = period / 2;
90004304:	0adb      	lsrs	r3, r3, #11
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
90004306:	f8cc 202c 	str.w	r2, [ip, #44]	@ 0x2c
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, pulse);
9000430a:	f8cc 3034 	str.w	r3, [ip, #52]	@ 0x34
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
9000430e:	f8c9 200c 	str.w	r2, [r9, #12]
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
90004312:	f00a f93d 	bl	9000e590 <HAL_TIM_PWM_Start>
    HAL_TIM_Base_Start_IT(&htim2);
90004316:	4836      	ldr	r0, [pc, #216]	@ (900043f0 <Collision+0x268>)
90004318:	f00a f82e 	bl	9000e378 <HAL_TIM_Base_Start_IT>
	long randNum = rand()% 10; // generate a random number between 0 and 9
9000431c:	f026 fb00 	bl	9002a920 <rand>
90004320:	4a34      	ldr	r2, [pc, #208]	@ (900043f4 <Collision+0x26c>)
90004322:	fb82 3200 	smull	r3, r2, r2, r0
90004326:	17c3      	asrs	r3, r0, #31
90004328:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
9000432c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90004330:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
	if (randNum >= 5) { // 50% chance to change velocity
90004334:	2b04      	cmp	r3, #4
90004336:	dc3d      	bgt.n	900043b4 <Collision+0x22c>
	vx = -vx; // reverse x direction
90004338:	4276      	negs	r6, r6
	if (vx == 0) vx = 1; // ensure vx is never 0
9000433a:	2e00      	cmp	r6, #0
9000433c:	d144      	bne.n	900043c8 <Collision+0x240>
9000433e:	2601      	movs	r6, #1
		if (ballPos.x  < rightStick.p.x + rightStick.w &&
90004340:	6823      	ldr	r3, [r4, #0]
90004342:	e74e      	b.n	900041e2 <Collision+0x5a>
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
90004344:	f008 f9fe 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
90004348:	4b2b      	ldr	r3, [pc, #172]	@ (900043f8 <Collision+0x270>)
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
9000434a:	f8d9 c000 	ldr.w	ip, [r9]
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
9000434e:	2100      	movs	r1, #0
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
90004350:	fba3 2300 	umull	r2, r3, r3, r0
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
90004354:	4825      	ldr	r0, [pc, #148]	@ (900043ec <Collision+0x264>)
    uint32_t period = HAL_RCC_GetPCLK1Freq() / frequency;
90004356:	0a9a      	lsrs	r2, r3, #10
    uint32_t pulse = period / 2;
90004358:	0adb      	lsrs	r3, r3, #11
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
9000435a:	f8cc 202c 	str.w	r2, [ip, #44]	@ 0x2c
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, pulse);
9000435e:	f8cc 3034 	str.w	r3, [ip, #52]	@ 0x34
    __HAL_TIM_SET_AUTORELOAD(&htim1, period);
90004362:	f8c9 200c 	str.w	r2, [r9, #12]
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
90004366:	f00a f913 	bl	9000e590 <HAL_TIM_PWM_Start>
    HAL_TIM_Base_Start_IT(&htim2);
9000436a:	4821      	ldr	r0, [pc, #132]	@ (900043f0 <Collision+0x268>)
9000436c:	f00a f804 	bl	9000e378 <HAL_TIM_Base_Start_IT>
	long randNum = rand()% 10; // generate a random number between 0 and 9
90004370:	f026 fad6 	bl	9002a920 <rand>
90004374:	4a1f      	ldr	r2, [pc, #124]	@ (900043f4 <Collision+0x26c>)
90004376:	fb82 3200 	smull	r3, r2, r2, r0
9000437a:	17c3      	asrs	r3, r0, #31
9000437c:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
90004380:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90004384:	eba0 0343 	sub.w	r3, r0, r3, lsl #1
	if (randNum >= 5) { // 50% chance to change velocity
90004388:	2b04      	cmp	r3, #4
9000438a:	dc05      	bgt.n	90004398 <Collision+0x210>
	vx = -vx; // reverse x direction
9000438c:	4276      	negs	r6, r6
	if (vx == 0) vx = 1; // ensure vx is never 0
9000438e:	b96e      	cbnz	r6, 900043ac <Collision+0x224>
90004390:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
		if(ballPos.x<0 ||ballPos.x>480){
90004394:	6823      	ldr	r3, [r4, #0]
90004396:	e737      	b.n	90004208 <Collision+0x80>
		int change = randNum < 8 ? 1 : 0; // 30% chance for 1, 20% chance for 2
90004398:	2b07      	cmp	r3, #7
9000439a:	bfcc      	ite	gt
9000439c:	2300      	movgt	r3, #0
9000439e:	2301      	movle	r3, #1
		vx += vx > 0 ? change : -change; // add or subtract depending on sign of vx
900043a0:	2e00      	cmp	r6, #0
900043a2:	db17      	blt.n	900043d4 <Collision+0x24c>
900043a4:	425b      	negs	r3, r3
900043a6:	1b9e      	subs	r6, r3, r6
	if (vx == 0) vx = 1; // ensure vx is never 0
900043a8:	2e00      	cmp	r6, #0
900043aa:	d0f1      	beq.n	90004390 <Collision+0x208>
		    vx= vx>0 ? -vx :vx;
900043ac:	2e00      	cmp	r6, #0
900043ae:	bfc8      	it	gt
900043b0:	4276      	neggt	r6, r6
900043b2:	e7ef      	b.n	90004394 <Collision+0x20c>
		int change = randNum < 8 ? 1 : 0; // 30% chance for 1, 20% chance for 2
900043b4:	2b07      	cmp	r3, #7
900043b6:	bfcc      	ite	gt
900043b8:	2300      	movgt	r3, #0
900043ba:	2301      	movle	r3, #1
		vx += vx > 0 ? change : -change; // add or subtract depending on sign of vx
900043bc:	2e00      	cmp	r6, #0
900043be:	db07      	blt.n	900043d0 <Collision+0x248>
900043c0:	425b      	negs	r3, r3
900043c2:	1b9e      	subs	r6, r3, r6
	if (vx == 0) vx = 1; // ensure vx is never 0
900043c4:	2e00      	cmp	r6, #0
900043c6:	d0ba      	beq.n	9000433e <Collision+0x1b6>
		    vx= vx>0 ? vx :-vx;
900043c8:	2e00      	cmp	r6, #0
900043ca:	bfb8      	it	lt
900043cc:	4276      	neglt	r6, r6
900043ce:	e7b7      	b.n	90004340 <Collision+0x1b8>
900043d0:	1b9e      	subs	r6, r3, r6
	if (vx == 0) vx = 1; // ensure vx is never 0
900043d2:	e7b5      	b.n	90004340 <Collision+0x1b8>
		    vx= vx>0 ? -vx :vx;
900043d4:	1b9b      	subs	r3, r3, r6
900043d6:	ea83 76e3 	eor.w	r6, r3, r3, asr #31
900043da:	ebc6 76e3 	rsb	r6, r6, r3, asr #31
900043de:	e7d9      	b.n	90004394 <Collision+0x20c>
900043e0:	240092d0 	.word	0x240092d0
900043e4:	240092e8 	.word	0x240092e8
900043e8:	2ad5802b 	.word	0x2ad5802b
900043ec:	24008f50 	.word	0x24008f50
900043f0:	24008f04 	.word	0x24008f04
900043f4:	66666667 	.word	0x66666667
900043f8:	c9a633fd 	.word	0xc9a633fd
900043fc:	240092d8 	.word	0x240092d8
90004400:	24008ea8 	.word	0x24008ea8
90004404:	24008eac 	.word	0x24008eac

90004408 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90004408:	4a10      	ldr	r2, [pc, #64]	@ (9000444c <HAL_TIM_PeriodElapsedCallback+0x44>)
9000440a:	6803      	ldr	r3, [r0, #0]
9000440c:	4293      	cmp	r3, r2
{
9000440e:	b510      	push	{r4, lr}
  if (htim->Instance == TIM6) {
90004410:	d017      	beq.n	90004442 <HAL_TIM_PeriodElapsedCallback+0x3a>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM2) {
90004412:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
90004416:	d000      	beq.n	9000441a <HAL_TIM_PeriodElapsedCallback+0x12>
		  timer_ticks = 0;
		  HAL_TIM_Base_Stop_IT(&htim2); // Stop the timer interrupt
	  }
  }
  /* USER CODE END Callback 1 */
}
90004418:	bd10      	pop	{r4, pc}
	  timer_ticks++;
9000441a:	4c0d      	ldr	r4, [pc, #52]	@ (90004450 <HAL_TIM_PeriodElapsedCallback+0x48>)
      HAL_IncTick();
9000441c:	f003 fc82 	bl	90007d24 <HAL_IncTick>
	  timer_ticks++;
90004420:	6823      	ldr	r3, [r4, #0]
90004422:	3301      	adds	r3, #1
90004424:	6023      	str	r3, [r4, #0]
	  if (timer_ticks >= 200) { // 500 ticks = 0.5 seconds
90004426:	6823      	ldr	r3, [r4, #0]
90004428:	2bc7      	cmp	r3, #199	@ 0xc7
9000442a:	d9f5      	bls.n	90004418 <HAL_TIM_PeriodElapsedCallback+0x10>
		  HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
9000442c:	2100      	movs	r1, #0
9000442e:	4809      	ldr	r0, [pc, #36]	@ (90004454 <HAL_TIM_PeriodElapsedCallback+0x4c>)
90004430:	f00a f94e 	bl	9000e6d0 <HAL_TIM_PWM_Stop>
		  timer_ticks = 0;
90004434:	2300      	movs	r3, #0
		  HAL_TIM_Base_Stop_IT(&htim2); // Stop the timer interrupt
90004436:	4808      	ldr	r0, [pc, #32]	@ (90004458 <HAL_TIM_PeriodElapsedCallback+0x50>)
		  timer_ticks = 0;
90004438:	6023      	str	r3, [r4, #0]
}
9000443a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		  HAL_TIM_Base_Stop_IT(&htim2); // Stop the timer interrupt
9000443e:	f009 bfed 	b.w	9000e41c <HAL_TIM_Base_Stop_IT>
90004442:	4604      	mov	r4, r0
    HAL_IncTick();
90004444:	f003 fc6e 	bl	90007d24 <HAL_IncTick>
  if (htim->Instance == TIM2) {
90004448:	6823      	ldr	r3, [r4, #0]
9000444a:	e7e2      	b.n	90004412 <HAL_TIM_PeriodElapsedCallback+0xa>
9000444c:	40001000 	.word	0x40001000
90004450:	240092c8 	.word	0x240092c8
90004454:	24008f50 	.word	0x24008f50
90004458:	24008f04 	.word	0x24008f04

9000445c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
9000445c:	4770      	bx	lr
9000445e:	bf00      	nop

90004460 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004460:	4b0b      	ldr	r3, [pc, #44]	@ (90004490 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004462:	2200      	movs	r2, #0
90004464:	210f      	movs	r1, #15
90004466:	f06f 0001 	mvn.w	r0, #1
{
9000446a:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000446c:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90004470:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004472:	f044 0402 	orr.w	r4, r4, #2
90004476:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
9000447a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
9000447e:	f003 0302 	and.w	r3, r3, #2
90004482:	9301      	str	r3, [sp, #4]
90004484:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90004486:	b003      	add	sp, #12
90004488:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000448c:	f004 baf4 	b.w	90008a78 <HAL_NVIC_SetPriority>
90004490:	58024400 	.word	0x58024400

90004494 <HAL_ADC_MspInit>:
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
  if(hadc->Instance==ADC1)
90004494:	4a2b      	ldr	r2, [pc, #172]	@ (90004544 <HAL_ADC_MspInit+0xb0>)
{
90004496:	b084      	sub	sp, #16
  if(hadc->Instance==ADC1)
90004498:	6803      	ldr	r3, [r0, #0]
9000449a:	4293      	cmp	r3, r2
9000449c:	d01d      	beq.n	900044da <HAL_ADC_MspInit+0x46>

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
  else if(hadc->Instance==ADC2)
9000449e:	4a2a      	ldr	r2, [pc, #168]	@ (90004548 <HAL_ADC_MspInit+0xb4>)
900044a0:	4293      	cmp	r3, r2
900044a2:	d001      	beq.n	900044a8 <HAL_ADC_MspInit+0x14>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
900044a4:	b004      	add	sp, #16
900044a6:	4770      	bx	lr
    HAL_RCC_ADC12_CLK_ENABLED++;
900044a8:	4a28      	ldr	r2, [pc, #160]	@ (9000454c <HAL_ADC_MspInit+0xb8>)
900044aa:	6813      	ldr	r3, [r2, #0]
900044ac:	3301      	adds	r3, #1
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
900044ae:	2b01      	cmp	r3, #1
    HAL_RCC_ADC12_CLK_ENABLED++;
900044b0:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
900044b2:	d039      	beq.n	90004528 <HAL_ADC_MspInit+0x94>
    __HAL_RCC_GPIOA_CLK_ENABLE();
900044b4:	4b26      	ldr	r3, [pc, #152]	@ (90004550 <HAL_ADC_MspInit+0xbc>)
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA1, SYSCFG_SWITCH_PA1_OPEN);
900044b6:	f04f 7100 	mov.w	r1, #33554432	@ 0x2000000
    __HAL_RCC_GPIOA_CLK_ENABLE();
900044ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA1, SYSCFG_SWITCH_PA1_OPEN);
900044be:	4608      	mov	r0, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
900044c0:	f042 0201 	orr.w	r2, r2, #1
900044c4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900044c8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900044cc:	f003 0301 	and.w	r3, r3, #1
900044d0:	9303      	str	r3, [sp, #12]
900044d2:	9b03      	ldr	r3, [sp, #12]
}
900044d4:	b004      	add	sp, #16
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA1, SYSCFG_SWITCH_PA1_OPEN);
900044d6:	f003 bc3d 	b.w	90007d54 <HAL_SYSCFG_AnalogSwitchConfig>
    HAL_RCC_ADC12_CLK_ENABLED++;
900044da:	4a1c      	ldr	r2, [pc, #112]	@ (9000454c <HAL_ADC_MspInit+0xb8>)
900044dc:	6813      	ldr	r3, [r2, #0]
900044de:	3301      	adds	r3, #1
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
900044e0:	2b01      	cmp	r3, #1
    HAL_RCC_ADC12_CLK_ENABLED++;
900044e2:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
900044e4:	d012      	beq.n	9000450c <HAL_ADC_MspInit+0x78>
    __HAL_RCC_GPIOA_CLK_ENABLE();
900044e6:	4b1a      	ldr	r3, [pc, #104]	@ (90004550 <HAL_ADC_MspInit+0xbc>)
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA0, SYSCFG_SWITCH_PA0_OPEN);
900044e8:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
    __HAL_RCC_GPIOA_CLK_ENABLE();
900044ec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA0, SYSCFG_SWITCH_PA0_OPEN);
900044f0:	4608      	mov	r0, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
900044f2:	f042 0201 	orr.w	r2, r2, #1
900044f6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900044fa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900044fe:	f003 0301 	and.w	r3, r3, #1
90004502:	9301      	str	r3, [sp, #4]
90004504:	9b01      	ldr	r3, [sp, #4]
}
90004506:	b004      	add	sp, #16
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PA0, SYSCFG_SWITCH_PA0_OPEN);
90004508:	f003 bc24 	b.w	90007d54 <HAL_SYSCFG_AnalogSwitchConfig>
      __HAL_RCC_ADC12_CLK_ENABLE();
9000450c:	4b10      	ldr	r3, [pc, #64]	@ (90004550 <HAL_ADC_MspInit+0xbc>)
9000450e:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
90004512:	f042 0220 	orr.w	r2, r2, #32
90004516:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
9000451a:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
9000451e:	f003 0320 	and.w	r3, r3, #32
90004522:	9300      	str	r3, [sp, #0]
90004524:	9b00      	ldr	r3, [sp, #0]
90004526:	e7de      	b.n	900044e6 <HAL_ADC_MspInit+0x52>
      __HAL_RCC_ADC12_CLK_ENABLE();
90004528:	4b09      	ldr	r3, [pc, #36]	@ (90004550 <HAL_ADC_MspInit+0xbc>)
9000452a:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
9000452e:	f042 0220 	orr.w	r2, r2, #32
90004532:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
90004536:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
9000453a:	f003 0320 	and.w	r3, r3, #32
9000453e:	9302      	str	r3, [sp, #8]
90004540:	9b02      	ldr	r3, [sp, #8]
90004542:	e7b7      	b.n	900044b4 <HAL_ADC_MspInit+0x20>
90004544:	40022000 	.word	0x40022000
90004548:	40022100 	.word	0x40022100
9000454c:	24009300 	.word	0x24009300
90004550:	58024400 	.word	0x58024400

90004554 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90004554:	4b0a      	ldr	r3, [pc, #40]	@ (90004580 <HAL_CRC_MspInit+0x2c>)
90004556:	6802      	ldr	r2, [r0, #0]
90004558:	429a      	cmp	r2, r3
9000455a:	d000      	beq.n	9000455e <HAL_CRC_MspInit+0xa>
9000455c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
9000455e:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90004562:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90004564:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004568:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
9000456c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004570:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90004574:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90004578:	9301      	str	r3, [sp, #4]
9000457a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
9000457c:	b002      	add	sp, #8
9000457e:	4770      	bx	lr
90004580:	58024c00 	.word	0x58024c00

90004584 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90004584:	4b0f      	ldr	r3, [pc, #60]	@ (900045c4 <HAL_DMA2D_MspInit+0x40>)
90004586:	6802      	ldr	r2, [r0, #0]
90004588:	429a      	cmp	r2, r3
9000458a:	d000      	beq.n	9000458e <HAL_DMA2D_MspInit+0xa>
9000458c:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000458e:	4b0e      	ldr	r3, [pc, #56]	@ (900045c8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004590:	205a      	movs	r0, #90	@ 0x5a
90004592:	2200      	movs	r2, #0
90004594:	2105      	movs	r1, #5
{
90004596:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004598:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
9000459c:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000459e:	f044 0410 	orr.w	r4, r4, #16
900045a2:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
900045a6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900045aa:	f003 0310 	and.w	r3, r3, #16
900045ae:	9301      	str	r3, [sp, #4]
900045b0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900045b2:	f004 fa61 	bl	90008a78 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900045b6:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
900045b8:	b002      	add	sp, #8
900045ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900045be:	f004 ba97 	b.w	90008af0 <HAL_NVIC_EnableIRQ>
900045c2:	bf00      	nop
900045c4:	52001000 	.word	0x52001000
900045c8:	58024400 	.word	0x58024400

900045cc <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
900045cc:	4b3f      	ldr	r3, [pc, #252]	@ (900046cc <HAL_JPEG_MspInit+0x100>)
900045ce:	6802      	ldr	r2, [r0, #0]
900045d0:	429a      	cmp	r2, r3
900045d2:	d000      	beq.n	900045d6 <HAL_JPEG_MspInit+0xa>
900045d4:	4770      	bx	lr
{
900045d6:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
900045d8:	4b3d      	ldr	r3, [pc, #244]	@ (900046d0 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900045da:	2211      	movs	r2, #17
900045dc:	4e3d      	ldr	r6, [pc, #244]	@ (900046d4 <HAL_JPEG_MspInit+0x108>)
{
900045de:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900045e0:	4d3d      	ldr	r5, [pc, #244]	@ (900046d8 <HAL_JPEG_MspInit+0x10c>)
900045e2:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900045e4:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900045e6:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
900045e8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900045ec:	493b      	ldr	r1, [pc, #236]	@ (900046dc <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
900045ee:	f042 0220 	orr.w	r2, r2, #32
900045f2:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900045f6:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
900045f8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900045fc:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
900045fe:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004602:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004604:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004606:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90004608:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000460a:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000460c:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004610:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90004614:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004616:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90004618:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
9000461c:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004620:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90004622:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90004626:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
9000462a:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000462e:	2313      	movs	r3, #19
90004630:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90004632:	2302      	movs	r3, #2
90004634:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90004636:	f007 f8bd 	bl	9000b7b4 <HAL_MDMA_Init>
9000463a:	2800      	cmp	r0, #0
9000463c:	d13a      	bne.n	900046b4 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000463e:	2200      	movs	r2, #0
90004640:	4824      	ldr	r0, [pc, #144]	@ (900046d4 <HAL_JPEG_MspInit+0x108>)
90004642:	4611      	mov	r1, r2
90004644:	f007 f954 	bl	9000b8f0 <HAL_MDMA_ConfigPostRequestMask>
90004648:	2800      	cmp	r0, #0
9000464a:	d13c      	bne.n	900046c6 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000464c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000464e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004650:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004652:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004654:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90004656:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004658:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000465c:	4920      	ldr	r1, [pc, #128]	@ (900046e0 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000465e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90004660:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
90004662:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004664:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004666:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
9000466a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000466e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004670:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004672:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004676:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004678:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000467c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004680:	4815      	ldr	r0, [pc, #84]	@ (900046d8 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004682:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004684:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004686:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004688:	f007 f894 	bl	9000b7b4 <HAL_MDMA_Init>
9000468c:	b9c0      	cbnz	r0, 900046c0 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
9000468e:	2200      	movs	r2, #0
90004690:	4811      	ldr	r0, [pc, #68]	@ (900046d8 <HAL_JPEG_MspInit+0x10c>)
90004692:	4611      	mov	r1, r2
90004694:	f007 f92c 	bl	9000b8f0 <HAL_MDMA_ConfigPostRequestMask>
90004698:	b978      	cbnz	r0, 900046ba <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000469a:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
9000469c:	2079      	movs	r0, #121	@ 0x79
9000469e:	2200      	movs	r2, #0
900046a0:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900046a2:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900046a4:	f004 f9e8 	bl	90008a78 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900046a8:	2079      	movs	r0, #121	@ 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900046aa:	b002      	add	sp, #8
900046ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900046b0:	f004 ba1e 	b.w	90008af0 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900046b4:	f7ff fed2 	bl	9000445c <Error_Handler>
900046b8:	e7c1      	b.n	9000463e <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900046ba:	f7ff fecf 	bl	9000445c <Error_Handler>
900046be:	e7ec      	b.n	9000469a <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900046c0:	f7ff fecc 	bl	9000445c <Error_Handler>
900046c4:	e7e3      	b.n	9000468e <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900046c6:	f7ff fec9 	bl	9000445c <Error_Handler>
900046ca:	e7bf      	b.n	9000464c <HAL_JPEG_MspInit+0x80>
900046cc:	52003000 	.word	0x52003000
900046d0:	58024400 	.word	0x58024400
900046d4:	240090b0 	.word	0x240090b0
900046d8:	24009044 	.word	0x24009044
900046dc:	52000200 	.word	0x52000200
900046e0:	520001c0 	.word	0x520001c0

900046e4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900046e4:	b570      	push	{r4, r5, r6, lr}
900046e6:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900046e8:	2100      	movs	r1, #0
{
900046ea:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900046ec:	22c0      	movs	r2, #192	@ 0xc0
900046ee:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900046f0:	9109      	str	r1, [sp, #36]	@ 0x24
900046f2:	e9cd 1105 	strd	r1, r1, [sp, #20]
900046f6:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900046fa:	f026 fb2b 	bl	9002ad54 <memset>
  if(hltdc->Instance==LTDC)
900046fe:	4b4a      	ldr	r3, [pc, #296]	@ (90004828 <HAL_LTDC_MspInit+0x144>)
90004700:	6822      	ldr	r2, [r4, #0]
90004702:	429a      	cmp	r2, r3
90004704:	d001      	beq.n	9000470a <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90004706:	b03a      	add	sp, #232	@ 0xe8
90004708:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000470a:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000470c:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000470e:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90004712:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004714:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004716:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004718:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 93;
9000471a:	225d      	movs	r2, #93	@ 0x5d
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
9000471c:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 93;
9000471e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004722:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004724:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004726:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 93;
9000472a:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000472e:	f008 f9a9 	bl	9000ca84 <HAL_RCCEx_PeriphCLKConfig>
90004732:	2800      	cmp	r0, #0
90004734:	d174      	bne.n	90004820 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90004736:	4b3d      	ldr	r3, [pc, #244]	@ (9000482c <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004738:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000473a:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000473c:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000473e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004742:	a905      	add	r1, sp, #20
90004744:	483a      	ldr	r0, [pc, #232]	@ (90004830 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90004746:	f042 0208 	orr.w	r2, r2, #8
9000474a:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
9000474e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
90004752:	f002 0208 	and.w	r2, r2, #8
90004756:	9200      	str	r2, [sp, #0]
90004758:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000475a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000475e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90004762:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004766:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000476a:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
9000476e:	9201      	str	r2, [sp, #4]
90004770:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90004772:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004776:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
9000477a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000477e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004782:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90004786:	9202      	str	r2, [sp, #8]
90004788:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
9000478a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000478e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90004792:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004796:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000479a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
9000479e:	9203      	str	r2, [sp, #12]
900047a0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900047a6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900047aa:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900047ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900047b2:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047b8:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047ba:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900047bc:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047be:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900047c0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047c2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900047c6:	f004 fbbb 	bl	90008f40 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900047ca:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900047ce:	a905      	add	r1, sp, #20
900047d0:	4818      	ldr	r0, [pc, #96]	@ (90004834 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900047d2:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047d4:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047d8:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900047dc:	f004 fbb0 	bl	90008f40 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900047e0:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900047e4:	a905      	add	r1, sp, #20
900047e6:	4814      	ldr	r0, [pc, #80]	@ (90004838 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900047e8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047ea:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047ee:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900047f2:	f004 fba5 	bl	90008f40 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900047f6:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900047fa:	a905      	add	r1, sp, #20
900047fc:	480f      	ldr	r0, [pc, #60]	@ (9000483c <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047fe:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004800:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004804:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004808:	f004 fb9a 	bl	90008f40 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000480c:	462a      	mov	r2, r5
9000480e:	2105      	movs	r1, #5
90004810:	2058      	movs	r0, #88	@ 0x58
90004812:	f004 f931 	bl	90008a78 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90004816:	2058      	movs	r0, #88	@ 0x58
90004818:	f004 f96a 	bl	90008af0 <HAL_NVIC_EnableIRQ>
}
9000481c:	b03a      	add	sp, #232	@ 0xe8
9000481e:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004820:	f7ff fe1c 	bl	9000445c <Error_Handler>
90004824:	e787      	b.n	90004736 <HAL_LTDC_MspInit+0x52>
90004826:	bf00      	nop
90004828:	50001000 	.word	0x50001000
9000482c:	58024400 	.word	0x58024400
90004830:	58022800 	.word	0x58022800
90004834:	58022000 	.word	0x58022000
90004838:	58022400 	.word	0x58022400
9000483c:	58021c00 	.word	0x58021c00

90004840 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
90004840:	4a18      	ldr	r2, [pc, #96]	@ (900048a4 <HAL_TIM_Base_MspInit+0x64>)
90004842:	6803      	ldr	r3, [r0, #0]
90004844:	4293      	cmp	r3, r2
{
90004846:	b510      	push	{r4, lr}
90004848:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
9000484a:	d004      	beq.n	90004856 <HAL_TIM_Base_MspInit+0x16>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
9000484c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
90004850:	d010      	beq.n	90004874 <HAL_TIM_Base_MspInit+0x34>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
90004852:	b002      	add	sp, #8
90004854:	bd10      	pop	{r4, pc}
    __HAL_RCC_TIM1_CLK_ENABLE();
90004856:	4b14      	ldr	r3, [pc, #80]	@ (900048a8 <HAL_TIM_Base_MspInit+0x68>)
90004858:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
9000485c:	f042 0201 	orr.w	r2, r2, #1
90004860:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
90004864:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
90004868:	f003 0301 	and.w	r3, r3, #1
9000486c:	9300      	str	r3, [sp, #0]
9000486e:	9b00      	ldr	r3, [sp, #0]
}
90004870:	b002      	add	sp, #8
90004872:	bd10      	pop	{r4, pc}
    __HAL_RCC_TIM2_CLK_ENABLE();
90004874:	4b0c      	ldr	r3, [pc, #48]	@ (900048a8 <HAL_TIM_Base_MspInit+0x68>)
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
90004876:	201c      	movs	r0, #28
90004878:	2200      	movs	r2, #0
9000487a:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
9000487c:	f8d3 40e8 	ldr.w	r4, [r3, #232]	@ 0xe8
90004880:	f044 0401 	orr.w	r4, r4, #1
90004884:	f8c3 40e8 	str.w	r4, [r3, #232]	@ 0xe8
90004888:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
9000488c:	f003 0301 	and.w	r3, r3, #1
90004890:	9301      	str	r3, [sp, #4]
90004892:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
90004894:	f004 f8f0 	bl	90008a78 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
90004898:	201c      	movs	r0, #28
}
9000489a:	b002      	add	sp, #8
9000489c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
900048a0:	f004 b926 	b.w	90008af0 <HAL_NVIC_EnableIRQ>
900048a4:	40010000 	.word	0x40010000
900048a8:	58024400 	.word	0x58024400
900048ac:	00000000 	.word	0x00000000

900048b0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM1)
900048b0:	4a15      	ldr	r2, [pc, #84]	@ (90004908 <HAL_TIM_MspPostInit+0x58>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900048b2:	2300      	movs	r3, #0
  if(htim->Instance==TIM1)
900048b4:	6801      	ldr	r1, [r0, #0]
{
900048b6:	b510      	push	{r4, lr}
  if(htim->Instance==TIM1)
900048b8:	4291      	cmp	r1, r2
{
900048ba:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900048bc:	e9cd 3302 	strd	r3, r3, [sp, #8]
900048c0:	e9cd 3304 	strd	r3, r3, [sp, #16]
900048c4:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM1)
900048c6:	d001      	beq.n	900048cc <HAL_TIM_MspPostInit+0x1c>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
900048c8:	b008      	add	sp, #32
900048ca:	bd10      	pop	{r4, pc}
    __HAL_RCC_GPIOA_CLK_ENABLE();
900048cc:	4b0f      	ldr	r3, [pc, #60]	@ (9000490c <HAL_TIM_MspPostInit+0x5c>)
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
900048ce:	2401      	movs	r4, #1
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
900048d0:	a902      	add	r1, sp, #8
900048d2:	480f      	ldr	r0, [pc, #60]	@ (90004910 <HAL_TIM_MspPostInit+0x60>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
900048d4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900048d8:	4322      	orrs	r2, r4
900048da:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900048de:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
900048e2:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
900048e4:	4023      	ands	r3, r4
    GPIO_InitStruct.Pin = GPIO_PIN_8;
900048e6:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90004900 <HAL_TIM_MspPostInit+0x50>
    __HAL_RCC_GPIOA_CLK_ENABLE();
900048ea:	9301      	str	r3, [sp, #4]
900048ec:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
900048ee:	ed8d 7b02 	vstr	d7, [sp, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
900048f2:	f004 fb25 	bl	90008f40 <HAL_GPIO_Init>
}
900048f6:	b008      	add	sp, #32
900048f8:	bd10      	pop	{r4, pc}
900048fa:	bf00      	nop
900048fc:	f3af 8000 	nop.w
90004900:	00000100 	.word	0x00000100
90004904:	00000002 	.word	0x00000002
90004908:	40010000 	.word	0x40010000
9000490c:	58024400 	.word	0x58024400
90004910:	58020000 	.word	0x58020000

90004914 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90004914:	4836      	ldr	r0, [pc, #216]	@ (900049f0 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90004916:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004918:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000491a:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000491c:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000491e:	e9cd 3302 	strd	r3, r3, [sp, #8]
90004922:	e9cd 3304 	strd	r3, r3, [sp, #16]
90004926:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90004928:	b109      	cbz	r1, 9000492e <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000492a:	b038      	add	sp, #224	@ 0xe0
9000492c:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000492e:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004930:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
90004932:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004934:	a80a      	add	r0, sp, #40	@ 0x28
90004936:	f026 fa0d 	bl	9002ad54 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000493a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000493e:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004940:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004942:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004946:	f008 f89d 	bl	9000ca84 <HAL_RCCEx_PeriphCLKConfig>
9000494a:	2800      	cmp	r0, #0
9000494c:	d14c      	bne.n	900049e8 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
9000494e:	4b29      	ldr	r3, [pc, #164]	@ (900049f4 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004950:	f64f 7083 	movw	r0, #65411	@ 0xff83
90004954:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004956:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90004958:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000495c:	2600      	movs	r6, #0
9000495e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004960:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004964:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004968:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000496c:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000496e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004972:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90004976:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004978:	a902      	add	r1, sp, #8
9000497a:	481f      	ldr	r0, [pc, #124]	@ (900049f8 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000497c:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000497e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004982:	f004 fadd 	bl	90008f40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004986:	f248 1233 	movw	r2, #33075	@ 0x8133
9000498a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000498c:	a902      	add	r1, sp, #8
9000498e:	481b      	ldr	r0, [pc, #108]	@ (900049fc <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004990:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004992:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004996:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000499a:	f004 fad1 	bl	90008f40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000499e:	f24c 7203 	movw	r2, #50947	@ 0xc703
900049a2:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900049a4:	a902      	add	r1, sp, #8
900049a6:	4816      	ldr	r0, [pc, #88]	@ (90004a00 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900049a8:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900049aa:	e9cd 2302 	strd	r2, r3, [sp, #8]
900049ae:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900049b2:	f004 fac5 	bl	90008f40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900049b6:	f64f 023f 	movw	r2, #63551	@ 0xf83f
900049ba:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900049bc:	a902      	add	r1, sp, #8
900049be:	4811      	ldr	r0, [pc, #68]	@ (90004a04 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900049c0:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900049c2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900049c6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900049ca:	f004 fab9 	bl	90008f40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900049ce:	22e0      	movs	r2, #224	@ 0xe0
900049d0:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900049d2:	a902      	add	r1, sp, #8
900049d4:	480c      	ldr	r0, [pc, #48]	@ (90004a08 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900049d6:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900049d8:	e9cd 6704 	strd	r6, r7, [sp, #16]
900049dc:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900049e0:	f004 faae 	bl	90008f40 <HAL_GPIO_Init>
}
900049e4:	b038      	add	sp, #224	@ 0xe0
900049e6:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900049e8:	f7ff fd38 	bl	9000445c <Error_Handler>
900049ec:	e7af      	b.n	9000494e <HAL_SDRAM_MspInit+0x3a>
900049ee:	bf00      	nop
900049f0:	240092fc 	.word	0x240092fc
900049f4:	58024400 	.word	0x58024400
900049f8:	58021000 	.word	0x58021000
900049fc:	58021800 	.word	0x58021800
90004a00:	58020c00 	.word	0x58020c00
90004a04:	58021400 	.word	0x58021400
90004a08:	58021c00 	.word	0x58021c00

90004a0c <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90004a0c:	4b13      	ldr	r3, [pc, #76]	@ (90004a5c <HAL_SDRAM_MspDeInit+0x50>)
90004a0e:	681a      	ldr	r2, [r3, #0]
90004a10:	b102      	cbz	r2, 90004a14 <HAL_SDRAM_MspDeInit+0x8>
90004a12:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90004a14:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90004a16:	4a12      	ldr	r2, [pc, #72]	@ (90004a60 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90004a18:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004a1a:	f64f 7183 	movw	r1, #65411	@ 0xff83
90004a1e:	4811      	ldr	r0, [pc, #68]	@ (90004a64 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90004a20:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90004a22:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
90004a26:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90004a2a:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004a2e:	f004 fbc9 	bl	900091c4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004a32:	f248 1133 	movw	r1, #33075	@ 0x8133
90004a36:	480c      	ldr	r0, [pc, #48]	@ (90004a68 <HAL_SDRAM_MspDeInit+0x5c>)
90004a38:	f004 fbc4 	bl	900091c4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004a3c:	f24c 7103 	movw	r1, #50947	@ 0xc703
90004a40:	480a      	ldr	r0, [pc, #40]	@ (90004a6c <HAL_SDRAM_MspDeInit+0x60>)
90004a42:	f004 fbbf 	bl	900091c4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004a46:	f64f 013f 	movw	r1, #63551	@ 0xf83f
90004a4a:	4809      	ldr	r0, [pc, #36]	@ (90004a70 <HAL_SDRAM_MspDeInit+0x64>)
90004a4c:	f004 fbba 	bl	900091c4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004a50:	21e0      	movs	r1, #224	@ 0xe0
90004a52:	4808      	ldr	r0, [pc, #32]	@ (90004a74 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004a58:	f004 bbb4 	b.w	900091c4 <HAL_GPIO_DeInit>
90004a5c:	240092f8 	.word	0x240092f8
90004a60:	58024400 	.word	0x58024400
90004a64:	58021000 	.word	0x58021000
90004a68:	58021800 	.word	0x58021800
90004a6c:	58020c00 	.word	0x58020c00
90004a70:	58021400 	.word	0x58021400
90004a74:	58021c00 	.word	0x58021c00

90004a78 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004a78:	280f      	cmp	r0, #15
90004a7a:	d901      	bls.n	90004a80 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90004a7c:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
90004a7e:	4770      	bx	lr
{
90004a80:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90004a82:	4601      	mov	r1, r0
{
90004a84:	b08b      	sub	sp, #44	@ 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90004a86:	2200      	movs	r2, #0
90004a88:	4604      	mov	r4, r0
90004a8a:	2036      	movs	r0, #54	@ 0x36
90004a8c:	f003 fff4 	bl	90008a78 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004a90:	2036      	movs	r0, #54	@ 0x36
90004a92:	f004 f82d 	bl	90008af0 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90004a96:	4b1b      	ldr	r3, [pc, #108]	@ (90004b04 <HAL_InitTick+0x8c>)
    uwTickPrio = TickPriority;
90004a98:	4a1b      	ldr	r2, [pc, #108]	@ (90004b08 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004a9a:	4669      	mov	r1, sp
90004a9c:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90004a9e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004aa0:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004aa4:	f042 0210 	orr.w	r2, r2, #16
90004aa8:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90004aac:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004ab0:	f003 0310 	and.w	r3, r3, #16
90004ab4:	9301      	str	r3, [sp, #4]
90004ab6:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004ab8:	f007 fed4 	bl	9000c864 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90004abc:	9b07      	ldr	r3, [sp, #28]
90004abe:	b9c3      	cbnz	r3, 90004af2 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004ac0:	f007 fe40 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
90004ac4:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004ac6:	4911      	ldr	r1, [pc, #68]	@ (90004b0c <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004ac8:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90004aca:	4c11      	ldr	r4, [pc, #68]	@ (90004b10 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004acc:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004ad0:	4d10      	ldr	r5, [pc, #64]	@ (90004b14 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004ad2:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004ad6:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004ad8:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90004ada:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90004adc:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004ade:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004ae0:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004ae4:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004ae6:	f009 fba9 	bl	9000e23c <HAL_TIM_Base_Init>
90004aea:	b130      	cbz	r0, 90004afa <HAL_InitTick+0x82>
    return HAL_ERROR;
90004aec:	2001      	movs	r0, #1
}
90004aee:	b00b      	add	sp, #44	@ 0x2c
90004af0:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004af2:	f007 fe27 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
90004af6:	0043      	lsls	r3, r0, #1
90004af8:	e7e5      	b.n	90004ac6 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
90004afa:	4620      	mov	r0, r4
90004afc:	f009 fc3c 	bl	9000e378 <HAL_TIM_Base_Start_IT>
90004b00:	e7f5      	b.n	90004aee <HAL_InitTick+0x76>
90004b02:	bf00      	nop
90004b04:	58024400 	.word	0x58024400
90004b08:	24000080 	.word	0x24000080
90004b0c:	431bde83 	.word	0x431bde83
90004b10:	24009304 	.word	0x24009304
90004b14:	40001000 	.word	0x40001000

90004b18 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90004b18:	4770      	bx	lr
90004b1a:	bf00      	nop

90004b1c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90004b1c:	e7fe      	b.n	90004b1c <HardFault_Handler>
90004b1e:	bf00      	nop

90004b20 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90004b20:	e7fe      	b.n	90004b20 <MemManage_Handler>
90004b22:	bf00      	nop

90004b24 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90004b24:	e7fe      	b.n	90004b24 <BusFault_Handler>
90004b26:	bf00      	nop

90004b28 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90004b28:	e7fe      	b.n	90004b28 <UsageFault_Handler>
90004b2a:	bf00      	nop

90004b2c <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
90004b2c:	4770      	bx	lr
90004b2e:	bf00      	nop

90004b30 <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
{
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
90004b30:	4801      	ldr	r0, [pc, #4]	@ (90004b38 <TIM2_IRQHandler+0x8>)
90004b32:	f009 bf1b 	b.w	9000e96c <HAL_TIM_IRQHandler>
90004b36:	bf00      	nop
90004b38:	24008f04 	.word	0x24008f04

90004b3c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90004b3c:	4801      	ldr	r0, [pc, #4]	@ (90004b44 <TIM6_DAC_IRQHandler+0x8>)
90004b3e:	f009 bf15 	b.w	9000e96c <HAL_TIM_IRQHandler>
90004b42:	bf00      	nop
90004b44:	24009304 	.word	0x24009304

90004b48 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004b48:	4801      	ldr	r0, [pc, #4]	@ (90004b50 <LTDC_IRQHandler+0x8>)
90004b4a:	f006 bcdb 	b.w	9000b504 <HAL_LTDC_IRQHandler>
90004b4e:	bf00      	nop
90004b50:	24008f9c 	.word	0x24008f9c

90004b54 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004b54:	4801      	ldr	r0, [pc, #4]	@ (90004b5c <DMA2D_IRQHandler+0x8>)
90004b56:	f004 b8f5 	b.w	90008d44 <HAL_DMA2D_IRQHandler>
90004b5a:	bf00      	nop
90004b5c:	24009174 	.word	0x24009174

90004b60 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004b60:	4801      	ldr	r0, [pc, #4]	@ (90004b68 <JPEG_IRQHandler+0x8>)
90004b62:	f006 bbbd 	b.w	9000b2e0 <HAL_JPEG_IRQHandler>
90004b66:	bf00      	nop
90004b68:	2400911c 	.word	0x2400911c

90004b6c <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004b6c:	4804      	ldr	r0, [pc, #16]	@ (90004b80 <MDMA_IRQHandler+0x14>)
{
90004b6e:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004b70:	f006 ffaa 	bl	9000bac8 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004b74:	4803      	ldr	r0, [pc, #12]	@ (90004b84 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90004b76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004b7a:	f006 bfa5 	b.w	9000bac8 <HAL_MDMA_IRQHandler>
90004b7e:	bf00      	nop
90004b80:	24009044 	.word	0x24009044
90004b84:	240090b0 	.word	0x240090b0

90004b88 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004b88:	2001      	movs	r0, #1
90004b8a:	4770      	bx	lr

90004b8c <_kill>:

int _kill(int pid, int sig)
{
90004b8c:	b508      	push	{r3, lr}
	errno = EINVAL;
90004b8e:	f026 f98d 	bl	9002aeac <__errno>
90004b92:	2216      	movs	r2, #22
90004b94:	4603      	mov	r3, r0
	return -1;
}
90004b96:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
	errno = EINVAL;
90004b9a:	601a      	str	r2, [r3, #0]
}
90004b9c:	bd08      	pop	{r3, pc}
90004b9e:	bf00      	nop

90004ba0 <_exit>:

void _exit (int status)
{
90004ba0:	b508      	push	{r3, lr}
	errno = EINVAL;
90004ba2:	f026 f983 	bl	9002aeac <__errno>
90004ba6:	2316      	movs	r3, #22
90004ba8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90004baa:	e7fe      	b.n	90004baa <_exit+0xa>

90004bac <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004bac:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004bae:	1e16      	subs	r6, r2, #0
90004bb0:	dd07      	ble.n	90004bc2 <_read+0x16>
90004bb2:	460c      	mov	r4, r1
90004bb4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90004bb6:	f3af 8000 	nop.w
90004bba:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004bbe:	42a5      	cmp	r5, r4
90004bc0:	d1f9      	bne.n	90004bb6 <_read+0xa>
	}

return len;
}
90004bc2:	4630      	mov	r0, r6
90004bc4:	bd70      	pop	{r4, r5, r6, pc}
90004bc6:	bf00      	nop

90004bc8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004bc8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004bca:	1e16      	subs	r6, r2, #0
90004bcc:	dd07      	ble.n	90004bde <_write+0x16>
90004bce:	460c      	mov	r4, r1
90004bd0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004bd2:	f814 0b01 	ldrb.w	r0, [r4], #1
90004bd6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004bda:	42ac      	cmp	r4, r5
90004bdc:	d1f9      	bne.n	90004bd2 <_write+0xa>
	}
	return len;
}
90004bde:	4630      	mov	r0, r6
90004be0:	bd70      	pop	{r4, r5, r6, pc}
90004be2:	bf00      	nop

90004be4 <_close>:

int _close(int file)
{
	return -1;
}
90004be4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
90004be8:	4770      	bx	lr
90004bea:	bf00      	nop

90004bec <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90004bec:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004bf0:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004bf2:	604b      	str	r3, [r1, #4]
}
90004bf4:	4770      	bx	lr
90004bf6:	bf00      	nop

90004bf8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90004bf8:	2001      	movs	r0, #1
90004bfa:	4770      	bx	lr

90004bfc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90004bfc:	2000      	movs	r0, #0
90004bfe:	4770      	bx	lr

90004c00 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004c00:	4a0c      	ldr	r2, [pc, #48]	@ (90004c34 <_sbrk+0x34>)
{
90004c02:	b508      	push	{r3, lr}
90004c04:	4603      	mov	r3, r0
	if (heap_end == 0)
90004c06:	6810      	ldr	r0, [r2, #0]
90004c08:	b128      	cbz	r0, 90004c16 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
90004c0a:	4403      	add	r3, r0
90004c0c:	4669      	mov	r1, sp
90004c0e:	428b      	cmp	r3, r1
90004c10:	d808      	bhi.n	90004c24 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90004c12:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90004c14:	bd08      	pop	{r3, pc}
		heap_end = &end;
90004c16:	4908      	ldr	r1, [pc, #32]	@ (90004c38 <_sbrk+0x38>)
90004c18:	4608      	mov	r0, r1
90004c1a:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
90004c1c:	4669      	mov	r1, sp
90004c1e:	4403      	add	r3, r0
90004c20:	428b      	cmp	r3, r1
90004c22:	d9f6      	bls.n	90004c12 <_sbrk+0x12>
		errno = ENOMEM;
90004c24:	f026 f942 	bl	9002aeac <__errno>
90004c28:	220c      	movs	r2, #12
90004c2a:	4603      	mov	r3, r0
		return (caddr_t) -1;
90004c2c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
		errno = ENOMEM;
90004c30:	601a      	str	r2, [r3, #0]
}
90004c32:	bd08      	pop	{r3, pc}
90004c34:	24009350 	.word	0x24009350
90004c38:	24024048 	.word	0x24024048

90004c3c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90004c3c:	4770      	bx	lr
90004c3e:	bf00      	nop

90004c40 <_ZN23ApplicationFontProviderD0Ev>:
90004c40:	b510      	push	{r4, lr}
90004c42:	4604      	mov	r4, r0
90004c44:	2104      	movs	r1, #4
90004c46:	f025 f9e1 	bl	9002a00c <_ZdlPvj>
90004c4a:	4620      	mov	r0, r4
90004c4c:	bd10      	pop	{r4, pc}
90004c4e:	bf00      	nop

90004c50 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90004c50:	2901      	cmp	r1, #1
{
90004c52:	b508      	push	{r3, lr}
    switch (typography)
90004c54:	d004      	beq.n	90004c60 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90004c56:	2902      	cmp	r1, #2
90004c58:	d00a      	beq.n	90004c70 <_ZN23ApplicationFontProvider7getFontEt+0x20>
90004c5a:	b129      	cbz	r1, 90004c68 <_ZN23ApplicationFontProvider7getFontEt+0x18>
90004c5c:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
90004c5e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004c60:	f001 fd28 	bl	900066b4 <_ZN17TypedTextDatabase8getFontsEv>
90004c64:	6840      	ldr	r0, [r0, #4]
}
90004c66:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004c68:	f001 fd24 	bl	900066b4 <_ZN17TypedTextDatabase8getFontsEv>
90004c6c:	6800      	ldr	r0, [r0, #0]
}
90004c6e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004c70:	f001 fd20 	bl	900066b4 <_ZN17TypedTextDatabase8getFontsEv>
90004c74:	6880      	ldr	r0, [r0, #8]
}
90004c76:	bd08      	pop	{r3, pc}

90004c78 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004c78:	4800      	ldr	r0, [pc, #0]	@ (90004c7c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004c7a:	4770      	bx	lr
90004c7c:	9002d31c 	.word	0x9002d31c

90004c80 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004c80:	2009      	movs	r0, #9
90004c82:	4770      	bx	lr

90004c84 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004c84:	b169      	cbz	r1, 90004ca2 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c86:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004c88:	b530      	push	{r4, r5, lr}
90004c8a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004c8c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c8e:	6895      	ldr	r5, [r2, #8]
90004c90:	f10d 0303 	add.w	r3, sp, #3
90004c94:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90004c96:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004c98:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c9c:	47a8      	blx	r5
        return glyph;
    }
90004c9e:	b003      	add	sp, #12
90004ca0:	bd30      	pop	{r4, r5, pc}
            return 0;
90004ca2:	4608      	mov	r0, r1
    }
90004ca4:	4770      	bx	lr
90004ca6:	bf00      	nop

90004ca8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004ca8:	89c0      	ldrh	r0, [r0, #14]
90004caa:	4770      	bx	lr

90004cac <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004cac:	8a00      	ldrh	r0, [r0, #16]
90004cae:	4770      	bx	lr

90004cb0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004cb0:	88c0      	ldrh	r0, [r0, #6]
90004cb2:	4770      	bx	lr

90004cb4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004cb4:	8880      	ldrh	r0, [r0, #4]
90004cb6:	4770      	bx	lr

90004cb8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004cb8:	7a80      	ldrb	r0, [r0, #10]
    }
90004cba:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004cbe:	4770      	bx	lr

90004cc0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004cc0:	7a80      	ldrb	r0, [r0, #10]
    }
90004cc2:	09c0      	lsrs	r0, r0, #7
90004cc4:	4770      	bx	lr
90004cc6:	bf00      	nop

90004cc8 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004cc8:	2000      	movs	r0, #0
90004cca:	4770      	bx	lr

90004ccc <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004ccc:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004cd4 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004cd0:	4770      	bx	lr
90004cd2:	bf00      	nop
90004cd4:	00000000 	.word	0x00000000

90004cd8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90004cd8:	4770      	bx	lr
90004cda:	bf00      	nop

90004cdc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90004cdc:	b510      	push	{r4, lr}
90004cde:	4604      	mov	r4, r0
    }
90004ce0:	2108      	movs	r1, #8
90004ce2:	f025 f993 	bl	9002a00c <_ZdlPvj>
90004ce6:	4620      	mov	r0, r4
90004ce8:	bd10      	pop	{r4, pc}
90004cea:	bf00      	nop

90004cec <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004cec:	4770      	bx	lr
90004cee:	bf00      	nop

90004cf0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004cf0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004cf4:	6808      	ldr	r0, [r1, #0]
90004cf6:	6849      	ldr	r1, [r1, #4]
90004cf8:	c303      	stmia	r3!, {r0, r1}
    }
90004cfa:	4770      	bx	lr

90004cfc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90004cfc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004cfe:	4770      	bx	lr

90004d00 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004d00:	4770      	bx	lr
90004d02:	bf00      	nop

90004d04 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004d04:	4770      	bx	lr
90004d06:	bf00      	nop

90004d08 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004d08:	6041      	str	r1, [r0, #4]
    }
90004d0a:	4770      	bx	lr

90004d0c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90004d0c:	4770      	bx	lr
90004d0e:	bf00      	nop

90004d10 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004d10:	4905      	ldr	r1, [pc, #20]	@ (90004d28 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004d12:	2200      	movs	r2, #0
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004d14:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004d18:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004d1c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004d20:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
90004d24:	4770      	bx	lr
90004d26:	bf00      	nop
90004d28:	90005075 	.word	0x90005075

90004d2c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90004d2c:	2301      	movs	r3, #1
90004d2e:	7203      	strb	r3, [r0, #8]
    }
90004d30:	4770      	bx	lr
90004d32:	bf00      	nop

90004d34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
90004d34:	4770      	bx	lr
90004d36:	bf00      	nop

90004d38 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED1Ev>:
90004d38:	4770      	bx	lr
90004d3a:	bf00      	nop

90004d3c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90004d3c:	4770      	bx	lr
90004d3e:	bf00      	nop

90004d40 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90004d40:	4770      	bx	lr
90004d42:	bf00      	nop

90004d44 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004d44:	1d01      	adds	r1, r0, #4
90004d46:	c90e      	ldmia	r1, {r1, r2, r3}
90004d48:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004d4c:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004d50:	07db      	lsls	r3, r3, #31
90004d52:	d502      	bpl.n	90004d5a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004d54:	f851 300c 	ldr.w	r3, [r1, ip]
90004d58:	589a      	ldr	r2, [r3, r2]
90004d5a:	4710      	bx	r2

90004d5c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004d5c:	6843      	ldr	r3, [r0, #4]
90004d5e:	b13b      	cbz	r3, 90004d70 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004d60:	6883      	ldr	r3, [r0, #8]
90004d62:	b10b      	cbz	r3, 90004d68 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004d64:	2001      	movs	r0, #1
    }
90004d66:	4770      	bx	lr
90004d68:	68c0      	ldr	r0, [r0, #12]
90004d6a:	f000 0001 	and.w	r0, r0, #1
90004d6e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004d70:	4618      	mov	r0, r3
90004d72:	4770      	bx	lr

90004d74 <_ZN8touchgfx12NoTransitionD0Ev>:
90004d74:	b510      	push	{r4, lr}
90004d76:	4604      	mov	r4, r0
90004d78:	210c      	movs	r1, #12
90004d7a:	f025 f947 	bl	9002a00c <_ZdlPvj>
90004d7e:	4620      	mov	r0, r4
90004d80:	bd10      	pop	{r4, pc}
90004d82:	bf00      	nop

90004d84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004d84:	b510      	push	{r4, lr}
90004d86:	4604      	mov	r4, r0
90004d88:	2110      	movs	r1, #16
90004d8a:	f025 f93f 	bl	9002a00c <_ZdlPvj>
90004d8e:	4620      	mov	r0, r4
90004d90:	bd10      	pop	{r4, pc}
90004d92:	bf00      	nop

90004d94 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004d94:	b510      	push	{r4, lr}
90004d96:	4604      	mov	r4, r0
90004d98:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004d9c:	f025 f936 	bl	9002a00c <_ZdlPvj>
90004da0:	4620      	mov	r0, r4
90004da2:	bd10      	pop	{r4, pc}

90004da4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED0Ev>:
90004da4:	b510      	push	{r4, lr}
90004da6:	4604      	mov	r4, r0
90004da8:	2140      	movs	r1, #64	@ 0x40
90004daa:	f025 f92f 	bl	9002a00c <_ZdlPvj>
90004dae:	4620      	mov	r0, r4
90004db0:	bd10      	pop	{r4, pc}
90004db2:	bf00      	nop

90004db4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED0Ev>:
90004db4:	b510      	push	{r4, lr}
90004db6:	4604      	mov	r4, r0
90004db8:	2140      	movs	r1, #64	@ 0x40
90004dba:	f025 f927 	bl	9002a00c <_ZdlPvj>
90004dbe:	4620      	mov	r0, r4
90004dc0:	bd10      	pop	{r4, pc}
90004dc2:	bf00      	nop

90004dc4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004dc4:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90004dc6:	f013 fb43 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
90004dca:	6803      	ldr	r3, [r0, #0]
    }
90004dcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004dd0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004dd2:	4718      	bx	r3

90004dd4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90004dd4:	4b05      	ldr	r3, [pc, #20]	@ (90004dec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x18>)
90004dd6:	781b      	ldrb	r3, [r3, #0]
90004dd8:	b13b      	cbz	r3, 90004dea <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x16>
90004dda:	6843      	ldr	r3, [r0, #4]
90004ddc:	b12b      	cbz	r3, 90004dea <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
90004dde:	681a      	ldr	r2, [r3, #0]
90004de0:	f100 010c 	add.w	r1, r0, #12
90004de4:	4618      	mov	r0, r3
90004de6:	6e53      	ldr	r3, [r2, #100]	@ 0x64
90004de8:	4718      	bx	r3
        }
    }
90004dea:	4770      	bx	lr
90004dec:	2402340b 	.word	0x2402340b

90004df0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90004df0:	4b05      	ldr	r3, [pc, #20]	@ (90004e08 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x18>)
90004df2:	781b      	ldrb	r3, [r3, #0]
90004df4:	b13b      	cbz	r3, 90004e06 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x16>
90004df6:	6843      	ldr	r3, [r0, #4]
90004df8:	b12b      	cbz	r3, 90004e06 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
90004dfa:	681a      	ldr	r2, [r3, #0]
90004dfc:	f100 010c 	add.w	r1, r0, #12
90004e00:	4618      	mov	r0, r3
90004e02:	6e53      	ldr	r3, [r2, #100]	@ 0x64
90004e04:	4718      	bx	r3
    }
90004e06:	4770      	bx	lr
90004e08:	2402340b 	.word	0x2402340b

90004e0c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv>:
    virtual void handleTickEvent()
90004e0c:	b570      	push	{r4, r5, r6, lr}
90004e0e:	4605      	mov	r5, r0
        animationCounter++;
90004e10:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
90004e14:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90004e16:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
        animationCounter++;
90004e1a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90004e1c:	4298      	cmp	r0, r3
        animationCounter++;
90004e1e:	f885 0039 	strb.w	r0, [r5, #57]	@ 0x39
        if (animationCounter > animationSteps)
90004e22:	d905      	bls.n	90004e30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x24>
            done = true;
90004e24:	2201      	movs	r2, #1
            animationCounter = 0;
90004e26:	2300      	movs	r3, #0
            done = true;
90004e28:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90004e2a:	f885 3039 	strb.w	r3, [r5, #57]	@ 0x39
    }
90004e2e:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90004e30:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	@ 0x3a
90004e34:	2100      	movs	r1, #0
90004e36:	f015 fb8d 	bl	9001a554 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90004e3a:	07c2      	lsls	r2, r0, #31
90004e3c:	b283      	uxth	r3, r0
90004e3e:	d506      	bpl.n	90004e4e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x42>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90004e40:	2800      	cmp	r0, #0
90004e42:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90004e46:	bfc8      	it	gt
90004e48:	2201      	movgt	r2, #1
90004e4a:	4413      	add	r3, r2
90004e4c:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90004e4e:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getY();
90004e50:	8a6c      	ldrh	r4, [r5, #18]
        Drawable* d = screenContainer->getFirstChild();
90004e52:	6802      	ldr	r2, [r0, #0]
90004e54:	4912      	ldr	r1, [pc, #72]	@ (90004ea0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getY();
90004e56:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90004e58:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getY();
90004e5a:	87ab      	strh	r3, [r5, #60]	@ 0x3c
90004e5c:	428a      	cmp	r2, r1
90004e5e:	d11b      	bne.n	90004e98 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x8c>
        return firstChild;
90004e60:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004e62:	b164      	cbz	r4, 90004e7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x72>
90004e64:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
90004e66:	4e0f      	ldr	r6, [pc, #60]	@ (90004ea4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x98>)
                d->setY(d->getY() + relativeValue);
90004e68:	6823      	ldr	r3, [r4, #0]
90004e6a:	88e1      	ldrh	r1, [r4, #6]
90004e6c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90004e6e:	4411      	add	r1, r2
90004e70:	42b3      	cmp	r3, r6
90004e72:	b209      	sxth	r1, r1
        rect.y = y;
90004e74:	d109      	bne.n	90004e8a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x7e>
90004e76:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90004e78:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004e7a:	2c00      	cmp	r4, #0
90004e7c:	d1f4      	bne.n	90004e68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x5c>
        screenContainer->invalidate();
90004e7e:	6868      	ldr	r0, [r5, #4]
90004e80:	6803      	ldr	r3, [r0, #0]
    }
90004e82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90004e86:	695b      	ldr	r3, [r3, #20]
90004e88:	4718      	bx	r3
                d->setY(d->getY() + relativeValue);
90004e8a:	4620      	mov	r0, r4
90004e8c:	4798      	blx	r3
90004e8e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004e90:	2c00      	cmp	r4, #0
90004e92:	d0f4      	beq.n	90004e7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x72>
90004e94:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
90004e96:	e7e7      	b.n	90004e68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x5c>
        Drawable* d = screenContainer->getFirstChild();
90004e98:	4790      	blx	r2
90004e9a:	4604      	mov	r4, r0
90004e9c:	e7e1      	b.n	90004e62 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x56>
90004e9e:	bf00      	nop
90004ea0:	90004cfd 	.word	0x90004cfd
90004ea4:	90002d59 	.word	0x90002d59

90004ea8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv>:
    virtual void handleTickEvent()
90004ea8:	b570      	push	{r4, r5, r6, lr}
90004eaa:	4605      	mov	r5, r0
        animationCounter++;
90004eac:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
90004eb0:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90004eb2:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
        animationCounter++;
90004eb6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90004eb8:	4298      	cmp	r0, r3
        animationCounter++;
90004eba:	f885 0039 	strb.w	r0, [r5, #57]	@ 0x39
        if (animationCounter > animationSteps)
90004ebe:	d905      	bls.n	90004ecc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x24>
            done = true;
90004ec0:	2201      	movs	r2, #1
            animationCounter = 0;
90004ec2:	2300      	movs	r3, #0
            done = true;
90004ec4:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90004ec6:	f885 3039 	strb.w	r3, [r5, #57]	@ 0x39
    }
90004eca:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90004ecc:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	@ 0x3a
90004ed0:	2100      	movs	r1, #0
90004ed2:	f015 fb3f 	bl	9001a554 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90004ed6:	07c2      	lsls	r2, r0, #31
90004ed8:	b283      	uxth	r3, r0
90004eda:	d506      	bpl.n	90004eea <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x42>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90004edc:	2800      	cmp	r0, #0
90004ede:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90004ee2:	bfc8      	it	gt
90004ee4:	2201      	movgt	r2, #1
90004ee6:	4413      	add	r3, r2
90004ee8:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90004eea:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getY();
90004eec:	8a6c      	ldrh	r4, [r5, #18]
        Drawable* d = screenContainer->getFirstChild();
90004eee:	6802      	ldr	r2, [r0, #0]
90004ef0:	4912      	ldr	r1, [pc, #72]	@ (90004f3c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getY();
90004ef2:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90004ef4:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getY();
90004ef6:	87ab      	strh	r3, [r5, #60]	@ 0x3c
90004ef8:	428a      	cmp	r2, r1
90004efa:	d11b      	bne.n	90004f34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x8c>
90004efc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004efe:	b164      	cbz	r4, 90004f1a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x72>
90004f00:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
90004f02:	4e0f      	ldr	r6, [pc, #60]	@ (90004f40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x98>)
                d->setY(d->getY() + relativeValue);
90004f04:	6823      	ldr	r3, [r4, #0]
90004f06:	88e1      	ldrh	r1, [r4, #6]
90004f08:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90004f0a:	4411      	add	r1, r2
90004f0c:	42b3      	cmp	r3, r6
90004f0e:	b209      	sxth	r1, r1
        rect.y = y;
90004f10:	d109      	bne.n	90004f26 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x7e>
90004f12:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90004f14:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004f16:	2c00      	cmp	r4, #0
90004f18:	d1f4      	bne.n	90004f04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x5c>
        screenContainer->invalidate();
90004f1a:	6868      	ldr	r0, [r5, #4]
90004f1c:	6803      	ldr	r3, [r0, #0]
    }
90004f1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90004f22:	695b      	ldr	r3, [r3, #20]
90004f24:	4718      	bx	r3
                d->setY(d->getY() + relativeValue);
90004f26:	4620      	mov	r0, r4
90004f28:	4798      	blx	r3
90004f2a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004f2c:	2c00      	cmp	r4, #0
90004f2e:	d0f4      	beq.n	90004f1a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x72>
90004f30:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
90004f32:	e7e7      	b.n	90004f04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x5c>
        Drawable* d = screenContainer->getFirstChild();
90004f34:	4790      	blx	r2
90004f36:	4604      	mov	r4, r0
90004f38:	e7e1      	b.n	90004efe <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x56>
90004f3a:	bf00      	nop
90004f3c:	90004cfd 	.word	0x90004cfd
90004f40:	90002d59 	.word	0x90002d59

90004f44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90004f44:	7a03      	ldrb	r3, [r0, #8]
90004f46:	bb2b      	cbnz	r3, 90004f94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x50>
90004f48:	4a14      	ldr	r2, [pc, #80]	@ (90004f9c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x58>)
    virtual void init()
90004f4a:	b570      	push	{r4, r5, r6, lr}
90004f4c:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90004f4e:	6840      	ldr	r0, [r0, #4]
90004f50:	6803      	ldr	r3, [r0, #0]
90004f52:	69db      	ldr	r3, [r3, #28]
90004f54:	4293      	cmp	r3, r2
90004f56:	d11e      	bne.n	90004f96 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x52>
90004f58:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004f5a:	b164      	cbz	r4, 90004f76 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x32>
90004f5c:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004f5e:	4e10      	ldr	r6, [pc, #64]	@ (90004fa0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x5c>)
            case WEST:
                d->setX(d->getX() - targetValue);
                break;
            case NORTH:
            case SOUTH:
                d->setY(d->getY() - targetValue);
90004f60:	6823      	ldr	r3, [r4, #0]
90004f62:	88e1      	ldrh	r1, [r4, #6]
90004f64:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90004f66:	1a89      	subs	r1, r1, r2
90004f68:	42b3      	cmp	r3, r6
90004f6a:	b209      	sxth	r1, r1
        rect.y = y;
90004f6c:	d10b      	bne.n	90004f86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x42>
90004f6e:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90004f70:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004f72:	2c00      	cmp	r4, #0
90004f74:	d1f4      	bne.n	90004f60 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90004f76:	6868      	ldr	r0, [r5, #4]
90004f78:	f105 010c 	add.w	r1, r5, #12
90004f7c:	6803      	ldr	r3, [r0, #0]
    }
90004f7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90004f82:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004f84:	4718      	bx	r3
                d->setY(d->getY() - targetValue);
90004f86:	4620      	mov	r0, r4
90004f88:	4798      	blx	r3
90004f8a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004f8c:	2c00      	cmp	r4, #0
90004f8e:	d0f2      	beq.n	90004f76 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x32>
90004f90:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004f92:	e7e5      	b.n	90004f60 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x1c>
90004f94:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90004f96:	4798      	blx	r3
90004f98:	4604      	mov	r4, r0
90004f9a:	e7de      	b.n	90004f5a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x16>
90004f9c:	90004cfd 	.word	0x90004cfd
90004fa0:	90002d59 	.word	0x90002d59

90004fa4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv>:
        if (done)
90004fa4:	7a03      	ldrb	r3, [r0, #8]
90004fa6:	bb2b      	cbnz	r3, 90004ff4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x50>
90004fa8:	4a14      	ldr	r2, [pc, #80]	@ (90004ffc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x58>)
    virtual void init()
90004faa:	b570      	push	{r4, r5, r6, lr}
90004fac:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
90004fae:	6840      	ldr	r0, [r0, #4]
90004fb0:	6803      	ldr	r3, [r0, #0]
90004fb2:	69db      	ldr	r3, [r3, #28]
90004fb4:	4293      	cmp	r3, r2
90004fb6:	d11e      	bne.n	90004ff6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x52>
90004fb8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004fba:	b164      	cbz	r4, 90004fd6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x32>
90004fbc:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004fbe:	4e10      	ldr	r6, [pc, #64]	@ (90005000 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x5c>)
                d->setY(d->getY() - targetValue);
90004fc0:	6823      	ldr	r3, [r4, #0]
90004fc2:	88e1      	ldrh	r1, [r4, #6]
90004fc4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90004fc6:	1a89      	subs	r1, r1, r2
90004fc8:	42b3      	cmp	r3, r6
90004fca:	b209      	sxth	r1, r1
        rect.y = y;
90004fcc:	d10b      	bne.n	90004fe6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x42>
90004fce:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90004fd0:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004fd2:	2c00      	cmp	r4, #0
90004fd4:	d1f4      	bne.n	90004fc0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x1c>
        screenContainer->add(snapshot);
90004fd6:	6868      	ldr	r0, [r5, #4]
90004fd8:	f105 010c 	add.w	r1, r5, #12
90004fdc:	6803      	ldr	r3, [r0, #0]
    }
90004fde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90004fe2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004fe4:	4718      	bx	r3
                d->setY(d->getY() - targetValue);
90004fe6:	4620      	mov	r0, r4
90004fe8:	4798      	blx	r3
90004fea:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004fec:	2c00      	cmp	r4, #0
90004fee:	d0f2      	beq.n	90004fd6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x32>
90004ff0:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004ff2:	e7e5      	b.n	90004fc0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x1c>
90004ff4:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90004ff6:	4798      	blx	r3
90004ff8:	4604      	mov	r4, r0
90004ffa:	e7de      	b.n	90004fba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x16>
90004ffc:	90004cfd 	.word	0x90004cfd
90005000:	90002d59 	.word	0x90002d59

90005004 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
90005004:	b570      	push	{r4, r5, r6, lr}
90005006:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005008:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
9000500c:	b1b8      	cbz	r0, 9000503e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
9000500e:	6802      	ldr	r2, [r0, #0]
90005010:	4916      	ldr	r1, [pc, #88]	@ (9000506c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90005012:	68d3      	ldr	r3, [r2, #12]
90005014:	428b      	cmp	r3, r1
90005016:	d11f      	bne.n	90005058 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90005018:	6843      	ldr	r3, [r0, #4]
9000501a:	b183      	cbz	r3, 9000503e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
9000501c:	6881      	ldr	r1, [r0, #8]
9000501e:	b179      	cbz	r1, 90005040 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
        {
            pendingScreenTransitionCallback->execute();
90005020:	6892      	ldr	r2, [r2, #8]
90005022:	4b13      	ldr	r3, [pc, #76]	@ (90005070 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90005024:	429a      	cmp	r2, r3
90005026:	d11e      	bne.n	90005066 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90005028:	68c2      	ldr	r2, [r0, #12]
9000502a:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
9000502e:	eb03 0062 	add.w	r0, r3, r2, asr #1
90005032:	07d3      	lsls	r3, r2, #31
90005034:	d40d      	bmi.n	90005052 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90005036:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90005038:	2300      	movs	r3, #0
9000503a:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
9000503e:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90005040:	68c5      	ldr	r5, [r0, #12]
90005042:	07ee      	lsls	r6, r5, #31
90005044:	d5fb      	bpl.n	9000503e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005046:	6892      	ldr	r2, [r2, #8]
90005048:	4e09      	ldr	r6, [pc, #36]	@ (90005070 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
9000504a:	42b2      	cmp	r2, r6
9000504c:	d10b      	bne.n	90005066 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
9000504e:	eb03 0065 	add.w	r0, r3, r5, asr #1
90005052:	6803      	ldr	r3, [r0, #0]
90005054:	5859      	ldr	r1, [r3, r1]
90005056:	e7ee      	b.n	90005036 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005058:	4798      	blx	r3
9000505a:	2800      	cmp	r0, #0
9000505c:	d0ef      	beq.n	9000503e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
9000505e:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90005062:	6802      	ldr	r2, [r0, #0]
90005064:	e7dc      	b.n	90005020 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90005066:	4790      	blx	r2
90005068:	e7e6      	b.n	90005038 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
9000506a:	bf00      	nop
9000506c:	90004d5d 	.word	0x90004d5d
90005070:	90004d45 	.word	0x90004d45

90005074 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
90005074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005078:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
9000507c:	4607      	mov	r7, r0
9000507e:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005080:	68b0      	ldr	r0, [r6, #8]
90005082:	6803      	ldr	r3, [r0, #0]
90005084:	6a1b      	ldr	r3, [r3, #32]
90005086:	4798      	blx	r3
90005088:	f5b0 7f9c 	cmp.w	r0, #312	@ 0x138
9000508c:	f0c0 80a3 	bcc.w	900051d6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x162>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005090:	6870      	ldr	r0, [r6, #4]
90005092:	6803      	ldr	r3, [r0, #0]
90005094:	6a1b      	ldr	r3, [r3, #32]
90005096:	4798      	blx	r3
90005098:	280f      	cmp	r0, #15
9000509a:	f240 8096 	bls.w	900051ca <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x156>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000509e:	68f0      	ldr	r0, [r6, #12]
900050a0:	6803      	ldr	r3, [r0, #0]
900050a2:	6a1b      	ldr	r3, [r3, #32]
900050a4:	4798      	blx	r3
900050a6:	280b      	cmp	r0, #11
900050a8:	f240 8089 	bls.w	900051be <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14a>
    if (*currentTrans)
900050ac:	f8df 9154 	ldr.w	r9, [pc, #340]	@ 90005204 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>
    Application::getInstance()->clearAllTimerWidgets();
900050b0:	f013 f9ce 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900050b4:	3004      	adds	r0, #4
900050b6:	f013 f9f0 	bl	9001849a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900050ba:	f8d9 0000 	ldr.w	r0, [r9]
900050be:	b140      	cbz	r0, 900050d2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
900050c0:	6803      	ldr	r3, [r0, #0]
900050c2:	68db      	ldr	r3, [r3, #12]
900050c4:	4798      	blx	r3
    if (*currentTrans)
900050c6:	f8d9 0000 	ldr.w	r0, [r9]
900050ca:	b110      	cbz	r0, 900050d2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
900050cc:	6803      	ldr	r3, [r0, #0]
900050ce:	681b      	ldr	r3, [r3, #0]
900050d0:	4798      	blx	r3
    if (*currentScreen)
900050d2:	f8df 8134 	ldr.w	r8, [pc, #308]	@ 90005208 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>
900050d6:	f8d8 0000 	ldr.w	r0, [r8]
900050da:	2800      	cmp	r0, #0
900050dc:	d061      	beq.n	900051a2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12e>
        (*currentScreen)->tearDownScreen();
900050de:	6803      	ldr	r3, [r0, #0]
900050e0:	695b      	ldr	r3, [r3, #20]
900050e2:	4798      	blx	r3
    if (*currentPresenter)
900050e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900050e8:	2800      	cmp	r0, #0
900050ea:	d055      	beq.n	90005198 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x124>
        (*currentPresenter)->deactivate();
900050ec:	6803      	ldr	r3, [r0, #0]
900050ee:	685b      	ldr	r3, [r3, #4]
900050f0:	4798      	blx	r3
    if (*currentScreen)
900050f2:	f8d8 0000 	ldr.w	r0, [r8]
900050f6:	b110      	cbz	r0, 900050fe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
900050f8:	6803      	ldr	r3, [r0, #0]
900050fa:	681b      	ldr	r3, [r3, #0]
900050fc:	4798      	blx	r3
    if (*currentPresenter)
900050fe:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005102:	b110      	cbz	r0, 9000510a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90005104:	6803      	ldr	r3, [r0, #0]
90005106:	689b      	ldr	r3, [r3, #8]
90005108:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
9000510a:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000510c:	2100      	movs	r1, #0
9000510e:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90005110:	468b      	mov	fp, r1
90005112:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005114:	4798      	blx	r3
90005116:	4b33      	ldr	r3, [pc, #204]	@ (900051e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x170>)
90005118:	4604      	mov	r4, r0
9000511a:	f8c0 b004 	str.w	fp, [r0, #4]
9000511e:	f880 b008 	strb.w	fp, [r0, #8]
90005122:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005124:	68b0      	ldr	r0, [r6, #8]
90005126:	6023      	str	r3, [r4, #0]
90005128:	6803      	ldr	r3, [r0, #0]
9000512a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000512c:	4798      	blx	r3
9000512e:	4605      	mov	r5, r0
90005130:	f001 fbb0 	bl	90006894 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90005134:	6870      	ldr	r0, [r6, #4]
90005136:	4659      	mov	r1, fp
90005138:	6803      	ldr	r3, [r0, #0]
9000513a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000513c:	4798      	blx	r3
9000513e:	4606      	mov	r6, r0
90005140:	4629      	mov	r1, r5
90005142:	f001 fb7d 	bl	90006840 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90005146:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90005148:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
9000514c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
9000514e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90005152:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90005156:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
9000515a:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
9000515c:	f8c6 a008 	str.w	sl, [r6, #8]
90005160:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90005162:	63ee      	str	r6, [r5, #60]	@ 0x3c
90005164:	4798      	blx	r3
    newPresenter->activate();
90005166:	6833      	ldr	r3, [r6, #0]
90005168:	4630      	mov	r0, r6
9000516a:	681b      	ldr	r3, [r3, #0]
9000516c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
9000516e:	4621      	mov	r1, r4
90005170:	4628      	mov	r0, r5
90005172:	f015 f9e9 	bl	9001a548 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005176:	6823      	ldr	r3, [r4, #0]
90005178:	491b      	ldr	r1, [pc, #108]	@ (900051e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x174>)
9000517a:	691a      	ldr	r2, [r3, #16]
9000517c:	428a      	cmp	r2, r1
9000517e:	d11a      	bne.n	900051b6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x142>
    newTransition->invalidate();
90005180:	695b      	ldr	r3, [r3, #20]
90005182:	4a1a      	ldr	r2, [pc, #104]	@ (900051ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x178>)
90005184:	4293      	cmp	r3, r2
90005186:	d111      	bne.n	900051ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>
        Application::getInstance()->invalidate();
90005188:	f013 f962 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
9000518c:	6803      	ldr	r3, [r0, #0]
9000518e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90005190:	b001      	add	sp, #4
90005192:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005196:	4718      	bx	r3
    if (*currentScreen)
90005198:	f8d8 0000 	ldr.w	r0, [r8]
9000519c:	2800      	cmp	r0, #0
9000519e:	d1ab      	bne.n	900050f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
900051a0:	e7b3      	b.n	9000510a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
900051a2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900051a6:	2800      	cmp	r0, #0
900051a8:	d1a0      	bne.n	900050ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x78>
900051aa:	e7ae      	b.n	9000510a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x96>
    newTransition->invalidate();
900051ac:	4620      	mov	r0, r4
900051ae:	b001      	add	sp, #4
900051b0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900051b4:	4718      	bx	r3
    newTransition->init();
900051b6:	4620      	mov	r0, r4
900051b8:	4790      	blx	r2
    newTransition->invalidate();
900051ba:	6823      	ldr	r3, [r4, #0]
900051bc:	e7e0      	b.n	90005180 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x10c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900051be:	4b0c      	ldr	r3, [pc, #48]	@ (900051f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x17c>)
900051c0:	21a5      	movs	r1, #165	@ 0xa5
900051c2:	4a0c      	ldr	r2, [pc, #48]	@ (900051f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
900051c4:	480c      	ldr	r0, [pc, #48]	@ (900051f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
900051c6:	f025 fa9b 	bl	9002a700 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900051ca:	4b0c      	ldr	r3, [pc, #48]	@ (900051fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x188>)
900051cc:	21a4      	movs	r1, #164	@ 0xa4
900051ce:	4a09      	ldr	r2, [pc, #36]	@ (900051f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
900051d0:	4809      	ldr	r0, [pc, #36]	@ (900051f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
900051d2:	f025 fa95 	bl	9002a700 <__assert_func>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900051d6:	4b0a      	ldr	r3, [pc, #40]	@ (90005200 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
900051d8:	21a3      	movs	r1, #163	@ 0xa3
900051da:	4a06      	ldr	r2, [pc, #24]	@ (900051f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
900051dc:	4806      	ldr	r0, [pc, #24]	@ (900051f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
900051de:	f025 fa8f 	bl	9002a700 <__assert_func>
900051e2:	bf00      	nop
900051e4:	9002d918 	.word	0x9002d918
900051e8:	90004d05 	.word	0x90004d05
900051ec:	90004dc5 	.word	0x90004dc5
900051f0:	9002d630 	.word	0x9002d630
900051f4:	9002d470 	.word	0x9002d470
900051f8:	9002d544 	.word	0x9002d544
900051fc:	9002d58c 	.word	0x9002d58c
90005200:	9002d3e0 	.word	0x9002d3e0
90005204:	24023454 	.word	0x24023454
90005208:	24023450 	.word	0x24023450

9000520c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen2ScreenSlideTransitionNorthImpl()
{
9000520c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005210:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90005214:	4680      	mov	r8, r0
90005216:	b081      	sub	sp, #4
90005218:	68b8      	ldr	r0, [r7, #8]
9000521a:	6803      	ldr	r3, [r0, #0]
9000521c:	6a1b      	ldr	r3, [r3, #32]
9000521e:	4798      	blx	r3
90005220:	f641 6393 	movw	r3, #7827	@ 0x1e93
90005224:	4298      	cmp	r0, r3
90005226:	f240 80db 	bls.w	900053e0 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1d4>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000522a:	6878      	ldr	r0, [r7, #4]
9000522c:	6803      	ldr	r3, [r0, #0]
9000522e:	6a1b      	ldr	r3, [r3, #32]
90005230:	4798      	blx	r3
90005232:	280f      	cmp	r0, #15
90005234:	f240 80e0 	bls.w	900053f8 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1ec>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005238:	68f8      	ldr	r0, [r7, #12]
9000523a:	6803      	ldr	r3, [r0, #0]
9000523c:	6a1b      	ldr	r3, [r3, #32]
9000523e:	4798      	blx	r3
90005240:	283f      	cmp	r0, #63	@ 0x3f
90005242:	f240 80d3 	bls.w	900053ec <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1e0>
    if (*currentTrans)
90005246:	f8df a1f0 	ldr.w	sl, [pc, #496]	@ 90005438 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x22c>
    Application::getInstance()->clearAllTimerWidgets();
9000524a:	f013 f901 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
9000524e:	3004      	adds	r0, #4
90005250:	f013 f923 	bl	9001849a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005254:	f8da 0000 	ldr.w	r0, [sl]
90005258:	b140      	cbz	r0, 9000526c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x60>
        (*currentTrans)->tearDown();
9000525a:	6803      	ldr	r3, [r0, #0]
9000525c:	68db      	ldr	r3, [r3, #12]
9000525e:	4798      	blx	r3
    if (*currentTrans)
90005260:	f8da 0000 	ldr.w	r0, [sl]
90005264:	b110      	cbz	r0, 9000526c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x60>
        (*currentTrans)->~Transition();
90005266:	6803      	ldr	r3, [r0, #0]
90005268:	681b      	ldr	r3, [r3, #0]
9000526a:	4798      	blx	r3
    if (*currentScreen)
9000526c:	f8df 91cc 	ldr.w	r9, [pc, #460]	@ 9000543c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x230>
90005270:	f8d9 0000 	ldr.w	r0, [r9]
90005274:	2800      	cmp	r0, #0
90005276:	f000 80a1 	beq.w	900053bc <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1b0>
        (*currentScreen)->tearDownScreen();
9000527a:	6803      	ldr	r3, [r0, #0]
9000527c:	695b      	ldr	r3, [r3, #20]
9000527e:	4798      	blx	r3
    if (*currentPresenter)
90005280:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90005284:	2800      	cmp	r0, #0
90005286:	d07e      	beq.n	90005386 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x17a>
        (*currentPresenter)->deactivate();
90005288:	6803      	ldr	r3, [r0, #0]
9000528a:	685b      	ldr	r3, [r3, #4]
9000528c:	4798      	blx	r3
    if (*currentScreen)
9000528e:	f8d9 0000 	ldr.w	r0, [r9]
90005292:	b110      	cbz	r0, 9000529a <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x8e>
        (*currentScreen)->~Screen();
90005294:	6803      	ldr	r3, [r0, #0]
90005296:	681b      	ldr	r3, [r3, #0]
90005298:	4798      	blx	r3
    if (*currentPresenter)
9000529a:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
9000529e:	b110      	cbz	r0, 900052a6 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x9a>
        (*currentPresenter)->~Presenter();
900052a0:	6803      	ldr	r3, [r0, #0]
900052a2:	689b      	ldr	r3, [r3, #8]
900052a4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900052a6:	68f8      	ldr	r0, [r7, #12]
900052a8:	2100      	movs	r1, #0
900052aa:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900052ac:	460c      	mov	r4, r1
900052ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900052b0:	4798      	blx	r3
          relativeValue(0)
900052b2:	4b54      	ldr	r3, [pc, #336]	@ (90005404 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1f8>)
900052b4:	4606      	mov	r6, r0
900052b6:	4605      	mov	r5, r0
900052b8:	6044      	str	r4, [r0, #4]
900052ba:	7204      	strb	r4, [r0, #8]
900052bc:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
900052c0:	4630      	mov	r0, r6
900052c2:	f010 f91b 	bl	900154fc <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900052c6:	4b50      	ldr	r3, [pc, #320]	@ (90005408 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1fc>)
          animationSteps(transitionSteps),
900052c8:	2214      	movs	r2, #20
          relativeValue(0)
900052ca:	87ac      	strh	r4, [r5, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900052cc:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
900052ce:	872a      	strh	r2, [r5, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900052d0:	2b00      	cmp	r3, #0
900052d2:	d164      	bne.n	9000539e <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x192>
            done = true;
900052d4:	2301      	movs	r3, #1
900052d6:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900052d8:	68b8      	ldr	r0, [r7, #8]
900052da:	2100      	movs	r1, #0
900052dc:	6803      	ldr	r3, [r0, #0]
900052de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900052e0:	4798      	blx	r3
900052e2:	4604      	mov	r4, r0
900052e4:	f001 fb5a 	bl	9000699c <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900052e8:	6878      	ldr	r0, [r7, #4]
900052ea:	2100      	movs	r1, #0
900052ec:	6803      	ldr	r3, [r0, #0]
900052ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900052f0:	4798      	blx	r3
900052f2:	4607      	mov	r7, r0
900052f4:	4621      	mov	r1, r4
900052f6:	f001 fb27 	bl	90006948 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
900052fa:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
900052fc:	6823      	ldr	r3, [r4, #0]
900052fe:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90005300:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90005304:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
90005306:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
9000530a:	f8c9 4000 	str.w	r4, [r9]
9000530e:	f8cb 2000 	str.w	r2, [fp]
90005312:	f8c7 b008 	str.w	fp, [r7, #8]
90005316:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
90005318:	4798      	blx	r3
    newPresenter->activate();
9000531a:	683b      	ldr	r3, [r7, #0]
9000531c:	4638      	mov	r0, r7
9000531e:	681b      	ldr	r3, [r3, #0]
90005320:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005322:	4629      	mov	r1, r5
90005324:	4620      	mov	r0, r4
90005326:	f015 f90f 	bl	9001a548 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
9000532a:	682b      	ldr	r3, [r5, #0]
9000532c:	4937      	ldr	r1, [pc, #220]	@ (9000540c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x200>)
9000532e:	691a      	ldr	r2, [r3, #16]
90005330:	428a      	cmp	r2, r1
90005332:	d151      	bne.n	900053d8 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1cc>
        if (done)
90005334:	7a2a      	ldrb	r2, [r5, #8]
90005336:	b9d2      	cbnz	r2, 9000536e <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x162>
        Drawable* d = screenContainer->getFirstChild();
90005338:	6868      	ldr	r0, [r5, #4]
9000533a:	4a35      	ldr	r2, [pc, #212]	@ (90005410 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x204>)
9000533c:	6803      	ldr	r3, [r0, #0]
9000533e:	69db      	ldr	r3, [r3, #28]
90005340:	4293      	cmp	r3, r2
90005342:	d141      	bne.n	900053c8 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1bc>
90005344:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90005346:	b164      	cbz	r4, 90005362 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x156>
90005348:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
9000534a:	4f32      	ldr	r7, [pc, #200]	@ (90005414 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x208>)
                d->setY(d->getY() - targetValue);
9000534c:	6823      	ldr	r3, [r4, #0]
9000534e:	88e1      	ldrh	r1, [r4, #6]
90005350:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90005352:	1a89      	subs	r1, r1, r2
90005354:	42bb      	cmp	r3, r7
90005356:	b209      	sxth	r1, r1
90005358:	d11a      	bne.n	90005390 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x184>
        rect.y = y;
9000535a:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
9000535c:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000535e:	2c00      	cmp	r4, #0
90005360:	d1f4      	bne.n	9000534c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x140>
        screenContainer->add(snapshot);
90005362:	6868      	ldr	r0, [r5, #4]
90005364:	4631      	mov	r1, r6
90005366:	6803      	ldr	r3, [r0, #0]
90005368:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9000536a:	4798      	blx	r3
    newTransition->invalidate();
9000536c:	682b      	ldr	r3, [r5, #0]
9000536e:	695b      	ldr	r3, [r3, #20]
90005370:	4a29      	ldr	r2, [pc, #164]	@ (90005418 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x20c>)
90005372:	4293      	cmp	r3, r2
90005374:	d12b      	bne.n	900053ce <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x1c2>
        Application::getInstance()->invalidate();
90005376:	f013 f86b 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
9000537a:	6803      	ldr	r3, [r0, #0]
9000537c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
9000537e:	b001      	add	sp, #4
90005380:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005384:	4718      	bx	r3
    if (*currentScreen)
90005386:	f8d9 0000 	ldr.w	r0, [r9]
9000538a:	2800      	cmp	r0, #0
9000538c:	d182      	bne.n	90005294 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x88>
9000538e:	e78a      	b.n	900052a6 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x9a>
                d->setY(d->getY() - targetValue);
90005390:	4620      	mov	r0, r4
90005392:	4798      	blx	r3
90005394:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005396:	2c00      	cmp	r4, #0
90005398:	d0e3      	beq.n	90005362 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x156>
9000539a:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
9000539c:	e7d6      	b.n	9000534c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x140>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000539e:	4b1f      	ldr	r3, [pc, #124]	@ (9000541c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x210>)
        snapshot.makeSnapshot();
900053a0:	4630      	mov	r0, r6
        rect.x = x;
900053a2:	612c      	str	r4, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900053a4:	f9b3 3000 	ldrsh.w	r3, [r3]
900053a8:	4c1d      	ldr	r4, [pc, #116]	@ (90005420 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x214>)
        rect.width = width;
900053aa:	82ab      	strh	r3, [r5, #20]
900053ac:	f9b4 3000 	ldrsh.w	r3, [r4]
        rect.height = height;
900053b0:	82eb      	strh	r3, [r5, #22]
        snapshot.makeSnapshot();
900053b2:	f010 f81e 	bl	900153f2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_HEIGHT;
900053b6:	8823      	ldrh	r3, [r4, #0]
900053b8:	876b      	strh	r3, [r5, #58]	@ 0x3a
            break;
900053ba:	e78d      	b.n	900052d8 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0xcc>
    if (*currentPresenter)
900053bc:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
900053c0:	2800      	cmp	r0, #0
900053c2:	f47f af61 	bne.w	90005288 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x7c>
900053c6:	e76e      	b.n	900052a6 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x9a>
        Drawable* d = screenContainer->getFirstChild();
900053c8:	4798      	blx	r3
900053ca:	4604      	mov	r4, r0
900053cc:	e7bb      	b.n	90005346 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x13a>
    newTransition->invalidate();
900053ce:	4628      	mov	r0, r5
900053d0:	b001      	add	sp, #4
900053d2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900053d6:	4718      	bx	r3
    newTransition->init();
900053d8:	4628      	mov	r0, r5
900053da:	4790      	blx	r2
    newTransition->invalidate();
900053dc:	682b      	ldr	r3, [r5, #0]
900053de:	e7c6      	b.n	9000536e <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x162>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900053e0:	4b10      	ldr	r3, [pc, #64]	@ (90005424 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x218>)
900053e2:	21a3      	movs	r1, #163	@ 0xa3
900053e4:	4a10      	ldr	r2, [pc, #64]	@ (90005428 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x21c>)
900053e6:	4811      	ldr	r0, [pc, #68]	@ (9000542c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x220>)
900053e8:	f025 f98a 	bl	9002a700 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900053ec:	4b10      	ldr	r3, [pc, #64]	@ (90005430 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x224>)
900053ee:	21a5      	movs	r1, #165	@ 0xa5
900053f0:	4a0d      	ldr	r2, [pc, #52]	@ (90005428 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x21c>)
900053f2:	480e      	ldr	r0, [pc, #56]	@ (9000542c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x220>)
900053f4:	f025 f984 	bl	9002a700 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900053f8:	4b0e      	ldr	r3, [pc, #56]	@ (90005434 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x228>)
900053fa:	21a4      	movs	r1, #164	@ 0xa4
900053fc:	4a0a      	ldr	r2, [pc, #40]	@ (90005428 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x21c>)
900053fe:	480b      	ldr	r0, [pc, #44]	@ (9000542c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionNorthImplEv+0x220>)
90005400:	f025 f97e 	bl	9002a700 <__assert_func>
90005404:	9002d93c 	.word	0x9002d93c
90005408:	2402340b 	.word	0x2402340b
9000540c:	90004fa5 	.word	0x90004fa5
90005410:	90004cfd 	.word	0x90004cfd
90005414:	90002d59 	.word	0x90002d59
90005418:	90004dc5 	.word	0x90004dc5
9000541c:	24023400 	.word	0x24023400
90005420:	24023402 	.word	0x24023402
90005424:	9002d3e0 	.word	0x9002d3e0
90005428:	9002d6d4 	.word	0x9002d6d4
9000542c:	9002d544 	.word	0x9002d544
90005430:	9002d630 	.word	0x9002d630
90005434:	9002d58c 	.word	0x9002d58c
90005438:	24023454 	.word	0x24023454
9000543c:	24023450 	.word	0x24023450

90005440 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenSlideTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen2ScreenSlideTransitionSouthImpl()
{
90005440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005444:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90005448:	4680      	mov	r8, r0
9000544a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
9000544c:	68b8      	ldr	r0, [r7, #8]
9000544e:	6803      	ldr	r3, [r0, #0]
90005450:	6a1b      	ldr	r3, [r3, #32]
90005452:	4798      	blx	r3
90005454:	f641 6393 	movw	r3, #7827	@ 0x1e93
90005458:	4298      	cmp	r0, r3
9000545a:	f240 80dc 	bls.w	90005616 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1d6>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000545e:	6878      	ldr	r0, [r7, #4]
90005460:	6803      	ldr	r3, [r0, #0]
90005462:	6a1b      	ldr	r3, [r3, #32]
90005464:	4798      	blx	r3
90005466:	280f      	cmp	r0, #15
90005468:	f240 80e1 	bls.w	9000562e <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1ee>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000546c:	68f8      	ldr	r0, [r7, #12]
9000546e:	6803      	ldr	r3, [r0, #0]
90005470:	6a1b      	ldr	r3, [r3, #32]
90005472:	4798      	blx	r3
90005474:	283f      	cmp	r0, #63	@ 0x3f
90005476:	f240 80d4 	bls.w	90005622 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1e2>
    if (*currentTrans)
9000547a:	f8df a1f4 	ldr.w	sl, [pc, #500]	@ 90005670 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x230>
    Application::getInstance()->clearAllTimerWidgets();
9000547e:	f012 ffe7 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
90005482:	3004      	adds	r0, #4
90005484:	f013 f809 	bl	9001849a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005488:	f8da 0000 	ldr.w	r0, [sl]
9000548c:	b140      	cbz	r0, 900054a0 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x60>
        (*currentTrans)->tearDown();
9000548e:	6803      	ldr	r3, [r0, #0]
90005490:	68db      	ldr	r3, [r3, #12]
90005492:	4798      	blx	r3
    if (*currentTrans)
90005494:	f8da 0000 	ldr.w	r0, [sl]
90005498:	b110      	cbz	r0, 900054a0 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x60>
        (*currentTrans)->~Transition();
9000549a:	6803      	ldr	r3, [r0, #0]
9000549c:	681b      	ldr	r3, [r3, #0]
9000549e:	4798      	blx	r3
    if (*currentScreen)
900054a0:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90005674 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x234>
900054a4:	f8d9 0000 	ldr.w	r0, [r9]
900054a8:	2800      	cmp	r0, #0
900054aa:	f000 80a2 	beq.w	900055f2 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1b2>
        (*currentScreen)->tearDownScreen();
900054ae:	6803      	ldr	r3, [r0, #0]
900054b0:	695b      	ldr	r3, [r3, #20]
900054b2:	4798      	blx	r3
    if (*currentPresenter)
900054b4:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
900054b8:	2800      	cmp	r0, #0
900054ba:	d07e      	beq.n	900055ba <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x17a>
        (*currentPresenter)->deactivate();
900054bc:	6803      	ldr	r3, [r0, #0]
900054be:	685b      	ldr	r3, [r3, #4]
900054c0:	4798      	blx	r3
    if (*currentScreen)
900054c2:	f8d9 0000 	ldr.w	r0, [r9]
900054c6:	b110      	cbz	r0, 900054ce <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x8e>
        (*currentScreen)->~Screen();
900054c8:	6803      	ldr	r3, [r0, #0]
900054ca:	681b      	ldr	r3, [r3, #0]
900054cc:	4798      	blx	r3
    if (*currentPresenter)
900054ce:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
900054d2:	b110      	cbz	r0, 900054da <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x9a>
        (*currentPresenter)->~Presenter();
900054d4:	6803      	ldr	r3, [r0, #0]
900054d6:	689b      	ldr	r3, [r3, #8]
900054d8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900054da:	68f8      	ldr	r0, [r7, #12]
900054dc:	2100      	movs	r1, #0
900054de:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900054e0:	460c      	mov	r4, r1
900054e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900054e4:	4798      	blx	r3
          relativeValue(0)
900054e6:	4b55      	ldr	r3, [pc, #340]	@ (9000563c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1fc>)
900054e8:	4606      	mov	r6, r0
900054ea:	4605      	mov	r5, r0
900054ec:	6044      	str	r4, [r0, #4]
900054ee:	7204      	strb	r4, [r0, #8]
900054f0:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
900054f4:	4630      	mov	r0, r6
900054f6:	f010 f801 	bl	900154fc <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900054fa:	4b51      	ldr	r3, [pc, #324]	@ (90005640 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x200>)
          animationSteps(transitionSteps),
900054fc:	2214      	movs	r2, #20
          relativeValue(0)
900054fe:	87ac      	strh	r4, [r5, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90005500:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90005502:	872a      	strh	r2, [r5, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90005504:	2b00      	cmp	r3, #0
90005506:	d164      	bne.n	900055d2 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x192>
            done = true;
90005508:	2301      	movs	r3, #1
9000550a:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
9000550c:	68b8      	ldr	r0, [r7, #8]
9000550e:	2100      	movs	r1, #0
90005510:	6803      	ldr	r3, [r0, #0]
90005512:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005514:	4798      	blx	r3
90005516:	4604      	mov	r4, r0
90005518:	f001 fa40 	bl	9000699c <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
9000551c:	6878      	ldr	r0, [r7, #4]
9000551e:	2100      	movs	r1, #0
90005520:	6803      	ldr	r3, [r0, #0]
90005522:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005524:	4798      	blx	r3
90005526:	4607      	mov	r7, r0
90005528:	4621      	mov	r1, r4
9000552a:	f001 fa0d 	bl	90006948 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
9000552e:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
90005530:	6823      	ldr	r3, [r4, #0]
90005532:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90005534:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90005538:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
9000553a:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
9000553e:	f8c9 4000 	str.w	r4, [r9]
90005542:	f8cb 2000 	str.w	r2, [fp]
90005546:	f8c7 b008 	str.w	fp, [r7, #8]
9000554a:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
9000554c:	4798      	blx	r3
    newPresenter->activate();
9000554e:	683b      	ldr	r3, [r7, #0]
90005550:	4638      	mov	r0, r7
90005552:	681b      	ldr	r3, [r3, #0]
90005554:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005556:	4629      	mov	r1, r5
90005558:	4620      	mov	r0, r4
9000555a:	f014 fff5 	bl	9001a548 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
9000555e:	682b      	ldr	r3, [r5, #0]
90005560:	4938      	ldr	r1, [pc, #224]	@ (90005644 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x204>)
90005562:	691a      	ldr	r2, [r3, #16]
90005564:	428a      	cmp	r2, r1
90005566:	d152      	bne.n	9000560e <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1ce>
        if (done)
90005568:	7a2a      	ldrb	r2, [r5, #8]
9000556a:	b9d2      	cbnz	r2, 900055a2 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x162>
        Drawable* d = screenContainer->getFirstChild();
9000556c:	6868      	ldr	r0, [r5, #4]
9000556e:	4a36      	ldr	r2, [pc, #216]	@ (90005648 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x208>)
90005570:	6803      	ldr	r3, [r0, #0]
90005572:	69db      	ldr	r3, [r3, #28]
90005574:	4293      	cmp	r3, r2
90005576:	d142      	bne.n	900055fe <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1be>
90005578:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
9000557a:	b164      	cbz	r4, 90005596 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x156>
9000557c:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
9000557e:	4f33      	ldr	r7, [pc, #204]	@ (9000564c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x20c>)
                d->setY(d->getY() - targetValue);
90005580:	6823      	ldr	r3, [r4, #0]
90005582:	88e1      	ldrh	r1, [r4, #6]
90005584:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90005586:	1a89      	subs	r1, r1, r2
90005588:	42bb      	cmp	r3, r7
9000558a:	b209      	sxth	r1, r1
9000558c:	d11a      	bne.n	900055c4 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x184>
        rect.y = y;
9000558e:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90005590:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005592:	2c00      	cmp	r4, #0
90005594:	d1f4      	bne.n	90005580 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x140>
        screenContainer->add(snapshot);
90005596:	6868      	ldr	r0, [r5, #4]
90005598:	4631      	mov	r1, r6
9000559a:	6803      	ldr	r3, [r0, #0]
9000559c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9000559e:	4798      	blx	r3
    newTransition->invalidate();
900055a0:	682b      	ldr	r3, [r5, #0]
900055a2:	695b      	ldr	r3, [r3, #20]
900055a4:	4a2a      	ldr	r2, [pc, #168]	@ (90005650 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x210>)
900055a6:	4293      	cmp	r3, r2
900055a8:	d12c      	bne.n	90005604 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x1c4>
        Application::getInstance()->invalidate();
900055aa:	f012 ff51 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
900055ae:	6803      	ldr	r3, [r0, #0]
900055b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
900055b2:	b001      	add	sp, #4
900055b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900055b8:	4718      	bx	r3
    if (*currentScreen)
900055ba:	f8d9 0000 	ldr.w	r0, [r9]
900055be:	2800      	cmp	r0, #0
900055c0:	d182      	bne.n	900054c8 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x88>
900055c2:	e78a      	b.n	900054da <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x9a>
                d->setY(d->getY() - targetValue);
900055c4:	4620      	mov	r0, r4
900055c6:	4798      	blx	r3
900055c8:	69a4      	ldr	r4, [r4, #24]
        while (d)
900055ca:	2c00      	cmp	r4, #0
900055cc:	d0e3      	beq.n	90005596 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x156>
900055ce:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
900055d0:	e7d6      	b.n	90005580 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x140>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900055d2:	4b20      	ldr	r3, [pc, #128]	@ (90005654 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x214>)
        snapshot.makeSnapshot();
900055d4:	4630      	mov	r0, r6
        rect.x = x;
900055d6:	612c      	str	r4, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900055d8:	f9b3 3000 	ldrsh.w	r3, [r3]
900055dc:	4c1e      	ldr	r4, [pc, #120]	@ (90005658 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x218>)
        rect.width = width;
900055de:	82ab      	strh	r3, [r5, #20]
900055e0:	f9b4 3000 	ldrsh.w	r3, [r4]
        rect.height = height;
900055e4:	82eb      	strh	r3, [r5, #22]
        snapshot.makeSnapshot();
900055e6:	f00f ff04 	bl	900153f2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_HEIGHT;
900055ea:	8823      	ldrh	r3, [r4, #0]
900055ec:	425b      	negs	r3, r3
900055ee:	876b      	strh	r3, [r5, #58]	@ 0x3a
            break;
900055f0:	e78c      	b.n	9000550c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0xcc>
    if (*currentPresenter)
900055f2:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
900055f6:	2800      	cmp	r0, #0
900055f8:	f47f af60 	bne.w	900054bc <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x7c>
900055fc:	e76d      	b.n	900054da <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x9a>
        Drawable* d = screenContainer->getFirstChild();
900055fe:	4798      	blx	r3
90005600:	4604      	mov	r4, r0
90005602:	e7ba      	b.n	9000557a <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x13a>
    newTransition->invalidate();
90005604:	4628      	mov	r0, r5
90005606:	b001      	add	sp, #4
90005608:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000560c:	4718      	bx	r3
    newTransition->init();
9000560e:	4628      	mov	r0, r5
90005610:	4790      	blx	r2
    newTransition->invalidate();
90005612:	682b      	ldr	r3, [r5, #0]
90005614:	e7c5      	b.n	900055a2 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x162>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005616:	4b11      	ldr	r3, [pc, #68]	@ (9000565c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x21c>)
90005618:	21a3      	movs	r1, #163	@ 0xa3
9000561a:	4a11      	ldr	r2, [pc, #68]	@ (90005660 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x220>)
9000561c:	4811      	ldr	r0, [pc, #68]	@ (90005664 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x224>)
9000561e:	f025 f86f 	bl	9002a700 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005622:	4b11      	ldr	r3, [pc, #68]	@ (90005668 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x228>)
90005624:	21a5      	movs	r1, #165	@ 0xa5
90005626:	4a0e      	ldr	r2, [pc, #56]	@ (90005660 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x220>)
90005628:	480e      	ldr	r0, [pc, #56]	@ (90005664 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x224>)
9000562a:	f025 f869 	bl	9002a700 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000562e:	4b0f      	ldr	r3, [pc, #60]	@ (9000566c <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x22c>)
90005630:	21a4      	movs	r1, #164	@ 0xa4
90005632:	4a0b      	ldr	r2, [pc, #44]	@ (90005660 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x220>)
90005634:	480b      	ldr	r0, [pc, #44]	@ (90005664 <_ZN23FrontendApplicationBase41gotoScreen2ScreenSlideTransitionSouthImplEv+0x224>)
90005636:	f025 f863 	bl	9002a700 <__assert_func>
9000563a:	bf00      	nop
9000563c:	9002d960 	.word	0x9002d960
90005640:	2402340b 	.word	0x2402340b
90005644:	90004f45 	.word	0x90004f45
90005648:	90004cfd 	.word	0x90004cfd
9000564c:	90002d59 	.word	0x90002d59
90005650:	90004dc5 	.word	0x90004dc5
90005654:	24023400 	.word	0x24023400
90005658:	24023402 	.word	0x24023402
9000565c:	9002d3e0 	.word	0x9002d3e0
90005660:	9002d7bc 	.word	0x9002d7bc
90005664:	9002d544 	.word	0x9002d544
90005668:	9002d630 	.word	0x9002d630
9000566c:	9002d58c 	.word	0x9002d58c
90005670:	24023454 	.word	0x24023454
90005674:	24023450 	.word	0x24023450

90005678 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90005678:	b570      	push	{r4, r5, r6, lr}
9000567a:	4604      	mov	r4, r0
9000567c:	4615      	mov	r5, r2
9000567e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90005680:	f012 ffac 	bl	900185dc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90005684:	4a1d      	ldr	r2, [pc, #116]	@ (900056fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
90005686:	2300      	movs	r3, #0
      frontendHeap(heap),
90005688:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
9000568c:	6014      	str	r4, [r2, #0]
        return instance;
9000568e:	4d1c      	ldr	r5, [pc, #112]	@ (90005700 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90005690:	4a1c      	ldr	r2, [pc, #112]	@ (90005704 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90005692:	6828      	ldr	r0, [r5, #0]
90005694:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90005696:	4a1c      	ldr	r2, [pc, #112]	@ (90005708 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90005698:	491c      	ldr	r1, [pc, #112]	@ (9000570c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
9000569a:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
9000569e:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
900056a2:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
900056a6:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
900056aa:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900056ae:	6802      	ldr	r2, [r0, #0]
900056b0:	6892      	ldr	r2, [r2, #8]
900056b2:	428a      	cmp	r2, r1
900056b4:	d11f      	bne.n	900056f6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
900056b6:	f44f 7380 	mov.w	r3, #256	@ 0x100
900056ba:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
900056be:	2000      	movs	r0, #0
900056c0:	f000 ffaa 	bl	90006618 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900056c4:	682b      	ldr	r3, [r5, #0]
900056c6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900056ca:	b192      	cbz	r2, 900056f2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
900056cc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900056ce:	b180      	cbz	r0, 900056f2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
900056d0:	f01c fbdb 	bl	90021e8a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900056d4:	682b      	ldr	r3, [r5, #0]
900056d6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900056da:	b12a      	cbz	r2, 900056e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
900056dc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900056de:	b118      	cbz	r0, 900056e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900056e0:	f01c fc4e 	bl	90021f80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900056e4:	4620      	mov	r0, r4
900056e6:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900056e8:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900056ea:	f01c fc49 	bl	90021f80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900056ee:	4620      	mov	r0, r4
900056f0:	bd70      	pop	{r4, r5, r6, pc}
900056f2:	6898      	ldr	r0, [r3, #8]
900056f4:	e7ec      	b.n	900056d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900056f6:	4619      	mov	r1, r3
900056f8:	4790      	blx	r2
900056fa:	e7e0      	b.n	900056be <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900056fc:	24023460 	.word	0x24023460
90005700:	2402340c 	.word	0x2402340c
90005704:	9002d8c4 	.word	0x9002d8c4
90005708:	9002d8ac 	.word	0x9002d8ac
9000570c:	90000d5d 	.word	0x90000d5d

90005710 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005710:	4905      	ldr	r1, [pc, #20]	@ (90005728 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x18>)
90005712:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005714:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005718:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000571c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005720:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005724:	4770      	bx	lr
90005726:	bf00      	nop
90005728:	90005075 	.word	0x90005075

9000572c <_ZN23FrontendApplicationBase37gotoScreen2ScreenSlideTransitionNorthEv>:
9000572c:	4905      	ldr	r1, [pc, #20]	@ (90005744 <_ZN23FrontendApplicationBase37gotoScreen2ScreenSlideTransitionNorthEv+0x18>)
9000572e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005730:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005734:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90005738:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
9000573c:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005740:	4770      	bx	lr
90005742:	bf00      	nop
90005744:	9000520d 	.word	0x9000520d

90005748 <_ZN23FrontendApplicationBase37gotoScreen2ScreenSlideTransitionSouthEv>:
90005748:	4905      	ldr	r1, [pc, #20]	@ (90005760 <_ZN23FrontendApplicationBase37gotoScreen2ScreenSlideTransitionSouthEv+0x18>)
9000574a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
9000574c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005750:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90005754:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005758:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
9000575c:	4770      	bx	lr
9000575e:	bf00      	nop
90005760:	90005441 	.word	0x90005441

90005764 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90005764:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90005766:	4770      	bx	lr

90005768 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90005768:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000576a:	4770      	bx	lr

9000576c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
9000576c:	4770      	bx	lr
9000576e:	bf00      	nop

90005770 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90005770:	888b      	ldrh	r3, [r1, #4]
90005772:	69c0      	ldr	r0, [r0, #28]
90005774:	0adb      	lsrs	r3, r3, #11
90005776:	680a      	ldr	r2, [r1, #0]
90005778:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
9000577c:	4410      	add	r0, r2
9000577e:	4770      	bx	lr

90005780 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90005780:	b1fa      	cbz	r2, 900057c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90005782:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90005784:	7b14      	ldrb	r4, [r2, #12]
90005786:	b1d4      	cbz	r4, 900057be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90005788:	f892 c00d 	ldrb.w	ip, [r2, #13]
9000578c:	f892 e00b 	ldrb.w	lr, [r2, #11]
90005790:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90005794:	6a03      	ldr	r3, [r0, #32]
90005796:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000579a:	ea4e 0202 	orr.w	r2, lr, r2
9000579e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900057a2:	eb03 0084 	add.w	r0, r3, r4, lsl #2
900057a6:	e004      	b.n	900057b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
900057a8:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
900057ac:	d807      	bhi.n	900057be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900057ae:	4283      	cmp	r3, r0
900057b0:	d005      	beq.n	900057be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
900057b2:	881a      	ldrh	r2, [r3, #0]
900057b4:	428a      	cmp	r2, r1
900057b6:	d1f7      	bne.n	900057a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
900057b8:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
900057bc:	bd10      	pop	{r4, pc}
        return 0;
900057be:	2000      	movs	r0, #0
}
900057c0:	bd10      	pop	{r4, pc}
        return 0;
900057c2:	4610      	mov	r0, r2
}
900057c4:	4770      	bx	lr
900057c6:	bf00      	nop

900057c8 <_ZN8touchgfx13GeneratedFontD0Ev>:
900057c8:	b510      	push	{r4, lr}
900057ca:	4604      	mov	r4, r0
900057cc:	212c      	movs	r1, #44	@ 0x2c
900057ce:	f024 fc1d 	bl	9002a00c <_ZdlPvj>
900057d2:	4620      	mov	r0, r4
900057d4:	bd10      	pop	{r4, pc}
900057d6:	bf00      	nop

900057d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900057d8:	b530      	push	{r4, r5, lr}
900057da:	b08b      	sub	sp, #44	@ 0x2c
900057dc:	4604      	mov	r4, r0
900057de:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
900057e2:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900057e4:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
900057e8:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900057ea:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
900057ee:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900057f0:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
900057f4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900057f6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
900057fa:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900057fc:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90005800:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005802:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90005806:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005808:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
9000580c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000580e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90005812:	9508      	str	r5, [sp, #32]
90005814:	f014 fa66 	bl	90019ce4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90005818:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
9000581a:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
9000581c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
9000581e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90005820:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90005822:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90005824:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90005826:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90005828:	62a3      	str	r3, [r4, #40]	@ 0x28
9000582a:	4b02      	ldr	r3, [pc, #8]	@ (90005834 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
9000582c:	6023      	str	r3, [r4, #0]
}
9000582e:	b00b      	add	sp, #44	@ 0x2c
90005830:	bd30      	pop	{r4, r5, pc}
90005832:	bf00      	nop
90005834:	9002d984 	.word	0x9002d984

90005838 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90005838:	4770      	bx	lr
9000583a:	bf00      	nop

9000583c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
9000583c:	4770      	bx	lr
9000583e:	bf00      	nop

90005840 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90005840:	4770      	bx	lr
90005842:	bf00      	nop

90005844 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90005844:	4770      	bx	lr
90005846:	bf00      	nop

90005848 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90005848:	4770      	bx	lr
9000584a:	bf00      	nop

9000584c <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
9000584c:	4770      	bx	lr
9000584e:	bf00      	nop

90005850 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005850:	4770      	bx	lr
90005852:	bf00      	nop

90005854 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005854:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005856:	68c3      	ldr	r3, [r0, #12]
90005858:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
9000585c:	f013 0f01 	tst.w	r3, #1
90005860:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005864:	d004      	beq.n	90005870 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90005866:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000586a:	f854 300c 	ldr.w	r3, [r4, ip]
9000586e:	589a      	ldr	r2, [r3, r2]
    }
90005870:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005874:	4710      	bx	r2
90005876:	bf00      	nop

90005878 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005878:	6843      	ldr	r3, [r0, #4]
9000587a:	b13b      	cbz	r3, 9000588c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
9000587c:	6883      	ldr	r3, [r0, #8]
9000587e:	b10b      	cbz	r3, 90005884 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005880:	2001      	movs	r0, #1
    }
90005882:	4770      	bx	lr
90005884:	68c0      	ldr	r0, [r0, #12]
90005886:	f000 0001 	and.w	r0, r0, #1
9000588a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000588c:	4618      	mov	r0, r3
9000588e:	4770      	bx	lr

90005890 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005890:	b510      	push	{r4, lr}
90005892:	4604      	mov	r4, r0
90005894:	2110      	movs	r1, #16
90005896:	f024 fbb9 	bl	9002a00c <_ZdlPvj>
9000589a:	4620      	mov	r0, r4
9000589c:	bd10      	pop	{r4, pc}
9000589e:	bf00      	nop

900058a0 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
900058a0:	b510      	push	{r4, lr}
900058a2:	4604      	mov	r4, r0
}
900058a4:	f44f 719c 	mov.w	r1, #312	@ 0x138
900058a8:	f024 fbb0 	bl	9002a00c <_ZdlPvj>
900058ac:	4620      	mov	r0, r4
900058ae:	bd10      	pop	{r4, pc}

900058b0 <_ZN15Screen1ViewBase13startSoloGameEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void startSoloGame()
900058b0:	b508      	push	{r3, lr}
    {
        // Override and implement this function in Screen1
    	osThreadResume(myCollisionHandle);
900058b2:	4b07      	ldr	r3, [pc, #28]	@ (900058d0 <_ZN15Screen1ViewBase13startSoloGameEv+0x20>)
900058b4:	6818      	ldr	r0, [r3, #0]
900058b6:	f009 fc4f 	bl	9000f158 <osThreadResume>
		osThreadResume(readStick1Handle);
900058ba:	4b06      	ldr	r3, [pc, #24]	@ (900058d4 <_ZN15Screen1ViewBase13startSoloGameEv+0x24>)
900058bc:	6818      	ldr	r0, [r3, #0]
900058be:	f009 fc4b 	bl	9000f158 <osThreadResume>
		osThreadResume(myBotHandle);
900058c2:	4b05      	ldr	r3, [pc, #20]	@ (900058d8 <_ZN15Screen1ViewBase13startSoloGameEv+0x28>)
900058c4:	6818      	ldr	r0, [r3, #0]
    }
900058c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
		osThreadResume(myBotHandle);
900058ca:	f009 bc45 	b.w	9000f158 <osThreadResume>
900058ce:	bf00      	nop
900058d0:	24008ebc 	.word	0x24008ebc
900058d4:	24008ec4 	.word	0x24008ec4
900058d8:	24008eb8 	.word	0x24008eb8

900058dc <_ZN15Screen1ViewBase13startDugoGameEv>:
    virtual void startDugoGame()
900058dc:	b508      	push	{r3, lr}
    {
        // Override and implement this function in Screen1
    	osThreadResume(myCollisionHandle);
900058de:	4b07      	ldr	r3, [pc, #28]	@ (900058fc <_ZN15Screen1ViewBase13startDugoGameEv+0x20>)
900058e0:	6818      	ldr	r0, [r3, #0]
900058e2:	f009 fc39 	bl	9000f158 <osThreadResume>
		osThreadResume(readStick1Handle);
900058e6:	4b06      	ldr	r3, [pc, #24]	@ (90005900 <_ZN15Screen1ViewBase13startDugoGameEv+0x24>)
900058e8:	6818      	ldr	r0, [r3, #0]
900058ea:	f009 fc35 	bl	9000f158 <osThreadResume>
		osThreadResume(readStick2Handle);
900058ee:	4b05      	ldr	r3, [pc, #20]	@ (90005904 <_ZN15Screen1ViewBase13startDugoGameEv+0x28>)
900058f0:	6818      	ldr	r0, [r3, #0]
    }
900058f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
		osThreadResume(readStick2Handle);
900058f6:	f009 bc2f 	b.w	9000f158 <osThreadResume>
900058fa:	bf00      	nop
900058fc:	24008ebc 	.word	0x24008ebc
90005900:	24008ec4 	.word	0x24008ec4
90005904:	24008ec0 	.word	0x24008ec0

90005908 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &SOLO_B)
90005908:	f100 0398 	add.w	r3, r0, #152	@ 0x98
9000590c:	4299      	cmp	r1, r3
{
9000590e:	b570      	push	{r4, r5, r6, lr}
90005910:	4604      	mov	r4, r0
90005912:	460d      	mov	r5, r1
    if (&src == &SOLO_B)
90005914:	d004      	beq.n	90005920 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //startSoloGame
        //When SOLO_B clicked call virtual function
        //Call startSoloGame
        startSoloGame();
    }
    if (&src == &DUO_B)
90005916:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
9000591a:	429d      	cmp	r5, r3
9000591c:	d019      	beq.n	90005952 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4a>
        //startDugoGame
        //When DUO_B clicked call virtual function
        //Call startDugoGame
        startDugoGame();
    }
}
9000591e:	bd70      	pop	{r4, r5, r6, pc}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005920:	f012 fd96 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreen2ScreenSlideTransitionNorth();
90005924:	f7ff ff02 	bl	9000572c <_ZN23FrontendApplicationBase37gotoScreen2ScreenSlideTransitionNorthEv>
        startSoloGame();
90005928:	6823      	ldr	r3, [r4, #0]
9000592a:	4a19      	ldr	r2, [pc, #100]	@ (90005990 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x88>)
9000592c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000592e:	4293      	cmp	r3, r2
90005930:	d126      	bne.n	90005980 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x78>
    	osThreadResume(myCollisionHandle);
90005932:	4b18      	ldr	r3, [pc, #96]	@ (90005994 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8c>)
90005934:	6818      	ldr	r0, [r3, #0]
90005936:	f009 fc0f 	bl	9000f158 <osThreadResume>
		osThreadResume(readStick1Handle);
9000593a:	4b17      	ldr	r3, [pc, #92]	@ (90005998 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x90>)
9000593c:	6818      	ldr	r0, [r3, #0]
9000593e:	f009 fc0b 	bl	9000f158 <osThreadResume>
		osThreadResume(myBotHandle);
90005942:	4b16      	ldr	r3, [pc, #88]	@ (9000599c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>)
90005944:	6818      	ldr	r0, [r3, #0]
90005946:	f009 fc07 	bl	9000f158 <osThreadResume>
    if (&src == &DUO_B)
9000594a:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
9000594e:	429d      	cmp	r5, r3
90005950:	d1e5      	bne.n	9000591e <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005952:	f012 fd7d 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreen2ScreenSlideTransitionSouth();
90005956:	f7ff fef7 	bl	90005748 <_ZN23FrontendApplicationBase37gotoScreen2ScreenSlideTransitionSouthEv>
        startDugoGame();
9000595a:	6823      	ldr	r3, [r4, #0]
9000595c:	4a10      	ldr	r2, [pc, #64]	@ (900059a0 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x98>)
9000595e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005960:	4293      	cmp	r3, r2
90005962:	d110      	bne.n	90005986 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x7e>
    	osThreadResume(myCollisionHandle);
90005964:	4b0b      	ldr	r3, [pc, #44]	@ (90005994 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8c>)
90005966:	6818      	ldr	r0, [r3, #0]
90005968:	f009 fbf6 	bl	9000f158 <osThreadResume>
		osThreadResume(readStick1Handle);
9000596c:	4b0a      	ldr	r3, [pc, #40]	@ (90005998 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x90>)
9000596e:	6818      	ldr	r0, [r3, #0]
90005970:	f009 fbf2 	bl	9000f158 <osThreadResume>
		osThreadResume(readStick2Handle);
90005974:	4b0b      	ldr	r3, [pc, #44]	@ (900059a4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9c>)
}
90005976:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000597a:	6818      	ldr	r0, [r3, #0]
9000597c:	f009 bbec 	b.w	9000f158 <osThreadResume>
        startSoloGame();
90005980:	4620      	mov	r0, r4
90005982:	4798      	blx	r3
90005984:	e7c7      	b.n	90005916 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        startDugoGame();
90005986:	4620      	mov	r0, r4
}
90005988:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        startDugoGame();
9000598c:	4718      	bx	r3
9000598e:	bf00      	nop
90005990:	900058b1 	.word	0x900058b1
90005994:	24008ebc 	.word	0x24008ebc
90005998:	24008ec4 	.word	0x24008ec4
9000599c:	24008eb8 	.word	0x24008eb8
900059a0:	900058dd 	.word	0x900058dd
900059a4:	24008ec0 	.word	0x24008ec0

900059a8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
900059a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900059ac:	b083      	sub	sp, #12
900059ae:	4604      	mov	r4, r0
        : presenter(0)
900059b0:	f014 fc1e 	bl	9001a1f0 <_ZN8touchgfx6ScreenC1Ev>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900059b4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
          touchable(false),
900059b8:	f44f 7280 	mov.w	r2, #256	@ 0x100
900059bc:	2500      	movs	r5, #0
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
900059be:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
900059c2:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
900059c6:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
900059ca:	f104 0798 	add.w	r7, r4, #152	@ 0x98
900059ce:	f8ad 3004 	strh.w	r3, [sp, #4]
    {
        Image::setBitmap(bmp);
900059d2:	4648      	mov	r0, r9
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
900059d4:	4b79      	ldr	r3, [pc, #484]	@ (90005bbc <_ZN15Screen1ViewBaseC1Ev+0x214>)
900059d6:	f104 08e0 	add.w	r8, r4, #224	@ 0xe0
900059da:	4979      	ldr	r1, [pc, #484]	@ (90005bc0 <_ZN15Screen1ViewBaseC1Ev+0x218>)
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900059dc:	1d26      	adds	r6, r4, #4
900059de:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
900059e2:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
900059e6:	6423      	str	r3, [r4, #64]	@ 0x40
900059e8:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), bitmap(bmp), alpha(255)
900059ea:	4a76      	ldr	r2, [pc, #472]	@ (90005bc4 <_ZN15Screen1ViewBaseC1Ev+0x21c>)
900059ec:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
900059f0:	66e2      	str	r2, [r4, #108]	@ 0x6c
900059f2:	6021      	str	r1, [r4, #0]
        Image::setBitmap(bmp);
900059f4:	a901      	add	r1, sp, #4
900059f6:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
900059f8:	66a5      	str	r5, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
900059fa:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
900059fe:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
90005a02:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90005a06:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90005a0a:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90005a0e:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
90005a12:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90005a16:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90005a1a:	f010 f828 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005a1e:	4638      	mov	r0, r7
90005a20:	f010 f966 	bl	90015cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005a24:	4640      	mov	r0, r8
90005a26:	f010 f963 	bl	90015cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90005a2a:	4b67      	ldr	r3, [pc, #412]	@ (90005bc8 <_ZN15Screen1ViewBaseC1Ev+0x220>)
90005a2c:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90005a30:	4630      	mov	r0, r6
90005a32:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
90005a36:	4b65      	ldr	r3, [pc, #404]	@ (90005bcc <_ZN15Screen1ViewBaseC1Ev+0x224>)
90005a38:	f8c4 412c 	str.w	r4, [r4, #300]	@ 0x12c
90005a3c:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        rect.x = x;
90005a40:	4b63      	ldr	r3, [pc, #396]	@ (90005bd0 <_ZN15Screen1ViewBaseC1Ev+0x228>)
90005a42:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90005a46:	64a3      	str	r3, [r4, #72]	@ 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90005a48:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90005a4c:	6465      	str	r5, [r4, #68]	@ 0x44
90005a4e:	66a3      	str	r3, [r4, #104]	@ 0x68
90005a50:	f00c fa40 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_PUZZLE_ID));
90005a54:	4648      	mov	r0, r9
90005a56:	a901      	add	r1, sp, #4
90005a58:	6725      	str	r5, [r4, #112]	@ 0x70
90005a5a:	f8ad 5004 	strh.w	r5, [sp, #4]
90005a5e:	f010 f806 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005a62:	4649      	mov	r1, r9
90005a64:	4630      	mov	r0, r6
90005a66:	f00c fa35 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a6a:	4b5a      	ldr	r3, [pc, #360]	@ (90005bd4 <_ZN15Screen1ViewBaseC1Ev+0x22c>)
        return typedTextId < numberOfTypedTexts;
90005a6c:	f8df 9188 	ldr.w	r9, [pc, #392]	@ 90005bf8 <_ZN15Screen1ViewBaseC1Ev+0x250>
    SOLO_B.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
90005a70:	4669      	mov	r1, sp
90005a72:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90005a76:	2302      	movs	r3, #2
90005a78:	aa01      	add	r2, sp, #4
90005a7a:	4638      	mov	r0, r7
90005a7c:	f8ad 3000 	strh.w	r3, [sp]
90005a80:	2301      	movs	r3, #1
90005a82:	f8ad 3004 	strh.w	r3, [sp, #4]
90005a86:	f00f fec0 	bl	9001580a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005a8a:	2104      	movs	r1, #4
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90005a8c:	f8b9 3000 	ldrh.w	r3, [r9]
90005a90:	428b      	cmp	r3, r1
90005a92:	f8a4 10d0 	strh.w	r1, [r4, #208]	@ 0xd0
90005a96:	d925      	bls.n	90005ae4 <_ZN15Screen1ViewBaseC1Ev+0x13c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005a98:	4b4f      	ldr	r3, [pc, #316]	@ (90005bd8 <_ZN15Screen1ViewBaseC1Ev+0x230>)
90005a9a:	681b      	ldr	r3, [r3, #0]
90005a9c:	2b00      	cmp	r3, #0
90005a9e:	f000 8087 	beq.w	90005bb0 <_ZN15Screen1ViewBaseC1Ev+0x208>
        return fonts[typedTexts[typedTextId].fontIdx];
90005aa2:	7a1a      	ldrb	r2, [r3, #8]
90005aa4:	4b4d      	ldr	r3, [pc, #308]	@ (90005bdc <_ZN15Screen1ViewBaseC1Ev+0x234>)
90005aa6:	681b      	ldr	r3, [r3, #0]
90005aa8:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005aac:	4b4c      	ldr	r3, [pc, #304]	@ (90005be0 <_ZN15Screen1ViewBaseC1Ev+0x238>)
90005aae:	6818      	ldr	r0, [r3, #0]
90005ab0:	f000 fdf0 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005ab4:	f8da 3000 	ldr.w	r3, [sl]
90005ab8:	494a      	ldr	r1, [pc, #296]	@ (90005be4 <_ZN15Screen1ViewBaseC1Ev+0x23c>)
90005aba:	4683      	mov	fp, r0
90005abc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005abe:	428a      	cmp	r2, r1
90005ac0:	d16a      	bne.n	90005b98 <_ZN15Screen1ViewBaseC1Ev+0x1f0>
        return fontHeight;
90005ac2:	f8ba 5004 	ldrh.w	r5, [sl, #4]
90005ac6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005ac8:	4659      	mov	r1, fp
90005aca:	4650      	mov	r0, sl
90005acc:	4798      	blx	r3
90005ace:	fb15 f500 	smulbb	r5, r5, r0
90005ad2:	f8da 3000 	ldr.w	r3, [sl]
90005ad6:	4659      	mov	r1, fp
90005ad8:	b2ad      	uxth	r5, r5
90005ada:	4650      	mov	r0, sl
90005adc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005ade:	4798      	blx	r3
90005ae0:	4405      	add	r5, r0
90005ae2:	b22d      	sxth	r5, r5
90005ae4:	4639      	mov	r1, r7
        color = col;
90005ae6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SOLO_B.setAction(buttonCallback);
90005aea:	f504 7794 	add.w	r7, r4, #296	@ 0x128
90005aee:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005af0:	f8a4 50de 	strh.w	r5, [r4, #222]	@ 0xde
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90005af4:	f8c4 70c0 	str.w	r7, [r4, #192]	@ 0xc0
        colorPressed = col;
90005af8:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
90005afc:	f00c f9ea 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b00:	4b39      	ldr	r3, [pc, #228]	@ (90005be8 <_ZN15Screen1ViewBaseC1Ev+0x240>)
    DUO_B.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
90005b02:	4669      	mov	r1, sp
90005b04:	aa01      	add	r2, sp, #4
90005b06:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
90005b0a:	2302      	movs	r3, #2
90005b0c:	4640      	mov	r0, r8
90005b0e:	f8ad 3000 	strh.w	r3, [sp]
90005b12:	2301      	movs	r3, #1
90005b14:	f8ad 3004 	strh.w	r3, [sp, #4]
90005b18:	f00f fe77 	bl	9001580a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005b1c:	2105      	movs	r1, #5
        if (typedText.hasValidId())
90005b1e:	f8b9 3000 	ldrh.w	r3, [r9]
90005b22:	428b      	cmp	r3, r1
90005b24:	f8a4 1118 	strh.w	r1, [r4, #280]	@ 0x118
90005b28:	d925      	bls.n	90005b76 <_ZN15Screen1ViewBaseC1Ev+0x1ce>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005b2a:	4b2b      	ldr	r3, [pc, #172]	@ (90005bd8 <_ZN15Screen1ViewBaseC1Ev+0x230>)
90005b2c:	681b      	ldr	r3, [r3, #0]
90005b2e:	2b00      	cmp	r3, #0
90005b30:	d03e      	beq.n	90005bb0 <_ZN15Screen1ViewBaseC1Ev+0x208>
        return fonts[typedTexts[typedTextId].fontIdx];
90005b32:	7a9a      	ldrb	r2, [r3, #10]
90005b34:	4b29      	ldr	r3, [pc, #164]	@ (90005bdc <_ZN15Screen1ViewBaseC1Ev+0x234>)
90005b36:	681b      	ldr	r3, [r3, #0]
90005b38:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005b3c:	4b28      	ldr	r3, [pc, #160]	@ (90005be0 <_ZN15Screen1ViewBaseC1Ev+0x238>)
90005b3e:	6818      	ldr	r0, [r3, #0]
90005b40:	f000 fda8 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005b44:	f8d9 3000 	ldr.w	r3, [r9]
90005b48:	4926      	ldr	r1, [pc, #152]	@ (90005be4 <_ZN15Screen1ViewBaseC1Ev+0x23c>)
90005b4a:	4682      	mov	sl, r0
90005b4c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005b4e:	428a      	cmp	r2, r1
90005b50:	d128      	bne.n	90005ba4 <_ZN15Screen1ViewBaseC1Ev+0x1fc>
90005b52:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90005b56:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005b58:	4651      	mov	r1, sl
90005b5a:	4648      	mov	r0, r9
90005b5c:	4798      	blx	r3
90005b5e:	fb15 f500 	smulbb	r5, r5, r0
90005b62:	f8d9 3000 	ldr.w	r3, [r9]
90005b66:	4651      	mov	r1, sl
90005b68:	b2ad      	uxth	r5, r5
90005b6a:	4648      	mov	r0, r9
90005b6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005b6e:	4798      	blx	r3
90005b70:	182b      	adds	r3, r5, r0
90005b72:	b21b      	sxth	r3, r3
90005b74:	e000      	b.n	90005b78 <_ZN15Screen1ViewBaseC1Ev+0x1d0>
90005b76:	2300      	movs	r3, #0
90005b78:	f8a4 3126 	strh.w	r3, [r4, #294]	@ 0x126
        color = col;
90005b7c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
90005b80:	4630      	mov	r0, r6
90005b82:	4641      	mov	r1, r8
90005b84:	f8c4 7108 	str.w	r7, [r4, #264]	@ 0x108
        colorPressed = col;
90005b88:	e9c4 3347 	strd	r3, r3, [r4, #284]	@ 0x11c
90005b8c:	f00c f9a2 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005b90:	4620      	mov	r0, r4
90005b92:	b003      	add	sp, #12
90005b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005b98:	4650      	mov	r0, sl
90005b9a:	4790      	blx	r2
90005b9c:	f8da 3000 	ldr.w	r3, [sl]
90005ba0:	4605      	mov	r5, r0
90005ba2:	e790      	b.n	90005ac6 <_ZN15Screen1ViewBaseC1Ev+0x11e>
90005ba4:	4648      	mov	r0, r9
90005ba6:	4790      	blx	r2
90005ba8:	f8d9 3000 	ldr.w	r3, [r9]
90005bac:	4605      	mov	r5, r0
90005bae:	e7d2      	b.n	90005b56 <_ZN15Screen1ViewBaseC1Ev+0x1ae>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005bb0:	4b0e      	ldr	r3, [pc, #56]	@ (90005bec <_ZN15Screen1ViewBaseC1Ev+0x244>)
90005bb2:	216c      	movs	r1, #108	@ 0x6c
90005bb4:	4a0e      	ldr	r2, [pc, #56]	@ (90005bf0 <_ZN15Screen1ViewBaseC1Ev+0x248>)
90005bb6:	480f      	ldr	r0, [pc, #60]	@ (90005bf4 <_ZN15Screen1ViewBaseC1Ev+0x24c>)
90005bb8:	f024 fda2 	bl	9002a700 <__assert_func>
90005bbc:	9002e5e8 	.word	0x9002e5e8
90005bc0:	9002dacc 	.word	0x9002dacc
90005bc4:	9002e650 	.word	0x9002e650
90005bc8:	9002dab4 	.word	0x9002dab4
90005bcc:	90005909 	.word	0x90005909
90005bd0:	011001e0 	.word	0x011001e0
90005bd4:	006f001e 	.word	0x006f001e
90005bd8:	24023464 	.word	0x24023464
90005bdc:	2402346c 	.word	0x2402346c
90005be0:	24023470 	.word	0x24023470
90005be4:	90004cb5 	.word	0x90004cb5
90005be8:	006f0110 	.word	0x006f0110
90005bec:	9002d9e4 	.word	0x9002d9e4
90005bf0:	9002da28 	.word	0x9002da28
90005bf4:	9002da64 	.word	0x9002da64
90005bf8:	24023468 	.word	0x24023468

90005bfc <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90005bfc:	b530      	push	{r4, r5, lr}
90005bfe:	b085      	sub	sp, #20
90005c00:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90005c02:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90005c04:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005c06:	466d      	mov	r5, sp
90005c08:	4601      	mov	r1, r0
        rect.width = width;
90005c0a:	8102      	strh	r2, [r0, #8]
90005c0c:	343c      	adds	r4, #60	@ 0x3c
90005c0e:	4628      	mov	r0, r5
90005c10:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005c14:	4798      	blx	r3
90005c16:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005c1a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005c1e:	b005      	add	sp, #20
90005c20:	bd30      	pop	{r4, r5, pc}
90005c22:	bf00      	nop

90005c24 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90005c24:	b530      	push	{r4, r5, lr}
90005c26:	b085      	sub	sp, #20
90005c28:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90005c2a:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90005c2c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005c2e:	466d      	mov	r5, sp
90005c30:	4601      	mov	r1, r0
        rect.height = height;
90005c32:	8142      	strh	r2, [r0, #10]
90005c34:	343c      	adds	r4, #60	@ 0x3c
90005c36:	4628      	mov	r0, r5
90005c38:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005c3c:	4798      	blx	r3
90005c3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005c42:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005c46:	b005      	add	sp, #20
90005c48:	bd30      	pop	{r4, r5, pc}
90005c4a:	bf00      	nop

90005c4c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90005c4c:	2200      	movs	r2, #0
90005c4e:	6002      	str	r2, [r0, #0]
90005c50:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90005c52:	4770      	bx	lr

90005c54 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005c54:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90005c58:	4770      	bx	lr
90005c5a:	bf00      	nop

90005c5c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90005c5c:	2000      	movs	r0, #0
90005c5e:	4770      	bx	lr

90005c60 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90005c60:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90005c64:	b112      	cbz	r2, 90005c6c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90005c66:	6803      	ldr	r3, [r0, #0]
90005c68:	695b      	ldr	r3, [r3, #20]
90005c6a:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90005c6c:	4770      	bx	lr
90005c6e:	bf00      	nop

90005c70 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005c70:	2200      	movs	r2, #0
90005c72:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90005c76:	6082      	str	r2, [r0, #8]
90005c78:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90005c7c:	4770      	bx	lr
90005c7e:	bf00      	nop

90005c80 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90005c80:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90005c82:	4770      	bx	lr

90005c84 <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
90005c84:	4770      	bx	lr
90005c86:	bf00      	nop

90005c88 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90005c88:	4770      	bx	lr
90005c8a:	bf00      	nop

90005c8c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90005c8c:	b510      	push	{r4, lr}
90005c8e:	4604      	mov	r4, r0
90005c90:	214c      	movs	r1, #76	@ 0x4c
90005c92:	f024 f9bb 	bl	9002a00c <_ZdlPvj>
90005c96:	4620      	mov	r0, r4
90005c98:	bd10      	pop	{r4, pc}
90005c9a:	bf00      	nop

90005c9c <_ZN15Screen2ViewBaseD1Ev>:
Screen2ViewBase::~Screen2ViewBase()
90005c9c:	4b03      	ldr	r3, [pc, #12]	@ (90005cac <_ZN15Screen2ViewBaseD1Ev+0x10>)
90005c9e:	b510      	push	{r4, lr}
90005ca0:	4604      	mov	r4, r0
90005ca2:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005ca4:	f010 feda 	bl	90016a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005ca8:	4620      	mov	r0, r4
90005caa:	bd10      	pop	{r4, pc}
90005cac:	9002dc28 	.word	0x9002dc28

90005cb0 <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
90005cb0:	4b06      	ldr	r3, [pc, #24]	@ (90005ccc <_ZN15Screen2ViewBaseD0Ev+0x1c>)
90005cb2:	b510      	push	{r4, lr}
90005cb4:	4604      	mov	r4, r0
90005cb6:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005cb8:	f010 fed0 	bl	90016a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005cbc:	f641 6194 	movw	r1, #7828	@ 0x1e94
90005cc0:	4620      	mov	r0, r4
90005cc2:	f024 f9a3 	bl	9002a00c <_ZdlPvj>
90005cc6:	4620      	mov	r0, r4
90005cc8:	bd10      	pop	{r4, pc}
90005cca:	bf00      	nop
90005ccc:	9002dc28 	.word	0x9002dc28

90005cd0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90005cd0:	4b1b      	ldr	r3, [pc, #108]	@ (90005d40 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005cd2:	6802      	ldr	r2, [r0, #0]
90005cd4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90005cd6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005cd8:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90005cda:	b323      	cbz	r3, 90005d26 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90005cdc:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90005cde:	4919      	ldr	r1, [pc, #100]	@ (90005d44 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90005ce0:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90005ce2:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005ce4:	8809      	ldrh	r1, [r1, #0]
90005ce6:	4291      	cmp	r1, r2
90005ce8:	d923      	bls.n	90005d32 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90005cea:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90005cee:	4b16      	ldr	r3, [pc, #88]	@ (90005d48 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90005cf0:	681b      	ldr	r3, [r3, #0]
90005cf2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005cf6:	4a15      	ldr	r2, [pc, #84]	@ (90005d4c <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90005cf8:	6803      	ldr	r3, [r0, #0]
90005cfa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005cfc:	4293      	cmp	r3, r2
90005cfe:	d107      	bne.n	90005d10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90005d00:	88c0      	ldrh	r0, [r0, #6]
90005d02:	4b13      	ldr	r3, [pc, #76]	@ (90005d50 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005d04:	1a31      	subs	r1, r6, r0
90005d06:	429d      	cmp	r5, r3
90005d08:	b209      	sxth	r1, r1
90005d0a:	d107      	bne.n	90005d1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90005d0c:	80e1      	strh	r1, [r4, #6]
    }
90005d0e:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005d10:	4798      	blx	r3
90005d12:	4b0f      	ldr	r3, [pc, #60]	@ (90005d50 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005d14:	1a31      	subs	r1, r6, r0
90005d16:	429d      	cmp	r5, r3
90005d18:	b209      	sxth	r1, r1
90005d1a:	d0f7      	beq.n	90005d0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90005d1c:	4620      	mov	r0, r4
90005d1e:	462b      	mov	r3, r5
    }
90005d20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005d24:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005d26:	4b0b      	ldr	r3, [pc, #44]	@ (90005d54 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90005d28:	216c      	movs	r1, #108	@ 0x6c
90005d2a:	4a0b      	ldr	r2, [pc, #44]	@ (90005d58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90005d2c:	480b      	ldr	r0, [pc, #44]	@ (90005d5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90005d2e:	f024 fce7 	bl	9002a700 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005d32:	4b0b      	ldr	r3, [pc, #44]	@ (90005d60 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90005d34:	216d      	movs	r1, #109	@ 0x6d
90005d36:	4a08      	ldr	r2, [pc, #32]	@ (90005d58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90005d38:	4808      	ldr	r0, [pc, #32]	@ (90005d5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90005d3a:	f024 fce1 	bl	9002a700 <__assert_func>
90005d3e:	bf00      	nop
90005d40:	24023464 	.word	0x24023464
90005d44:	24023468 	.word	0x24023468
90005d48:	2402346c 	.word	0x2402346c
90005d4c:	90004cb1 	.word	0x90004cb1
90005d50:	90002d59 	.word	0x90002d59
90005d54:	9002d9e4 	.word	0x9002d9e4
90005d58:	9002da28 	.word	0x9002da28
90005d5c:	9002da64 	.word	0x9002da64
90005d60:	9002db00 	.word	0x9002db00

90005d64 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90005d64:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90005d66:	b570      	push	{r4, r5, r6, lr}
90005d68:	4614      	mov	r4, r2
90005d6a:	4e23      	ldr	r6, [pc, #140]	@ (90005df8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
90005d6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90005d6e:	4605      	mov	r5, r0
90005d70:	42b2      	cmp	r2, r6
90005d72:	d122      	bne.n	90005dba <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90005d74:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90005d76:	80a9      	strh	r1, [r5, #4]
90005d78:	4920      	ldr	r1, [pc, #128]	@ (90005dfc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90005d7a:	428a      	cmp	r2, r1
90005d7c:	d123      	bne.n	90005dc6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005d7e:	4a20      	ldr	r2, [pc, #128]	@ (90005e00 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005d80:	b2a4      	uxth	r4, r4
90005d82:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90005d84:	6813      	ldr	r3, [r2, #0]
90005d86:	2b00      	cmp	r3, #0
90005d88:	d02f      	beq.n	90005dea <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
90005d8a:	491e      	ldr	r1, [pc, #120]	@ (90005e04 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90005d8c:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005d8e:	8809      	ldrh	r1, [r1, #0]
90005d90:	4291      	cmp	r1, r2
90005d92:	d924      	bls.n	90005dde <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
90005d94:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90005d98:	4b1b      	ldr	r3, [pc, #108]	@ (90005e08 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
90005d9a:	681b      	ldr	r3, [r3, #0]
90005d9c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005da0:	4a1a      	ldr	r2, [pc, #104]	@ (90005e0c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90005da2:	6803      	ldr	r3, [r0, #0]
90005da4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005da6:	4293      	cmp	r3, r2
90005da8:	d117      	bne.n	90005dda <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
90005daa:	88c0      	ldrh	r0, [r0, #6]
90005dac:	4b18      	ldr	r3, [pc, #96]	@ (90005e10 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90005dae:	1a24      	subs	r4, r4, r0
90005db0:	429e      	cmp	r6, r3
90005db2:	b221      	sxth	r1, r4
90005db4:	d10c      	bne.n	90005dd0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
90005db6:	80e9      	strh	r1, [r5, #6]
    }
90005db8:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
90005dba:	4790      	blx	r2
        setBaselineY(baselineY);
90005dbc:	682b      	ldr	r3, [r5, #0]
90005dbe:	490f      	ldr	r1, [pc, #60]	@ (90005dfc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90005dc0:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
90005dc2:	428a      	cmp	r2, r1
90005dc4:	d0db      	beq.n	90005d7e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
90005dc6:	4621      	mov	r1, r4
90005dc8:	4628      	mov	r0, r5
    }
90005dca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
90005dce:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005dd0:	4628      	mov	r0, r5
90005dd2:	4633      	mov	r3, r6
    }
90005dd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005dd8:	4718      	bx	r3
90005dda:	4798      	blx	r3
90005ddc:	e7e6      	b.n	90005dac <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005dde:	4b0d      	ldr	r3, [pc, #52]	@ (90005e14 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90005de0:	216d      	movs	r1, #109	@ 0x6d
90005de2:	4a0d      	ldr	r2, [pc, #52]	@ (90005e18 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005de4:	480d      	ldr	r0, [pc, #52]	@ (90005e1c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005de6:	f024 fc8b 	bl	9002a700 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005dea:	4b0d      	ldr	r3, [pc, #52]	@ (90005e20 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90005dec:	216c      	movs	r1, #108	@ 0x6c
90005dee:	4a0a      	ldr	r2, [pc, #40]	@ (90005e18 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005df0:	480a      	ldr	r0, [pc, #40]	@ (90005e1c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005df2:	f024 fc85 	bl	9002a700 <__assert_func>
90005df6:	bf00      	nop
90005df8:	90002d55 	.word	0x90002d55
90005dfc:	90005cd1 	.word	0x90005cd1
90005e00:	24023464 	.word	0x24023464
90005e04:	24023468 	.word	0x24023468
90005e08:	2402346c 	.word	0x2402346c
90005e0c:	90004cb1 	.word	0x90004cb1
90005e10:	90002d59 	.word	0x90002d59
90005e14:	9002db00 	.word	0x9002db00
90005e18:	9002da28 	.word	0x9002da28
90005e1c:	9002da64 	.word	0x9002da64
90005e20:	9002d9e4 	.word	0x9002d9e4

90005e24 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
90005e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005e28:	4604      	mov	r4, r0
90005e2a:	b08d      	sub	sp, #52	@ 0x34
90005e2c:	2600      	movs	r6, #0
90005e2e:	f014 f9df 	bl	9001a1f0 <_ZN8touchgfx6ScreenC1Ev>
90005e32:	f64f 79ff 	movw	r9, #65535	@ 0xffff
          touchable(false),
90005e36:	f44f 7580 	mov.w	r5, #256	@ 0x100
        : Widget(), alpha(255), color(0)
90005e3a:	f04f 0aff 	mov.w	sl, #255	@ 0xff
        : Widget(), bitmap(bmp), alpha(255)
90005e3e:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 90006018 <_ZN15Screen2ViewBaseC1Ev+0x1f4>
90005e42:	4a6e      	ldr	r2, [pc, #440]	@ (90005ffc <_ZN15Screen2ViewBaseC1Ev+0x1d8>)
90005e44:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
90005e48:	496d      	ldr	r1, [pc, #436]	@ (90006000 <_ZN15Screen2ViewBaseC1Ev+0x1dc>)
90005e4a:	f104 0798 	add.w	r7, r4, #152	@ 0x98
        Image::setBitmap(bmp);
90005e4e:	4618      	mov	r0, r3
90005e50:	6422      	str	r2, [r4, #64]	@ 0x40
90005e52:	6021      	str	r1, [r4, #0]
90005e54:	a90a      	add	r1, sp, #40	@ 0x28
90005e56:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
90005e5a:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
90005e5e:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
90005e62:	63e6      	str	r6, [r4, #60]	@ 0x3c
        : x(0), y(0), width(0), height(0)
90005e64:	6466      	str	r6, [r4, #68]	@ 0x44
          cachedAbsX(0),
90005e66:	6626      	str	r6, [r4, #96]	@ 0x60
        : color(col)
90005e68:	66a6      	str	r6, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
90005e6a:	6726      	str	r6, [r4, #112]	@ 0x70
90005e6c:	f884 a066 	strb.w	sl, [r4, #102]	@ 0x66
90005e70:	f8c4 608c 	str.w	r6, [r4, #140]	@ 0x8c
        : Widget(), bitmap(bmp), alpha(255)
90005e74:	f8a4 9092 	strh.w	r9, [r4, #146]	@ 0x92
90005e78:	f884 9094 	strb.w	r9, [r4, #148]	@ 0x94
90005e7c:	f8c4 b06c 	str.w	fp, [r4, #108]	@ 0x6c
90005e80:	9304      	str	r3, [sp, #16]
90005e82:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90005e86:	e9c4 6612 	strd	r6, r6, [r4, #72]	@ 0x48
          parent(0),
90005e8a:	e9c4 6614 	strd	r6, r6, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
90005e8e:	e9c4 6616 	strd	r6, r6, [r4, #88]	@ 0x58
90005e92:	e9c4 661d 	strd	r6, r6, [r4, #116]	@ 0x74
          parent(0),
90005e96:	e9c4 661f 	strd	r6, r6, [r4, #124]	@ 0x7c
          nextDrawChainElement(0),
90005e9a:	e9c4 6621 	strd	r6, r6, [r4, #132]	@ 0x84
        Image::setBitmap(bmp);
90005e9e:	f00f fde6 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005ea2:	a90a      	add	r1, sp, #40	@ 0x28
90005ea4:	4638      	mov	r0, r7
          touchable(false),
90005ea6:	f8a4 50bc 	strh.w	r5, [r4, #188]	@ 0xbc
        : Widget(), bitmap(bmp), alpha(255)
90005eaa:	f8c4 b098 	str.w	fp, [r4, #152]	@ 0x98
90005eae:	f8a4 90be 	strh.w	r9, [r4, #190]	@ 0xbe
90005eb2:	f884 a0c0 	strb.w	sl, [r4, #192]	@ 0xc0
90005eb6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90005eba:	e9c4 6627 	strd	r6, r6, [r4, #156]	@ 0x9c
90005ebe:	e9c4 6629 	strd	r6, r6, [r4, #164]	@ 0xa4
          nextSibling(0),
90005ec2:	e9c4 662b 	strd	r6, r6, [r4, #172]	@ 0xac
          cachedAbsX(0),
90005ec6:	e9c4 662d 	strd	r6, r6, [r4, #180]	@ 0xb4
        Image::setBitmap(bmp);
90005eca:	f00f fdd0 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005ece:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
90005ed2:	a90a      	add	r1, sp, #40	@ 0x28
90005ed4:	4640      	mov	r0, r8
          touchable(false),
90005ed6:	f8a4 50e8 	strh.w	r5, [r4, #232]	@ 0xe8
        : Widget(), bitmap(bmp), alpha(255)
90005eda:	f8c4 b0c4 	str.w	fp, [r4, #196]	@ 0xc4
90005ede:	f8a4 90ea 	strh.w	r9, [r4, #234]	@ 0xea
90005ee2:	f884 a0ec 	strb.w	sl, [r4, #236]	@ 0xec
90005ee6:	9300      	str	r3, [sp, #0]
90005ee8:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90005eec:	e9c4 6632 	strd	r6, r6, [r4, #200]	@ 0xc8
90005ef0:	e9c4 6634 	strd	r6, r6, [r4, #208]	@ 0xd0
          nextSibling(0),
90005ef4:	e9c4 6636 	strd	r6, r6, [r4, #216]	@ 0xd8
          cachedAbsX(0),
90005ef8:	e9c4 6638 	strd	r6, r6, [r4, #224]	@ 0xe0
        Image::setBitmap(bmp);
90005efc:	f00f fdb7 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005f00:	f504 728e 	add.w	r2, r4, #284	@ 0x11c
90005f04:	a90a      	add	r1, sp, #40	@ 0x28
90005f06:	9800      	ldr	r0, [sp, #0]
          touchable(false),
90005f08:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        : Widget(), bitmap(bmp), alpha(255)
90005f0c:	f8c4 b0f0 	str.w	fp, [r4, #240]	@ 0xf0
90005f10:	f8a4 9116 	strh.w	r9, [r4, #278]	@ 0x116
90005f14:	f884 a118 	strb.w	sl, [r4, #280]	@ 0x118
90005f18:	9201      	str	r2, [sp, #4]
90005f1a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90005f1e:	e9c4 663d 	strd	r6, r6, [r4, #244]	@ 0xf4
90005f22:	e9c4 663f 	strd	r6, r6, [r4, #252]	@ 0xfc
          nextSibling(0),
90005f26:	e9c4 6641 	strd	r6, r6, [r4, #260]	@ 0x104
          cachedAbsX(0),
90005f2a:	e9c4 6643 	strd	r6, r6, [r4, #268]	@ 0x10c
        Image::setBitmap(bmp);
90005f2e:	f00f fd9e 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005f32:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
90005f36:	a90a      	add	r1, sp, #40	@ 0x28
90005f38:	9801      	ldr	r0, [sp, #4]
          touchable(false),
90005f3a:	f8a4 5140 	strh.w	r5, [r4, #320]	@ 0x140
        : Widget(), bitmap(bmp), alpha(255)
90005f3e:	f8c4 b11c 	str.w	fp, [r4, #284]	@ 0x11c
90005f42:	f8a4 9142 	strh.w	r9, [r4, #322]	@ 0x142
90005f46:	f884 a144 	strb.w	sl, [r4, #324]	@ 0x144
90005f4a:	9302      	str	r3, [sp, #8]
90005f4c:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90005f50:	e9c4 6648 	strd	r6, r6, [r4, #288]	@ 0x120
90005f54:	e9c4 664a 	strd	r6, r6, [r4, #296]	@ 0x128
          nextSibling(0),
90005f58:	e9c4 664c 	strd	r6, r6, [r4, #304]	@ 0x130
          cachedAbsX(0),
90005f5c:	e9c4 664e 	strd	r6, r6, [r4, #312]	@ 0x138
        Image::setBitmap(bmp);
90005f60:	f00f fd85 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005f64:	f504 72ba 	add.w	r2, r4, #372	@ 0x174
90005f68:	a90a      	add	r1, sp, #40	@ 0x28
90005f6a:	9802      	ldr	r0, [sp, #8]
          touchable(false),
90005f6c:	f8a4 516c 	strh.w	r5, [r4, #364]	@ 0x16c
        : Widget(), bitmap(bmp), alpha(255)
90005f70:	f8c4 b148 	str.w	fp, [r4, #328]	@ 0x148
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005f74:	4d23      	ldr	r5, [pc, #140]	@ (90006004 <_ZN15Screen2ViewBaseC1Ev+0x1e0>)
90005f76:	f884 a170 	strb.w	sl, [r4, #368]	@ 0x170
90005f7a:	f8a4 916e 	strh.w	r9, [r4, #366]	@ 0x16e
90005f7e:	9203      	str	r2, [sp, #12]
90005f80:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90005f84:	e9c4 6653 	strd	r6, r6, [r4, #332]	@ 0x14c
90005f88:	e9c4 6655 	strd	r6, r6, [r4, #340]	@ 0x154
          nextSibling(0),
90005f8c:	e9c4 6657 	strd	r6, r6, [r4, #348]	@ 0x15c
          cachedAbsX(0),
90005f90:	e9c4 6659 	strd	r6, r6, [r4, #356]	@ 0x164
        Image::setBitmap(bmp);
90005f94:	f00f fd6b 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005f98:	9803      	ldr	r0, [sp, #12]
90005f9a:	f00e fcff 	bl	9001499c <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainter()
90005f9e:	4a1a      	ldr	r2, [pc, #104]	@ (90006008 <_ZN15Screen2ViewBaseC1Ev+0x1e4>)
90005fa0:	682b      	ldr	r3, [r5, #0]
90005fa2:	f504 71de 	add.w	r1, r4, #444	@ 0x1bc
90005fa6:	f8c4 21bc 	str.w	r2, [r4, #444]	@ 0x1bc
90005faa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
90005fae:	f8a4 61c0 	strh.w	r6, [r4, #448]	@ 0x1c0
90005fb2:	9105      	str	r1, [sp, #20]
90005fb4:	2a00      	cmp	r2, #0
90005fb6:	d033      	beq.n	90006020 <_ZN15Screen2ViewBaseC1Ev+0x1fc>
90005fb8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90005fba:	2800      	cmp	r0, #0
90005fbc:	f000 818e 	beq.w	900062dc <_ZN15Screen2ViewBaseC1Ev+0x4b8>
        bool compat = HAL::lcd().framebufferFormat() == format;
90005fc0:	6803      	ldr	r3, [r0, #0]
90005fc2:	f8df a058 	ldr.w	sl, [pc, #88]	@ 9000601c <_ZN15Screen2ViewBaseC1Ev+0x1f8>
90005fc6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90005fc8:	4552      	cmp	r2, sl
90005fca:	d037      	beq.n	9000603c <_ZN15Screen2ViewBaseC1Ev+0x218>
90005fcc:	4790      	blx	r2
        return auxiliaryLCD;
90005fce:	682b      	ldr	r3, [r5, #0]
90005fd0:	fab0 f580 	clz	r5, r0
90005fd4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90005fd6:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90005fd8:	b140      	cbz	r0, 90005fec <_ZN15Screen2ViewBaseC1Ev+0x1c8>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90005fda:	6803      	ldr	r3, [r0, #0]
90005fdc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005fde:	4553      	cmp	r3, sl
90005fe0:	d02c      	beq.n	9000603c <_ZN15Screen2ViewBaseC1Ev+0x218>
90005fe2:	4798      	blx	r3
90005fe4:	2800      	cmp	r0, #0
90005fe6:	bf08      	it	eq
90005fe8:	f045 0501 	orreq.w	r5, r5, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90005fec:	bb35      	cbnz	r5, 9000603c <_ZN15Screen2ViewBaseC1Ev+0x218>
90005fee:	4b07      	ldr	r3, [pc, #28]	@ (9000600c <_ZN15Screen2ViewBaseC1Ev+0x1e8>)
90005ff0:	212c      	movs	r1, #44	@ 0x2c
90005ff2:	4a07      	ldr	r2, [pc, #28]	@ (90006010 <_ZN15Screen2ViewBaseC1Ev+0x1ec>)
90005ff4:	4807      	ldr	r0, [pc, #28]	@ (90006014 <_ZN15Screen2ViewBaseC1Ev+0x1f0>)
90005ff6:	f024 fb83 	bl	9002a700 <__assert_func>
90005ffa:	bf00      	nop
90005ffc:	9002e5e8 	.word	0x9002e5e8
90006000:	9002dc28 	.word	0x9002dc28
90006004:	2402340c 	.word	0x2402340c
90006008:	9002d044 	.word	0x9002d044
9000600c:	9002cf3c 	.word	0x9002cf3c
90006010:	9002cf9c 	.word	0x9002cf9c
90006014:	9002cfd8 	.word	0x9002cfd8
90006018:	9002e650 	.word	0x9002e650
9000601c:	90002df9 	.word	0x90002df9
        return instance->lcdRef;
90006020:	6898      	ldr	r0, [r3, #8]
90006022:	f8df a350 	ldr.w	sl, [pc, #848]	@ 90006374 <_ZN15Screen2ViewBaseC1Ev+0x550>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006026:	6802      	ldr	r2, [r0, #0]
90006028:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000602a:	4552      	cmp	r2, sl
9000602c:	d1ce      	bne.n	90005fcc <_ZN15Screen2ViewBaseC1Ev+0x1a8>
        return auxiliaryLCD;
9000602e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006030:	b120      	cbz	r0, 9000603c <_ZN15Screen2ViewBaseC1Ev+0x218>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006032:	6803      	ldr	r3, [r0, #0]
90006034:	2501      	movs	r5, #1
90006036:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006038:	4553      	cmp	r3, sl
9000603a:	d1d2      	bne.n	90005fe2 <_ZN15Screen2ViewBaseC1Ev+0x1be>
9000603c:	4bbd      	ldr	r3, [pc, #756]	@ (90006334 <_ZN15Screen2ViewBaseC1Ev+0x510>)
9000603e:	2600      	movs	r6, #0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006040:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
        : TextAreaWithWildcardBase(), wc1(0)
90006044:	4abc      	ldr	r2, [pc, #752]	@ (90006338 <_ZN15Screen2ViewBaseC1Ev+0x514>)
90006046:	f8c4 31bc 	str.w	r3, [r4, #444]	@ 0x1bc
9000604a:	3324      	adds	r3, #36	@ 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000604c:	21ff      	movs	r1, #255	@ 0xff
        : typedTextId(id)
9000604e:	f64f 7aff 	movw	sl, #65535	@ 0xffff
90006052:	f8c4 31c4 	str.w	r3, [r4, #452]	@ 0x1c4
          touchable(false),
90006056:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000605a:	f8c4 21d0 	str.w	r2, [r4, #464]	@ 0x1d0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
9000605e:	f504 701d 	add.w	r0, r4, #628	@ 0x274
90006062:	f8a4 31f4 	strh.w	r3, [r4, #500]	@ 0x1f4
90006066:	f104 0904 	add.w	r9, r4, #4
9000606a:	f8a4 3240 	strh.w	r3, [r4, #576]	@ 0x240
9000606e:	4bb3      	ldr	r3, [pc, #716]	@ (9000633c <_ZN15Screen2ViewBaseC1Ev+0x518>)
90006070:	f8c4 1206 	str.w	r1, [r4, #518]	@ 0x206
90006074:	f8c4 31f8 	str.w	r3, [r4, #504]	@ 0x1f8
90006078:	f8c4 3244 	str.w	r3, [r4, #580]	@ 0x244
9000607c:	f8c4 61c8 	str.w	r6, [r4, #456]	@ 0x1c8
        : color(col)
90006080:	f8c4 6200 	str.w	r6, [r4, #512]	@ 0x200
90006084:	f8a4 6204 	strh.w	r6, [r4, #516]	@ 0x204
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006088:	f8c4 620c 	str.w	r6, [r4, #524]	@ 0x20c
9000608c:	f8c4 b210 	str.w	fp, [r4, #528]	@ 0x210
90006090:	f8a4 a1fc 	strh.w	sl, [r4, #508]	@ 0x1fc
        : x(0), y(0), width(0), height(0)
90006094:	e9c4 6675 	strd	r6, r6, [r4, #468]	@ 0x1d4
90006098:	e9c4 6677 	strd	r6, r6, [r4, #476]	@ 0x1dc
          nextSibling(0),
9000609c:	e9c4 6679 	strd	r6, r6, [r4, #484]	@ 0x1e4
          cachedAbsX(0),
900060a0:	e9c4 667b 	strd	r6, r6, [r4, #492]	@ 0x1ec
900060a4:	e9c4 6685 	strd	r6, r6, [r4, #532]	@ 0x214
900060a8:	e9c4 6688 	strd	r6, r6, [r4, #544]	@ 0x220
900060ac:	e9c4 668a 	strd	r6, r6, [r4, #552]	@ 0x228
          nextSibling(0),
900060b0:	e9c4 668c 	strd	r6, r6, [r4, #560]	@ 0x230
          cachedAbsX(0),
900060b4:	e9c4 668e 	strd	r6, r6, [r4, #568]	@ 0x238
900060b8:	f8a4 b248 	strh.w	fp, [r4, #584]	@ 0x248
900060bc:	f8c4 1252 	str.w	r1, [r4, #594]	@ 0x252
900060c0:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
900060c4:	f8c4 221c 	str.w	r2, [r4, #540]	@ 0x21c
        : color(col)
900060c8:	f8c4 624c 	str.w	r6, [r4, #588]	@ 0x24c
900060cc:	f8a4 6250 	strh.w	r6, [r4, #592]	@ 0x250
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900060d0:	e9c4 6b96 	strd	r6, fp, [r4, #600]	@ 0x258
900060d4:	e9c4 6698 	strd	r6, r6, [r4, #608]	@ 0x260
900060d8:	f010 fcb6 	bl	90016a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
900060dc:	4a98      	ldr	r2, [pc, #608]	@ (90006340 <_ZN15Screen2ViewBaseC1Ev+0x51c>)
900060de:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900060e2:	4648      	mov	r0, r9
900060e4:	64a2      	str	r2, [r4, #72]	@ 0x48
        color = newColor;
900060e6:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
900060ea:	6466      	str	r6, [r4, #68]	@ 0x44
900060ec:	66a2      	str	r2, [r4, #104]	@ 0x68
900060ee:	f00b fef1 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
900060f2:	9d04      	ldr	r5, [sp, #16]
900060f4:	2203      	movs	r2, #3
900060f6:	a90a      	add	r1, sp, #40	@ 0x28
900060f8:	4628      	mov	r0, r5
900060fa:	6726      	str	r6, [r4, #112]	@ 0x70
900060fc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90006100:	f00f fcb5 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006104:	4629      	mov	r1, r5
90006106:	4648      	mov	r0, r9
90006108:	f00b fee4 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000610c:	4a8d      	ldr	r2, [pc, #564]	@ (90006344 <_ZN15Screen2ViewBaseC1Ev+0x520>)
9000610e:	2504      	movs	r5, #4
    leftBrick.setBitmap(touchgfx::Bitmap(BITMAP_BRICK_ID));
90006110:	4638      	mov	r0, r7
90006112:	f8c4 209c 	str.w	r2, [r4, #156]	@ 0x9c
90006116:	a90a      	add	r1, sp, #40	@ 0x28
90006118:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
9000611c:	f00f fca7 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006120:	4639      	mov	r1, r7
90006122:	4648      	mov	r0, r9
90006124:	f00b fed6 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006128:	4a87      	ldr	r2, [pc, #540]	@ (90006348 <_ZN15Screen2ViewBaseC1Ev+0x524>)
    rightBrick.setBitmap(touchgfx::Bitmap(BITMAP_BRICK_ID));
9000612a:	a90a      	add	r1, sp, #40	@ 0x28
9000612c:	4640      	mov	r0, r8
9000612e:	f8c4 20c8 	str.w	r2, [r4, #200]	@ 0xc8
90006132:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
90006136:	f00f fc9a 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000613a:	4641      	mov	r1, r8
9000613c:	4648      	mov	r0, r9
9000613e:	f00b fec9 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006142:	22eb      	movs	r2, #235	@ 0xeb
    image2.setBitmap(touchgfx::Bitmap(BITMAP_MIDDLELINE_ID));
90006144:	9d00      	ldr	r5, [sp, #0]
90006146:	a90a      	add	r1, sp, #40	@ 0x28
90006148:	f8c4 20f4 	str.w	r2, [r4, #244]	@ 0xf4
9000614c:	2207      	movs	r2, #7
9000614e:	4628      	mov	r0, r5
90006150:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90006154:	f00f fc8b 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006158:	4629      	mov	r1, r5
9000615a:	4648      	mov	r0, r9
9000615c:	f00b feba 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_WALL_ID));
90006160:	9f01      	ldr	r7, [sp, #4]
90006162:	2508      	movs	r5, #8
90006164:	a90a      	add	r1, sp, #40	@ 0x28
90006166:	4638      	mov	r0, r7
90006168:	f8c4 6120 	str.w	r6, [r4, #288]	@ 0x120
9000616c:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
90006170:	f00f fc7d 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006174:	4639      	mov	r1, r7
90006176:	4648      	mov	r0, r9
90006178:	f00b feac 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000617c:	f04f 7283 	mov.w	r2, #17170432	@ 0x1060000
90006180:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_WALL_ID));
90006184:	a90a      	add	r1, sp, #40	@ 0x28
90006186:	9d02      	ldr	r5, [sp, #8]
90006188:	f8c4 214c 	str.w	r2, [r4, #332]	@ 0x14c
9000618c:	4628      	mov	r0, r5
9000618e:	f00f fc6e 	bl	90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006192:	4629      	mov	r1, r5
90006194:	4648      	mov	r0, r9
    leftScore.setXY(182, 10);
90006196:	f504 75e8 	add.w	r5, r4, #464	@ 0x1d0
9000619a:	f00b fe9b 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        canvasPainter = &painter;
9000619e:	9b05      	ldr	r3, [sp, #20]
900061a0:	4a6a      	ldr	r2, [pc, #424]	@ (9000634c <_ZN15Screen2ViewBaseC1Ev+0x528>)
900061a2:	4648      	mov	r0, r9
900061a4:	f8c4 319c 	str.w	r3, [r4, #412]	@ 0x19c
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
900061a8:	f44f 73a0 	mov.w	r3, #320	@ 0x140
900061ac:	9903      	ldr	r1, [sp, #12]
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
900061ae:	f8c4 31a8 	str.w	r3, [r4, #424]	@ 0x1a8
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
900061b2:	f8a4 a1cc 	strh.w	sl, [r4, #460]	@ 0x1cc
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
900061b6:	f8c4 61b4 	str.w	r6, [r4, #436]	@ 0x1b4
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
900061ba:	f8c4 61ac 	str.w	r6, [r4, #428]	@ 0x1ac
900061be:	f8c4 b1c8 	str.w	fp, [r4, #456]	@ 0x1c8
        this->circleCenterY = CWRUtil::toQ5(y);
900061c2:	e9c4 3368 	strd	r3, r3, [r4, #416]	@ 0x1a0
900061c6:	f04f 1314 	mov.w	r3, #1310740	@ 0x140014
900061ca:	e9c4 235e 	strd	r2, r3, [r4, #376]	@ 0x178
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
900061ce:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
900061d2:	f8c4 31b0 	str.w	r3, [r4, #432]	@ 0x1b0
900061d6:	f00b fe7d 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900061da:	4a5d      	ldr	r2, [pc, #372]	@ (90006350 <_ZN15Screen2ViewBaseC1Ev+0x52c>)
        setX(x);
900061dc:	f8d4 31d0 	ldr.w	r3, [r4, #464]	@ 0x1d0
        color = newColor;
900061e0:	f8c4 b200 	str.w	fp, [r4, #512]	@ 0x200
        boundingArea = calculateBoundingArea();
900061e4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rect.x = x;
900061e8:	f8c4 21d4 	str.w	r2, [r4, #468]	@ 0x1d4
900061ec:	4a59      	ldr	r2, [pc, #356]	@ (90006354 <_ZN15Screen2ViewBaseC1Ev+0x530>)
        linespace = space;
900061ee:	f8a4 6204 	strh.w	r6, [r4, #516]	@ 0x204
900061f2:	4293      	cmp	r3, r2
900061f4:	d17b      	bne.n	900062ee <_ZN15Screen2ViewBaseC1Ev+0x4ca>
        boundingArea = calculateBoundingArea();
900061f6:	f8c4 6214 	str.w	r6, [r4, #532]	@ 0x214
900061fa:	e9c4 6b83 	strd	r6, fp, [r4, #524]	@ 0x20c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900061fe:	f8df 8178 	ldr.w	r8, [pc, #376]	@ 90006378 <_ZN15Screen2ViewBaseC1Ev+0x554>
    Unicode::snprintf(leftScoreBuffer, 3, "%s", touchgfx::TypedText(T___SINGLEUSE_6YLQ).getText());
90006202:	f204 2a6e 	addw	sl, r4, #622	@ 0x26e
90006206:	f8d8 3000 	ldr.w	r3, [r8]
9000620a:	2b00      	cmp	r3, #0
9000620c:	f000 8085 	beq.w	9000631a <_ZN15Screen2ViewBaseC1Ev+0x4f6>
        return typedTextId < numberOfTypedTexts;
90006210:	4f51      	ldr	r7, [pc, #324]	@ (90006358 <_ZN15Screen2ViewBaseC1Ev+0x534>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006212:	883b      	ldrh	r3, [r7, #0]
90006214:	2b02      	cmp	r3, #2
90006216:	f240 8086 	bls.w	90006326 <_ZN15Screen2ViewBaseC1Ev+0x502>
        return texts->getText(typedTextId);
9000621a:	f8df b160 	ldr.w	fp, [pc, #352]	@ 9000637c <_ZN15Screen2ViewBaseC1Ev+0x558>
9000621e:	2102      	movs	r1, #2
    rightScore.setXY(245, 10);
90006220:	f504 7607 	add.w	r6, r4, #540	@ 0x21c
90006224:	f8db 0000 	ldr.w	r0, [fp]
90006228:	f000 fa34 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(leftScoreBuffer, 3, "%s", touchgfx::TypedText(T___SINGLEUSE_6YLQ).getText());
9000622c:	4a4b      	ldr	r2, [pc, #300]	@ (9000635c <_ZN15Screen2ViewBaseC1Ev+0x538>)
9000622e:	4603      	mov	r3, r0
90006230:	2103      	movs	r1, #3
90006232:	4650      	mov	r0, sl
90006234:	f015 fc7a 	bl	9001bb2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    leftScore.resizeToCurrentText();
90006238:	4628      	mov	r0, r5
        wc1 = value;
9000623a:	f8c4 a218 	str.w	sl, [r4, #536]	@ 0x218
9000623e:	f00f fa67 	bl	90015710 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90006242:	4b3e      	ldr	r3, [pc, #248]	@ (9000633c <_ZN15Screen2ViewBaseC1Ev+0x518>)
    leftScore.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q02E));
90006244:	a90a      	add	r1, sp, #40	@ 0x28
90006246:	4628      	mov	r0, r5
90006248:	930a      	str	r3, [sp, #40]	@ 0x28
9000624a:	2303      	movs	r3, #3
9000624c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90006250:	f00f fa7e 	bl	90015750 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90006254:	4629      	mov	r1, r5
90006256:	4648      	mov	r0, r9
90006258:	f00b fe3c 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
9000625c:	f8d4 321c 	ldr.w	r3, [r4, #540]	@ 0x21c
        setY(y);
90006260:	483c      	ldr	r0, [pc, #240]	@ (90006354 <_ZN15Screen2ViewBaseC1Ev+0x530>)
        color = newColor;
90006262:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
        boundingArea = calculateBoundingArea();
90006266:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        rect.x = x;
9000626a:	4b3d      	ldr	r3, [pc, #244]	@ (90006360 <_ZN15Screen2ViewBaseC1Ev+0x53c>)
9000626c:	4282      	cmp	r2, r0
        color = newColor;
9000626e:	f8c4 124c 	str.w	r1, [r4, #588]	@ 0x24c
90006272:	f8c4 3220 	str.w	r3, [r4, #544]	@ 0x220
        linespace = space;
90006276:	f04f 0300 	mov.w	r3, #0
9000627a:	f8a4 3250 	strh.w	r3, [r4, #592]	@ 0x250
        boundingArea = calculateBoundingArea();
9000627e:	d141      	bne.n	90006304 <_ZN15Screen2ViewBaseC1Ev+0x4e0>
90006280:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
90006284:	e9c4 3196 	strd	r3, r1, [r4, #600]	@ 0x258
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006288:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(rughtScoreBuffer, 3, "%s", touchgfx::TypedText(T___SINGLEUSE_LLCC).getText());
9000628c:	f504 751a 	add.w	r5, r4, #616	@ 0x268
90006290:	2b00      	cmp	r3, #0
90006292:	d042      	beq.n	9000631a <_ZN15Screen2ViewBaseC1Ev+0x4f6>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006294:	883b      	ldrh	r3, [r7, #0]
90006296:	2b00      	cmp	r3, #0
90006298:	d045      	beq.n	90006326 <_ZN15Screen2ViewBaseC1Ev+0x502>
        return texts->getText(typedTextId);
9000629a:	f8db 0000 	ldr.w	r0, [fp]
9000629e:	2100      	movs	r1, #0
900062a0:	f000 f9f8 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
900062a4:	4a2d      	ldr	r2, [pc, #180]	@ (9000635c <_ZN15Screen2ViewBaseC1Ev+0x538>)
900062a6:	4603      	mov	r3, r0
900062a8:	2103      	movs	r1, #3
900062aa:	4628      	mov	r0, r5
900062ac:	f015 fc3e 	bl	9001bb2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    rightScore.resizeToCurrentText();
900062b0:	4630      	mov	r0, r6
900062b2:	f8c4 5264 	str.w	r5, [r4, #612]	@ 0x264
900062b6:	f00f fa2b 	bl	90015710 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
900062ba:	4b20      	ldr	r3, [pc, #128]	@ (9000633c <_ZN15Screen2ViewBaseC1Ev+0x518>)
    rightScore.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R97G));
900062bc:	a90a      	add	r1, sp, #40	@ 0x28
900062be:	4630      	mov	r0, r6
900062c0:	930a      	str	r3, [sp, #40]	@ 0x28
900062c2:	2301      	movs	r3, #1
900062c4:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
900062c8:	f00f fa42 	bl	90015750 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900062cc:	4648      	mov	r0, r9
900062ce:	4631      	mov	r1, r6
900062d0:	f00b fe00 	bl	90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900062d4:	4620      	mov	r0, r4
900062d6:	b00d      	add	sp, #52	@ 0x34
900062d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
900062dc:	6898      	ldr	r0, [r3, #8]
900062de:	f8df a094 	ldr.w	sl, [pc, #148]	@ 90006374 <_ZN15Screen2ViewBaseC1Ev+0x550>
900062e2:	6803      	ldr	r3, [r0, #0]
900062e4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900062e6:	4552      	cmp	r2, sl
900062e8:	f43f aea8 	beq.w	9000603c <_ZN15Screen2ViewBaseC1Ev+0x218>
900062ec:	e66e      	b.n	90005fcc <_ZN15Screen2ViewBaseC1Ev+0x1a8>
900062ee:	ae06      	add	r6, sp, #24
900062f0:	4629      	mov	r1, r5
900062f2:	4630      	mov	r0, r6
900062f4:	4798      	blx	r3
900062f6:	f504 7303 	add.w	r3, r4, #524	@ 0x20c
900062fa:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900062fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90006302:	e77c      	b.n	900061fe <_ZN15Screen2ViewBaseC1Ev+0x3da>
90006304:	ad06      	add	r5, sp, #24
90006306:	4631      	mov	r1, r6
90006308:	4628      	mov	r0, r5
9000630a:	4790      	blx	r2
9000630c:	f504 7316 	add.w	r3, r4, #600	@ 0x258
90006310:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90006314:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90006318:	e7b6      	b.n	90006288 <_ZN15Screen2ViewBaseC1Ev+0x464>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000631a:	4b12      	ldr	r3, [pc, #72]	@ (90006364 <_ZN15Screen2ViewBaseC1Ev+0x540>)
9000631c:	2160      	movs	r1, #96	@ 0x60
9000631e:	4a12      	ldr	r2, [pc, #72]	@ (90006368 <_ZN15Screen2ViewBaseC1Ev+0x544>)
90006320:	4812      	ldr	r0, [pc, #72]	@ (9000636c <_ZN15Screen2ViewBaseC1Ev+0x548>)
90006322:	f024 f9ed 	bl	9002a700 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006326:	4b12      	ldr	r3, [pc, #72]	@ (90006370 <_ZN15Screen2ViewBaseC1Ev+0x54c>)
90006328:	2161      	movs	r1, #97	@ 0x61
9000632a:	4a0f      	ldr	r2, [pc, #60]	@ (90006368 <_ZN15Screen2ViewBaseC1Ev+0x544>)
9000632c:	480f      	ldr	r0, [pc, #60]	@ (9000636c <_ZN15Screen2ViewBaseC1Ev+0x548>)
9000632e:	f024 f9e7 	bl	9002a700 <__assert_func>
90006332:	bf00      	nop
90006334:	9002e338 	.word	0x9002e338
90006338:	9002db98 	.word	0x9002db98
9000633c:	9002d3d8 	.word	0x9002d3d8
90006340:	011001e0 	.word	0x011001e0
90006344:	006a000a 	.word	0x006a000a
90006348:	006a01cc 	.word	0x006a01cc
9000634c:	007400dc 	.word	0x007400dc
90006350:	000a00b6 	.word	0x000a00b6
90006354:	90005c71 	.word	0x90005c71
90006358:	24023468 	.word	0x24023468
9000635c:	9002db8c 	.word	0x9002db8c
90006360:	000a00f5 	.word	0x000a00f5
90006364:	9002d9e4 	.word	0x9002d9e4
90006368:	9002db40 	.word	0x9002db40
9000636c:	9002da64 	.word	0x9002da64
90006370:	9002db00 	.word	0x9002db00
90006374:	90002df9 	.word	0x90002df9
90006378:	24023464 	.word	0x24023464
9000637c:	24023470 	.word	0x24023470

90006380 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006380:	4770      	bx	lr
90006382:	bf00      	nop

90006384 <_Z23getFont_verdana_10_4bppv>:
{
90006384:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006386:	4d19      	ldr	r5, [pc, #100]	@ (900063ec <_Z23getFont_verdana_10_4bppv+0x68>)
{
90006388:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000638a:	682c      	ldr	r4, [r5, #0]
9000638c:	f3bf 8f5b 	dmb	ish
90006390:	f014 0401 	ands.w	r4, r4, #1
90006394:	d002      	beq.n	9000639c <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90006396:	4816      	ldr	r0, [pc, #88]	@ (900063f0 <_Z23getFont_verdana_10_4bppv+0x6c>)
90006398:	b00f      	add	sp, #60	@ 0x3c
9000639a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000639c:	4628      	mov	r0, r5
9000639e:	f023 fe37 	bl	9002a010 <__cxa_guard_acquire>
900063a2:	2800      	cmp	r0, #0
900063a4:	d0f7      	beq.n	90006396 <_Z23getFont_verdana_10_4bppv+0x12>
900063a6:	213f      	movs	r1, #63	@ 0x3f
900063a8:	4a12      	ldr	r2, [pc, #72]	@ (900063f4 <_Z23getFont_verdana_10_4bppv+0x70>)
900063aa:	2301      	movs	r3, #1
900063ac:	200a      	movs	r0, #10
900063ae:	9208      	str	r2, [sp, #32]
900063b0:	2204      	movs	r2, #4
900063b2:	9304      	str	r3, [sp, #16]
900063b4:	9000      	str	r0, [sp, #0]
900063b6:	9401      	str	r4, [sp, #4]
900063b8:	480d      	ldr	r0, [pc, #52]	@ (900063f0 <_Z23getFont_verdana_10_4bppv+0x6c>)
900063ba:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900063be:	490e      	ldr	r1, [pc, #56]	@ (900063f8 <_Z23getFont_verdana_10_4bppv+0x74>)
900063c0:	e9cd 3305 	strd	r3, r3, [sp, #20]
900063c4:	9107      	str	r1, [sp, #28]
900063c6:	230c      	movs	r3, #12
900063c8:	490c      	ldr	r1, [pc, #48]	@ (900063fc <_Z23getFont_verdana_10_4bppv+0x78>)
900063ca:	e9cd 4202 	strd	r4, r2, [sp, #8]
900063ce:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900063d2:	225f      	movs	r2, #95	@ 0x5f
900063d4:	f7ff fa00 	bl	900057d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900063d8:	4809      	ldr	r0, [pc, #36]	@ (90006400 <_Z23getFont_verdana_10_4bppv+0x7c>)
900063da:	f024 f9af 	bl	9002a73c <atexit>
900063de:	4628      	mov	r0, r5
900063e0:	f023 fe22 	bl	9002a028 <__cxa_guard_release>
}
900063e4:	4802      	ldr	r0, [pc, #8]	@ (900063f0 <_Z23getFont_verdana_10_4bppv+0x6c>)
900063e6:	b00f      	add	sp, #60	@ 0x3c
900063e8:	bd30      	pop	{r4, r5, pc}
900063ea:	bf00      	nop
900063ec:	24009354 	.word	0x24009354
900063f0:	24009358 	.word	0x24009358
900063f4:	9002edc4 	.word	0x9002edc4
900063f8:	9002f280 	.word	0x9002f280
900063fc:	90208df0 	.word	0x90208df0
90006400:	90006381 	.word	0x90006381

90006404 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006404:	4770      	bx	lr
90006406:	bf00      	nop

90006408 <_Z23getFont_verdana_20_4bppv>:
{
90006408:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000640a:	4d19      	ldr	r5, [pc, #100]	@ (90006470 <_Z23getFont_verdana_20_4bppv+0x68>)
{
9000640c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000640e:	682c      	ldr	r4, [r5, #0]
90006410:	f3bf 8f5b 	dmb	ish
90006414:	f014 0401 	ands.w	r4, r4, #1
90006418:	d002      	beq.n	90006420 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
9000641a:	4816      	ldr	r0, [pc, #88]	@ (90006474 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000641c:	b00f      	add	sp, #60	@ 0x3c
9000641e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006420:	4628      	mov	r0, r5
90006422:	f023 fdf5 	bl	9002a010 <__cxa_guard_acquire>
90006426:	2800      	cmp	r0, #0
90006428:	d0f7      	beq.n	9000641a <_Z23getFont_verdana_20_4bppv+0x12>
9000642a:	213f      	movs	r1, #63	@ 0x3f
9000642c:	4a12      	ldr	r2, [pc, #72]	@ (90006478 <_Z23getFont_verdana_20_4bppv+0x70>)
9000642e:	2301      	movs	r3, #1
90006430:	2014      	movs	r0, #20
90006432:	9208      	str	r2, [sp, #32]
90006434:	2204      	movs	r2, #4
90006436:	9304      	str	r3, [sp, #16]
90006438:	9000      	str	r0, [sp, #0]
9000643a:	9401      	str	r4, [sp, #4]
9000643c:	480d      	ldr	r0, [pc, #52]	@ (90006474 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000643e:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90006442:	490e      	ldr	r1, [pc, #56]	@ (9000647c <_Z23getFont_verdana_20_4bppv+0x74>)
90006444:	e9cd 3305 	strd	r3, r3, [sp, #20]
90006448:	9107      	str	r1, [sp, #28]
9000644a:	2318      	movs	r3, #24
9000644c:	490c      	ldr	r1, [pc, #48]	@ (90006480 <_Z23getFont_verdana_20_4bppv+0x78>)
9000644e:	e9cd 4202 	strd	r4, r2, [sp, #8]
90006452:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90006456:	225f      	movs	r2, #95	@ 0x5f
90006458:	f7ff f9be 	bl	900057d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000645c:	4809      	ldr	r0, [pc, #36]	@ (90006484 <_Z23getFont_verdana_20_4bppv+0x7c>)
9000645e:	f024 f96d 	bl	9002a73c <atexit>
90006462:	4628      	mov	r0, r5
90006464:	f023 fde0 	bl	9002a028 <__cxa_guard_release>
}
90006468:	4802      	ldr	r0, [pc, #8]	@ (90006474 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000646a:	b00f      	add	sp, #60	@ 0x3c
9000646c:	bd30      	pop	{r4, r5, pc}
9000646e:	bf00      	nop
90006470:	24009384 	.word	0x24009384
90006474:	24009388 	.word	0x24009388
90006478:	9002edf8 	.word	0x9002edf8
9000647c:	9002f284 	.word	0x9002f284
90006480:	90209324 	.word	0x90209324
90006484:	90006405 	.word	0x90006405

90006488 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90006488:	4770      	bx	lr
9000648a:	bf00      	nop

9000648c <_Z23getFont_verdana_40_4bppv>:
{
9000648c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000648e:	4d19      	ldr	r5, [pc, #100]	@ (900064f4 <_Z23getFont_verdana_40_4bppv+0x68>)
{
90006490:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90006492:	682c      	ldr	r4, [r5, #0]
90006494:	f3bf 8f5b 	dmb	ish
90006498:	f014 0401 	ands.w	r4, r4, #1
9000649c:	d002      	beq.n	900064a4 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
9000649e:	4816      	ldr	r0, [pc, #88]	@ (900064f8 <_Z23getFont_verdana_40_4bppv+0x6c>)
900064a0:	b00f      	add	sp, #60	@ 0x3c
900064a2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900064a4:	4628      	mov	r0, r5
900064a6:	f023 fdb3 	bl	9002a010 <__cxa_guard_acquire>
900064aa:	2800      	cmp	r0, #0
900064ac:	d0f7      	beq.n	9000649e <_Z23getFont_verdana_40_4bppv+0x12>
900064ae:	4a13      	ldr	r2, [pc, #76]	@ (900064fc <_Z23getFont_verdana_40_4bppv+0x70>)
900064b0:	213f      	movs	r1, #63	@ 0x3f
900064b2:	2302      	movs	r3, #2
900064b4:	2028      	movs	r0, #40	@ 0x28
900064b6:	9208      	str	r2, [sp, #32]
900064b8:	2201      	movs	r2, #1
900064ba:	9000      	str	r0, [sp, #0]
900064bc:	9204      	str	r2, [sp, #16]
900064be:	2204      	movs	r2, #4
900064c0:	9401      	str	r4, [sp, #4]
900064c2:	480d      	ldr	r0, [pc, #52]	@ (900064f8 <_Z23getFont_verdana_40_4bppv+0x6c>)
900064c4:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900064c8:	490d      	ldr	r1, [pc, #52]	@ (90006500 <_Z23getFont_verdana_40_4bppv+0x74>)
900064ca:	e9cd 3305 	strd	r3, r3, [sp, #20]
900064ce:	9107      	str	r1, [sp, #28]
900064d0:	2330      	movs	r3, #48	@ 0x30
900064d2:	490c      	ldr	r1, [pc, #48]	@ (90006504 <_Z23getFont_verdana_40_4bppv+0x78>)
900064d4:	e9cd 4202 	strd	r4, r2, [sp, #8]
900064d8:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900064dc:	225f      	movs	r2, #95	@ 0x5f
900064de:	f7ff f97b 	bl	900057d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900064e2:	4809      	ldr	r0, [pc, #36]	@ (90006508 <_Z23getFont_verdana_40_4bppv+0x7c>)
900064e4:	f024 f92a 	bl	9002a73c <atexit>
900064e8:	4628      	mov	r0, r5
900064ea:	f023 fd9d 	bl	9002a028 <__cxa_guard_release>
}
900064ee:	4802      	ldr	r0, [pc, #8]	@ (900064f8 <_Z23getFont_verdana_40_4bppv+0x6c>)
900064f0:	b00f      	add	sp, #60	@ 0x3c
900064f2:	bd30      	pop	{r4, r5, pc}
900064f4:	240093b4 	.word	0x240093b4
900064f8:	240093b8 	.word	0x240093b8
900064fc:	9002ef9c 	.word	0x9002ef9c
90006500:	9002f288 	.word	0x9002f288
90006504:	90209858 	.word	0x90209858
90006508:	90006489 	.word	0x90006489

9000650c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
9000650c:	2000      	movs	r0, #0
9000650e:	4770      	bx	lr

90006510 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90006510:	2000      	movs	r0, #0
90006512:	4770      	bx	lr

90006514 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90006514:	b40e      	push	{r1, r2, r3}
90006516:	b500      	push	{lr}
90006518:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000651a:	2100      	movs	r1, #0
{
9000651c:	ab03      	add	r3, sp, #12
9000651e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90006522:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90006524:	f012 fee2 	bl	900192ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90006528:	b002      	add	sp, #8
9000652a:	f85d eb04 	ldr.w	lr, [sp], #4
9000652e:	b003      	add	sp, #12
90006530:	4770      	bx	lr
90006532:	bf00      	nop

90006534 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90006534:	b40c      	push	{r2, r3}
90006536:	b500      	push	{lr}
90006538:	b083      	sub	sp, #12
9000653a:	ab04      	add	r3, sp, #16
9000653c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90006540:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90006542:	f012 fed3 	bl	900192ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90006546:	b003      	add	sp, #12
90006548:	f85d eb04 	ldr.w	lr, [sp], #4
9000654c:	b002      	add	sp, #8
9000654e:	4770      	bx	lr

90006550 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90006550:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90006552:	b510      	push	{r4, lr}
90006554:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90006556:	b133      	cbz	r3, 90006566 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90006558:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
9000655a:	b39b      	cbz	r3, 900065c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
9000655c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9000655e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90006562:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90006564:	b923      	cbnz	r3, 90006570 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90006566:	4620      	mov	r0, r4
}
90006568:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
9000656c:	f014 bc38 	b.w	9001ade0 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90006570:	f014 fd34 	bl	9001afdc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90006574:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90006576:	2b01      	cmp	r3, #1
90006578:	d92a      	bls.n	900065d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000657a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9000657c:	1c53      	adds	r3, r2, #1
9000657e:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90006580:	2b09      	cmp	r3, #9
90006582:	d812      	bhi.n	900065aa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90006584:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90006588:	f640 103f 	movw	r0, #2367	@ 0x93f
9000658c:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
9000658e:	4281      	cmp	r1, r0
90006590:	d1e9      	bne.n	90006566 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90006592:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006596:	0052      	lsls	r2, r2, #1
90006598:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000659a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
9000659e:	4422      	add	r2, r4
900065a0:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
900065a4:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
900065a6:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
900065a8:	e7dd      	b.n	90006566 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
900065aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900065ae:	f640 113f 	movw	r1, #2367	@ 0x93f
900065b2:	89db      	ldrh	r3, [r3, #14]
900065b4:	428b      	cmp	r3, r1
900065b6:	d1d6      	bne.n	90006566 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900065b8:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900065bc:	2300      	movs	r3, #0
900065be:	0052      	lsls	r2, r2, #1
900065c0:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
900065c2:	e7ea      	b.n	9000659a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
900065c4:	4b05      	ldr	r3, [pc, #20]	@ (900065dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
900065c6:	21c5      	movs	r1, #197	@ 0xc5
900065c8:	4a05      	ldr	r2, [pc, #20]	@ (900065e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900065ca:	4806      	ldr	r0, [pc, #24]	@ (900065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900065cc:	f024 f898 	bl	9002a700 <__assert_func>
            assert(offset < used);
900065d0:	4b05      	ldr	r3, [pc, #20]	@ (900065e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900065d2:	21cb      	movs	r1, #203	@ 0xcb
900065d4:	4a05      	ldr	r2, [pc, #20]	@ (900065ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900065d6:	4803      	ldr	r0, [pc, #12]	@ (900065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900065d8:	f024 f892 	bl	9002a700 <__assert_func>
900065dc:	9002dc54 	.word	0x9002dc54
900065e0:	9002dc60 	.word	0x9002dc60
900065e4:	9002dd0c 	.word	0x9002dd0c
900065e8:	9002dd58 	.word	0x9002dd58
900065ec:	9002dd68 	.word	0x9002dd68

900065f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900065f0:	f014 bbbf 	b.w	9001ad72 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900065f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900065f4:	b510      	push	{r4, lr}
900065f6:	b086      	sub	sp, #24
900065f8:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900065fc:	ac0a      	add	r4, sp, #40	@ 0x28
{
900065fe:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90006602:	461a      	mov	r2, r3
90006604:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90006606:	4661      	mov	r1, ip
90006608:	9401      	str	r4, [sp, #4]
9000660a:	9300      	str	r3, [sp, #0]
9000660c:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
9000660e:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90006610:	f011 faba 	bl	90017b88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90006614:	b006      	add	sp, #24
90006616:	bd10      	pop	{r4, pc}

90006618 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90006618:	b9e0      	cbnz	r0, 90006654 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
9000661a:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
9000661c:	4b13      	ldr	r3, [pc, #76]	@ (9000666c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000661e:	681b      	ldr	r3, [r3, #0]
90006620:	b1cb      	cbz	r3, 90006656 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90006622:	4c13      	ldr	r4, [pc, #76]	@ (90006670 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006624:	4813      	ldr	r0, [pc, #76]	@ (90006674 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006626:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000662a:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000662c:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000662e:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90006630:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006632:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90006634:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90006636:	4b10      	ldr	r3, [pc, #64]	@ (90006678 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90006638:	2200      	movs	r2, #0
9000663a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
9000663c:	f000 f83a 	bl	900066b4 <_ZN17TypedTextDatabase8getFontsEv>
90006640:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90006642:	f000 f835 	bl	900066b0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90006646:	4b0d      	ldr	r3, [pc, #52]	@ (9000667c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90006648:	4a0d      	ldr	r2, [pc, #52]	@ (90006680 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
9000664a:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
9000664c:	4b0d      	ldr	r3, [pc, #52]	@ (90006684 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
9000664e:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90006650:	8018      	strh	r0, [r3, #0]
    }
}
90006652:	bd38      	pop	{r3, r4, r5, pc}
90006654:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90006656:	4c0c      	ldr	r4, [pc, #48]	@ (90006688 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90006658:	4905      	ldr	r1, [pc, #20]	@ (90006670 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000665a:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
9000665c:	480b      	ldr	r0, [pc, #44]	@ (9000668c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
9000665e:	4b05      	ldr	r3, [pc, #20]	@ (90006674 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006660:	4a0b      	ldr	r2, [pc, #44]	@ (90006690 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90006662:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90006664:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90006666:	2c00      	cmp	r4, #0
90006668:	d1e5      	bne.n	90006636 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000666a:	bd38      	pop	{r3, r4, r5, pc}
9000666c:	240093f0 	.word	0x240093f0
90006670:	240093e8 	.word	0x240093e8
90006674:	240093e4 	.word	0x240093e4
90006678:	240093ec 	.word	0x240093ec
9000667c:	24023464 	.word	0x24023464
90006680:	2402346c 	.word	0x2402346c
90006684:	24023468 	.word	0x24023468
90006688:	90209dc4 	.word	0x90209dc4
9000668c:	90209da4 	.word	0x90209da4
90006690:	90209d8c 	.word	0x90209d8c

90006694 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90006694:	4a04      	ldr	r2, [pc, #16]	@ (900066a8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90006696:	4b05      	ldr	r3, [pc, #20]	@ (900066ac <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90006698:	6812      	ldr	r2, [r2, #0]
9000669a:	681b      	ldr	r3, [r3, #0]
9000669c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
900066a0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
900066a4:	4770      	bx	lr
900066a6:	bf00      	nop
900066a8:	240093e4 	.word	0x240093e4
900066ac:	240093e8 	.word	0x240093e8

900066b0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
900066b0:	2006      	movs	r0, #6
900066b2:	4770      	bx	lr

900066b4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
900066b4:	4800      	ldr	r0, [pc, #0]	@ (900066b8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
900066b6:	4770      	bx	lr
900066b8:	240093f4 	.word	0x240093f4

900066bc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
900066bc:	b510      	push	{r4, lr}
};
900066be:	4c05      	ldr	r4, [pc, #20]	@ (900066d4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
900066c0:	f7ff fea2 	bl	90006408 <_Z23getFont_verdana_20_4bppv>
};
900066c4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
900066c6:	f7ff fee1 	bl	9000648c <_Z23getFont_verdana_40_4bppv>
};
900066ca:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
900066cc:	f7ff fe5a 	bl	90006384 <_Z23getFont_verdana_10_4bppv>
};
900066d0:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
900066d2:	bd10      	pop	{r4, pc}
900066d4:	240093f4 	.word	0x240093f4

900066d8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900066d8:	b410      	push	{r4}
    pointArray = 0;
900066da:	2400      	movs	r4, #0
900066dc:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900066de:	600c      	str	r4, [r1, #0]
    commandArray = 0;
900066e0:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
900066e2:	601c      	str	r4, [r3, #0]
}
900066e4:	f85d 4b04 	ldr.w	r4, [sp], #4
900066e8:	4770      	bx	lr
900066ea:	bf00      	nop

900066ec <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900066ec:	4770      	bx	lr
900066ee:	bf00      	nop

900066f0 <_ZN19FrontendApplicationD0Ev>:
900066f0:	b510      	push	{r4, lr}
900066f2:	4604      	mov	r4, r0
900066f4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900066f8:	f023 fc88 	bl	9002a00c <_ZdlPvj>
900066fc:	4620      	mov	r0, r4
900066fe:	bd10      	pop	{r4, pc}

90006700 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006700:	b510      	push	{r4, lr}
90006702:	4604      	mov	r4, r0
    {
        model.tick();
90006704:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90006708:	f000 f81e 	bl	90006748 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
9000670c:	4620      	mov	r0, r4
    }
9000670e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90006712:	f011 bf1f 	b.w	90018554 <_ZN8touchgfx11Application15handleTickEventEv>
90006716:	bf00      	nop

90006718 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006718:	b510      	push	{r4, lr}
9000671a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
9000671c:	f7fe ffac 	bl	90005678 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006720:	4b01      	ldr	r3, [pc, #4]	@ (90006728 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90006722:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90006724:	6023      	str	r3, [r4, #0]
}
90006726:	bd10      	pop	{r4, pc}
90006728:	9002de44 	.word	0x9002de44

9000672c <_ZN13ModelListener11updateScoreEii>:
    }

    virtual void updateScore(int left,int right){}
9000672c:	4770      	bx	lr
9000672e:	bf00      	nop

90006730 <_ZN13ModelListener16updateRightBrickEii>:
	virtual void updateRightBrick(int x,int y){}
90006730:	4770      	bx	lr
90006732:	bf00      	nop

90006734 <_ZN13ModelListener15updateLeftBrickEii>:
	virtual void updateLeftBrick(int x,int y){}
90006734:	4770      	bx	lr
90006736:	bf00      	nop

90006738 <_ZN13ModelListener10updateBallEii>:
	virtual void updateBall(int x,int y){}
90006738:	4770      	bx	lr
9000673a:	bf00      	nop

9000673c <_ZN5ModelC1Ev>:
 extern osMessageQueueId_t scoreQueHandle;
}



Model::Model() : modelListener(0)
9000673c:	2200      	movs	r2, #0
9000673e:	e9c0 2200 	strd	r2, r2, [r0]
90006742:	6082      	str	r2, [r0, #8]
{

}
90006744:	4770      	bx	lr
90006746:	bf00      	nop

90006748 <_ZN5Model4tickEv>:

void Model::tick()
{
90006748:	b530      	push	{r4, r5, lr}

	// Step 2: Call osMessageQueueGet with the queue handle, the message variable, a NULL pointer for message priority (if you don't need it), and a timeout value.
	Position receivedPos;
	osStatus_t status = osMessageQueueGet(BallQueueHandle, &receivedPos, NULL, 0);
9000674a:	2300      	movs	r3, #0
{
9000674c:	b089      	sub	sp, #36	@ 0x24
	osStatus_t status = osMessageQueueGet(BallQueueHandle, &receivedPos, NULL, 0);
9000674e:	4d28      	ldr	r5, [pc, #160]	@ (900067f0 <_ZN5Model4tickEv+0xa8>)
{
90006750:	4604      	mov	r4, r0
	osStatus_t status = osMessageQueueGet(BallQueueHandle, &receivedPos, NULL, 0);
90006752:	4669      	mov	r1, sp
90006754:	461a      	mov	r2, r3
90006756:	6828      	ldr	r0, [r5, #0]
90006758:	f008 fe3c 	bl	9000f3d4 <osMessageQueueGet>
	// Check the status to see if a message was successfully received
	if (status == osOK) {
9000675c:	b928      	cbnz	r0, 9000676a <_ZN5Model4tickEv+0x22>

		modelListener->updateBall(receivedPos.x,receivedPos.y);
9000675e:	6820      	ldr	r0, [r4, #0]
90006760:	4a24      	ldr	r2, [pc, #144]	@ (900067f4 <_ZN5Model4tickEv+0xac>)
90006762:	6803      	ldr	r3, [r0, #0]
90006764:	695b      	ldr	r3, [r3, #20]
90006766:	4293      	cmp	r3, r2
90006768:	d138      	bne.n	900067dc <_ZN5Model4tickEv+0x94>
	}
	Position score;
	status = osMessageQueueGet(scoreQueHandle, &score, NULL, 0);
9000676a:	2300      	movs	r3, #0
9000676c:	4822      	ldr	r0, [pc, #136]	@ (900067f8 <_ZN5Model4tickEv+0xb0>)
9000676e:	a902      	add	r1, sp, #8
90006770:	461a      	mov	r2, r3
90006772:	6800      	ldr	r0, [r0, #0]
90006774:	f008 fe2e 	bl	9000f3d4 <osMessageQueueGet>
	// Check the status to see if a message was successfully received
	if (status == osOK) {
90006778:	b968      	cbnz	r0, 90006796 <_ZN5Model4tickEv+0x4e>
		left+=score.x;
9000677a:	9b02      	ldr	r3, [sp, #8]
		right+=score.y;
9000677c:	68a2      	ldr	r2, [r4, #8]
9000677e:	4d1f      	ldr	r5, [pc, #124]	@ (900067fc <_ZN5Model4tickEv+0xb4>)
		left+=score.x;
90006780:	e9d4 0100 	ldrd	r0, r1, [r4]
90006784:	4419      	add	r1, r3
		right+=score.y;
90006786:	9b03      	ldr	r3, [sp, #12]
90006788:	441a      	add	r2, r3
		modelListener->updateScore(left,right);
9000678a:	6803      	ldr	r3, [r0, #0]
		left+=score.x;
9000678c:	6061      	str	r1, [r4, #4]
		modelListener->updateScore(left,right);
9000678e:	689b      	ldr	r3, [r3, #8]
		right+=score.y;
90006790:	60a2      	str	r2, [r4, #8]
		modelListener->updateScore(left,right);
90006792:	42ab      	cmp	r3, r5
90006794:	d126      	bne.n	900067e4 <_ZN5Model4tickEv+0x9c>
	}

	Position rightB;
	status = osMessageQueueGet(stickQue2Handle, &rightB, NULL, 0);
90006796:	2300      	movs	r3, #0
90006798:	4819      	ldr	r0, [pc, #100]	@ (90006800 <_ZN5Model4tickEv+0xb8>)
9000679a:	a904      	add	r1, sp, #16
9000679c:	461a      	mov	r2, r3
9000679e:	6800      	ldr	r0, [r0, #0]
900067a0:	f008 fe18 	bl	9000f3d4 <osMessageQueueGet>
	// Check the status to see if a message was successfully received
	if (status == osOK) {
900067a4:	b928      	cbnz	r0, 900067b2 <_ZN5Model4tickEv+0x6a>
		modelListener->updateRightBrick(rightB.x,rightB.y);
900067a6:	6820      	ldr	r0, [r4, #0]
900067a8:	4a16      	ldr	r2, [pc, #88]	@ (90006804 <_ZN5Model4tickEv+0xbc>)
900067aa:	6803      	ldr	r3, [r0, #0]
900067ac:	68db      	ldr	r3, [r3, #12]
900067ae:	4293      	cmp	r3, r2
900067b0:	d11a      	bne.n	900067e8 <_ZN5Model4tickEv+0xa0>
	}

	Position leftB;
	status = osMessageQueueGet(stickQue1Handle, &leftB, NULL, 0);
900067b2:	2300      	movs	r3, #0
900067b4:	4814      	ldr	r0, [pc, #80]	@ (90006808 <_ZN5Model4tickEv+0xc0>)
900067b6:	a906      	add	r1, sp, #24
900067b8:	461a      	mov	r2, r3
900067ba:	6800      	ldr	r0, [r0, #0]
900067bc:	f008 fe0a 	bl	9000f3d4 <osMessageQueueGet>
	// Check the status to see if a message was successfully received
	if (status == osOK) {
900067c0:	b928      	cbnz	r0, 900067ce <_ZN5Model4tickEv+0x86>
		modelListener->updateLeftBrick(leftB.x,leftB.y);
900067c2:	6820      	ldr	r0, [r4, #0]
900067c4:	4a11      	ldr	r2, [pc, #68]	@ (9000680c <_ZN5Model4tickEv+0xc4>)
900067c6:	6803      	ldr	r3, [r0, #0]
900067c8:	691b      	ldr	r3, [r3, #16]
900067ca:	4293      	cmp	r3, r2
900067cc:	d101      	bne.n	900067d2 <_ZN5Model4tickEv+0x8a>
	}

}
900067ce:	b009      	add	sp, #36	@ 0x24
900067d0:	bd30      	pop	{r4, r5, pc}
		modelListener->updateLeftBrick(leftB.x,leftB.y);
900067d2:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
900067d6:	4798      	blx	r3
}
900067d8:	b009      	add	sp, #36	@ 0x24
900067da:	bd30      	pop	{r4, r5, pc}
		modelListener->updateBall(receivedPos.x,receivedPos.y);
900067dc:	e9dd 1200 	ldrd	r1, r2, [sp]
900067e0:	4798      	blx	r3
900067e2:	e7c2      	b.n	9000676a <_ZN5Model4tickEv+0x22>
		modelListener->updateScore(left,right);
900067e4:	4798      	blx	r3
900067e6:	e7d6      	b.n	90006796 <_ZN5Model4tickEv+0x4e>
		modelListener->updateRightBrick(rightB.x,rightB.y);
900067e8:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
900067ec:	4798      	blx	r3
900067ee:	e7e0      	b.n	900067b2 <_ZN5Model4tickEv+0x6a>
900067f0:	24008eac 	.word	0x24008eac
900067f4:	90006739 	.word	0x90006739
900067f8:	24008ea8 	.word	0x24008ea8
900067fc:	9000672d 	.word	0x9000672d
90006800:	24008eb0 	.word	0x24008eb0
90006804:	90006731 	.word	0x90006731
90006808:	24008eb4 	.word	0x24008eb4
9000680c:	90006735 	.word	0x90006735

90006810 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
90006810:	4770      	bx	lr
90006812:	bf00      	nop

90006814 <_ZThn4_N16Screen1PresenterD1Ev>:
90006814:	3804      	subs	r0, #4
90006816:	4770      	bx	lr

90006818 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
90006818:	4770      	bx	lr
9000681a:	bf00      	nop

9000681c <_ZN16Screen1Presenter11updateScoreEi>:

}

void Screen1Presenter::updateScore(int num){

}
9000681c:	4770      	bx	lr
9000681e:	bf00      	nop

90006820 <_ZN16Screen1PresenterD0Ev>:
90006820:	b510      	push	{r4, lr}
90006822:	4604      	mov	r4, r0
90006824:	2110      	movs	r1, #16
90006826:	f023 fbf1 	bl	9002a00c <_ZdlPvj>
9000682a:	4620      	mov	r0, r4
9000682c:	bd10      	pop	{r4, pc}
9000682e:	bf00      	nop

90006830 <_ZThn4_N16Screen1PresenterD0Ev>:
90006830:	b510      	push	{r4, lr}
90006832:	1f04      	subs	r4, r0, #4
90006834:	2110      	movs	r1, #16
90006836:	4620      	mov	r0, r4
90006838:	f023 fbe8 	bl	9002a00c <_ZdlPvj>
9000683c:	4620      	mov	r0, r4
9000683e:	bd10      	pop	{r4, pc}

90006840 <_ZN16Screen1PresenterC1ER11Screen1View>:
    : view(v)
90006840:	4a05      	ldr	r2, [pc, #20]	@ (90006858 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
90006842:	60c1      	str	r1, [r0, #12]
90006844:	6002      	str	r2, [r0, #0]
Screen1Presenter::Screen1Presenter(Screen1View& v)
90006846:	b410      	push	{r4}
    ModelListener() : model(0) {}
90006848:	2400      	movs	r4, #0
9000684a:	6084      	str	r4, [r0, #8]
    : view(v)
9000684c:	f102 041c 	add.w	r4, r2, #28
90006850:	6044      	str	r4, [r0, #4]
}
90006852:	f85d 4b04 	ldr.w	r4, [sp], #4
90006856:	4770      	bx	lr
90006858:	9002de98 	.word	0x9002de98

9000685c <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
9000685c:	4770      	bx	lr
9000685e:	bf00      	nop

90006860 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
90006860:	4b03      	ldr	r3, [pc, #12]	@ (90006870 <_ZN11Screen1ViewD1Ev+0x10>)
90006862:	b510      	push	{r4, lr}
90006864:	4604      	mov	r4, r0
90006866:	6003      	str	r3, [r0, #0]
90006868:	f7fe ffee 	bl	90005848 <_ZN15Screen1ViewBaseD1Ev>
9000686c:	4620      	mov	r0, r4
9000686e:	bd10      	pop	{r4, pc}
90006870:	9002ded4 	.word	0x9002ded4

90006874 <_ZN11Screen1ViewD0Ev>:
90006874:	4b06      	ldr	r3, [pc, #24]	@ (90006890 <_ZN11Screen1ViewD0Ev+0x1c>)
90006876:	b510      	push	{r4, lr}
90006878:	4604      	mov	r4, r0
9000687a:	6003      	str	r3, [r0, #0]
9000687c:	f7fe ffe4 	bl	90005848 <_ZN15Screen1ViewBaseD1Ev>
90006880:	f44f 719c 	mov.w	r1, #312	@ 0x138
90006884:	4620      	mov	r0, r4
90006886:	f023 fbc1 	bl	9002a00c <_ZdlPvj>
9000688a:	4620      	mov	r0, r4
9000688c:	bd10      	pop	{r4, pc}
9000688e:	bf00      	nop
90006890:	9002ded4 	.word	0x9002ded4

90006894 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
90006894:	b510      	push	{r4, lr}
90006896:	4604      	mov	r4, r0
90006898:	f7ff f886 	bl	900059a8 <_ZN15Screen1ViewBaseC1Ev>
9000689c:	4b01      	ldr	r3, [pc, #4]	@ (900068a4 <_ZN11Screen1ViewC1Ev+0x10>)
}
9000689e:	4620      	mov	r0, r4
Screen1View::Screen1View()
900068a0:	6023      	str	r3, [r4, #0]
}
900068a2:	bd10      	pop	{r4, pc}
900068a4:	9002ded4 	.word	0x9002ded4

900068a8 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
900068a8:	f7fe bfd0 	b.w	9000584c <_ZN15Screen1ViewBase11setupScreenEv>

900068ac <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
900068ac:	4770      	bx	lr
900068ae:	bf00      	nop

900068b0 <_ZThn4_N16Screen2PresenterD1Ev>:
900068b0:	3804      	subs	r0, #4
900068b2:	4770      	bx	lr

900068b4 <_ZN16Screen2Presenter10deactivateEv>:

}

void Screen2Presenter::activate()
{
}
900068b4:	4770      	bx	lr
900068b6:	bf00      	nop

900068b8 <_ZN16Screen2Presenter11updateScoreEii>:
{

}

void Screen2Presenter::updateScore(int left,int right)
{
900068b8:	b570      	push	{r4, r5, r6, lr}
900068ba:	4604      	mov	r4, r0
	view.updateRightScore(right);
900068bc:	68c0      	ldr	r0, [r0, #12]
{
900068be:	460d      	mov	r5, r1
	view.updateRightScore(right);
900068c0:	4611      	mov	r1, r2
900068c2:	6803      	ldr	r3, [r0, #0]
900068c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900068c6:	4798      	blx	r3
	view.updateLeftScore(left);
900068c8:	68e0      	ldr	r0, [r4, #12]
900068ca:	4629      	mov	r1, r5
900068cc:	6803      	ldr	r3, [r0, #0]
}
900068ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	view.updateLeftScore(left);
900068d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900068d4:	4718      	bx	r3
900068d6:	bf00      	nop

900068d8 <_ZN16Screen2Presenter16updateRightBrickEii>:

void Screen2Presenter::updateRightBrick(int x,int y)
{
	view.updateRightBrick(x,y);
900068d8:	68c0      	ldr	r0, [r0, #12]
900068da:	6803      	ldr	r3, [r0, #0]
900068dc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900068de:	4718      	bx	r3

900068e0 <_ZN16Screen2Presenter15updateLeftBrickEii>:
}


void Screen2Presenter::updateLeftBrick(int x,int y)
{
	view.updateLeftBrick(x,y);
900068e0:	68c0      	ldr	r0, [r0, #12]
900068e2:	6803      	ldr	r3, [r0, #0]
900068e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900068e6:	4718      	bx	r3

900068e8 <_ZN16Screen2Presenter10updateBallEii>:
}

void Screen2Presenter::updateBall(int x,int y)
{
	view.updateBall(x,y);
900068e8:	68c0      	ldr	r0, [r0, #12]
900068ea:	6803      	ldr	r3, [r0, #0]
900068ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900068ee:	4718      	bx	r3

900068f0 <_ZN16Screen2PresenterD0Ev>:
900068f0:	b510      	push	{r4, lr}
900068f2:	4604      	mov	r4, r0
900068f4:	2110      	movs	r1, #16
900068f6:	f023 fb89 	bl	9002a00c <_ZdlPvj>
900068fa:	4620      	mov	r0, r4
900068fc:	bd10      	pop	{r4, pc}
900068fe:	bf00      	nop

90006900 <_ZThn4_N16Screen2PresenterD0Ev>:
90006900:	b510      	push	{r4, lr}
90006902:	1f04      	subs	r4, r0, #4
90006904:	2110      	movs	r1, #16
90006906:	4620      	mov	r0, r4
90006908:	f023 fb80 	bl	9002a00c <_ZdlPvj>
9000690c:	4620      	mov	r0, r4
9000690e:	bd10      	pop	{r4, pc}

90006910 <_ZThn4_N16Screen2Presenter16updateRightBrickEii>:
    virtual void updateScore(int left,int right);
	virtual void updateRightBrick(int x,int y);
90006910:	6880      	ldr	r0, [r0, #8]
90006912:	6803      	ldr	r3, [r0, #0]
90006914:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90006916:	4718      	bx	r3

90006918 <_ZThn4_N16Screen2Presenter15updateLeftBrickEii>:
	virtual void updateLeftBrick(int x,int y);
90006918:	6880      	ldr	r0, [r0, #8]
9000691a:	6803      	ldr	r3, [r0, #0]
9000691c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9000691e:	4718      	bx	r3

90006920 <_ZThn4_N16Screen2Presenter10updateBallEii>:
	virtual void updateBall(int x,int y);
90006920:	6880      	ldr	r0, [r0, #8]
90006922:	6803      	ldr	r3, [r0, #0]
90006924:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90006926:	4718      	bx	r3

90006928 <_ZThn4_N16Screen2Presenter11updateScoreEii>:
    virtual void updateScore(int left,int right);
90006928:	b570      	push	{r4, r5, r6, lr}
9000692a:	4604      	mov	r4, r0
9000692c:	6880      	ldr	r0, [r0, #8]
9000692e:	460d      	mov	r5, r1
90006930:	4611      	mov	r1, r2
90006932:	6803      	ldr	r3, [r0, #0]
90006934:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006936:	4798      	blx	r3
90006938:	68a0      	ldr	r0, [r4, #8]
9000693a:	4629      	mov	r1, r5
9000693c:	6803      	ldr	r3, [r0, #0]
9000693e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90006942:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90006944:	4718      	bx	r3
90006946:	bf00      	nop

90006948 <_ZN16Screen2PresenterC1ER11Screen2View>:
    : view(v)
90006948:	4a05      	ldr	r2, [pc, #20]	@ (90006960 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
9000694a:	60c1      	str	r1, [r0, #12]
9000694c:	6002      	str	r2, [r0, #0]
Screen2Presenter::Screen2Presenter(Screen2View& v)
9000694e:	b410      	push	{r4}
90006950:	2400      	movs	r4, #0
90006952:	6084      	str	r4, [r0, #8]
    : view(v)
90006954:	f102 0428 	add.w	r4, r2, #40	@ 0x28
90006958:	6044      	str	r4, [r0, #4]
}
9000695a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000695e:	4770      	bx	lr
90006960:	9002df10 	.word	0x9002df10

90006964 <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
90006964:	4770      	bx	lr
90006966:	bf00      	nop

90006968 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
90006968:	4b03      	ldr	r3, [pc, #12]	@ (90006978 <_ZN11Screen2ViewD1Ev+0x10>)
9000696a:	b510      	push	{r4, lr}
9000696c:	4604      	mov	r4, r0
9000696e:	6003      	str	r3, [r0, #0]
90006970:	f7ff f994 	bl	90005c9c <_ZN15Screen2ViewBaseD1Ev>
90006974:	4620      	mov	r0, r4
90006976:	bd10      	pop	{r4, pc}
90006978:	9002df5c 	.word	0x9002df5c

9000697c <_ZN11Screen2ViewD0Ev>:
9000697c:	4b06      	ldr	r3, [pc, #24]	@ (90006998 <_ZN11Screen2ViewD0Ev+0x1c>)
9000697e:	b510      	push	{r4, lr}
90006980:	4604      	mov	r4, r0
90006982:	6003      	str	r3, [r0, #0]
90006984:	f7ff f98a 	bl	90005c9c <_ZN15Screen2ViewBaseD1Ev>
90006988:	f641 6194 	movw	r1, #7828	@ 0x1e94
9000698c:	4620      	mov	r0, r4
9000698e:	f023 fb3d 	bl	9002a00c <_ZdlPvj>
90006992:	4620      	mov	r0, r4
90006994:	bd10      	pop	{r4, pc}
90006996:	bf00      	nop
90006998:	9002df5c 	.word	0x9002df5c

9000699c <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
9000699c:	b510      	push	{r4, lr}
9000699e:	4604      	mov	r4, r0
900069a0:	f7ff fa40 	bl	90005e24 <_ZN15Screen2ViewBaseC1Ev>
900069a4:	4b01      	ldr	r3, [pc, #4]	@ (900069ac <_ZN11Screen2ViewC1Ev+0x10>)
}
900069a6:	4620      	mov	r0, r4
Screen2View::Screen2View()
900069a8:	6023      	str	r3, [r4, #0]
}
900069aa:	bd10      	pop	{r4, pc}
900069ac:	9002df5c 	.word	0x9002df5c

900069b0 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
900069b0:	f7ff b968 	b.w	90005c84 <_ZN15Screen2ViewBase11setupScreenEv>

900069b4 <_ZN11Screen2View16updateRightScoreEi>:


void Screen2View::updateRightScore(int num)
{
900069b4:	b510      	push	{r4, lr}
900069b6:	4604      	mov	r4, r0
900069b8:	460b      	mov	r3, r1
	Unicode::snprintf(rughtScoreBuffer, 3, "%u", num);
900069ba:	4a06      	ldr	r2, [pc, #24]	@ (900069d4 <_ZN11Screen2View16updateRightScoreEi+0x20>)
900069bc:	2103      	movs	r1, #3
900069be:	f500 701a 	add.w	r0, r0, #616	@ 0x268
900069c2:	f015 f8b3 	bl	9001bb2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	rightScore.invalidate();
900069c6:	f504 7007 	add.w	r0, r4, #540	@ 0x21c

}
900069ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	rightScore.invalidate();
900069ce:	f012 bdb8 	b.w	90019542 <_ZNK8touchgfx8Drawable10invalidateEv>
900069d2:	bf00      	nop
900069d4:	9002df50 	.word	0x9002df50

900069d8 <_ZN11Screen2View15updateLeftScoreEi>:

void Screen2View::updateLeftScore(int num)
{
900069d8:	b510      	push	{r4, lr}
900069da:	4604      	mov	r4, r0
900069dc:	460b      	mov	r3, r1
	Unicode::snprintf(leftScoreBuffer, 3, "%u", num);
900069de:	4a06      	ldr	r2, [pc, #24]	@ (900069f8 <_ZN11Screen2View15updateLeftScoreEi+0x20>)
900069e0:	2103      	movs	r1, #3
900069e2:	f200 206e 	addw	r0, r0, #622	@ 0x26e
900069e6:	f015 f8a1 	bl	9001bb2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	leftScore.invalidate();
900069ea:	f504 70e8 	add.w	r0, r4, #464	@ 0x1d0

}
900069ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	leftScore.invalidate();
900069f2:	f012 bda6 	b.w	90019542 <_ZNK8touchgfx8Drawable10invalidateEv>
900069f6:	bf00      	nop
900069f8:	9002df50 	.word	0x9002df50

900069fc <_ZN11Screen2View16updateRightBrickEii>:

void Screen2View::updateRightBrick(int x,int y)
{
900069fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// Move the image to a new position
	rightBrick.invalidate();
900069fe:	f100 07c4 	add.w	r7, r0, #196	@ 0xc4
{
90006a02:	4604      	mov	r4, r0
90006a04:	460e      	mov	r6, r1
90006a06:	4615      	mov	r5, r2
	rightBrick.invalidate();
90006a08:	4638      	mov	r0, r7
90006a0a:	f012 fd9a 	bl	90019542 <_ZNK8touchgfx8Drawable10invalidateEv>
	rightBrick.setXY(x, y);
	// Redraw the image at the new position
	rightBrick.invalidate();
90006a0e:	4638      	mov	r0, r7
	rightBrick.setXY(x, y);
90006a10:	f8a4 60c8 	strh.w	r6, [r4, #200]	@ 0xc8
90006a14:	f8a4 50ca 	strh.w	r5, [r4, #202]	@ 0xca

}
90006a18:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	rightBrick.invalidate();
90006a1c:	f012 bd91 	b.w	90019542 <_ZNK8touchgfx8Drawable10invalidateEv>

90006a20 <_ZN11Screen2View15updateLeftBrickEii>:
void Screen2View::updateLeftBrick(int x,int y)
{
90006a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// Move the image to a new position
	leftBrick.invalidate();
90006a22:	f100 0798 	add.w	r7, r0, #152	@ 0x98
{
90006a26:	4604      	mov	r4, r0
90006a28:	460e      	mov	r6, r1
90006a2a:	4615      	mov	r5, r2
	leftBrick.invalidate();
90006a2c:	4638      	mov	r0, r7
90006a2e:	f012 fd88 	bl	90019542 <_ZNK8touchgfx8Drawable10invalidateEv>
	leftBrick.setXY(x, y);
	// Redraw the image at the new position
	leftBrick.invalidate();
90006a32:	4638      	mov	r0, r7
	leftBrick.setXY(x, y);
90006a34:	f8a4 609c 	strh.w	r6, [r4, #156]	@ 0x9c
90006a38:	f8a4 509e 	strh.w	r5, [r4, #158]	@ 0x9e

}
90006a3c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	leftBrick.invalidate();
90006a40:	f012 bd7f 	b.w	90019542 <_ZNK8touchgfx8Drawable10invalidateEv>

90006a44 <_ZN11Screen2View10updateBallEii>:

void Screen2View::updateBall(int x,int y)
{
90006a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// Move the image to a new position
	circle1.invalidate();
90006a46:	f500 77ba 	add.w	r7, r0, #372	@ 0x174
{
90006a4a:	4604      	mov	r4, r0
90006a4c:	460e      	mov	r6, r1
90006a4e:	4615      	mov	r5, r2
	circle1.invalidate();
90006a50:	4638      	mov	r0, r7
90006a52:	f00e fc8f 	bl	90015374 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        rect.width = width;
90006a56:	f04f 1314 	mov.w	r3, #1310740	@ 0x140014
	circle1.setPosition(x, y, 20, 20);	// Redraw the image at the new position
	circle1.invalidate();
90006a5a:	4638      	mov	r0, r7
	circle1.setPosition(x, y, 20, 20);	// Redraw the image at the new position
90006a5c:	f8a4 6178 	strh.w	r6, [r4, #376]	@ 0x178
90006a60:	f8a4 517a 	strh.w	r5, [r4, #378]	@ 0x17a
90006a64:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c

}
90006a68:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	circle1.invalidate();
90006a6c:	f00e bc82 	b.w	90015374 <_ZNK8touchgfx12CanvasWidget10invalidateEv>

90006a70 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90006a70:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006a74:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006a76:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006a7a:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006a7e:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90006a80:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90006a82:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006a86:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006a8a:	4770      	bx	lr

90006a8c <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006a8c:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90006a90:	2b01      	cmp	r3, #1
90006a92:	d102      	bne.n	90006a9a <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006a94:	2300      	movs	r3, #0
90006a96:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90006a9a:	2000      	movs	r0, #0
90006a9c:	4770      	bx	lr
90006a9e:	bf00      	nop

90006aa0 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90006aa0:	2000      	movs	r0, #0
90006aa2:	4770      	bx	lr

90006aa4 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006aa4:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006aa6:	6904      	ldr	r4, [r0, #16]
90006aa8:	8900      	ldrh	r0, [r0, #8]
90006aaa:	46a4      	mov	ip, r4
}
90006aac:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006ab0:	4760      	bx	ip
90006ab2:	bf00      	nop

90006ab4 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006ab4:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006ab6:	68c4      	ldr	r4, [r0, #12]
90006ab8:	8900      	ldrh	r0, [r0, #8]
90006aba:	46a4      	mov	ip, r4
}
90006abc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006ac0:	4760      	bx	ip
90006ac2:	bf00      	nop

90006ac4 <FT5336_GestureConfig>:
{
90006ac4:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006ac6:	f100 0518 	add.w	r5, r0, #24
{
90006aca:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006acc:	7809      	ldrb	r1, [r1, #0]
90006ace:	4628      	mov	r0, r5
90006ad0:	f000 f96c 	bl	90006dac <ft5336_radian_value>
90006ad4:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006ad6:	7931      	ldrb	r1, [r6, #4]
90006ad8:	4628      	mov	r0, r5
90006ada:	f000 f975 	bl	90006dc8 <ft5336_offset_left_right>
90006ade:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006ae0:	7a31      	ldrb	r1, [r6, #8]
90006ae2:	4628      	mov	r0, r5
90006ae4:	f000 f97e 	bl	90006de4 <ft5336_offset_up_down>
90006ae8:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006aea:	7b31      	ldrb	r1, [r6, #12]
90006aec:	4628      	mov	r0, r5
90006aee:	f000 f987 	bl	90006e00 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006af2:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006af4:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006af6:	4628      	mov	r0, r5
90006af8:	f000 f990 	bl	90006e1c <ft5336_distance_up_down>
90006afc:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006afe:	7d31      	ldrb	r1, [r6, #20]
90006b00:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006b02:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006b04:	f000 f998 	bl	90006e38 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006b08:	42c4      	cmn	r4, r0
}
90006b0a:	bf14      	ite	ne
90006b0c:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
90006b10:	2000      	moveq	r0, #0
90006b12:	bd70      	pop	{r4, r5, r6, pc}

90006b14 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006b14:	3018      	adds	r0, #24
90006b16:	f000 b9ab 	b.w	90006e70 <ft5336_chip_id>
90006b1a:	bf00      	nop

90006b1c <FT5336_GetState>:
{
90006b1c:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006b1e:	f100 0518 	add.w	r5, r0, #24
{
90006b22:	b083      	sub	sp, #12
90006b24:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006b26:	4628      	mov	r0, r5
90006b28:	a901      	add	r1, sp, #4
90006b2a:	f000 f931 	bl	90006d90 <ft5336_td_status>
90006b2e:	bb10      	cbnz	r0, 90006b76 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006b30:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006b34:	2b05      	cmp	r3, #5
90006b36:	bf94      	ite	ls
90006b38:	4619      	movls	r1, r3
90006b3a:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006b3c:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006b3e:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006b40:	4628      	mov	r0, r5
90006b42:	2103      	movs	r1, #3
90006b44:	eb0d 0203 	add.w	r2, sp, r3
90006b48:	f000 f910 	bl	90006d6c <ft5336_read_reg>
90006b4c:	b9b0      	cbnz	r0, 90006b7c <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006b4e:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006b52:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006b56:	0212      	lsls	r2, r2, #8
90006b58:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006b5c:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006b5e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006b62:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006b66:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006b68:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006b6c:	430b      	orrs	r3, r1
90006b6e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006b72:	b003      	add	sp, #12
90006b74:	bd30      	pop	{r4, r5, pc}
90006b76:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
90006b7a:	e7df      	b.n	90006b3c <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006b7c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
  return ret;
90006b80:	e7f7      	b.n	90006b72 <FT5336_GetState+0x56>
90006b82:	bf00      	nop

90006b84 <FT5336_GetMultiTouchState>:
{
90006b84:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006b86:	f100 0518 	add.w	r5, r0, #24
{
90006b8a:	b088      	sub	sp, #32
90006b8c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006b8e:	4628      	mov	r0, r5
90006b90:	4669      	mov	r1, sp
90006b92:	f000 f8fd 	bl	90006d90 <ft5336_td_status>
90006b96:	2800      	cmp	r0, #0
90006b98:	f040 809a 	bne.w	90006cd0 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006b9c:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006ba0:	2b05      	cmp	r3, #5
90006ba2:	bf94      	ite	ls
90006ba4:	4619      	movls	r1, r3
90006ba6:	2100      	movhi	r1, #0
90006ba8:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006baa:	231e      	movs	r3, #30
90006bac:	466a      	mov	r2, sp
90006bae:	4628      	mov	r0, r5
90006bb0:	2103      	movs	r1, #3
90006bb2:	f000 f8db 	bl	90006d6c <ft5336_read_reg>
90006bb6:	2800      	cmp	r0, #0
90006bb8:	f040 808d 	bne.w	90006cd6 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bbc:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bc0:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bc4:	020a      	lsls	r2, r1, #8
90006bc6:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bca:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bcc:	f89d c007 	ldrb.w	ip, [sp, #7]
90006bd0:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006bd4:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bd6:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006bda:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bde:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006be0:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006be4:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006be6:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006be8:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bea:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006bec:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bf0:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006bf2:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bf6:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006bfa:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006bfc:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006bfe:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c02:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c04:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c06:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c08:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c0c:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c0e:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c10:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c14:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c18:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c1a:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c1c:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c1e:	ea45 050c 	orr.w	r5, r5, ip
90006c22:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c26:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c2a:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c2c:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c2e:	0212      	lsls	r2, r2, #8
90006c30:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c34:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c36:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c3a:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c3e:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c40:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c42:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006c46:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c48:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c4c:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c4e:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c50:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c54:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c56:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006c5a:	4313      	orrs	r3, r2
90006c5c:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c5e:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c60:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c64:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c68:	020a      	lsls	r2, r1, #8
90006c6a:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c6e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c70:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c74:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c76:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c7a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c7c:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c80:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c82:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c84:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006c88:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c8a:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c8c:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c8e:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c92:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c94:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c98:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c9a:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c9e:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006ca2:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006ca4:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ca6:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ca8:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006cac:	6625      	str	r5, [r4, #96]	@ 0x60
90006cae:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006cb0:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006cb4:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006cb6:	021b      	lsls	r3, r3, #8
90006cb8:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006cbc:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90006cc0:	430b      	orrs	r3, r1
90006cc2:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006cc4:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006cc8:	4313      	orrs	r3, r2
90006cca:	6163      	str	r3, [r4, #20]
}
90006ccc:	b008      	add	sp, #32
90006cce:	bd70      	pop	{r4, r5, r6, pc}
90006cd0:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
90006cd4:	e768      	b.n	90006ba8 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006cd6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
  return ret;
90006cda:	e7f7      	b.n	90006ccc <FT5336_GetMultiTouchState+0x148>

90006cdc <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006cdc:	3018      	adds	r0, #24
90006cde:	f000 b84d 	b.w	90006d7c <ft5336_gest_id>
90006ce2:	bf00      	nop

90006ce4 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006ce4:	2101      	movs	r1, #1
90006ce6:	3018      	adds	r0, #24
90006ce8:	f000 b8b4 	b.w	90006e54 <ft5336_g_mode>

90006cec <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006cec:	2100      	movs	r1, #0
90006cee:	3018      	adds	r0, #24
90006cf0:	f000 b8b0 	b.w	90006e54 <ft5336_g_mode>

90006cf4 <FT5336_Init>:
{
90006cf4:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006cf6:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90006cfa:	b98d      	cbnz	r5, 90006d20 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006cfc:	4606      	mov	r6, r0
90006cfe:	4604      	mov	r4, r0
90006d00:	f856 3b18 	ldr.w	r3, [r6], #24
90006d04:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006d06:	4629      	mov	r1, r5
90006d08:	4630      	mov	r0, r6
90006d0a:	f000 f8a3 	bl	90006e54 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006d0e:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006d10:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006d14:	bf18      	it	ne
90006d16:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006d18:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90006d1c:	4240      	negs	r0, r0
}
90006d1e:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
90006d20:	2000      	movs	r0, #0
}
90006d22:	bd70      	pop	{r4, r5, r6, pc}

90006d24 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90006d24:	2000      	movs	r0, #0
90006d26:	4770      	bx	lr

90006d28 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006d28:	b1c0      	cbz	r0, 90006d5c <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006d2a:	890a      	ldrh	r2, [r1, #8]
{
90006d2c:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006d2e:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006d32:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006d34:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006d38:	694a      	ldr	r2, [r1, #20]
90006d3a:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006d3e:	4909      	ldr	r1, [pc, #36]	@ (90006d64 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006d40:	60c5      	str	r5, [r0, #12]
90006d42:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006d46:	4a08      	ldr	r2, [pc, #32]	@ (90006d68 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006d48:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006d4c:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006d4e:	b10b      	cbz	r3, 90006d54 <FT5336_RegisterBusIO+0x2c>
}
90006d50:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006d52:	4718      	bx	r3
}
90006d54:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
90006d58:	bc30      	pop	{r4, r5}
90006d5a:	4770      	bx	lr
90006d5c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
90006d60:	4770      	bx	lr
90006d62:	bf00      	nop
90006d64:	90006aa5 	.word	0x90006aa5
90006d68:	90006ab5 	.word	0x90006ab5

90006d6c <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006d6c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d6e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006d72:	46a4      	mov	ip, r4
}
90006d74:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d78:	4760      	bx	ip
90006d7a:	bf00      	nop

90006d7c <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006d7c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d7e:	2301      	movs	r3, #1
{
90006d80:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d82:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006d86:	4619      	mov	r1, r3
90006d88:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006d8a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d8e:	4760      	bx	ip

90006d90 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006d90:	b538      	push	{r3, r4, r5, lr}
90006d92:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d94:	2301      	movs	r3, #1
90006d96:	2102      	movs	r1, #2
90006d98:	4622      	mov	r2, r4
90006d9a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006d9e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006da0:	b918      	cbnz	r0, 90006daa <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006da2:	7823      	ldrb	r3, [r4, #0]
90006da4:	f003 030f 	and.w	r3, r3, #15
90006da8:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006daa:	bd38      	pop	{r3, r4, r5, pc}

90006dac <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006dac:	b510      	push	{r4, lr}
90006dae:	460c      	mov	r4, r1
90006db0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006db2:	2301      	movs	r3, #1
90006db4:	2191      	movs	r1, #145	@ 0x91
{
90006db6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006dba:	f10d 0207 	add.w	r2, sp, #7
90006dbe:	6804      	ldr	r4, [r0, #0]
90006dc0:	6880      	ldr	r0, [r0, #8]
90006dc2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006dc4:	b002      	add	sp, #8
90006dc6:	bd10      	pop	{r4, pc}

90006dc8 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006dc8:	b510      	push	{r4, lr}
90006dca:	460c      	mov	r4, r1
90006dcc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006dce:	2301      	movs	r3, #1
90006dd0:	2192      	movs	r1, #146	@ 0x92
{
90006dd2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006dd6:	f10d 0207 	add.w	r2, sp, #7
90006dda:	6804      	ldr	r4, [r0, #0]
90006ddc:	6880      	ldr	r0, [r0, #8]
90006dde:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006de0:	b002      	add	sp, #8
90006de2:	bd10      	pop	{r4, pc}

90006de4 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006de4:	b510      	push	{r4, lr}
90006de6:	460c      	mov	r4, r1
90006de8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006dea:	2301      	movs	r3, #1
90006dec:	2193      	movs	r1, #147	@ 0x93
{
90006dee:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006df2:	f10d 0207 	add.w	r2, sp, #7
90006df6:	6804      	ldr	r4, [r0, #0]
90006df8:	6880      	ldr	r0, [r0, #8]
90006dfa:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006dfc:	b002      	add	sp, #8
90006dfe:	bd10      	pop	{r4, pc}

90006e00 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006e00:	b510      	push	{r4, lr}
90006e02:	460c      	mov	r4, r1
90006e04:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e06:	2301      	movs	r3, #1
90006e08:	2194      	movs	r1, #148	@ 0x94
{
90006e0a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e0e:	f10d 0207 	add.w	r2, sp, #7
90006e12:	6804      	ldr	r4, [r0, #0]
90006e14:	6880      	ldr	r0, [r0, #8]
90006e16:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006e18:	b002      	add	sp, #8
90006e1a:	bd10      	pop	{r4, pc}

90006e1c <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006e1c:	b510      	push	{r4, lr}
90006e1e:	460c      	mov	r4, r1
90006e20:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e22:	2301      	movs	r3, #1
90006e24:	2195      	movs	r1, #149	@ 0x95
{
90006e26:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e2a:	f10d 0207 	add.w	r2, sp, #7
90006e2e:	6804      	ldr	r4, [r0, #0]
90006e30:	6880      	ldr	r0, [r0, #8]
90006e32:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006e34:	b002      	add	sp, #8
90006e36:	bd10      	pop	{r4, pc}

90006e38 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006e38:	b510      	push	{r4, lr}
90006e3a:	460c      	mov	r4, r1
90006e3c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e3e:	2301      	movs	r3, #1
90006e40:	2196      	movs	r1, #150	@ 0x96
{
90006e42:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e46:	f10d 0207 	add.w	r2, sp, #7
90006e4a:	6804      	ldr	r4, [r0, #0]
90006e4c:	6880      	ldr	r0, [r0, #8]
90006e4e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006e50:	b002      	add	sp, #8
90006e52:	bd10      	pop	{r4, pc}

90006e54 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006e54:	b510      	push	{r4, lr}
90006e56:	460c      	mov	r4, r1
90006e58:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e5a:	2301      	movs	r3, #1
90006e5c:	21a4      	movs	r1, #164	@ 0xa4
{
90006e5e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006e62:	f10d 0207 	add.w	r2, sp, #7
90006e66:	6804      	ldr	r4, [r0, #0]
90006e68:	6880      	ldr	r0, [r0, #8]
90006e6a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006e6c:	b002      	add	sp, #8
90006e6e:	bd10      	pop	{r4, pc}

90006e70 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006e70:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e72:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006e76:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e78:	2301      	movs	r3, #1
90006e7a:	46a4      	mov	ip, r4
90006e7c:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90006e7e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006e82:	4760      	bx	ip

90006e84 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006e84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006e86:	680b      	ldr	r3, [r1, #0]
{
90006e88:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006e8a:	4c2a      	ldr	r4, [pc, #168]	@ (90006f34 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e8c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
90006e90:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90006e92:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90006e94:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e96:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90006e98:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006e9a:	2301      	movs	r3, #1
90006e9c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90006e9e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ea0:	f007 f918 	bl	9000e0d4 <HAL_SDRAM_SendCommand>
90006ea4:	2800      	cmp	r0, #0
90006ea6:	d142      	bne.n	90006f2e <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006ea8:	f000 ff48 	bl	90007d3c <HAL_GetTick>
90006eac:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90006eae:	f000 ff45 	bl	90007d3c <HAL_GetTick>
90006eb2:	4286      	cmp	r6, r0
90006eb4:	d0fb      	beq.n	90006eae <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006eb6:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006eb8:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90006eba:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ebc:	491d      	ldr	r1, [pc, #116]	@ (90006f34 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006ebe:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006ec0:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006ec2:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ec4:	4638      	mov	r0, r7
90006ec6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
90006eca:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006ecc:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ece:	f007 f901 	bl	9000e0d4 <HAL_SDRAM_SendCommand>
90006ed2:	bb60      	cbnz	r0, 90006f2e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ed4:	4917      	ldr	r1, [pc, #92]	@ (90006f34 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90006ed6:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90006eda:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006edc:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006ede:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90006ee2:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ee4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90006ee8:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006eea:	f007 f8f3 	bl	9000e0d4 <HAL_SDRAM_SendCommand>
90006eee:	b9f0      	cbnz	r0, 90006f2e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006ef0:	4910      	ldr	r1, [pc, #64]	@ (90006f34 <MT48LC4M32B2_Init+0xb0>)
90006ef2:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006ef4:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006ef8:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006efa:	696a      	ldr	r2, [r5, #20]
90006efc:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006efe:	69aa      	ldr	r2, [r5, #24]
90006f00:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006f02:	69ea      	ldr	r2, [r5, #28]
90006f04:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90006f06:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006f08:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006f0a:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006f0c:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006f10:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006f14:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006f16:	f007 f8dd 	bl	9000e0d4 <HAL_SDRAM_SendCommand>
90006f1a:	b940      	cbnz	r0, 90006f2e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006f1c:	68a9      	ldr	r1, [r5, #8]
90006f1e:	4638      	mov	r0, r7
90006f20:	f007 f8f8 	bl	9000e114 <HAL_SDRAM_ProgramRefreshRate>
90006f24:	3800      	subs	r0, #0
90006f26:	bf18      	it	ne
90006f28:	2001      	movne	r0, #1
90006f2a:	4240      	negs	r0, r0
}
90006f2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006f2e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
90006f32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90006f34:	24009400 	.word	0x24009400

90006f38 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006f38:	4a10      	ldr	r2, [pc, #64]	@ (90006f7c <BSP_I2C4_DeInit+0x44>)
{
90006f3a:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006f3c:	6813      	ldr	r3, [r2, #0]
90006f3e:	3b01      	subs	r3, #1
90006f40:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90006f42:	b10b      	cbz	r3, 90006f48 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006f44:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90006f46:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006f48:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90006f4c:	480c      	ldr	r0, [pc, #48]	@ (90006f80 <BSP_I2C4_DeInit+0x48>)
90006f4e:	f002 f939 	bl	900091c4 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90006f52:	480b      	ldr	r0, [pc, #44]	@ (90006f80 <BSP_I2C4_DeInit+0x48>)
90006f54:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90006f58:	f002 f934 	bl	900091c4 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006f5c:	4a09      	ldr	r2, [pc, #36]	@ (90006f84 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006f5e:	480a      	ldr	r0, [pc, #40]	@ (90006f88 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006f60:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90006f64:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006f68:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006f6c:	f002 fbcc 	bl	90009708 <HAL_I2C_DeInit>
90006f70:	2800      	cmp	r0, #0
90006f72:	d0e7      	beq.n	90006f44 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90006f74:	f06f 0007 	mvn.w	r0, #7
}
90006f78:	bd08      	pop	{r3, pc}
90006f7a:	bf00      	nop
90006f7c:	24009e68 	.word	0x24009e68
90006f80:	58020c00 	.word	0x58020c00
90006f84:	58024400 	.word	0x58024400
90006f88:	24009410 	.word	0x24009410

90006f8c <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90006f8c:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90006f8e:	2201      	movs	r2, #1
{
90006f90:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90006f92:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90006f96:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90006f9a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90006f9e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90006fa2:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90006fa4:	f002 fb58 	bl	90009658 <HAL_I2C_Init>
90006fa8:	b108      	cbz	r0, 90006fae <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90006faa:	2001      	movs	r0, #1
}
90006fac:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90006fae:	4601      	mov	r1, r0
90006fb0:	4620      	mov	r0, r4
90006fb2:	f002 fe37 	bl	90009c24 <HAL_I2CEx_ConfigAnalogFilter>
90006fb6:	2800      	cmp	r0, #0
90006fb8:	d1f7      	bne.n	90006faa <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90006fba:	4601      	mov	r1, r0
90006fbc:	4620      	mov	r0, r4
90006fbe:	f002 fe5b 	bl	90009c78 <HAL_I2CEx_ConfigDigitalFilter>
90006fc2:	3800      	subs	r0, #0
90006fc4:	bf18      	it	ne
90006fc6:	2001      	movne	r0, #1
}
90006fc8:	bd10      	pop	{r4, pc}
90006fca:	bf00      	nop

90006fcc <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90006fcc:	4b9a      	ldr	r3, [pc, #616]	@ (90007238 <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
90006fce:	489b      	ldr	r0, [pc, #620]	@ (9000723c <BSP_I2C4_Init+0x270>)
90006fd0:	4a9b      	ldr	r2, [pc, #620]	@ (90007240 <BSP_I2C4_Init+0x274>)
{
90006fd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90006fd6:	681c      	ldr	r4, [r3, #0]
{
90006fd8:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
90006fda:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90006fdc:	b11c      	cbz	r4, 90006fe6 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90006fde:	2000      	movs	r0, #0
}
90006fe0:	b01d      	add	sp, #116	@ 0x74
90006fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90006fe6:	2201      	movs	r2, #1
90006fe8:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90006fea:	f002 fe15 	bl	90009c18 <HAL_I2C_GetState>
90006fee:	2800      	cmp	r0, #0
90006ff0:	d1f5      	bne.n	90006fde <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006ff2:	4d94      	ldr	r5, [pc, #592]	@ (90007244 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006ff4:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90006ff8:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006ffa:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006ffc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007000:	f04f 0800 	mov.w	r8, #0
90007004:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007008:	f043 0308 	orr.w	r3, r3, #8
9000700c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90007010:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007014:	f003 0308 	and.w	r3, r3, #8
90007018:	9313      	str	r3, [sp, #76]	@ 0x4c
9000701a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000701c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007020:	f043 0308 	orr.w	r3, r3, #8
90007024:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90007028:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000702c:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000702e:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007032:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007036:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007038:	a916      	add	r1, sp, #88	@ 0x58
9000703a:	4883      	ldr	r0, [pc, #524]	@ (90007248 <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000703c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000703e:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007042:	f001 ff7d 	bl	90008f40 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007046:	2312      	movs	r3, #18
90007048:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000704c:	a916      	add	r1, sp, #88	@ 0x58
9000704e:	487e      	ldr	r0, [pc, #504]	@ (90007248 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007050:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007052:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
90007056:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000705a:	f001 ff71 	bl	90008f40 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
9000705e:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007062:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90007066:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
9000706a:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000706e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90007072:	9315      	str	r3, [sp, #84]	@ 0x54
90007074:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
90007076:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000707a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000707e:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90007082:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90007086:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000708a:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000708e:	f005 fba1 	bl	9000c7d4 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90007092:	2800      	cmp	r0, #0
90007094:	f000 81fd 	beq.w	90007492 <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007098:	4b6c      	ldr	r3, [pc, #432]	@ (9000724c <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
9000709a:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
9000709c:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070a0:	4e6b      	ldr	r6, [pc, #428]	@ (90007250 <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900070a2:	eb03 0350 	add.w	r3, r3, r0, lsr #1
900070a6:	9401      	str	r4, [sp, #4]
900070a8:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900070ac:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900070ae:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900070b0:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900070b4:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
900070b8:	4b66      	ldr	r3, [pc, #408]	@ (90007254 <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900070ba:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900070bc:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
900070c0:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
900070c2:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
900070c6:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
900070c8:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
900070cc:	4689      	mov	r9, r1
900070ce:	4622      	mov	r2, r4
900070d0:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900070d2:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
900070d6:	46b8      	mov	r8, r7
900070d8:	eb07 0347 	add.w	r3, r7, r7, lsl #1
900070dc:	bf2c      	ite	cs
900070de:	2001      	movcs	r0, #1
900070e0:	2000      	movcc	r0, #0
900070e2:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
900070e6:	f000 0001 	and.w	r0, r0, #1
900070ea:	eb07 0187 	add.w	r1, r7, r7, lsl #2
900070ee:	bf88      	it	hi
900070f0:	2000      	movhi	r0, #0
900070f2:	459e      	cmp	lr, r3
900070f4:	eb07 0483 	add.w	r4, r7, r3, lsl #2
900070f8:	9004      	str	r0, [sp, #16]
900070fa:	bf8c      	ite	hi
900070fc:	2000      	movhi	r0, #0
900070fe:	2001      	movls	r0, #1
90007100:	459c      	cmp	ip, r3
90007102:	940f      	str	r4, [sp, #60]	@ 0x3c
90007104:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
90007108:	bf38      	it	cc
9000710a:	2000      	movcc	r0, #0
9000710c:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
90007110:	9006      	str	r0, [sp, #24]
90007112:	eb07 0041 	add.w	r0, r7, r1, lsl #1
90007116:	9005      	str	r0, [sp, #20]
90007118:	bf94      	ite	ls
9000711a:	2001      	movls	r0, #1
9000711c:	2000      	movhi	r0, #0
9000711e:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90007122:	f000 0401 	and.w	r4, r0, #1
90007126:	bf38      	it	cc
90007128:	2400      	movcc	r4, #0
9000712a:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
9000712c:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007130:	9407      	str	r4, [sp, #28]
90007132:	bf8c      	ite	hi
90007134:	2400      	movhi	r4, #0
90007136:	2401      	movls	r4, #1
90007138:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
9000713a:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000713c:	bf38      	it	cc
9000713e:	2400      	movcc	r4, #0
90007140:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
90007144:	bf98      	it	ls
90007146:	2001      	movls	r0, #1
90007148:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
9000714c:	9408      	str	r4, [sp, #32]
9000714e:	465c      	mov	r4, fp
90007150:	f000 0001 	and.w	r0, r0, #1
90007154:	bf38      	it	cc
90007156:	2000      	movcc	r0, #0
90007158:	45de      	cmp	lr, fp
9000715a:	9009      	str	r0, [sp, #36]	@ 0x24
9000715c:	4658      	mov	r0, fp
9000715e:	bf8c      	ite	hi
90007160:	2000      	movhi	r0, #0
90007162:	2001      	movls	r0, #1
90007164:	45dc      	cmp	ip, fp
90007166:	bf38      	it	cc
90007168:	2000      	movcc	r0, #0
9000716a:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
9000716e:	4683      	mov	fp, r0
90007170:	bf94      	ite	ls
90007172:	f04f 0b01 	movls.w	fp, #1
90007176:	f04f 0b00 	movhi.w	fp, #0
9000717a:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
9000717e:	900a      	str	r0, [sp, #40]	@ 0x28
90007180:	f00b 0b01 	and.w	fp, fp, #1
90007184:	bf38      	it	cc
90007186:	f04f 0b00 	movcc.w	fp, #0
9000718a:	4658      	mov	r0, fp
9000718c:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
90007190:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
90007194:	45de      	cmp	lr, fp
90007196:	bf8c      	ite	hi
90007198:	2000      	movhi	r0, #0
9000719a:	2001      	movls	r0, #1
9000719c:	45dc      	cmp	ip, fp
9000719e:	bf38      	it	cc
900071a0:	2000      	movcc	r0, #0
900071a2:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
900071a6:	900c      	str	r0, [sp, #48]	@ 0x30
900071a8:	bf98      	it	ls
900071aa:	f04f 0b01 	movls.w	fp, #1
900071ae:	9805      	ldr	r0, [sp, #20]
900071b0:	bf88      	it	hi
900071b2:	f04f 0b00 	movhi.w	fp, #0
900071b6:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
900071ba:	f00b 0b01 	and.w	fp, fp, #1
900071be:	4601      	mov	r1, r0
900071c0:	bf38      	it	cc
900071c2:	f04f 0b00 	movcc.w	fp, #0
900071c6:	4586      	cmp	lr, r0
900071c8:	bf8c      	ite	hi
900071ca:	2100      	movhi	r1, #0
900071cc:	2101      	movls	r1, #1
900071ce:	4584      	cmp	ip, r0
900071d0:	4620      	mov	r0, r4
900071d2:	bf38      	it	cc
900071d4:	2100      	movcc	r1, #0
900071d6:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
900071da:	910d      	str	r1, [sp, #52]	@ 0x34
900071dc:	bf94      	ite	ls
900071de:	2101      	movls	r1, #1
900071e0:	2100      	movhi	r1, #0
900071e2:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
900071e6:	f001 0101 	and.w	r1, r1, #1
900071ea:	bf38      	it	cc
900071ec:	2100      	movcc	r1, #0
900071ee:	910e      	str	r1, [sp, #56]	@ 0x38
900071f0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900071f2:	4571      	cmp	r1, lr
900071f4:	460b      	mov	r3, r1
900071f6:	bf34      	ite	cc
900071f8:	2300      	movcc	r3, #0
900071fa:	2301      	movcs	r3, #1
900071fc:	4561      	cmp	r1, ip
900071fe:	bf88      	it	hi
90007200:	2300      	movhi	r3, #0
90007202:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90007206:	930f      	str	r3, [sp, #60]	@ 0x3c
90007208:	bf94      	ite	ls
9000720a:	2301      	movls	r3, #1
9000720c:	2300      	movhi	r3, #0
9000720e:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
90007212:	f04f 0400 	mov.w	r4, #0
90007216:	f003 0301 	and.w	r3, r3, #1
9000721a:	bf38      	it	cc
9000721c:	2300      	movcc	r3, #0
9000721e:	9310      	str	r3, [sp, #64]	@ 0x40
90007220:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90007224:	459e      	cmp	lr, r3
90007226:	bf8c      	ite	hi
90007228:	2100      	movhi	r1, #0
9000722a:	2101      	movls	r1, #1
9000722c:	459c      	cmp	ip, r3
9000722e:	bf38      	it	cc
90007230:	2100      	movcc	r1, #0
90007232:	9105      	str	r1, [sp, #20]
90007234:	e014      	b.n	90007260 <BSP_I2C4_Init+0x294>
90007236:	bf00      	nop
90007238:	24009e68 	.word	0x24009e68
9000723c:	24009410 	.word	0x24009410
90007240:	58001c00 	.word	0x58001c00
90007244:	58024400 	.word	0x58024400
90007248:	58020c00 	.word	0x58020c00
9000724c:	3b9aca00 	.word	0x3b9aca00
90007250:	24009468 	.word	0x24009468
90007254:	24009464 	.word	0x24009464
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007258:	2c10      	cmp	r4, #16
9000725a:	44b8      	add	r8, r7
9000725c:	f000 8273 	beq.w	90007746 <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
90007260:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
90007264:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90007266:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
9000726a:	d3f5      	bcc.n	90007258 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
9000726c:	ebba 0105 	subs.w	r1, sl, r5
90007270:	bf18      	it	ne
90007272:	2101      	movne	r1, #1
90007274:	f1be 0f00 	cmp.w	lr, #0
90007278:	bf18      	it	ne
9000727a:	2100      	movne	r1, #0
9000727c:	2900      	cmp	r1, #0
9000727e:	f040 8250 	bne.w	90007722 <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007282:	45bc      	cmp	ip, r7
90007284:	bf34      	ite	cc
90007286:	2100      	movcc	r1, #0
90007288:	2101      	movcs	r1, #1
9000728a:	45be      	cmp	lr, r7
9000728c:	bf88      	it	hi
9000728e:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90007290:	45aa      	cmp	sl, r5
90007292:	bf0c      	ite	eq
90007294:	2100      	moveq	r1, #0
90007296:	f001 0101 	andne.w	r1, r1, #1
9000729a:	2900      	cmp	r1, #0
9000729c:	f000 8103 	beq.w	900074a6 <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072a0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072a4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072a8:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072aa:	46b2      	mov	sl, r6
900072ac:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072b0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072b4:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072b8:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072ba:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072bc:	f200 81aa 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
900072c0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900072c2:	9a06      	ldr	r2, [sp, #24]
900072c4:	45aa      	cmp	sl, r5
900072c6:	bf0c      	ite	eq
900072c8:	2200      	moveq	r2, #0
900072ca:	f002 0201 	andne.w	r2, r2, #1
900072ce:	2a00      	cmp	r2, #0
900072d0:	f000 8105 	beq.w	900074de <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072d4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072d8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072dc:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072de:	46b2      	mov	sl, r6
900072e0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072e4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072e8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072ec:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072ee:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072f0:	f200 8190 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
900072f4:	4611      	mov	r1, r2
900072f6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900072f8:	9a08      	ldr	r2, [sp, #32]
900072fa:	45aa      	cmp	sl, r5
900072fc:	bf0c      	ite	eq
900072fe:	2200      	moveq	r2, #0
90007300:	f002 0201 	andne.w	r2, r2, #1
90007304:	2a00      	cmp	r2, #0
90007306:	f000 8105 	beq.w	90007514 <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000730a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000730e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007312:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007314:	46b2      	mov	sl, r6
90007316:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000731a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000731e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007322:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007324:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007326:	f200 8175 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
9000732a:	4611      	mov	r1, r2
9000732c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000732e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90007330:	45aa      	cmp	sl, r5
90007332:	bf0c      	ite	eq
90007334:	2200      	moveq	r2, #0
90007336:	f002 0201 	andne.w	r2, r2, #1
9000733a:	2a00      	cmp	r2, #0
9000733c:	f000 8104 	beq.w	90007548 <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007340:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007344:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007348:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000734a:	46b2      	mov	sl, r6
9000734c:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007350:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007354:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007358:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000735a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000735c:	f200 815a 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
90007360:	4611      	mov	r1, r2
90007362:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007364:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90007366:	45aa      	cmp	sl, r5
90007368:	bf0c      	ite	eq
9000736a:	2200      	moveq	r2, #0
9000736c:	f002 0201 	andne.w	r2, r2, #1
90007370:	2a00      	cmp	r2, #0
90007372:	f000 8103 	beq.w	9000757c <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007376:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000737a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000737e:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007380:	46b2      	mov	sl, r6
90007382:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007386:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000738a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000738e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007390:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007392:	f200 813f 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
90007396:	4611      	mov	r1, r2
90007398:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000739a:	980d      	ldr	r0, [sp, #52]	@ 0x34
9000739c:	4555      	cmp	r5, sl
9000739e:	bf0c      	ite	eq
900073a0:	2000      	moveq	r0, #0
900073a2:	f000 0001 	andne.w	r0, r0, #1
900073a6:	2800      	cmp	r0, #0
900073a8:	f000 8101 	beq.w	900075ae <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073ac:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900073b0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073b4:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073b6:	46b2      	mov	sl, r6
900073b8:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073bc:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073c0:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900073c4:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073c6:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073c8:	f200 8124 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
900073cc:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900073ce:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900073d0:	4555      	cmp	r5, sl
900073d2:	bf0c      	ite	eq
900073d4:	2200      	moveq	r2, #0
900073d6:	f002 0201 	andne.w	r2, r2, #1
900073da:	2a00      	cmp	r2, #0
900073dc:	f000 8100 	beq.w	900075e0 <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073e0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900073e4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073e8:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073ea:	46b2      	mov	sl, r6
900073ec:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073f0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073f4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900073f8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073fa:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073fc:	f200 810a 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
90007400:	4610      	mov	r0, r2
90007402:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007404:	9a05      	ldr	r2, [sp, #20]
90007406:	4555      	cmp	r5, sl
90007408:	bf0c      	ite	eq
9000740a:	2200      	moveq	r2, #0
9000740c:	f002 0201 	andne.w	r2, r2, #1
90007410:	2a00      	cmp	r2, #0
90007412:	f000 8182 	beq.w	9000771a <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007416:	eb09 0189 	add.w	r1, r9, r9, lsl #2
9000741a:	f8df a360 	ldr.w	sl, [pc, #864]	@ 9000777c <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
9000741e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007422:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
90007426:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000742a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000742e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007430:	f04f 030f 	mov.w	r3, #15
90007434:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007436:	f200 80ed 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
9000743a:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
9000743c:	e70c      	b.n	90007258 <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000743e:	9a06      	ldr	r2, [sp, #24]
90007440:	4661      	mov	r1, ip
90007442:	f109 0914 	add.w	r9, r9, #20
90007446:	3201      	adds	r2, #1
90007448:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
9000744c:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
90007450:	4572      	cmp	r2, lr
90007452:	9206      	str	r2, [sp, #24]
90007454:	f040 8103 	bne.w	9000765e <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
90007458:	9b01      	ldr	r3, [sp, #4]
9000745a:	2b7f      	cmp	r3, #127	@ 0x7f
9000745c:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90007460:	d817      	bhi.n	90007492 <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007462:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90007466:	eb00 0283 	add.w	r2, r0, r3, lsl #2
9000746a:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000746e:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90007470:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007472:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007474:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007478:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000747c:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007480:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007482:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007484:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007486:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000748a:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000748c:	430b      	orrs	r3, r1
9000748e:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007492:	4621      	mov	r1, r4
90007494:	48b7      	ldr	r0, [pc, #732]	@ (90007774 <BSP_I2C4_Init+0x7a8>)
90007496:	f7ff fd79 	bl	90006f8c <MX_I2C4_Init>
9000749a:	2800      	cmp	r0, #0
9000749c:	f43f ad9f 	beq.w	90006fde <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
900074a0:	f06f 0007 	mvn.w	r0, #7
  return ret;
900074a4:	e59c      	b.n	90006fe0 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
900074a6:	4611      	mov	r1, r2
900074a8:	9a04      	ldr	r2, [sp, #16]
900074aa:	45aa      	cmp	sl, r5
900074ac:	bf0c      	ite	eq
900074ae:	2200      	moveq	r2, #0
900074b0:	f002 0201 	andne.w	r2, r2, #1
900074b4:	2a00      	cmp	r2, #0
900074b6:	f43f af04 	beq.w	900072c2 <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074ba:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074be:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074c2:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074c4:	46b2      	mov	sl, r6
900074c6:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074ca:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074ce:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074d2:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074d4:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074d6:	f200 809d 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
900074da:	4611      	mov	r1, r2
900074dc:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900074de:	9a07      	ldr	r2, [sp, #28]
900074e0:	45aa      	cmp	sl, r5
900074e2:	bf0c      	ite	eq
900074e4:	2200      	moveq	r2, #0
900074e6:	f002 0201 	andne.w	r2, r2, #1
900074ea:	2a00      	cmp	r2, #0
900074ec:	f43f af04 	beq.w	900072f8 <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074f0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074f4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074f8:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074fa:	46b2      	mov	sl, r6
900074fc:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007500:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007504:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007508:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000750a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000750c:	f200 8082 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
90007510:	4611      	mov	r1, r2
90007512:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007514:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90007516:	45aa      	cmp	sl, r5
90007518:	bf0c      	ite	eq
9000751a:	2200      	moveq	r2, #0
9000751c:	f002 0201 	andne.w	r2, r2, #1
90007520:	2a00      	cmp	r2, #0
90007522:	f43f af04 	beq.w	9000732e <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007526:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000752a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000752e:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007530:	46b2      	mov	sl, r6
90007532:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007536:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000753a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000753e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007540:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007542:	d867      	bhi.n	90007614 <BSP_I2C4_Init+0x648>
90007544:	4611      	mov	r1, r2
90007546:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007548:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000754a:	45aa      	cmp	sl, r5
9000754c:	bf0c      	ite	eq
9000754e:	2200      	moveq	r2, #0
90007550:	f002 0201 	andne.w	r2, r2, #1
90007554:	2a00      	cmp	r2, #0
90007556:	f43f af05 	beq.w	90007364 <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000755a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000755e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007562:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007564:	46b2      	mov	sl, r6
90007566:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000756a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000756e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007572:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007574:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007576:	d84d      	bhi.n	90007614 <BSP_I2C4_Init+0x648>
90007578:	4611      	mov	r1, r2
9000757a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000757c:	45aa      	cmp	sl, r5
9000757e:	bf0c      	ite	eq
90007580:	2200      	moveq	r2, #0
90007582:	f00b 0201 	andne.w	r2, fp, #1
90007586:	2a00      	cmp	r2, #0
90007588:	f43f af07 	beq.w	9000739a <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000758c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007590:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007594:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007596:	46b2      	mov	sl, r6
90007598:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000759c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075a0:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900075a4:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075a6:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075a8:	d834      	bhi.n	90007614 <BSP_I2C4_Init+0x648>
900075aa:	4611      	mov	r1, r2
900075ac:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900075ae:	980e      	ldr	r0, [sp, #56]	@ 0x38
900075b0:	4555      	cmp	r5, sl
900075b2:	bf0c      	ite	eq
900075b4:	2000      	moveq	r0, #0
900075b6:	f000 0001 	andne.w	r0, r0, #1
900075ba:	2800      	cmp	r0, #0
900075bc:	f000 80af 	beq.w	9000771e <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075c0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900075c4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075c8:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075ca:	46b2      	mov	sl, r6
900075cc:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075d0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075d4:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900075d8:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075da:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075dc:	d81a      	bhi.n	90007614 <BSP_I2C4_Init+0x648>
900075de:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900075e0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900075e2:	4555      	cmp	r5, sl
900075e4:	bf0c      	ite	eq
900075e6:	2200      	moveq	r2, #0
900075e8:	f002 0201 	andne.w	r2, r2, #1
900075ec:	2a00      	cmp	r2, #0
900075ee:	f43f af09 	beq.w	90007404 <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075f2:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900075f6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075fa:	46b2      	mov	sl, r6
900075fc:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
90007600:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007604:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007608:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000760a:	f04f 030e 	mov.w	r3, #14
9000760e:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007610:	f67f af13 	bls.w	9000743a <BSP_I2C4_Init+0x46e>
90007614:	4b58      	ldr	r3, [pc, #352]	@ (90007778 <BSP_I2C4_Init+0x7ac>)
90007616:	4650      	mov	r0, sl
90007618:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
9000761a:	4649      	mov	r1, r9
9000761c:	9a02      	ldr	r2, [sp, #8]
9000761e:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007622:	2500      	movs	r5, #0
90007624:	9f00      	ldr	r7, [sp, #0]
90007626:	f240 2657 	movw	r6, #599	@ 0x257
9000762a:	f240 4301 	movw	r3, #1025	@ 0x401
9000762e:	9506      	str	r5, [sp, #24]
90007630:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
90007634:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007636:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007638:	9501      	str	r5, [sp, #4]
9000763a:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000763e:	9408      	str	r4, [sp, #32]
90007640:	eba3 0302 	sub.w	r3, r3, r2
90007644:	bf38      	it	cc
90007646:	463e      	movcc	r6, r7
90007648:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 9000777c <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000764c:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
90007650:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007654:	f240 4a12 	movw	sl, #1042	@ 0x412
90007658:	4639      	mov	r1, r7
9000765a:	462c      	mov	r4, r5
9000765c:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000765e:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007662:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007664:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007668:	1a1a      	subs	r2, r3, r0
9000766a:	1827      	adds	r7, r4, r0
9000766c:	ea4f 0842 	mov.w	r8, r2, lsl #1
90007670:	eb0c 0200 	add.w	r2, ip, r0
90007674:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
90007678:	9207      	str	r2, [sp, #28]
9000767a:	468c      	mov	ip, r1
9000767c:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90007680:	e006      	b.n	90007690 <BSP_I2C4_Init+0x6c4>
90007682:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90007686:	4407      	add	r7, r0
90007688:	eba8 0800 	sub.w	r8, r8, r0
9000768c:	f43f aed7 	beq.w	9000743e <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007690:	f240 5314 	movw	r3, #1300	@ 0x514
90007694:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007696:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007698:	429f      	cmp	r7, r3
9000769a:	d9f2      	bls.n	90007682 <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000769c:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900076a0:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
900076a4:	d2ed      	bcs.n	90007682 <BSP_I2C4_Init+0x6b6>
900076a6:	f640 0e34 	movw	lr, #2100	@ 0x834
900076aa:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900076ac:	2200      	movs	r2, #0
900076ae:	ebae 0e03 	sub.w	lr, lr, r3
900076b2:	9b07      	ldr	r3, [sp, #28]
900076b4:	e9cd 5c02 	strd	r5, ip, [sp, #8]
900076b8:	e9cd 7804 	strd	r7, r8, [sp, #16]
900076bc:	443b      	add	r3, r7
900076be:	f8dd c004 	ldr.w	ip, [sp, #4]
900076c2:	f8dd 8018 	ldr.w	r8, [sp, #24]
900076c6:	e005      	b.n	900076d4 <BSP_I2C4_Init+0x708>
900076c8:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
900076cc:	4403      	add	r3, r0
900076ce:	eba4 0400 	sub.w	r4, r4, r0
900076d2:	d01a      	beq.n	9000770a <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900076d4:	eb0e 0103 	add.w	r1, lr, r3
900076d8:	4617      	mov	r7, r2
900076da:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
900076de:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900076e0:	42b1      	cmp	r1, r6
900076e2:	d9f1      	bls.n	900076c8 <BSP_I2C4_Init+0x6fc>
900076e4:	4555      	cmp	r5, sl
900076e6:	d8ef      	bhi.n	900076c8 <BSP_I2C4_Init+0x6fc>
            if (error < 0)
900076e8:	ea33 0123 	bics.w	r1, r3, r3, asr #32
900076ec:	bf28      	it	cs
900076ee:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
900076f0:	458b      	cmp	fp, r1
900076f2:	d9e9      	bls.n	900076c8 <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
900076f4:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900076f6:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
900076fa:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
900076fc:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900076fe:	4403      	add	r3, r0
90007700:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90007704:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007708:	d1e4      	bne.n	900076d4 <BSP_I2C4_Init+0x708>
9000770a:	f8cd c004 	str.w	ip, [sp, #4]
9000770e:	9d02      	ldr	r5, [sp, #8]
90007710:	f8dd 8014 	ldr.w	r8, [sp, #20]
90007714:	e9dd c703 	ldrd	ip, r7, [sp, #12]
90007718:	e7b3      	b.n	90007682 <BSP_I2C4_Init+0x6b6>
9000771a:	4602      	mov	r2, r0
9000771c:	e59c      	b.n	90007258 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
9000771e:	4608      	mov	r0, r1
90007720:	e655      	b.n	900073ce <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007722:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007726:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000772a:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000772c:	46b2      	mov	sl, r6
9000772e:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007732:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007736:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000773a:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000773c:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000773e:	f63f af69 	bhi.w	90007614 <BSP_I2C4_Init+0x648>
90007742:	46aa      	mov	sl, r5
90007744:	e6b0      	b.n	900074a8 <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90007746:	3501      	adds	r5, #1
90007748:	9b00      	ldr	r3, [sp, #0]
9000774a:	2d10      	cmp	r5, #16
9000774c:	441f      	add	r7, r3
9000774e:	f47f acc0 	bne.w	900070d2 <BSP_I2C4_Init+0x106>
90007752:	4693      	mov	fp, r2
90007754:	9c01      	ldr	r4, [sp, #4]
90007756:	9911      	ldr	r1, [sp, #68]	@ 0x44
90007758:	9a02      	ldr	r2, [sp, #8]
9000775a:	f1bb 0f00 	cmp.w	fp, #0
9000775e:	d003      	beq.n	90007768 <BSP_I2C4_Init+0x79c>
90007760:	4b05      	ldr	r3, [pc, #20]	@ (90007778 <BSP_I2C4_Init+0x7ac>)
90007762:	4649      	mov	r1, r9
90007764:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007768:	2900      	cmp	r1, #0
9000776a:	f43f ae92 	beq.w	90007492 <BSP_I2C4_Init+0x4c6>
9000776e:	4803      	ldr	r0, [pc, #12]	@ (9000777c <BSP_I2C4_Init+0x7b0>)
90007770:	e757      	b.n	90007622 <BSP_I2C4_Init+0x656>
90007772:	bf00      	nop
90007774:	24009410 	.word	0x24009410
90007778:	24009464 	.word	0x24009464
9000777c:	24009468 	.word	0x24009468

90007780 <BSP_I2C4_WriteReg>:
{
90007780:	b530      	push	{r4, r5, lr}
90007782:	4614      	mov	r4, r2
90007784:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007786:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000778a:	460a      	mov	r2, r1
9000778c:	9301      	str	r3, [sp, #4]
9000778e:	4601      	mov	r1, r0
90007790:	2301      	movs	r3, #1
90007792:	4809      	ldr	r0, [pc, #36]	@ (900077b8 <BSP_I2C4_WriteReg+0x38>)
90007794:	9502      	str	r5, [sp, #8]
90007796:	9400      	str	r4, [sp, #0]
90007798:	f001 ffd0 	bl	9000973c <HAL_I2C_Mem_Write>
9000779c:	b908      	cbnz	r0, 900077a2 <BSP_I2C4_WriteReg+0x22>
}
9000779e:	b005      	add	sp, #20
900077a0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900077a2:	4805      	ldr	r0, [pc, #20]	@ (900077b8 <BSP_I2C4_WriteReg+0x38>)
900077a4:	f002 fa3c 	bl	90009c20 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900077a8:	2804      	cmp	r0, #4
900077aa:	bf14      	ite	ne
900077ac:	f06f 0003 	mvnne.w	r0, #3
900077b0:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900077b4:	e7f3      	b.n	9000779e <BSP_I2C4_WriteReg+0x1e>
900077b6:	bf00      	nop
900077b8:	24009410 	.word	0x24009410

900077bc <BSP_I2C4_ReadReg>:
{
900077bc:	b530      	push	{r4, r5, lr}
900077be:	4614      	mov	r4, r2
900077c0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900077c2:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900077c6:	460a      	mov	r2, r1
900077c8:	9301      	str	r3, [sp, #4]
900077ca:	4601      	mov	r1, r0
900077cc:	2301      	movs	r3, #1
900077ce:	4809      	ldr	r0, [pc, #36]	@ (900077f4 <BSP_I2C4_ReadReg+0x38>)
900077d0:	9502      	str	r5, [sp, #8]
900077d2:	9400      	str	r4, [sp, #0]
900077d4:	f002 f8e0 	bl	90009998 <HAL_I2C_Mem_Read>
900077d8:	b908      	cbnz	r0, 900077de <BSP_I2C4_ReadReg+0x22>
}
900077da:	b005      	add	sp, #20
900077dc:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900077de:	4805      	ldr	r0, [pc, #20]	@ (900077f4 <BSP_I2C4_ReadReg+0x38>)
900077e0:	f002 fa1e 	bl	90009c20 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900077e4:	2804      	cmp	r0, #4
900077e6:	bf14      	ite	ne
900077e8:	f06f 0003 	mvnne.w	r0, #3
900077ec:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900077f0:	e7f3      	b.n	900077da <BSP_I2C4_ReadReg+0x1e>
900077f2:	bf00      	nop
900077f4:	24009410 	.word	0x24009410

900077f8 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900077f8:	f000 baa0 	b.w	90007d3c <HAL_GetTick>

900077fc <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
900077fc:	b970      	cbnz	r0, 9000781c <BSP_SDRAM_DeInit+0x20>
{
900077fe:	b510      	push	{r4, lr}
90007800:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90007802:	4808      	ldr	r0, [pc, #32]	@ (90007824 <BSP_SDRAM_DeInit+0x28>)
90007804:	f006 fc58 	bl	9000e0b8 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007808:	207a      	movs	r0, #122	@ 0x7a
9000780a:	f001 f97f 	bl	90008b0c <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000780e:	4b06      	ldr	r3, [pc, #24]	@ (90007828 <BSP_SDRAM_DeInit+0x2c>)
90007810:	4806      	ldr	r0, [pc, #24]	@ (9000782c <BSP_SDRAM_DeInit+0x30>)
90007812:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007814:	f004 f848 	bl	9000b8a8 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007818:	4620      	mov	r0, r4
}
9000781a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000781c:	f06f 0001 	mvn.w	r0, #1
}
90007820:	4770      	bx	lr
90007822:	bf00      	nop
90007824:	24009f64 	.word	0x24009f64
90007828:	52000040 	.word	0x52000040
9000782c:	24009e6c 	.word	0x24009e6c

90007830 <MX_SDRAM_BANK2_Init>:
{
90007830:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90007832:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007834:	2200      	movs	r2, #0
{
90007836:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007838:	4c13      	ldr	r4, [pc, #76]	@ (90007888 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000783a:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000783c:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000783e:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90007840:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90007842:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007844:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007846:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007848:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
9000784c:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000784e:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007850:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90007852:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007854:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007856:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000785a:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000785c:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007860:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007862:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007864:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007868:	2204      	movs	r2, #4
9000786a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000786e:	2202      	movs	r2, #2
90007870:	2302      	movs	r3, #2
90007872:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007876:	4b05      	ldr	r3, [pc, #20]	@ (9000788c <MX_SDRAM_BANK2_Init+0x5c>)
90007878:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000787a:	f006 fbf3 	bl	9000e064 <HAL_SDRAM_Init>
}
9000787e:	3800      	subs	r0, #0
90007880:	bf18      	it	ne
90007882:	2001      	movne	r0, #1
90007884:	b009      	add	sp, #36	@ 0x24
90007886:	bd30      	pop	{r4, r5, pc}
90007888:	24009f64 	.word	0x24009f64
9000788c:	52004140 	.word	0x52004140

90007890 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90007890:	2800      	cmp	r0, #0
90007892:	f040 80cd 	bne.w	90007a30 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007896:	4b69      	ldr	r3, [pc, #420]	@ (90007a3c <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007898:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
9000789a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000789e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
900078a2:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
900078a4:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
900078a8:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
900078aa:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900078ae:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900078b0:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
900078b2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900078b4:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900078b8:	4c61      	ldr	r4, [pc, #388]	@ (90007a40 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900078ba:	4e62      	ldr	r6, [pc, #392]	@ (90007a44 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900078bc:	9200      	str	r2, [sp, #0]
900078be:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
900078c0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900078c4:	430a      	orrs	r2, r1
900078c6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900078ca:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900078ce:	400a      	ands	r2, r1
900078d0:	9201      	str	r2, [sp, #4]
900078d2:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
900078d4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900078d8:	f042 0208 	orr.w	r2, r2, #8
900078dc:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900078e0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900078e4:	f002 0208 	and.w	r2, r2, #8
900078e8:	9202      	str	r2, [sp, #8]
900078ea:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900078ec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900078f0:	f042 0210 	orr.w	r2, r2, #16
900078f4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900078f8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900078fc:	f002 0210 	and.w	r2, r2, #16
90007900:	9203      	str	r2, [sp, #12]
90007902:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007904:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007908:	f042 0220 	orr.w	r2, r2, #32
9000790c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007910:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007914:	f002 0220 	and.w	r2, r2, #32
90007918:	9204      	str	r2, [sp, #16]
9000791a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000791c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007920:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007924:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007928:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000792c:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90007930:	9205      	str	r2, [sp, #20]
90007932:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007934:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007938:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000793c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007940:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007942:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007946:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007948:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000794c:	483e      	ldr	r0, [pc, #248]	@ (90007a48 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
9000794e:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007950:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007952:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007956:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007958:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000795a:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000795c:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007960:	f001 faee 	bl	90008f40 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007964:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007968:	a907      	add	r1, sp, #28
9000796a:	4838      	ldr	r0, [pc, #224]	@ (90007a4c <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000796c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000796e:	f001 fae7 	bl	90008f40 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007972:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007976:	a907      	add	r1, sp, #28
90007978:	4835      	ldr	r0, [pc, #212]	@ (90007a50 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000797a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000797c:	f001 fae0 	bl	90008f40 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007980:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007984:	a907      	add	r1, sp, #28
90007986:	4833      	ldr	r0, [pc, #204]	@ (90007a54 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007988:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000798a:	f001 fad9 	bl	90008f40 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000798e:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007990:	a907      	add	r1, sp, #28
90007992:	4831      	ldr	r0, [pc, #196]	@ (90007a58 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007994:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007996:	f001 fad3 	bl	90008f40 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000799a:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000799c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900079a0:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
900079a4:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900079a6:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
900079a8:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900079aa:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900079ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900079b0:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900079b2:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900079b4:	4a29      	ldr	r2, [pc, #164]	@ (90007a5c <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900079b6:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900079b8:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900079ba:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900079bc:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
900079c0:	f640 0308 	movw	r3, #2056	@ 0x808
900079c4:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900079c6:	2320      	movs	r3, #32
900079c8:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900079ca:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
900079ce:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900079d2:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
900079d4:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
900079d8:	f003 ff66 	bl	9000b8a8 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
900079dc:	4620      	mov	r0, r4
900079de:	f003 fee9 	bl	9000b7b4 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
900079e2:	462a      	mov	r2, r5
900079e4:	210f      	movs	r1, #15
900079e6:	207a      	movs	r0, #122	@ 0x7a
900079e8:	f001 f846 	bl	90008a78 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
900079ec:	207a      	movs	r0, #122	@ 0x7a
900079ee:	f001 f87f 	bl	90008af0 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
900079f2:	2210      	movs	r2, #16
900079f4:	2104      	movs	r1, #4
900079f6:	4630      	mov	r0, r6
900079f8:	f7ff ff1a 	bl	90007830 <MX_SDRAM_BANK2_Init>
900079fc:	4603      	mov	r3, r0
900079fe:	b9d0      	cbnz	r0, 90007a36 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007a00:	4917      	ldr	r1, [pc, #92]	@ (90007a60 <BSP_SDRAM_Init+0x1d0>)
90007a02:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007a04:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007a06:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007a08:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007a0a:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90007a0e:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007a10:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007a14:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007a18:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007a1c:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007a20:	f7ff fa30 	bl	90006e84 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007a24:	2800      	cmp	r0, #0
90007a26:	bf18      	it	ne
90007a28:	f06f 0004 	mvnne.w	r0, #4
}
90007a2c:	b00d      	add	sp, #52	@ 0x34
90007a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007a30:	f06f 0001 	mvn.w	r0, #1
}
90007a34:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007a36:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
90007a3a:	e7f7      	b.n	90007a2c <BSP_SDRAM_Init+0x19c>
90007a3c:	58024400 	.word	0x58024400
90007a40:	24009ed8 	.word	0x24009ed8
90007a44:	24009f64 	.word	0x24009f64
90007a48:	58020c00 	.word	0x58020c00
90007a4c:	58021000 	.word	0x58021000
90007a50:	58021400 	.word	0x58021400
90007a54:	58021800 	.word	0x58021800
90007a58:	58021c00 	.word	0x58021c00
90007a5c:	52000040 	.word	0x52000040
90007a60:	24009f44 	.word	0x24009f44

90007a64 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007a68:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007a6a:	2800      	cmp	r0, #0
90007a6c:	d16b      	bne.n	90007b46 <BSP_TS_Init+0xe2>
90007a6e:	680b      	ldr	r3, [r1, #0]
90007a70:	460d      	mov	r5, r1
90007a72:	1e5a      	subs	r2, r3, #1
90007a74:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90007a78:	d265      	bcs.n	90007b46 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007a7a:	684a      	ldr	r2, [r1, #4]
90007a7c:	1e51      	subs	r1, r2, #1
90007a7e:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90007a82:	d260      	bcs.n	90007b46 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007a84:	4293      	cmp	r3, r2
90007a86:	bf28      	it	cs
90007a88:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007a8a:	68ea      	ldr	r2, [r5, #12]
90007a8c:	429a      	cmp	r2, r3
90007a8e:	d85a      	bhi.n	90007b46 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90007a90:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90007a92:	4b31      	ldr	r3, [pc, #196]	@ (90007b58 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007a94:	4c31      	ldr	r4, [pc, #196]	@ (90007b5c <BSP_TS_Init+0xf8>)
90007a96:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007a98:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007a9c:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007a9e:	4a30      	ldr	r2, [pc, #192]	@ (90007b60 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007aa0:	4b30      	ldr	r3, [pc, #192]	@ (90007b64 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007aa2:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007aa4:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007aa6:	4a30      	ldr	r2, [pc, #192]	@ (90007b68 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007aa8:	4b30      	ldr	r3, [pc, #192]	@ (90007b6c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007aaa:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007aac:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007aae:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007ab0:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007ab2:	f7ff f939 	bl	90006d28 <FT5336_RegisterBusIO>
90007ab6:	2800      	cmp	r0, #0
90007ab8:	d14b      	bne.n	90007b52 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007aba:	a901      	add	r1, sp, #4
90007abc:	4620      	mov	r0, r4
90007abe:	f7ff f829 	bl	90006b14 <FT5336_ReadID>
90007ac2:	2800      	cmp	r0, #0
90007ac4:	d145      	bne.n	90007b52 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007ac6:	9b01      	ldr	r3, [sp, #4]
90007ac8:	2b51      	cmp	r3, #81	@ 0x51
90007aca:	d142      	bne.n	90007b52 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007acc:	4b28      	ldr	r3, [pc, #160]	@ (90007b70 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007ace:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90007ad0:	4f28      	ldr	r7, [pc, #160]	@ (90007b74 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007ad2:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90007b7c <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007ad6:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007ad8:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007adc:	681b      	ldr	r3, [r3, #0]
90007ade:	4798      	blx	r3
90007ae0:	4606      	mov	r6, r0
90007ae2:	2800      	cmp	r0, #0
90007ae4:	d135      	bne.n	90007b52 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007ae6:	4c24      	ldr	r4, [pc, #144]	@ (90007b78 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007ae8:	a902      	add	r1, sp, #8
90007aea:	6838      	ldr	r0, [r7, #0]
90007aec:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007af0:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007af4:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007af6:	e9c4 7200 	strd	r7, r2, [r4]
90007afa:	68aa      	ldr	r2, [r5, #8]
90007afc:	60a2      	str	r2, [r4, #8]
90007afe:	68ea      	ldr	r2, [r5, #12]
90007b00:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007b02:	4798      	blx	r3
90007b04:	2800      	cmp	r0, #0
90007b06:	db18      	blt.n	90007b3a <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007b08:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007b0c:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007b10:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007b12:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007b16:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007b18:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007b1a:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007b1c:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007b1e:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007b22:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007b26:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007b2a:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007b2e:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007b30:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90007b32:	4630      	mov	r0, r6
90007b34:	b008      	add	sp, #32
90007b36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007b3a:	f06f 0604 	mvn.w	r6, #4
}
90007b3e:	4630      	mov	r0, r6
90007b40:	b008      	add	sp, #32
90007b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007b46:	f06f 0601 	mvn.w	r6, #1
}
90007b4a:	4630      	mov	r0, r6
90007b4c:	b008      	add	sp, #32
90007b4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007b52:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
90007b56:	e7ec      	b.n	90007b32 <BSP_TS_Init+0xce>
90007b58:	90006fcd 	.word	0x90006fcd
90007b5c:	24009f98 	.word	0x24009f98
90007b60:	90006f39 	.word	0x90006f39
90007b64:	900077bd 	.word	0x900077bd
90007b68:	90007781 	.word	0x90007781
90007b6c:	900077f9 	.word	0x900077f9
90007b70:	24000044 	.word	0x24000044
90007b74:	2400a000 	.word	0x2400a000
90007b78:	24009fc0 	.word	0x24009fc0
90007b7c:	2400a004 	.word	0x2400a004

90007b80 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007b80:	2800      	cmp	r0, #0
90007b82:	d154      	bne.n	90007c2e <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007b84:	4b2b      	ldr	r3, [pc, #172]	@ (90007c34 <BSP_TS_GetState+0xb4>)
90007b86:	4a2c      	ldr	r2, [pc, #176]	@ (90007c38 <BSP_TS_GetState+0xb8>)
90007b88:	681b      	ldr	r3, [r3, #0]
90007b8a:	6810      	ldr	r0, [r2, #0]
90007b8c:	691b      	ldr	r3, [r3, #16]
{
90007b8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007b92:	b084      	sub	sp, #16
90007b94:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007b96:	a901      	add	r1, sp, #4
90007b98:	4798      	blx	r3
90007b9a:	2800      	cmp	r0, #0
90007b9c:	db3f      	blt.n	90007c1e <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007b9e:	4b27      	ldr	r3, [pc, #156]	@ (90007c3c <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90007ba0:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007ba2:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007ba4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007ba6:	b930      	cbnz	r0, 90007bb6 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007ba8:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007baa:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90007bae:	2000      	movs	r0, #0
}
90007bb0:	b004      	add	sp, #16
90007bb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007bb6:	689f      	ldr	r7, [r3, #8]
90007bb8:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90007bba:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007bbe:	d433      	bmi.n	90007c28 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007bc0:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90007bc2:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007bc4:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007bc8:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007bcc:	d003      	beq.n	90007bd6 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007bce:	f10e 32ff 	add.w	r2, lr, #4294967295	@ 0xffffffff
90007bd2:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007bd6:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007bda:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007bdc:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007bde:	bf48      	it	mi
90007be0:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007be4:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007be8:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007bea:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007bec:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007bf0:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007bf4:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007bf8:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007bfa:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007bfc:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007bfe:	bf8c      	ite	hi
90007c00:	1b90      	subhi	r0, r2, r6
90007c02:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007c04:	42a9      	cmp	r1, r5
90007c06:	bf8c      	ite	hi
90007c08:	1b4f      	subhi	r7, r1, r5
90007c0a:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007c0c:	42b8      	cmp	r0, r7
90007c0e:	bf38      	it	cc
90007c10:	4638      	movcc	r0, r7
90007c12:	68df      	ldr	r7, [r3, #12]
90007c14:	4287      	cmp	r7, r0
90007c16:	d2c8      	bcs.n	90007baa <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007c18:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007c1a:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007c1c:	e7c7      	b.n	90007bae <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007c1e:	f06f 0004 	mvn.w	r0, #4
}
90007c22:	b004      	add	sp, #16
90007c24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007c28:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007c2a:	4642      	mov	r2, r8
90007c2c:	e7ca      	b.n	90007bc4 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90007c2e:	f06f 0001 	mvn.w	r0, #1
}
90007c32:	4770      	bx	lr
90007c34:	2400a004 	.word	0x2400a004
90007c38:	2400a000 	.word	0x2400a000
90007c3c:	24009fc0 	.word	0x24009fc0

90007c40 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007c40:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007c42:	4c19      	ldr	r4, [pc, #100]	@ (90007ca8 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007c44:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007c46:	4b19      	ldr	r3, [pc, #100]	@ (90007cac <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007c48:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007c4c:	4818      	ldr	r0, [pc, #96]	@ (90007cb0 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007c4e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
90007c52:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90007c56:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007c58:	4c16      	ldr	r4, [pc, #88]	@ (90007cb4 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007c5a:	f041 0101 	orr.w	r1, r1, #1
90007c5e:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007c60:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007c62:	6819      	ldr	r1, [r3, #0]
90007c64:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007c66:	4914      	ldr	r1, [pc, #80]	@ (90007cb8 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007c68:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007c6a:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007c6c:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90007c6e:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007c70:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90007c72:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007c74:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90007c76:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90007c78:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90007c7a:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007c7c:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90007c7e:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007c80:	6818      	ldr	r0, [r3, #0]
90007c82:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
90007c86:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007c88:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007c8a:	6823      	ldr	r3, [r4, #0]
90007c8c:	4019      	ands	r1, r3
90007c8e:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
90007c92:	d203      	bcs.n	90007c9c <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007c94:	4b09      	ldr	r3, [pc, #36]	@ (90007cbc <SystemInit+0x7c>)
90007c96:	2201      	movs	r2, #1
90007c98:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007c9c:	4a08      	ldr	r2, [pc, #32]	@ (90007cc0 <SystemInit+0x80>)
90007c9e:	4b02      	ldr	r3, [pc, #8]	@ (90007ca8 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007ca0:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007ca4:	609a      	str	r2, [r3, #8]
}
90007ca6:	4770      	bx	lr
90007ca8:	e000ed00 	.word	0xe000ed00
90007cac:	58024400 	.word	0x58024400
90007cb0:	eaf6ed7f 	.word	0xeaf6ed7f
90007cb4:	5c001000 	.word	0x5c001000
90007cb8:	ffff0000 	.word	0xffff0000
90007cbc:	51008000 	.word	0x51008000
90007cc0:	90000000 	.word	0x90000000

90007cc4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007cc4:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007cc6:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007cc8:	4c12      	ldr	r4, [pc, #72]	@ (90007d14 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007cca:	f000 fec3 	bl	90008a54 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007cce:	f004 fb41 	bl	9000c354 <HAL_RCC_GetSysClockFreq>
90007cd2:	4b11      	ldr	r3, [pc, #68]	@ (90007d18 <HAL_Init+0x54>)
90007cd4:	4911      	ldr	r1, [pc, #68]	@ (90007d1c <HAL_Init+0x58>)
90007cd6:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007cd8:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007cda:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007cde:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ce2:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ce4:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ce6:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007cea:	490d      	ldr	r1, [pc, #52]	@ (90007d20 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007cec:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007cf0:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007cf2:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007cf6:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007cf8:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007cfa:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007cfc:	f7fc febc 	bl	90004a78 <HAL_InitTick>
90007d00:	b110      	cbz	r0, 90007d08 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007d02:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007d04:	4620      	mov	r0, r4
90007d06:	bd10      	pop	{r4, pc}
90007d08:	4604      	mov	r4, r0
  HAL_MspInit();
90007d0a:	f7fc fba9 	bl	90004460 <HAL_MspInit>
}
90007d0e:	4620      	mov	r0, r4
90007d10:	bd10      	pop	{r4, pc}
90007d12:	bf00      	nop
90007d14:	24000074 	.word	0x24000074
90007d18:	58024400 	.word	0x58024400
90007d1c:	9002df9c 	.word	0x9002df9c
90007d20:	24000078 	.word	0x24000078

90007d24 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007d24:	4a03      	ldr	r2, [pc, #12]	@ (90007d34 <HAL_IncTick+0x10>)
90007d26:	4b04      	ldr	r3, [pc, #16]	@ (90007d38 <HAL_IncTick+0x14>)
90007d28:	6811      	ldr	r1, [r2, #0]
90007d2a:	781b      	ldrb	r3, [r3, #0]
90007d2c:	440b      	add	r3, r1
90007d2e:	6013      	str	r3, [r2, #0]
}
90007d30:	4770      	bx	lr
90007d32:	bf00      	nop
90007d34:	2400a008 	.word	0x2400a008
90007d38:	2400007c 	.word	0x2400007c

90007d3c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007d3c:	4b01      	ldr	r3, [pc, #4]	@ (90007d44 <HAL_GetTick+0x8>)
90007d3e:	6818      	ldr	r0, [r3, #0]
}
90007d40:	4770      	bx	lr
90007d42:	bf00      	nop
90007d44:	2400a008 	.word	0x2400a008

90007d48 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007d48:	4b01      	ldr	r3, [pc, #4]	@ (90007d50 <HAL_GetREVID+0x8>)
90007d4a:	6818      	ldr	r0, [r3, #0]
}
90007d4c:	0c00      	lsrs	r0, r0, #16
90007d4e:	4770      	bx	lr
90007d50:	5c001000 	.word	0x5c001000

90007d54 <HAL_SYSCFG_AnalogSwitchConfig>:
{
  /* Check the parameter */
  assert_param(IS_SYSCFG_ANALOG_SWITCH(SYSCFG_AnalogSwitch));
  assert_param(IS_SYSCFG_SWITCH_STATE(SYSCFG_SwitchState));

  MODIFY_REG(SYSCFG->PMCR, (uint32_t) SYSCFG_AnalogSwitch, (uint32_t)(SYSCFG_SwitchState));
90007d54:	4a03      	ldr	r2, [pc, #12]	@ (90007d64 <HAL_SYSCFG_AnalogSwitchConfig+0x10>)
90007d56:	6853      	ldr	r3, [r2, #4]
90007d58:	ea23 0300 	bic.w	r3, r3, r0
90007d5c:	430b      	orrs	r3, r1
90007d5e:	6053      	str	r3, [r2, #4]
}
90007d60:	4770      	bx	lr
90007d62:	bf00      	nop
90007d64:	58000400 	.word	0x58000400

90007d68 <HAL_ADC_PollForConversion>:
{
  uint32_t tickstart;
  uint32_t tmp_Flag_End;
  uint32_t tmp_cfgr;
  const ADC_TypeDef *tmpADC_Master;
  uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
90007d68:	4b3c      	ldr	r3, [pc, #240]	@ (90007e5c <HAL_ADC_PollForConversion+0xf4>)
90007d6a:	6802      	ldr	r2, [r0, #0]
90007d6c:	429a      	cmp	r2, r3
{
90007d6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007d72:	4605      	mov	r5, r0
90007d74:	460e      	mov	r6, r1
  uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
90007d76:	d051      	beq.n	90007e1c <HAL_ADC_PollForConversion+0xb4>
90007d78:	f503 7380 	add.w	r3, r3, #256	@ 0x100
90007d7c:	429a      	cmp	r2, r3
90007d7e:	d04d      	beq.n	90007e1c <HAL_ADC_PollForConversion+0xb4>
90007d80:	4937      	ldr	r1, [pc, #220]	@ (90007e60 <HAL_ADC_PollForConversion+0xf8>)

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* If end of conversion selected to end of sequence conversions */
  if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
90007d82:	692c      	ldr	r4, [r5, #16]
  *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
  *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
  */
__STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
{
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
90007d84:	688f      	ldr	r7, [r1, #8]
90007d86:	2c08      	cmp	r4, #8
90007d88:	f007 071f 	and.w	r7, r7, #31
90007d8c:	d009      	beq.n	90007da2 <HAL_ADC_PollForConversion+0x3a>
    /* each conversion:                                                       */
    /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
    /* several ranks and polling for end of each conversion.                  */
    /* For code simplicity sake, this particular case is generalized to       */
    /* ADC configured in DMA mode and and polling for end of each conversion. */
    if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
90007d8e:	f240 2321 	movw	r3, #545	@ 0x221
90007d92:	40fb      	lsrs	r3, r7
90007d94:	07d8      	lsls	r0, r3, #31
90007d96:	d44e      	bmi.n	90007e36 <HAL_ADC_PollForConversion+0xce>
  *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
  *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
  */
__STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
{
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DAMDF));
90007d98:	688b      	ldr	r3, [r1, #8]
      }
    }
    else
    {
      /* Check ADC DMA mode in multimode on ADC group regular */
      if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_DMA_EACH_ADC)
90007d9a:	f413 4f40 	tst.w	r3, #49152	@ 0xc000
90007d9e:	d14d      	bne.n	90007e3c <HAL_ADC_PollForConversion+0xd4>
        tmp_Flag_End = (ADC_FLAG_EOC);
90007da0:	2404      	movs	r4, #4
      }
    }
  }

  /* Get tick count */
  tickstart = HAL_GetTick();
90007da2:	f7ff ffcb 	bl	90007d3c <HAL_GetTick>
90007da6:	1c73      	adds	r3, r6, #1
90007da8:	4680      	mov	r8, r0

  /* Wait until End of unitary conversion or sequence conversions flag is raised */
  while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
90007daa:	682a      	ldr	r2, [r5, #0]
90007dac:	d12b      	bne.n	90007e06 <HAL_ADC_PollForConversion+0x9e>
90007dae:	6813      	ldr	r3, [r2, #0]
90007db0:	4223      	tst	r3, r4
90007db2:	d0fc      	beq.n	90007dae <HAL_ADC_PollForConversion+0x46>
      }
    }
  }

  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
90007db4:	6d6b      	ldr	r3, [r5, #84]	@ 0x54
90007db6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90007dba:	656b      	str	r3, [r5, #84]	@ 0x54
  return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1UL : 0UL);
90007dbc:	68d3      	ldr	r3, [r2, #12]
90007dbe:	f413 6f40 	tst.w	r3, #3072	@ 0xc00
90007dc2:	d10f      	bne.n	90007de4 <HAL_ADC_PollForConversion+0x7c>

  /* Determine whether any further conversion upcoming on group regular       */
  /* by external trigger, continuous mode or scan sequence on going.          */
  if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
      && (hadc->Init.ContinuousConvMode == DISABLE)
90007dc4:	7d6b      	ldrb	r3, [r5, #21]
90007dc6:	b96b      	cbnz	r3, 90007de4 <HAL_ADC_PollForConversion+0x7c>
     )
  {
    /* Check whether end of sequence is reached */
    if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
90007dc8:	6813      	ldr	r3, [r2, #0]
90007dca:	071e      	lsls	r6, r3, #28
90007dcc:	d50a      	bpl.n	90007de4 <HAL_ADC_PollForConversion+0x7c>
    {
      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
90007dce:	6d6b      	ldr	r3, [r5, #84]	@ 0x54
90007dd0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007dd4:	656b      	str	r3, [r5, #84]	@ 0x54

      if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
90007dd6:	6d6b      	ldr	r3, [r5, #84]	@ 0x54
90007dd8:	04d8      	lsls	r0, r3, #19
90007dda:	d403      	bmi.n	90007de4 <HAL_ADC_PollForConversion+0x7c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
90007ddc:	6d6b      	ldr	r3, [r5, #84]	@ 0x54
90007dde:	f043 0301 	orr.w	r3, r3, #1
90007de2:	656b      	str	r3, [r5, #84]	@ 0x54
  }

  /* Get relevant register CFGR in ADC instance of ADC master or slave        */
  /* in function of multimode state (for devices with multimode               */
  /* available).                                                              */
  if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
90007de4:	4b1f      	ldr	r3, [pc, #124]	@ (90007e64 <HAL_ADC_PollForConversion+0xfc>)
90007de6:	429a      	cmp	r2, r3
90007de8:	d01a      	beq.n	90007e20 <HAL_ADC_PollForConversion+0xb8>
    tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
    tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
  }

  /* Clear polled flag */
  if (tmp_Flag_End == ADC_FLAG_EOS)
90007dea:	2c08      	cmp	r4, #8
    tmp_cfgr = READ_REG(hadc->Instance->CFGR);
90007dec:	68d3      	ldr	r3, [r2, #12]
  if (tmp_Flag_End == ADC_FLAG_EOS)
90007dee:	d020      	beq.n	90007e32 <HAL_ADC_PollForConversion+0xca>
  else
  {
    /* Clear end of conversion EOC flag of regular group if low power feature */
    /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
    /* until data register is read using function HAL_ADC_GetValue().         */
    if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
90007df0:	045b      	lsls	r3, r3, #17
90007df2:	d401      	bmi.n	90007df8 <HAL_ADC_PollForConversion+0x90>
    {
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
90007df4:	230c      	movs	r3, #12
90007df6:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return function status */
  return HAL_OK;
90007df8:	2000      	movs	r0, #0
}
90007dfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
90007dfe:	b916      	cbnz	r6, 90007e06 <HAL_ADC_PollForConversion+0x9e>
        if((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
90007e00:	6813      	ldr	r3, [r2, #0]
90007e02:	4023      	ands	r3, r4
90007e04:	d021      	beq.n	90007e4a <HAL_ADC_PollForConversion+0xe2>
  while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
90007e06:	6813      	ldr	r3, [r2, #0]
90007e08:	4223      	tst	r3, r4
90007e0a:	d1d3      	bne.n	90007db4 <HAL_ADC_PollForConversion+0x4c>
      if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
90007e0c:	f7ff ff96 	bl	90007d3c <HAL_GetTick>
90007e10:	eba0 0008 	sub.w	r0, r0, r8
  while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
90007e14:	682a      	ldr	r2, [r5, #0]
      if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
90007e16:	42b0      	cmp	r0, r6
90007e18:	d9f1      	bls.n	90007dfe <HAL_ADC_PollForConversion+0x96>
90007e1a:	e7f1      	b.n	90007e00 <HAL_ADC_PollForConversion+0x98>
  uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
90007e1c:	4912      	ldr	r1, [pc, #72]	@ (90007e68 <HAL_ADC_PollForConversion+0x100>)
90007e1e:	e7b0      	b.n	90007d82 <HAL_ADC_PollForConversion+0x1a>
90007e20:	f240 2321 	movw	r3, #545	@ 0x221
90007e24:	40fb      	lsrs	r3, r7
90007e26:	07d9      	lsls	r1, r3, #31
90007e28:	d4df      	bmi.n	90007dea <HAL_ADC_PollForConversion+0x82>
    tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
90007e2a:	4b0c      	ldr	r3, [pc, #48]	@ (90007e5c <HAL_ADC_PollForConversion+0xf4>)
  if (tmp_Flag_End == ADC_FLAG_EOS)
90007e2c:	2c08      	cmp	r4, #8
    tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
90007e2e:	68db      	ldr	r3, [r3, #12]
  if (tmp_Flag_End == ADC_FLAG_EOS)
90007e30:	d1de      	bne.n	90007df0 <HAL_ADC_PollForConversion+0x88>
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
90007e32:	6014      	str	r4, [r2, #0]
90007e34:	e7e0      	b.n	90007df8 <HAL_ADC_PollForConversion+0x90>
      if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0) != 0UL)
90007e36:	68d3      	ldr	r3, [r2, #12]
90007e38:	07da      	lsls	r2, r3, #31
90007e3a:	d5b1      	bpl.n	90007da0 <HAL_ADC_PollForConversion+0x38>
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
90007e3c:	6d6b      	ldr	r3, [r5, #84]	@ 0x54
        return HAL_ERROR;
90007e3e:	2001      	movs	r0, #1
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
90007e40:	f043 0320 	orr.w	r3, r3, #32
90007e44:	656b      	str	r3, [r5, #84]	@ 0x54
}
90007e46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
90007e4a:	6d6a      	ldr	r2, [r5, #84]	@ 0x54
          return HAL_TIMEOUT;
90007e4c:	2003      	movs	r0, #3
          __HAL_UNLOCK(hadc);
90007e4e:	f885 3050 	strb.w	r3, [r5, #80]	@ 0x50
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
90007e52:	f042 0204 	orr.w	r2, r2, #4
90007e56:	656a      	str	r2, [r5, #84]	@ 0x54
          return HAL_TIMEOUT;
90007e58:	e7cf      	b.n	90007dfa <HAL_ADC_PollForConversion+0x92>
90007e5a:	bf00      	nop
90007e5c:	40022000 	.word	0x40022000
90007e60:	58026300 	.word	0x58026300
90007e64:	40022100 	.word	0x40022100
90007e68:	40022300 	.word	0x40022300

90007e6c <HAL_ADC_GetValue>:

  /* Note: EOC flag is not cleared here by software because automatically     */
  /*       cleared by hardware when reading register DR.                      */

  /* Return ADC converted value */
  return hadc->Instance->DR;
90007e6c:	6803      	ldr	r3, [r0, #0]
90007e6e:	6c18      	ldr	r0, [r3, #64]	@ 0x40
}
90007e70:	4770      	bx	lr
90007e72:	bf00      	nop

90007e74 <HAL_ADC_ConfigChannel>:
  * @param hadc ADC handle
  * @param sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
90007e74:	b5f0      	push	{r4, r5, r6, r7, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  uint32_t tmpOffsetShifted;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0;
90007e76:	2200      	movs	r2, #0
{
90007e78:	b083      	sub	sp, #12
  __IO uint32_t wait_loop_index = 0;
90007e7a:	9201      	str	r2, [sp, #4]
    }
#endif
  }

  /* Process locked */
  __HAL_LOCK(hadc);
90007e7c:	f890 2050 	ldrb.w	r2, [r0, #80]	@ 0x50
90007e80:	2a01      	cmp	r2, #1
90007e82:	f000 8138 	beq.w	900080f6 <HAL_ADC_ConfigChannel+0x282>
90007e86:	4603      	mov	r3, r0
90007e88:	2001      	movs	r0, #1
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel rank                                                          */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
90007e8a:	681a      	ldr	r2, [r3, #0]
  __HAL_LOCK(hadc);
90007e8c:	f883 0050 	strb.w	r0, [r3, #80]	@ 0x50
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
{
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
90007e90:	6894      	ldr	r4, [r2, #8]
90007e92:	0764      	lsls	r4, r4, #29
90007e94:	d443      	bmi.n	90007f1e <HAL_ADC_ConfigChannel+0xaa>
      /* ADC channels preselection */
      hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
    }
#else
    /* ADC channels preselection */
    hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
90007e96:	680c      	ldr	r4, [r1, #0]
90007e98:	f3c4 0513 	ubfx	r5, r4, #0, #20
90007e9c:	f3c4 6e84 	ubfx	lr, r4, #26, #5
90007ea0:	2d00      	cmp	r5, #0
90007ea2:	f040 809e 	bne.w	90007fe2 <HAL_ADC_ConfigChannel+0x16e>
90007ea6:	fa00 f00e 	lsl.w	r0, r0, lr
90007eaa:	69d5      	ldr	r5, [r2, #28]
#endif /* ADC_VER_V5_V90 */

    /* Set ADC group regular sequence: channel on the selected scan sequence rank */
    LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
90007eac:	684c      	ldr	r4, [r1, #4]
    hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
90007eae:	4328      	orrs	r0, r5
  MODIFY_REG(*preg,
90007eb0:	251f      	movs	r5, #31
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
90007eb2:	ea4f 1c94 	mov.w	ip, r4, lsr #6
90007eb6:	61d0      	str	r0, [r2, #28]
  MODIFY_REG(*preg,
90007eb8:	f004 001f 	and.w	r0, r4, #31
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
90007ebc:	f00c 040c 	and.w	r4, ip, #12
90007ec0:	f102 0c30 	add.w	ip, r2, #48	@ 0x30
  MODIFY_REG(*preg,
90007ec4:	fa0e fe00 	lsl.w	lr, lr, r0
90007ec8:	4085      	lsls	r5, r0
90007eca:	f85c 0004 	ldr.w	r0, [ip, r4]
90007ece:	ea20 0005 	bic.w	r0, r0, r5
90007ed2:	ea40 000e 	orr.w	r0, r0, lr
90007ed6:	f84c 0004 	str.w	r0, [ip, r4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
90007eda:	6890      	ldr	r0, [r2, #8]
90007edc:	f010 0f04 	tst.w	r0, #4
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group injected.
  */
__STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
{
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
90007ee0:	6890      	ldr	r0, [r2, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
90007ee2:	d101      	bne.n	90007ee8 <HAL_ADC_ConfigChannel+0x74>
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
90007ee4:	0700      	lsls	r0, r0, #28
90007ee6:	d524      	bpl.n	90007f32 <HAL_ADC_ConfigChannel+0xbe>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
90007ee8:	6890      	ldr	r0, [r2, #8]
90007eea:	07c7      	lsls	r7, r0, #31
90007eec:	d415      	bmi.n	90007f1a <HAL_ADC_ConfigChannel+0xa6>
    /*  - Single or differential mode                                           */
    /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
    {
      /* Set mode single-ended or differential input of the selected ADC channel */
      LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
90007eee:	68ce      	ldr	r6, [r1, #12]
90007ef0:	680c      	ldr	r4, [r1, #0]
  MODIFY_REG(ADCx->DIFSEL,
90007ef2:	f006 0718 	and.w	r7, r6, #24
90007ef6:	48bf      	ldr	r0, [pc, #764]	@ (900081f4 <HAL_ADC_ConfigChannel+0x380>)
90007ef8:	f8d2 50c0 	ldr.w	r5, [r2, #192]	@ 0xc0
90007efc:	40f8      	lsrs	r0, r7
90007efe:	f3c4 0713 	ubfx	r7, r4, #0, #20
90007f02:	4020      	ands	r0, r4
90007f04:	ea25 0507 	bic.w	r5, r5, r7
90007f08:	4328      	orrs	r0, r5
90007f0a:	f8c2 00c0 	str.w	r0, [r2, #192]	@ 0xc0

      /* Configuration of differential mode */
      if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
90007f0e:	48ba      	ldr	r0, [pc, #744]	@ (900081f8 <HAL_ADC_ConfigChannel+0x384>)
90007f10:	4286      	cmp	r6, r0
90007f12:	f000 80a3 	beq.w	9000805c <HAL_ADC_ConfigChannel+0x1e8>
      /* If internal channel selected, enable dedicated internal buffers and    */
      /* paths.                                                                 */
      /* Note: these internal measurement paths can be disabled using           */
      /* HAL_ADC_DeInit().                                                      */

      if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
90007f16:	2c00      	cmp	r4, #0
90007f18:	db6c      	blt.n	90007ff4 <HAL_ADC_ConfigChannel+0x180>
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
90007f1a:	2000      	movs	r0, #0
90007f1c:	e004      	b.n	90007f28 <HAL_ADC_ConfigChannel+0xb4>
        /* enabled and other ADC of the common group are enabled, internal      */
        /* measurement paths cannot be enabled.                                 */
        else
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
90007f1e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);

    tmp_hal_status = HAL_ERROR;
90007f20:	2001      	movs	r0, #1
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
90007f22:	f042 0220 	orr.w	r2, r2, #32
90007f26:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
90007f28:	2200      	movs	r2, #0
90007f2a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Return function status */
  return tmp_hal_status;
}
90007f2e:	b003      	add	sp, #12
90007f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
      LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
90007f32:	680c      	ldr	r4, [r1, #0]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
90007f34:	f102 0c14 	add.w	ip, r2, #20
  MODIFY_REG(*preg,
90007f38:	f04f 0e07 	mov.w	lr, #7
90007f3c:	688e      	ldr	r6, [r1, #8]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
90007f3e:	0de5      	lsrs	r5, r4, #23
  MODIFY_REG(*preg,
90007f40:	f3c4 5404 	ubfx	r4, r4, #20, #5
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
90007f44:	f005 0504 	and.w	r5, r5, #4
  MODIFY_REG(*preg,
90007f48:	fa0e fe04 	lsl.w	lr, lr, r4
90007f4c:	fa06 f404 	lsl.w	r4, r6, r4
90007f50:	f85c 0005 	ldr.w	r0, [ip, r5]
90007f54:	ea20 000e 	bic.w	r0, r0, lr
90007f58:	4320      	orrs	r0, r4
90007f5a:	f84c 0005 	str.w	r0, [ip, r5]
        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
90007f5e:	48a7      	ldr	r0, [pc, #668]	@ (900081fc <HAL_ADC_ConfigChannel+0x388>)
90007f60:	694d      	ldr	r5, [r1, #20]
90007f62:	6800      	ldr	r0, [r0, #0]
90007f64:	f000 4070 	and.w	r0, r0, #4026531840	@ 0xf0000000
90007f68:	f1b0 5f80 	cmp.w	r0, #268435456	@ 0x10000000
90007f6c:	68d0      	ldr	r0, [r2, #12]
90007f6e:	d070      	beq.n	90008052 <HAL_ADC_ConfigChannel+0x1de>
90007f70:	f010 0f10 	tst.w	r0, #16
90007f74:	68d0      	ldr	r0, [r2, #12]
90007f76:	d06c      	beq.n	90008052 <HAL_ADC_ConfigChannel+0x1de>
90007f78:	0840      	lsrs	r0, r0, #1
90007f7a:	f000 0008 	and.w	r0, r0, #8
90007f7e:	4085      	lsls	r5, r0
      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
90007f80:	690e      	ldr	r6, [r1, #16]
        LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted);
90007f82:	6808      	ldr	r0, [r1, #0]
      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
90007f84:	2e04      	cmp	r6, #4
90007f86:	f000 80b9 	beq.w	900080fc <HAL_ADC_ConfigChannel+0x288>
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
90007f8a:	f102 0c60 	add.w	ip, r2, #96	@ 0x60
    MODIFY_REG(*preg,
90007f8e:	f000 44f8 	and.w	r4, r0, #2080374784	@ 0x7c000000
90007f92:	f85c 0026 	ldr.w	r0, [ip, r6, lsl #2]
90007f96:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
90007f9a:	4320      	orrs	r0, r4
90007f9c:	4328      	orrs	r0, r5
90007f9e:	f84c 0026 	str.w	r0, [ip, r6, lsl #2]
          LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSignedSaturation == ENABLE) ? LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE : LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE);
90007fa2:	7e4c      	ldrb	r4, [r1, #25]
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
90007fa4:	690d      	ldr	r5, [r1, #16]
90007fa6:	f1a4 0401 	sub.w	r4, r4, #1
    MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
90007faa:	f85c 0025 	ldr.w	r0, [ip, r5, lsl #2]
90007fae:	fab4 f484 	clz	r4, r4
90007fb2:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
90007fb6:	0964      	lsrs	r4, r4, #5
90007fb8:	ea40 70c4 	orr.w	r0, r0, r4, lsl #31
90007fbc:	f84c 0025 	str.w	r0, [ip, r5, lsl #2]
          LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShift == ENABLE) ? LL_ADC_OFFSET_RSHIFT_ENABLE : LL_ADC_OFFSET_RSHIFT_DISABLE);
90007fc0:	7e08      	ldrb	r0, [r1, #24]
  MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RSHIFT4), RigthShift << (Offsety & 0x1FUL));
90007fc2:	690d      	ldr	r5, [r1, #16]
90007fc4:	f1a0 0001 	sub.w	r0, r0, #1
90007fc8:	6914      	ldr	r4, [r2, #16]
90007fca:	f005 051f 	and.w	r5, r5, #31
90007fce:	fab0 f080 	clz	r0, r0
90007fd2:	f424 44f0 	bic.w	r4, r4, #30720	@ 0x7800
90007fd6:	0940      	lsrs	r0, r0, #5
90007fd8:	02c0      	lsls	r0, r0, #11
90007fda:	40a8      	lsls	r0, r5
90007fdc:	4320      	orrs	r0, r4
90007fde:	6110      	str	r0, [r2, #16]
}
90007fe0:	e782      	b.n	90007ee8 <HAL_ADC_ConfigChannel+0x74>
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
90007fe2:	fa94 f4a4 	rbit	r4, r4
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
90007fe6:	2c00      	cmp	r4, #0
90007fe8:	f43f af5f 	beq.w	90007eaa <HAL_ADC_ConfigChannel+0x36>
  {
    return 32U;
  }
  return __builtin_clz(value);
90007fec:	fab4 f484 	clz	r4, r4
    hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
90007ff0:	40a0      	lsls	r0, r4
90007ff2:	e75a      	b.n	90007eaa <HAL_ADC_ConfigChannel+0x36>
        tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
90007ff4:	4982      	ldr	r1, [pc, #520]	@ (90008200 <HAL_ADC_ConfigChannel+0x38c>)
90007ff6:	428a      	cmp	r2, r1
90007ff8:	f000 80bf 	beq.w	9000817a <HAL_ADC_ConfigChannel+0x306>
90007ffc:	f501 7180 	add.w	r1, r1, #256	@ 0x100
90008000:	428a      	cmp	r2, r1
90008002:	f000 80ba 	beq.w	9000817a <HAL_ADC_ConfigChannel+0x306>
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
90008006:	f101 51c0 	add.w	r1, r1, #402653184	@ 0x18000000
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
9000800a:	4d7e      	ldr	r5, [pc, #504]	@ (90008204 <HAL_ADC_ConfigChannel+0x390>)
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
9000800c:	f501 4184 	add.w	r1, r1, #16896	@ 0x4200
90008010:	6888      	ldr	r0, [r1, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
90008012:	68ae      	ldr	r6, [r5, #8]
90008014:	07f6      	lsls	r6, r6, #31
90008016:	d482      	bmi.n	90007f1e <HAL_ADC_ConfigChannel+0xaa>
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
90008018:	4e7b      	ldr	r6, [pc, #492]	@ (90008208 <HAL_ADC_ConfigChannel+0x394>)
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
9000801a:	f000 77e0 	and.w	r7, r0, #29360128	@ 0x1c00000
9000801e:	42b4      	cmp	r4, r6
90008020:	f000 8108 	beq.w	90008234 <HAL_ADC_ConfigChannel+0x3c0>
          else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
90008024:	4e79      	ldr	r6, [pc, #484]	@ (9000820c <HAL_ADC_ConfigChannel+0x398>)
90008026:	42b4      	cmp	r4, r6
90008028:	f000 80f6 	beq.w	90008218 <HAL_ADC_ConfigChannel+0x3a4>
          else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
9000802c:	4d78      	ldr	r5, [pc, #480]	@ (90008210 <HAL_ADC_ConfigChannel+0x39c>)
9000802e:	42ac      	cmp	r4, r5
90008030:	f47f af73 	bne.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
            if (ADC_VREFINT_INSTANCE(hadc))
90008034:	0240      	lsls	r0, r0, #9
90008036:	f53f af70 	bmi.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
9000803a:	4872      	ldr	r0, [pc, #456]	@ (90008204 <HAL_ADC_ConfigChannel+0x390>)
9000803c:	4282      	cmp	r2, r0
9000803e:	f47f af6c 	bne.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
90008042:	688a      	ldr	r2, [r1, #8]
90008044:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
90008048:	433a      	orrs	r2, r7
9000804a:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
9000804e:	608a      	str	r2, [r1, #8]
}
90008050:	e763      	b.n	90007f1a <HAL_ADC_ConfigChannel+0xa6>
        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
90008052:	f3c0 0082 	ubfx	r0, r0, #2, #3
90008056:	0040      	lsls	r0, r0, #1
90008058:	4085      	lsls	r5, r0
9000805a:	e791      	b.n	90007f80 <HAL_ADC_ConfigChannel+0x10c>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
9000805c:	2f00      	cmp	r7, #0
9000805e:	d069      	beq.n	90008134 <HAL_ADC_ConfigChannel+0x2c0>
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
90008060:	fa94 f0a4 	rbit	r0, r4
  if (value == 0U)
90008064:	2800      	cmp	r0, #0
90008066:	f000 80a1 	beq.w	900081ac <HAL_ADC_ConfigChannel+0x338>
  return __builtin_clz(value);
9000806a:	fab0 f080 	clz	r0, r0
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
9000806e:	3001      	adds	r0, #1
90008070:	f000 001f 	and.w	r0, r0, #31
90008074:	2809      	cmp	r0, #9
90008076:	f240 8099 	bls.w	900081ac <HAL_ADC_ConfigChannel+0x338>
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
9000807a:	fa94 f0a4 	rbit	r0, r4
  if (value == 0U)
9000807e:	2800      	cmp	r0, #0
90008080:	f000 80fe 	beq.w	90008280 <HAL_ADC_ConfigChannel+0x40c>
  return __builtin_clz(value);
90008084:	fab0 f080 	clz	r0, r0
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
90008088:	3001      	adds	r0, #1
9000808a:	0680      	lsls	r0, r0, #26
9000808c:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
90008090:	fa94 f5a4 	rbit	r5, r4
  if (value == 0U)
90008094:	2d00      	cmp	r5, #0
90008096:	f000 80f1 	beq.w	9000827c <HAL_ADC_ConfigChannel+0x408>
  return __builtin_clz(value);
9000809a:	fab5 f585 	clz	r5, r5
9000809e:	2601      	movs	r6, #1
900080a0:	3501      	adds	r5, #1
900080a2:	f005 051f 	and.w	r5, r5, #31
900080a6:	fa06 f505 	lsl.w	r5, r6, r5
900080aa:	4328      	orrs	r0, r5
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
900080ac:	fa94 f4a4 	rbit	r4, r4
  if (value == 0U)
900080b0:	2c00      	cmp	r4, #0
900080b2:	f000 80e1 	beq.w	90008278 <HAL_ADC_ConfigChannel+0x404>
  return __builtin_clz(value);
900080b6:	fab4 f484 	clz	r4, r4
900080ba:	f06f 061d 	mvn.w	r6, #29
900080be:	1c65      	adds	r5, r4, #1
900080c0:	2403      	movs	r4, #3
900080c2:	f005 051f 	and.w	r5, r5, #31
900080c6:	fb14 6405 	smlabb	r4, r4, r5, r6
900080ca:	0524      	lsls	r4, r4, #20
900080cc:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
900080d0:	4320      	orrs	r0, r4
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
900080d2:	f102 0614 	add.w	r6, r2, #20
  MODIFY_REG(*preg,
900080d6:	2707      	movs	r7, #7
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
900080d8:	0dc5      	lsrs	r5, r0, #23
  MODIFY_REG(*preg,
900080da:	f3c0 5004 	ubfx	r0, r0, #20, #5
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
900080de:	f005 0504 	and.w	r5, r5, #4
  MODIFY_REG(*preg,
900080e2:	4087      	lsls	r7, r0
900080e4:	5974      	ldr	r4, [r6, r5]
900080e6:	ea24 0407 	bic.w	r4, r4, r7
900080ea:	688f      	ldr	r7, [r1, #8]
900080ec:	4087      	lsls	r7, r0
900080ee:	433c      	orrs	r4, r7
900080f0:	5174      	str	r4, [r6, r5]
      if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
900080f2:	680c      	ldr	r4, [r1, #0]
}
900080f4:	e70f      	b.n	90007f16 <HAL_ADC_ConfigChannel+0xa2>
  __HAL_LOCK(hadc);
900080f6:	2002      	movs	r0, #2
}
900080f8:	b003      	add	sp, #12
900080fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
          if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
900080fc:	6e15      	ldr	r5, [r2, #96]	@ 0x60
900080fe:	0684      	lsls	r4, r0, #26
90008100:	f005 45f8 	and.w	r5, r5, #2080374784	@ 0x7c000000
90008104:	ebb5 6f80 	cmp.w	r5, r0, lsl #26
90008108:	d032      	beq.n	90008170 <HAL_ADC_ConfigChannel+0x2fc>
          if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
9000810a:	6e50      	ldr	r0, [r2, #100]	@ 0x64
9000810c:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
90008110:	4284      	cmp	r4, r0
90008112:	d028      	beq.n	90008166 <HAL_ADC_ConfigChannel+0x2f2>
          if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
90008114:	6e90      	ldr	r0, [r2, #104]	@ 0x68
90008116:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
9000811a:	4284      	cmp	r4, r0
9000811c:	d01e      	beq.n	9000815c <HAL_ADC_ConfigChannel+0x2e8>
          if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
9000811e:	6ed0      	ldr	r0, [r2, #108]	@ 0x6c
90008120:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
90008124:	4284      	cmp	r4, r0
90008126:	f47f aedf 	bne.w	90007ee8 <HAL_ADC_ConfigChannel+0x74>
            CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
9000812a:	6ed0      	ldr	r0, [r2, #108]	@ 0x6c
9000812c:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
90008130:	66d0      	str	r0, [r2, #108]	@ 0x6c
90008132:	e6d9      	b.n	90007ee8 <HAL_ADC_ConfigChannel+0x74>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
90008134:	0ea4      	lsrs	r4, r4, #26
90008136:	2001      	movs	r0, #1
90008138:	3401      	adds	r4, #1
9000813a:	f004 051f 	and.w	r5, r4, #31
9000813e:	06a4      	lsls	r4, r4, #26
90008140:	40a8      	lsls	r0, r5
90008142:	f004 44f8 	and.w	r4, r4, #2080374784	@ 0x7c000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
90008146:	2d09      	cmp	r5, #9
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
90008148:	ea40 0004 	orr.w	r0, r0, r4
9000814c:	eb05 0445 	add.w	r4, r5, r5, lsl #1
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
90008150:	d94e      	bls.n	900081f0 <HAL_ADC_ConfigChannel+0x37c>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
90008152:	3c1e      	subs	r4, #30
90008154:	0524      	lsls	r4, r4, #20
90008156:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
9000815a:	e7b9      	b.n	900080d0 <HAL_ADC_ConfigChannel+0x25c>
            CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
9000815c:	6e90      	ldr	r0, [r2, #104]	@ 0x68
9000815e:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
90008162:	6690      	str	r0, [r2, #104]	@ 0x68
90008164:	e7db      	b.n	9000811e <HAL_ADC_ConfigChannel+0x2aa>
            CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
90008166:	6e50      	ldr	r0, [r2, #100]	@ 0x64
90008168:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
9000816c:	6650      	str	r0, [r2, #100]	@ 0x64
9000816e:	e7d1      	b.n	90008114 <HAL_ADC_ConfigChannel+0x2a0>
            CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
90008170:	6e10      	ldr	r0, [r2, #96]	@ 0x60
90008172:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
90008176:	6610      	str	r0, [r2, #96]	@ 0x60
90008178:	e7c7      	b.n	9000810a <HAL_ADC_ConfigChannel+0x296>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
9000817a:	4d21      	ldr	r5, [pc, #132]	@ (90008200 <HAL_ADC_ConfigChannel+0x38c>)
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
9000817c:	4925      	ldr	r1, [pc, #148]	@ (90008214 <HAL_ADC_ConfigChannel+0x3a0>)
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
9000817e:	f505 7580 	add.w	r5, r5, #256	@ 0x100
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
90008182:	6888      	ldr	r0, [r1, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
90008184:	f855 6cf8 	ldr.w	r6, [r5, #-248]
90008188:	68ad      	ldr	r5, [r5, #8]
9000818a:	07ed      	lsls	r5, r5, #31
9000818c:	f53f aec7 	bmi.w	90007f1e <HAL_ADC_ConfigChannel+0xaa>
        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
90008190:	07f7      	lsls	r7, r6, #31
90008192:	f53f aec4 	bmi.w	90007f1e <HAL_ADC_ConfigChannel+0xaa>
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
90008196:	4d1c      	ldr	r5, [pc, #112]	@ (90008208 <HAL_ADC_ConfigChannel+0x394>)
90008198:	42ac      	cmp	r4, r5
9000819a:	f43f aebe 	beq.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
          else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
9000819e:	4d1b      	ldr	r5, [pc, #108]	@ (9000820c <HAL_ADC_ConfigChannel+0x398>)
900081a0:	42ac      	cmp	r4, r5
900081a2:	f43f aeba 	beq.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
900081a6:	f000 77e0 	and.w	r7, r0, #29360128	@ 0x1c00000
900081aa:	e73f      	b.n	9000802c <HAL_ADC_ConfigChannel+0x1b8>
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
900081ac:	fa94 f0a4 	rbit	r0, r4
  if (value == 0U)
900081b0:	2800      	cmp	r0, #0
900081b2:	d06d      	beq.n	90008290 <HAL_ADC_ConfigChannel+0x41c>
  return __builtin_clz(value);
900081b4:	fab0 f080 	clz	r0, r0
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
900081b8:	3001      	adds	r0, #1
900081ba:	0680      	lsls	r0, r0, #26
900081bc:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
900081c0:	fa94 f5a4 	rbit	r5, r4
  if (value == 0U)
900081c4:	2d00      	cmp	r5, #0
900081c6:	d061      	beq.n	9000828c <HAL_ADC_ConfigChannel+0x418>
  return __builtin_clz(value);
900081c8:	fab5 f585 	clz	r5, r5
900081cc:	2601      	movs	r6, #1
900081ce:	3501      	adds	r5, #1
900081d0:	f005 051f 	and.w	r5, r5, #31
900081d4:	fa06 f505 	lsl.w	r5, r6, r5
900081d8:	4328      	orrs	r0, r5
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
900081da:	fa94 f4a4 	rbit	r4, r4
  if (value == 0U)
900081de:	2c00      	cmp	r4, #0
900081e0:	d051      	beq.n	90008286 <HAL_ADC_ConfigChannel+0x412>
  return __builtin_clz(value);
900081e2:	fab4 f484 	clz	r4, r4
900081e6:	3401      	adds	r4, #1
900081e8:	f004 041f 	and.w	r4, r4, #31
900081ec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900081f0:	0524      	lsls	r4, r4, #20
900081f2:	e76d      	b.n	900080d0 <HAL_ADC_ConfigChannel+0x25c>
900081f4:	000fffff 	.word	0x000fffff
900081f8:	47ff0000 	.word	0x47ff0000
900081fc:	5c001000 	.word	0x5c001000
90008200:	40022000 	.word	0x40022000
90008204:	58026000 	.word	0x58026000
90008208:	cb840000 	.word	0xcb840000
9000820c:	c7520000 	.word	0xc7520000
90008210:	cfb80000 	.word	0xcfb80000
90008214:	40022300 	.word	0x40022300
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
90008218:	01c4      	lsls	r4, r0, #7
9000821a:	f53f ae7e 	bmi.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
9000821e:	42aa      	cmp	r2, r5
90008220:	f47f ae7b 	bne.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
90008224:	688a      	ldr	r2, [r1, #8]
90008226:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
9000822a:	433a      	orrs	r2, r7
9000822c:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
90008230:	608a      	str	r2, [r1, #8]
}
90008232:	e672      	b.n	90007f1a <HAL_ADC_ConfigChannel+0xa6>
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
90008234:	0206      	lsls	r6, r0, #8
90008236:	f53f ae70 	bmi.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
9000823a:	42aa      	cmp	r2, r5
9000823c:	f47f ae6d 	bne.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
90008240:	688a      	ldr	r2, [r1, #8]
              wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
90008242:	4815      	ldr	r0, [pc, #84]	@ (90008298 <HAL_ADC_ConfigChannel+0x424>)
90008244:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
90008248:	433a      	orrs	r2, r7
9000824a:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
9000824e:	608a      	str	r2, [r1, #8]
90008250:	6802      	ldr	r2, [r0, #0]
90008252:	4912      	ldr	r1, [pc, #72]	@ (9000829c <HAL_ADC_ConfigChannel+0x428>)
90008254:	0992      	lsrs	r2, r2, #6
90008256:	fba1 1202 	umull	r1, r2, r1, r2
9000825a:	0992      	lsrs	r2, r2, #6
9000825c:	3201      	adds	r2, #1
9000825e:	0052      	lsls	r2, r2, #1
90008260:	9201      	str	r2, [sp, #4]
              while (wait_loop_index != 0UL)
90008262:	9a01      	ldr	r2, [sp, #4]
90008264:	2a00      	cmp	r2, #0
90008266:	f43f ae58 	beq.w	90007f1a <HAL_ADC_ConfigChannel+0xa6>
                wait_loop_index--;
9000826a:	9a01      	ldr	r2, [sp, #4]
9000826c:	3a01      	subs	r2, #1
9000826e:	9201      	str	r2, [sp, #4]
              while (wait_loop_index != 0UL)
90008270:	9a01      	ldr	r2, [sp, #4]
90008272:	2a00      	cmp	r2, #0
90008274:	d1f9      	bne.n	9000826a <HAL_ADC_ConfigChannel+0x3f6>
90008276:	e650      	b.n	90007f1a <HAL_ADC_ConfigChannel+0xa6>
90008278:	4c09      	ldr	r4, [pc, #36]	@ (900082a0 <HAL_ADC_ConfigChannel+0x42c>)
9000827a:	e729      	b.n	900080d0 <HAL_ADC_ConfigChannel+0x25c>
9000827c:	2502      	movs	r5, #2
9000827e:	e714      	b.n	900080aa <HAL_ADC_ConfigChannel+0x236>
90008280:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
90008284:	e704      	b.n	90008090 <HAL_ADC_ConfigChannel+0x21c>
90008286:	f44f 1440 	mov.w	r4, #3145728	@ 0x300000
9000828a:	e721      	b.n	900080d0 <HAL_ADC_ConfigChannel+0x25c>
9000828c:	2502      	movs	r5, #2
9000828e:	e7a3      	b.n	900081d8 <HAL_ADC_ConfigChannel+0x364>
90008290:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
90008294:	e794      	b.n	900081c0 <HAL_ADC_ConfigChannel+0x34c>
90008296:	bf00      	nop
90008298:	24000078 	.word	0x24000078
9000829c:	053e2d63 	.word	0x053e2d63
900082a0:	fe500000 	.word	0xfe500000

900082a4 <ADC_ConversionStop>:
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));

  /* Verification if ADC is not already stopped (on regular and injected      */
  /* groups) to bypass this function if not needed.                           */
  tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
900082a4:	6803      	ldr	r3, [r0, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
900082a6:	689a      	ldr	r2, [r3, #8]
900082a8:	f012 0f04 	tst.w	r2, #4
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
900082ac:	689a      	ldr	r2, [r3, #8]
{
900082ae:	b570      	push	{r4, r5, r6, lr}
900082b0:	4604      	mov	r4, r0
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
900082b2:	d101      	bne.n	900082b8 <ADC_ConversionStop+0x14>
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
900082b4:	0716      	lsls	r6, r2, #28
900082b6:	d540      	bpl.n	9000833a <ADC_ConversionStop+0x96>
    /* auto-delay mode.                                                       */
    /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
    /* injected group stop ADC_CR_JADSTP).                                    */
    /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
    /* (see reference manual).                                                */
    if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
900082b8:	68da      	ldr	r2, [r3, #12]
900082ba:	0195      	lsls	r5, r2, #6
900082bc:	d504      	bpl.n	900082c8 <ADC_ConversionStop+0x24>
        && (hadc->Init.ContinuousConvMode == ENABLE)
        && (hadc->Init.LowPowerAutoWait == ENABLE)
900082be:	8aa0      	ldrh	r0, [r4, #20]
900082c0:	f240 1201 	movw	r2, #257	@ 0x101
900082c4:	4290      	cmp	r0, r2
900082c6:	d03a      	beq.n	9000833e <ADC_ConversionStop+0x9a>
      /* Clear JEOS */
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
    }

    /* Stop potential conversion on going on ADC group regular */
    if (conversion_group_reassigned != ADC_INJECTED_GROUP)
900082c8:	2902      	cmp	r1, #2
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
900082ca:	689a      	ldr	r2, [r3, #8]
900082cc:	d048      	beq.n	90008360 <ADC_ConversionStop+0xbc>
900082ce:	0750      	lsls	r0, r2, #29
900082d0:	d508      	bpl.n	900082e4 <ADC_ConversionStop+0x40>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
900082d2:	689a      	ldr	r2, [r3, #8]
900082d4:	0792      	lsls	r2, r2, #30
900082d6:	d405      	bmi.n	900082e4 <ADC_ConversionStop+0x40>
  MODIFY_REG(ADCx->CR,
900082d8:	6898      	ldr	r0, [r3, #8]
900082da:	4a2d      	ldr	r2, [pc, #180]	@ (90008390 <ADC_ConversionStop+0xec>)
900082dc:	4002      	ands	r2, r0
900082de:	f042 0210 	orr.w	r2, r2, #16
900082e2:	609a      	str	r2, [r3, #8]
        }
      }
    }

    /* Stop potential conversion on going on ADC group injected */
    if (conversion_group_reassigned != ADC_REGULAR_GROUP)
900082e4:	2901      	cmp	r1, #1
900082e6:	d039      	beq.n	9000835c <ADC_ConversionStop+0xb8>
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
900082e8:	689a      	ldr	r2, [r3, #8]
900082ea:	0710      	lsls	r0, r2, #28
900082ec:	d508      	bpl.n	90008300 <ADC_ConversionStop+0x5c>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
900082ee:	689a      	ldr	r2, [r3, #8]
900082f0:	0792      	lsls	r2, r2, #30
900082f2:	d405      	bmi.n	90008300 <ADC_ConversionStop+0x5c>
  MODIFY_REG(ADCx->CR,
900082f4:	6898      	ldr	r0, [r3, #8]
900082f6:	4a26      	ldr	r2, [pc, #152]	@ (90008390 <ADC_ConversionStop+0xec>)
900082f8:	4002      	ands	r2, r0
900082fa:	f042 0220 	orr.w	r2, r2, #32
900082fe:	609a      	str	r2, [r3, #8]
        }
      }
    }

    /* Selection of start and stop bits with respect to the regular or injected group */
    switch (conversion_group_reassigned)
90008300:	2903      	cmp	r1, #3
90008302:	d12b      	bne.n	9000835c <ADC_ConversionStop+0xb8>
90008304:	250c      	movs	r5, #12
        tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
        break;
    }

    /* Wait for conversion effectively stopped */
    tickstart = HAL_GetTick();
90008306:	f7ff fd19 	bl	90007d3c <HAL_GetTick>

    while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
9000830a:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000830c:	4606      	mov	r6, r0
    while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
9000830e:	689b      	ldr	r3, [r3, #8]
90008310:	421d      	tst	r5, r3
90008312:	d012      	beq.n	9000833a <ADC_ConversionStop+0x96>
    {
      if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
90008314:	f7ff fd12 	bl	90007d3c <HAL_GetTick>
90008318:	1b83      	subs	r3, r0, r6
9000831a:	2b05      	cmp	r3, #5
      {
        /* New check to avoid false timeout detection in case of preemption */
        if((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
9000831c:	6823      	ldr	r3, [r4, #0]
      if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
9000831e:	d9f6      	bls.n	9000830e <ADC_ConversionStop+0x6a>
        if((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
90008320:	689a      	ldr	r2, [r3, #8]
90008322:	422a      	tst	r2, r5
90008324:	d0f3      	beq.n	9000830e <ADC_ConversionStop+0x6a>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
90008326:	6d63      	ldr	r3, [r4, #84]	@ 0x54
          return HAL_ERROR;
90008328:	2001      	movs	r0, #1
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
9000832a:	f043 0310 	orr.w	r3, r3, #16
9000832e:	6563      	str	r3, [r4, #84]	@ 0x54

          /* Set ADC error code to ADC peripheral internal error */
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
90008330:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90008332:	f043 0301 	orr.w	r3, r3, #1
90008336:	65a3      	str	r3, [r4, #88]	@ 0x58

  }

  /* Return HAL status */
  return HAL_OK;
}
90008338:	bd70      	pop	{r4, r5, r6, pc}
  return HAL_OK;
9000833a:	2000      	movs	r0, #0
}
9000833c:	bd70      	pop	{r4, r5, r6, pc}
      while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
9000833e:	681a      	ldr	r2, [r3, #0]
90008340:	0650      	lsls	r0, r2, #25
90008342:	d406      	bmi.n	90008352 <ADC_ConversionStop+0xae>
90008344:	4a13      	ldr	r2, [pc, #76]	@ (90008394 <ADC_ConversionStop+0xf0>)
90008346:	e001      	b.n	9000834c <ADC_ConversionStop+0xa8>
        if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
90008348:	3a01      	subs	r2, #1
9000834a:	d0ec      	beq.n	90008326 <ADC_ConversionStop+0x82>
      while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
9000834c:	6819      	ldr	r1, [r3, #0]
9000834e:	0649      	lsls	r1, r1, #25
90008350:	d5fa      	bpl.n	90008348 <ADC_ConversionStop+0xa4>
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
90008352:	2240      	movs	r2, #64	@ 0x40
90008354:	601a      	str	r2, [r3, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
90008356:	689a      	ldr	r2, [r3, #8]
90008358:	0756      	lsls	r6, r2, #29
9000835a:	d40f      	bmi.n	9000837c <ADC_ConversionStop+0xd8>
        tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
9000835c:	2504      	movs	r5, #4
9000835e:	e7d2      	b.n	90008306 <ADC_ConversionStop+0x62>
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
90008360:	0716      	lsls	r6, r2, #28
90008362:	d401      	bmi.n	90008368 <ADC_ConversionStop+0xc4>
        tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
90008364:	2508      	movs	r5, #8
90008366:	e7ce      	b.n	90008306 <ADC_ConversionStop+0x62>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
90008368:	689a      	ldr	r2, [r3, #8]
9000836a:	0795      	lsls	r5, r2, #30
9000836c:	d4fa      	bmi.n	90008364 <ADC_ConversionStop+0xc0>
  MODIFY_REG(ADCx->CR,
9000836e:	6899      	ldr	r1, [r3, #8]
90008370:	4a07      	ldr	r2, [pc, #28]	@ (90008390 <ADC_ConversionStop+0xec>)
90008372:	400a      	ands	r2, r1
90008374:	f042 0220 	orr.w	r2, r2, #32
90008378:	609a      	str	r2, [r3, #8]
    switch (conversion_group_reassigned)
9000837a:	e7f3      	b.n	90008364 <ADC_ConversionStop+0xc0>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
9000837c:	689a      	ldr	r2, [r3, #8]
9000837e:	0795      	lsls	r5, r2, #30
90008380:	d4ec      	bmi.n	9000835c <ADC_ConversionStop+0xb8>
  MODIFY_REG(ADCx->CR,
90008382:	6899      	ldr	r1, [r3, #8]
90008384:	4a02      	ldr	r2, [pc, #8]	@ (90008390 <ADC_ConversionStop+0xec>)
90008386:	400a      	ands	r2, r1
90008388:	f042 0210 	orr.w	r2, r2, #16
9000838c:	609a      	str	r2, [r3, #8]
    if (conversion_group_reassigned != ADC_REGULAR_GROUP)
9000838e:	e7e5      	b.n	9000835c <ADC_ConversionStop+0xb8>
90008390:	7fffffc0 	.word	0x7fffffc0
90008394:	000cdc00 	.word	0x000cdc00

90008398 <ADC_Enable>:

  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
90008398:	6803      	ldr	r3, [r0, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
9000839a:	689a      	ldr	r2, [r3, #8]
9000839c:	07d1      	lsls	r1, r2, #31
9000839e:	d501      	bpl.n	900083a4 <ADC_Enable+0xc>
      }
    }
  }

  /* Return HAL status */
  return HAL_OK;
900083a0:	2000      	movs	r0, #0
}
900083a2:	4770      	bx	lr
    if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
900083a4:	6899      	ldr	r1, [r3, #8]
900083a6:	4a23      	ldr	r2, [pc, #140]	@ (90008434 <ADC_Enable+0x9c>)
900083a8:	4211      	tst	r1, r2
{
900083aa:	b570      	push	{r4, r5, r6, lr}
900083ac:	4604      	mov	r4, r0
    if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
900083ae:	d12f      	bne.n	90008410 <ADC_Enable+0x78>
  MODIFY_REG(ADCx->CR,
900083b0:	6899      	ldr	r1, [r3, #8]
900083b2:	4a21      	ldr	r2, [pc, #132]	@ (90008438 <ADC_Enable+0xa0>)
900083b4:	400a      	ands	r2, r1
900083b6:	f042 0201 	orr.w	r2, r2, #1
900083ba:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
900083bc:	f7ff fcbe 	bl	90007d3c <HAL_GetTick>
    uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
900083c0:	6823      	ldr	r3, [r4, #0]
900083c2:	4a1e      	ldr	r2, [pc, #120]	@ (9000843c <ADC_Enable+0xa4>)
    tickstart = HAL_GetTick();
900083c4:	4605      	mov	r5, r0
    uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
900083c6:	4293      	cmp	r3, r2
900083c8:	d02c      	beq.n	90008424 <ADC_Enable+0x8c>
900083ca:	f502 7280 	add.w	r2, r2, #256	@ 0x100
900083ce:	4293      	cmp	r3, r2
900083d0:	d028      	beq.n	90008424 <ADC_Enable+0x8c>
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
900083d2:	f102 52c0 	add.w	r2, r2, #402653184	@ 0x18000000
900083d6:	f502 4284 	add.w	r2, r2, #16896	@ 0x4200
900083da:	6892      	ldr	r2, [r2, #8]
      while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
900083dc:	681a      	ldr	r2, [r3, #0]
900083de:	07d2      	lsls	r2, r2, #31
900083e0:	d414      	bmi.n	9000840c <ADC_Enable+0x74>
  MODIFY_REG(ADCx->CR,
900083e2:	4e15      	ldr	r6, [pc, #84]	@ (90008438 <ADC_Enable+0xa0>)
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
900083e4:	689a      	ldr	r2, [r3, #8]
900083e6:	07d0      	lsls	r0, r2, #31
900083e8:	d404      	bmi.n	900083f4 <ADC_Enable+0x5c>
  MODIFY_REG(ADCx->CR,
900083ea:	689a      	ldr	r2, [r3, #8]
900083ec:	4032      	ands	r2, r6
900083ee:	f042 0201 	orr.w	r2, r2, #1
900083f2:	609a      	str	r2, [r3, #8]
        if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
900083f4:	f7ff fca2 	bl	90007d3c <HAL_GetTick>
900083f8:	1b43      	subs	r3, r0, r5
900083fa:	2b02      	cmp	r3, #2
          if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
900083fc:	6823      	ldr	r3, [r4, #0]
        if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
900083fe:	d902      	bls.n	90008406 <ADC_Enable+0x6e>
          if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
90008400:	681a      	ldr	r2, [r3, #0]
90008402:	07d1      	lsls	r1, r2, #31
90008404:	d504      	bpl.n	90008410 <ADC_Enable+0x78>
      while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
90008406:	681a      	ldr	r2, [r3, #0]
90008408:	07d2      	lsls	r2, r2, #31
9000840a:	d5eb      	bpl.n	900083e4 <ADC_Enable+0x4c>
  return HAL_OK;
9000840c:	2000      	movs	r0, #0
}
9000840e:	bd70      	pop	{r4, r5, r6, pc}
            SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
90008410:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      return HAL_ERROR;
90008412:	2001      	movs	r0, #1
            SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
90008414:	f043 0310 	orr.w	r3, r3, #16
90008418:	6563      	str	r3, [r4, #84]	@ 0x54
            SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
9000841a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9000841c:	f043 0301 	orr.w	r3, r3, #1
90008420:	65a3      	str	r3, [r4, #88]	@ 0x58
}
90008422:	bd70      	pop	{r4, r5, r6, pc}
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
90008424:	4a06      	ldr	r2, [pc, #24]	@ (90008440 <ADC_Enable+0xa8>)
90008426:	6892      	ldr	r2, [r2, #8]
        || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
90008428:	06d6      	lsls	r6, r2, #27
9000842a:	d0d7      	beq.n	900083dc <ADC_Enable+0x44>
    if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
9000842c:	4a05      	ldr	r2, [pc, #20]	@ (90008444 <ADC_Enable+0xac>)
        || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
9000842e:	4293      	cmp	r3, r2
90008430:	d1d4      	bne.n	900083dc <ADC_Enable+0x44>
90008432:	e7eb      	b.n	9000840c <ADC_Enable+0x74>
90008434:	8000003f 	.word	0x8000003f
90008438:	7fffffc0 	.word	0x7fffffc0
9000843c:	40022000 	.word	0x40022000
90008440:	40022300 	.word	0x40022300
90008444:	40022100 	.word	0x40022100

90008448 <HAL_ADC_Start>:
  uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
90008448:	4a38      	ldr	r2, [pc, #224]	@ (9000852c <HAL_ADC_Start+0xe4>)
9000844a:	6803      	ldr	r3, [r0, #0]
9000844c:	4293      	cmp	r3, r2
{
9000844e:	b570      	push	{r4, r5, r6, lr}
90008450:	4604      	mov	r4, r0
  uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
90008452:	d049      	beq.n	900084e8 <HAL_ADC_Start+0xa0>
90008454:	f502 7280 	add.w	r2, r2, #256	@ 0x100
90008458:	4293      	cmp	r3, r2
9000845a:	d045      	beq.n	900084e8 <HAL_ADC_Start+0xa0>
9000845c:	4a34      	ldr	r2, [pc, #208]	@ (90008530 <HAL_ADC_Start+0xe8>)
9000845e:	6896      	ldr	r6, [r2, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
90008460:	689d      	ldr	r5, [r3, #8]
90008462:	f015 0504 	ands.w	r5, r5, #4
90008466:	d145      	bne.n	900084f4 <HAL_ADC_Start+0xac>
    __HAL_LOCK(hadc);
90008468:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
9000846c:	2b01      	cmp	r3, #1
9000846e:	d041      	beq.n	900084f4 <HAL_ADC_Start+0xac>
90008470:	2301      	movs	r3, #1
    tmp_hal_status = ADC_Enable(hadc);
90008472:	4620      	mov	r0, r4
    __HAL_LOCK(hadc);
90008474:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    tmp_hal_status = ADC_Enable(hadc);
90008478:	f7ff ff8e 	bl	90008398 <ADC_Enable>
    if (tmp_hal_status == HAL_OK)
9000847c:	2800      	cmp	r0, #0
9000847e:	d13b      	bne.n	900084f8 <HAL_ADC_Start+0xb0>
      ADC_STATE_CLR_SET(hadc->State,
90008480:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
90008482:	f006 061f 	and.w	r6, r6, #31
90008486:	4a2b      	ldr	r2, [pc, #172]	@ (90008534 <HAL_ADC_Start+0xec>)
90008488:	401a      	ands	r2, r3
      if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
9000848a:	6823      	ldr	r3, [r4, #0]
      ADC_STATE_CLR_SET(hadc->State,
9000848c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90008490:	6562      	str	r2, [r4, #84]	@ 0x54
      if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
90008492:	4a29      	ldr	r2, [pc, #164]	@ (90008538 <HAL_ADC_Start+0xf0>)
90008494:	4293      	cmp	r3, r2
90008496:	d032      	beq.n	900084fe <HAL_ADC_Start+0xb6>
90008498:	4619      	mov	r1, r3
        CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
9000849a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000849c:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
900084a0:	6562      	str	r2, [r4, #84]	@ 0x54
      if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
900084a2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900084a4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
900084a8:	d03d      	beq.n	90008526 <HAL_ADC_Start+0xde>
        CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
900084aa:	6da2      	ldr	r2, [r4, #88]	@ 0x58
900084ac:	f022 0206 	bic.w	r2, r2, #6
900084b0:	65a2      	str	r2, [r4, #88]	@ 0x58
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
900084b2:	221c      	movs	r2, #28
      if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
900084b4:	428b      	cmp	r3, r1
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
900084b6:	601a      	str	r2, [r3, #0]
      __HAL_UNLOCK(hadc);
900084b8:	f04f 0200 	mov.w	r2, #0
900084bc:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
      if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
900084c0:	d021      	beq.n	90008506 <HAL_ADC_Start+0xbe>
900084c2:	f240 2221 	movw	r2, #545	@ 0x221
900084c6:	40f2      	lsrs	r2, r6
900084c8:	07d5      	lsls	r5, r2, #31
900084ca:	d41c      	bmi.n	90008506 <HAL_ADC_Start+0xbe>
        SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
900084cc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900084ce:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
900084d2:	6563      	str	r3, [r4, #84]	@ 0x54
        if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
900084d4:	68cb      	ldr	r3, [r1, #12]
900084d6:	019b      	lsls	r3, r3, #6
900084d8:	d505      	bpl.n	900084e6 <HAL_ADC_Start+0x9e>
          ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
900084da:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900084dc:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
900084e0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
900084e4:	6563      	str	r3, [r4, #84]	@ 0x54
}
900084e6:	bd70      	pop	{r4, r5, r6, pc}
  uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
900084e8:	4a14      	ldr	r2, [pc, #80]	@ (9000853c <HAL_ADC_Start+0xf4>)
900084ea:	6896      	ldr	r6, [r2, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
900084ec:	689d      	ldr	r5, [r3, #8]
900084ee:	f015 0504 	ands.w	r5, r5, #4
900084f2:	d0b9      	beq.n	90008468 <HAL_ADC_Start+0x20>
    __HAL_LOCK(hadc);
900084f4:	2002      	movs	r0, #2
}
900084f6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_UNLOCK(hadc);
900084f8:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
}
900084fc:	bd70      	pop	{r4, r5, r6, pc}
      if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
900084fe:	490b      	ldr	r1, [pc, #44]	@ (9000852c <HAL_ADC_Start+0xe4>)
          || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
90008500:	2e00      	cmp	r6, #0
90008502:	d1ce      	bne.n	900084a2 <HAL_ADC_Start+0x5a>
90008504:	e7c9      	b.n	9000849a <HAL_ADC_Start+0x52>
        if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
90008506:	68da      	ldr	r2, [r3, #12]
90008508:	0192      	lsls	r2, r2, #6
9000850a:	d505      	bpl.n	90008518 <HAL_ADC_Start+0xd0>
          ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
9000850c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000850e:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90008512:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90008516:	6562      	str	r2, [r4, #84]	@ 0x54
  MODIFY_REG(ADCx->CR,
90008518:	6899      	ldr	r1, [r3, #8]
9000851a:	4a09      	ldr	r2, [pc, #36]	@ (90008540 <HAL_ADC_Start+0xf8>)
9000851c:	400a      	ands	r2, r1
9000851e:	f042 0204 	orr.w	r2, r2, #4
90008522:	609a      	str	r2, [r3, #8]
}
90008524:	bd70      	pop	{r4, r5, r6, pc}
        ADC_CLEAR_ERRORCODE(hadc);
90008526:	65a2      	str	r2, [r4, #88]	@ 0x58
90008528:	e7c3      	b.n	900084b2 <HAL_ADC_Start+0x6a>
9000852a:	bf00      	nop
9000852c:	40022000 	.word	0x40022000
90008530:	58026300 	.word	0x58026300
90008534:	fffff0fe 	.word	0xfffff0fe
90008538:	40022100 	.word	0x40022100
9000853c:	40022300 	.word	0x40022300
90008540:	7fffffc0 	.word	0x7fffffc0

90008544 <ADC_Disable>:
  *         stopped.
  * @param hadc ADC handle
  * @retval HAL status.
  */
HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
{
90008544:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;
  const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
90008546:	6803      	ldr	r3, [r0, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
90008548:	689a      	ldr	r2, [r3, #8]
9000854a:	0795      	lsls	r5, r2, #30
9000854c:	d502      	bpl.n	90008554 <ADC_Disable+0x10>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
9000854e:	689b      	ldr	r3, [r3, #8]
      }
    }
  }

  /* Return HAL status */
  return HAL_OK;
90008550:	2000      	movs	r0, #0
}
90008552:	bd38      	pop	{r3, r4, r5, pc}
90008554:	689a      	ldr	r2, [r3, #8]
90008556:	07d4      	lsls	r4, r2, #31
90008558:	d5fa      	bpl.n	90008550 <ADC_Disable+0xc>
    if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
9000855a:	689a      	ldr	r2, [r3, #8]
9000855c:	4604      	mov	r4, r0
9000855e:	f002 020d 	and.w	r2, r2, #13
90008562:	2a01      	cmp	r2, #1
90008564:	d009      	beq.n	9000857a <ADC_Disable+0x36>
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
90008566:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      return HAL_ERROR;
90008568:	2001      	movs	r0, #1
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
9000856a:	f043 0310 	orr.w	r3, r3, #16
9000856e:	6563      	str	r3, [r4, #84]	@ 0x54
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
90008570:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90008572:	f043 0301 	orr.w	r3, r3, #1
90008576:	65a3      	str	r3, [r4, #88]	@ 0x58
}
90008578:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG(ADCx->CR,
9000857a:	6898      	ldr	r0, [r3, #8]
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
9000857c:	2103      	movs	r1, #3
9000857e:	4a0d      	ldr	r2, [pc, #52]	@ (900085b4 <ADC_Disable+0x70>)
90008580:	4002      	ands	r2, r0
90008582:	f042 0202 	orr.w	r2, r2, #2
90008586:	609a      	str	r2, [r3, #8]
90008588:	6019      	str	r1, [r3, #0]
    tickstart = HAL_GetTick();
9000858a:	f7ff fbd7 	bl	90007d3c <HAL_GetTick>
    while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
9000858e:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
90008590:	4605      	mov	r5, r0
    while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
90008592:	689b      	ldr	r3, [r3, #8]
90008594:	07d9      	lsls	r1, r3, #31
90008596:	d403      	bmi.n	900085a0 <ADC_Disable+0x5c>
90008598:	e7da      	b.n	90008550 <ADC_Disable+0xc>
9000859a:	689b      	ldr	r3, [r3, #8]
9000859c:	07db      	lsls	r3, r3, #31
9000859e:	d5d7      	bpl.n	90008550 <ADC_Disable+0xc>
      if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
900085a0:	f7ff fbcc 	bl	90007d3c <HAL_GetTick>
900085a4:	1b40      	subs	r0, r0, r5
        if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
900085a6:	6823      	ldr	r3, [r4, #0]
      if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
900085a8:	2802      	cmp	r0, #2
900085aa:	d9f6      	bls.n	9000859a <ADC_Disable+0x56>
        if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
900085ac:	689a      	ldr	r2, [r3, #8]
900085ae:	07d2      	lsls	r2, r2, #31
900085b0:	d5f3      	bpl.n	9000859a <ADC_Disable+0x56>
900085b2:	e7d8      	b.n	90008566 <ADC_Disable+0x22>
900085b4:	7fffffc0 	.word	0x7fffffc0

900085b8 <HAL_ADC_Stop>:
  __HAL_LOCK(hadc);
900085b8:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
900085bc:	2b01      	cmp	r3, #1
900085be:	d01b      	beq.n	900085f8 <HAL_ADC_Stop+0x40>
900085c0:	2301      	movs	r3, #1
  tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
900085c2:	2103      	movs	r1, #3
{
900085c4:	b510      	push	{r4, lr}
  __HAL_LOCK(hadc);
900085c6:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
900085ca:	4604      	mov	r4, r0
900085cc:	f7ff fe6a 	bl	900082a4 <ADC_ConversionStop>
  if (tmp_hal_status == HAL_OK)
900085d0:	b118      	cbz	r0, 900085da <HAL_ADC_Stop+0x22>
  __HAL_UNLOCK(hadc);
900085d2:	2300      	movs	r3, #0
900085d4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
900085d8:	bd10      	pop	{r4, pc}
    tmp_hal_status = ADC_Disable(hadc);
900085da:	4620      	mov	r0, r4
900085dc:	f7ff ffb2 	bl	90008544 <ADC_Disable>
    if (tmp_hal_status == HAL_OK)
900085e0:	2800      	cmp	r0, #0
900085e2:	d1f6      	bne.n	900085d2 <HAL_ADC_Stop+0x1a>
      ADC_STATE_CLR_SET(hadc->State,
900085e4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900085e6:	4b05      	ldr	r3, [pc, #20]	@ (900085fc <HAL_ADC_Stop+0x44>)
900085e8:	4013      	ands	r3, r2
900085ea:	f043 0301 	orr.w	r3, r3, #1
900085ee:	6563      	str	r3, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hadc);
900085f0:	2300      	movs	r3, #0
900085f2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
900085f6:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hadc);
900085f8:	2002      	movs	r0, #2
}
900085fa:	4770      	bx	lr
900085fc:	ffffeefe 	.word	0xffffeefe

90008600 <ADC_ConfigureBoostMode>:
  *         stopped.
  * @param  hadc ADC handle
  * @retval None.
  */
void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
{
90008600:	b538      	push	{r3, r4, r5, lr}
  uint32_t freq;
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
90008602:	4a56      	ldr	r2, [pc, #344]	@ (9000875c <ADC_ConfigureBoostMode+0x15c>)
{
90008604:	4604      	mov	r4, r0
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
90008606:	6803      	ldr	r3, [r0, #0]
90008608:	4293      	cmp	r3, r2
9000860a:	d025      	beq.n	90008658 <ADC_ConfigureBoostMode+0x58>
9000860c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
90008610:	4293      	cmp	r3, r2
90008612:	d021      	beq.n	90008658 <ADC_ConfigureBoostMode+0x58>
90008614:	4b52      	ldr	r3, [pc, #328]	@ (90008760 <ADC_ConfigureBoostMode+0x160>)
90008616:	689b      	ldr	r3, [r3, #8]
90008618:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
9000861c:	d021      	beq.n	90008662 <ADC_ConfigureBoostMode+0x62>
  {
    freq = HAL_RCC_GetHCLKFreq();
9000861e:	f004 f851 	bl	9000c6c4 <HAL_RCC_GetHCLKFreq>
    switch (hadc->Init.ClockPrescaler)
90008622:	6863      	ldr	r3, [r4, #4]
    freq = HAL_RCC_GetHCLKFreq();
90008624:	4605      	mov	r5, r0
    switch (hadc->Init.ClockPrescaler)
90008626:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
9000862a:	f000 8086 	beq.w	9000873a <ADC_ConfigureBoostMode+0x13a>
9000862e:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
90008632:	d06f      	beq.n	90008714 <ADC_ConfigureBoostMode+0x114>
90008634:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
90008638:	d07f      	beq.n	9000873a <ADC_ConfigureBoostMode+0x13a>
  else /* if(freq > 25000000UL) */
  {
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
  }
#else
  if (HAL_GetREVID() <= REV_ID_Y) /* STM32H7 silicon Rev.Y */
9000863a:	f7ff fb85 	bl	90007d48 <HAL_GetREVID>
9000863e:	f241 0303 	movw	r3, #4099	@ 0x1003
90008642:	4298      	cmp	r0, r3
90008644:	d84b      	bhi.n	900086de <ADC_ConfigureBoostMode+0xde>
  {
    if (freq > 20000000UL)
90008646:	4a47      	ldr	r2, [pc, #284]	@ (90008764 <ADC_ConfigureBoostMode+0x164>)
    {
      SET_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
90008648:	6823      	ldr	r3, [r4, #0]
    if (freq > 20000000UL)
9000864a:	4295      	cmp	r5, r2
9000864c:	d92a      	bls.n	900086a4 <ADC_ConfigureBoostMode+0xa4>
      SET_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
9000864e:	689a      	ldr	r2, [r3, #8]
90008650:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90008654:	609a      	str	r2, [r3, #8]
    {
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
    }
  }
#endif /* ADC_VER_V5_3 */
}
90008656:	bd38      	pop	{r3, r4, r5, pc}
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
90008658:	4b43      	ldr	r3, [pc, #268]	@ (90008768 <ADC_ConfigureBoostMode+0x168>)
9000865a:	689b      	ldr	r3, [r3, #8]
9000865c:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
90008660:	d1dd      	bne.n	9000861e <ADC_ConfigureBoostMode+0x1e>
    freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
90008662:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
90008666:	2100      	movs	r1, #0
90008668:	f005 fb34 	bl	9000dcd4 <HAL_RCCEx_GetPeriphCLKFreq>
    switch (hadc->Init.ClockPrescaler)
9000866c:	6863      	ldr	r3, [r4, #4]
    freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
9000866e:	4605      	mov	r5, r0
    switch (hadc->Init.ClockPrescaler)
90008670:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
90008674:	d06b      	beq.n	9000874e <ADC_ConfigureBoostMode+0x14e>
90008676:	d808      	bhi.n	9000868a <ADC_ConfigureBoostMode+0x8a>
90008678:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
9000867c:	d054      	beq.n	90008728 <ADC_ConfigureBoostMode+0x128>
9000867e:	d916      	bls.n	900086ae <ADC_ConfigureBoostMode+0xae>
90008680:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
90008684:	d1d9      	bne.n	9000863a <ADC_ConfigureBoostMode+0x3a>
        freq /= 32UL;
90008686:	0945      	lsrs	r5, r0, #5
        break;
90008688:	e7d7      	b.n	9000863a <ADC_ConfigureBoostMode+0x3a>
    switch (hadc->Init.ClockPrescaler)
9000868a:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
9000868e:	d049      	beq.n	90008724 <ADC_ConfigureBoostMode+0x124>
90008690:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
90008694:	d1d1      	bne.n	9000863a <ADC_ConfigureBoostMode+0x3a>
  if (HAL_GetREVID() <= REV_ID_Y) /* STM32H7 silicon Rev.Y */
90008696:	f7ff fb57 	bl	90007d48 <HAL_GetREVID>
9000869a:	f241 0303 	movw	r3, #4099	@ 0x1003
9000869e:	4298      	cmp	r0, r3
900086a0:	d82e      	bhi.n	90008700 <ADC_ConfigureBoostMode+0x100>
900086a2:	6823      	ldr	r3, [r4, #0]
      CLEAR_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
900086a4:	689a      	ldr	r2, [r3, #8]
900086a6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
900086aa:	609a      	str	r2, [r3, #8]
}
900086ac:	bd38      	pop	{r3, r4, r5, pc}
    switch (hadc->Init.ClockPrescaler)
900086ae:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
900086b2:	d006      	beq.n	900086c2 <ADC_ConfigureBoostMode+0xc2>
900086b4:	d90a      	bls.n	900086cc <ADC_ConfigureBoostMode+0xcc>
900086b6:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
900086ba:	d002      	beq.n	900086c2 <ADC_ConfigureBoostMode+0xc2>
900086bc:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
900086c0:	d1bb      	bne.n	9000863a <ADC_ConfigureBoostMode+0x3a>
        freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
900086c2:	0c9b      	lsrs	r3, r3, #18
900086c4:	005b      	lsls	r3, r3, #1
900086c6:	fbb5 f5f3 	udiv	r5, r5, r3
        break;
900086ca:	e7b6      	b.n	9000863a <ADC_ConfigureBoostMode+0x3a>
    switch (hadc->Init.ClockPrescaler)
900086cc:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
900086d0:	d0f7      	beq.n	900086c2 <ADC_ConfigureBoostMode+0xc2>
900086d2:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
900086d6:	f5b2 2f80 	cmp.w	r2, #262144	@ 0x40000
900086da:	d0f2      	beq.n	900086c2 <ADC_ConfigureBoostMode+0xc2>
900086dc:	e7ad      	b.n	9000863a <ADC_ConfigureBoostMode+0x3a>
    if (freq <= 6250000UL)
900086de:	4a23      	ldr	r2, [pc, #140]	@ (9000876c <ADC_ConfigureBoostMode+0x16c>)
      SET_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
900086e0:	6823      	ldr	r3, [r4, #0]
    if (freq <= 6250000UL)
900086e2:	4295      	cmp	r5, r2
900086e4:	d911      	bls.n	9000870a <ADC_ConfigureBoostMode+0x10a>
    else if (freq <= 12500000UL)
900086e6:	4a22      	ldr	r2, [pc, #136]	@ (90008770 <ADC_ConfigureBoostMode+0x170>)
900086e8:	4295      	cmp	r5, r2
900086ea:	d91f      	bls.n	9000872c <ADC_ConfigureBoostMode+0x12c>
    else if (freq <= 25000000UL)
900086ec:	4a21      	ldr	r2, [pc, #132]	@ (90008774 <ADC_ConfigureBoostMode+0x174>)
900086ee:	4295      	cmp	r5, r2
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
900086f0:	689a      	ldr	r2, [r3, #8]
    else if (freq <= 25000000UL)
900086f2:	d82e      	bhi.n	90008752 <ADC_ConfigureBoostMode+0x152>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
900086f4:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
900086f8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
900086fc:	609a      	str	r2, [r3, #8]
}
900086fe:	bd38      	pop	{r3, r4, r5, pc}
    if (freq <= 6250000UL)
90008700:	4b1a      	ldr	r3, [pc, #104]	@ (9000876c <ADC_ConfigureBoostMode+0x16c>)
90008702:	ebb3 2f15 	cmp.w	r3, r5, lsr #8
90008706:	6823      	ldr	r3, [r4, #0]
90008708:	d310      	bcc.n	9000872c <ADC_ConfigureBoostMode+0x12c>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
9000870a:	689a      	ldr	r2, [r3, #8]
9000870c:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
90008710:	609a      	str	r2, [r3, #8]
}
90008712:	bd38      	pop	{r3, r4, r5, pc}
        freq /= 4UL;
90008714:	0885      	lsrs	r5, r0, #2
  if (HAL_GetREVID() <= REV_ID_Y) /* STM32H7 silicon Rev.Y */
90008716:	f7ff fb17 	bl	90007d48 <HAL_GetREVID>
9000871a:	f241 0303 	movw	r3, #4099	@ 0x1003
9000871e:	4298      	cmp	r0, r3
90008720:	d8dd      	bhi.n	900086de <ADC_ConfigureBoostMode+0xde>
90008722:	e790      	b.n	90008646 <ADC_ConfigureBoostMode+0x46>
        freq /= 128UL;
90008724:	09c5      	lsrs	r5, r0, #7
        break;
90008726:	e788      	b.n	9000863a <ADC_ConfigureBoostMode+0x3a>
        freq /= 16UL;
90008728:	0905      	lsrs	r5, r0, #4
        break;
9000872a:	e786      	b.n	9000863a <ADC_ConfigureBoostMode+0x3a>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
9000872c:	689a      	ldr	r2, [r3, #8]
9000872e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
90008732:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90008736:	609a      	str	r2, [r3, #8]
}
90008738:	bd38      	pop	{r3, r4, r5, pc}
        freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
9000873a:	0c1b      	lsrs	r3, r3, #16
9000873c:	fbb5 f5f3 	udiv	r5, r5, r3
  if (HAL_GetREVID() <= REV_ID_Y) /* STM32H7 silicon Rev.Y */
90008740:	f7ff fb02 	bl	90007d48 <HAL_GetREVID>
90008744:	f241 0303 	movw	r3, #4099	@ 0x1003
90008748:	4298      	cmp	r0, r3
9000874a:	d8c8      	bhi.n	900086de <ADC_ConfigureBoostMode+0xde>
9000874c:	e77b      	b.n	90008646 <ADC_ConfigureBoostMode+0x46>
        freq /= 64UL;
9000874e:	0985      	lsrs	r5, r0, #6
        break;
90008750:	e773      	b.n	9000863a <ADC_ConfigureBoostMode+0x3a>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
90008752:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
90008756:	609a      	str	r2, [r3, #8]
}
90008758:	bd38      	pop	{r3, r4, r5, pc}
9000875a:	bf00      	nop
9000875c:	40022000 	.word	0x40022000
90008760:	58026300 	.word	0x58026300
90008764:	01312d00 	.word	0x01312d00
90008768:	40022300 	.word	0x40022300
9000876c:	00bebc21 	.word	0x00bebc21
90008770:	017d7841 	.word	0x017d7841
90008774:	02faf081 	.word	0x02faf081

90008778 <HAL_ADC_Init>:
{
90008778:	b570      	push	{r4, r5, r6, lr}
  __IO uint32_t wait_loop_index = 0UL;
9000877a:	2300      	movs	r3, #0
{
9000877c:	b082      	sub	sp, #8
  __IO uint32_t wait_loop_index = 0UL;
9000877e:	9301      	str	r3, [sp, #4]
  if (hadc == NULL)
90008780:	2800      	cmp	r0, #0
90008782:	f000 80a9 	beq.w	900088d8 <HAL_ADC_Init+0x160>
  if (hadc->State == HAL_ADC_STATE_RESET)
90008786:	6d45      	ldr	r5, [r0, #84]	@ 0x54
90008788:	4604      	mov	r4, r0
9000878a:	2d00      	cmp	r5, #0
9000878c:	f000 80aa 	beq.w	900088e4 <HAL_ADC_Init+0x16c>
  if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
90008790:	6822      	ldr	r2, [r4, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
90008792:	6893      	ldr	r3, [r2, #8]
90008794:	009e      	lsls	r6, r3, #2
90008796:	d503      	bpl.n	900087a0 <HAL_ADC_Init+0x28>
  CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
90008798:	6891      	ldr	r1, [r2, #8]
9000879a:	4b71      	ldr	r3, [pc, #452]	@ (90008960 <HAL_ADC_Init+0x1e8>)
9000879c:	400b      	ands	r3, r1
9000879e:	6093      	str	r3, [r2, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
900087a0:	6893      	ldr	r3, [r2, #8]
900087a2:	00dd      	lsls	r5, r3, #3
900087a4:	d416      	bmi.n	900087d4 <HAL_ADC_Init+0x5c>
    wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
900087a6:	4b6f      	ldr	r3, [pc, #444]	@ (90008964 <HAL_ADC_Init+0x1ec>)
900087a8:	496f      	ldr	r1, [pc, #444]	@ (90008968 <HAL_ADC_Init+0x1f0>)
900087aa:	681b      	ldr	r3, [r3, #0]
  MODIFY_REG(ADCx->CR,
900087ac:	6890      	ldr	r0, [r2, #8]
900087ae:	099b      	lsrs	r3, r3, #6
900087b0:	fba1 1303 	umull	r1, r3, r1, r3
900087b4:	496d      	ldr	r1, [pc, #436]	@ (9000896c <HAL_ADC_Init+0x1f4>)
900087b6:	099b      	lsrs	r3, r3, #6
900087b8:	4001      	ands	r1, r0
900087ba:	3301      	adds	r3, #1
900087bc:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
900087c0:	6091      	str	r1, [r2, #8]
900087c2:	9301      	str	r3, [sp, #4]
    while (wait_loop_index != 0UL)
900087c4:	9b01      	ldr	r3, [sp, #4]
900087c6:	b12b      	cbz	r3, 900087d4 <HAL_ADC_Init+0x5c>
      wait_loop_index--;
900087c8:	9b01      	ldr	r3, [sp, #4]
900087ca:	3b01      	subs	r3, #1
900087cc:	9301      	str	r3, [sp, #4]
    while (wait_loop_index != 0UL)
900087ce:	9b01      	ldr	r3, [sp, #4]
900087d0:	2b00      	cmp	r3, #0
900087d2:	d1f9      	bne.n	900087c8 <HAL_ADC_Init+0x50>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
900087d4:	6893      	ldr	r3, [r2, #8]
900087d6:	00d8      	lsls	r0, r3, #3
900087d8:	f100 8082 	bmi.w	900088e0 <HAL_ADC_Init+0x168>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
900087dc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    tmp_hal_status = HAL_ERROR;
900087de:	2501      	movs	r5, #1
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
900087e0:	f043 0310 	orr.w	r3, r3, #16
900087e4:	6563      	str	r3, [r4, #84]	@ 0x54
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
900087e6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900087e8:	432b      	orrs	r3, r5
900087ea:	65a3      	str	r3, [r4, #88]	@ 0x58
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
900087ec:	6893      	ldr	r3, [r2, #8]
900087ee:	f013 0f04 	tst.w	r3, #4
  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
900087f2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900087f4:	d16c      	bne.n	900088d0 <HAL_ADC_Init+0x158>
900087f6:	06d9      	lsls	r1, r3, #27
900087f8:	d46a      	bmi.n	900088d0 <HAL_ADC_Init+0x158>
    ADC_STATE_CLR_SET(hadc->State,
900087fa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900087fc:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
90008800:	f043 0302 	orr.w	r3, r3, #2
90008804:	6563      	str	r3, [r4, #84]	@ 0x54
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
90008806:	6893      	ldr	r3, [r2, #8]
90008808:	07db      	lsls	r3, r3, #31
9000880a:	d40c      	bmi.n	90008826 <HAL_ADC_Init+0xae>
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
9000880c:	4b58      	ldr	r3, [pc, #352]	@ (90008970 <HAL_ADC_Init+0x1f8>)
9000880e:	429a      	cmp	r2, r3
90008810:	f000 8081 	beq.w	90008916 <HAL_ADC_Init+0x19e>
90008814:	f503 7380 	add.w	r3, r3, #256	@ 0x100
90008818:	429a      	cmp	r2, r3
9000881a:	d07c      	beq.n	90008916 <HAL_ADC_Init+0x19e>
9000881c:	4b55      	ldr	r3, [pc, #340]	@ (90008974 <HAL_ADC_Init+0x1fc>)
9000881e:	689b      	ldr	r3, [r3, #8]
90008820:	07d9      	lsls	r1, r3, #31
90008822:	f140 8089 	bpl.w	90008938 <HAL_ADC_Init+0x1c0>
    if ((HAL_GetREVID() > REV_ID_Y) && (ADC_RESOLUTION_8B == hadc->Init.Resolution))
90008826:	f7ff fa8f 	bl	90007d48 <HAL_GetREVID>
9000882a:	f241 0303 	movw	r3, #4099	@ 0x1003
9000882e:	68a1      	ldr	r1, [r4, #8]
90008830:	4298      	cmp	r0, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
90008832:	7f23      	ldrb	r3, [r4, #28]
    if ((HAL_GetREVID() > REV_ID_Y) && (ADC_RESOLUTION_8B == hadc->Init.Resolution))
90008834:	d85c      	bhi.n	900088f0 <HAL_ADC_Init+0x178>
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
90008836:	f894 c015 	ldrb.w	ip, [r4, #21]
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
9000883a:	041a      	lsls	r2, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
9000883c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000883e:	ea42 324c 	orr.w	r2, r2, ip, lsl #13
90008842:	4302      	orrs	r2, r0
90008844:	430a      	orrs	r2, r1
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
90008846:	2b01      	cmp	r3, #1
90008848:	d103      	bne.n	90008852 <HAL_ADC_Init+0xda>
      tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
9000884a:	6a23      	ldr	r3, [r4, #32]
9000884c:	3b01      	subs	r3, #1
9000884e:	ea42 4243 	orr.w	r2, r2, r3, lsl #17
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
90008852:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008854:	b123      	cbz	r3, 90008860 <HAL_ADC_Init+0xe8>
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
90008856:	f403 7378 	and.w	r3, r3, #992	@ 0x3e0
                  | hadc->Init.ExternalTrigConvEdge
9000885a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000885c:	430b      	orrs	r3, r1
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
9000885e:	431a      	orrs	r2, r3
    MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
90008860:	6823      	ldr	r3, [r4, #0]
90008862:	4945      	ldr	r1, [pc, #276]	@ (90008978 <HAL_ADC_Init+0x200>)
90008864:	68d8      	ldr	r0, [r3, #12]
90008866:	4001      	ands	r1, r0
90008868:	4311      	orrs	r1, r2
9000886a:	60d9      	str	r1, [r3, #12]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
9000886c:	689a      	ldr	r2, [r3, #8]
9000886e:	f012 0f04 	tst.w	r2, #4
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
90008872:	689a      	ldr	r2, [r3, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
90008874:	d11c      	bne.n	900088b0 <HAL_ADC_Init+0x138>
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
90008876:	0712      	lsls	r2, r2, #28
90008878:	d41a      	bmi.n	900088b0 <HAL_ADC_Init+0x138>
      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
9000887a:	68d8      	ldr	r0, [r3, #12]
9000887c:	4a3f      	ldr	r2, [pc, #252]	@ (9000897c <HAL_ADC_Init+0x204>)
                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
9000887e:	7d21      	ldrb	r1, [r4, #20]
      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
90008880:	4002      	ands	r2, r0
90008882:	ea42 3281 	orr.w	r2, r2, r1, lsl #14
90008886:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90008888:	430a      	orrs	r2, r1
9000888a:	60da      	str	r2, [r3, #12]
      if (hadc->Init.OversamplingMode == ENABLE)
9000888c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
90008890:	2a01      	cmp	r2, #1
90008892:	d053      	beq.n	9000893c <HAL_ADC_Init+0x1c4>
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
90008894:	691a      	ldr	r2, [r3, #16]
90008896:	f022 0201 	bic.w	r2, r2, #1
9000889a:	611a      	str	r2, [r3, #16]
      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
9000889c:	691a      	ldr	r2, [r3, #16]
      ADC_ConfigureBoostMode(hadc);
9000889e:	4620      	mov	r0, r4
      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
900088a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900088a2:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
900088a6:	430a      	orrs	r2, r1
900088a8:	611a      	str	r2, [r3, #16]
      ADC_ConfigureBoostMode(hadc);
900088aa:	f7ff fea9 	bl	90008600 <ADC_ConfigureBoostMode>
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
900088ae:	6823      	ldr	r3, [r4, #0]
    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
900088b0:	68e2      	ldr	r2, [r4, #12]
900088b2:	2a01      	cmp	r2, #1
900088b4:	d027      	beq.n	90008906 <HAL_ADC_Init+0x18e>
      CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
900088b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900088b8:	f022 020f 	bic.w	r2, r2, #15
900088bc:	631a      	str	r2, [r3, #48]	@ 0x30
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
900088be:	6d63      	ldr	r3, [r4, #84]	@ 0x54
}
900088c0:	4628      	mov	r0, r5
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
900088c2:	f023 0303 	bic.w	r3, r3, #3
900088c6:	f043 0301 	orr.w	r3, r3, #1
900088ca:	6563      	str	r3, [r4, #84]	@ 0x54
}
900088cc:	b002      	add	sp, #8
900088ce:	bd70      	pop	{r4, r5, r6, pc}
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
900088d0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900088d2:	f043 0310 	orr.w	r3, r3, #16
900088d6:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
900088d8:	2501      	movs	r5, #1
}
900088da:	4628      	mov	r0, r5
900088dc:	b002      	add	sp, #8
900088de:	bd70      	pop	{r4, r5, r6, pc}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
900088e0:	2500      	movs	r5, #0
900088e2:	e783      	b.n	900087ec <HAL_ADC_Init+0x74>
    HAL_ADC_MspInit(hadc);
900088e4:	f7fb fdd6 	bl	90004494 <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
900088e8:	65a5      	str	r5, [r4, #88]	@ 0x58
    hadc->Lock = HAL_UNLOCKED;
900088ea:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
900088ee:	e74f      	b.n	90008790 <HAL_ADC_Init+0x18>
    if ((HAL_GetREVID() > REV_ID_Y) && (ADC_RESOLUTION_8B == hadc->Init.Resolution))
900088f0:	2910      	cmp	r1, #16
900088f2:	d1a0      	bne.n	90008836 <HAL_ADC_Init+0xbe>
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
900088f4:	7d61      	ldrb	r1, [r4, #21]
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
900088f6:	041a      	lsls	r2, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
900088f8:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
900088fc:	6b21      	ldr	r1, [r4, #48]	@ 0x30
900088fe:	430a      	orrs	r2, r1
90008900:	f042 021c 	orr.w	r2, r2, #28
90008904:	e79f      	b.n	90008846 <HAL_ADC_Init+0xce>
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
90008906:	6b19      	ldr	r1, [r3, #48]	@ 0x30
90008908:	69a2      	ldr	r2, [r4, #24]
9000890a:	f021 010f 	bic.w	r1, r1, #15
9000890e:	3a01      	subs	r2, #1
90008910:	430a      	orrs	r2, r1
90008912:	631a      	str	r2, [r3, #48]	@ 0x30
90008914:	e7d3      	b.n	900088be <HAL_ADC_Init+0x146>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
90008916:	4a16      	ldr	r2, [pc, #88]	@ (90008970 <HAL_ADC_Init+0x1f8>)
90008918:	4b19      	ldr	r3, [pc, #100]	@ (90008980 <HAL_ADC_Init+0x208>)
9000891a:	6892      	ldr	r2, [r2, #8]
9000891c:	689b      	ldr	r3, [r3, #8]
9000891e:	07de      	lsls	r6, r3, #31
90008920:	d481      	bmi.n	90008826 <HAL_ADC_Init+0xae>
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
90008922:	07d0      	lsls	r0, r2, #31
90008924:	f53f af7f 	bmi.w	90008826 <HAL_ADC_Init+0xae>
        LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
90008928:	4a16      	ldr	r2, [pc, #88]	@ (90008984 <HAL_ADC_Init+0x20c>)
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
9000892a:	6893      	ldr	r3, [r2, #8]
9000892c:	6861      	ldr	r1, [r4, #4]
9000892e:	f423 137c 	bic.w	r3, r3, #4128768	@ 0x3f0000
90008932:	430b      	orrs	r3, r1
90008934:	6093      	str	r3, [r2, #8]
}
90008936:	e776      	b.n	90008826 <HAL_ADC_Init+0xae>
90008938:	4a13      	ldr	r2, [pc, #76]	@ (90008988 <HAL_ADC_Init+0x210>)
9000893a:	e7f6      	b.n	9000892a <HAL_ADC_Init+0x1b2>
        MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
9000893c:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	@ 0x3c
90008940:	6c66      	ldr	r6, [r4, #68]	@ 0x44
90008942:	3901      	subs	r1, #1
90008944:	6918      	ldr	r0, [r3, #16]
90008946:	4332      	orrs	r2, r6
90008948:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000894c:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000894e:	430a      	orrs	r2, r1
90008950:	490e      	ldr	r1, [pc, #56]	@ (9000898c <HAL_ADC_Init+0x214>)
90008952:	4001      	ands	r1, r0
90008954:	430a      	orrs	r2, r1
90008956:	f042 0201 	orr.w	r2, r2, #1
9000895a:	611a      	str	r2, [r3, #16]
9000895c:	e79e      	b.n	9000889c <HAL_ADC_Init+0x124>
9000895e:	bf00      	nop
90008960:	5fffffc0 	.word	0x5fffffc0
90008964:	24000078 	.word	0x24000078
90008968:	053e2d63 	.word	0x053e2d63
9000896c:	6fffffc0 	.word	0x6fffffc0
90008970:	40022000 	.word	0x40022000
90008974:	58026000 	.word	0x58026000
90008978:	fff0c003 	.word	0xfff0c003
9000897c:	ffffbffc 	.word	0xffffbffc
90008980:	40022100 	.word	0x40022100
90008984:	40022300 	.word	0x40022300
90008988:	58026300 	.word	0x58026300
9000898c:	fc00f81e 	.word	0xfc00f81e

90008990 <HAL_ADCEx_MultiModeConfigChannel>:
  * @param hadc Master ADC handle
  * @param multimode Structure of ADC multimode configuration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *multimode)
{
90008990:	b4f0      	push	{r4, r5, r6, r7}
    assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
    assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
  }

  /* Process locked */
  __HAL_LOCK(hadc);
90008992:	f890 2050 	ldrb.w	r2, [r0, #80]	@ 0x50
{
90008996:	b09a      	sub	sp, #104	@ 0x68
  if (multimode->Mode != ADC_MODE_INDEPENDENT)
90008998:	680e      	ldr	r6, [r1, #0]
  __HAL_LOCK(hadc);
9000899a:	2a01      	cmp	r2, #1
9000899c:	d038      	beq.n	90008a10 <HAL_ADCEx_MultiModeConfigChannel+0x80>
9000899e:	4603      	mov	r3, r0

  tmphadcSlave.State = HAL_ADC_STATE_RESET;
  tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;

  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
900089a0:	4d28      	ldr	r5, [pc, #160]	@ (90008a44 <HAL_ADCEx_MultiModeConfigChannel+0xb4>)
  tmphadcSlave.State = HAL_ADC_STATE_RESET;
900089a2:	2200      	movs	r2, #0
  __HAL_LOCK(hadc);
900089a4:	2001      	movs	r0, #1
  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
900089a6:	681c      	ldr	r4, [r3, #0]
  tmphadcSlave.State = HAL_ADC_STATE_RESET;
900089a8:	9216      	str	r2, [sp, #88]	@ 0x58
  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
900089aa:	42ac      	cmp	r4, r5
  __HAL_LOCK(hadc);
900089ac:	f883 0050 	strb.w	r0, [r3, #80]	@ 0x50
  tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
900089b0:	9217      	str	r2, [sp, #92]	@ 0x5c
  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
900089b2:	d008      	beq.n	900089c6 <HAL_ADCEx_MultiModeConfigChannel+0x36>

  if (tmphadcSlave.Instance == NULL)
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
900089b4:	6d59      	ldr	r1, [r3, #84]	@ 0x54

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
900089b6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
900089ba:	f041 0120 	orr.w	r1, r1, #32
900089be:	6559      	str	r1, [r3, #84]	@ 0x54
  /* Process unlocked */
  __HAL_UNLOCK(hadc);

  /* Return function status */
  return tmp_hal_status;
}
900089c0:	b01a      	add	sp, #104	@ 0x68
900089c2:	bcf0      	pop	{r4, r5, r6, r7}
900089c4:	4770      	bx	lr
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
900089c6:	4a20      	ldr	r2, [pc, #128]	@ (90008a48 <HAL_ADCEx_MultiModeConfigChannel+0xb8>)
900089c8:	6890      	ldr	r0, [r2, #8]
900089ca:	0740      	lsls	r0, r0, #29
900089cc:	d50b      	bpl.n	900089e6 <HAL_ADCEx_MultiModeConfigChannel+0x56>
900089ce:	68a2      	ldr	r2, [r4, #8]
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
900089d0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
    tmp_hal_status = HAL_ERROR;
900089d2:	2001      	movs	r0, #1
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
900089d4:	f042 0220 	orr.w	r2, r2, #32
900089d8:	655a      	str	r2, [r3, #84]	@ 0x54
  __HAL_UNLOCK(hadc);
900089da:	2200      	movs	r2, #0
900089dc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
}
900089e0:	b01a      	add	sp, #104	@ 0x68
900089e2:	bcf0      	pop	{r4, r5, r6, r7}
900089e4:	4770      	bx	lr
900089e6:	68a0      	ldr	r0, [r4, #8]
900089e8:	0745      	lsls	r5, r0, #29
900089ea:	d4f1      	bmi.n	900089d0 <HAL_ADCEx_MultiModeConfigChannel+0x40>
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
900089ec:	b9a6      	cbnz	r6, 90008a18 <HAL_ADCEx_MultiModeConfigChannel+0x88>
      CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
900089ee:	4917      	ldr	r1, [pc, #92]	@ (90008a4c <HAL_ADCEx_MultiModeConfigChannel+0xbc>)
900089f0:	6888      	ldr	r0, [r1, #8]
900089f2:	f420 4040 	bic.w	r0, r0, #49152	@ 0xc000
900089f6:	6088      	str	r0, [r1, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
900089f8:	68a0      	ldr	r0, [r4, #8]
900089fa:	6892      	ldr	r2, [r2, #8]
900089fc:	07d4      	lsls	r4, r2, #31
900089fe:	d405      	bmi.n	90008a0c <HAL_ADCEx_MultiModeConfigChannel+0x7c>
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
90008a00:	07c5      	lsls	r5, r0, #31
90008a02:	d403      	bmi.n	90008a0c <HAL_ADCEx_MultiModeConfigChannel+0x7c>
        CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
90008a04:	6888      	ldr	r0, [r1, #8]
90008a06:	4a12      	ldr	r2, [pc, #72]	@ (90008a50 <HAL_ADCEx_MultiModeConfigChannel+0xc0>)
90008a08:	4002      	ands	r2, r0
90008a0a:	608a      	str	r2, [r1, #8]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
90008a0c:	2000      	movs	r0, #0
90008a0e:	e7e4      	b.n	900089da <HAL_ADCEx_MultiModeConfigChannel+0x4a>
  __HAL_LOCK(hadc);
90008a10:	2002      	movs	r0, #2
}
90008a12:	b01a      	add	sp, #104	@ 0x68
90008a14:	bcf0      	pop	{r4, r5, r6, r7}
90008a16:	4770      	bx	lr
      MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
90008a18:	4f0c      	ldr	r7, [pc, #48]	@ (90008a4c <HAL_ADCEx_MultiModeConfigChannel+0xbc>)
90008a1a:	684d      	ldr	r5, [r1, #4]
90008a1c:	68b8      	ldr	r0, [r7, #8]
90008a1e:	f420 4040 	bic.w	r0, r0, #49152	@ 0xc000
90008a22:	4328      	orrs	r0, r5
90008a24:	60b8      	str	r0, [r7, #8]
90008a26:	68a0      	ldr	r0, [r4, #8]
90008a28:	6892      	ldr	r2, [r2, #8]
90008a2a:	07d4      	lsls	r4, r2, #31
90008a2c:	d4ee      	bmi.n	90008a0c <HAL_ADCEx_MultiModeConfigChannel+0x7c>
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
90008a2e:	07c2      	lsls	r2, r0, #31
90008a30:	d4ec      	bmi.n	90008a0c <HAL_ADCEx_MultiModeConfigChannel+0x7c>
        MODIFY_REG(tmpADC_Common->CCR,
90008a32:	688a      	ldr	r2, [r1, #8]
90008a34:	68b8      	ldr	r0, [r7, #8]
90008a36:	4906      	ldr	r1, [pc, #24]	@ (90008a50 <HAL_ADCEx_MultiModeConfigChannel+0xc0>)
90008a38:	4332      	orrs	r2, r6
90008a3a:	4001      	ands	r1, r0
90008a3c:	430a      	orrs	r2, r1
90008a3e:	60ba      	str	r2, [r7, #8]
90008a40:	e7e4      	b.n	90008a0c <HAL_ADCEx_MultiModeConfigChannel+0x7c>
90008a42:	bf00      	nop
90008a44:	40022000 	.word	0x40022000
90008a48:	40022100 	.word	0x40022100
90008a4c:	40022300 	.word	0x40022300
90008a50:	fffff0e0 	.word	0xfffff0e0

90008a54 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008a54:	4906      	ldr	r1, [pc, #24]	@ (90008a70 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90008a56:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90008a5a:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90008a5c:	4b05      	ldr	r3, [pc, #20]	@ (90008a74 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008a5e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90008a60:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90008a64:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90008a68:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90008a6a:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90008a6c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90008a6e:	4770      	bx	lr
90008a70:	e000ed00 	.word	0xe000ed00
90008a74:	05fa0000 	.word	0x05fa0000

90008a78 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90008a78:	4b1a      	ldr	r3, [pc, #104]	@ (90008ae4 <HAL_NVIC_SetPriority+0x6c>)
90008a7a:	68db      	ldr	r3, [r3, #12]
90008a7c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90008a80:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90008a82:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008a86:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90008a8a:	f1be 0f04 	cmp.w	lr, #4
90008a8e:	bf28      	it	cs
90008a90:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008a94:	f1bc 0f06 	cmp.w	ip, #6
90008a98:	d91a      	bls.n	90008ad0 <HAL_NVIC_SetPriority+0x58>
90008a9a:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90008a9e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
90008aa2:	fa03 f30c 	lsl.w	r3, r3, ip
90008aa6:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008aaa:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
  if ((int32_t)(IRQn) >= 0)
90008aae:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008ab0:	fa03 f30e 	lsl.w	r3, r3, lr
90008ab4:	ea21 0303 	bic.w	r3, r1, r3
90008ab8:	fa03 f30c 	lsl.w	r3, r3, ip
90008abc:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008ac0:	ea4f 1303 	mov.w	r3, r3, lsl #4
90008ac4:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90008ac6:	db06      	blt.n	90008ad6 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008ac8:	4a07      	ldr	r2, [pc, #28]	@ (90008ae8 <HAL_NVIC_SetPriority+0x70>)
90008aca:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90008acc:	f85d fb04 	ldr.w	pc, [sp], #4
90008ad0:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008ad2:	4694      	mov	ip, r2
90008ad4:	e7e9      	b.n	90008aaa <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008ad6:	f000 000f 	and.w	r0, r0, #15
90008ada:	4a04      	ldr	r2, [pc, #16]	@ (90008aec <HAL_NVIC_SetPriority+0x74>)
90008adc:	5413      	strb	r3, [r2, r0]
90008ade:	f85d fb04 	ldr.w	pc, [sp], #4
90008ae2:	bf00      	nop
90008ae4:	e000ed00 	.word	0xe000ed00
90008ae8:	e000e400 	.word	0xe000e400
90008aec:	e000ed14 	.word	0xe000ed14

90008af0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008af0:	2800      	cmp	r0, #0
90008af2:	db07      	blt.n	90008b04 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008af4:	2301      	movs	r3, #1
90008af6:	f000 011f 	and.w	r1, r0, #31
90008afa:	4a03      	ldr	r2, [pc, #12]	@ (90008b08 <HAL_NVIC_EnableIRQ+0x18>)
90008afc:	0940      	lsrs	r0, r0, #5
90008afe:	408b      	lsls	r3, r1
90008b00:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90008b04:	4770      	bx	lr
90008b06:	bf00      	nop
90008b08:	e000e100 	.word	0xe000e100

90008b0c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008b0c:	2800      	cmp	r0, #0
90008b0e:	db0c      	blt.n	90008b2a <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008b10:	0943      	lsrs	r3, r0, #5
90008b12:	2201      	movs	r2, #1
90008b14:	f000 001f 	and.w	r0, r0, #31
90008b18:	4904      	ldr	r1, [pc, #16]	@ (90008b2c <HAL_NVIC_DisableIRQ+0x20>)
90008b1a:	3320      	adds	r3, #32
90008b1c:	4082      	lsls	r2, r0
90008b1e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90008b22:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008b26:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90008b2a:	4770      	bx	lr
90008b2c:	e000e100 	.word	0xe000e100

90008b30 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
90008b30:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008b34:	4b04      	ldr	r3, [pc, #16]	@ (90008b48 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90008b36:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008b38:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90008b3a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90008b3e:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90008b40:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90008b44:	4770      	bx	lr
90008b46:	bf00      	nop
90008b48:	e000ed00 	.word	0xe000ed00

90008b4c <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90008b4c:	4b06      	ldr	r3, [pc, #24]	@ (90008b68 <HAL_MPU_Enable+0x1c>)
90008b4e:	f040 0001 	orr.w	r0, r0, #1
90008b52:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90008b56:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90008b58:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90008b5c:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90008b5e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008b62:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90008b66:	4770      	bx	lr
90008b68:	e000ed00 	.word	0xe000ed00

90008b6c <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90008b6c:	4a17      	ldr	r2, [pc, #92]	@ (90008bcc <HAL_MPU_ConfigRegion+0x60>)
90008b6e:	7843      	ldrb	r3, [r0, #1]
90008b70:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != 0UL)
90008b74:	7801      	ldrb	r1, [r0, #0]
90008b76:	b321      	cbz	r1, 90008bc2 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90008b78:	6843      	ldr	r3, [r0, #4]
{
90008b7a:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
90008b7c:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008b80:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008b82:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008b86:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90008b88:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008b8c:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90008b90:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008b94:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90008b96:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008b98:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90008b9c:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008ba0:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90008ba4:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008ba8:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90008bac:	7a01      	ldrb	r1, [r0, #8]
90008bae:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90008bb2:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90008bb6:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008bba:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90008bbe:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90008bc2:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
90008bc6:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
90008bca:	4770      	bx	lr
90008bcc:	e000ed00 	.word	0xe000ed00

90008bd0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90008bd0:	2800      	cmp	r0, #0
90008bd2:	d036      	beq.n	90008c42 <HAL_CRC_Init+0x72>
{
90008bd4:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90008bd6:	7f43      	ldrb	r3, [r0, #29]
90008bd8:	4604      	mov	r4, r0
90008bda:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008bde:	b363      	cbz	r3, 90008c3a <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90008be0:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008be2:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90008be4:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008be6:	b9f3      	cbnz	r3, 90008c26 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90008be8:	6823      	ldr	r3, [r4, #0]
90008bea:	4a17      	ldr	r2, [pc, #92]	@ (90008c48 <HAL_CRC_Init+0x78>)
90008bec:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90008bee:	689a      	ldr	r2, [r3, #8]
90008bf0:	f022 0218 	bic.w	r2, r2, #24
90008bf4:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90008bf6:	7962      	ldrb	r2, [r4, #5]
90008bf8:	b18a      	cbz	r2, 90008c1e <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90008bfa:	6922      	ldr	r2, [r4, #16]
90008bfc:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008bfe:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008c00:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008c04:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90008c08:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90008c0a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008c0c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008c0e:	689a      	ldr	r2, [r3, #8]
90008c10:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008c14:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90008c16:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008c18:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90008c1a:	7761      	strb	r1, [r4, #29]
}
90008c1c:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008c1e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
90008c22:	611a      	str	r2, [r3, #16]
90008c24:	e7eb      	b.n	90008bfe <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90008c26:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90008c2a:	4620      	mov	r0, r4
90008c2c:	f000 f80e 	bl	90008c4c <HAL_CRCEx_Polynomial_Set>
90008c30:	b908      	cbnz	r0, 90008c36 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008c32:	6823      	ldr	r3, [r4, #0]
90008c34:	e7df      	b.n	90008bf6 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90008c36:	2001      	movs	r0, #1
}
90008c38:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90008c3a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90008c3c:	f7fb fc8a 	bl	90004554 <HAL_CRC_MspInit>
90008c40:	e7ce      	b.n	90008be0 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90008c42:	2001      	movs	r0, #1
}
90008c44:	4770      	bx	lr
90008c46:	bf00      	nop
90008c48:	04c11db7 	.word	0x04c11db7

90008c4c <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90008c4c:	07cb      	lsls	r3, r1, #31
90008c4e:	d51a      	bpl.n	90008c86 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90008c50:	231f      	movs	r3, #31
{
90008c52:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008c54:	3b01      	subs	r3, #1
90008c56:	1c5c      	adds	r4, r3, #1
90008c58:	fa21 fc03 	lsr.w	ip, r1, r3
90008c5c:	d015      	beq.n	90008c8a <HAL_CRCEx_Polynomial_Set+0x3e>
90008c5e:	f01c 0f01 	tst.w	ip, #1
90008c62:	d0f7      	beq.n	90008c54 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90008c64:	2a18      	cmp	r2, #24
90008c66:	d811      	bhi.n	90008c8c <HAL_CRCEx_Polynomial_Set+0x40>
90008c68:	e8df f002 	tbb	[pc, r2]
90008c6c:	10101016 	.word	0x10101016
90008c70:	10101010 	.word	0x10101010
90008c74:	10101024 	.word	0x10101024
90008c78:	10101010 	.word	0x10101010
90008c7c:	10101021 	.word	0x10101021
90008c80:	10101010 	.word	0x10101010
90008c84:	14          	.byte	0x14
90008c85:	00          	.byte	0x00
90008c86:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90008c88:	4770      	bx	lr
    switch (PolyLength)
90008c8a:	b12a      	cbz	r2, 90008c98 <HAL_CRCEx_Polynomial_Set+0x4c>
90008c8c:	2001      	movs	r0, #1
}
90008c8e:	f85d 4b04 	ldr.w	r4, [sp], #4
90008c92:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90008c94:	2b06      	cmp	r3, #6
90008c96:	d8f9      	bhi.n	90008c8c <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90008c98:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008c9a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90008c9c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008c9e:	68a3      	ldr	r3, [r4, #8]
90008ca0:	f023 0318 	bic.w	r3, r3, #24
90008ca4:	4313      	orrs	r3, r2
90008ca6:	60a3      	str	r3, [r4, #8]
}
90008ca8:	f85d 4b04 	ldr.w	r4, [sp], #4
90008cac:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90008cae:	2b07      	cmp	r3, #7
90008cb0:	d9f2      	bls.n	90008c98 <HAL_CRCEx_Polynomial_Set+0x4c>
90008cb2:	e7eb      	b.n	90008c8c <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90008cb4:	2b0f      	cmp	r3, #15
90008cb6:	d9ef      	bls.n	90008c98 <HAL_CRCEx_Polynomial_Set+0x4c>
90008cb8:	e7e8      	b.n	90008c8c <HAL_CRCEx_Polynomial_Set+0x40>
90008cba:	bf00      	nop

90008cbc <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90008cbc:	2800      	cmp	r0, #0
90008cbe:	d035      	beq.n	90008d2c <HAL_DMA2D_Init+0x70>
{
90008cc0:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90008cc2:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
90008cc6:	4604      	mov	r4, r0
90008cc8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008ccc:	b34b      	cbz	r3, 90008d22 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008cce:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008cd0:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008cd2:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008cd4:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008cd8:	69e1      	ldr	r1, [r4, #28]
90008cda:	681d      	ldr	r5, [r3, #0]
90008cdc:	4814      	ldr	r0, [pc, #80]	@ (90008d30 <HAL_DMA2D_Init+0x74>)
90008cde:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008ce0:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008ce2:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008ce4:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008ce6:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008ce8:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008cea:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008cec:	4302      	orrs	r2, r0
90008cee:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90008cf0:	4810      	ldr	r0, [pc, #64]	@ (90008d34 <HAL_DMA2D_Init+0x78>)
90008cf2:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008cf4:	4910      	ldr	r1, [pc, #64]	@ (90008d38 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008cf6:	4302      	orrs	r2, r0
90008cf8:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008cfa:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90008cfc:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008cfe:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008d02:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008d04:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008d06:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008d08:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90008d0a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008d0e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008d10:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
90008d14:	430a      	orrs	r2, r1
90008d16:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008d18:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008d1a:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008d1c:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90008d20:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90008d22:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
90008d26:	f7fb fc2d 	bl	90004584 <HAL_DMA2D_MspInit>
90008d2a:	e7d0      	b.n	90008cce <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90008d2c:	2001      	movs	r0, #1
}
90008d2e:	4770      	bx	lr
90008d30:	fff8ffbf 	.word	0xfff8ffbf
90008d34:	fffffef8 	.word	0xfffffef8
90008d38:	ffff0000 	.word	0xffff0000

90008d3c <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90008d3c:	4770      	bx	lr
90008d3e:	bf00      	nop

90008d40 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90008d40:	4770      	bx	lr
90008d42:	bf00      	nop

90008d44 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008d44:	6803      	ldr	r3, [r0, #0]
{
90008d46:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008d48:	685d      	ldr	r5, [r3, #4]
{
90008d4a:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90008d4c:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90008d4e:	07ea      	lsls	r2, r5, #31
90008d50:	d501      	bpl.n	90008d56 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90008d52:	05f1      	lsls	r1, r6, #23
90008d54:	d456      	bmi.n	90008e04 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90008d56:	06aa      	lsls	r2, r5, #26
90008d58:	d501      	bpl.n	90008d5e <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90008d5a:	04b3      	lsls	r3, r6, #18
90008d5c:	d43b      	bmi.n	90008dd6 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90008d5e:	0728      	lsls	r0, r5, #28
90008d60:	d501      	bpl.n	90008d66 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90008d62:	0531      	lsls	r1, r6, #20
90008d64:	d421      	bmi.n	90008daa <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90008d66:	076a      	lsls	r2, r5, #29
90008d68:	d501      	bpl.n	90008d6e <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90008d6a:	0573      	lsls	r3, r6, #21
90008d6c:	d472      	bmi.n	90008e54 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90008d6e:	07a8      	lsls	r0, r5, #30
90008d70:	d501      	bpl.n	90008d76 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90008d72:	05b1      	lsls	r1, r6, #22
90008d74:	d404      	bmi.n	90008d80 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90008d76:	06ea      	lsls	r2, r5, #27
90008d78:	d501      	bpl.n	90008d7e <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90008d7a:	04f3      	lsls	r3, r6, #19
90008d7c:	d457      	bmi.n	90008e2e <HAL_DMA2D_IRQHandler+0xea>
}
90008d7e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90008d80:	6823      	ldr	r3, [r4, #0]
90008d82:	681a      	ldr	r2, [r3, #0]
90008d84:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90008d88:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90008d8a:	2202      	movs	r2, #2
90008d8c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008d8e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008d90:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008d92:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008d94:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008d96:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008d9a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
90008d9e:	6a23      	ldr	r3, [r4, #32]
90008da0:	2b00      	cmp	r3, #0
90008da2:	d0e8      	beq.n	90008d76 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90008da4:	4620      	mov	r0, r4
90008da6:	4798      	blx	r3
90008da8:	e7e5      	b.n	90008d76 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90008daa:	6823      	ldr	r3, [r4, #0]
90008dac:	681a      	ldr	r2, [r3, #0]
90008dae:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008db2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90008db4:	2208      	movs	r2, #8
90008db6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008db8:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90008dba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008dbc:	4313      	orrs	r3, r2
90008dbe:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008dc0:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008dc4:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008dc6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90008dc8:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008dcc:	2b00      	cmp	r3, #0
90008dce:	d0ca      	beq.n	90008d66 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90008dd0:	4620      	mov	r0, r4
90008dd2:	4798      	blx	r3
90008dd4:	e7c7      	b.n	90008d66 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90008dd6:	6823      	ldr	r3, [r4, #0]
90008dd8:	681a      	ldr	r2, [r3, #0]
90008dda:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90008dde:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90008de0:	2220      	movs	r2, #32
90008de2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008de4:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90008de6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008de8:	f043 0302 	orr.w	r3, r3, #2
90008dec:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008dee:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008df2:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008df4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90008df6:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008dfa:	2b00      	cmp	r3, #0
90008dfc:	d0af      	beq.n	90008d5e <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008dfe:	4620      	mov	r0, r4
90008e00:	4798      	blx	r3
90008e02:	e7ac      	b.n	90008d5e <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90008e04:	681a      	ldr	r2, [r3, #0]
90008e06:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90008e0a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008e0c:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90008e0e:	f042 0201 	orr.w	r2, r2, #1
90008e12:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90008e14:	2201      	movs	r2, #1
90008e16:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008e18:	2304      	movs	r3, #4
90008e1a:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008e1e:	2300      	movs	r3, #0
90008e20:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008e24:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90008e26:	2b00      	cmp	r3, #0
90008e28:	d095      	beq.n	90008d56 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90008e2a:	4798      	blx	r3
90008e2c:	e793      	b.n	90008d56 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008e2e:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008e30:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008e32:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90008e34:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008e36:	681a      	ldr	r2, [r3, #0]
90008e38:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90008e3c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008e3e:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008e40:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008e42:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008e44:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008e48:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008e4a:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008e4e:	f7ff ff77 	bl	90008d40 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008e52:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008e54:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008e56:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008e58:	681a      	ldr	r2, [r3, #0]
90008e5a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90008e5e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008e60:	2204      	movs	r2, #4
90008e62:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008e64:	f7ff ff6a 	bl	90008d3c <HAL_DMA2D_LineEventCallback>
90008e68:	e781      	b.n	90008d6e <HAL_DMA2D_IRQHandler+0x2a>
90008e6a:	bf00      	nop

90008e6c <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008e6c:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90008e70:	2a01      	cmp	r2, #1
90008e72:	d05f      	beq.n	90008f34 <HAL_DMA2D_ConfigLayer+0xc8>
90008e74:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e76:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008e7a:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e7c:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90008e80:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90008e84:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90008e86:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008e88:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90008e8c:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008e90:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e92:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90008e94:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008e96:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008e98:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e9a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008e9e:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008ea2:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008ea4:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008ea6:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008eaa:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008eae:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008eb0:	d923      	bls.n	90008efa <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008eb2:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008eb6:	b971      	cbnz	r1, 90008ed6 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008eb8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008eba:	491f      	ldr	r1, [pc, #124]	@ (90008f38 <HAL_DMA2D_ConfigLayer+0xcc>)
90008ebc:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008ebe:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008ec0:	4311      	orrs	r1, r2
90008ec2:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008ec4:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90008ec6:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008ec8:	2101      	movs	r1, #1

  return HAL_OK;
90008eca:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008ecc:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
90008ed0:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90008ed4:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008ed6:	2d0b      	cmp	r5, #11
90008ed8:	d12a      	bne.n	90008f30 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90008eda:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90008edc:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90008ee0:	4816      	ldr	r0, [pc, #88]	@ (90008f3c <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008ee2:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ee6:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008ee8:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008eec:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008eee:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ef2:	430a      	orrs	r2, r1
90008ef4:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008ef6:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008ef8:	e7e5      	b.n	90008ec6 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008efa:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90008efe:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008f00:	b959      	cbnz	r1, 90008f1a <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008f02:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008f04:	490c      	ldr	r1, [pc, #48]	@ (90008f38 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008f06:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008f08:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008f0a:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008f0c:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008f0e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008f12:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008f14:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008f16:	62a0      	str	r0, [r4, #40]	@ 0x28
90008f18:	e7d5      	b.n	90008ec6 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008f1a:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008f1c:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008f20:	4905      	ldr	r1, [pc, #20]	@ (90008f38 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008f22:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008f24:	4029      	ands	r1, r5
90008f26:	4311      	orrs	r1, r2
90008f28:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008f2a:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008f2c:	6226      	str	r6, [r4, #32]
90008f2e:	e7ca      	b.n	90008ec6 <HAL_DMA2D_ConfigLayer+0x5a>
90008f30:	4801      	ldr	r0, [pc, #4]	@ (90008f38 <HAL_DMA2D_ConfigLayer+0xcc>)
90008f32:	e7d6      	b.n	90008ee2 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90008f34:	2002      	movs	r0, #2
}
90008f36:	4770      	bx	lr
90008f38:	00ccfff0 	.word	0x00ccfff0
90008f3c:	00c0fff0 	.word	0x00c0fff0

90008f40 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90008f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008f44:	680c      	ldr	r4, [r1, #0]
{
90008f46:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008f48:	2c00      	cmp	r4, #0
90008f4a:	f000 80a5 	beq.w	90009098 <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
90008f4e:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008f50:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008f54:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008f58:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008f5a:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
90008f5e:	ea1c 0a04 	ands.w	sl, ip, r4
90008f62:	f000 8094 	beq.w	9000908e <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008f66:	9900      	ldr	r1, [sp, #0]
90008f68:	005f      	lsls	r7, r3, #1
90008f6a:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008f6c:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008f6e:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008f72:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008f76:	f102 38ff 	add.w	r8, r2, #4294967295	@ 0xffffffff
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008f7a:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008f7c:	f1b8 0f01 	cmp.w	r8, #1
90008f80:	f240 808d 	bls.w	9000909e <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90008f84:	2a03      	cmp	r2, #3
90008f86:	f040 80cb 	bne.w	90009120 <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008f8a:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
90008f8c:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008f8e:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008f92:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008f96:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90008f9a:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008f9c:	d077      	beq.n	9000908e <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008f9e:	4e7f      	ldr	r6, [pc, #508]	@ (9000919c <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008fa0:	f003 0703 	and.w	r7, r3, #3
90008fa4:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008fa6:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008faa:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008fac:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008fb0:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008fb4:	497a      	ldr	r1, [pc, #488]	@ (900091a0 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008fb6:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
90008fba:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
90008fbe:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008fc2:	4288      	cmp	r0, r1
90008fc4:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008fc8:	f002 0202 	and.w	r2, r2, #2
90008fcc:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
90008fd0:	9203      	str	r2, [sp, #12]
90008fd2:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90008fd4:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008fd6:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008fda:	d031      	beq.n	90009040 <HAL_GPIO_Init+0x100>
90008fdc:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
90008fe0:	4288      	cmp	r0, r1
90008fe2:	f000 80b0 	beq.w	90009146 <HAL_GPIO_Init+0x206>
90008fe6:	496f      	ldr	r1, [pc, #444]	@ (900091a4 <HAL_GPIO_Init+0x264>)
90008fe8:	4288      	cmp	r0, r1
90008fea:	f000 80b2 	beq.w	90009152 <HAL_GPIO_Init+0x212>
90008fee:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 900091a8 <HAL_GPIO_Init+0x268>
90008ff2:	4560      	cmp	r0, ip
90008ff4:	f000 80a1 	beq.w	9000913a <HAL_GPIO_Init+0x1fa>
90008ff8:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 900091ac <HAL_GPIO_Init+0x26c>
90008ffc:	4560      	cmp	r0, ip
90008ffe:	f000 80b4 	beq.w	9000916a <HAL_GPIO_Init+0x22a>
90009002:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 900091b0 <HAL_GPIO_Init+0x270>
90009006:	4560      	cmp	r0, ip
90009008:	f000 80b5 	beq.w	90009176 <HAL_GPIO_Init+0x236>
9000900c:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 900091b4 <HAL_GPIO_Init+0x274>
90009010:	4560      	cmp	r0, ip
90009012:	f000 80a4 	beq.w	9000915e <HAL_GPIO_Init+0x21e>
90009016:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 900091b8 <HAL_GPIO_Init+0x278>
9000901a:	4560      	cmp	r0, ip
9000901c:	f000 80b1 	beq.w	90009182 <HAL_GPIO_Init+0x242>
90009020:	f8df c198 	ldr.w	ip, [pc, #408]	@ 900091bc <HAL_GPIO_Init+0x27c>
90009024:	4560      	cmp	r0, ip
90009026:	f000 80b2 	beq.w	9000918e <HAL_GPIO_Init+0x24e>
9000902a:	f8df c194 	ldr.w	ip, [pc, #404]	@ 900091c0 <HAL_GPIO_Init+0x280>
9000902e:	4560      	cmp	r0, ip
90009030:	bf0c      	ite	eq
90009032:	f04f 0c09 	moveq.w	ip, #9
90009036:	f04f 0c0a 	movne.w	ip, #10
9000903a:	fa0c f707 	lsl.w	r7, ip, r7
9000903e:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90009040:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90009042:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90009044:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
90009048:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
9000904c:	bf4c      	ite	mi
9000904e:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
90009052:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90009054:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
90009056:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
9000905a:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
9000905e:	bf54      	ite	pl
90009060:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90009062:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90009066:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90009068:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000906c:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90009070:	bf54      	ite	pl
90009072:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90009074:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90009078:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000907a:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000907e:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90009082:	bf54      	ite	pl
90009084:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90009086:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000908a:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
9000908e:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90009090:	fa34 f203 	lsrs.w	r2, r4, r3
90009094:	f47f af61 	bne.w	90008f5a <HAL_GPIO_Init+0x1a>
  }
}
90009098:	b005      	add	sp, #20
9000909a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
9000909e:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900090a0:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
900090a2:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
900090a6:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900090a8:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
900090ac:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900090b0:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
900090b2:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900090b6:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
900090b8:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900090bc:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
900090c0:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900090c4:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900090c8:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900090cc:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
900090d0:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900090d4:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
900090d8:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900090dc:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900090e0:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900090e4:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900090e8:	f47f af4f 	bne.w	90008f8a <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900090ec:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900090f0:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
900090f2:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900090f6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900090fa:	6909      	ldr	r1, [r1, #16]
900090fc:	eb00 0888 	add.w	r8, r0, r8, lsl #2
90009100:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
90009104:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90009108:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000910a:	210f      	movs	r1, #15
9000910c:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90009110:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90009112:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90009116:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
9000911a:	f8c8 c020 	str.w	ip, [r8, #32]
9000911e:	e734      	b.n	90008f8a <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009120:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
90009122:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009126:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009128:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000912c:	fa01 fc07 	lsl.w	ip, r1, r7
90009130:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90009134:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90009138:	e727      	b.n	90008f8a <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000913a:	f04f 0c03 	mov.w	ip, #3
9000913e:	fa0c f707 	lsl.w	r7, ip, r7
90009142:	433a      	orrs	r2, r7
90009144:	e77c      	b.n	90009040 <HAL_GPIO_Init+0x100>
90009146:	f04f 0c01 	mov.w	ip, #1
9000914a:	fa0c f707 	lsl.w	r7, ip, r7
9000914e:	433a      	orrs	r2, r7
90009150:	e776      	b.n	90009040 <HAL_GPIO_Init+0x100>
90009152:	f04f 0c02 	mov.w	ip, #2
90009156:	fa0c f707 	lsl.w	r7, ip, r7
9000915a:	433a      	orrs	r2, r7
9000915c:	e770      	b.n	90009040 <HAL_GPIO_Init+0x100>
9000915e:	f04f 0c06 	mov.w	ip, #6
90009162:	fa0c f707 	lsl.w	r7, ip, r7
90009166:	433a      	orrs	r2, r7
90009168:	e76a      	b.n	90009040 <HAL_GPIO_Init+0x100>
9000916a:	f04f 0c04 	mov.w	ip, #4
9000916e:	fa0c f707 	lsl.w	r7, ip, r7
90009172:	433a      	orrs	r2, r7
90009174:	e764      	b.n	90009040 <HAL_GPIO_Init+0x100>
90009176:	f04f 0c05 	mov.w	ip, #5
9000917a:	fa0c f707 	lsl.w	r7, ip, r7
9000917e:	433a      	orrs	r2, r7
90009180:	e75e      	b.n	90009040 <HAL_GPIO_Init+0x100>
90009182:	f04f 0c07 	mov.w	ip, #7
90009186:	fa0c f707 	lsl.w	r7, ip, r7
9000918a:	433a      	orrs	r2, r7
9000918c:	e758      	b.n	90009040 <HAL_GPIO_Init+0x100>
9000918e:	f04f 0c08 	mov.w	ip, #8
90009192:	fa0c f707 	lsl.w	r7, ip, r7
90009196:	433a      	orrs	r2, r7
90009198:	e752      	b.n	90009040 <HAL_GPIO_Init+0x100>
9000919a:	bf00      	nop
9000919c:	58024400 	.word	0x58024400
900091a0:	58020000 	.word	0x58020000
900091a4:	58020800 	.word	0x58020800
900091a8:	58020c00 	.word	0x58020c00
900091ac:	58021000 	.word	0x58021000
900091b0:	58021400 	.word	0x58021400
900091b4:	58021800 	.word	0x58021800
900091b8:	58021c00 	.word	0x58021c00
900091bc:	58022000 	.word	0x58022000
900091c0:	58022400 	.word	0x58022400

900091c4 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
900091c4:	2900      	cmp	r1, #0
900091c6:	f000 80ac 	beq.w	90009322 <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
900091ca:	2300      	movs	r3, #0
{
900091cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
900091d0:	2601      	movs	r6, #1
{
900091d2:	b083      	sub	sp, #12
900091d4:	f8df a168 	ldr.w	sl, [pc, #360]	@ 90009340 <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900091d8:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900091dc:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
900091e0:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
900091e4:	ea12 0c01 	ands.w	ip, r2, r1
900091e8:	d073      	beq.n	900092d2 <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
900091ea:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900091ee:	f003 0403 	and.w	r4, r3, #3
900091f2:	4455      	add	r5, sl
900091f4:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
900091f6:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900091f8:	fa08 fe04 	lsl.w	lr, r8, r4
900091fc:	ea0e 0707 	and.w	r7, lr, r7
90009200:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009202:	4f4b      	ldr	r7, [pc, #300]	@ (90009330 <HAL_GPIO_DeInit+0x16c>)
90009204:	42b8      	cmp	r0, r7
90009206:	d027      	beq.n	90009258 <HAL_GPIO_DeInit+0x94>
90009208:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
9000920c:	42b8      	cmp	r0, r7
9000920e:	d067      	beq.n	900092e0 <HAL_GPIO_DeInit+0x11c>
90009210:	4f48      	ldr	r7, [pc, #288]	@ (90009334 <HAL_GPIO_DeInit+0x170>)
90009212:	42b8      	cmp	r0, r7
90009214:	d067      	beq.n	900092e6 <HAL_GPIO_DeInit+0x122>
90009216:	4f48      	ldr	r7, [pc, #288]	@ (90009338 <HAL_GPIO_DeInit+0x174>)
90009218:	42b8      	cmp	r0, r7
9000921a:	d06e      	beq.n	900092fa <HAL_GPIO_DeInit+0x136>
9000921c:	4f47      	ldr	r7, [pc, #284]	@ (9000933c <HAL_GPIO_DeInit+0x178>)
9000921e:	42b8      	cmp	r0, r7
90009220:	d070      	beq.n	90009304 <HAL_GPIO_DeInit+0x140>
90009222:	f8df b120 	ldr.w	fp, [pc, #288]	@ 90009344 <HAL_GPIO_DeInit+0x180>
90009226:	4558      	cmp	r0, fp
90009228:	d062      	beq.n	900092f0 <HAL_GPIO_DeInit+0x12c>
9000922a:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 90009348 <HAL_GPIO_DeInit+0x184>
9000922e:	4558      	cmp	r0, fp
90009230:	d072      	beq.n	90009318 <HAL_GPIO_DeInit+0x154>
90009232:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9000934c <HAL_GPIO_DeInit+0x188>
90009236:	4558      	cmp	r0, fp
90009238:	d074      	beq.n	90009324 <HAL_GPIO_DeInit+0x160>
9000923a:	f8df b114 	ldr.w	fp, [pc, #276]	@ 90009350 <HAL_GPIO_DeInit+0x18c>
9000923e:	4558      	cmp	r0, fp
90009240:	d065      	beq.n	9000930e <HAL_GPIO_DeInit+0x14a>
90009242:	f8df b110 	ldr.w	fp, [pc, #272]	@ 90009354 <HAL_GPIO_DeInit+0x190>
90009246:	4558      	cmp	r0, fp
90009248:	bf14      	ite	ne
9000924a:	f04f 0b0a 	movne.w	fp, #10
9000924e:	f04f 0b09 	moveq.w	fp, #9
90009252:	fa0b f404 	lsl.w	r4, fp, r4
90009256:	e000      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
90009258:	2400      	movs	r4, #0
9000925a:	9f01      	ldr	r7, [sp, #4]
9000925c:	42a7      	cmp	r7, r4
9000925e:	d119      	bne.n	90009294 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90009260:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90009264:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
90009268:	ea27 070c 	bic.w	r7, r7, ip
9000926c:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90009270:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
90009274:	ea27 070c 	bic.w	r7, r7, ip
90009278:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
9000927c:	6867      	ldr	r7, [r4, #4]
9000927e:	ea27 070c 	bic.w	r7, r7, ip
90009282:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90009284:	6827      	ldr	r7, [r4, #0]
90009286:	ea27 070c 	bic.w	r7, r7, ip
9000928a:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000928c:	68ac      	ldr	r4, [r5, #8]
9000928e:	ea24 040e 	bic.w	r4, r4, lr
90009292:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009294:	005d      	lsls	r5, r3, #1
90009296:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009298:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000929a:	fa09 f505 	lsl.w	r5, r9, r5
9000929e:	eb00 0787 	add.w	r7, r0, r7, lsl #2
900092a2:	432c      	orrs	r4, r5
900092a4:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900092a6:	f003 0407 	and.w	r4, r3, #7
900092aa:	f8d7 c020 	ldr.w	ip, [r7, #32]
900092ae:	00a4      	lsls	r4, r4, #2
900092b0:	fa08 f404 	lsl.w	r4, r8, r4
900092b4:	ea2c 0404 	bic.w	r4, ip, r4
900092b8:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900092ba:	68c4      	ldr	r4, [r0, #12]
900092bc:	ea24 0405 	bic.w	r4, r4, r5
900092c0:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900092c2:	6844      	ldr	r4, [r0, #4]
900092c4:	ea24 0202 	bic.w	r2, r4, r2
900092c8:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900092ca:	6882      	ldr	r2, [r0, #8]
900092cc:	ea22 0205 	bic.w	r2, r2, r5
900092d0:	6082      	str	r2, [r0, #8]
    }

    position++;
900092d2:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
900092d4:	fa31 f203 	lsrs.w	r2, r1, r3
900092d8:	d182      	bne.n	900091e0 <HAL_GPIO_DeInit+0x1c>
  }
}
900092da:	b003      	add	sp, #12
900092dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900092e0:	fa06 f404 	lsl.w	r4, r6, r4
900092e4:	e7b9      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
900092e6:	f04f 0b02 	mov.w	fp, #2
900092ea:	fa0b f404 	lsl.w	r4, fp, r4
900092ee:	e7b4      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
900092f0:	f04f 0b05 	mov.w	fp, #5
900092f4:	fa0b f404 	lsl.w	r4, fp, r4
900092f8:	e7af      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
900092fa:	f04f 0b03 	mov.w	fp, #3
900092fe:	fa0b f404 	lsl.w	r4, fp, r4
90009302:	e7aa      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
90009304:	f04f 0b04 	mov.w	fp, #4
90009308:	fa0b f404 	lsl.w	r4, fp, r4
9000930c:	e7a5      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
9000930e:	f04f 0b08 	mov.w	fp, #8
90009312:	fa0b f404 	lsl.w	r4, fp, r4
90009316:	e7a0      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
90009318:	f04f 0b06 	mov.w	fp, #6
9000931c:	fa0b f404 	lsl.w	r4, fp, r4
90009320:	e79b      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
90009322:	4770      	bx	lr
90009324:	f04f 0b07 	mov.w	fp, #7
90009328:	fa0b f404 	lsl.w	r4, fp, r4
9000932c:	e795      	b.n	9000925a <HAL_GPIO_DeInit+0x96>
9000932e:	bf00      	nop
90009330:	58020000 	.word	0x58020000
90009334:	58020800 	.word	0x58020800
90009338:	58020c00 	.word	0x58020c00
9000933c:	58021000 	.word	0x58021000
90009340:	58000400 	.word	0x58000400
90009344:	58021400 	.word	0x58021400
90009348:	58021800 	.word	0x58021800
9000934c:	58021c00 	.word	0x58021c00
90009350:	58022000 	.word	0x58022000
90009354:	58022400 	.word	0x58022400

90009358 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90009358:	6903      	ldr	r3, [r0, #16]
9000935a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000935c:	bf14      	ite	ne
9000935e:	2001      	movne	r0, #1
90009360:	2000      	moveq	r0, #0
90009362:	4770      	bx	lr

90009364 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90009364:	b902      	cbnz	r2, 90009368 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90009366:	0409      	lsls	r1, r1, #16
90009368:	6181      	str	r1, [r0, #24]
  }
}
9000936a:	4770      	bx	lr

9000936c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000936c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000936e:	ea01 0203 	and.w	r2, r1, r3
90009372:	ea21 0103 	bic.w	r1, r1, r3
90009376:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000937a:	6181      	str	r1, [r0, #24]
}
9000937c:	4770      	bx	lr
9000937e:	bf00      	nop

90009380 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
90009380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009384:	6803      	ldr	r3, [r0, #0]
{
90009386:	4680      	mov	r8, r0
90009388:	460d      	mov	r5, r1
9000938a:	4692      	mov	sl, r2
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000938c:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000938e:	699c      	ldr	r4, [r3, #24]
90009390:	f014 0402 	ands.w	r4, r4, #2
90009394:	f040 80a5 	bne.w	900094e2 <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
90009398:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000939a:	f012 0c10 	ands.w	ip, r2, #16
9000939e:	d078      	beq.n	90009492 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
900093a0:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
900093a2:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900093a4:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900093a6:	1c68      	adds	r0, r5, #1
900093a8:	d001      	beq.n	900093ae <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
900093aa:	e041      	b.n	90009430 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
900093ac:	b92e      	cbnz	r6, 900093ba <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
900093ae:	699a      	ldr	r2, [r3, #24]
900093b0:	0691      	lsls	r1, r2, #26
900093b2:	d5fb      	bpl.n	900093ac <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
900093b4:	b90e      	cbnz	r6, 900093ba <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900093b6:	2220      	movs	r2, #32
900093b8:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
900093ba:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
900093bc:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900093c0:	2101      	movs	r1, #1

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900093c2:	05d0      	lsls	r0, r2, #23
900093c4:	d569      	bpl.n	9000949a <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900093c6:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900093ca:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900093cc:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900093d0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900093d2:	d504      	bpl.n	900093de <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900093d4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900093d8:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900093dc:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900093de:	0595      	lsls	r5, r2, #22
900093e0:	d504      	bpl.n	900093ec <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900093e2:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900093e6:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900093ea:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900093ec:	699a      	ldr	r2, [r3, #24]
900093ee:	0790      	lsls	r0, r2, #30
900093f0:	d501      	bpl.n	900093f6 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
900093f2:	2200      	movs	r2, #0
900093f4:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900093f6:	699a      	ldr	r2, [r3, #24]
900093f8:	07d1      	lsls	r1, r2, #31
900093fa:	d403      	bmi.n	90009404 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900093fc:	699a      	ldr	r2, [r3, #24]
900093fe:	f042 0201 	orr.w	r2, r2, #1
90009402:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90009404:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90009406:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90009408:	4c37      	ldr	r4, [pc, #220]	@ (900094e8 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000940a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000940c:	4022      	ands	r2, r4
9000940e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009410:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
90009414:	ea43 030c 	orr.w	r3, r3, ip
90009418:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000941c:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009420:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90009424:	2300      	movs	r3, #0
      return HAL_ERROR;
90009426:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009428:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
9000942c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009430:	699a      	ldr	r2, [r3, #24]
90009432:	0692      	lsls	r2, r2, #26
90009434:	d4be      	bmi.n	900093b4 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
90009436:	2e00      	cmp	r6, #0
90009438:	d1bf      	bne.n	900093ba <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000943a:	f7fe fc7f 	bl	90007d3c <HAL_GetTick>
9000943e:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009442:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009446:	4285      	cmp	r5, r0
90009448:	d301      	bcc.n	9000944e <I2C_WaitOnTXISFlagUntilTimeout+0xce>
9000944a:	2d00      	cmp	r5, #0
9000944c:	d1f0      	bne.n	90009430 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000944e:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009450:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009454:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009456:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009458:	0409      	lsls	r1, r1, #16
9000945a:	d50c      	bpl.n	90009476 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
9000945c:	0441      	lsls	r1, r0, #17
9000945e:	d40a      	bmi.n	90009476 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
90009460:	2a20      	cmp	r2, #32
90009462:	d008      	beq.n	90009476 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009464:	685a      	ldr	r2, [r3, #4]
90009466:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000946a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000946c:	f7fe fc66 	bl	90007d3c <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009470:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
90009474:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009476:	699a      	ldr	r2, [r3, #24]
90009478:	0692      	lsls	r2, r2, #26
9000947a:	d494      	bmi.n	900093a6 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000947c:	f7fe fc5e 	bl	90007d3c <HAL_GetTick>
90009480:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009484:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009488:	2819      	cmp	r0, #25
9000948a:	d9f4      	bls.n	90009476 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000948c:	2420      	movs	r4, #32
              status = HAL_ERROR;
9000948e:	2601      	movs	r6, #1
90009490:	e789      	b.n	900093a6 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
90009492:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90009494:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009496:	05d0      	lsls	r0, r2, #23
90009498:	d495      	bmi.n	900093c6 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000949a:	0556      	lsls	r6, r2, #21
9000949c:	d49a      	bmi.n	900093d4 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000949e:	0594      	lsls	r4, r2, #22
900094a0:	d49f      	bmi.n	900093e2 <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
900094a2:	2900      	cmp	r1, #0
900094a4:	d1a2      	bne.n	900093ec <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
900094a6:	1c6a      	adds	r2, r5, #1
900094a8:	f43f af71 	beq.w	9000938e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900094ac:	f7fe fc46 	bl	90007d3c <HAL_GetTick>
900094b0:	eba0 030a 	sub.w	r3, r0, sl
900094b4:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900094b6:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900094ba:	d802      	bhi.n	900094c2 <I2C_WaitOnTXISFlagUntilTimeout+0x142>
900094bc:	2d00      	cmp	r5, #0
900094be:	f47f af65 	bne.w	9000938c <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900094c2:	699a      	ldr	r2, [r3, #24]
900094c4:	f012 0202 	ands.w	r2, r2, #2
900094c8:	f47f af60 	bne.w	9000938c <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900094cc:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900094d0:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900094d2:	430b      	orrs	r3, r1
900094d4:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900094d8:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900094dc:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
900094e0:	e7a0      	b.n	90009424 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
900094e2:	2000      	movs	r0, #0
}
900094e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900094e8:	fe00e800 	.word	0xfe00e800

900094ec <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900094ec:	6803      	ldr	r3, [r0, #0]
{
900094ee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900094f2:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900094f4:	699a      	ldr	r2, [r3, #24]
900094f6:	0694      	lsls	r4, r2, #26
900094f8:	f100 8092 	bmi.w	90009620 <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
900094fc:	4605      	mov	r5, r0
900094fe:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009500:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90009504:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009506:	f012 0c10 	ands.w	ip, r2, #16
9000950a:	f000 808c 	beq.w	90009626 <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
9000950e:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
90009510:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009512:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90009516:	46a2      	mov	sl, r4
90009518:	1c70      	adds	r0, r6, #1
9000951a:	d003      	beq.n	90009524 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
9000951c:	e043      	b.n	900095a6 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000951e:	f1ba 0f00 	cmp.w	sl, #0
90009522:	d107      	bne.n	90009534 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90009524:	699a      	ldr	r2, [r3, #24]
90009526:	0691      	lsls	r1, r2, #26
90009528:	d5f9      	bpl.n	9000951e <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
9000952a:	f1ba 0f00 	cmp.w	sl, #0
9000952e:	d101      	bne.n	90009534 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009530:	2220      	movs	r2, #32
90009532:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90009534:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90009538:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000953a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000953c:	05d0      	lsls	r0, r2, #23
9000953e:	d55a      	bpl.n	900095f6 <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009540:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009544:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90009546:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000954a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000954c:	d504      	bpl.n	90009558 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000954e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009552:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009556:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009558:	0596      	lsls	r6, r2, #22
9000955a:	d504      	bpl.n	90009566 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000955c:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009560:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009564:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90009566:	699a      	ldr	r2, [r3, #24]
90009568:	0790      	lsls	r0, r2, #30
9000956a:	d501      	bpl.n	90009570 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
9000956c:	2200      	movs	r2, #0
9000956e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009570:	699a      	ldr	r2, [r3, #24]
90009572:	07d1      	lsls	r1, r2, #31
90009574:	d403      	bmi.n	9000957e <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90009576:	699a      	ldr	r2, [r3, #24]
90009578:	f042 0201 	orr.w	r2, r2, #1
9000957c:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000957e:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009580:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90009582:	4c33      	ldr	r4, [pc, #204]	@ (90009650 <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009584:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009586:	4022      	ands	r2, r4
90009588:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000958a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
9000958c:	ea43 030c 	orr.w	r3, r3, ip
90009590:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90009592:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009596:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
9000959a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000959c:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
9000959e:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900095a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900095a6:	699a      	ldr	r2, [r3, #24]
900095a8:	0692      	lsls	r2, r2, #26
900095aa:	d4be      	bmi.n	9000952a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
900095ac:	f1ba 0f00 	cmp.w	sl, #0
900095b0:	d1c0      	bne.n	90009534 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900095b2:	f7fe fbc3 	bl	90007d3c <HAL_GetTick>
900095b6:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900095ba:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900095bc:	4286      	cmp	r6, r0
900095be:	d301      	bcc.n	900095c4 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
900095c0:	2e00      	cmp	r6, #0
900095c2:	d1f0      	bne.n	900095a6 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900095c4:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900095c6:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900095ca:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900095cc:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900095ce:	0409      	lsls	r1, r1, #16
900095d0:	d503      	bpl.n	900095da <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
900095d2:	0441      	lsls	r1, r0, #17
900095d4:	d401      	bmi.n	900095da <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
900095d6:	2a20      	cmp	r2, #32
900095d8:	d130      	bne.n	9000963c <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900095da:	699a      	ldr	r2, [r3, #24]
900095dc:	0692      	lsls	r2, r2, #26
900095de:	d49b      	bmi.n	90009518 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900095e0:	f7fe fbac 	bl	90007d3c <HAL_GetTick>
900095e4:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900095e8:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900095ea:	2819      	cmp	r0, #25
900095ec:	d9f5      	bls.n	900095da <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900095ee:	2420      	movs	r4, #32
              status = HAL_ERROR;
900095f0:	f04f 0a01 	mov.w	sl, #1
900095f4:	e790      	b.n	90009518 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900095f6:	0550      	lsls	r0, r2, #21
900095f8:	d4a9      	bmi.n	9000954e <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900095fa:	0594      	lsls	r4, r2, #22
900095fc:	d4ae      	bmi.n	9000955c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
900095fe:	2900      	cmp	r1, #0
90009600:	d1b1      	bne.n	90009566 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009602:	f7fe fb9b 	bl	90007d3c <HAL_GetTick>
90009606:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009608:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000960a:	42b0      	cmp	r0, r6
9000960c:	d800      	bhi.n	90009610 <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
9000960e:	b91e      	cbnz	r6, 90009618 <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009610:	699a      	ldr	r2, [r3, #24]
90009612:	f012 0220 	ands.w	r2, r2, #32
90009616:	d008      	beq.n	9000962a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009618:	699a      	ldr	r2, [r3, #24]
9000961a:	0692      	lsls	r2, r2, #26
9000961c:	f57f af72 	bpl.w	90009504 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90009620:	2000      	movs	r0, #0
}
90009622:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90009626:	4661      	mov	r1, ip
90009628:	e787      	b.n	9000953a <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000962a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
9000962c:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000962e:	430b      	orrs	r3, r1
90009630:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90009632:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90009636:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
9000963a:	e7ae      	b.n	9000959a <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000963c:	685a      	ldr	r2, [r3, #4]
9000963e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009642:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90009644:	f7fe fb7a 	bl	90007d3c <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009648:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000964a:	4681      	mov	r9, r0
9000964c:	e7c5      	b.n	900095da <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000964e:	bf00      	nop
90009650:	fe00e800 	.word	0xfe00e800

90009654 <HAL_I2C_MspInit>:
}
90009654:	4770      	bx	lr
90009656:	bf00      	nop

90009658 <HAL_I2C_Init>:
  if (hi2c == NULL)
90009658:	2800      	cmp	r0, #0
9000965a:	d04e      	beq.n	900096fa <HAL_I2C_Init+0xa2>
{
9000965c:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000965e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90009662:	4604      	mov	r4, r0
90009664:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009668:	2b00      	cmp	r3, #0
9000966a:	d041      	beq.n	900096f0 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000966c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000966e:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009670:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009672:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90009676:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009678:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000967c:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
9000967e:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009682:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90009684:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009686:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90009688:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000968a:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000968c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90009690:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009692:	d029      	beq.n	900096e8 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009694:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009698:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000969a:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000969c:	d102      	bne.n	900096a4 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000969e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
900096a2:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900096a4:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
900096a6:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900096aa:	4915      	ldr	r1, [pc, #84]	@ (90009700 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900096ac:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900096ae:	4301      	orrs	r1, r0
900096b0:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
900096b2:	68d9      	ldr	r1, [r3, #12]
900096b4:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
900096b8:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
900096ba:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900096be:	4302      	orrs	r2, r0
900096c0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900096c4:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900096c8:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900096ca:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900096cc:	4301      	orrs	r1, r0
  return HAL_OK;
900096ce:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900096d0:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
900096d2:	6819      	ldr	r1, [r3, #0]
900096d4:	f041 0101 	orr.w	r1, r1, #1
900096d8:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900096da:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
900096dc:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
900096e0:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900096e2:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
900096e6:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900096e8:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
900096ec:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900096ee:	e7d9      	b.n	900096a4 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
900096f0:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
900096f4:	f7ff ffae 	bl	90009654 <HAL_I2C_MspInit>
900096f8:	e7b8      	b.n	9000966c <HAL_I2C_Init+0x14>
    return HAL_ERROR;
900096fa:	2001      	movs	r0, #1
}
900096fc:	4770      	bx	lr
900096fe:	bf00      	nop
90009700:	02008000 	.word	0x02008000

90009704 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90009704:	4770      	bx	lr
90009706:	bf00      	nop

90009708 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90009708:	b1b0      	cbz	r0, 90009738 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000970a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000970c:	2324      	movs	r3, #36	@ 0x24
{
9000970e:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90009710:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90009714:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90009716:	6813      	ldr	r3, [r2, #0]
90009718:	f023 0301 	bic.w	r3, r3, #1
9000971c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000971e:	f7ff fff1 	bl	90009704 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009722:	2300      	movs	r3, #0
90009724:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90009726:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90009728:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
9000972c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90009730:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009732:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90009736:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90009738:	2001      	movs	r0, #1
}
9000973a:	4770      	bx	lr

9000973c <HAL_I2C_Mem_Write>:
{
9000973c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009740:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90009742:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
90009746:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000974a:	2b20      	cmp	r3, #32
{
9000974c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000974e:	d130      	bne.n	900097b2 <HAL_I2C_Mem_Write+0x76>
    if ((pData == NULL) || (Size == 0U))
90009750:	9b08      	ldr	r3, [sp, #32]
90009752:	4604      	mov	r4, r0
90009754:	b33b      	cbz	r3, 900097a6 <HAL_I2C_Mem_Write+0x6a>
90009756:	f1ba 0f00 	cmp.w	sl, #0
9000975a:	d024      	beq.n	900097a6 <HAL_I2C_Mem_Write+0x6a>
    __HAL_LOCK(hi2c);
9000975c:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
90009760:	2b01      	cmp	r3, #1
90009762:	d026      	beq.n	900097b2 <HAL_I2C_Mem_Write+0x76>
90009764:	2301      	movs	r3, #1
90009766:	460e      	mov	r6, r1
90009768:	4691      	mov	r9, r2
9000976a:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
9000976e:	f7fe fae5 	bl	90007d3c <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009772:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
90009774:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009776:	699a      	ldr	r2, [r3, #24]
90009778:	0411      	lsls	r1, r2, #16
9000977a:	d51d      	bpl.n	900097b8 <HAL_I2C_Mem_Write+0x7c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000977c:	f7fe fade 	bl	90007d3c <HAL_GetTick>
90009780:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009782:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009784:	2819      	cmp	r0, #25
90009786:	d9f6      	bls.n	90009776 <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009788:	699a      	ldr	r2, [r3, #24]
9000978a:	0412      	lsls	r2, r2, #16
9000978c:	d5f3      	bpl.n	90009776 <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000978e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009790:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009792:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009794:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90009796:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000979a:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000979c:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900097a0:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
          return HAL_ERROR;
900097a4:	e002      	b.n	900097ac <HAL_I2C_Mem_Write+0x70>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900097a6:	f44f 7300 	mov.w	r3, #512	@ 0x200
900097aa:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900097ac:	2001      	movs	r0, #1
}
900097ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
900097b2:	2002      	movs	r0, #2
}
900097b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
900097b8:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900097ba:	2121      	movs	r1, #33	@ 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900097bc:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900097c0:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900097c2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900097c6:	2140      	movs	r1, #64	@ 0x40
    hi2c->pBuffPtr  = pData;
900097c8:	6262      	str	r2, [r4, #36]	@ 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900097ca:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900097cc:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
    hi2c->XferISR   = NULL;
900097d0:	6362      	str	r2, [r4, #52]	@ 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900097d2:	6462      	str	r2, [r4, #68]	@ 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
900097d4:	496b      	ldr	r1, [pc, #428]	@ (90009984 <HAL_I2C_Mem_Write+0x248>)
    hi2c->XferCount = Size;
900097d6:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900097da:	685a      	ldr	r2, [r3, #4]
900097dc:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900097de:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900097e2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
900097e6:	4968      	ldr	r1, [pc, #416]	@ (90009988 <HAL_I2C_Mem_Write+0x24c>)
900097e8:	4332      	orrs	r2, r6
900097ea:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900097ec:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
900097ee:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900097f0:	4639      	mov	r1, r7
900097f2:	f7ff fdc5 	bl	90009380 <I2C_WaitOnTXISFlagUntilTimeout>
900097f6:	2800      	cmp	r0, #0
900097f8:	d17e      	bne.n	900098f8 <HAL_I2C_Mem_Write+0x1bc>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900097fa:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900097fe:	6822      	ldr	r2, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009800:	f040 809a 	bne.w	90009938 <HAL_I2C_Mem_Write+0x1fc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009804:	fa5f f389 	uxtb.w	r3, r9
90009808:	6293      	str	r3, [r2, #40]	@ 0x28
9000980a:	1c78      	adds	r0, r7, #1
9000980c:	d15d      	bne.n	900098ca <HAL_I2C_Mem_Write+0x18e>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000980e:	6993      	ldr	r3, [r2, #24]
90009810:	0619      	lsls	r1, r3, #24
90009812:	d5fc      	bpl.n	9000980e <HAL_I2C_Mem_Write+0xd2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009814:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009816:	b29b      	uxth	r3, r3
90009818:	2bff      	cmp	r3, #255	@ 0xff
9000981a:	d97f      	bls.n	9000991c <HAL_I2C_Mem_Write+0x1e0>
  MODIFY_REG(hi2c->Instance->CR2, \
9000981c:	6853      	ldr	r3, [r2, #4]
9000981e:	495b      	ldr	r1, [pc, #364]	@ (9000998c <HAL_I2C_Mem_Write+0x250>)
90009820:	400b      	ands	r3, r1
90009822:	495b      	ldr	r1, [pc, #364]	@ (90009990 <HAL_I2C_Mem_Write+0x254>)
90009824:	4333      	orrs	r3, r6
90009826:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009828:	23ff      	movs	r3, #255	@ 0xff
9000982a:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000982c:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000982e:	e004      	b.n	9000983a <HAL_I2C_Mem_Write+0xfe>
    } while (hi2c->XferCount > 0U);
90009830:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009832:	b29b      	uxth	r3, r3
90009834:	2b00      	cmp	r3, #0
90009836:	f000 808e 	beq.w	90009956 <HAL_I2C_Mem_Write+0x21a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000983a:	462a      	mov	r2, r5
9000983c:	4639      	mov	r1, r7
9000983e:	4620      	mov	r0, r4
90009840:	f7ff fd9e 	bl	90009380 <I2C_WaitOnTXISFlagUntilTimeout>
90009844:	2800      	cmp	r0, #0
90009846:	d1b1      	bne.n	900097ac <HAL_I2C_Mem_Write+0x70>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009848:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000984a:	6821      	ldr	r1, [r4, #0]
9000984c:	f810 2b01 	ldrb.w	r2, [r0], #1
      hi2c->XferSize--;
90009850:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009852:	628a      	str	r2, [r1, #40]	@ 0x28
      hi2c->XferCount--;
90009854:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009856:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90009858:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
9000985a:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000985c:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000985e:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90009860:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90009862:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009864:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
90009866:	b292      	uxth	r2, r2
90009868:	2a00      	cmp	r2, #0
9000986a:	d0e1      	beq.n	90009830 <HAL_I2C_Mem_Write+0xf4>
9000986c:	2b00      	cmp	r3, #0
9000986e:	d1df      	bne.n	90009830 <HAL_I2C_Mem_Write+0xf4>
90009870:	1c78      	adds	r0, r7, #1
90009872:	d110      	bne.n	90009896 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009874:	698b      	ldr	r3, [r1, #24]
90009876:	061a      	lsls	r2, r3, #24
90009878:	d5fc      	bpl.n	90009874 <HAL_I2C_Mem_Write+0x138>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000987a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000987c:	b29b      	uxth	r3, r3
9000987e:	2bff      	cmp	r3, #255	@ 0xff
90009880:	d93e      	bls.n	90009900 <HAL_I2C_Mem_Write+0x1c4>
  MODIFY_REG(hi2c->Instance->CR2, \
90009882:	684b      	ldr	r3, [r1, #4]
90009884:	4a41      	ldr	r2, [pc, #260]	@ (9000998c <HAL_I2C_Mem_Write+0x250>)
90009886:	4013      	ands	r3, r2
90009888:	4a41      	ldr	r2, [pc, #260]	@ (90009990 <HAL_I2C_Mem_Write+0x254>)
9000988a:	4333      	orrs	r3, r6
9000988c:	431a      	orrs	r2, r3
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000988e:	23ff      	movs	r3, #255	@ 0xff
90009890:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009892:	604a      	str	r2, [r1, #4]
}
90009894:	e7cc      	b.n	90009830 <HAL_I2C_Mem_Write+0xf4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009896:	698b      	ldr	r3, [r1, #24]
90009898:	061b      	lsls	r3, r3, #24
9000989a:	d4ee      	bmi.n	9000987a <HAL_I2C_Mem_Write+0x13e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000989c:	f7fe fa4e 	bl	90007d3c <HAL_GetTick>
900098a0:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900098a2:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900098a4:	4287      	cmp	r7, r0
900098a6:	d301      	bcc.n	900098ac <HAL_I2C_Mem_Write+0x170>
900098a8:	2f00      	cmp	r7, #0
900098aa:	d1f4      	bne.n	90009896 <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900098ac:	698b      	ldr	r3, [r1, #24]
900098ae:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
900098b2:	d1f0      	bne.n	90009896 <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098b4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900098b6:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
900098b8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098bc:	430a      	orrs	r2, r1
900098be:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900098c0:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900098c4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          return HAL_ERROR;
900098c8:	e770      	b.n	900097ac <HAL_I2C_Mem_Write+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900098ca:	6993      	ldr	r3, [r2, #24]
900098cc:	061b      	lsls	r3, r3, #24
900098ce:	d4a1      	bmi.n	90009814 <HAL_I2C_Mem_Write+0xd8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900098d0:	f7fe fa34 	bl	90007d3c <HAL_GetTick>
900098d4:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900098d6:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900098d8:	4287      	cmp	r7, r0
900098da:	d301      	bcc.n	900098e0 <HAL_I2C_Mem_Write+0x1a4>
900098dc:	2f00      	cmp	r7, #0
900098de:	d1f4      	bne.n	900098ca <HAL_I2C_Mem_Write+0x18e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900098e0:	6993      	ldr	r3, [r2, #24]
900098e2:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
900098e6:	d1f0      	bne.n	900098ca <HAL_I2C_Mem_Write+0x18e>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098e8:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900098ea:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098ec:	430a      	orrs	r2, r1
900098ee:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900098f0:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900098f4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
900098f8:	2300      	movs	r3, #0
900098fa:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900098fe:	e755      	b.n	900097ac <HAL_I2C_Mem_Write+0x70>
          hi2c->XferSize = hi2c->XferCount;
90009900:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009902:	4822      	ldr	r0, [pc, #136]	@ (9000998c <HAL_I2C_Mem_Write+0x250>)
          hi2c->XferSize = hi2c->XferCount;
90009904:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009906:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
90009908:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000990a:	684b      	ldr	r3, [r1, #4]
9000990c:	4003      	ands	r3, r0
9000990e:	4333      	orrs	r3, r6
90009910:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009914:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009918:	604b      	str	r3, [r1, #4]
}
9000991a:	e789      	b.n	90009830 <HAL_I2C_Mem_Write+0xf4>
      hi2c->XferSize = hi2c->XferCount;
9000991c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000991e:	481b      	ldr	r0, [pc, #108]	@ (9000998c <HAL_I2C_Mem_Write+0x250>)
      hi2c->XferSize = hi2c->XferCount;
90009920:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009922:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
90009924:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009926:	6853      	ldr	r3, [r2, #4]
90009928:	4003      	ands	r3, r0
9000992a:	4333      	orrs	r3, r6
9000992c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90009930:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009934:	6053      	str	r3, [r2, #4]
}
90009936:	e780      	b.n	9000983a <HAL_I2C_Mem_Write+0xfe>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009938:	ea4f 2319 	mov.w	r3, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000993c:	4639      	mov	r1, r7
9000993e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009940:	6293      	str	r3, [r2, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009942:	462a      	mov	r2, r5
90009944:	f7ff fd1c 	bl	90009380 <I2C_WaitOnTXISFlagUntilTimeout>
90009948:	2800      	cmp	r0, #0
9000994a:	d1d5      	bne.n	900098f8 <HAL_I2C_Mem_Write+0x1bc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000994c:	fa5f f389 	uxtb.w	r3, r9
90009950:	6822      	ldr	r2, [r4, #0]
90009952:	6293      	str	r3, [r2, #40]	@ 0x28
90009954:	e759      	b.n	9000980a <HAL_I2C_Mem_Write+0xce>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009956:	462a      	mov	r2, r5
90009958:	4639      	mov	r1, r7
9000995a:	4620      	mov	r0, r4
9000995c:	f7ff fdc6 	bl	900094ec <I2C_WaitOnSTOPFlagUntilTimeout>
90009960:	2800      	cmp	r0, #0
90009962:	f47f af23 	bne.w	900097ac <HAL_I2C_Mem_Write+0x70>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009966:	6823      	ldr	r3, [r4, #0]
90009968:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000996a:	4d0a      	ldr	r5, [pc, #40]	@ (90009994 <HAL_I2C_Mem_Write+0x258>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000996c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000996e:	685a      	ldr	r2, [r3, #4]
90009970:	402a      	ands	r2, r5
90009972:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009974:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009978:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000997c:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90009980:	e715      	b.n	900097ae <HAL_I2C_Mem_Write+0x72>
90009982:	bf00      	nop
90009984:	fc009800 	.word	0xfc009800
90009988:	01002000 	.word	0x01002000
9000998c:	fc009c00 	.word	0xfc009c00
90009990:	01ff0000 	.word	0x01ff0000
90009994:	fe00e800 	.word	0xfe00e800

90009998 <HAL_I2C_Mem_Read>:
{
90009998:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000999c:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000999e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
900099a2:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
900099a6:	2b20      	cmp	r3, #32
{
900099a8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
900099aa:	d130      	bne.n	90009a0e <HAL_I2C_Mem_Read+0x76>
    if ((pData == NULL) || (Size == 0U))
900099ac:	9b08      	ldr	r3, [sp, #32]
900099ae:	4604      	mov	r4, r0
900099b0:	b33b      	cbz	r3, 90009a02 <HAL_I2C_Mem_Read+0x6a>
900099b2:	f1ba 0f00 	cmp.w	sl, #0
900099b6:	d024      	beq.n	90009a02 <HAL_I2C_Mem_Read+0x6a>
    __HAL_LOCK(hi2c);
900099b8:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
900099bc:	2b01      	cmp	r3, #1
900099be:	d026      	beq.n	90009a0e <HAL_I2C_Mem_Read+0x76>
900099c0:	2301      	movs	r3, #1
900099c2:	460f      	mov	r7, r1
900099c4:	4691      	mov	r9, r2
900099c6:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
900099ca:	f7fe f9b7 	bl	90007d3c <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900099ce:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
900099d0:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900099d2:	699a      	ldr	r2, [r3, #24]
900099d4:	0411      	lsls	r1, r2, #16
900099d6:	d51d      	bpl.n	90009a14 <HAL_I2C_Mem_Read+0x7c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900099d8:	f7fe f9b0 	bl	90007d3c <HAL_GetTick>
900099dc:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900099de:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900099e0:	2819      	cmp	r0, #25
900099e2:	d9f6      	bls.n	900099d2 <HAL_I2C_Mem_Read+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900099e4:	699a      	ldr	r2, [r3, #24]
900099e6:	0412      	lsls	r2, r2, #16
900099e8:	d5f3      	bpl.n	900099d2 <HAL_I2C_Mem_Read+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900099ea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900099ec:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900099ee:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900099f0:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
900099f2:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900099f6:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900099f8:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900099fc:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
          return HAL_ERROR;
90009a00:	e002      	b.n	90009a08 <HAL_I2C_Mem_Read+0x70>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009a02:	f44f 7300 	mov.w	r3, #512	@ 0x200
90009a06:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90009a08:	2001      	movs	r0, #1
}
90009a0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
90009a0e:	2002      	movs	r0, #2
}
90009a10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90009a14:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009a16:	2122      	movs	r1, #34	@ 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90009a18:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009a1c:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009a1e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009a22:	2140      	movs	r1, #64	@ 0x40
    hi2c->pBuffPtr  = pData;
90009a24:	6262      	str	r2, [r4, #36]	@ 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009a26:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009a28:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
    hi2c->XferISR   = NULL;
90009a2c:	6362      	str	r2, [r4, #52]	@ 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009a2e:	6462      	str	r2, [r4, #68]	@ 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90009a30:	4973      	ldr	r1, [pc, #460]	@ (90009c00 <HAL_I2C_Mem_Read+0x268>)
    hi2c->XferCount = Size;
90009a32:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009a36:	685a      	ldr	r2, [r3, #4]
90009a38:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009a3a:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90009a3e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009a42:	4631      	mov	r1, r6
  MODIFY_REG(hi2c->Instance->CR2, \
90009a44:	433a      	orrs	r2, r7
90009a46:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009a4a:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009a4c:	462a      	mov	r2, r5
90009a4e:	f7ff fc97 	bl	90009380 <I2C_WaitOnTXISFlagUntilTimeout>
90009a52:	2800      	cmp	r0, #0
90009a54:	d16a      	bne.n	90009b2c <HAL_I2C_Mem_Read+0x194>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009a56:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009a5a:	6821      	ldr	r1, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009a5c:	f040 80aa 	bne.w	90009bb4 <HAL_I2C_Mem_Read+0x21c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009a60:	fa5f f389 	uxtb.w	r3, r9
90009a64:	628b      	str	r3, [r1, #40]	@ 0x28
90009a66:	1c70      	adds	r0, r6, #1
90009a68:	d149      	bne.n	90009afe <HAL_I2C_Mem_Read+0x166>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009a6a:	698b      	ldr	r3, [r1, #24]
90009a6c:	065a      	lsls	r2, r3, #25
90009a6e:	d5fc      	bpl.n	90009a6a <HAL_I2C_Mem_Read+0xd2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009a70:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009a72:	b29b      	uxth	r3, r3
90009a74:	2bff      	cmp	r3, #255	@ 0xff
90009a76:	f240 808f 	bls.w	90009b98 <HAL_I2C_Mem_Read+0x200>
  MODIFY_REG(hi2c->Instance->CR2, \
90009a7a:	684b      	ldr	r3, [r1, #4]
90009a7c:	4a60      	ldr	r2, [pc, #384]	@ (90009c00 <HAL_I2C_Mem_Read+0x268>)
90009a7e:	4013      	ands	r3, r2
90009a80:	4a60      	ldr	r2, [pc, #384]	@ (90009c04 <HAL_I2C_Mem_Read+0x26c>)
90009a82:	433b      	orrs	r3, r7
90009a84:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009a86:	23ff      	movs	r3, #255	@ 0xff
90009a88:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009a8a:	604a      	str	r2, [r1, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009a8c:	1c70      	adds	r0, r6, #1
90009a8e:	d11c      	bne.n	90009aca <HAL_I2C_Mem_Read+0x132>
90009a90:	698b      	ldr	r3, [r1, #24]
90009a92:	075a      	lsls	r2, r3, #29
90009a94:	d5fc      	bpl.n	90009a90 <HAL_I2C_Mem_Read+0xf8>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90009a96:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
90009a98:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009a9a:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90009a9c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009a9e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90009aa0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90009aa2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferSize--;
90009aa4:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90009aa6:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90009aa8:	3101      	adds	r1, #1
      hi2c->XferSize--;
90009aaa:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009aac:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009aae:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
90009ab0:	6261      	str	r1, [r4, #36]	@ 0x24
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009ab2:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90009ab4:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009ab6:	b90b      	cbnz	r3, 90009abc <HAL_I2C_Mem_Read+0x124>
90009ab8:	2a00      	cmp	r2, #0
90009aba:	d13b      	bne.n	90009b34 <HAL_I2C_Mem_Read+0x19c>
    } while (hi2c->XferCount > 0U);
90009abc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009abe:	b29b      	uxth	r3, r3
90009ac0:	2b00      	cmp	r3, #0
90009ac2:	f000 8086 	beq.w	90009bd2 <HAL_I2C_Mem_Read+0x23a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009ac6:	6821      	ldr	r1, [r4, #0]
90009ac8:	e7e0      	b.n	90009a8c <HAL_I2C_Mem_Read+0xf4>
90009aca:	698b      	ldr	r3, [r1, #24]
90009acc:	075b      	lsls	r3, r3, #29
90009ace:	d4e2      	bmi.n	90009a96 <HAL_I2C_Mem_Read+0xfe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009ad0:	f7fe f934 	bl	90007d3c <HAL_GetTick>
90009ad4:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009ad6:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009ad8:	4286      	cmp	r6, r0
90009ada:	d301      	bcc.n	90009ae0 <HAL_I2C_Mem_Read+0x148>
90009adc:	2e00      	cmp	r6, #0
90009ade:	d1f4      	bne.n	90009aca <HAL_I2C_Mem_Read+0x132>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009ae0:	698b      	ldr	r3, [r1, #24]
90009ae2:	f013 0304 	ands.w	r3, r3, #4
90009ae6:	d1f0      	bne.n	90009aca <HAL_I2C_Mem_Read+0x132>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009ae8:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009aea:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
90009aec:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009af0:	430a      	orrs	r2, r1
90009af2:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009af4:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009af8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          return HAL_ERROR;
90009afc:	e784      	b.n	90009a08 <HAL_I2C_Mem_Read+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009afe:	698b      	ldr	r3, [r1, #24]
90009b00:	065b      	lsls	r3, r3, #25
90009b02:	d4b5      	bmi.n	90009a70 <HAL_I2C_Mem_Read+0xd8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b04:	f7fe f91a 	bl	90007d3c <HAL_GetTick>
90009b08:	1b43      	subs	r3, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b0a:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b0c:	429e      	cmp	r6, r3
90009b0e:	d301      	bcc.n	90009b14 <HAL_I2C_Mem_Read+0x17c>
90009b10:	2e00      	cmp	r6, #0
90009b12:	d1f4      	bne.n	90009afe <HAL_I2C_Mem_Read+0x166>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b14:	698b      	ldr	r3, [r1, #24]
90009b16:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
90009b1a:	d1f0      	bne.n	90009afe <HAL_I2C_Mem_Read+0x166>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009b1c:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009b1e:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009b20:	430a      	orrs	r2, r1
90009b22:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009b24:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009b28:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
90009b2c:	2300      	movs	r3, #0
90009b2e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009b32:	e769      	b.n	90009a08 <HAL_I2C_Mem_Read+0x70>
90009b34:	1c70      	adds	r0, r6, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009b36:	6822      	ldr	r2, [r4, #0]
90009b38:	d110      	bne.n	90009b5c <HAL_I2C_Mem_Read+0x1c4>
90009b3a:	6993      	ldr	r3, [r2, #24]
90009b3c:	0619      	lsls	r1, r3, #24
90009b3e:	d5fc      	bpl.n	90009b3a <HAL_I2C_Mem_Read+0x1a2>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009b40:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009b42:	b29b      	uxth	r3, r3
90009b44:	2bff      	cmp	r3, #255	@ 0xff
90009b46:	d919      	bls.n	90009b7c <HAL_I2C_Mem_Read+0x1e4>
  MODIFY_REG(hi2c->Instance->CR2, \
90009b48:	6853      	ldr	r3, [r2, #4]
90009b4a:	492f      	ldr	r1, [pc, #188]	@ (90009c08 <HAL_I2C_Mem_Read+0x270>)
90009b4c:	400b      	ands	r3, r1
90009b4e:	492f      	ldr	r1, [pc, #188]	@ (90009c0c <HAL_I2C_Mem_Read+0x274>)
90009b50:	433b      	orrs	r3, r7
90009b52:	4319      	orrs	r1, r3
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009b54:	23ff      	movs	r3, #255	@ 0xff
90009b56:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009b58:	6051      	str	r1, [r2, #4]
}
90009b5a:	e7af      	b.n	90009abc <HAL_I2C_Mem_Read+0x124>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009b5c:	6993      	ldr	r3, [r2, #24]
90009b5e:	061b      	lsls	r3, r3, #24
90009b60:	d4ee      	bmi.n	90009b40 <HAL_I2C_Mem_Read+0x1a8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b62:	f7fe f8eb 	bl	90007d3c <HAL_GetTick>
90009b66:	1b43      	subs	r3, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b68:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b6a:	429e      	cmp	r6, r3
90009b6c:	d301      	bcc.n	90009b72 <HAL_I2C_Mem_Read+0x1da>
90009b6e:	2e00      	cmp	r6, #0
90009b70:	d1f4      	bne.n	90009b5c <HAL_I2C_Mem_Read+0x1c4>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b72:	6993      	ldr	r3, [r2, #24]
90009b74:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
90009b78:	d1f0      	bne.n	90009b5c <HAL_I2C_Mem_Read+0x1c4>
90009b7a:	e7b5      	b.n	90009ae8 <HAL_I2C_Mem_Read+0x150>
          hi2c->XferSize = hi2c->XferCount;
90009b7c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009b7e:	4822      	ldr	r0, [pc, #136]	@ (90009c08 <HAL_I2C_Mem_Read+0x270>)
          hi2c->XferSize = hi2c->XferCount;
90009b80:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009b82:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90009b84:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009b86:	6853      	ldr	r3, [r2, #4]
90009b88:	4003      	ands	r3, r0
90009b8a:	433b      	orrs	r3, r7
90009b8c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90009b90:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009b94:	6053      	str	r3, [r2, #4]
}
90009b96:	e791      	b.n	90009abc <HAL_I2C_Mem_Read+0x124>
      hi2c->XferSize = hi2c->XferCount;
90009b98:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009b9a:	4819      	ldr	r0, [pc, #100]	@ (90009c00 <HAL_I2C_Mem_Read+0x268>)
      hi2c->XferSize = hi2c->XferCount;
90009b9c:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009b9e:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
90009ba0:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009ba2:	684b      	ldr	r3, [r1, #4]
90009ba4:	4003      	ands	r3, r0
90009ba6:	433b      	orrs	r3, r7
90009ba8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009bac:	4a18      	ldr	r2, [pc, #96]	@ (90009c10 <HAL_I2C_Mem_Read+0x278>)
90009bae:	431a      	orrs	r2, r3
90009bb0:	604a      	str	r2, [r1, #4]
}
90009bb2:	e76b      	b.n	90009a8c <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009bb4:	ea4f 2319 	mov.w	r3, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009bb8:	462a      	mov	r2, r5
90009bba:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009bbc:	628b      	str	r3, [r1, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009bbe:	4631      	mov	r1, r6
90009bc0:	f7ff fbde 	bl	90009380 <I2C_WaitOnTXISFlagUntilTimeout>
90009bc4:	2800      	cmp	r0, #0
90009bc6:	d1b1      	bne.n	90009b2c <HAL_I2C_Mem_Read+0x194>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009bc8:	fa5f f389 	uxtb.w	r3, r9
90009bcc:	6821      	ldr	r1, [r4, #0]
90009bce:	628b      	str	r3, [r1, #40]	@ 0x28
90009bd0:	e749      	b.n	90009a66 <HAL_I2C_Mem_Read+0xce>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009bd2:	462a      	mov	r2, r5
90009bd4:	4631      	mov	r1, r6
90009bd6:	4620      	mov	r0, r4
90009bd8:	f7ff fc88 	bl	900094ec <I2C_WaitOnSTOPFlagUntilTimeout>
90009bdc:	2800      	cmp	r0, #0
90009bde:	f47f af13 	bne.w	90009a08 <HAL_I2C_Mem_Read+0x70>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009be2:	6823      	ldr	r3, [r4, #0]
90009be4:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009be6:	4d0b      	ldr	r5, [pc, #44]	@ (90009c14 <HAL_I2C_Mem_Read+0x27c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009be8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009bea:	685a      	ldr	r2, [r3, #4]
90009bec:	402a      	ands	r2, r5
90009bee:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009bf0:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009bf4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009bf8:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90009bfc:	e705      	b.n	90009a0a <HAL_I2C_Mem_Read+0x72>
90009bfe:	bf00      	nop
90009c00:	fc009800 	.word	0xfc009800
90009c04:	01ff2400 	.word	0x01ff2400
90009c08:	fc009c00 	.word	0xfc009c00
90009c0c:	01ff0000 	.word	0x01ff0000
90009c10:	02002400 	.word	0x02002400
90009c14:	fe00e800 	.word	0xfe00e800

90009c18 <HAL_I2C_GetState>:
  return hi2c->State;
90009c18:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90009c1c:	4770      	bx	lr
90009c1e:	bf00      	nop

90009c20 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90009c20:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
90009c22:	4770      	bx	lr

90009c24 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009c24:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009c28:	2a20      	cmp	r2, #32
90009c2a:	d123      	bne.n	90009c74 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009c2c:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009c30:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009c34:	4603      	mov	r3, r0
90009c36:	2a01      	cmp	r2, #1
90009c38:	d01c      	beq.n	90009c74 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009c3a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c3c:	2024      	movs	r0, #36	@ 0x24
{
90009c3e:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c40:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009c44:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009c48:	6810      	ldr	r0, [r2, #0]
90009c4a:	f020 0001 	bic.w	r0, r0, #1
90009c4e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009c50:	6810      	ldr	r0, [r2, #0]
90009c52:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
90009c56:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009c58:	6810      	ldr	r0, [r2, #0]
90009c5a:	4301      	orrs	r1, r0

    return HAL_OK;
90009c5c:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009c5e:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009c60:	6811      	ldr	r1, [r2, #0]
90009c62:	f041 0101 	orr.w	r1, r1, #1
90009c66:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009c68:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009c6c:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009c70:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90009c74:	2002      	movs	r0, #2
}
90009c76:	4770      	bx	lr

90009c78 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009c78:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009c7c:	2a20      	cmp	r2, #32
90009c7e:	d122      	bne.n	90009cc6 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009c80:	4603      	mov	r3, r0
{
90009c82:	b500      	push	{lr}
90009c84:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009c88:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009c8c:	2a01      	cmp	r2, #1
90009c8e:	d01c      	beq.n	90009cca <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009c90:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c92:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009c94:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c98:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90009c9c:	6810      	ldr	r0, [r2, #0]
90009c9e:	f020 0001 	bic.w	r0, r0, #1
90009ca2:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90009ca4:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90009ca6:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
90009caa:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90009cae:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90009cb0:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009cb2:	6811      	ldr	r1, [r2, #0]
90009cb4:	f041 0101 	orr.w	r1, r1, #1
90009cb8:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009cba:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009cbe:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009cc2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90009cc6:	2002      	movs	r0, #2
}
90009cc8:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90009cca:	2002      	movs	r0, #2
}
90009ccc:	f85d fb04 	ldr.w	pc, [sp], #4

90009cd0 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009cd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90009cd4:	4699      	mov	r9, r3
90009cd6:	4680      	mov	r8, r0
90009cd8:	460d      	mov	r5, r1
90009cda:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009cdc:	7803      	ldrb	r3, [r0, #0]
90009cde:	2601      	movs	r6, #1
  p = 0;
90009ce0:	2700      	movs	r7, #0
90009ce2:	e005      	b.n	90009cf0 <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
90009ce4:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
90009ce8:	19da      	adds	r2, r3, r7
90009cea:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90009cee:	d83a      	bhi.n	90009d66 <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90009cf0:	19e8      	adds	r0, r5, r7
90009cf2:	461a      	mov	r2, r3
90009cf4:	4631      	mov	r1, r6
    while (i != 0UL)
90009cf6:	b113      	cbz	r3, 90009cfe <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
90009cf8:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
90009cfa:	f021 f82b 	bl	9002ad54 <memset>
  for (l = 0; l < 16UL; l++)
90009cfe:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
90009d00:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
90009d04:	d1ee      	bne.n	90009ce4 <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
90009d06:	2300      	movs	r3, #0
90009d08:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
90009d0a:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009d0e:	7829      	ldrb	r1, [r5, #0]
90009d10:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90009d12:	b329      	cbz	r1, 90009d60 <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
90009d14:	4699      	mov	r9, r3
90009d16:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009d1a:	2701      	movs	r7, #1
  p = 0;
90009d1c:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90009d1e:	4291      	cmp	r1, r2
90009d20:	d124      	bne.n	90009d6c <JPEG_Bits_To_SizeCodes+0x9c>
90009d22:	eb06 0008 	add.w	r0, r6, r8
90009d26:	eb05 0c06 	add.w	ip, r5, r6
90009d2a:	464b      	mov	r3, r9
90009d2c:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90009d30:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90009d34:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
90009d36:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90009d3a:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009d3c:	4596      	cmp	lr, r2
90009d3e:	d0f7      	beq.n	90009d30 <JPEG_Bits_To_SizeCodes+0x60>
90009d40:	3601      	adds	r6, #1
90009d42:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90009d46:	440e      	add	r6, r1
    if(si > 31UL)
90009d48:	2a1f      	cmp	r2, #31
90009d4a:	d80c      	bhi.n	90009d66 <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009d4c:	fa07 f102 	lsl.w	r1, r7, r2
90009d50:	4299      	cmp	r1, r3
90009d52:	d908      	bls.n	90009d66 <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
90009d54:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009d56:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90009d5a:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90009d5c:	2900      	cmp	r1, #0
90009d5e:	d1de      	bne.n	90009d1e <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90009d60:	2000      	movs	r0, #0
}
90009d62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
90009d66:	2001      	movs	r0, #1
}
90009d68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
90009d6c:	464b      	mov	r3, r9
90009d6e:	e7eb      	b.n	90009d48 <JPEG_Bits_To_SizeCodes+0x78>

90009d70 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009d70:	b5f0      	push	{r4, r5, r6, r7, lr}
90009d72:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90009d76:	460d      	mov	r5, r1
90009d78:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009d7a:	ab01      	add	r3, sp, #4
90009d7c:	aa43      	add	r2, sp, #268	@ 0x10c
90009d7e:	a902      	add	r1, sp, #8
90009d80:	f7ff ffa6 	bl	90009cd0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009d84:	b9d0      	cbnz	r0, 90009dbc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90009d86:	9f01      	ldr	r7, [sp, #4]
90009d88:	b1c7      	cbz	r7, 90009dbc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90009d8a:	370f      	adds	r7, #15
90009d8c:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90009d90:	a902      	add	r1, sp, #8
90009d92:	f104 0c0f 	add.w	ip, r4, #15
90009d96:	4427      	add	r7, r4
90009d98:	e009      	b.n	90009dae <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009d9a:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90009d9e:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009da0:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009da4:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009da8:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009daa:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90009dac:	d006      	beq.n	90009dbc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90009dae:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009db2:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009db4:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009db8:	d9ef      	bls.n	90009d9a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009dba:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009dbc:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90009dc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009dc2:	bf00      	nop

90009dc4 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009dc8:	6804      	ldr	r4, [r0, #0]
{
90009dca:	b093      	sub	sp, #76	@ 0x4c
90009dcc:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009dce:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90009dd2:	429a      	cmp	r2, r3
90009dd4:	f000 809d 	beq.w	90009f12 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009dd8:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90009ddc:	429a      	cmp	r2, r3
90009dde:	d003      	beq.n	90009de8 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009de0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009de2:	b013      	add	sp, #76	@ 0x4c
90009de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009de8:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90009dec:	a903      	add	r1, sp, #12
90009dee:	f7ff ffbf 	bl	90009d70 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90009df2:	2800      	cmp	r0, #0
90009df4:	d1f5      	bne.n	90009de2 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90009df6:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009dfa:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009dfe:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90009e02:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e04:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009e08:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e0a:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90009e0e:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e12:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
90009e16:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e1a:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90009e1e:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e20:	f89d 9015 	ldrb.w	r9, [sp, #21]
90009e24:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e28:	f89d c014 	ldrb.w	ip, [sp, #20]
90009e2c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e30:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e34:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e38:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e3c:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e3e:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e42:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90009e46:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90009e4a:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e4e:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e52:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e56:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009e5a:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e5e:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009e60:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e64:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009e68:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e6c:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009e6e:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e72:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e74:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90009e78:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e7c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e80:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009e84:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e88:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e8c:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e8e:	9b01      	ldr	r3, [sp, #4]
90009e90:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e94:	f89d 500d 	ldrb.w	r5, [sp, #13]
90009e98:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e9c:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90009ea0:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ea4:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90009ea6:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009eaa:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009eae:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90009eb2:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009eb6:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009eba:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ebe:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90009ec2:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90009ec6:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90009eca:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ece:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90009ed2:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ed4:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90009ed8:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90009eda:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90009ede:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ee2:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90009ee6:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ee8:	f89d 2020 	ldrb.w	r2, [sp, #32]
90009eec:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90009eee:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90009ef2:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ef6:	f89d 301c 	ldrb.w	r3, [sp, #28]
90009efa:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009efc:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009f00:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90009f04:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009f08:	f844 3c18 	str.w	r3, [r4, #-24]
}
90009f0c:	b013      	add	sp, #76	@ 0x4c
90009f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009f12:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
90009f16:	e769      	b.n	90009dec <JPEG_Set_HuffDC_Mem+0x28>

90009f18 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009f18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009f1c:	6804      	ldr	r4, [r0, #0]
{
90009f1e:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
90009f22:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009f24:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90009f28:	429a      	cmp	r2, r3
90009f2a:	d041      	beq.n	90009fb0 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90009f2c:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90009f30:	429a      	cmp	r2, r3
90009f32:	d004      	beq.n	90009f3e <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009f34:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009f36:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009f3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009f3e:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009f42:	4628      	mov	r0, r5
90009f44:	466b      	mov	r3, sp
90009f46:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90009f4a:	a901      	add	r1, sp, #4
90009f4c:	f7ff fec0 	bl	90009cd0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009f50:	2800      	cmp	r0, #0
90009f52:	d1f0      	bne.n	90009f36 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90009f54:	9b00      	ldr	r3, [sp, #0]
90009f56:	b373      	cbz	r3, 90009fb6 <JPEG_Set_HuffAC_Mem+0x9e>
90009f58:	330f      	adds	r3, #15
90009f5a:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90009f5e:	af01      	add	r7, sp, #4
90009f60:	f105 020f 	add.w	r2, r5, #15
90009f64:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f68:	ae42      	add	r6, sp, #264	@ 0x108
90009f6a:	e011      	b.n	90009f90 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90009f6c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90009f70:	2ba1      	cmp	r3, #161	@ 0xa1
90009f72:	d8df      	bhi.n	90009f34 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f74:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f78:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90009f7c:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90009f80:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f82:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f86:	46b1      	mov	r9, r6
90009f88:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f8c:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90009f8e:	d014      	beq.n	90009fba <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90009f90:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90009f94:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
90009f96:	2900      	cmp	r1, #0
90009f98:	d0ec      	beq.n	90009f74 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
90009f9a:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90009f9c:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009fa0:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90009fa2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90009fa6:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009faa:	d1df      	bne.n	90009f6c <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90009fac:	23a1      	movs	r3, #161	@ 0xa1
90009fae:	e7e1      	b.n	90009f74 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009fb0:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90009fb4:	e7c5      	b.n	90009f42 <JPEG_Set_HuffAC_Mem+0x2a>
90009fb6:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
90009fba:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
90009fbe:	4a1a      	ldr	r2, [pc, #104]	@ (9000a028 <JPEG_Set_HuffAC_Mem+0x110>)
90009fc0:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90009fc4:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90009fc6:	6023      	str	r3, [r4, #0]
90009fc8:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90009fcc:	6063      	str	r3, [r4, #4]
90009fce:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
90009fd2:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90009fd4:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90009fd8:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90009fda:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
90009fde:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
90009fe2:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90009fe4:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009fe8:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90009fea:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009fee:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009ff0:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009ff4:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009ff8:	0212      	lsls	r2, r2, #8
90009ffa:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009ffe:	021b      	lsls	r3, r3, #8
9000a000:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a004:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
9000a008:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a00a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a00e:	433a      	orrs	r2, r7
    while (i > 1UL)
9000a010:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a012:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000a016:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a01a:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000a01e:	d1e7      	bne.n	90009ff0 <JPEG_Set_HuffAC_Mem+0xd8>
}
9000a020:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000a024:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a028:	0fd10fd0 	.word	0x0fd10fd0

9000a02c <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a02c:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a02e:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a030:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000a034:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a036:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000a038:	f002 0203 	and.w	r2, r2, #3
9000a03c:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a03e:	685a      	ldr	r2, [r3, #4]
9000a040:	bf0c      	ite	eq
9000a042:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000a046:	f022 0208 	bicne.w	r2, r2, #8
9000a04a:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a04c:	681a      	ldr	r2, [r3, #0]
9000a04e:	f022 0201 	bic.w	r2, r2, #1
9000a052:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a054:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a056:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a05a:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a05c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a05e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a062:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a064:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a066:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a06a:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a06c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a06e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a072:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000a074:	681a      	ldr	r2, [r3, #0]
9000a076:	f042 0201 	orr.w	r2, r2, #1
9000a07a:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a07c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000a07e:	f002 020c 	and.w	r2, r2, #12
9000a082:	2a08      	cmp	r2, #8
9000a084:	d00a      	beq.n	9000a09c <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a086:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000a088:	f002 020c 	and.w	r2, r2, #12
9000a08c:	2a0c      	cmp	r2, #12
9000a08e:	d000      	beq.n	9000a092 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000a090:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a092:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a094:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a098:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a09a:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000a09c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a09e:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
9000a0a2:	631a      	str	r2, [r3, #48]	@ 0x30
9000a0a4:	4770      	bx	lr
9000a0a6:	bf00      	nop

9000a0a8 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a0a8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a0aa:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
9000a0ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a0ae:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
9000a0b0:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a0b2:	42aa      	cmp	r2, r5
9000a0b4:	d32a      	bcc.n	9000a10c <JPEG_DMA_StartProcess+0x64>
9000a0b6:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a0b8:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a0ba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a0bc:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a0be:	42b3      	cmp	r3, r6
9000a0c0:	d324      	bcc.n	9000a10c <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a0c2:	4f19      	ldr	r7, [pc, #100]	@ (9000a128 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a0c4:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 9000a134 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a0c8:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a0ca:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a0ce:	4917      	ldr	r1, [pc, #92]	@ (9000a12c <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a0d0:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a0d2:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000a0d4:	4916      	ldr	r1, [pc, #88]	@ (9000a130 <JPEG_DMA_StartProcess+0x88>)
9000a0d6:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000a0d8:	b1a5      	cbz	r5, 9000a104 <JPEG_DMA_StartProcess+0x5c>
9000a0da:	b19e      	cbz	r6, 9000a104 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a0dc:	fbb2 f1f5 	udiv	r1, r2, r5
9000a0e0:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0e4:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a0e6:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0e8:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a0ea:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0ec:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000a0ee:	fbb3 f2f6 	udiv	r2, r3, r6
9000a0f2:	fb06 3212 	mls	r2, r6, r2, r3
9000a0f6:	1a9b      	subs	r3, r3, r2
9000a0f8:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0fa:	9500      	str	r5, [sp, #0]
9000a0fc:	69e2      	ldr	r2, [r4, #28]
9000a0fe:	f001 fc23 	bl	9000b948 <HAL_MDMA_Start_IT>
9000a102:	b130      	cbz	r0, 9000a112 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a104:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a106:	f043 0304 	orr.w	r3, r3, #4
9000a10a:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
9000a10c:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000a10e:	b003      	add	sp, #12
9000a110:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a112:	6822      	ldr	r2, [r4, #0]
9000a114:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a116:	69a1      	ldr	r1, [r4, #24]
9000a118:	3240      	adds	r2, #64	@ 0x40
9000a11a:	9500      	str	r5, [sp, #0]
9000a11c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a11e:	f001 fc13 	bl	9000b948 <HAL_MDMA_Start_IT>
9000a122:	2800      	cmp	r0, #0
9000a124:	d0f3      	beq.n	9000a10e <JPEG_DMA_StartProcess+0x66>
9000a126:	e7ed      	b.n	9000a104 <JPEG_DMA_StartProcess+0x5c>
9000a128:	9000a715 	.word	0x9000a715
9000a12c:	9000a989 	.word	0x9000a989
9000a130:	9000aa09 	.word	0x9000aa09
9000a134:	9000a741 	.word	0x9000a741

9000a138 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a138:	6803      	ldr	r3, [r0, #0]
9000a13a:	685a      	ldr	r2, [r3, #4]
9000a13c:	f002 0203 	and.w	r2, r2, #3
9000a140:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000a142:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000a146:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a148:	d018      	beq.n	9000a17c <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a14a:	685a      	ldr	r2, [r3, #4]
9000a14c:	f012 0203 	ands.w	r2, r2, #3
9000a150:	d10b      	bne.n	9000a16a <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a152:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a154:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a158:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a15a:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a15c:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a15e:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a162:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000a166:	2100      	movs	r1, #0
9000a168:	e02f      	b.n	9000a1ca <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000a16a:	685a      	ldr	r2, [r3, #4]
9000a16c:	f002 0203 	and.w	r2, r2, #3
9000a170:	2a03      	cmp	r2, #3
9000a172:	f000 8097 	beq.w	9000a2a4 <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
9000a176:	2001      	movs	r0, #1
}
9000a178:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a17c:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a17e:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a180:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a184:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a186:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a188:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a18c:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a18e:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a190:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a192:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a196:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a198:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a19a:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a19e:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a1a2:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a1a6:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a1aa:	d105      	bne.n	9000a1b8 <HAL_JPEG_GetInfo.part.0+0x80>
9000a1ac:	2a01      	cmp	r2, #1
9000a1ae:	d103      	bne.n	9000a1b8 <HAL_JPEG_GetInfo.part.0+0x80>
9000a1b0:	070d      	lsls	r5, r1, #28
9000a1b2:	d1d8      	bne.n	9000a166 <HAL_JPEG_GetInfo.part.0+0x2e>
9000a1b4:	2102      	movs	r1, #2
9000a1b6:	e008      	b.n	9000a1ca <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a1b8:	433e      	orrs	r6, r7
9000a1ba:	0734      	lsls	r4, r6, #28
9000a1bc:	d0d3      	beq.n	9000a166 <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a1be:	430f      	orrs	r7, r1
9000a1c0:	0739      	lsls	r1, r7, #28
9000a1c2:	d1d0      	bne.n	9000a166 <HAL_JPEG_GetInfo.part.0+0x2e>
9000a1c4:	2a03      	cmp	r2, #3
9000a1c6:	d1ce      	bne.n	9000a166 <HAL_JPEG_GetInfo.part.0+0x2e>
9000a1c8:	2101      	movs	r1, #1
9000a1ca:	4a42      	ldr	r2, [pc, #264]	@ (9000a2d4 <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000a1cc:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000a1d0:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
9000a1d4:	2600      	movs	r6, #0
9000a1d6:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a1da:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000a1de:	f241 3188 	movw	r1, #5000	@ 0x1388
9000a1e2:	e033      	b.n	9000a24c <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a1e4:	f892 8001 	ldrb.w	r8, [r2, #1]
9000a1e8:	fb0e f707 	mul.w	r7, lr, r7
9000a1ec:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a1ee:	f815 8008 	ldrb.w	r8, [r5, r8]
9000a1f2:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a1f6:	2f64      	cmp	r7, #100	@ 0x64
9000a1f8:	d958      	bls.n	9000a2ac <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
9000a1fa:	fbb1 f7f7 	udiv	r7, r1, r7
9000a1fe:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a200:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000a204:	2f01      	cmp	r7, #1
9000a206:	d03d      	beq.n	9000a284 <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a208:	f892 8002 	ldrb.w	r8, [r2, #2]
9000a20c:	fb0e f707 	mul.w	r7, lr, r7
9000a210:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a212:	f815 8008 	ldrb.w	r8, [r5, r8]
9000a216:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a21a:	2f64      	cmp	r7, #100	@ 0x64
9000a21c:	d955      	bls.n	9000a2ca <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
9000a21e:	fbb1 f7f7 	udiv	r7, r1, r7
9000a222:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a224:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000a226:	2b01      	cmp	r3, #1
9000a228:	d030      	beq.n	9000a28c <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a22a:	78d7      	ldrb	r7, [r2, #3]
9000a22c:	fb0e f303 	mul.w	r3, lr, r3
9000a230:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a232:	5def      	ldrb	r7, [r5, r7]
9000a234:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000a238:	2b64      	cmp	r3, #100	@ 0x64
9000a23a:	d93c      	bls.n	9000a2b6 <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
9000a23c:	fbb1 f3f3 	udiv	r3, r1, r3
9000a240:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a242:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000a244:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a248:	4294      	cmp	r4, r2
9000a24a:	d025      	beq.n	9000a298 <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
9000a24c:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a250:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000a252:	2f01      	cmp	r7, #1
9000a254:	d028      	beq.n	9000a2a8 <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a256:	f892 8000 	ldrb.w	r8, [r2]
9000a25a:	fb0e f707 	mul.w	r7, lr, r7
9000a25e:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a260:	f815 8008 	ldrb.w	r8, [r5, r8]
9000a264:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a268:	2f64      	cmp	r7, #100	@ 0x64
9000a26a:	d929      	bls.n	9000a2c0 <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
9000a26c:	fbb1 f7f7 	udiv	r7, r1, r7
9000a270:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a272:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000a276:	2f01      	cmp	r7, #1
9000a278:	d1b4      	bne.n	9000a1e4 <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a27a:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000a27e:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000a280:	2f01      	cmp	r7, #1
9000a282:	d1c1      	bne.n	9000a208 <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a284:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000a286:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000a288:	2b01      	cmp	r3, #1
9000a28a:	d1ce      	bne.n	9000a22a <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a28c:	3204      	adds	r2, #4
        quality += 100UL;
9000a28e:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
9000a290:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a294:	4294      	cmp	r4, r2
9000a296:	d1d9      	bne.n	9000a24c <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
9000a298:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000a29a:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000a29c:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000a2a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a2a4:	2130      	movs	r1, #48	@ 0x30
9000a2a6:	e76a      	b.n	9000a17e <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
9000a2a8:	3664      	adds	r6, #100	@ 0x64
9000a2aa:	e7e2      	b.n	9000a272 <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
9000a2ac:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a2b0:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a2b4:	e7a4      	b.n	9000a200 <HAL_JPEG_GetInfo.part.0+0xc8>
9000a2b6:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
9000a2ba:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000a2be:	e7c0      	b.n	9000a242 <HAL_JPEG_GetInfo.part.0+0x10a>
9000a2c0:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a2c4:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a2c8:	e7d3      	b.n	9000a272 <HAL_JPEG_GetInfo.part.0+0x13a>
9000a2ca:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a2ce:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a2d2:	e7a7      	b.n	9000a224 <HAL_JPEG_GetInfo.part.0+0xec>
9000a2d4:	9002e02c 	.word	0x9002e02c

9000a2d8 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000a2d8:	2800      	cmp	r0, #0
9000a2da:	f000 8107 	beq.w	9000a4ec <HAL_JPEG_Init+0x214>
{
9000a2de:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000a2e0:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000a2e4:	4605      	mov	r5, r0
9000a2e6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000a2ea:	2b00      	cmp	r3, #0
9000a2ec:	f000 80f9 	beq.w	9000a4e2 <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
9000a2f0:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a2f2:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
9000a2f4:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a2f6:	497e      	ldr	r1, [pc, #504]	@ (9000a4f0 <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a2f8:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000a2fc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a2fe:	f042 0201 	orr.w	r2, r2, #1
9000a302:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a304:	6822      	ldr	r2, [r4, #0]
9000a306:	f022 0201 	bic.w	r2, r2, #1
9000a30a:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a30c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a30e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a312:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a314:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a316:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a31a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a31c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a31e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a322:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a324:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a326:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a32a:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a32c:	4a71      	ldr	r2, [pc, #452]	@ (9000a4f4 <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a32e:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a330:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
9000a332:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a334:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a338:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
9000a33c:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
9000a340:	4b6d      	ldr	r3, [pc, #436]	@ (9000a4f8 <HAL_JPEG_Init+0x220>)
9000a342:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
9000a346:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a34a:	496c      	ldr	r1, [pc, #432]	@ (9000a4fc <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a34c:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a350:	4b6b      	ldr	r3, [pc, #428]	@ (9000a500 <HAL_JPEG_Init+0x228>)
9000a352:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
9000a356:	4a6b      	ldr	r2, [pc, #428]	@ (9000a504 <HAL_JPEG_Init+0x22c>)
9000a358:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a35c:	4b6a      	ldr	r3, [pc, #424]	@ (9000a508 <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a35e:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a362:	496a      	ldr	r1, [pc, #424]	@ (9000a50c <HAL_JPEG_Init+0x234>)
9000a364:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
9000a368:	4a69      	ldr	r2, [pc, #420]	@ (9000a510 <HAL_JPEG_Init+0x238>)
9000a36a:	4b6a      	ldr	r3, [pc, #424]	@ (9000a514 <HAL_JPEG_Init+0x23c>)
9000a36c:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
9000a370:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
9000a374:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a378:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
9000a37c:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
9000a380:	4a65      	ldr	r2, [pc, #404]	@ (9000a518 <HAL_JPEG_Init+0x240>)
9000a382:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000a384:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a388:	4313      	orrs	r3, r2
  *address = value;
9000a38a:	4a64      	ldr	r2, [pc, #400]	@ (9000a51c <HAL_JPEG_Init+0x244>)
9000a38c:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
9000a390:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a394:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
9000a398:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a39a:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a39e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000a3a0:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a3a4:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
9000a3a8:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a3aa:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a3ae:	ea43 030c 	orr.w	r3, r3, ip
9000a3b2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a3b6:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000a3ba:	d1eb      	bne.n	9000a394 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000a3bc:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a3c0:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
9000a3c4:	4954      	ldr	r1, [pc, #336]	@ (9000a518 <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a3c6:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
9000a3c8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000a3ca:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
9000a3ce:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
9000a3d2:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000a3d6:	400b      	ands	r3, r1
  *address = value;
9000a3d8:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a3dc:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
9000a3e0:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
9000a3e4:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a3e8:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
9000a3ec:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000a3f0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000a3f2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000a3f6:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
9000a3fa:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000a3fe:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a400:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a402:	4b47      	ldr	r3, [pc, #284]	@ (9000a520 <HAL_JPEG_Init+0x248>)
  *address = value;
9000a404:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a408:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a40c:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
9000a410:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
9000a414:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
9000a418:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000a41c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000a41e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
9000a422:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
9000a426:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
9000a42a:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a42c:	493d      	ldr	r1, [pc, #244]	@ (9000a524 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a42e:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a430:	4b3d      	ldr	r3, [pc, #244]	@ (9000a528 <HAL_JPEG_Init+0x250>)
  *address = value;
9000a432:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a436:	4a3d      	ldr	r2, [pc, #244]	@ (9000a52c <HAL_JPEG_Init+0x254>)
9000a438:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000a43c:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a440:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
9000a444:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
9000a448:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a44c:	4a38      	ldr	r2, [pc, #224]	@ (9000a530 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
9000a44e:	b29b      	uxth	r3, r3
9000a450:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a454:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000a458:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a45c:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
9000a460:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a462:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a466:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000a468:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a46c:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
9000a470:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a472:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a476:	ea43 030c 	orr.w	r3, r3, ip
9000a47a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a47e:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000a482:	d1eb      	bne.n	9000a45c <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000a484:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
9000a488:	4924      	ldr	r1, [pc, #144]	@ (9000a51c <HAL_JPEG_Init+0x244>)
9000a48a:	4628      	mov	r0, r5
9000a48c:	f7ff fd44 	bl	90009f18 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a490:	b118      	cbz	r0, 9000a49a <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a492:	2301      	movs	r3, #1
    return HAL_ERROR;
9000a494:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a496:	652b      	str	r3, [r5, #80]	@ 0x50
}
9000a498:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000a49a:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
9000a49e:	4924      	ldr	r1, [pc, #144]	@ (9000a530 <HAL_JPEG_Init+0x258>)
9000a4a0:	4628      	mov	r0, r5
9000a4a2:	f7ff fd39 	bl	90009f18 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a4a6:	2800      	cmp	r0, #0
9000a4a8:	d1f3      	bne.n	9000a492 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000a4aa:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
9000a4ae:	4921      	ldr	r1, [pc, #132]	@ (9000a534 <HAL_JPEG_Init+0x25c>)
9000a4b0:	4628      	mov	r0, r5
9000a4b2:	f7ff fc87 	bl	90009dc4 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000a4b6:	2800      	cmp	r0, #0
9000a4b8:	d1eb      	bne.n	9000a492 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000a4ba:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
9000a4be:	491e      	ldr	r1, [pc, #120]	@ (9000a538 <HAL_JPEG_Init+0x260>)
9000a4c0:	4628      	mov	r0, r5
9000a4c2:	f7ff fc7f 	bl	90009dc4 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000a4c6:	2800      	cmp	r0, #0
9000a4c8:	d1e3      	bne.n	9000a492 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a4ca:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a4cc:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a4ce:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a4d2:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
9000a4d4:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
9000a4d6:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a4d8:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000a4dc:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
9000a4de:	6568      	str	r0, [r5, #84]	@ 0x54
}
9000a4e0:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000a4e2:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000a4e6:	f7fa f871 	bl	900045cc <HAL_JPEG_MspInit>
9000a4ea:	e701      	b.n	9000a2f0 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000a4ec:	2001      	movs	r0, #1
}
9000a4ee:	4770      	bx	lr
9000a4f0:	9002dfec 	.word	0x9002dfec
9000a4f4:	9002dfac 	.word	0x9002dfac
9000a4f8:	01050100 	.word	0x01050100
9000a4fc:	0b0a0908 	.word	0x0b0a0908
9000a500:	07060504 	.word	0x07060504
9000a504:	03020100 	.word	0x03020100
9000a508:	7d010000 	.word	0x7d010000
9000a50c:	04040505 	.word	0x04040505
9000a510:	03040203 	.word	0x03040203
9000a514:	03010200 	.word	0x03010200
9000a518:	ffff0000 	.word	0xffff0000
9000a51c:	9002e120 	.word	0x9002e120
9000a520:	09080706 	.word	0x09080706
9000a524:	01000404 	.word	0x01000404
9000a528:	04040201 	.word	0x04040201
9000a52c:	05070403 	.word	0x05070403
9000a530:	9002e06c 	.word	0x9002e06c
9000a534:	9002e1f0 	.word	0x9002e1f0
9000a538:	9002e1d4 	.word	0x9002e1d4

9000a53c <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a53c:	2b00      	cmp	r3, #0
9000a53e:	bf18      	it	ne
9000a540:	2900      	cmpne	r1, #0
9000a542:	d036      	beq.n	9000a5b2 <HAL_JPEG_Decode_DMA+0x76>
{
9000a544:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a546:	fab0 f580 	clz	r5, r0
9000a54a:	4604      	mov	r4, r0
9000a54c:	096d      	lsrs	r5, r5, #5
9000a54e:	b370      	cbz	r0, 9000a5ae <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
9000a550:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
9000a554:	f1bc 0f01 	cmp.w	ip, #1
9000a558:	d022      	beq.n	9000a5a0 <HAL_JPEG_Decode_DMA+0x64>
9000a55a:	f04f 0c01 	mov.w	ip, #1
9000a55e:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a562:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
9000a566:	f1bc 0f01 	cmp.w	ip, #1
9000a56a:	d117      	bne.n	9000a59c <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
9000a56c:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000a56e:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000a572:	9b04      	ldr	r3, [sp, #16]
9000a574:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000a576:	2304      	movs	r3, #4
9000a578:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000a57c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a57e:	f023 030f 	bic.w	r3, r3, #15
9000a582:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000a584:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a586:	f043 030e 	orr.w	r3, r3, #14
9000a58a:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
9000a58c:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000a58e:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
9000a590:	f7ff fd4c 	bl	9000a02c <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000a594:	f7ff fd88 	bl	9000a0a8 <JPEG_DMA_StartProcess>
9000a598:	b920      	cbnz	r0, 9000a5a4 <HAL_JPEG_Decode_DMA+0x68>
}
9000a59a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
9000a59c:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
9000a5a0:	2002      	movs	r0, #2
}
9000a5a2:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a5a4:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
9000a5a6:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a5aa:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000a5ae:	2001      	movs	r0, #1
}
9000a5b0:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000a5b2:	2001      	movs	r0, #1
}
9000a5b4:	4770      	bx	lr
9000a5b6:	bf00      	nop

9000a5b8 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a5b8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a5ba:	f003 030c 	and.w	r3, r3, #12
9000a5be:	2b0c      	cmp	r3, #12
9000a5c0:	d01a      	beq.n	9000a5f8 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a5c2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a5c4:	f003 030c 	and.w	r3, r3, #12
9000a5c8:	2b08      	cmp	r3, #8
9000a5ca:	d001      	beq.n	9000a5d0 <HAL_JPEG_Pause+0x18>
}
9000a5cc:	2000      	movs	r0, #0
9000a5ce:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a5d0:	07ca      	lsls	r2, r1, #31
9000a5d2:	d41f      	bmi.n	9000a614 <HAL_JPEG_Pause+0x5c>
9000a5d4:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
9000a5d8:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a5dc:	078b      	lsls	r3, r1, #30
9000a5de:	d504      	bpl.n	9000a5ea <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a5e0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a5e2:	4694      	mov	ip, r2
9000a5e4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a5e8:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a5ea:	6802      	ldr	r2, [r0, #0]
}
9000a5ec:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a5ee:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a5f0:	ea03 030c 	and.w	r3, r3, ip
9000a5f4:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a5f6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a5f8:	07cb      	lsls	r3, r1, #31
9000a5fa:	d503      	bpl.n	9000a604 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a5fc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a5fe:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a602:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a604:	0789      	lsls	r1, r1, #30
9000a606:	d5e1      	bpl.n	9000a5cc <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a608:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a60a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a60e:	6543      	str	r3, [r0, #84]	@ 0x54
}
9000a610:	2000      	movs	r0, #0
9000a612:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a614:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a616:	f06f 0c06 	mvn.w	ip, #6
9000a61a:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
9000a61e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a622:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a624:	e7da      	b.n	9000a5dc <HAL_JPEG_Pause+0x24>
9000a626:	bf00      	nop

9000a628 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000a628:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000a62a:	6282      	str	r2, [r0, #40]	@ 0x28
}
9000a62c:	4770      	bx	lr
9000a62e:	bf00      	nop

9000a630 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000a630:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000a632:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
9000a634:	4770      	bx	lr
9000a636:	bf00      	nop

9000a638 <HAL_JPEG_Abort>:
{
9000a638:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
9000a63a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
9000a63c:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a63e:	6d41      	ldr	r1, [r0, #84]	@ 0x54
9000a640:	4a32      	ldr	r2, [pc, #200]	@ (9000a70c <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a642:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a646:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a648:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a64a:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a64c:	d043      	beq.n	9000a6d6 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a64e:	6822      	ldr	r2, [r4, #0]
9000a650:	6813      	ldr	r3, [r2, #0]
9000a652:	f023 0301 	bic.w	r3, r3, #1
9000a656:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
9000a658:	f7fd fb70 	bl	90007d3c <HAL_GetTick>
9000a65c:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a65e:	e005      	b.n	9000a66c <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
9000a660:	f7fd fb6c 	bl	90007d3c <HAL_GetTick>
9000a664:	1b40      	subs	r0, r0, r5
9000a666:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a66a:	d82b      	bhi.n	9000a6c4 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a66c:	6823      	ldr	r3, [r4, #0]
9000a66e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a670:	0612      	lsls	r2, r2, #24
9000a672:	d4f5      	bmi.n	9000a660 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a674:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
9000a676:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a678:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a67c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a67e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a680:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a684:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a686:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a688:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a68c:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a68e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a690:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a694:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
9000a696:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000a698:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
9000a69a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a69c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
9000a6a0:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
9000a6a2:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000a6a4:	b138      	cbz	r0, 9000a6b6 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a6a6:	2306      	movs	r3, #6
    return HAL_ERROR;
9000a6a8:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a6aa:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000a6ae:	2300      	movs	r3, #0
9000a6b0:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a6b4:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a6b6:	2301      	movs	r3, #1
9000a6b8:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
9000a6bc:	2300      	movs	r3, #0
9000a6be:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a6c2:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a6c4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a6c6:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a6c8:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a6ca:	f042 0208 	orr.w	r2, r2, #8
9000a6ce:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a6d0:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
9000a6d4:	e7ce      	b.n	9000a674 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
9000a6d6:	6b40      	ldr	r0, [r0, #52]	@ 0x34
9000a6d8:	f001 f9a8 	bl	9000ba2c <HAL_MDMA_Abort>
9000a6dc:	b118      	cbz	r0, 9000a6e6 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a6de:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a6e0:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a6e2:	2b40      	cmp	r3, #64	@ 0x40
9000a6e4:	d00d      	beq.n	9000a702 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
9000a6e6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a6e8:	f001 f9a0 	bl	9000ba2c <HAL_MDMA_Abort>
9000a6ec:	2800      	cmp	r0, #0
9000a6ee:	d0ae      	beq.n	9000a64e <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a6f0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000a6f2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a6f4:	2b40      	cmp	r3, #64	@ 0x40
9000a6f6:	d1aa      	bne.n	9000a64e <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a6f8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a6fa:	f043 0304 	orr.w	r3, r3, #4
9000a6fe:	6523      	str	r3, [r4, #80]	@ 0x50
9000a700:	e7a5      	b.n	9000a64e <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a702:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a704:	f043 0304 	orr.w	r3, r3, #4
9000a708:	6523      	str	r3, [r4, #80]	@ 0x50
9000a70a:	e7ec      	b.n	9000a6e6 <HAL_JPEG_Abort+0xae>
9000a70c:	ffff7ff0 	.word	0xffff7ff0

9000a710 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000a710:	4770      	bx	lr
9000a712:	bf00      	nop

9000a714 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a714:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a716:	2101      	movs	r1, #1
{
9000a718:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a71a:	6803      	ldr	r3, [r0, #0]
9000a71c:	681a      	ldr	r2, [r3, #0]
9000a71e:	f022 0201 	bic.w	r2, r2, #1
9000a722:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a724:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a726:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a72a:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a72c:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a730:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a732:	f043 0304 	orr.w	r3, r3, #4
9000a736:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000a738:	f7f7 fce4 	bl	90002104 <HAL_JPEG_ErrorCallback>
}
9000a73c:	bd08      	pop	{r3, pc}
9000a73e:	bf00      	nop

9000a740 <JPEG_MDMAInCpltCallback>:
{
9000a740:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a742:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a744:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000a748:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a74a:	6822      	ldr	r2, [r4, #0]
9000a74c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a74e:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
9000a752:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a754:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a756:	400b      	ands	r3, r1
9000a758:	2b0c      	cmp	r3, #12
9000a75a:	d001      	beq.n	9000a760 <JPEG_MDMAInCpltCallback+0x20>
}
9000a75c:	b003      	add	sp, #12
9000a75e:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a760:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a762:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a764:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a766:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a768:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a76a:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a76e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a770:	1a9b      	subs	r3, r3, r2
9000a772:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a774:	6a21      	ldr	r1, [r4, #32]
9000a776:	f7f7 fbf9 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000a77a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a77c:	42ab      	cmp	r3, r5
9000a77e:	d311      	bcc.n	9000a7a4 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000a780:	b305      	cbz	r5, 9000a7c4 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a782:	fbb3 f2f5 	udiv	r2, r3, r5
9000a786:	fb05 3212 	mls	r2, r5, r2, r3
9000a78a:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a78c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a78e:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a790:	04d1      	lsls	r1, r2, #19
9000a792:	d400      	bmi.n	9000a796 <JPEG_MDMAInCpltCallback+0x56>
9000a794:	b963      	cbnz	r3, 9000a7b0 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a796:	6822      	ldr	r2, [r4, #0]
9000a798:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a79a:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000a79e:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a7a0:	b003      	add	sp, #12
9000a7a2:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000a7a4:	b1cb      	cbz	r3, 9000a7da <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000a7a6:	0798      	lsls	r0, r3, #30
9000a7a8:	d119      	bne.n	9000a7de <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a7aa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a7ac:	04d2      	lsls	r2, r2, #19
9000a7ae:	d4f2      	bmi.n	9000a796 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a7b0:	6822      	ldr	r2, [r4, #0]
9000a7b2:	2501      	movs	r5, #1
9000a7b4:	69a1      	ldr	r1, [r4, #24]
9000a7b6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a7b8:	3240      	adds	r2, #64	@ 0x40
9000a7ba:	9500      	str	r5, [sp, #0]
9000a7bc:	f001 f8c4 	bl	9000b948 <HAL_MDMA_Start_IT>
9000a7c0:	2800      	cmp	r0, #0
9000a7c2:	d0e8      	beq.n	9000a796 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a7c4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a7c6:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000a7c8:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a7ca:	f043 0304 	orr.w	r3, r3, #4
9000a7ce:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a7d0:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000a7d4:	f7f7 fc96 	bl	90002104 <HAL_JPEG_ErrorCallback>
        return;
9000a7d8:	e7c0      	b.n	9000a75c <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a7da:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a7dc:	e7db      	b.n	9000a796 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000a7de:	f023 0303 	bic.w	r3, r3, #3
9000a7e2:	3304      	adds	r3, #4
9000a7e4:	e7d2      	b.n	9000a78c <JPEG_MDMAInCpltCallback+0x4c>
9000a7e6:	bf00      	nop

9000a7e8 <JPEG_DMA_PollResidualData>:
{
9000a7e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a7ea:	6802      	ldr	r2, [r0, #0]
9000a7ec:	2610      	movs	r6, #16
{
9000a7ee:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a7f0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a7f2:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a7f6:	d11d      	bne.n	9000a834 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a7f8:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a7fa:	06df      	lsls	r7, r3, #27
9000a7fc:	d51a      	bpl.n	9000a834 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000a7fe:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a800:	69e7      	ldr	r7, [r4, #28]
9000a802:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a804:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a806:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a808:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a80a:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a80c:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000a80e:	69e2      	ldr	r2, [r4, #28]
9000a810:	443a      	add	r2, r7
9000a812:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a814:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a816:	69e2      	ldr	r2, [r4, #28]
9000a818:	4402      	add	r2, r0
9000a81a:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a81c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a81e:	69e2      	ldr	r2, [r4, #28]
9000a820:	440a      	add	r2, r1
9000a822:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000a824:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a826:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
9000a828:	3304      	adds	r3, #4
9000a82a:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a82c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a82e:	4293      	cmp	r3, r2
9000a830:	d021      	beq.n	9000a876 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a832:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000a834:	3e01      	subs	r6, #1
9000a836:	d1db      	bne.n	9000a7f0 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000a838:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a83a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a83c:	06d8      	lsls	r0, r3, #27
9000a83e:	d501      	bpl.n	9000a844 <JPEG_DMA_PollResidualData+0x5c>
9000a840:	048b      	lsls	r3, r1, #18
9000a842:	d417      	bmi.n	9000a874 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a844:	6813      	ldr	r3, [r2, #0]
9000a846:	f023 0301 	bic.w	r3, r3, #1
9000a84a:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000a84c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a84e:	b9eb      	cbnz	r3, 9000a88c <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000a850:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a852:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a854:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a856:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a858:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a85c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a860:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a864:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a866:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a868:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a86a:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a86e:	d00a      	beq.n	9000a886 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a870:	f7ff ff4e 	bl	9000a710 <HAL_JPEG_EncodeCpltCallback>
}
9000a874:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a876:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a878:	4620      	mov	r0, r4
9000a87a:	69e1      	ldr	r1, [r4, #28]
9000a87c:	f7f7 fb96 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a880:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000a882:	6265      	str	r5, [r4, #36]	@ 0x24
9000a884:	e7d6      	b.n	9000a834 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a886:	f7f7 fc3f 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000a88a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a88c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a88e:	4620      	mov	r0, r4
9000a890:	69e1      	ldr	r1, [r4, #28]
9000a892:	f7f7 fb8b 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a896:	2300      	movs	r3, #0
9000a898:	6263      	str	r3, [r4, #36]	@ 0x24
9000a89a:	e7d9      	b.n	9000a850 <JPEG_DMA_PollResidualData+0x68>

9000a89c <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000a89c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a89e:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000a8a2:	d06f      	beq.n	9000a984 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a8a4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a8a6:	f003 030c 	and.w	r3, r3, #12
9000a8aa:	2b0c      	cmp	r3, #12
{
9000a8ac:	b530      	push	{r4, r5, lr}
9000a8ae:	4604      	mov	r4, r0
9000a8b0:	b083      	sub	sp, #12
9000a8b2:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a8b4:	d007      	beq.n	9000a8c6 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a8b6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a8b8:	f003 030c 	and.w	r3, r3, #12
9000a8bc:	2b08      	cmp	r3, #8
9000a8be:	d035      	beq.n	9000a92c <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000a8c0:	2000      	movs	r0, #0
}
9000a8c2:	b003      	add	sp, #12
9000a8c4:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a8c6:	07c8      	lsls	r0, r1, #31
9000a8c8:	d415      	bmi.n	9000a8f6 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a8ca:	07a9      	lsls	r1, r5, #30
9000a8cc:	d5f8      	bpl.n	9000a8c0 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a8ce:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a8d0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a8d4:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a8d6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a8d8:	041a      	lsls	r2, r3, #16
9000a8da:	d44f      	bmi.n	9000a97c <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a8dc:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a8de:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000a8e0:	2a00      	cmp	r2, #0
9000a8e2:	d13a      	bne.n	9000a95a <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a8e4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a8e6:	2206      	movs	r2, #6
    return HAL_ERROR;
9000a8e8:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a8ea:	f043 0304 	orr.w	r3, r3, #4
9000a8ee:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a8f0:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
9000a8f4:	e7e5      	b.n	9000a8c2 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a8f6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a8f8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a8fa:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a8fe:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a900:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000a902:	2a00      	cmp	r2, #0
9000a904:	d0ee      	beq.n	9000a8e4 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a906:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a908:	fbb3 f1f2 	udiv	r1, r3, r2
9000a90c:	fb02 3211 	mls	r2, r2, r1, r3
9000a910:	1a9b      	subs	r3, r3, r2
9000a912:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000a914:	2b00      	cmp	r3, #0
9000a916:	d0d8      	beq.n	9000a8ca <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a918:	6822      	ldr	r2, [r4, #0]
9000a91a:	2101      	movs	r1, #1
9000a91c:	3240      	adds	r2, #64	@ 0x40
9000a91e:	9100      	str	r1, [sp, #0]
9000a920:	69a1      	ldr	r1, [r4, #24]
9000a922:	f001 f811 	bl	9000b948 <HAL_MDMA_Start_IT>
9000a926:	2800      	cmp	r0, #0
9000a928:	d0cf      	beq.n	9000a8ca <HAL_JPEG_Resume+0x2e>
9000a92a:	e7db      	b.n	9000a8e4 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a92c:	f011 0101 	ands.w	r1, r1, #1
9000a930:	d011      	beq.n	9000a956 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a932:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a934:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a936:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a938:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a93c:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a93e:	07ab      	lsls	r3, r5, #30
9000a940:	d504      	bpl.n	9000a94c <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a942:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000a944:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a946:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a94a:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a94c:	6822      	ldr	r2, [r4, #0]
9000a94e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a950:	430b      	orrs	r3, r1
9000a952:	6313      	str	r3, [r2, #48]	@ 0x30
9000a954:	e7b4      	b.n	9000a8c0 <HAL_JPEG_Resume+0x24>
9000a956:	2228      	movs	r2, #40	@ 0x28
9000a958:	e7f1      	b.n	9000a93e <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a95a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a95c:	fbb3 f1f2 	udiv	r1, r3, r2
9000a960:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a964:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a966:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a968:	2201      	movs	r2, #1
9000a96a:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a96c:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a96e:	9200      	str	r2, [sp, #0]
9000a970:	69e2      	ldr	r2, [r4, #28]
9000a972:	f000 ffe9 	bl	9000b948 <HAL_MDMA_Start_IT>
9000a976:	2800      	cmp	r0, #0
9000a978:	d0a2      	beq.n	9000a8c0 <HAL_JPEG_Resume+0x24>
9000a97a:	e7b3      	b.n	9000a8e4 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000a97c:	4620      	mov	r0, r4
9000a97e:	f7ff ff33 	bl	9000a7e8 <JPEG_DMA_PollResidualData>
9000a982:	e79d      	b.n	9000a8c0 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000a984:	2001      	movs	r0, #1
}
9000a986:	4770      	bx	lr

9000a988 <JPEG_MDMAOutCpltCallback>:
{
9000a988:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a98a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a98c:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000a990:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a992:	6823      	ldr	r3, [r4, #0]
9000a994:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a996:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a99a:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a99c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a99e:	400a      	ands	r2, r1
9000a9a0:	2a0c      	cmp	r2, #12
9000a9a2:	d001      	beq.n	9000a9a8 <JPEG_MDMAOutCpltCallback+0x20>
}
9000a9a4:	b003      	add	sp, #12
9000a9a6:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000a9a8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a9aa:	0692      	lsls	r2, r2, #26
9000a9ac:	d505      	bpl.n	9000a9ba <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a9ae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a9b0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a9b4:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a9b6:	b003      	add	sp, #12
9000a9b8:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a9ba:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a9bc:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a9be:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a9c0:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a9c2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a9c4:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000a9c8:	1a9b      	subs	r3, r3, r2
9000a9ca:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a9cc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a9ce:	f7f7 faed 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a9d2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a9d4:	049b      	lsls	r3, r3, #18
9000a9d6:	d501      	bpl.n	9000a9dc <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a9d8:	6823      	ldr	r3, [r4, #0]
9000a9da:	e7e8      	b.n	9000a9ae <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a9dc:	6821      	ldr	r1, [r4, #0]
9000a9de:	2501      	movs	r5, #1
9000a9e0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a9e2:	69e2      	ldr	r2, [r4, #28]
9000a9e4:	3144      	adds	r1, #68	@ 0x44
9000a9e6:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a9e8:	9500      	str	r5, [sp, #0]
9000a9ea:	f000 ffad 	bl	9000b948 <HAL_MDMA_Start_IT>
9000a9ee:	2800      	cmp	r0, #0
9000a9f0:	d0f2      	beq.n	9000a9d8 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a9f2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a9f4:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000a9f6:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a9f8:	f043 0304 	orr.w	r3, r3, #4
9000a9fc:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a9fe:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000aa02:	f7f7 fb7f 	bl	90002104 <HAL_JPEG_ErrorCallback>
          return;
9000aa06:	e7cd      	b.n	9000a9a4 <JPEG_MDMAOutCpltCallback+0x1c>

9000aa08 <JPEG_MDMAOutAbortCallback>:
{
9000aa08:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000aa0a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000aa0c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000aa0e:	041a      	lsls	r2, r3, #16
9000aa10:	d400      	bmi.n	9000aa14 <JPEG_MDMAOutAbortCallback+0xc>
}
9000aa12:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa14:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000aa16:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aa18:	681b      	ldr	r3, [r3, #0]
9000aa1a:	695b      	ldr	r3, [r3, #20]
9000aa1c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000aa20:	1ad3      	subs	r3, r2, r3
9000aa22:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000aa24:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa26:	429a      	cmp	r2, r3
9000aa28:	d025      	beq.n	9000aa76 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000aa2a:	6822      	ldr	r2, [r4, #0]
9000aa2c:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000aa2e:	f015 0510 	ands.w	r5, r5, #16
9000aa32:	d118      	bne.n	9000aa66 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000aa34:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa36:	bb4b      	cbnz	r3, 9000aa8c <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa38:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000aa3a:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa3c:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa3e:	f023 0301 	bic.w	r3, r3, #1
9000aa42:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000aa44:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa46:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa48:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000aa4c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa50:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000aa54:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa56:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa58:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa5a:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa5e:	d012      	beq.n	9000aa86 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000aa60:	f7ff fe56 	bl	9000a710 <HAL_JPEG_EncodeCpltCallback>
}
9000aa64:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000aa66:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000aa68:	049b      	lsls	r3, r3, #18
9000aa6a:	d4d2      	bmi.n	9000aa12 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000aa6c:	4620      	mov	r0, r4
}
9000aa6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000aa72:	f7ff beb9 	b.w	9000a7e8 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa76:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aa78:	4620      	mov	r0, r4
9000aa7a:	69e1      	ldr	r1, [r4, #28]
9000aa7c:	f7f7 fa96 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000aa80:	2300      	movs	r3, #0
9000aa82:	6263      	str	r3, [r4, #36]	@ 0x24
9000aa84:	e7d1      	b.n	9000aa2a <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000aa86:	f7f7 fb3f 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000aa8a:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa8c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aa8e:	4620      	mov	r0, r4
9000aa90:	69e1      	ldr	r1, [r4, #28]
9000aa92:	f7f7 fa8b 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa96:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000aa98:	6265      	str	r5, [r4, #36]	@ 0x24
9000aa9a:	e7cd      	b.n	9000aa38 <JPEG_MDMAOutAbortCallback+0x30>

9000aa9c <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa9c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000aa9e:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aaa0:	f002 0203 	and.w	r2, r2, #3
9000aaa4:	2a02      	cmp	r2, #2
{
9000aaa6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000aaaa:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aaac:	d01e      	beq.n	9000aaec <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000aaae:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000aab0:	04d7      	lsls	r7, r2, #19
9000aab2:	d407      	bmi.n	9000aac4 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000aab4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aab6:	0796      	lsls	r6, r2, #30
9000aab8:	f100 811b 	bmi.w	9000acf2 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000aabc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aabe:	0750      	lsls	r0, r2, #29
9000aac0:	f100 81cc 	bmi.w	9000ae5c <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000aac4:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000aac6:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000aaca:	d107      	bne.n	9000aadc <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000aacc:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000aace:	f016 0608 	ands.w	r6, r6, #8
9000aad2:	d14a      	bne.n	9000ab6a <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000aad4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aad6:	06d2      	lsls	r2, r2, #27
9000aad8:	f100 81fe 	bmi.w	9000aed8 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aadc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aade:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000aae2:	2a20      	cmp	r2, #32
9000aae4:	d019      	beq.n	9000ab1a <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000aae6:	2000      	movs	r0, #0
}
9000aae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000aaec:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aaee:	0652      	lsls	r2, r2, #25
9000aaf0:	d5dd      	bpl.n	9000aaae <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000aaf2:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000aaf4:	4629      	mov	r1, r5
9000aaf6:	f7ff fb1f 	bl	9000a138 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000aafa:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000aafc:	4629      	mov	r1, r5
9000aafe:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000ab00:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000ab02:	f7f7 fa05 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000ab06:	6823      	ldr	r3, [r4, #0]
9000ab08:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ab0a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000ab0e:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000ab10:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ab12:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000ab16:	639a      	str	r2, [r3, #56]	@ 0x38
9000ab18:	e7c9      	b.n	9000aaae <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ab1a:	681a      	ldr	r2, [r3, #0]
9000ab1c:	f022 0201 	bic.w	r2, r2, #1
9000ab20:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ab22:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000ab24:	f002 020c 	and.w	r2, r2, #12
9000ab28:	2a08      	cmp	r2, #8
9000ab2a:	f000 8201 	beq.w	9000af30 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000ab2e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ab30:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000ab34:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000ab36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ab38:	2b00      	cmp	r3, #0
9000ab3a:	f040 81fe 	bne.w	9000af3a <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000ab3e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000ab40:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab42:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ab44:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab46:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000ab4a:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab4e:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ab52:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab54:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab56:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ab58:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab5c:	f000 81e5 	beq.w	9000af2a <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000ab60:	f7ff fdd6 	bl	9000a710 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000ab64:	2001      	movs	r0, #1
}
9000ab66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000ab6a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ab6c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000ab6e:	3220      	adds	r2, #32
9000ab70:	4296      	cmp	r6, r2
9000ab72:	f0c0 8200 	bcc.w	9000af76 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000ab76:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ab78:	69e1      	ldr	r1, [r4, #28]
9000ab7a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ab7c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ab7e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ab80:	69e2      	ldr	r2, [r4, #28]
9000ab82:	440a      	add	r2, r1
9000ab84:	0a19      	lsrs	r1, r3, #8
9000ab86:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab88:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ab8a:	69e2      	ldr	r2, [r4, #28]
9000ab8c:	440a      	add	r2, r1
9000ab8e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab90:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab92:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab94:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ab96:	69e2      	ldr	r2, [r4, #28]
9000ab98:	440a      	add	r2, r1
9000ab9a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ab9c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ab9e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000aba0:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aba2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000aba4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000aba6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aba8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000abaa:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000abac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000abae:	69e2      	ldr	r2, [r4, #28]
9000abb0:	440a      	add	r2, r1
9000abb2:	0a19      	lsrs	r1, r3, #8
9000abb4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000abb6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000abb8:	69e2      	ldr	r2, [r4, #28]
9000abba:	440a      	add	r2, r1
9000abbc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abbe:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000abc0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abc2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000abc4:	69e2      	ldr	r2, [r4, #28]
9000abc6:	440a      	add	r2, r1
9000abc8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000abca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000abcc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000abce:	3304      	adds	r3, #4
9000abd0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000abd2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000abd4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000abd6:	69e1      	ldr	r1, [r4, #28]
9000abd8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000abda:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000abdc:	69e2      	ldr	r2, [r4, #28]
9000abde:	440a      	add	r2, r1
9000abe0:	0a19      	lsrs	r1, r3, #8
9000abe2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000abe4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000abe6:	69e2      	ldr	r2, [r4, #28]
9000abe8:	440a      	add	r2, r1
9000abea:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abec:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000abee:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abf0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000abf2:	69e2      	ldr	r2, [r4, #28]
9000abf4:	440a      	add	r2, r1
9000abf6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000abf8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000abfa:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000abfc:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000abfe:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ac00:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ac02:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac04:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac06:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac08:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac0a:	69e2      	ldr	r2, [r4, #28]
9000ac0c:	440a      	add	r2, r1
9000ac0e:	0a19      	lsrs	r1, r3, #8
9000ac10:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac12:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac14:	69e2      	ldr	r2, [r4, #28]
9000ac16:	440a      	add	r2, r1
9000ac18:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac1a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac1c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac1e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac20:	69e2      	ldr	r2, [r4, #28]
9000ac22:	440a      	add	r2, r1
9000ac24:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac26:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ac28:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ac2a:	3304      	adds	r3, #4
9000ac2c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ac2e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac30:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac32:	69e1      	ldr	r1, [r4, #28]
9000ac34:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac36:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac38:	69e2      	ldr	r2, [r4, #28]
9000ac3a:	440a      	add	r2, r1
9000ac3c:	0a19      	lsrs	r1, r3, #8
9000ac3e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac40:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac42:	69e2      	ldr	r2, [r4, #28]
9000ac44:	440a      	add	r2, r1
9000ac46:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac48:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac4a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac4c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac4e:	69e2      	ldr	r2, [r4, #28]
9000ac50:	440a      	add	r2, r1
9000ac52:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac54:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ac56:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ac58:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac5a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ac5c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ac5e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac60:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac62:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac64:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac66:	69e2      	ldr	r2, [r4, #28]
9000ac68:	440a      	add	r2, r1
9000ac6a:	0a19      	lsrs	r1, r3, #8
9000ac6c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac6e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac70:	69e2      	ldr	r2, [r4, #28]
9000ac72:	440a      	add	r2, r1
9000ac74:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac76:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac78:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac7a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac7c:	69e2      	ldr	r2, [r4, #28]
9000ac7e:	440a      	add	r2, r1
9000ac80:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ac84:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ac86:	3304      	adds	r3, #4
9000ac88:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ac8a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac8c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac8e:	69e1      	ldr	r1, [r4, #28]
9000ac90:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac92:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac94:	69e2      	ldr	r2, [r4, #28]
9000ac96:	440a      	add	r2, r1
9000ac98:	0a19      	lsrs	r1, r3, #8
9000ac9a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac9c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac9e:	69e2      	ldr	r2, [r4, #28]
9000aca0:	440a      	add	r2, r1
9000aca2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aca4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aca6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aca8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acaa:	69e2      	ldr	r2, [r4, #28]
9000acac:	440a      	add	r2, r1
9000acae:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000acb0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acb2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000acb4:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000acb6:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000acb8:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000acba:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000acbc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000acbe:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000acc0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acc2:	69e2      	ldr	r2, [r4, #28]
9000acc4:	440a      	add	r2, r1
9000acc6:	0a19      	lsrs	r1, r3, #8
9000acc8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000accc:	69e2      	ldr	r2, [r4, #28]
9000acce:	440a      	add	r2, r1
9000acd0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acd2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acd4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acd6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acd8:	69e2      	ldr	r2, [r4, #28]
9000acda:	440a      	add	r2, r1
9000acdc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000acde:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ace0:	3304      	adds	r3, #4
9000ace2:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ace4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ace6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ace8:	429a      	cmp	r2, r3
9000acea:	f000 8258 	beq.w	9000b19e <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acee:	6823      	ldr	r3, [r4, #0]
9000acf0:	e6f4      	b.n	9000aadc <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000acf2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000acf4:	2a00      	cmp	r2, #0
9000acf6:	f000 8128 	beq.w	9000af4a <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000acfa:	6a21      	ldr	r1, [r4, #32]
9000acfc:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000acfe:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ad00:	f240 81b9 	bls.w	9000b076 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ad04:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ad06:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000ad08:	04cd      	lsls	r5, r1, #19
9000ad0a:	f53f aedb 	bmi.w	9000aac4 <JPEG_Process+0x28>
9000ad0e:	2a00      	cmp	r2, #0
9000ad10:	f43f aed8 	beq.w	9000aac4 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000ad14:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000ad16:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000ad1a:	f200 8248 	bhi.w	9000b1ae <JPEG_Process+0x712>
      if (nb_words > 0UL)
9000ad1e:	2a03      	cmp	r2, #3
9000ad20:	f240 82c0 	bls.w	9000b2a4 <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
9000ad24:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ad26:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad28:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad2a:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad2e:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad30:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad32:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad34:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ad38:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad3a:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ad3e:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad42:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad46:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ad48:	6a21      	ldr	r1, [r4, #32]
9000ad4a:	f101 0104 	add.w	r1, r1, #4
9000ad4e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ad50:	f43f aeb8 	beq.w	9000aac4 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ad54:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ad56:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad58:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad5c:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad5e:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad60:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad62:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ad66:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad68:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ad6c:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad70:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad74:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ad76:	6a21      	ldr	r1, [r4, #32]
9000ad78:	f101 0104 	add.w	r1, r1, #4
9000ad7c:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ad7e:	f43f aea1 	beq.w	9000aac4 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ad82:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ad84:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad86:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad8a:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad8c:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad8e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad90:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ad94:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad96:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ad9a:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad9e:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ada2:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ada4:	6a21      	ldr	r1, [r4, #32]
9000ada6:	f101 0104 	add.w	r1, r1, #4
9000adaa:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000adac:	f43f ae8a 	beq.w	9000aac4 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000adb0:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000adb2:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adb4:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000adb8:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adba:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adbc:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adbe:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000adc2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adc4:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000adc8:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adcc:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000add0:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000add2:	6a21      	ldr	r1, [r4, #32]
9000add4:	f101 0104 	add.w	r1, r1, #4
9000add8:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000adda:	f43f ae73 	beq.w	9000aac4 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000adde:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ade0:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ade2:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ade6:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ade8:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adea:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adec:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000adf0:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adf2:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000adf6:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adfa:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000adfe:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ae00:	6a21      	ldr	r1, [r4, #32]
9000ae02:	f101 0104 	add.w	r1, r1, #4
9000ae06:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae08:	f43f ae5c 	beq.w	9000aac4 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ae0c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae0e:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae10:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae14:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae16:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae18:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae1a:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae1e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae20:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000ae24:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae28:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae2c:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ae2e:	6a21      	ldr	r1, [r4, #32]
9000ae30:	f101 0104 	add.w	r1, r1, #4
9000ae34:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae36:	f47f ae45 	bne.w	9000aac4 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ae3a:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae3c:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae3e:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae40:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae42:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae44:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae46:	7849      	ldrb	r1, [r1, #1]
9000ae48:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000ae4c:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae4e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae52:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000ae54:	6a22      	ldr	r2, [r4, #32]
9000ae56:	3204      	adds	r2, #4
9000ae58:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000ae5a:	e633      	b.n	9000aac4 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000ae5c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000ae5e:	2a00      	cmp	r2, #0
9000ae60:	d073      	beq.n	9000af4a <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ae62:	6a21      	ldr	r1, [r4, #32]
9000ae64:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ae66:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ae68:	f200 8182 	bhi.w	9000b170 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000ae6c:	428a      	cmp	r2, r1
9000ae6e:	f040 8104 	bne.w	9000b07a <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ae72:	6a21      	ldr	r1, [r4, #32]
9000ae74:	4620      	mov	r0, r4
9000ae76:	f7f7 f879 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ae7a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000ae7c:	2a04      	cmp	r2, #4
9000ae7e:	d902      	bls.n	9000ae86 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000ae80:	f022 0203 	bic.w	r2, r2, #3
9000ae84:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000ae86:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae88:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ae8a:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ae8c:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000ae8e:	04c9      	lsls	r1, r1, #19
9000ae90:	f53f ae18 	bmi.w	9000aac4 <JPEG_Process+0x28>
9000ae94:	2a00      	cmp	r2, #0
9000ae96:	f43f ae15 	beq.w	9000aac4 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000ae9a:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae9c:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000ae9e:	f040 8177 	bne.w	9000b190 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aea2:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000aea4:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000aea6:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aea8:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000aeaa:	f105 0501 	add.w	r5, r5, #1
9000aeae:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000aeb0:	d010      	beq.n	9000aed4 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aeb2:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000aeb4:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aeb6:	5d45      	ldrb	r5, [r0, r5]
9000aeb8:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000aebc:	6a25      	ldr	r5, [r4, #32]
9000aebe:	f105 0501 	add.w	r5, r5, #1
9000aec2:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000aec4:	d106      	bne.n	9000aed4 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aec6:	6a22      	ldr	r2, [r4, #32]
9000aec8:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000aeca:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aecc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000aed0:	3201      	adds	r2, #1
9000aed2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000aed4:	6419      	str	r1, [r3, #64]	@ 0x40
9000aed6:	e5f5      	b.n	9000aac4 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000aed8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aeda:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000aedc:	3204      	adds	r2, #4
9000aede:	4295      	cmp	r5, r2
9000aee0:	f0c0 80cd 	bcc.w	9000b07e <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000aee4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aee6:	69e1      	ldr	r1, [r4, #28]
9000aee8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aeea:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aeec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aeee:	69e2      	ldr	r2, [r4, #28]
9000aef0:	440a      	add	r2, r1
9000aef2:	0a19      	lsrs	r1, r3, #8
9000aef4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aef6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000aef8:	69e2      	ldr	r2, [r4, #28]
9000aefa:	440a      	add	r2, r1
9000aefc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aefe:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000af00:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000af02:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000af04:	69e2      	ldr	r2, [r4, #28]
9000af06:	440a      	add	r2, r1
9000af08:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000af0a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000af0c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000af0e:	3304      	adds	r3, #4
9000af10:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000af12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000af14:	429a      	cmp	r2, r3
9000af16:	f47f aeea 	bne.w	9000acee <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000af1a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000af1c:	4620      	mov	r0, r4
9000af1e:	69e1      	ldr	r1, [r4, #28]
9000af20:	f7f7 f844 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000af24:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000af26:	6266      	str	r6, [r4, #36]	@ 0x24
9000af28:	e5d8      	b.n	9000aadc <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000af2a:	f7f7 f8ed 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
9000af2e:	e619      	b.n	9000ab64 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000af30:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000af32:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000af36:	631a      	str	r2, [r3, #48]	@ 0x30
9000af38:	e5f9      	b.n	9000ab2e <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000af3a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000af3c:	4620      	mov	r0, r4
9000af3e:	69e1      	ldr	r1, [r4, #28]
9000af40:	f7f7 f834 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000af44:	2300      	movs	r3, #0
9000af46:	6263      	str	r3, [r4, #36]	@ 0x24
9000af48:	e5f9      	b.n	9000ab3e <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000af4a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000af4c:	f002 020c 	and.w	r2, r2, #12
9000af50:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000af52:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000af54:	f000 811e 	beq.w	9000b194 <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000af58:	f002 020c 	and.w	r2, r2, #12
9000af5c:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000af5e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000af60:	f47f adb0 	bne.w	9000aac4 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000af64:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000af68:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000af6a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000af6c:	f022 0206 	bic.w	r2, r2, #6
9000af70:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000af72:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000af74:	e5a6      	b.n	9000aac4 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000af76:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000af78:	4296      	cmp	r6, r2
9000af7a:	f67f adaf 	bls.w	9000aadc <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000af7e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000af80:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000af82:	0880      	lsrs	r0, r0, #2
9000af84:	d020      	beq.n	9000afc8 <JPEG_Process+0x52c>
9000af86:	4629      	mov	r1, r5
9000af88:	e000      	b.n	9000af8c <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000af8a:	6823      	ldr	r3, [r4, #0]
9000af8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000af8e:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000af90:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000af92:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000af94:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000af96:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000af98:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000af9a:	69e2      	ldr	r2, [r4, #28]
9000af9c:	4432      	add	r2, r6
9000af9e:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000afa2:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000afa4:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000afa6:	69e2      	ldr	r2, [r4, #28]
9000afa8:	4432      	add	r2, r6
9000afaa:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000afae:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000afb2:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000afb4:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000afb6:	69e2      	ldr	r2, [r4, #28]
9000afb8:	4432      	add	r2, r6
9000afba:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000afbc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000afbe:	f103 0304 	add.w	r3, r3, #4
9000afc2:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000afc4:	d1e1      	bne.n	9000af8a <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000afc6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000afc8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000afca:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000afcc:	429e      	cmp	r6, r3
9000afce:	f000 8161 	beq.w	9000b294 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000afd2:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000afd6:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000afd8:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000afdc:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000afde:	d00e      	beq.n	9000affe <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000afe0:	f005 0303 	and.w	r3, r5, #3
9000afe4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000afe6:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000afe8:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000afea:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000afec:	fa27 f303 	lsr.w	r3, r7, r3
9000aff0:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000aff2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aff4:	69e1      	ldr	r1, [r4, #28]
9000aff6:	f103 0301 	add.w	r3, r3, #1
9000affa:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000affc:	d1f0      	bne.n	9000afe0 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000affe:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b002:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b004:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b006:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b00a:	f7f6 ffcf 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b00e:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b010:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000b012:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b014:	f63f ae6b 	bhi.w	9000acee <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b018:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000b01c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b01e:	69e0      	ldr	r0, [r4, #28]
9000b020:	fa27 f502 	lsr.w	r5, r7, r2
9000b024:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000b026:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b028:	f101 0101 	add.w	r1, r1, #1
9000b02c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b02e:	f43f ae5e 	beq.w	9000acee <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b032:	f102 0108 	add.w	r1, r2, #8
9000b036:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b038:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b03a:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b03c:	fa27 f101 	lsr.w	r1, r7, r1
9000b040:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000b042:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b044:	f101 0101 	add.w	r1, r1, #1
9000b048:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b04a:	f43f ae50 	beq.w	9000acee <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b04e:	3210      	adds	r2, #16
9000b050:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b052:	69e0      	ldr	r0, [r4, #28]
9000b054:	fa27 f202 	lsr.w	r2, r7, r2
9000b058:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000b05a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b05c:	3201      	adds	r2, #1
9000b05e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b060:	2e00      	cmp	r6, #0
9000b062:	f47f ae44 	bne.w	9000acee <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b066:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b068:	0e3f      	lsrs	r7, r7, #24
9000b06a:	69e2      	ldr	r2, [r4, #28]
9000b06c:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000b06e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b070:	3301      	adds	r3, #1
9000b072:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b074:	e63b      	b.n	9000acee <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000b076:	428a      	cmp	r2, r1
9000b078:	d07c      	beq.n	9000b174 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b07a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000b07c:	e522      	b.n	9000aac4 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b07e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b080:	4295      	cmp	r5, r2
9000b082:	f67f ad2b 	bls.w	9000aadc <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b086:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b088:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000b08a:	0880      	lsrs	r0, r0, #2
9000b08c:	d020      	beq.n	9000b0d0 <JPEG_Process+0x634>
9000b08e:	4631      	mov	r1, r6
9000b090:	e000      	b.n	9000b094 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000b092:	6823      	ldr	r3, [r4, #0]
9000b094:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000b096:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b098:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b09a:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b09c:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b09e:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b0a0:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000b0a2:	69e2      	ldr	r2, [r4, #28]
9000b0a4:	442a      	add	r2, r5
9000b0a6:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000b0aa:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b0ac:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000b0ae:	69e2      	ldr	r2, [r4, #28]
9000b0b0:	442a      	add	r2, r5
9000b0b2:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b0b6:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b0ba:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b0bc:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000b0be:	69e2      	ldr	r2, [r4, #28]
9000b0c0:	442a      	add	r2, r5
9000b0c2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b0c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b0c6:	f103 0304 	add.w	r3, r3, #4
9000b0ca:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000b0cc:	d1e1      	bne.n	9000b092 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b0ce:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000b0d0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b0d2:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b0d4:	429d      	cmp	r5, r3
9000b0d6:	f000 80dd 	beq.w	9000b294 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b0da:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000b0de:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b0e0:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000b0e4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000b0e6:	d00e      	beq.n	9000b106 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b0e8:	f006 0303 	and.w	r3, r6, #3
9000b0ec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000b0ee:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b0f0:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b0f2:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b0f4:	fa27 f303 	lsr.w	r3, r7, r3
9000b0f8:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b0fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b0fc:	69e1      	ldr	r1, [r4, #28]
9000b0fe:	f103 0301 	add.w	r3, r3, #1
9000b102:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000b104:	d1f0      	bne.n	9000b0e8 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000b106:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b10a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b10c:	4620      	mov	r0, r4
9000b10e:	f7f6 ff4d 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000b112:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000b116:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b118:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000b11a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b11c:	f63f ade7 	bhi.w	9000acee <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b120:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000b124:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b126:	69e0      	ldr	r0, [r4, #28]
9000b128:	fa27 f502 	lsr.w	r5, r7, r2
9000b12c:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000b12e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b130:	f101 0101 	add.w	r1, r1, #1
9000b134:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b136:	f43f adda 	beq.w	9000acee <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b13a:	f102 0108 	add.w	r1, r2, #8
9000b13e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b140:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b142:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b144:	fa27 f101 	lsr.w	r1, r7, r1
9000b148:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000b14a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b14c:	f101 0101 	add.w	r1, r1, #1
9000b150:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b152:	f43f adcc 	beq.w	9000acee <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b156:	3210      	adds	r2, #16
9000b158:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b15a:	69e0      	ldr	r0, [r4, #28]
9000b15c:	fa27 f202 	lsr.w	r2, r7, r2
9000b160:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000b162:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b164:	3201      	adds	r2, #1
9000b166:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b168:	2b00      	cmp	r3, #0
9000b16a:	f43f af7c 	beq.w	9000b066 <JPEG_Process+0x5ca>
9000b16e:	e5be      	b.n	9000acee <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b170:	1a52      	subs	r2, r2, r1
9000b172:	e68b      	b.n	9000ae8c <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b174:	6a21      	ldr	r1, [r4, #32]
9000b176:	4620      	mov	r0, r4
9000b178:	f7f6 fef8 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000b17c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000b17e:	2a04      	cmp	r2, #4
9000b180:	d902      	bls.n	9000b188 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000b182:	f022 0203 	bic.w	r2, r2, #3
9000b186:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000b188:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b18a:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000b18c:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000b18e:	e5ba      	b.n	9000ad06 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000b190:	6a22      	ldr	r2, [r4, #32]
9000b192:	e653      	b.n	9000ae3c <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b194:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000b198:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b19a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000b19c:	e492      	b.n	9000aac4 <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b19e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b1a0:	4620      	mov	r0, r4
9000b1a2:	69e1      	ldr	r1, [r4, #28]
9000b1a4:	f7f6 ff02 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b1a8:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b1aa:	6265      	str	r5, [r4, #36]	@ 0x24
9000b1ac:	e496      	b.n	9000aadc <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1ae:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000b1b0:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1b2:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1b4:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1b6:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1b8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1ba:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b1bc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1be:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b1c2:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1c4:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1c8:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b1ca:	6a21      	ldr	r1, [r4, #32]
9000b1cc:	3104      	adds	r1, #4
9000b1ce:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b1d0:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1d2:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1d4:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1d6:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1d8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1da:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b1dc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1de:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b1e2:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1e4:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1e8:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b1ea:	6a21      	ldr	r1, [r4, #32]
9000b1ec:	3104      	adds	r1, #4
9000b1ee:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b1f0:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1f2:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1f4:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1f6:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1f8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b1fa:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b1fc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1fe:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b202:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b204:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b208:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b20a:	6a21      	ldr	r1, [r4, #32]
9000b20c:	3104      	adds	r1, #4
9000b20e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b210:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b212:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b214:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b216:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b218:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b21a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b21c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b21e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b222:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b224:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b228:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b22a:	6a21      	ldr	r1, [r4, #32]
9000b22c:	3104      	adds	r1, #4
9000b22e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b230:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b232:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b234:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b236:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b238:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b23a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b23c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b23e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b242:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b244:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b248:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b24a:	6a21      	ldr	r1, [r4, #32]
9000b24c:	3104      	adds	r1, #4
9000b24e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b250:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b252:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b254:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b256:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b258:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b25a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b25c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b25e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b262:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b264:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b268:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b26a:	6a21      	ldr	r1, [r4, #32]
9000b26c:	3104      	adds	r1, #4
9000b26e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b270:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b272:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b274:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b276:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b278:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b27a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b27c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b27e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b282:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b284:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b288:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b28a:	6a21      	ldr	r1, [r4, #32]
9000b28c:	3104      	adds	r1, #4
9000b28e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b290:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b292:	e5d3      	b.n	9000ae3c <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b294:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b296:	4620      	mov	r0, r4
9000b298:	f7f6 fe88 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b29c:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b29e:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b2a0:	6262      	str	r2, [r4, #36]	@ 0x24
9000b2a2:	e41b      	b.n	9000aadc <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b2a4:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b2a6:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b2a8:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b2aa:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000b2ac:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b2b0:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000b2b2:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b2b4:	f43f ae0e 	beq.w	9000aed4 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b2b8:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b2ba:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b2bc:	5c28      	ldrb	r0, [r5, r0]
9000b2be:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000b2c2:	6a20      	ldr	r0, [r4, #32]
9000b2c4:	f100 0001 	add.w	r0, r0, #1
9000b2c8:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b2ca:	f47f ae03 	bne.w	9000aed4 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b2ce:	6a22      	ldr	r2, [r4, #32]
9000b2d0:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000b2d2:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b2d4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000b2d8:	3201      	adds	r2, #1
9000b2da:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b2dc:	e5fa      	b.n	9000aed4 <JPEG_Process+0x438>
9000b2de:	bf00      	nop

9000b2e0 <HAL_JPEG_IRQHandler>:
{
9000b2e0:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000b2e2:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000b2e6:	3b03      	subs	r3, #3
9000b2e8:	2b01      	cmp	r3, #1
9000b2ea:	d900      	bls.n	9000b2ee <HAL_JPEG_IRQHandler+0xe>
}
9000b2ec:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b2ee:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000b2f0:	4604      	mov	r4, r0
9000b2f2:	f003 030c 	and.w	r3, r3, #12
9000b2f6:	2b08      	cmp	r3, #8
9000b2f8:	d050      	beq.n	9000b39c <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b2fa:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000b2fc:	f003 030c 	and.w	r3, r3, #12
9000b300:	2b0c      	cmp	r3, #12
9000b302:	d1f3      	bne.n	9000b2ec <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b304:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b306:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b308:	f002 0203 	and.w	r2, r2, #3
9000b30c:	2a02      	cmp	r2, #2
9000b30e:	d049      	beq.n	9000b3a4 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000b310:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b312:	0692      	lsls	r2, r2, #26
9000b314:	d5ea      	bpl.n	9000b2ec <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b316:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b318:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b31a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000b31e:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b320:	681a      	ldr	r2, [r3, #0]
9000b322:	f022 0201 	bic.w	r2, r2, #1
9000b326:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b328:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b32a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000b32e:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b330:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000b332:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000b336:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b338:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000b33c:	2b02      	cmp	r3, #2
9000b33e:	d054      	beq.n	9000b3ea <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000b340:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000b342:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000b346:	2b02      	cmp	r3, #2
9000b348:	d043      	beq.n	9000b3d2 <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b34a:	6803      	ldr	r3, [r0, #0]
9000b34c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b34e:	695b      	ldr	r3, [r3, #20]
9000b350:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000b354:	1ad3      	subs	r3, r2, r3
9000b356:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b358:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b35a:	429a      	cmp	r2, r3
9000b35c:	d048      	beq.n	9000b3f0 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000b35e:	6822      	ldr	r2, [r4, #0]
9000b360:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000b362:	f015 0510 	ands.w	r5, r5, #16
9000b366:	d138      	bne.n	9000b3da <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000b368:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b36a:	2b00      	cmp	r3, #0
9000b36c:	d14b      	bne.n	9000b406 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b36e:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000b370:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b372:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b374:	f023 0301 	bic.w	r3, r3, #1
9000b378:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000b37a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b37c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b37e:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b382:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b386:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b38a:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b38c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b38e:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b390:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b394:	d034      	beq.n	9000b400 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b396:	f7ff f9bb 	bl	9000a710 <HAL_JPEG_EncodeCpltCallback>
}
9000b39a:	bd38      	pop	{r3, r4, r5, pc}
9000b39c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000b3a0:	f7ff bb7c 	b.w	9000aa9c <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b3a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b3a6:	0651      	lsls	r1, r2, #25
9000b3a8:	d5b2      	bpl.n	9000b310 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b3aa:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b3ac:	4629      	mov	r1, r5
9000b3ae:	f7fe fec3 	bl	9000a138 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b3b2:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b3b4:	4629      	mov	r1, r5
9000b3b6:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b3b8:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b3ba:	f7f6 fda9 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b3be:	6823      	ldr	r3, [r4, #0]
9000b3c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b3c2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000b3c6:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b3c8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000b3ca:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000b3ce:	639a      	str	r2, [r3, #56]	@ 0x38
9000b3d0:	e79e      	b.n	9000b310 <HAL_JPEG_IRQHandler+0x30>
}
9000b3d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000b3d6:	f000 bb63 	b.w	9000baa0 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b3da:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b3dc:	049b      	lsls	r3, r3, #18
9000b3de:	d485      	bmi.n	9000b2ec <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000b3e0:	4620      	mov	r0, r4
}
9000b3e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000b3e6:	f7ff b9ff 	b.w	9000a7e8 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000b3ea:	f000 fb59 	bl	9000baa0 <HAL_MDMA_Abort_IT>
9000b3ee:	e7a7      	b.n	9000b340 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b3f0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b3f2:	4620      	mov	r0, r4
9000b3f4:	69e1      	ldr	r1, [r4, #28]
9000b3f6:	f7f6 fdd9 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000b3fa:	2300      	movs	r3, #0
9000b3fc:	6263      	str	r3, [r4, #36]	@ 0x24
9000b3fe:	e7ae      	b.n	9000b35e <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b400:	f7f6 fe82 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000b404:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b406:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b408:	4620      	mov	r0, r4
9000b40a:	69e1      	ldr	r1, [r4, #28]
9000b40c:	f7f6 fdce 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b410:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b412:	6265      	str	r5, [r4, #36]	@ 0x24
9000b414:	e7ab      	b.n	9000b36e <HAL_JPEG_IRQHandler+0x8e>
9000b416:	bf00      	nop

9000b418 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000b418:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000b41c:	4770      	bx	lr
9000b41e:	bf00      	nop

9000b420 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000b420:	2800      	cmp	r0, #0
9000b422:	d067      	beq.n	9000b4f4 <HAL_LTDC_Init+0xd4>
{
9000b424:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000b426:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000b42a:	4604      	mov	r4, r0
9000b42c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000b430:	2b00      	cmp	r3, #0
9000b432:	d05a      	beq.n	9000b4ea <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b434:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b436:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b438:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b43c:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b440:	4302      	orrs	r2, r0
9000b442:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b444:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b446:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b448:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b44a:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b44e:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b450:	4929      	ldr	r1, [pc, #164]	@ (9000b4f8 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b452:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b454:	6998      	ldr	r0, [r3, #24]
9000b456:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000b458:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b45a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b45c:	689a      	ldr	r2, [r3, #8]
9000b45e:	400a      	ands	r2, r1
9000b460:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b462:	689a      	ldr	r2, [r3, #8]
9000b464:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b468:	69a0      	ldr	r0, [r4, #24]
9000b46a:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000b46c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b46e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000b470:	68da      	ldr	r2, [r3, #12]
9000b472:	400a      	ands	r2, r1
9000b474:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b476:	68da      	ldr	r2, [r3, #12]
9000b478:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b47c:	6a20      	ldr	r0, [r4, #32]
9000b47e:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000b480:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b482:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000b484:	691a      	ldr	r2, [r3, #16]
9000b486:	400a      	ands	r2, r1
9000b488:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b48a:	691a      	ldr	r2, [r3, #16]
9000b48c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b490:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000b492:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000b494:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b496:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000b498:	695a      	ldr	r2, [r3, #20]
9000b49a:	400a      	ands	r2, r1
9000b49c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000b49e:	695a      	ldr	r2, [r3, #20]
9000b4a0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000b4a2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b4a6:	430a      	orrs	r2, r1
9000b4a8:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b4aa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000b4ac:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b4b0:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000b4b4:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b4b8:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b4ba:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000b4bc:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000b4c0:	432a      	orrs	r2, r5
9000b4c2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b4c6:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b4c8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b4cc:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000b4ce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b4d0:	f042 0206 	orr.w	r2, r2, #6
9000b4d4:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000b4d6:	699a      	ldr	r2, [r3, #24]
9000b4d8:	f042 0201 	orr.w	r2, r2, #1
9000b4dc:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000b4de:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b4e0:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000b4e4:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000b4e8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000b4ea:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000b4ee:	f7f9 f8f9 	bl	900046e4 <HAL_LTDC_MspInit>
9000b4f2:	e79f      	b.n	9000b434 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000b4f4:	2001      	movs	r0, #1
}
9000b4f6:	4770      	bx	lr
9000b4f8:	f000f800 	.word	0xf000f800

9000b4fc <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000b4fc:	4770      	bx	lr
9000b4fe:	bf00      	nop

9000b500 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000b500:	4770      	bx	lr
9000b502:	bf00      	nop

9000b504 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b504:	6803      	ldr	r3, [r0, #0]
{
9000b506:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b508:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000b50a:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000b50c:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000b50e:	076a      	lsls	r2, r5, #29
9000b510:	d501      	bpl.n	9000b516 <HAL_LTDC_IRQHandler+0x12>
9000b512:	0771      	lsls	r1, r6, #29
9000b514:	d41d      	bmi.n	9000b552 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000b516:	07aa      	lsls	r2, r5, #30
9000b518:	d501      	bpl.n	9000b51e <HAL_LTDC_IRQHandler+0x1a>
9000b51a:	07b3      	lsls	r3, r6, #30
9000b51c:	d42d      	bmi.n	9000b57a <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000b51e:	07e8      	lsls	r0, r5, #31
9000b520:	d501      	bpl.n	9000b526 <HAL_LTDC_IRQHandler+0x22>
9000b522:	07f1      	lsls	r1, r6, #31
9000b524:	d440      	bmi.n	9000b5a8 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000b526:	072a      	lsls	r2, r5, #28
9000b528:	d501      	bpl.n	9000b52e <HAL_LTDC_IRQHandler+0x2a>
9000b52a:	0733      	lsls	r3, r6, #28
9000b52c:	d400      	bmi.n	9000b530 <HAL_LTDC_IRQHandler+0x2c>
}
9000b52e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b530:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b532:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000b534:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000b536:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b538:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b53a:	f022 0208 	bic.w	r2, r2, #8
9000b53e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b540:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b542:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000b544:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b548:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b54c:	f7ff ffd8 	bl	9000b500 <HAL_LTDC_ReloadEventCallback>
}
9000b550:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000b552:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b554:	f022 0204 	bic.w	r2, r2, #4
9000b558:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000b55a:	2204      	movs	r2, #4
9000b55c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000b55e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000b562:	f043 0301 	orr.w	r3, r3, #1
9000b566:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000b56a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b56c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b570:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b574:	f7ff ffc2 	bl	9000b4fc <HAL_LTDC_ErrorCallback>
9000b578:	e7cd      	b.n	9000b516 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b57a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000b57c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b57e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b580:	f022 0202 	bic.w	r2, r2, #2
9000b584:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000b586:	2202      	movs	r2, #2
9000b588:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b58a:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000b58c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000b590:	f043 0302 	orr.w	r3, r3, #2
9000b594:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000b598:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b59a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b59e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b5a2:	f7ff ffab 	bl	9000b4fc <HAL_LTDC_ErrorCallback>
9000b5a6:	e7ba      	b.n	9000b51e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b5a8:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000b5aa:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b5ac:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b5ae:	f022 0201 	bic.w	r2, r2, #1
9000b5b2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000b5b4:	2201      	movs	r2, #1
9000b5b6:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000b5b8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000b5ba:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b5be:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000b5c2:	f7f7 ffe5 	bl	90003590 <HAL_LTDC_LineEventCallback>
9000b5c6:	e7ae      	b.n	9000b526 <HAL_LTDC_IRQHandler+0x22>

9000b5c8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000b5c8:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000b5cc:	2b01      	cmp	r3, #1
9000b5ce:	f000 80c6 	beq.w	9000b75e <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b5d2:	2302      	movs	r3, #2
{
9000b5d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b5d8:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b5dc:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b5e0:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000b5e4:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b5e6:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b5ea:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b5ec:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b5f0:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b5f2:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000b5f6:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b5f8:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000b5fc:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b5fe:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b602:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b606:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000b76c <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b60a:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000b60e:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000b612:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b614:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b616:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b61a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b61c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b61e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b622:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b624:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b628:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b62a:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b62c:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b630:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b632:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b634:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b638:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000b63c:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b63e:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b640:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000b644:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b648:	440b      	add	r3, r1
9000b64a:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b64e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b652:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b656:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b65a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b65e:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b662:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b664:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b668:	68ab      	ldr	r3, [r5, #8]
9000b66a:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000b66e:	3301      	adds	r3, #1
9000b670:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000b674:	4403      	add	r3, r0
9000b676:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b67a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b67c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000b680:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000b684:	f023 0307 	bic.w	r3, r3, #7
9000b688:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b68c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000b690:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000b694:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000b696:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000b69a:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000b69e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000b6a2:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000b6a6:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000b6aa:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000b6ae:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000b6b2:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000b6b6:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000b6ba:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000b6be:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000b6c2:	696b      	ldr	r3, [r5, #20]
9000b6c4:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b6c8:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b6cc:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b6ce:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b6d2:	6a28      	ldr	r0, [r5, #32]
9000b6d4:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b6d6:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b6da:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000b6de:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
9000b6e2:	2300      	movs	r3, #0
9000b6e4:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000b6e8:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000b6ea:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b6ee:	b3a1      	cbz	r1, 9000b75a <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000b6f0:	2901      	cmp	r1, #1
9000b6f2:	d036      	beq.n	9000b762 <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000b6f4:	1e8b      	subs	r3, r1, #2
9000b6f6:	2907      	cmp	r1, #7
9000b6f8:	bf18      	it	ne
9000b6fa:	2b02      	cmpne	r3, #2
9000b6fc:	bf94      	ite	ls
9000b6fe:	2301      	movls	r3, #1
9000b700:	2300      	movhi	r3, #0
9000b702:	3301      	adds	r3, #1
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b704:	1abf      	subs	r7, r7, r2
9000b706:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
9000b708:	fb03 f707 	mul.w	r7, r3, r7
9000b70c:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b710:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b712:	3707      	adds	r7, #7
9000b714:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000b718:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000b71c:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000b720:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b724:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000b728:	4b0f      	ldr	r3, [pc, #60]	@ (9000b768 <HAL_LTDC_ConfigLayer+0x1a0>)
9000b72a:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000b72e:	400b      	ands	r3, r1
9000b730:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b734:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b738:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000b73a:	f859 3006 	ldr.w	r3, [r9, r6]
9000b73e:	4313      	orrs	r3, r2
9000b740:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000b744:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b746:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000b74a:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000b74c:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000b750:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000b754:	b003      	add	sp, #12
9000b756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000b75a:	2304      	movs	r3, #4
9000b75c:	e7d2      	b.n	9000b704 <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000b75e:	2002      	movs	r0, #2
}
9000b760:	4770      	bx	lr
    tmp = 3U;
9000b762:	2303      	movs	r3, #3
9000b764:	e7ce      	b.n	9000b704 <HAL_LTDC_ConfigLayer+0x13c>
9000b766:	bf00      	nop
9000b768:	fffff800 	.word	0xfffff800
9000b76c:	fffff8f8 	.word	0xfffff8f8

9000b770 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000b770:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000b774:	2a01      	cmp	r2, #1
9000b776:	d019      	beq.n	9000b7ac <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b778:	6802      	ldr	r2, [r0, #0]
9000b77a:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b77c:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000b77e:	f04f 0c00 	mov.w	ip, #0
{
9000b782:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b784:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b788:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000b78a:	4c09      	ldr	r4, [pc, #36]	@ (9000b7b0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b78c:	f020 0001 	bic.w	r0, r0, #1
9000b790:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b792:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000b794:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000b796:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000b798:	4301      	orrs	r1, r0
9000b79a:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b79c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000b7a0:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000b7a2:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000b7a6:	f85d 4b04 	ldr.w	r4, [sp], #4
9000b7aa:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000b7ac:	2002      	movs	r0, #2
}
9000b7ae:	4770      	bx	lr
9000b7b0:	50001000 	.word	0x50001000

9000b7b4 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000b7b4:	b538      	push	{r3, r4, r5, lr}
9000b7b6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000b7b8:	f7fc fac0 	bl	90007d3c <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000b7bc:	2c00      	cmp	r4, #0
9000b7be:	d058      	beq.n	9000b872 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000b7c0:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b7c2:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000b7c4:	2100      	movs	r1, #0
9000b7c6:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b7c8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000b7cc:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000b7d0:	68da      	ldr	r2, [r3, #12]
9000b7d2:	f022 0201 	bic.w	r2, r2, #1
9000b7d6:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b7d8:	e005      	b.n	9000b7e6 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b7da:	f7fc faaf 	bl	90007d3c <HAL_GetTick>
9000b7de:	1b43      	subs	r3, r0, r5
9000b7e0:	2b05      	cmp	r3, #5
9000b7e2:	d841      	bhi.n	9000b868 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b7e4:	6823      	ldr	r3, [r4, #0]
9000b7e6:	68da      	ldr	r2, [r3, #12]
9000b7e8:	07d2      	lsls	r2, r2, #31
9000b7ea:	d4f6      	bmi.n	9000b7da <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b7ec:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000b7f0:	69e0      	ldr	r0, [r4, #28]
9000b7f2:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b7f4:	68e1      	ldr	r1, [r4, #12]
9000b7f6:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b7f8:	4302      	orrs	r2, r0
9000b7fa:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b7fc:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b7fe:	4302      	orrs	r2, r0
9000b800:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b802:	4302      	orrs	r2, r0
9000b804:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000b806:	4302      	orrs	r2, r0
9000b808:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000b80a:	4302      	orrs	r2, r0
9000b80c:	68a0      	ldr	r0, [r4, #8]
9000b80e:	4302      	orrs	r2, r0
9000b810:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000b812:	3801      	subs	r0, #1
9000b814:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b818:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b81a:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b81c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000b820:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b822:	d103      	bne.n	9000b82c <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000b824:	691a      	ldr	r2, [r3, #16]
9000b826:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000b82a:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000b82c:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b82e:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000b830:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000b832:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b834:	db1f      	blt.n	9000b876 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000b836:	b292      	uxth	r2, r2
9000b838:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b83a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b83c:	2a00      	cmp	r2, #0
9000b83e:	db24      	blt.n	9000b88a <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b840:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b842:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b846:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b84a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b84c:	d029      	beq.n	9000b8a2 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000b84e:	b2c0      	uxtb	r0, r0
9000b850:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000b852:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000b854:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000b856:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000b858:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b85a:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000b85c:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000b85e:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b862:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000b866:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b868:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b86a:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b86c:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b86e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000b872:	2001      	movs	r0, #1
}
9000b874:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b876:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000b878:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b87a:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b87e:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b880:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b882:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b884:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b886:	2a00      	cmp	r2, #0
9000b888:	dada      	bge.n	9000b840 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b88a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000b88c:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b88e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b892:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000b896:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b898:	6a19      	ldr	r1, [r3, #32]
9000b89a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b89e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b8a0:	d1d5      	bne.n	9000b84e <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000b8a2:	2200      	movs	r2, #0
9000b8a4:	629a      	str	r2, [r3, #40]	@ 0x28
9000b8a6:	e7d4      	b.n	9000b852 <HAL_MDMA_Init+0x9e>

9000b8a8 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000b8a8:	b1f8      	cbz	r0, 9000b8ea <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000b8aa:	6802      	ldr	r2, [r0, #0]
9000b8ac:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000b8ae:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000b8b0:	68d0      	ldr	r0, [r2, #12]
{
9000b8b2:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000b8b4:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b8b8:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000b8ba:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000b8bc:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000b8be:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000b8c0:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000b8c2:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000b8c4:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000b8c6:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000b8c8:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000b8ca:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000b8cc:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000b8ce:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000b8d0:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b8d2:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b8d4:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000b8d6:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000b8da:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000b8de:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000b8e2:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b8e4:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000b8e8:	4770      	bx	lr
    return HAL_ERROR;
9000b8ea:	2001      	movs	r0, #1
}
9000b8ec:	4770      	bx	lr
9000b8ee:	bf00      	nop

9000b8f0 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000b8f0:	b308      	cbz	r0, 9000b936 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000b8f2:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000b8f4:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000b8f8:	2801      	cmp	r0, #1
9000b8fa:	d01e      	beq.n	9000b93a <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000b8fc:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b8fe:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b902:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000b906:	45f4      	cmp	ip, lr
9000b908:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b90c:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b910:	d004      	beq.n	9000b91c <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000b912:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b914:	2200      	movs	r2, #0
9000b916:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000b91a:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b91c:	681c      	ldr	r4, [r3, #0]
9000b91e:	6925      	ldr	r5, [r4, #16]
9000b920:	006d      	lsls	r5, r5, #1
9000b922:	d4f7      	bmi.n	9000b914 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b924:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000b926:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b928:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000b92a:	b941      	cbnz	r1, 9000b93e <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b92c:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000b930:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000b932:	2000      	movs	r0, #0
9000b934:	e7ee      	b.n	9000b914 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b936:	2001      	movs	r0, #1
9000b938:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b93a:	2002      	movs	r0, #2
}
9000b93c:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b93e:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000b942:	6122      	str	r2, [r4, #16]
9000b944:	e7f5      	b.n	9000b932 <HAL_MDMA_ConfigPostRequestMask+0x42>
9000b946:	bf00      	nop

9000b948 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b948:	2800      	cmp	r0, #0
9000b94a:	d06b      	beq.n	9000ba24 <HAL_MDMA_Start_IT+0xdc>
{
9000b94c:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000b94e:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000b952:	2c01      	cmp	r4, #1
9000b954:	d009      	beq.n	9000b96a <HAL_MDMA_Start_IT+0x22>
9000b956:	2401      	movs	r4, #1
9000b958:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b95c:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000b960:	2c01      	cmp	r4, #1
9000b962:	d005      	beq.n	9000b970 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000b964:	2300      	movs	r3, #0
9000b966:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000b96a:	2002      	movs	r0, #2
}
9000b96c:	bc70      	pop	{r4, r5, r6}
9000b96e:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b970:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b972:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b974:	4d2c      	ldr	r5, [pc, #176]	@ (9000ba28 <HAL_MDMA_Start_IT+0xe0>)
9000b976:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b97a:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b97e:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b980:	f106 3cff 	add.w	ip, r6, #4294967295	@ 0xffffffff
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b984:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b988:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000b98a:	6804      	ldr	r4, [r0, #0]
9000b98c:	68e6      	ldr	r6, [r4, #12]
9000b98e:	f026 0601 	bic.w	r6, r6, #1
9000b992:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b994:	6966      	ldr	r6, [r4, #20]
9000b996:	ea05 0506 	and.w	r5, r5, r6
9000b99a:	ea45 0503 	orr.w	r5, r5, r3
9000b99e:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b9a0:	6963      	ldr	r3, [r4, #20]
9000b9a2:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000b9a6:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000b9aa:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b9ac:	f04f 031f 	mov.w	r3, #31
9000b9b0:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000b9b2:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000b9b4:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000b9b6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b9b8:	bf0c      	ite	eq
9000b9ba:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b9be:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b9c2:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000b9c6:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b9c8:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000b9ca:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b9cc:	bf0c      	ite	eq
9000b9ce:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000b9d2:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000b9d6:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000b9d8:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b9da:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000b9dc:	68e3      	ldr	r3, [r4, #12]
9000b9de:	f043 0306 	orr.w	r3, r3, #6
9000b9e2:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000b9e4:	b11a      	cbz	r2, 9000b9ee <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000b9e6:	68e3      	ldr	r3, [r4, #12]
9000b9e8:	f043 0310 	orr.w	r3, r3, #16
9000b9ec:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b9ee:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000b9f0:	b11b      	cbz	r3, 9000b9fa <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000b9f2:	68e3      	ldr	r3, [r4, #12]
9000b9f4:	f043 0308 	orr.w	r3, r3, #8
9000b9f8:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000b9fa:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000b9fc:	b11b      	cbz	r3, 9000ba06 <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000b9fe:	68e3      	ldr	r3, [r4, #12]
9000ba00:	f043 0320 	orr.w	r3, r3, #32
9000ba04:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000ba06:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ba08:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000ba0a:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ba0e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000ba12:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ba14:	d103      	bne.n	9000ba1e <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000ba16:	68e3      	ldr	r3, [r4, #12]
9000ba18:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000ba1c:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000ba1e:	2000      	movs	r0, #0
}
9000ba20:	bc70      	pop	{r4, r5, r6}
9000ba22:	4770      	bx	lr
    return HAL_ERROR;
9000ba24:	2001      	movs	r0, #1
}
9000ba26:	4770      	bx	lr
9000ba28:	fffe0000 	.word	0xfffe0000

9000ba2c <HAL_MDMA_Abort>:
{
9000ba2c:	b538      	push	{r3, r4, r5, lr}
9000ba2e:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000ba30:	f7fc f984 	bl	90007d3c <HAL_GetTick>
  if(hmdma == NULL)
9000ba34:	b334      	cbz	r4, 9000ba84 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000ba36:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000ba3a:	2b02      	cmp	r3, #2
9000ba3c:	d11d      	bne.n	9000ba7a <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000ba3e:	6822      	ldr	r2, [r4, #0]
9000ba40:	4605      	mov	r5, r0
9000ba42:	68d3      	ldr	r3, [r2, #12]
9000ba44:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000ba48:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000ba4a:	68d3      	ldr	r3, [r2, #12]
9000ba4c:	f023 0301 	bic.w	r3, r3, #1
9000ba50:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000ba52:	e005      	b.n	9000ba60 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000ba54:	f7fc f972 	bl	90007d3c <HAL_GetTick>
9000ba58:	1b43      	subs	r3, r0, r5
9000ba5a:	2b05      	cmp	r3, #5
9000ba5c:	d814      	bhi.n	9000ba88 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000ba5e:	6822      	ldr	r2, [r4, #0]
9000ba60:	68d3      	ldr	r3, [r2, #12]
9000ba62:	f013 0301 	ands.w	r3, r3, #1
9000ba66:	d1f5      	bne.n	9000ba54 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000ba68:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000ba6a:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000ba6c:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000ba6e:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000ba70:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000ba74:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000ba78:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000ba7a:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000ba7c:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000ba7e:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000ba80:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000ba84:	2001      	movs	r0, #1
}
9000ba86:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000ba88:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000ba8a:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000ba8c:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000ba8e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000ba92:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000ba96:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000ba98:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000ba9c:	e7f2      	b.n	9000ba84 <HAL_MDMA_Abort+0x58>
9000ba9e:	bf00      	nop

9000baa0 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000baa0:	4603      	mov	r3, r0
9000baa2:	b128      	cbz	r0, 9000bab0 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000baa4:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000baa8:	2a02      	cmp	r2, #2
9000baaa:	d003      	beq.n	9000bab4 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000baac:	2280      	movs	r2, #128	@ 0x80
9000baae:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000bab0:	2001      	movs	r0, #1
9000bab2:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000bab4:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bab6:	2104      	movs	r1, #4
  return HAL_OK;
9000bab8:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000baba:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000babe:	68d3      	ldr	r3, [r2, #12]
9000bac0:	f023 0301 	bic.w	r3, r3, #1
9000bac4:	60d3      	str	r3, [r2, #12]
}
9000bac6:	4770      	bx	lr

9000bac8 <HAL_MDMA_IRQHandler>:
{
9000bac8:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000baca:	2300      	movs	r3, #0
{
9000bacc:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bace:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000bad2:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000bad4:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bad6:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000bad8:	4b57      	ldr	r3, [pc, #348]	@ (9000bc38 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bada:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000badc:	4a57      	ldr	r2, [pc, #348]	@ (9000bc3c <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000bade:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bae0:	6823      	ldr	r3, [r4, #0]
9000bae2:	441a      	add	r2, r3
9000bae4:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000bae8:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000baec:	4202      	tst	r2, r0
9000baee:	f000 80a0 	beq.w	9000bc32 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000baf2:	681a      	ldr	r2, [r3, #0]
9000baf4:	07d1      	lsls	r1, r2, #31
9000baf6:	d529      	bpl.n	9000bb4c <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000baf8:	68da      	ldr	r2, [r3, #12]
9000bafa:	0792      	lsls	r2, r2, #30
9000bafc:	d526      	bpl.n	9000bb4c <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000bafe:	68da      	ldr	r2, [r3, #12]
9000bb00:	f022 0202 	bic.w	r2, r2, #2
9000bb04:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000bb06:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bb08:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000bb0a:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bb0c:	bf54      	ite	pl
9000bb0e:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000bb12:	f041 0102 	orrmi.w	r1, r1, #2
9000bb16:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000bb18:	0591      	lsls	r1, r2, #22
9000bb1a:	d503      	bpl.n	9000bb24 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000bb1c:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bb1e:	f041 0104 	orr.w	r1, r1, #4
9000bb22:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000bb24:	05d0      	lsls	r0, r2, #23
9000bb26:	d503      	bpl.n	9000bb30 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000bb28:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bb2a:	f041 0108 	orr.w	r1, r1, #8
9000bb2e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000bb30:	0551      	lsls	r1, r2, #21
9000bb32:	d503      	bpl.n	9000bb3c <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000bb34:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bb36:	f041 0110 	orr.w	r1, r1, #16
9000bb3a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000bb3c:	0510      	lsls	r0, r2, #20
9000bb3e:	d503      	bpl.n	9000bb48 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000bb40:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000bb42:	f042 0220 	orr.w	r2, r2, #32
9000bb46:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000bb48:	2201      	movs	r2, #1
9000bb4a:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000bb4c:	681a      	ldr	r2, [r3, #0]
9000bb4e:	06d1      	lsls	r1, r2, #27
9000bb50:	d509      	bpl.n	9000bb66 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000bb52:	68da      	ldr	r2, [r3, #12]
9000bb54:	0692      	lsls	r2, r2, #26
9000bb56:	d506      	bpl.n	9000bb66 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000bb58:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000bb5a:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000bb5c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000bb5e:	b112      	cbz	r2, 9000bb66 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000bb60:	4620      	mov	r0, r4
9000bb62:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000bb64:	6823      	ldr	r3, [r4, #0]
9000bb66:	681a      	ldr	r2, [r3, #0]
9000bb68:	0710      	lsls	r0, r2, #28
9000bb6a:	d509      	bpl.n	9000bb80 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000bb6c:	68da      	ldr	r2, [r3, #12]
9000bb6e:	06d1      	lsls	r1, r2, #27
9000bb70:	d506      	bpl.n	9000bb80 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000bb72:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000bb74:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000bb76:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000bb78:	b112      	cbz	r2, 9000bb80 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000bb7a:	4620      	mov	r0, r4
9000bb7c:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000bb7e:	6823      	ldr	r3, [r4, #0]
9000bb80:	681a      	ldr	r2, [r3, #0]
9000bb82:	0752      	lsls	r2, r2, #29
9000bb84:	d509      	bpl.n	9000bb9a <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000bb86:	68da      	ldr	r2, [r3, #12]
9000bb88:	0710      	lsls	r0, r2, #28
9000bb8a:	d506      	bpl.n	9000bb9a <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000bb8c:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000bb8e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000bb90:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000bb92:	b112      	cbz	r2, 9000bb9a <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000bb94:	4620      	mov	r0, r4
9000bb96:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000bb98:	6823      	ldr	r3, [r4, #0]
9000bb9a:	681a      	ldr	r2, [r3, #0]
9000bb9c:	0791      	lsls	r1, r2, #30
9000bb9e:	d516      	bpl.n	9000bbce <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000bba0:	68da      	ldr	r2, [r3, #12]
9000bba2:	0752      	lsls	r2, r2, #29
9000bba4:	d513      	bpl.n	9000bbce <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000bba6:	68da      	ldr	r2, [r3, #12]
9000bba8:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000bbac:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000bbae:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000bbb2:	2a04      	cmp	r2, #4
9000bbb4:	d034      	beq.n	9000bc20 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000bbb6:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000bbb8:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000bbba:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000bbbc:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000bbbe:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000bbc0:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000bbc4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000bbc8:	b10b      	cbz	r3, 9000bbce <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000bbca:	4620      	mov	r0, r4
9000bbcc:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000bbce:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000bbd0:	2b00      	cmp	r3, #0
9000bbd2:	d02e      	beq.n	9000bc32 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000bbd4:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bbd6:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000bbd8:	4b19      	ldr	r3, [pc, #100]	@ (9000bc40 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bbda:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000bbde:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000bbe2:	68cb      	ldr	r3, [r1, #12]
9000bbe4:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000bbe8:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000bbea:	60cb      	str	r3, [r1, #12]
9000bbec:	e002      	b.n	9000bbf4 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000bbee:	68cb      	ldr	r3, [r1, #12]
9000bbf0:	07d8      	lsls	r0, r3, #31
9000bbf2:	d504      	bpl.n	9000bbfe <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000bbf4:	9b01      	ldr	r3, [sp, #4]
9000bbf6:	3301      	adds	r3, #1
9000bbf8:	4293      	cmp	r3, r2
9000bbfa:	9301      	str	r3, [sp, #4]
9000bbfc:	d9f7      	bls.n	9000bbee <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000bbfe:	2300      	movs	r3, #0
9000bc00:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000bc04:	68cb      	ldr	r3, [r1, #12]
9000bc06:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000bc08:	bf4c      	ite	mi
9000bc0a:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000bc0c:	2301      	movpl	r3, #1
9000bc0e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000bc12:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000bc14:	b16b      	cbz	r3, 9000bc32 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000bc16:	4620      	mov	r0, r4
}
9000bc18:	b003      	add	sp, #12
9000bc1a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000bc1e:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000bc20:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000bc22:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000bc24:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000bc26:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000bc2a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000bc2e:	2b00      	cmp	r3, #0
9000bc30:	d1f1      	bne.n	9000bc16 <HAL_MDMA_IRQHandler+0x14e>
}
9000bc32:	b003      	add	sp, #12
9000bc34:	bd30      	pop	{r4, r5, pc}
9000bc36:	bf00      	nop
9000bc38:	24000078 	.word	0x24000078
9000bc3c:	adffffc0 	.word	0xadffffc0
9000bc40:	1b4e81b5 	.word	0x1b4e81b5

9000bc44 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000bc44:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000bc46:	4c10      	ldr	r4, [pc, #64]	@ (9000bc88 <HAL_PWREx_ConfigSupply+0x44>)
9000bc48:	68e3      	ldr	r3, [r4, #12]
9000bc4a:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000bc4e:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000bc50:	d105      	bne.n	9000bc5e <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000bc52:	f003 0307 	and.w	r3, r3, #7
9000bc56:	1a18      	subs	r0, r3, r0
9000bc58:	bf18      	it	ne
9000bc5a:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000bc5c:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000bc5e:	f023 0307 	bic.w	r3, r3, #7
9000bc62:	4303      	orrs	r3, r0
9000bc64:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000bc66:	f7fc f869 	bl	90007d3c <HAL_GetTick>
9000bc6a:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bc6c:	e005      	b.n	9000bc7a <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000bc6e:	f7fc f865 	bl	90007d3c <HAL_GetTick>
9000bc72:	1b40      	subs	r0, r0, r5
9000bc74:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000bc78:	d804      	bhi.n	9000bc84 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bc7a:	6863      	ldr	r3, [r4, #4]
9000bc7c:	049b      	lsls	r3, r3, #18
9000bc7e:	d5f6      	bpl.n	9000bc6e <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000bc80:	2000      	movs	r0, #0
}
9000bc82:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000bc84:	2001      	movs	r0, #1
}
9000bc86:	bd38      	pop	{r3, r4, r5, pc}
9000bc88:	58024800 	.word	0x58024800

9000bc8c <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bc8c:	4b33      	ldr	r3, [pc, #204]	@ (9000bd5c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000bc8e:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bc90:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bc92:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bc94:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000bc96:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bc9a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bc9c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000bca0:	d036      	beq.n	9000bd10 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bca2:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bca6:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bcaa:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bcae:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bcb2:	fb05 f202 	mul.w	r2, r5, r2
9000bcb6:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bcb8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000bcbc:	ee06 2a90 	vmov	s13, r2
9000bcc0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000bcc4:	d002      	beq.n	9000bccc <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000bcc6:	2902      	cmp	r1, #2
9000bcc8:	d042      	beq.n	9000bd50 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000bcca:	b319      	cbz	r1, 9000bd14 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bccc:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000bd60 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000bcd0:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000bcd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000bcd6:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000bcda:	ee07 3a90 	vmov	s15, r3
9000bcde:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000bce2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bce6:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000bcea:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000bcee:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000bcf2:	4b1a      	ldr	r3, [pc, #104]	@ (9000bd5c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000bcf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000bcf6:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000bcfa:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000bcfc:	ee07 3a10 	vmov	s14, r3
9000bd00:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000bd04:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000bd08:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000bd0c:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000bd10:	bc30      	pop	{r4, r5}
9000bd12:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bd14:	681a      	ldr	r2, [r3, #0]
9000bd16:	0692      	lsls	r2, r2, #26
9000bd18:	d51d      	bpl.n	9000bd56 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd1a:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd1c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd20:	4a10      	ldr	r2, [pc, #64]	@ (9000bd64 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd24:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd28:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd2c:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd2e:	ee07 3a90 	vmov	s15, r3
9000bd32:	ee06 2a10 	vmov	s12, r2
9000bd36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bd3a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000bd3e:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000bd42:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000bd46:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000bd4a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000bd4e:	e7d0      	b.n	9000bcf2 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd50:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bd68 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000bd54:	e7bc      	b.n	9000bcd0 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd56:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bd6c <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000bd5a:	e7b9      	b.n	9000bcd0 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000bd5c:	58024400 	.word	0x58024400
9000bd60:	4a742400 	.word	0x4a742400
9000bd64:	03d09000 	.word	0x03d09000
9000bd68:	4bbebc20 	.word	0x4bbebc20
9000bd6c:	4c742400 	.word	0x4c742400

9000bd70 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000bd70:	2800      	cmp	r0, #0
9000bd72:	f000 82e9 	beq.w	9000c348 <HAL_RCC_OscConfig+0x5d8>
{
9000bd76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000bd78:	6803      	ldr	r3, [r0, #0]
9000bd7a:	4604      	mov	r4, r0
9000bd7c:	07d9      	lsls	r1, r3, #31
9000bd7e:	d52e      	bpl.n	9000bdde <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bd80:	4997      	ldr	r1, [pc, #604]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bd82:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bd84:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bd86:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000bd8a:	2a10      	cmp	r2, #16
9000bd8c:	f000 80ee 	beq.w	9000bf6c <HAL_RCC_OscConfig+0x1fc>
9000bd90:	2a18      	cmp	r2, #24
9000bd92:	f000 80e6 	beq.w	9000bf62 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bd96:	6863      	ldr	r3, [r4, #4]
9000bd98:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000bd9c:	f000 8111 	beq.w	9000bfc2 <HAL_RCC_OscConfig+0x252>
9000bda0:	2b00      	cmp	r3, #0
9000bda2:	f000 8167 	beq.w	9000c074 <HAL_RCC_OscConfig+0x304>
9000bda6:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000bdaa:	4b8d      	ldr	r3, [pc, #564]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bdac:	681a      	ldr	r2, [r3, #0]
9000bdae:	f000 828a 	beq.w	9000c2c6 <HAL_RCC_OscConfig+0x556>
9000bdb2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000bdb6:	601a      	str	r2, [r3, #0]
9000bdb8:	681a      	ldr	r2, [r3, #0]
9000bdba:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000bdbe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000bdc0:	f7fb ffbc 	bl	90007d3c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bdc4:	4e86      	ldr	r6, [pc, #536]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000bdc6:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bdc8:	e005      	b.n	9000bdd6 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000bdca:	f7fb ffb7 	bl	90007d3c <HAL_GetTick>
9000bdce:	1b40      	subs	r0, r0, r5
9000bdd0:	2864      	cmp	r0, #100	@ 0x64
9000bdd2:	f200 814d 	bhi.w	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bdd6:	6833      	ldr	r3, [r6, #0]
9000bdd8:	039b      	lsls	r3, r3, #14
9000bdda:	d5f6      	bpl.n	9000bdca <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000bddc:	6823      	ldr	r3, [r4, #0]
9000bdde:	079d      	lsls	r5, r3, #30
9000bde0:	d470      	bmi.n	9000bec4 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bde2:	06d9      	lsls	r1, r3, #27
9000bde4:	d533      	bpl.n	9000be4e <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bde6:	4a7e      	ldr	r2, [pc, #504]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bde8:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bdea:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bdec:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000bdf0:	2b08      	cmp	r3, #8
9000bdf2:	f000 80cb 	beq.w	9000bf8c <HAL_RCC_OscConfig+0x21c>
9000bdf6:	2b18      	cmp	r3, #24
9000bdf8:	f000 80c3 	beq.w	9000bf82 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000bdfc:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000bdfe:	4d78      	ldr	r5, [pc, #480]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000be00:	2b00      	cmp	r3, #0
9000be02:	f000 816f 	beq.w	9000c0e4 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000be06:	682b      	ldr	r3, [r5, #0]
9000be08:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000be0c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000be0e:	f7fb ff95 	bl	90007d3c <HAL_GetTick>
9000be12:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000be14:	e005      	b.n	9000be22 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000be16:	f7fb ff91 	bl	90007d3c <HAL_GetTick>
9000be1a:	1b80      	subs	r0, r0, r6
9000be1c:	2802      	cmp	r0, #2
9000be1e:	f200 8127 	bhi.w	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000be22:	682b      	ldr	r3, [r5, #0]
9000be24:	05db      	lsls	r3, r3, #23
9000be26:	d5f6      	bpl.n	9000be16 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000be28:	f7fb ff8e 	bl	90007d48 <HAL_GetREVID>
9000be2c:	f241 0303 	movw	r3, #4099	@ 0x1003
9000be30:	4298      	cmp	r0, r3
9000be32:	f200 8269 	bhi.w	9000c308 <HAL_RCC_OscConfig+0x598>
9000be36:	6a22      	ldr	r2, [r4, #32]
9000be38:	686b      	ldr	r3, [r5, #4]
9000be3a:	2a20      	cmp	r2, #32
9000be3c:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000be40:	bf0c      	ite	eq
9000be42:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000be46:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000be4a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000be4c:	6823      	ldr	r3, [r4, #0]
9000be4e:	071d      	lsls	r5, r3, #28
9000be50:	d516      	bpl.n	9000be80 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000be52:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000be54:	4d62      	ldr	r5, [pc, #392]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000be56:	2b00      	cmp	r3, #0
9000be58:	f000 8122 	beq.w	9000c0a0 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000be5c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000be5e:	f043 0301 	orr.w	r3, r3, #1
9000be62:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000be64:	f7fb ff6a 	bl	90007d3c <HAL_GetTick>
9000be68:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000be6a:	e005      	b.n	9000be78 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000be6c:	f7fb ff66 	bl	90007d3c <HAL_GetTick>
9000be70:	1b80      	subs	r0, r0, r6
9000be72:	2802      	cmp	r0, #2
9000be74:	f200 80fc 	bhi.w	9000c070 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000be78:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000be7a:	0798      	lsls	r0, r3, #30
9000be7c:	d5f6      	bpl.n	9000be6c <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000be7e:	6823      	ldr	r3, [r4, #0]
9000be80:	069a      	lsls	r2, r3, #26
9000be82:	d516      	bpl.n	9000beb2 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000be84:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000be86:	4d56      	ldr	r5, [pc, #344]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000be88:	2b00      	cmp	r3, #0
9000be8a:	f000 811a 	beq.w	9000c0c2 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000be8e:	682b      	ldr	r3, [r5, #0]
9000be90:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000be94:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000be96:	f7fb ff51 	bl	90007d3c <HAL_GetTick>
9000be9a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000be9c:	e005      	b.n	9000beaa <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000be9e:	f7fb ff4d 	bl	90007d3c <HAL_GetTick>
9000bea2:	1b80      	subs	r0, r0, r6
9000bea4:	2802      	cmp	r0, #2
9000bea6:	f200 80e3 	bhi.w	9000c070 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000beaa:	682b      	ldr	r3, [r5, #0]
9000beac:	049f      	lsls	r7, r3, #18
9000beae:	d5f6      	bpl.n	9000be9e <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000beb0:	6823      	ldr	r3, [r4, #0]
9000beb2:	0759      	lsls	r1, r3, #29
9000beb4:	f100 808b 	bmi.w	9000bfce <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000beb8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000beba:	2b00      	cmp	r3, #0
9000bebc:	f040 80bf 	bne.w	9000c03e <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000bec0:	2000      	movs	r0, #0
}
9000bec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bec4:	4a46      	ldr	r2, [pc, #280]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bec6:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bec8:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000beca:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000bece:	d12d      	bne.n	9000bf2c <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bed0:	4b43      	ldr	r3, [pc, #268]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bed2:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bed4:	681b      	ldr	r3, [r3, #0]
9000bed6:	0759      	lsls	r1, r3, #29
9000bed8:	d501      	bpl.n	9000bede <HAL_RCC_OscConfig+0x16e>
9000beda:	2a00      	cmp	r2, #0
9000bedc:	d04f      	beq.n	9000bf7e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bede:	4d40      	ldr	r5, [pc, #256]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bee0:	682b      	ldr	r3, [r5, #0]
9000bee2:	f023 0319 	bic.w	r3, r3, #25
9000bee6:	4313      	orrs	r3, r2
9000bee8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000beea:	f7fb ff27 	bl	90007d3c <HAL_GetTick>
9000beee:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bef0:	e005      	b.n	9000befe <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bef2:	f7fb ff23 	bl	90007d3c <HAL_GetTick>
9000bef6:	1b80      	subs	r0, r0, r6
9000bef8:	2802      	cmp	r0, #2
9000befa:	f200 80b9 	bhi.w	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000befe:	682b      	ldr	r3, [r5, #0]
9000bf00:	075b      	lsls	r3, r3, #29
9000bf02:	d5f6      	bpl.n	9000bef2 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000bf04:	f7fb ff20 	bl	90007d48 <HAL_GetREVID>
9000bf08:	f241 0303 	movw	r3, #4099	@ 0x1003
9000bf0c:	4298      	cmp	r0, r3
9000bf0e:	f200 8110 	bhi.w	9000c132 <HAL_RCC_OscConfig+0x3c2>
9000bf12:	6922      	ldr	r2, [r4, #16]
9000bf14:	686b      	ldr	r3, [r5, #4]
9000bf16:	2a40      	cmp	r2, #64	@ 0x40
9000bf18:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000bf1c:	bf0c      	ite	eq
9000bf1e:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000bf22:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000bf26:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bf28:	6823      	ldr	r3, [r4, #0]
9000bf2a:	e75a      	b.n	9000bde2 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bf2c:	2b18      	cmp	r3, #24
9000bf2e:	f000 80fc 	beq.w	9000c12a <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bf32:	4d2b      	ldr	r5, [pc, #172]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bf34:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bf36:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bf38:	2a00      	cmp	r2, #0
9000bf3a:	f000 80e5 	beq.w	9000c108 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bf3e:	f023 0319 	bic.w	r3, r3, #25
9000bf42:	4313      	orrs	r3, r2
9000bf44:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bf46:	f7fb fef9 	bl	90007d3c <HAL_GetTick>
9000bf4a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bf4c:	e005      	b.n	9000bf5a <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bf4e:	f7fb fef5 	bl	90007d3c <HAL_GetTick>
9000bf52:	1b80      	subs	r0, r0, r6
9000bf54:	2802      	cmp	r0, #2
9000bf56:	f200 808b 	bhi.w	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bf5a:	682b      	ldr	r3, [r5, #0]
9000bf5c:	075f      	lsls	r7, r3, #29
9000bf5e:	d5f6      	bpl.n	9000bf4e <HAL_RCC_OscConfig+0x1de>
9000bf60:	e7d0      	b.n	9000bf04 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000bf62:	f001 0103 	and.w	r1, r1, #3
9000bf66:	2902      	cmp	r1, #2
9000bf68:	f47f af15 	bne.w	9000bd96 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000bf6c:	4a1c      	ldr	r2, [pc, #112]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bf6e:	6812      	ldr	r2, [r2, #0]
9000bf70:	0392      	lsls	r2, r2, #14
9000bf72:	f57f af34 	bpl.w	9000bdde <HAL_RCC_OscConfig+0x6e>
9000bf76:	6862      	ldr	r2, [r4, #4]
9000bf78:	2a00      	cmp	r2, #0
9000bf7a:	f47f af30 	bne.w	9000bdde <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000bf7e:	2001      	movs	r0, #1
}
9000bf80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000bf82:	f002 0203 	and.w	r2, r2, #3
9000bf86:	2a01      	cmp	r2, #1
9000bf88:	f47f af38 	bne.w	9000bdfc <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000bf8c:	4b14      	ldr	r3, [pc, #80]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bf8e:	681b      	ldr	r3, [r3, #0]
9000bf90:	05da      	lsls	r2, r3, #23
9000bf92:	d502      	bpl.n	9000bf9a <HAL_RCC_OscConfig+0x22a>
9000bf94:	69e3      	ldr	r3, [r4, #28]
9000bf96:	2b80      	cmp	r3, #128	@ 0x80
9000bf98:	d1f1      	bne.n	9000bf7e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bf9a:	f7fb fed5 	bl	90007d48 <HAL_GetREVID>
9000bf9e:	f241 0303 	movw	r3, #4099	@ 0x1003
9000bfa2:	4298      	cmp	r0, r3
9000bfa4:	f200 80ce 	bhi.w	9000c144 <HAL_RCC_OscConfig+0x3d4>
9000bfa8:	6a22      	ldr	r2, [r4, #32]
9000bfaa:	2a20      	cmp	r2, #32
9000bfac:	f000 81bb 	beq.w	9000c326 <HAL_RCC_OscConfig+0x5b6>
9000bfb0:	490b      	ldr	r1, [pc, #44]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bfb2:	684b      	ldr	r3, [r1, #4]
9000bfb4:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000bfb8:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000bfbc:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bfbe:	6823      	ldr	r3, [r4, #0]
9000bfc0:	e745      	b.n	9000be4e <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bfc2:	4a07      	ldr	r2, [pc, #28]	@ (9000bfe0 <HAL_RCC_OscConfig+0x270>)
9000bfc4:	6813      	ldr	r3, [r2, #0]
9000bfc6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000bfca:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000bfcc:	e6f8      	b.n	9000bdc0 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000bfce:	4d05      	ldr	r5, [pc, #20]	@ (9000bfe4 <HAL_RCC_OscConfig+0x274>)
9000bfd0:	682b      	ldr	r3, [r5, #0]
9000bfd2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000bfd6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000bfd8:	f7fb feb0 	bl	90007d3c <HAL_GetTick>
9000bfdc:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bfde:	e008      	b.n	9000bff2 <HAL_RCC_OscConfig+0x282>
9000bfe0:	58024400 	.word	0x58024400
9000bfe4:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000bfe8:	f7fb fea8 	bl	90007d3c <HAL_GetTick>
9000bfec:	1b80      	subs	r0, r0, r6
9000bfee:	2864      	cmp	r0, #100	@ 0x64
9000bff0:	d83e      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bff2:	682b      	ldr	r3, [r5, #0]
9000bff4:	05da      	lsls	r2, r3, #23
9000bff6:	d5f7      	bpl.n	9000bfe8 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bff8:	68a3      	ldr	r3, [r4, #8]
9000bffa:	2b01      	cmp	r3, #1
9000bffc:	f000 818d 	beq.w	9000c31a <HAL_RCC_OscConfig+0x5aa>
9000c000:	2b00      	cmp	r3, #0
9000c002:	f000 8168 	beq.w	9000c2d6 <HAL_RCC_OscConfig+0x566>
9000c006:	2b05      	cmp	r3, #5
9000c008:	4b85      	ldr	r3, [pc, #532]	@ (9000c220 <HAL_RCC_OscConfig+0x4b0>)
9000c00a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000c00c:	f000 8194 	beq.w	9000c338 <HAL_RCC_OscConfig+0x5c8>
9000c010:	f022 0201 	bic.w	r2, r2, #1
9000c014:	671a      	str	r2, [r3, #112]	@ 0x70
9000c016:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000c018:	f022 0204 	bic.w	r2, r2, #4
9000c01c:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000c01e:	f7fb fe8d 	bl	90007d3c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c022:	4e7f      	ldr	r6, [pc, #508]	@ (9000c220 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c024:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000c028:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c02a:	e004      	b.n	9000c036 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c02c:	f7fb fe86 	bl	90007d3c <HAL_GetTick>
9000c030:	1b40      	subs	r0, r0, r5
9000c032:	42b8      	cmp	r0, r7
9000c034:	d81c      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c036:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000c038:	079b      	lsls	r3, r3, #30
9000c03a:	d5f7      	bpl.n	9000c02c <HAL_RCC_OscConfig+0x2bc>
9000c03c:	e73c      	b.n	9000beb8 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000c03e:	4d78      	ldr	r5, [pc, #480]	@ (9000c220 <HAL_RCC_OscConfig+0x4b0>)
9000c040:	692a      	ldr	r2, [r5, #16]
9000c042:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000c046:	2a18      	cmp	r2, #24
9000c048:	f000 80f0 	beq.w	9000c22c <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c04c:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000c04e:	682b      	ldr	r3, [r5, #0]
9000c050:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000c054:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c056:	d07f      	beq.n	9000c158 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000c058:	f7fb fe70 	bl	90007d3c <HAL_GetTick>
9000c05c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c05e:	682b      	ldr	r3, [r5, #0]
9000c060:	019b      	lsls	r3, r3, #6
9000c062:	f57f af2d 	bpl.w	9000bec0 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c066:	f7fb fe69 	bl	90007d3c <HAL_GetTick>
9000c06a:	1b00      	subs	r0, r0, r4
9000c06c:	2802      	cmp	r0, #2
9000c06e:	d9f6      	bls.n	9000c05e <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000c070:	2003      	movs	r0, #3
}
9000c072:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c074:	4d6a      	ldr	r5, [pc, #424]	@ (9000c220 <HAL_RCC_OscConfig+0x4b0>)
9000c076:	682b      	ldr	r3, [r5, #0]
9000c078:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000c07c:	602b      	str	r3, [r5, #0]
9000c07e:	682b      	ldr	r3, [r5, #0]
9000c080:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000c084:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c086:	f7fb fe59 	bl	90007d3c <HAL_GetTick>
9000c08a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c08c:	e004      	b.n	9000c098 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c08e:	f7fb fe55 	bl	90007d3c <HAL_GetTick>
9000c092:	1b80      	subs	r0, r0, r6
9000c094:	2864      	cmp	r0, #100	@ 0x64
9000c096:	d8eb      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c098:	682b      	ldr	r3, [r5, #0]
9000c09a:	039f      	lsls	r7, r3, #14
9000c09c:	d4f7      	bmi.n	9000c08e <HAL_RCC_OscConfig+0x31e>
9000c09e:	e69d      	b.n	9000bddc <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000c0a0:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c0a2:	f023 0301 	bic.w	r3, r3, #1
9000c0a6:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000c0a8:	f7fb fe48 	bl	90007d3c <HAL_GetTick>
9000c0ac:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c0ae:	e004      	b.n	9000c0ba <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c0b0:	f7fb fe44 	bl	90007d3c <HAL_GetTick>
9000c0b4:	1b80      	subs	r0, r0, r6
9000c0b6:	2802      	cmp	r0, #2
9000c0b8:	d8da      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c0ba:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c0bc:	0799      	lsls	r1, r3, #30
9000c0be:	d4f7      	bmi.n	9000c0b0 <HAL_RCC_OscConfig+0x340>
9000c0c0:	e6dd      	b.n	9000be7e <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000c0c2:	682b      	ldr	r3, [r5, #0]
9000c0c4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000c0c8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c0ca:	f7fb fe37 	bl	90007d3c <HAL_GetTick>
9000c0ce:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c0d0:	e004      	b.n	9000c0dc <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c0d2:	f7fb fe33 	bl	90007d3c <HAL_GetTick>
9000c0d6:	1b80      	subs	r0, r0, r6
9000c0d8:	2802      	cmp	r0, #2
9000c0da:	d8c9      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c0dc:	682b      	ldr	r3, [r5, #0]
9000c0de:	0498      	lsls	r0, r3, #18
9000c0e0:	d4f7      	bmi.n	9000c0d2 <HAL_RCC_OscConfig+0x362>
9000c0e2:	e6e5      	b.n	9000beb0 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000c0e4:	682b      	ldr	r3, [r5, #0]
9000c0e6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000c0ea:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c0ec:	f7fb fe26 	bl	90007d3c <HAL_GetTick>
9000c0f0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c0f2:	e004      	b.n	9000c0fe <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c0f4:	f7fb fe22 	bl	90007d3c <HAL_GetTick>
9000c0f8:	1b80      	subs	r0, r0, r6
9000c0fa:	2802      	cmp	r0, #2
9000c0fc:	d8b8      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c0fe:	682b      	ldr	r3, [r5, #0]
9000c100:	05df      	lsls	r7, r3, #23
9000c102:	d4f7      	bmi.n	9000c0f4 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c104:	6823      	ldr	r3, [r4, #0]
9000c106:	e6a2      	b.n	9000be4e <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000c108:	f023 0301 	bic.w	r3, r3, #1
9000c10c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c10e:	f7fb fe15 	bl	90007d3c <HAL_GetTick>
9000c112:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c114:	e004      	b.n	9000c120 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c116:	f7fb fe11 	bl	90007d3c <HAL_GetTick>
9000c11a:	1b80      	subs	r0, r0, r6
9000c11c:	2802      	cmp	r0, #2
9000c11e:	d8a7      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c120:	682b      	ldr	r3, [r5, #0]
9000c122:	0758      	lsls	r0, r3, #29
9000c124:	d4f7      	bmi.n	9000c116 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c126:	6823      	ldr	r3, [r4, #0]
9000c128:	e65b      	b.n	9000bde2 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c12a:	0790      	lsls	r0, r2, #30
9000c12c:	f47f af01 	bne.w	9000bf32 <HAL_RCC_OscConfig+0x1c2>
9000c130:	e6ce      	b.n	9000bed0 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c132:	686b      	ldr	r3, [r5, #4]
9000c134:	6922      	ldr	r2, [r4, #16]
9000c136:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000c13a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c13e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c140:	6823      	ldr	r3, [r4, #0]
9000c142:	e64e      	b.n	9000bde2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c144:	4a36      	ldr	r2, [pc, #216]	@ (9000c220 <HAL_RCC_OscConfig+0x4b0>)
9000c146:	6a21      	ldr	r1, [r4, #32]
9000c148:	68d3      	ldr	r3, [r2, #12]
9000c14a:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000c14e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000c152:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c154:	6823      	ldr	r3, [r4, #0]
9000c156:	e67a      	b.n	9000be4e <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000c158:	f7fb fdf0 	bl	90007d3c <HAL_GetTick>
9000c15c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c15e:	e004      	b.n	9000c16a <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c160:	f7fb fdec 	bl	90007d3c <HAL_GetTick>
9000c164:	1b80      	subs	r0, r0, r6
9000c166:	2802      	cmp	r0, #2
9000c168:	d882      	bhi.n	9000c070 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c16a:	682b      	ldr	r3, [r5, #0]
9000c16c:	0199      	lsls	r1, r3, #6
9000c16e:	d4f7      	bmi.n	9000c160 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c170:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000c172:	4b2c      	ldr	r3, [pc, #176]	@ (9000c224 <HAL_RCC_OscConfig+0x4b4>)
9000c174:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000c176:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c178:	492b      	ldr	r1, [pc, #172]	@ (9000c228 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c17a:	4e29      	ldr	r6, [pc, #164]	@ (9000c220 <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c17c:	4313      	orrs	r3, r2
9000c17e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c180:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000c184:	62ab      	str	r3, [r5, #40]	@ 0x28
9000c186:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000c18a:	3b01      	subs	r3, #1
9000c18c:	3a01      	subs	r2, #1
9000c18e:	025b      	lsls	r3, r3, #9
9000c190:	0412      	lsls	r2, r2, #16
9000c192:	b29b      	uxth	r3, r3
9000c194:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c198:	4313      	orrs	r3, r2
9000c19a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000c19c:	3a01      	subs	r2, #1
9000c19e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c1a2:	4313      	orrs	r3, r2
9000c1a4:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000c1a6:	3a01      	subs	r2, #1
9000c1a8:	0612      	lsls	r2, r2, #24
9000c1aa:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c1ae:	4313      	orrs	r3, r2
9000c1b0:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000c1b2:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c1b4:	f023 0301 	bic.w	r3, r3, #1
9000c1b8:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c1ba:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000c1bc:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000c1be:	4011      	ands	r1, r2
9000c1c0:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000c1c4:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000c1c6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c1c8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000c1ca:	f023 030c 	bic.w	r3, r3, #12
9000c1ce:	4313      	orrs	r3, r2
9000c1d0:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000c1d2:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c1d4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000c1d6:	f023 0302 	bic.w	r3, r3, #2
9000c1da:	4313      	orrs	r3, r2
9000c1dc:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000c1de:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c1e0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000c1e4:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c1e6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c1e8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000c1ec:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000c1ee:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c1f0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000c1f4:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000c1f6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c1f8:	f043 0301 	orr.w	r3, r3, #1
9000c1fc:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000c1fe:	682b      	ldr	r3, [r5, #0]
9000c200:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000c204:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c206:	f7fb fd99 	bl	90007d3c <HAL_GetTick>
9000c20a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c20c:	6833      	ldr	r3, [r6, #0]
9000c20e:	019a      	lsls	r2, r3, #6
9000c210:	f53f ae56 	bmi.w	9000bec0 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c214:	f7fb fd92 	bl	90007d3c <HAL_GetTick>
9000c218:	1b00      	subs	r0, r0, r4
9000c21a:	2802      	cmp	r0, #2
9000c21c:	d9f6      	bls.n	9000c20c <HAL_RCC_OscConfig+0x49c>
9000c21e:	e727      	b.n	9000c070 <HAL_RCC_OscConfig+0x300>
9000c220:	58024400 	.word	0x58024400
9000c224:	fffffc0c 	.word	0xfffffc0c
9000c228:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c22c:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000c22e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000c230:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c232:	f43f aea4 	beq.w	9000bf7e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c236:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c23a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000c23c:	428b      	cmp	r3, r1
9000c23e:	f47f ae9e 	bne.w	9000bf7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c242:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c246:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c248:	429a      	cmp	r2, r3
9000c24a:	f47f ae98 	bne.w	9000bf7e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c24e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000c250:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000c254:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c256:	429a      	cmp	r2, r3
9000c258:	f47f ae91 	bne.w	9000bf7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c25c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000c25e:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000c262:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c264:	429a      	cmp	r2, r3
9000c266:	f47f ae8a 	bne.w	9000bf7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c26a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000c26c:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000c270:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c272:	429a      	cmp	r2, r3
9000c274:	f47f ae83 	bne.w	9000bf7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000c278:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000c27a:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000c27e:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c280:	4298      	cmp	r0, r3
9000c282:	f47f ae7c 	bne.w	9000bf7e <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c286:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c288:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c28a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c28e:	429a      	cmp	r2, r3
9000c290:	f43f ae16 	beq.w	9000bec0 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000c294:	4a2d      	ldr	r2, [pc, #180]	@ (9000c34c <HAL_RCC_OscConfig+0x5dc>)
9000c296:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000c298:	f023 0301 	bic.w	r3, r3, #1
9000c29c:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000c29e:	f7fb fd4d 	bl	90007d3c <HAL_GetTick>
9000c2a2:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000c2a4:	f7fb fd4a 	bl	90007d3c <HAL_GetTick>
9000c2a8:	42a8      	cmp	r0, r5
9000c2aa:	d0fb      	beq.n	9000c2a4 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c2ac:	4a27      	ldr	r2, [pc, #156]	@ (9000c34c <HAL_RCC_OscConfig+0x5dc>)
9000c2ae:	4b28      	ldr	r3, [pc, #160]	@ (9000c350 <HAL_RCC_OscConfig+0x5e0>)
9000c2b0:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000c2b2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000c2b4:	4003      	ands	r3, r0
9000c2b6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000c2ba:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000c2bc:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000c2be:	f043 0301 	orr.w	r3, r3, #1
9000c2c2:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000c2c4:	e5fc      	b.n	9000bec0 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c2c6:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000c2ca:	601a      	str	r2, [r3, #0]
9000c2cc:	681a      	ldr	r2, [r3, #0]
9000c2ce:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000c2d2:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000c2d4:	e574      	b.n	9000bdc0 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c2d6:	4d1d      	ldr	r5, [pc, #116]	@ (9000c34c <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c2d8:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c2dc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c2de:	f023 0301 	bic.w	r3, r3, #1
9000c2e2:	672b      	str	r3, [r5, #112]	@ 0x70
9000c2e4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c2e6:	f023 0304 	bic.w	r3, r3, #4
9000c2ea:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000c2ec:	f7fb fd26 	bl	90007d3c <HAL_GetTick>
9000c2f0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c2f2:	e005      	b.n	9000c300 <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c2f4:	f7fb fd22 	bl	90007d3c <HAL_GetTick>
9000c2f8:	1b80      	subs	r0, r0, r6
9000c2fa:	42b8      	cmp	r0, r7
9000c2fc:	f63f aeb8 	bhi.w	9000c070 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c300:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c302:	0798      	lsls	r0, r3, #30
9000c304:	d4f6      	bmi.n	9000c2f4 <HAL_RCC_OscConfig+0x584>
9000c306:	e5d7      	b.n	9000beb8 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c308:	68eb      	ldr	r3, [r5, #12]
9000c30a:	6a22      	ldr	r2, [r4, #32]
9000c30c:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000c310:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c314:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c316:	6823      	ldr	r3, [r4, #0]
9000c318:	e599      	b.n	9000be4e <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c31a:	4a0c      	ldr	r2, [pc, #48]	@ (9000c34c <HAL_RCC_OscConfig+0x5dc>)
9000c31c:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000c31e:	f043 0301 	orr.w	r3, r3, #1
9000c322:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c324:	e67b      	b.n	9000c01e <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c326:	4a09      	ldr	r2, [pc, #36]	@ (9000c34c <HAL_RCC_OscConfig+0x5dc>)
9000c328:	6853      	ldr	r3, [r2, #4]
9000c32a:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000c32e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000c332:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c334:	6823      	ldr	r3, [r4, #0]
9000c336:	e58a      	b.n	9000be4e <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c338:	f042 0204 	orr.w	r2, r2, #4
9000c33c:	671a      	str	r2, [r3, #112]	@ 0x70
9000c33e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000c340:	f042 0201 	orr.w	r2, r2, #1
9000c344:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c346:	e66a      	b.n	9000c01e <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000c348:	2001      	movs	r0, #1
}
9000c34a:	4770      	bx	lr
9000c34c:	58024400 	.word	0x58024400
9000c350:	ffff0007 	.word	0xffff0007

9000c354 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c354:	4a3f      	ldr	r2, [pc, #252]	@ (9000c454 <HAL_RCC_GetSysClockFreq+0x100>)
9000c356:	6913      	ldr	r3, [r2, #16]
9000c358:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c35c:	2b10      	cmp	r3, #16
9000c35e:	d004      	beq.n	9000c36a <HAL_RCC_GetSysClockFreq+0x16>
9000c360:	2b18      	cmp	r3, #24
9000c362:	d00d      	beq.n	9000c380 <HAL_RCC_GetSysClockFreq+0x2c>
9000c364:	b11b      	cbz	r3, 9000c36e <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000c366:	483c      	ldr	r0, [pc, #240]	@ (9000c458 <HAL_RCC_GetSysClockFreq+0x104>)
9000c368:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c36a:	483c      	ldr	r0, [pc, #240]	@ (9000c45c <HAL_RCC_GetSysClockFreq+0x108>)
9000c36c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c36e:	6813      	ldr	r3, [r2, #0]
9000c370:	0699      	lsls	r1, r3, #26
9000c372:	d548      	bpl.n	9000c406 <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c374:	6813      	ldr	r3, [r2, #0]
9000c376:	483a      	ldr	r0, [pc, #232]	@ (9000c460 <HAL_RCC_GetSysClockFreq+0x10c>)
9000c378:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c37c:	40d8      	lsrs	r0, r3
9000c37e:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c380:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000c382:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c384:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c386:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000c388:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c38c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c38e:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c392:	d036      	beq.n	9000c402 <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c394:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c398:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c39c:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c3a0:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c3a4:	fb05 f303 	mul.w	r3, r5, r3
9000c3a8:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c3aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c3ae:	ee06 3a90 	vmov	s13, r3
9000c3b2:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000c3b6:	d002      	beq.n	9000c3be <HAL_RCC_GetSysClockFreq+0x6a>
9000c3b8:	2902      	cmp	r1, #2
9000c3ba:	d026      	beq.n	9000c40a <HAL_RCC_GetSysClockFreq+0xb6>
9000c3bc:	b341      	cbz	r1, 9000c410 <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c3be:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000c464 <HAL_RCC_GetSysClockFreq+0x110>
9000c3c2:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000c3c6:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000c3c8:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c3cc:	ee07 3a10 	vmov	s14, r3
9000c3d0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c3d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c3d8:	ee37 7a26 	vadd.f32	s14, s14, s13
9000c3dc:	ee37 7a25 	vadd.f32	s14, s14, s11
9000c3e0:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c3e4:	4b1b      	ldr	r3, [pc, #108]	@ (9000c454 <HAL_RCC_GetSysClockFreq+0x100>)
9000c3e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000c3e8:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c3ec:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c3ee:	ee07 3a90 	vmov	s15, r3
9000c3f2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000c3f6:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000c3fa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c3fe:	ee17 0a90 	vmov	r0, s15
}
9000c402:	bc30      	pop	{r4, r5}
9000c404:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c406:	4816      	ldr	r0, [pc, #88]	@ (9000c460 <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000c408:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c40a:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000c468 <HAL_RCC_GetSysClockFreq+0x114>
9000c40e:	e7d8      	b.n	9000c3c2 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c410:	6813      	ldr	r3, [r2, #0]
9000c412:	069b      	lsls	r3, r3, #26
9000c414:	d51a      	bpl.n	9000c44c <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c416:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c418:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c41c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c41e:	4910      	ldr	r1, [pc, #64]	@ (9000c460 <HAL_RCC_GetSysClockFreq+0x10c>)
9000c420:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c424:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c428:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c42a:	ee07 3a10 	vmov	s14, r3
9000c42e:	ee06 1a10 	vmov	s12, r1
9000c432:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c436:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c43a:	ee77 6a26 	vadd.f32	s13, s14, s13
9000c43e:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c442:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000c446:	ee27 7a27 	vmul.f32	s14, s14, s15
9000c44a:	e7cb      	b.n	9000c3e4 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c44c:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000c46c <HAL_RCC_GetSysClockFreq+0x118>
9000c450:	e7b7      	b.n	9000c3c2 <HAL_RCC_GetSysClockFreq+0x6e>
9000c452:	bf00      	nop
9000c454:	58024400 	.word	0x58024400
9000c458:	003d0900 	.word	0x003d0900
9000c45c:	017d7840 	.word	0x017d7840
9000c460:	03d09000 	.word	0x03d09000
9000c464:	4a742400 	.word	0x4a742400
9000c468:	4bbebc20 	.word	0x4bbebc20
9000c46c:	4c742400 	.word	0x4c742400

9000c470 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000c470:	2800      	cmp	r0, #0
9000c472:	f000 810e 	beq.w	9000c692 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c476:	4a8d      	ldr	r2, [pc, #564]	@ (9000c6ac <HAL_RCC_ClockConfig+0x23c>)
9000c478:	6813      	ldr	r3, [r2, #0]
9000c47a:	f003 030f 	and.w	r3, r3, #15
9000c47e:	428b      	cmp	r3, r1
{
9000c480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c484:	4604      	mov	r4, r0
9000c486:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c488:	d20c      	bcs.n	9000c4a4 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c48a:	6813      	ldr	r3, [r2, #0]
9000c48c:	f023 030f 	bic.w	r3, r3, #15
9000c490:	430b      	orrs	r3, r1
9000c492:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c494:	6813      	ldr	r3, [r2, #0]
9000c496:	f003 030f 	and.w	r3, r3, #15
9000c49a:	428b      	cmp	r3, r1
9000c49c:	d002      	beq.n	9000c4a4 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000c49e:	2001      	movs	r0, #1
}
9000c4a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c4a4:	6823      	ldr	r3, [r4, #0]
9000c4a6:	0758      	lsls	r0, r3, #29
9000c4a8:	d50b      	bpl.n	9000c4c2 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c4aa:	4981      	ldr	r1, [pc, #516]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c4ac:	6920      	ldr	r0, [r4, #16]
9000c4ae:	698a      	ldr	r2, [r1, #24]
9000c4b0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c4b4:	4290      	cmp	r0, r2
9000c4b6:	d904      	bls.n	9000c4c2 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c4b8:	698a      	ldr	r2, [r1, #24]
9000c4ba:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c4be:	4302      	orrs	r2, r0
9000c4c0:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c4c2:	0719      	lsls	r1, r3, #28
9000c4c4:	d50b      	bpl.n	9000c4de <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c4c6:	497a      	ldr	r1, [pc, #488]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c4c8:	6960      	ldr	r0, [r4, #20]
9000c4ca:	69ca      	ldr	r2, [r1, #28]
9000c4cc:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c4d0:	4290      	cmp	r0, r2
9000c4d2:	d904      	bls.n	9000c4de <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c4d4:	69ca      	ldr	r2, [r1, #28]
9000c4d6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c4da:	4302      	orrs	r2, r0
9000c4dc:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c4de:	06da      	lsls	r2, r3, #27
9000c4e0:	d50b      	bpl.n	9000c4fa <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c4e2:	4973      	ldr	r1, [pc, #460]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c4e4:	69a0      	ldr	r0, [r4, #24]
9000c4e6:	69ca      	ldr	r2, [r1, #28]
9000c4e8:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c4ec:	4290      	cmp	r0, r2
9000c4ee:	d904      	bls.n	9000c4fa <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c4f0:	69ca      	ldr	r2, [r1, #28]
9000c4f2:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000c4f6:	4302      	orrs	r2, r0
9000c4f8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c4fa:	069f      	lsls	r7, r3, #26
9000c4fc:	d50b      	bpl.n	9000c516 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c4fe:	496c      	ldr	r1, [pc, #432]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c500:	69e0      	ldr	r0, [r4, #28]
9000c502:	6a0a      	ldr	r2, [r1, #32]
9000c504:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c508:	4290      	cmp	r0, r2
9000c50a:	d904      	bls.n	9000c516 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c50c:	6a0a      	ldr	r2, [r1, #32]
9000c50e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c512:	4302      	orrs	r2, r0
9000c514:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c516:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c518:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c51c:	f140 80ab 	bpl.w	9000c676 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c520:	4e63      	ldr	r6, [pc, #396]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c522:	68e0      	ldr	r0, [r4, #12]
9000c524:	69b1      	ldr	r1, [r6, #24]
9000c526:	f001 010f 	and.w	r1, r1, #15
9000c52a:	4288      	cmp	r0, r1
9000c52c:	d904      	bls.n	9000c538 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c52e:	69b1      	ldr	r1, [r6, #24]
9000c530:	f021 010f 	bic.w	r1, r1, #15
9000c534:	4301      	orrs	r1, r0
9000c536:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c538:	2a00      	cmp	r2, #0
9000c53a:	d030      	beq.n	9000c59e <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000c53c:	4a5c      	ldr	r2, [pc, #368]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c53e:	68a1      	ldr	r1, [r4, #8]
9000c540:	6993      	ldr	r3, [r2, #24]
9000c542:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000c546:	430b      	orrs	r3, r1
9000c548:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c54a:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c54c:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c54e:	2902      	cmp	r1, #2
9000c550:	f000 80a1 	beq.w	9000c696 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000c554:	2903      	cmp	r1, #3
9000c556:	f000 8098 	beq.w	9000c68a <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000c55a:	2901      	cmp	r1, #1
9000c55c:	f000 80a1 	beq.w	9000c6a2 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c560:	075f      	lsls	r7, r3, #29
9000c562:	d59c      	bpl.n	9000c49e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c564:	4e52      	ldr	r6, [pc, #328]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c566:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c56a:	6933      	ldr	r3, [r6, #16]
9000c56c:	f023 0307 	bic.w	r3, r3, #7
9000c570:	430b      	orrs	r3, r1
9000c572:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000c574:	f7fb fbe2 	bl	90007d3c <HAL_GetTick>
9000c578:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c57a:	e005      	b.n	9000c588 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c57c:	f7fb fbde 	bl	90007d3c <HAL_GetTick>
9000c580:	1bc0      	subs	r0, r0, r7
9000c582:	4540      	cmp	r0, r8
9000c584:	f200 808b 	bhi.w	9000c69e <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c588:	6933      	ldr	r3, [r6, #16]
9000c58a:	6862      	ldr	r2, [r4, #4]
9000c58c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c590:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000c594:	d1f2      	bne.n	9000c57c <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c596:	6823      	ldr	r3, [r4, #0]
9000c598:	079e      	lsls	r6, r3, #30
9000c59a:	d506      	bpl.n	9000c5aa <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c59c:	68e0      	ldr	r0, [r4, #12]
9000c59e:	4944      	ldr	r1, [pc, #272]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c5a0:	698a      	ldr	r2, [r1, #24]
9000c5a2:	f002 020f 	and.w	r2, r2, #15
9000c5a6:	4282      	cmp	r2, r0
9000c5a8:	d869      	bhi.n	9000c67e <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000c5aa:	4940      	ldr	r1, [pc, #256]	@ (9000c6ac <HAL_RCC_ClockConfig+0x23c>)
9000c5ac:	680a      	ldr	r2, [r1, #0]
9000c5ae:	f002 020f 	and.w	r2, r2, #15
9000c5b2:	42aa      	cmp	r2, r5
9000c5b4:	d90a      	bls.n	9000c5cc <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c5b6:	680a      	ldr	r2, [r1, #0]
9000c5b8:	f022 020f 	bic.w	r2, r2, #15
9000c5bc:	432a      	orrs	r2, r5
9000c5be:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c5c0:	680a      	ldr	r2, [r1, #0]
9000c5c2:	f002 020f 	and.w	r2, r2, #15
9000c5c6:	42aa      	cmp	r2, r5
9000c5c8:	f47f af69 	bne.w	9000c49e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c5cc:	0758      	lsls	r0, r3, #29
9000c5ce:	d50b      	bpl.n	9000c5e8 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c5d0:	4937      	ldr	r1, [pc, #220]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c5d2:	6920      	ldr	r0, [r4, #16]
9000c5d4:	698a      	ldr	r2, [r1, #24]
9000c5d6:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c5da:	4290      	cmp	r0, r2
9000c5dc:	d204      	bcs.n	9000c5e8 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c5de:	698a      	ldr	r2, [r1, #24]
9000c5e0:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c5e4:	4302      	orrs	r2, r0
9000c5e6:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c5e8:	0719      	lsls	r1, r3, #28
9000c5ea:	d50b      	bpl.n	9000c604 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c5ec:	4930      	ldr	r1, [pc, #192]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c5ee:	6960      	ldr	r0, [r4, #20]
9000c5f0:	69ca      	ldr	r2, [r1, #28]
9000c5f2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c5f6:	4290      	cmp	r0, r2
9000c5f8:	d204      	bcs.n	9000c604 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c5fa:	69ca      	ldr	r2, [r1, #28]
9000c5fc:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c600:	4302      	orrs	r2, r0
9000c602:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c604:	06da      	lsls	r2, r3, #27
9000c606:	d50b      	bpl.n	9000c620 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c608:	4929      	ldr	r1, [pc, #164]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c60a:	69a0      	ldr	r0, [r4, #24]
9000c60c:	69ca      	ldr	r2, [r1, #28]
9000c60e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c612:	4290      	cmp	r0, r2
9000c614:	d204      	bcs.n	9000c620 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c616:	69ca      	ldr	r2, [r1, #28]
9000c618:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000c61c:	4302      	orrs	r2, r0
9000c61e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c620:	069b      	lsls	r3, r3, #26
9000c622:	d50b      	bpl.n	9000c63c <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c624:	4a22      	ldr	r2, [pc, #136]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c626:	69e1      	ldr	r1, [r4, #28]
9000c628:	6a13      	ldr	r3, [r2, #32]
9000c62a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000c62e:	4299      	cmp	r1, r3
9000c630:	d204      	bcs.n	9000c63c <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c632:	6a13      	ldr	r3, [r2, #32]
9000c634:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000c638:	430b      	orrs	r3, r1
9000c63a:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c63c:	f7ff fe8a 	bl	9000c354 <HAL_RCC_GetSysClockFreq>
9000c640:	4a1b      	ldr	r2, [pc, #108]	@ (9000c6b0 <HAL_RCC_ClockConfig+0x240>)
9000c642:	4603      	mov	r3, r0
9000c644:	481b      	ldr	r0, [pc, #108]	@ (9000c6b4 <HAL_RCC_ClockConfig+0x244>)
9000c646:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c648:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c64a:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000c64e:	4d1a      	ldr	r5, [pc, #104]	@ (9000c6b8 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c650:	f002 020f 	and.w	r2, r2, #15
9000c654:	4c19      	ldr	r4, [pc, #100]	@ (9000c6bc <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c656:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c658:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c65a:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000c65e:	4818      	ldr	r0, [pc, #96]	@ (9000c6c0 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c660:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c664:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000c666:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000c668:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c66a:	40d3      	lsrs	r3, r2
9000c66c:	6023      	str	r3, [r4, #0]
}
9000c66e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000c672:	f7f8 ba01 	b.w	90004a78 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c676:	2a00      	cmp	r2, #0
9000c678:	f47f af60 	bne.w	9000c53c <HAL_RCC_ClockConfig+0xcc>
9000c67c:	e795      	b.n	9000c5aa <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c67e:	698a      	ldr	r2, [r1, #24]
9000c680:	f022 020f 	bic.w	r2, r2, #15
9000c684:	4302      	orrs	r2, r0
9000c686:	618a      	str	r2, [r1, #24]
9000c688:	e78f      	b.n	9000c5aa <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c68a:	019a      	lsls	r2, r3, #6
9000c68c:	f53f af6a 	bmi.w	9000c564 <HAL_RCC_ClockConfig+0xf4>
9000c690:	e705      	b.n	9000c49e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000c692:	2001      	movs	r0, #1
}
9000c694:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c696:	0398      	lsls	r0, r3, #14
9000c698:	f53f af64 	bmi.w	9000c564 <HAL_RCC_ClockConfig+0xf4>
9000c69c:	e6ff      	b.n	9000c49e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000c69e:	2003      	movs	r0, #3
9000c6a0:	e6fe      	b.n	9000c4a0 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c6a2:	05db      	lsls	r3, r3, #23
9000c6a4:	f53f af5e 	bmi.w	9000c564 <HAL_RCC_ClockConfig+0xf4>
9000c6a8:	e6f9      	b.n	9000c49e <HAL_RCC_ClockConfig+0x2e>
9000c6aa:	bf00      	nop
9000c6ac:	52002000 	.word	0x52002000
9000c6b0:	58024400 	.word	0x58024400
9000c6b4:	9002df9c 	.word	0x9002df9c
9000c6b8:	24000078 	.word	0x24000078
9000c6bc:	24000074 	.word	0x24000074
9000c6c0:	24000080 	.word	0x24000080

9000c6c4 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c6c4:	4a18      	ldr	r2, [pc, #96]	@ (9000c728 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000c6c6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c6c8:	6913      	ldr	r3, [r2, #16]
9000c6ca:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c6ce:	2b10      	cmp	r3, #16
9000c6d0:	d019      	beq.n	9000c706 <HAL_RCC_GetHCLKFreq+0x42>
9000c6d2:	2b18      	cmp	r3, #24
9000c6d4:	d022      	beq.n	9000c71c <HAL_RCC_GetHCLKFreq+0x58>
9000c6d6:	b1c3      	cbz	r3, 9000c70a <HAL_RCC_GetHCLKFreq+0x46>
      sysclockfreq = CSI_VALUE;
9000c6d8:	4b14      	ldr	r3, [pc, #80]	@ (9000c72c <HAL_RCC_GetHCLKFreq+0x68>)
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c6da:	4913      	ldr	r1, [pc, #76]	@ (9000c728 <HAL_RCC_GetHCLKFreq+0x64>)
9000c6dc:	4814      	ldr	r0, [pc, #80]	@ (9000c730 <HAL_RCC_GetHCLKFreq+0x6c>)
9000c6de:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6e0:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c6e2:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6e6:	4c13      	ldr	r4, [pc, #76]	@ (9000c734 <HAL_RCC_GetHCLKFreq+0x70>)
9000c6e8:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000c6ec:	4d12      	ldr	r5, [pc, #72]	@ (9000c738 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c6ee:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6f0:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c6f2:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6f6:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c6fa:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6fc:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000c700:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c702:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000c704:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c706:	4b0d      	ldr	r3, [pc, #52]	@ (9000c73c <HAL_RCC_GetHCLKFreq+0x78>)
9000c708:	e7e7      	b.n	9000c6da <HAL_RCC_GetHCLKFreq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c70a:	6813      	ldr	r3, [r2, #0]
9000c70c:	069b      	lsls	r3, r3, #26
9000c70e:	d509      	bpl.n	9000c724 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c710:	6812      	ldr	r2, [r2, #0]
9000c712:	4b0b      	ldr	r3, [pc, #44]	@ (9000c740 <HAL_RCC_GetHCLKFreq+0x7c>)
9000c714:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c718:	40d3      	lsrs	r3, r2
9000c71a:	e7de      	b.n	9000c6da <HAL_RCC_GetHCLKFreq+0x16>
9000c71c:	f7ff fab6 	bl	9000bc8c <HAL_RCC_GetSysClockFreq.part.0>
9000c720:	4603      	mov	r3, r0
9000c722:	e7da      	b.n	9000c6da <HAL_RCC_GetHCLKFreq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c724:	4b06      	ldr	r3, [pc, #24]	@ (9000c740 <HAL_RCC_GetHCLKFreq+0x7c>)
9000c726:	e7d8      	b.n	9000c6da <HAL_RCC_GetHCLKFreq+0x16>
9000c728:	58024400 	.word	0x58024400
9000c72c:	003d0900 	.word	0x003d0900
9000c730:	9002df9c 	.word	0x9002df9c
9000c734:	24000074 	.word	0x24000074
9000c738:	24000078 	.word	0x24000078
9000c73c:	017d7840 	.word	0x017d7840
9000c740:	03d09000 	.word	0x03d09000

9000c744 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c744:	4a1c      	ldr	r2, [pc, #112]	@ (9000c7b8 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000c746:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c748:	6913      	ldr	r3, [r2, #16]
9000c74a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c74e:	2b10      	cmp	r3, #16
9000c750:	d020      	beq.n	9000c794 <HAL_RCC_GetPCLK1Freq+0x50>
9000c752:	2b18      	cmp	r3, #24
9000c754:	d029      	beq.n	9000c7aa <HAL_RCC_GetPCLK1Freq+0x66>
9000c756:	b1fb      	cbz	r3, 9000c798 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000c758:	4b18      	ldr	r3, [pc, #96]	@ (9000c7bc <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c75a:	4a17      	ldr	r2, [pc, #92]	@ (9000c7b8 <HAL_RCC_GetPCLK1Freq+0x74>)
9000c75c:	4918      	ldr	r1, [pc, #96]	@ (9000c7c0 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000c75e:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c760:	4d18      	ldr	r5, [pc, #96]	@ (9000c7c4 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c762:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c766:	4c18      	ldr	r4, [pc, #96]	@ (9000c7c8 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c768:	5c08      	ldrb	r0, [r1, r0]
9000c76a:	f000 001f 	and.w	r0, r0, #31
9000c76e:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c770:	6990      	ldr	r0, [r2, #24]
9000c772:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c776:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c778:	5c08      	ldrb	r0, [r1, r0]
9000c77a:	f000 001f 	and.w	r0, r0, #31
9000c77e:	40c3      	lsrs	r3, r0
9000c780:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000c782:	69d2      	ldr	r2, [r2, #28]
9000c784:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000c788:	5c88      	ldrb	r0, [r1, r2]
9000c78a:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000c78e:	fa23 f000 	lsr.w	r0, r3, r0
9000c792:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c794:	4b0d      	ldr	r3, [pc, #52]	@ (9000c7cc <HAL_RCC_GetPCLK1Freq+0x88>)
9000c796:	e7e0      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c798:	6813      	ldr	r3, [r2, #0]
9000c79a:	069b      	lsls	r3, r3, #26
9000c79c:	d509      	bpl.n	9000c7b2 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c79e:	6812      	ldr	r2, [r2, #0]
9000c7a0:	4b0b      	ldr	r3, [pc, #44]	@ (9000c7d0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c7a2:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c7a6:	40d3      	lsrs	r3, r2
9000c7a8:	e7d7      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
9000c7aa:	f7ff fa6f 	bl	9000bc8c <HAL_RCC_GetSysClockFreq.part.0>
9000c7ae:	4603      	mov	r3, r0
9000c7b0:	e7d3      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c7b2:	4b07      	ldr	r3, [pc, #28]	@ (9000c7d0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c7b4:	e7d1      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
9000c7b6:	bf00      	nop
9000c7b8:	58024400 	.word	0x58024400
9000c7bc:	003d0900 	.word	0x003d0900
9000c7c0:	9002df9c 	.word	0x9002df9c
9000c7c4:	24000078 	.word	0x24000078
9000c7c8:	24000074 	.word	0x24000074
9000c7cc:	017d7840 	.word	0x017d7840
9000c7d0:	03d09000 	.word	0x03d09000

9000c7d4 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c7d4:	4a1c      	ldr	r2, [pc, #112]	@ (9000c848 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000c7d6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c7d8:	6913      	ldr	r3, [r2, #16]
9000c7da:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c7de:	2b10      	cmp	r3, #16
9000c7e0:	d020      	beq.n	9000c824 <HAL_RCC_GetPCLK2Freq+0x50>
9000c7e2:	2b18      	cmp	r3, #24
9000c7e4:	d029      	beq.n	9000c83a <HAL_RCC_GetPCLK2Freq+0x66>
9000c7e6:	b1fb      	cbz	r3, 9000c828 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000c7e8:	4b18      	ldr	r3, [pc, #96]	@ (9000c84c <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c7ea:	4a17      	ldr	r2, [pc, #92]	@ (9000c848 <HAL_RCC_GetPCLK2Freq+0x74>)
9000c7ec:	4918      	ldr	r1, [pc, #96]	@ (9000c850 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000c7ee:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c7f0:	4d18      	ldr	r5, [pc, #96]	@ (9000c854 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c7f2:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c7f6:	4c18      	ldr	r4, [pc, #96]	@ (9000c858 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c7f8:	5c08      	ldrb	r0, [r1, r0]
9000c7fa:	f000 001f 	and.w	r0, r0, #31
9000c7fe:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c800:	6990      	ldr	r0, [r2, #24]
9000c802:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c806:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c808:	5c08      	ldrb	r0, [r1, r0]
9000c80a:	f000 001f 	and.w	r0, r0, #31
9000c80e:	40c3      	lsrs	r3, r0
9000c810:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000c812:	69d2      	ldr	r2, [r2, #28]
9000c814:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000c818:	5c88      	ldrb	r0, [r1, r2]
9000c81a:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000c81e:	fa23 f000 	lsr.w	r0, r3, r0
9000c822:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c824:	4b0d      	ldr	r3, [pc, #52]	@ (9000c85c <HAL_RCC_GetPCLK2Freq+0x88>)
9000c826:	e7e0      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c828:	6813      	ldr	r3, [r2, #0]
9000c82a:	069b      	lsls	r3, r3, #26
9000c82c:	d509      	bpl.n	9000c842 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c82e:	6812      	ldr	r2, [r2, #0]
9000c830:	4b0b      	ldr	r3, [pc, #44]	@ (9000c860 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c832:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c836:	40d3      	lsrs	r3, r2
9000c838:	e7d7      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
9000c83a:	f7ff fa27 	bl	9000bc8c <HAL_RCC_GetSysClockFreq.part.0>
9000c83e:	4603      	mov	r3, r0
9000c840:	e7d3      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c842:	4b07      	ldr	r3, [pc, #28]	@ (9000c860 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c844:	e7d1      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
9000c846:	bf00      	nop
9000c848:	58024400 	.word	0x58024400
9000c84c:	003d0900 	.word	0x003d0900
9000c850:	9002df9c 	.word	0x9002df9c
9000c854:	24000078 	.word	0x24000078
9000c858:	24000074 	.word	0x24000074
9000c85c:	017d7840 	.word	0x017d7840
9000c860:	03d09000 	.word	0x03d09000

9000c864 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c864:	4b13      	ldr	r3, [pc, #76]	@ (9000c8b4 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c866:	223f      	movs	r2, #63	@ 0x3f
9000c868:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c86a:	691a      	ldr	r2, [r3, #16]
9000c86c:	f002 0207 	and.w	r2, r2, #7
9000c870:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000c872:	699a      	ldr	r2, [r3, #24]
9000c874:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000c878:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000c87a:	699a      	ldr	r2, [r3, #24]
9000c87c:	f002 020f 	and.w	r2, r2, #15
9000c880:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000c882:	699a      	ldr	r2, [r3, #24]
9000c884:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c888:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000c88a:	69da      	ldr	r2, [r3, #28]
9000c88c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c890:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000c892:	69da      	ldr	r2, [r3, #28]
9000c894:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c898:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c89a:	6a1b      	ldr	r3, [r3, #32]
{
9000c89c:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c89e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c8a2:	4c05      	ldr	r4, [pc, #20]	@ (9000c8b8 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c8a4:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c8a6:	6823      	ldr	r3, [r4, #0]
}
9000c8a8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c8ac:	f003 030f 	and.w	r3, r3, #15
9000c8b0:	600b      	str	r3, [r1, #0]
}
9000c8b2:	4770      	bx	lr
9000c8b4:	58024400 	.word	0x58024400
9000c8b8:	52002000 	.word	0x52002000

9000c8bc <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c8bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000c8be:	4c36      	ldr	r4, [pc, #216]	@ (9000c998 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c8c0:	4606      	mov	r6, r0
9000c8c2:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000c8c4:	6823      	ldr	r3, [r4, #0]
9000c8c6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000c8ca:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c8cc:	f7fb fa36 	bl	90007d3c <HAL_GetTick>
9000c8d0:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c8d2:	e004      	b.n	9000c8de <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c8d4:	f7fb fa32 	bl	90007d3c <HAL_GetTick>
9000c8d8:	1b40      	subs	r0, r0, r5
9000c8da:	2802      	cmp	r0, #2
9000c8dc:	d856      	bhi.n	9000c98c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c8de:	6823      	ldr	r3, [r4, #0]
9000c8e0:	011a      	lsls	r2, r3, #4
9000c8e2:	d4f7      	bmi.n	9000c8d4 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000c8e4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c8e6:	6832      	ldr	r2, [r6, #0]
9000c8e8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000c8ec:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c8f0:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c8f2:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c8f6:	3b01      	subs	r3, #1
9000c8f8:	3a01      	subs	r2, #1
9000c8fa:	025b      	lsls	r3, r3, #9
9000c8fc:	0412      	lsls	r2, r2, #16
9000c8fe:	b29b      	uxth	r3, r3
9000c900:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c904:	4313      	orrs	r3, r2
9000c906:	6872      	ldr	r2, [r6, #4]
9000c908:	3a01      	subs	r2, #1
9000c90a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c90e:	4313      	orrs	r3, r2
9000c910:	6932      	ldr	r2, [r6, #16]
9000c912:	3a01      	subs	r2, #1
9000c914:	0612      	lsls	r2, r2, #24
9000c916:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c91a:	4313      	orrs	r3, r2
9000c91c:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000c91e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c920:	6972      	ldr	r2, [r6, #20]
9000c922:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000c926:	4313      	orrs	r3, r2
9000c928:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c92a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c92c:	69b3      	ldr	r3, [r6, #24]
9000c92e:	f022 0220 	bic.w	r2, r2, #32
9000c932:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c934:	4b19      	ldr	r3, [pc, #100]	@ (9000c99c <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c936:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000c938:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c93a:	f022 0210 	bic.w	r2, r2, #16
9000c93e:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c940:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000c942:	69f2      	ldr	r2, [r6, #28]
9000c944:	400b      	ands	r3, r1
9000c946:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c94a:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000c94c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c94e:	f043 0310 	orr.w	r3, r3, #16
9000c952:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c954:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c956:	b1df      	cbz	r7, 9000c990 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c958:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000c95a:	bf0c      	ite	eq
9000c95c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000c960:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000c964:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000c966:	4c0c      	ldr	r4, [pc, #48]	@ (9000c998 <RCCEx_PLL2_Config.part.0+0xdc>)
9000c968:	6823      	ldr	r3, [r4, #0]
9000c96a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000c96e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c970:	f7fb f9e4 	bl	90007d3c <HAL_GetTick>
9000c974:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c976:	e004      	b.n	9000c982 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c978:	f7fb f9e0 	bl	90007d3c <HAL_GetTick>
9000c97c:	1b40      	subs	r0, r0, r5
9000c97e:	2802      	cmp	r0, #2
9000c980:	d804      	bhi.n	9000c98c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c982:	6823      	ldr	r3, [r4, #0]
9000c984:	011b      	lsls	r3, r3, #4
9000c986:	d5f7      	bpl.n	9000c978 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000c988:	2000      	movs	r0, #0
}
9000c98a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c98c:	2003      	movs	r0, #3
}
9000c98e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c990:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000c994:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000c996:	e7e6      	b.n	9000c966 <RCCEx_PLL2_Config.part.0+0xaa>
9000c998:	58024400 	.word	0x58024400
9000c99c:	ffff0007 	.word	0xffff0007

9000c9a0 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c9a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000c9a2:	4c36      	ldr	r4, [pc, #216]	@ (9000ca7c <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c9a4:	4606      	mov	r6, r0
9000c9a6:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000c9a8:	6823      	ldr	r3, [r4, #0]
9000c9aa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000c9ae:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c9b0:	f7fb f9c4 	bl	90007d3c <HAL_GetTick>
9000c9b4:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c9b6:	e004      	b.n	9000c9c2 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c9b8:	f7fb f9c0 	bl	90007d3c <HAL_GetTick>
9000c9bc:	1b40      	subs	r0, r0, r5
9000c9be:	2802      	cmp	r0, #2
9000c9c0:	d856      	bhi.n	9000ca70 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c9c2:	6823      	ldr	r3, [r4, #0]
9000c9c4:	009a      	lsls	r2, r3, #2
9000c9c6:	d4f7      	bmi.n	9000c9b8 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000c9c8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c9ca:	6832      	ldr	r2, [r6, #0]
9000c9cc:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000c9d0:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000c9d4:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c9d6:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c9da:	3b01      	subs	r3, #1
9000c9dc:	3a01      	subs	r2, #1
9000c9de:	025b      	lsls	r3, r3, #9
9000c9e0:	0412      	lsls	r2, r2, #16
9000c9e2:	b29b      	uxth	r3, r3
9000c9e4:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c9e8:	4313      	orrs	r3, r2
9000c9ea:	6872      	ldr	r2, [r6, #4]
9000c9ec:	3a01      	subs	r2, #1
9000c9ee:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c9f2:	4313      	orrs	r3, r2
9000c9f4:	6932      	ldr	r2, [r6, #16]
9000c9f6:	3a01      	subs	r2, #1
9000c9f8:	0612      	lsls	r2, r2, #24
9000c9fa:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c9fe:	4313      	orrs	r3, r2
9000ca00:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000ca02:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ca04:	6972      	ldr	r2, [r6, #20]
9000ca06:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000ca0a:	4313      	orrs	r3, r2
9000ca0c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000ca0e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ca10:	69b3      	ldr	r3, [r6, #24]
9000ca12:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000ca16:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ca18:	4b19      	ldr	r3, [pc, #100]	@ (9000ca80 <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000ca1a:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000ca1c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ca1e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000ca22:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ca24:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000ca26:	69f2      	ldr	r2, [r6, #28]
9000ca28:	400b      	ands	r3, r1
9000ca2a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000ca2e:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000ca30:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ca32:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000ca36:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000ca38:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000ca3a:	b1df      	cbz	r7, 9000ca74 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000ca3c:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000ca3e:	bf0c      	ite	eq
9000ca40:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000ca44:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000ca48:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000ca4a:	4c0c      	ldr	r4, [pc, #48]	@ (9000ca7c <RCCEx_PLL3_Config.part.0+0xdc>)
9000ca4c:	6823      	ldr	r3, [r4, #0]
9000ca4e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000ca52:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ca54:	f7fb f972 	bl	90007d3c <HAL_GetTick>
9000ca58:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000ca5a:	e004      	b.n	9000ca66 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ca5c:	f7fb f96e 	bl	90007d3c <HAL_GetTick>
9000ca60:	1b40      	subs	r0, r0, r5
9000ca62:	2802      	cmp	r0, #2
9000ca64:	d804      	bhi.n	9000ca70 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000ca66:	6823      	ldr	r3, [r4, #0]
9000ca68:	009b      	lsls	r3, r3, #2
9000ca6a:	d5f7      	bpl.n	9000ca5c <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000ca6c:	2000      	movs	r0, #0
}
9000ca6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000ca70:	2003      	movs	r0, #3
}
9000ca72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000ca74:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000ca78:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000ca7a:	e7e6      	b.n	9000ca4a <RCCEx_PLL3_Config.part.0+0xaa>
9000ca7c:	58024400 	.word	0x58024400
9000ca80:	ffff0007 	.word	0xffff0007

9000ca84 <HAL_RCCEx_PeriphCLKConfig>:
{
9000ca84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000ca88:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000ca8c:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000ca8e:	011d      	lsls	r5, r3, #4
9000ca90:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000ca94:	d525      	bpl.n	9000cae2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000ca96:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000ca98:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000ca9c:	f000 8660 	beq.w	9000d760 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000caa0:	d814      	bhi.n	9000cacc <HAL_RCCEx_PeriphCLKConfig+0x48>
9000caa2:	2900      	cmp	r1, #0
9000caa4:	f000 86fa 	beq.w	9000d89c <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000caa8:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000caac:	f040 8466 	bne.w	9000d37c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cab0:	49ad      	ldr	r1, [pc, #692]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cab2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cab4:	f001 0103 	and.w	r1, r1, #3
9000cab8:	2903      	cmp	r1, #3
9000caba:	f000 845f 	beq.w	9000d37c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000cabe:	2102      	movs	r1, #2
9000cac0:	3008      	adds	r0, #8
9000cac2:	f7ff fefb 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cac6:	4606      	mov	r6, r0
        break;
9000cac8:	f000 be56 	b.w	9000d778 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000cacc:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000cad0:	f040 8454 	bne.w	9000d37c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cad4:	4da4      	ldr	r5, [pc, #656]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000cad6:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cad8:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000cada:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000cade:	4301      	orrs	r1, r0
9000cae0:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cae2:	05d8      	lsls	r0, r3, #23
9000cae4:	d50a      	bpl.n	9000cafc <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000cae6:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000cae8:	2904      	cmp	r1, #4
9000caea:	d806      	bhi.n	9000cafa <HAL_RCCEx_PeriphCLKConfig+0x76>
9000caec:	e8df f011 	tbh	[pc, r1, lsl #1]
9000caf0:	064c04a8 	.word	0x064c04a8
9000caf4:	04ad0661 	.word	0x04ad0661
9000caf8:	04ad      	.short	0x04ad
9000cafa:	2601      	movs	r6, #1
9000cafc:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000cafe:	0599      	lsls	r1, r3, #22
9000cb00:	d524      	bpl.n	9000cb4c <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000cb02:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000cb04:	2980      	cmp	r1, #128	@ 0x80
9000cb06:	f000 8664 	beq.w	9000d7d2 <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000cb0a:	f200 8122 	bhi.w	9000cd52 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000cb0e:	2900      	cmp	r1, #0
9000cb10:	f000 84ac 	beq.w	9000d46c <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000cb14:	2940      	cmp	r1, #64	@ 0x40
9000cb16:	f040 8123 	bne.w	9000cd60 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb1a:	4993      	ldr	r1, [pc, #588]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cb1c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb1e:	f001 0103 	and.w	r1, r1, #3
9000cb22:	2903      	cmp	r1, #3
9000cb24:	f000 811c 	beq.w	9000cd60 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000cb28:	2100      	movs	r1, #0
9000cb2a:	f104 0008 	add.w	r0, r4, #8
9000cb2e:	f7ff fec5 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cb32:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cb34:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb38:	2d00      	cmp	r5, #0
9000cb3a:	f040 851b 	bne.w	9000d574 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000cb3e:	4f8a      	ldr	r7, [pc, #552]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cb40:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000cb42:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cb44:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000cb48:	4301      	orrs	r1, r0
9000cb4a:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cb4c:	055f      	lsls	r7, r3, #21
9000cb4e:	d528      	bpl.n	9000cba2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000cb50:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000cb54:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000cb58:	f000 864f 	beq.w	9000d7fa <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000cb5c:	f200 8106 	bhi.w	9000cd6c <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000cb60:	2900      	cmp	r1, #0
9000cb62:	f000 8463 	beq.w	9000d42c <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000cb66:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000cb6a:	f040 8107 	bne.w	9000cd7c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb6e:	497e      	ldr	r1, [pc, #504]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cb70:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb72:	f001 0103 	and.w	r1, r1, #3
9000cb76:	2903      	cmp	r1, #3
9000cb78:	f000 8100 	beq.w	9000cd7c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000cb7c:	2100      	movs	r1, #0
9000cb7e:	f104 0008 	add.w	r0, r4, #8
9000cb82:	f7ff fe9b 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cb86:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cb88:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb8c:	2d00      	cmp	r5, #0
9000cb8e:	f040 84f4 	bne.w	9000d57a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000cb92:	4f75      	ldr	r7, [pc, #468]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cb94:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000cb98:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cb9a:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000cb9e:	4301      	orrs	r1, r0
9000cba0:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cba2:	0518      	lsls	r0, r3, #20
9000cba4:	d528      	bpl.n	9000cbf8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000cba6:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000cbaa:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000cbae:	f000 85ac 	beq.w	9000d70a <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000cbb2:	f200 80e6 	bhi.w	9000cd82 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000cbb6:	2900      	cmp	r1, #0
9000cbb8:	f000 8425 	beq.w	9000d406 <HAL_RCCEx_PeriphCLKConfig+0x982>
9000cbbc:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000cbc0:	f040 80e7 	bne.w	9000cd92 <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cbc4:	4968      	ldr	r1, [pc, #416]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cbc6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cbc8:	f001 0103 	and.w	r1, r1, #3
9000cbcc:	2903      	cmp	r1, #3
9000cbce:	f000 80e0 	beq.w	9000cd92 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000cbd2:	2100      	movs	r1, #0
9000cbd4:	f104 0008 	add.w	r0, r4, #8
9000cbd8:	f7ff fe70 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cbdc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cbde:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cbe2:	2d00      	cmp	r5, #0
9000cbe4:	f040 84cc 	bne.w	9000d580 <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000cbe8:	4f5f      	ldr	r7, [pc, #380]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cbea:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000cbee:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cbf0:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000cbf4:	4301      	orrs	r1, r0
9000cbf6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cbf8:	0199      	lsls	r1, r3, #6
9000cbfa:	d518      	bpl.n	9000cc2e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000cbfc:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000cbfe:	2920      	cmp	r1, #32
9000cc00:	f000 84ff 	beq.w	9000d602 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000cc04:	f200 80c8 	bhi.w	9000cd98 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000cc08:	b139      	cbz	r1, 9000cc1a <HAL_RCCEx_PeriphCLKConfig+0x196>
9000cc0a:	2910      	cmp	r1, #16
9000cc0c:	f040 80c7 	bne.w	9000cd9e <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cc10:	4855      	ldr	r0, [pc, #340]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cc12:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cc14:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cc18:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cc1a:	2d00      	cmp	r5, #0
9000cc1c:	f040 849f 	bne.w	9000d55e <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000cc20:	4f51      	ldr	r7, [pc, #324]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cc22:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000cc24:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000cc26:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000cc2a:	4301      	orrs	r1, r0
9000cc2c:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000cc2e:	04df      	lsls	r7, r3, #19
9000cc30:	d526      	bpl.n	9000cc80 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000cc32:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000cc34:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000cc38:	f000 857b 	beq.w	9000d732 <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000cc3c:	f200 80b2 	bhi.w	9000cda4 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000cc40:	2900      	cmp	r1, #0
9000cc42:	f000 83ea 	beq.w	9000d41a <HAL_RCCEx_PeriphCLKConfig+0x996>
9000cc46:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000cc4a:	f040 80b3 	bne.w	9000cdb4 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc4e:	4946      	ldr	r1, [pc, #280]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cc50:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cc52:	f001 0103 	and.w	r1, r1, #3
9000cc56:	2903      	cmp	r1, #3
9000cc58:	f000 80ac 	beq.w	9000cdb4 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000cc5c:	2100      	movs	r1, #0
9000cc5e:	f104 0008 	add.w	r0, r4, #8
9000cc62:	f7ff fe2b 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cc66:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cc68:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc6c:	2d00      	cmp	r5, #0
9000cc6e:	f040 848a 	bne.w	9000d586 <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000cc72:	4f3d      	ldr	r7, [pc, #244]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cc74:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000cc76:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cc78:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000cc7c:	4301      	orrs	r1, r0
9000cc7e:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cc80:	0498      	lsls	r0, r3, #18
9000cc82:	d524      	bpl.n	9000ccce <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cc84:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000cc86:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000cc8a:	f000 8516 	beq.w	9000d6ba <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000cc8e:	f200 8094 	bhi.w	9000cdba <HAL_RCCEx_PeriphCLKConfig+0x336>
9000cc92:	b191      	cbz	r1, 9000ccba <HAL_RCCEx_PeriphCLKConfig+0x236>
9000cc94:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000cc98:	f040 8099 	bne.w	9000cdce <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc9c:	4932      	ldr	r1, [pc, #200]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cc9e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cca0:	f001 0103 	and.w	r1, r1, #3
9000cca4:	2903      	cmp	r1, #3
9000cca6:	f000 8092 	beq.w	9000cdce <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000ccaa:	2101      	movs	r1, #1
9000ccac:	f104 0008 	add.w	r0, r4, #8
9000ccb0:	f7ff fe04 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000ccb4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ccb6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ccba:	2d00      	cmp	r5, #0
9000ccbc:	f040 8476 	bne.w	9000d5ac <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000ccc0:	4f29      	ldr	r7, [pc, #164]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000ccc2:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000ccc4:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000ccc6:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000ccca:	4301      	orrs	r1, r0
9000cccc:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ccce:	0459      	lsls	r1, r3, #17
9000ccd0:	d523      	bpl.n	9000cd1a <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000ccd2:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000ccd6:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000ccda:	f000 8502 	beq.w	9000d6e2 <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000ccde:	d879      	bhi.n	9000cdd4 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000cce0:	b181      	cbz	r1, 9000cd04 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000cce2:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cce6:	d17d      	bne.n	9000cde4 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cce8:	491f      	ldr	r1, [pc, #124]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000ccea:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ccec:	f001 0103 	and.w	r1, r1, #3
9000ccf0:	2903      	cmp	r1, #3
9000ccf2:	d077      	beq.n	9000cde4 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000ccf4:	2101      	movs	r1, #1
9000ccf6:	f104 0008 	add.w	r0, r4, #8
9000ccfa:	f7ff fddf 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000ccfe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cd00:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cd04:	2d00      	cmp	r5, #0
9000cd06:	f040 8454 	bne.w	9000d5b2 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000cd0a:	4f17      	ldr	r7, [pc, #92]	@ (9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000cd0c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000cd10:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cd12:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000cd16:	4301      	orrs	r1, r0
9000cd18:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cd1a:	041f      	lsls	r7, r3, #16
9000cd1c:	d50d      	bpl.n	9000cd3a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000cd1e:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000cd20:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cd24:	f000 82e2 	beq.w	9000d2ec <HAL_RCCEx_PeriphCLKConfig+0x868>
9000cd28:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000cd2c:	f000 83f0 	beq.w	9000d510 <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000cd30:	2900      	cmp	r1, #0
9000cd32:	f000 82e0 	beq.w	9000d2f6 <HAL_RCCEx_PeriphCLKConfig+0x872>
9000cd36:	2601      	movs	r6, #1
9000cd38:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000cd3a:	01d8      	lsls	r0, r3, #7
9000cd3c:	d55e      	bpl.n	9000cdfc <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000cd3e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000cd40:	2903      	cmp	r1, #3
9000cd42:	f200 85cd 	bhi.w	9000d8e0 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000cd46:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cd4a:	0055      	.short	0x0055
9000cd4c:	04930050 	.word	0x04930050
9000cd50:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000cd52:	29c0      	cmp	r1, #192	@ 0xc0
9000cd54:	f43f aef0 	beq.w	9000cb38 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000cd58:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000cd5c:	f43f aeec 	beq.w	9000cb38 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000cd60:	2601      	movs	r6, #1
9000cd62:	4635      	mov	r5, r6
9000cd64:	e6f2      	b.n	9000cb4c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000cd66:	bf00      	nop
9000cd68:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000cd6c:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000cd70:	f43f af0c 	beq.w	9000cb8c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000cd74:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000cd78:	f43f af08 	beq.w	9000cb8c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000cd7c:	2601      	movs	r6, #1
9000cd7e:	4635      	mov	r5, r6
9000cd80:	e70f      	b.n	9000cba2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000cd82:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000cd86:	f43f af2c 	beq.w	9000cbe2 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000cd8a:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000cd8e:	f43f af28 	beq.w	9000cbe2 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000cd92:	2601      	movs	r6, #1
9000cd94:	4635      	mov	r5, r6
9000cd96:	e72f      	b.n	9000cbf8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000cd98:	2930      	cmp	r1, #48	@ 0x30
9000cd9a:	f43f af3e 	beq.w	9000cc1a <HAL_RCCEx_PeriphCLKConfig+0x196>
9000cd9e:	2601      	movs	r6, #1
9000cda0:	4635      	mov	r5, r6
9000cda2:	e744      	b.n	9000cc2e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000cda4:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000cda8:	f43f af60 	beq.w	9000cc6c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000cdac:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000cdb0:	f43f af5c 	beq.w	9000cc6c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000cdb4:	2601      	movs	r6, #1
9000cdb6:	4635      	mov	r5, r6
9000cdb8:	e762      	b.n	9000cc80 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cdba:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000cdbe:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000cdc2:	f43f af7a 	beq.w	9000ccba <HAL_RCCEx_PeriphCLKConfig+0x236>
9000cdc6:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000cdca:	f43f af76 	beq.w	9000ccba <HAL_RCCEx_PeriphCLKConfig+0x236>
9000cdce:	2601      	movs	r6, #1
9000cdd0:	4635      	mov	r5, r6
9000cdd2:	e77c      	b.n	9000ccce <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cdd4:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000cdd8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000cddc:	d092      	beq.n	9000cd04 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000cdde:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000cde2:	d08f      	beq.n	9000cd04 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000cde4:	2601      	movs	r6, #1
9000cde6:	4635      	mov	r5, r6
9000cde8:	e797      	b.n	9000cd1a <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cdea:	4837      	ldr	r0, [pc, #220]	@ (9000cec8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000cdec:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cdee:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cdf2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cdf4:	2d00      	cmp	r5, #0
9000cdf6:	f000 83b5 	beq.w	9000d564 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000cdfa:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000cdfc:	0259      	lsls	r1, r3, #9
9000cdfe:	f100 82c0 	bmi.w	9000d382 <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ce02:	07df      	lsls	r7, r3, #31
9000ce04:	d52f      	bpl.n	9000ce66 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000ce06:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000ce08:	2928      	cmp	r1, #40	@ 0x28
9000ce0a:	d82a      	bhi.n	9000ce62 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000ce0c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ce10:	002902ab 	.word	0x002902ab
9000ce14:	00290029 	.word	0x00290029
9000ce18:	00290029 	.word	0x00290029
9000ce1c:	00290029 	.word	0x00290029
9000ce20:	0029029c 	.word	0x0029029c
9000ce24:	00290029 	.word	0x00290029
9000ce28:	00290029 	.word	0x00290029
9000ce2c:	00290029 	.word	0x00290029
9000ce30:	0029052d 	.word	0x0029052d
9000ce34:	00290029 	.word	0x00290029
9000ce38:	00290029 	.word	0x00290029
9000ce3c:	00290029 	.word	0x00290029
9000ce40:	002902ab 	.word	0x002902ab
9000ce44:	00290029 	.word	0x00290029
9000ce48:	00290029 	.word	0x00290029
9000ce4c:	00290029 	.word	0x00290029
9000ce50:	002902ab 	.word	0x002902ab
9000ce54:	00290029 	.word	0x00290029
9000ce58:	00290029 	.word	0x00290029
9000ce5c:	00290029 	.word	0x00290029
9000ce60:	02ab      	.short	0x02ab
9000ce62:	2601      	movs	r6, #1
9000ce64:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ce66:	0798      	lsls	r0, r3, #30
9000ce68:	d51e      	bpl.n	9000cea8 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000ce6a:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000ce6c:	2905      	cmp	r1, #5
9000ce6e:	f200 851c 	bhi.w	9000d8aa <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000ce72:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ce76:	0015      	.short	0x0015
9000ce78:	04e80006 	.word	0x04e80006
9000ce7c:	00150015 	.word	0x00150015
9000ce80:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce82:	4911      	ldr	r1, [pc, #68]	@ (9000cec8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000ce84:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce86:	f001 0103 	and.w	r1, r1, #3
9000ce8a:	2903      	cmp	r1, #3
9000ce8c:	f000 850d 	beq.w	9000d8aa <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000ce90:	2101      	movs	r1, #1
9000ce92:	f104 0008 	add.w	r0, r4, #8
9000ce96:	f7ff fd11 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000ce9a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ce9c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cea0:	2d00      	cmp	r5, #0
9000cea2:	f000 837b 	beq.w	9000d59c <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000cea6:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000cea8:	0759      	lsls	r1, r3, #29
9000ceaa:	d522      	bpl.n	9000cef2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ceac:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000ceb0:	2905      	cmp	r1, #5
9000ceb2:	f200 84fe 	bhi.w	9000d8b2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000ceb6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ceba:	0018      	.short	0x0018
9000cebc:	04b40009 	.word	0x04b40009
9000cec0:	00180018 	.word	0x00180018
9000cec4:	0018      	.short	0x0018
9000cec6:	bf00      	nop
9000cec8:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cecc:	49b0      	ldr	r1, [pc, #704]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cece:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ced0:	f001 0103 	and.w	r1, r1, #3
9000ced4:	2903      	cmp	r1, #3
9000ced6:	f000 84ec 	beq.w	9000d8b2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000ceda:	2101      	movs	r1, #1
9000cedc:	f104 0008 	add.w	r0, r4, #8
9000cee0:	f7ff fcec 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cee4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cee6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ceea:	2d00      	cmp	r5, #0
9000ceec:	f000 8364 	beq.w	9000d5b8 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000cef0:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cef2:	069f      	lsls	r7, r3, #26
9000cef4:	d526      	bpl.n	9000cf44 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cef6:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000cefa:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000cefe:	f000 836e 	beq.w	9000d5de <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000cf02:	f200 8194 	bhi.w	9000d22e <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000cf06:	b191      	cbz	r1, 9000cf2e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000cf08:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cf0c:	f040 8199 	bne.w	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf10:	499f      	ldr	r1, [pc, #636]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cf12:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf14:	f001 0103 	and.w	r1, r1, #3
9000cf18:	2903      	cmp	r1, #3
9000cf1a:	f000 8192 	beq.w	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000cf1e:	2100      	movs	r1, #0
9000cf20:	f104 0008 	add.w	r0, r4, #8
9000cf24:	f7ff fcca 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cf28:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cf2a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf2e:	2d00      	cmp	r5, #0
9000cf30:	f040 834b 	bne.w	9000d5ca <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000cf34:	4f96      	ldr	r7, [pc, #600]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cf36:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cf3a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cf3c:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000cf40:	4301      	orrs	r1, r0
9000cf42:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cf44:	0658      	lsls	r0, r3, #25
9000cf46:	d526      	bpl.n	9000cf96 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cf48:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000cf4c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000cf50:	f000 83a1 	beq.w	9000d696 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000cf54:	f200 8178 	bhi.w	9000d248 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000cf58:	b191      	cbz	r1, 9000cf80 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000cf5a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000cf5e:	f040 817d 	bne.w	9000d25c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf62:	498b      	ldr	r1, [pc, #556]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cf64:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf66:	f001 0103 	and.w	r1, r1, #3
9000cf6a:	2903      	cmp	r1, #3
9000cf6c:	f000 8176 	beq.w	9000d25c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000cf70:	2100      	movs	r1, #0
9000cf72:	f104 0008 	add.w	r0, r4, #8
9000cf76:	f7ff fca1 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cf7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cf7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf80:	2d00      	cmp	r5, #0
9000cf82:	f040 8328 	bne.w	9000d5d6 <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000cf86:	4f82      	ldr	r7, [pc, #520]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cf88:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000cf8c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cf8e:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000cf92:	4301      	orrs	r1, r0
9000cf94:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cf96:	0619      	lsls	r1, r3, #24
9000cf98:	d526      	bpl.n	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cf9a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000cf9e:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000cfa2:	f000 8353 	beq.w	9000d64c <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000cfa6:	f200 815c 	bhi.w	9000d262 <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000cfaa:	b191      	cbz	r1, 9000cfd2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000cfac:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000cfb0:	f040 8161 	bne.w	9000d276 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cfb4:	4976      	ldr	r1, [pc, #472]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cfb6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cfb8:	f001 0103 	and.w	r1, r1, #3
9000cfbc:	2903      	cmp	r1, #3
9000cfbe:	f000 815a 	beq.w	9000d276 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000cfc2:	2100      	movs	r1, #0
9000cfc4:	f104 0008 	add.w	r0, r4, #8
9000cfc8:	f7ff fc78 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000cfcc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cfce:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cfd2:	2d00      	cmp	r5, #0
9000cfd4:	f040 82fb 	bne.w	9000d5ce <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000cfd8:	4f6d      	ldr	r7, [pc, #436]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cfda:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000cfde:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cfe0:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000cfe4:	4301      	orrs	r1, r0
9000cfe6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cfe8:	071f      	lsls	r7, r3, #28
9000cfea:	d50b      	bpl.n	9000d004 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000cfec:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000cff0:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000cff4:	f000 8250 	beq.w	9000d498 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000cff8:	4f65      	ldr	r7, [pc, #404]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000cffa:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cffc:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000d000:	4301      	orrs	r1, r0
9000d002:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d004:	06d8      	lsls	r0, r3, #27
9000d006:	d50b      	bpl.n	9000d020 <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000d008:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000d00c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000d010:	f000 8257 	beq.w	9000d4c2 <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d014:	4f5e      	ldr	r7, [pc, #376]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d016:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d018:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000d01c:	4301      	orrs	r1, r0
9000d01e:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d020:	0319      	lsls	r1, r3, #12
9000d022:	d50e      	bpl.n	9000d042 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000d024:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000d028:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000d02c:	f000 816e 	beq.w	9000d30c <HAL_RCCEx_PeriphCLKConfig+0x888>
9000d030:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000d034:	f000 8179 	beq.w	9000d32a <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000d038:	2900      	cmp	r1, #0
9000d03a:	f000 827a 	beq.w	9000d532 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000d03e:	2601      	movs	r6, #1
9000d040:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d042:	035f      	lsls	r7, r3, #13
9000d044:	d50f      	bpl.n	9000d066 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000d046:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000d04a:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000d04e:	f000 82eb 	beq.w	9000d628 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000d052:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000d056:	f000 813d 	beq.w	9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000d05a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000d05e:	f000 8134 	beq.w	9000d2ca <HAL_RCCEx_PeriphCLKConfig+0x846>
9000d062:	2601      	movs	r6, #1
9000d064:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d066:	03d8      	lsls	r0, r3, #15
9000d068:	d520      	bpl.n	9000d0ac <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000d06a:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000d06c:	2900      	cmp	r1, #0
9000d06e:	f000 8245 	beq.w	9000d4fc <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000d072:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000d076:	f040 8125 	bne.w	9000d2c4 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d07a:	4945      	ldr	r1, [pc, #276]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d07c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d07e:	f001 0103 	and.w	r1, r1, #3
9000d082:	2903      	cmp	r1, #3
9000d084:	f000 811e 	beq.w	9000d2c4 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000d088:	2102      	movs	r1, #2
9000d08a:	f104 0008 	add.w	r0, r4, #8
9000d08e:	f7ff fc15 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000d092:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d094:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d098:	2d00      	cmp	r5, #0
9000d09a:	f040 8237 	bne.w	9000d50c <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000d09e:	4f3c      	ldr	r7, [pc, #240]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d0a0:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000d0a2:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000d0a4:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000d0a8:	4301      	orrs	r1, r0
9000d0aa:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d0ac:	0099      	lsls	r1, r3, #2
9000d0ae:	d50e      	bpl.n	9000d0ce <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d0b0:	4937      	ldr	r1, [pc, #220]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d0b2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d0b4:	f001 0103 	and.w	r1, r1, #3
9000d0b8:	2903      	cmp	r1, #3
9000d0ba:	d007      	beq.n	9000d0cc <HAL_RCCEx_PeriphCLKConfig+0x648>
9000d0bc:	2102      	movs	r1, #2
9000d0be:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d0c2:	f7ff fc6d 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d0c6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d0ca:	b100      	cbz	r0, 9000d0ce <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000d0cc:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d0ce:	039f      	lsls	r7, r3, #14
9000d0d0:	f140 80e0 	bpl.w	9000d294 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000d0d4:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000d0d8:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000d0dc:	f000 8205 	beq.w	9000d4ea <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000d0e0:	f240 80cc 	bls.w	9000d27c <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000d0e4:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000d0e8:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000d0ec:	f000 80c9 	beq.w	9000d282 <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000d0f0:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000d0f2:	02d8      	lsls	r0, r3, #11
9000d0f4:	d506      	bpl.n	9000d104 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000d0f6:	4826      	ldr	r0, [pc, #152]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d0f8:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000d0fa:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000d0fc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000d100:	4331      	orrs	r1, r6
9000d102:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000d104:	00d9      	lsls	r1, r3, #3
9000d106:	d507      	bpl.n	9000d118 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000d108:	4821      	ldr	r0, [pc, #132]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d10a:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000d10e:	6901      	ldr	r1, [r0, #16]
9000d110:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000d114:	4331      	orrs	r1, r6
9000d116:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000d118:	029f      	lsls	r7, r3, #10
9000d11a:	d506      	bpl.n	9000d12a <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000d11c:	481c      	ldr	r0, [pc, #112]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d11e:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000d120:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000d122:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000d126:	4331      	orrs	r1, r6
9000d128:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000d12a:	005e      	lsls	r6, r3, #1
9000d12c:	d509      	bpl.n	9000d142 <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000d12e:	4918      	ldr	r1, [pc, #96]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d130:	6908      	ldr	r0, [r1, #16]
9000d132:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000d136:	6108      	str	r0, [r1, #16]
9000d138:	6908      	ldr	r0, [r1, #16]
9000d13a:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000d13e:	4330      	orrs	r0, r6
9000d140:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000d142:	2b00      	cmp	r3, #0
9000d144:	da06      	bge.n	9000d154 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000d146:	4812      	ldr	r0, [pc, #72]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d148:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000d14a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000d14c:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000d150:	4331      	orrs	r1, r6
9000d152:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000d154:	0218      	lsls	r0, r3, #8
9000d156:	d507      	bpl.n	9000d168 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000d158:	490d      	ldr	r1, [pc, #52]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d15a:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000d15e:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000d160:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000d164:	4303      	orrs	r3, r0
9000d166:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000d168:	07d1      	lsls	r1, r2, #31
9000d16a:	d513      	bpl.n	9000d194 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d16c:	4b08      	ldr	r3, [pc, #32]	@ (9000d190 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d16e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d170:	f003 0303 	and.w	r3, r3, #3
9000d174:	2b03      	cmp	r3, #3
9000d176:	f000 818d 	beq.w	9000d494 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000d17a:	2100      	movs	r1, #0
9000d17c:	f104 0008 	add.w	r0, r4, #8
9000d180:	f7ff fb9c 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d184:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d186:	2800      	cmp	r0, #0
9000d188:	f040 8204 	bne.w	9000d594 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000d18c:	e002      	b.n	9000d194 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000d18e:	bf00      	nop
9000d190:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d194:	0793      	lsls	r3, r2, #30
9000d196:	d50f      	bpl.n	9000d1b8 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d198:	4bb2      	ldr	r3, [pc, #712]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d19a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d19c:	f003 0303 	and.w	r3, r3, #3
9000d1a0:	2b03      	cmp	r3, #3
9000d1a2:	f000 816c 	beq.w	9000d47e <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000d1a6:	2101      	movs	r1, #1
9000d1a8:	f104 0008 	add.w	r0, r4, #8
9000d1ac:	f7ff fb86 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d1b0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d1b2:	2800      	cmp	r0, #0
9000d1b4:	f040 81f0 	bne.w	9000d598 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d1b8:	0757      	lsls	r7, r2, #29
9000d1ba:	d50f      	bpl.n	9000d1dc <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1bc:	4ba9      	ldr	r3, [pc, #676]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d1be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d1c0:	f003 0303 	and.w	r3, r3, #3
9000d1c4:	2b03      	cmp	r3, #3
9000d1c6:	f000 815c 	beq.w	9000d482 <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000d1ca:	2102      	movs	r1, #2
9000d1cc:	f104 0008 	add.w	r0, r4, #8
9000d1d0:	f7ff fb74 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d1d4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d1d6:	2800      	cmp	r0, #0
9000d1d8:	f040 81d8 	bne.w	9000d58c <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d1dc:	0716      	lsls	r6, r2, #28
9000d1de:	d50f      	bpl.n	9000d200 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1e0:	4ba0      	ldr	r3, [pc, #640]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d1e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d1e4:	f003 0303 	and.w	r3, r3, #3
9000d1e8:	2b03      	cmp	r3, #3
9000d1ea:	f000 814c 	beq.w	9000d486 <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000d1ee:	2100      	movs	r1, #0
9000d1f0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d1f4:	f7ff fbd4 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d1f8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d1fa:	2800      	cmp	r0, #0
9000d1fc:	f040 81c8 	bne.w	9000d590 <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d200:	06d0      	lsls	r0, r2, #27
9000d202:	d54a      	bpl.n	9000d29a <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d204:	4b97      	ldr	r3, [pc, #604]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d206:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d20a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d20c:	f003 0303 	and.w	r3, r3, #3
9000d210:	2b03      	cmp	r3, #3
9000d212:	f000 813a 	beq.w	9000d48a <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000d216:	2101      	movs	r1, #1
9000d218:	4630      	mov	r0, r6
9000d21a:	f7ff fbc1 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000d21e:	2800      	cmp	r0, #0
9000d220:	d03a      	beq.n	9000d298 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d222:	6863      	ldr	r3, [r4, #4]
9000d224:	069a      	lsls	r2, r3, #26
9000d226:	f140 808c 	bpl.w	9000d342 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000d22a:	4605      	mov	r5, r0
9000d22c:	e039      	b.n	9000d2a2 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d22e:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000d232:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000d236:	f43f ae7a 	beq.w	9000cf2e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000d23a:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000d23e:	f43f ae76 	beq.w	9000cf2e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000d242:	2601      	movs	r6, #1
9000d244:	4635      	mov	r5, r6
9000d246:	e67d      	b.n	9000cf44 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d248:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000d24c:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000d250:	f43f ae96 	beq.w	9000cf80 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000d254:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000d258:	f43f ae92 	beq.w	9000cf80 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000d25c:	2601      	movs	r6, #1
9000d25e:	4635      	mov	r5, r6
9000d260:	e699      	b.n	9000cf96 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d262:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000d266:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d26a:	f43f aeb2 	beq.w	9000cfd2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000d26e:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000d272:	f43f aeae 	beq.w	9000cfd2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000d276:	2601      	movs	r6, #1
9000d278:	4635      	mov	r5, r6
9000d27a:	e6b5      	b.n	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000d27c:	2900      	cmp	r1, #0
9000d27e:	f47f af37 	bne.w	9000d0f0 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000d282:	2d00      	cmp	r5, #0
9000d284:	f47f af35 	bne.w	9000d0f2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000d288:	4d76      	ldr	r5, [pc, #472]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d28a:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000d28c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000d290:	4301      	orrs	r1, r0
9000d292:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000d294:	4635      	mov	r5, r6
9000d296:	e72c      	b.n	9000d0f2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d298:	6862      	ldr	r2, [r4, #4]
9000d29a:	0693      	lsls	r3, r2, #26
9000d29c:	d50d      	bpl.n	9000d2ba <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d29e:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d2a2:	4b70      	ldr	r3, [pc, #448]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d2a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d2a6:	f003 0303 	and.w	r3, r3, #3
9000d2aa:	2b03      	cmp	r3, #3
9000d2ac:	d049      	beq.n	9000d342 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000d2ae:	2102      	movs	r1, #2
9000d2b0:	4630      	mov	r0, r6
9000d2b2:	f7ff fb75 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000d2b6:	2800      	cmp	r0, #0
9000d2b8:	d143      	bne.n	9000d342 <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000d2ba:	1e28      	subs	r0, r5, #0
9000d2bc:	bf18      	it	ne
9000d2be:	2001      	movne	r0, #1
}
9000d2c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000d2c4:	2601      	movs	r6, #1
9000d2c6:	4635      	mov	r5, r6
9000d2c8:	e6f0      	b.n	9000d0ac <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d2ca:	4866      	ldr	r0, [pc, #408]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d2cc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d2ce:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d2d2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d2d4:	2d00      	cmp	r5, #0
9000d2d6:	f040 8140 	bne.w	9000d55a <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000d2da:	4f62      	ldr	r7, [pc, #392]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d2dc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000d2e0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d2e2:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000d2e6:	4301      	orrs	r1, r0
9000d2e8:	6579      	str	r1, [r7, #84]	@ 0x54
9000d2ea:	e6bc      	b.n	9000d066 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d2ec:	485d      	ldr	r0, [pc, #372]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d2ee:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d2f0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d2f4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d2f6:	2d00      	cmp	r5, #0
9000d2f8:	f040 812c 	bne.w	9000d554 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000d2fc:	4f59      	ldr	r7, [pc, #356]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d2fe:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000d300:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d302:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000d306:	4301      	orrs	r1, r0
9000d308:	6539      	str	r1, [r7, #80]	@ 0x50
9000d30a:	e516      	b.n	9000cd3a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d30c:	4955      	ldr	r1, [pc, #340]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d30e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d310:	f001 0103 	and.w	r1, r1, #3
9000d314:	2903      	cmp	r1, #3
9000d316:	f43f ae92 	beq.w	9000d03e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000d31a:	2102      	movs	r1, #2
9000d31c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d320:	f7ff fb3e 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d324:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d326:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d32a:	2d00      	cmp	r5, #0
9000d32c:	f040 8151 	bne.w	9000d5d2 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000d330:	4f4c      	ldr	r7, [pc, #304]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d332:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000d336:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d338:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000d33c:	4301      	orrs	r1, r0
9000d33e:	65b9      	str	r1, [r7, #88]	@ 0x58
9000d340:	e67f      	b.n	9000d042 <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000d342:	2001      	movs	r0, #1
}
9000d344:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d348:	4946      	ldr	r1, [pc, #280]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d34a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d34c:	f001 0103 	and.w	r1, r1, #3
9000d350:	2903      	cmp	r1, #3
9000d352:	f43f ad86 	beq.w	9000ce62 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000d356:	2101      	movs	r1, #1
9000d358:	f104 0008 	add.w	r0, r4, #8
9000d35c:	f7ff faae 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000d360:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d362:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d366:	2d00      	cmp	r5, #0
9000d368:	f040 8137 	bne.w	9000d5da <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000d36c:	4f3d      	ldr	r7, [pc, #244]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d36e:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000d370:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d372:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000d376:	4301      	orrs	r1, r0
9000d378:	6579      	str	r1, [r7, #84]	@ 0x54
9000d37a:	e574      	b.n	9000ce66 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000d37c:	2601      	movs	r6, #1
9000d37e:	f7ff bbb0 	b.w	9000cae2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000d382:	4f39      	ldr	r7, [pc, #228]	@ (9000d468 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000d384:	683b      	ldr	r3, [r7, #0]
9000d386:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000d38a:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000d38c:	f7fa fcd6 	bl	90007d3c <HAL_GetTick>
9000d390:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d392:	e006      	b.n	9000d3a2 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000d394:	f7fa fcd2 	bl	90007d3c <HAL_GetTick>
9000d398:	eba0 0008 	sub.w	r0, r0, r8
9000d39c:	2864      	cmp	r0, #100	@ 0x64
9000d39e:	f200 8277 	bhi.w	9000d890 <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d3a2:	683b      	ldr	r3, [r7, #0]
9000d3a4:	05da      	lsls	r2, r3, #23
9000d3a6:	d5f5      	bpl.n	9000d394 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000d3a8:	2d00      	cmp	r5, #0
9000d3aa:	f040 8272 	bne.w	9000d892 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000d3ae:	4a2d      	ldr	r2, [pc, #180]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d3b0:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d3b4:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000d3b6:	4059      	eors	r1, r3
9000d3b8:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000d3bc:	d00b      	beq.n	9000d3d6 <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d3be:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000d3c0:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d3c2:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000d3c6:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000d3ca:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000d3cc:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000d3ce:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000d3d2:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000d3d4:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000d3d6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000d3da:	f000 8285 	beq.w	9000d8e8 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d3de:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000d3e2:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000d3e6:	f000 8293 	beq.w	9000d910 <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000d3ea:	491e      	ldr	r1, [pc, #120]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d3ec:	690a      	ldr	r2, [r1, #16]
9000d3ee:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000d3f2:	610a      	str	r2, [r1, #16]
9000d3f4:	481b      	ldr	r0, [pc, #108]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d3f6:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000d3fa:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000d3fc:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d3fe:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d402:	6701      	str	r1, [r0, #112]	@ 0x70
9000d404:	e4fd      	b.n	9000ce02 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d406:	4817      	ldr	r0, [pc, #92]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d408:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d40a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d40e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d410:	2d00      	cmp	r5, #0
9000d412:	f040 80b5 	bne.w	9000d580 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000d416:	f7ff bbe7 	b.w	9000cbe8 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d41a:	4812      	ldr	r0, [pc, #72]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d41c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d41e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d422:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d424:	2d00      	cmp	r5, #0
9000d426:	f040 80ae 	bne.w	9000d586 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000d42a:	e422      	b.n	9000cc72 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d42c:	480d      	ldr	r0, [pc, #52]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d42e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d430:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d434:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d436:	2d00      	cmp	r5, #0
9000d438:	f040 809f 	bne.w	9000d57a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000d43c:	f7ff bba9 	b.w	9000cb92 <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d440:	4808      	ldr	r0, [pc, #32]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d442:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d444:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d448:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000d44a:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000d44c:	2d00      	cmp	r5, #0
9000d44e:	f040 81ad 	bne.w	9000d7ac <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000d452:	4f04      	ldr	r7, [pc, #16]	@ (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000d454:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000d456:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d458:	f021 0107 	bic.w	r1, r1, #7
9000d45c:	4301      	orrs	r1, r0
9000d45e:	6539      	str	r1, [r7, #80]	@ 0x50
9000d460:	f7ff bb4d 	b.w	9000cafe <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000d464:	58024400 	.word	0x58024400
9000d468:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d46c:	48bb      	ldr	r0, [pc, #748]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d46e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d470:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d474:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d476:	2d00      	cmp	r5, #0
9000d478:	d17c      	bne.n	9000d574 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000d47a:	f7ff bb60 	b.w	9000cb3e <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000d47e:	2501      	movs	r5, #1
9000d480:	e69a      	b.n	9000d1b8 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000d482:	2501      	movs	r5, #1
9000d484:	e6aa      	b.n	9000d1dc <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000d486:	2501      	movs	r5, #1
9000d488:	e6ba      	b.n	9000d200 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d48a:	0691      	lsls	r1, r2, #26
9000d48c:	f57f af59 	bpl.w	9000d342 <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000d490:	2501      	movs	r5, #1
9000d492:	e706      	b.n	9000d2a2 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000d494:	2501      	movs	r5, #1
9000d496:	e67d      	b.n	9000d194 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d498:	49b0      	ldr	r1, [pc, #704]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d49a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d49c:	f001 0103 	and.w	r1, r1, #3
9000d4a0:	2903      	cmp	r1, #3
9000d4a2:	f000 820a 	beq.w	9000d8ba <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000d4a6:	2102      	movs	r1, #2
9000d4a8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d4ac:	f7ff fa78 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d4b0:	2800      	cmp	r0, #0
9000d4b2:	f000 820f 	beq.w	9000d8d4 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d4b6:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000d4ba:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d4bc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d4c0:	e59a      	b.n	9000cff8 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d4c2:	49a6      	ldr	r1, [pc, #664]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d4c4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d4c6:	f001 0103 	and.w	r1, r1, #3
9000d4ca:	2903      	cmp	r1, #3
9000d4cc:	f000 81f8 	beq.w	9000d8c0 <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000d4d0:	2102      	movs	r1, #2
9000d4d2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d4d6:	f7ff fa63 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d4da:	2800      	cmp	r0, #0
9000d4dc:	f040 81f3 	bne.w	9000d8c6 <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d4e0:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d4e4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d4e8:	e594      	b.n	9000d014 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d4ea:	4f9c      	ldr	r7, [pc, #624]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d4ec:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000d4ee:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d4f2:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d4f4:	2d00      	cmp	r5, #0
9000d4f6:	f47f adfc 	bne.w	9000d0f2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000d4fa:	e6c5      	b.n	9000d288 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d4fc:	4897      	ldr	r0, [pc, #604]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d4fe:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d500:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d504:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d506:	2d00      	cmp	r5, #0
9000d508:	f43f adc9 	beq.w	9000d09e <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000d50c:	462e      	mov	r6, r5
9000d50e:	e5cd      	b.n	9000d0ac <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d510:	4992      	ldr	r1, [pc, #584]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d512:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d514:	f001 0103 	and.w	r1, r1, #3
9000d518:	2903      	cmp	r1, #3
9000d51a:	f43f ac0c 	beq.w	9000cd36 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000d51e:	2101      	movs	r1, #1
9000d520:	f104 0008 	add.w	r0, r4, #8
9000d524:	f7ff f9ca 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000d528:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d52a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d52e:	b98d      	cbnz	r5, 9000d554 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000d530:	e6e4      	b.n	9000d2fc <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d532:	488a      	ldr	r0, [pc, #552]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d534:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000d536:	f000 0003 	and.w	r0, r0, #3
9000d53a:	2803      	cmp	r0, #3
9000d53c:	f43f ad7f 	beq.w	9000d03e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000d540:	f104 0008 	add.w	r0, r4, #8
9000d544:	f7ff f9ba 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000d548:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d54a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d54e:	2d00      	cmp	r5, #0
9000d550:	d13f      	bne.n	9000d5d2 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000d552:	e6ed      	b.n	9000d330 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000d554:	462e      	mov	r6, r5
9000d556:	f7ff bbf0 	b.w	9000cd3a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000d55a:	462e      	mov	r6, r5
9000d55c:	e583      	b.n	9000d066 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000d55e:	462e      	mov	r6, r5
9000d560:	f7ff bb65 	b.w	9000cc2e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000d564:	4f7d      	ldr	r7, [pc, #500]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d566:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000d568:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000d56a:	f021 0103 	bic.w	r1, r1, #3
9000d56e:	4301      	orrs	r1, r0
9000d570:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000d572:	e443      	b.n	9000cdfc <HAL_RCCEx_PeriphCLKConfig+0x378>
9000d574:	462e      	mov	r6, r5
9000d576:	f7ff bae9 	b.w	9000cb4c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000d57a:	462e      	mov	r6, r5
9000d57c:	f7ff bb11 	b.w	9000cba2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000d580:	462e      	mov	r6, r5
9000d582:	f7ff bb39 	b.w	9000cbf8 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000d586:	462e      	mov	r6, r5
9000d588:	f7ff bb7a 	b.w	9000cc80 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d58c:	4605      	mov	r5, r0
9000d58e:	e625      	b.n	9000d1dc <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d590:	4605      	mov	r5, r0
9000d592:	e635      	b.n	9000d200 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d594:	4605      	mov	r5, r0
9000d596:	e5fd      	b.n	9000d194 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d598:	4605      	mov	r5, r0
9000d59a:	e60d      	b.n	9000d1b8 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000d59c:	4f6f      	ldr	r7, [pc, #444]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d59e:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000d5a0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d5a2:	f021 0107 	bic.w	r1, r1, #7
9000d5a6:	4301      	orrs	r1, r0
9000d5a8:	6579      	str	r1, [r7, #84]	@ 0x54
9000d5aa:	e47d      	b.n	9000cea8 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000d5ac:	462e      	mov	r6, r5
9000d5ae:	f7ff bb8e 	b.w	9000ccce <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000d5b2:	462e      	mov	r6, r5
9000d5b4:	f7ff bbb1 	b.w	9000cd1a <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000d5b8:	4f68      	ldr	r7, [pc, #416]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d5ba:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000d5be:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d5c0:	f021 0107 	bic.w	r1, r1, #7
9000d5c4:	4301      	orrs	r1, r0
9000d5c6:	65b9      	str	r1, [r7, #88]	@ 0x58
9000d5c8:	e493      	b.n	9000cef2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000d5ca:	462e      	mov	r6, r5
9000d5cc:	e4ba      	b.n	9000cf44 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000d5ce:	462e      	mov	r6, r5
9000d5d0:	e50a      	b.n	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000d5d2:	462e      	mov	r6, r5
9000d5d4:	e535      	b.n	9000d042 <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000d5d6:	462e      	mov	r6, r5
9000d5d8:	e4dd      	b.n	9000cf96 <HAL_RCCEx_PeriphCLKConfig+0x512>
9000d5da:	462e      	mov	r6, r5
9000d5dc:	e443      	b.n	9000ce66 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d5de:	495f      	ldr	r1, [pc, #380]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d5e0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d5e2:	f001 0103 	and.w	r1, r1, #3
9000d5e6:	2903      	cmp	r1, #3
9000d5e8:	f43f ae2b 	beq.w	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000d5ec:	2102      	movs	r1, #2
9000d5ee:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d5f2:	f7ff f9d5 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d5f6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d5f8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d5fc:	2d00      	cmp	r5, #0
9000d5fe:	d1e4      	bne.n	9000d5ca <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000d600:	e498      	b.n	9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d602:	4956      	ldr	r1, [pc, #344]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d604:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d606:	f001 0103 	and.w	r1, r1, #3
9000d60a:	2903      	cmp	r1, #3
9000d60c:	f43f abc7 	beq.w	9000cd9e <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000d610:	2102      	movs	r1, #2
9000d612:	f104 0008 	add.w	r0, r4, #8
9000d616:	f7ff f951 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000d61a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d61c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d620:	2d00      	cmp	r5, #0
9000d622:	d19c      	bne.n	9000d55e <HAL_RCCEx_PeriphCLKConfig+0xada>
9000d624:	f7ff bafc 	b.w	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d628:	494c      	ldr	r1, [pc, #304]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d62a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d62c:	f001 0103 	and.w	r1, r1, #3
9000d630:	2903      	cmp	r1, #3
9000d632:	f43f ad16 	beq.w	9000d062 <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000d636:	2101      	movs	r1, #1
9000d638:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d63c:	f7ff f9b0 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d640:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d642:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d646:	2d00      	cmp	r5, #0
9000d648:	d187      	bne.n	9000d55a <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000d64a:	e646      	b.n	9000d2da <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d64c:	4943      	ldr	r1, [pc, #268]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d64e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d650:	f001 0103 	and.w	r1, r1, #3
9000d654:	2903      	cmp	r1, #3
9000d656:	f43f ae0e 	beq.w	9000d276 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000d65a:	2102      	movs	r1, #2
9000d65c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d660:	f7ff f99e 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d664:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d666:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d66a:	2d00      	cmp	r5, #0
9000d66c:	d1af      	bne.n	9000d5ce <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000d66e:	e4b3      	b.n	9000cfd8 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d670:	493a      	ldr	r1, [pc, #232]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d672:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d674:	f001 0103 	and.w	r1, r1, #3
9000d678:	2903      	cmp	r1, #3
9000d67a:	f000 8131 	beq.w	9000d8e0 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000d67e:	2102      	movs	r1, #2
9000d680:	f104 0008 	add.w	r0, r4, #8
9000d684:	f7ff f91a 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000d688:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d68a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d68e:	2d00      	cmp	r5, #0
9000d690:	f47f abb3 	bne.w	9000cdfa <HAL_RCCEx_PeriphCLKConfig+0x376>
9000d694:	e766      	b.n	9000d564 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d696:	4931      	ldr	r1, [pc, #196]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d698:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d69a:	f001 0103 	and.w	r1, r1, #3
9000d69e:	2903      	cmp	r1, #3
9000d6a0:	f43f addc 	beq.w	9000d25c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000d6a4:	2102      	movs	r1, #2
9000d6a6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d6aa:	f7ff f979 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d6ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d6b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d6b4:	2d00      	cmp	r5, #0
9000d6b6:	d18e      	bne.n	9000d5d6 <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000d6b8:	e465      	b.n	9000cf86 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d6ba:	4928      	ldr	r1, [pc, #160]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d6bc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d6be:	f001 0103 	and.w	r1, r1, #3
9000d6c2:	2903      	cmp	r1, #3
9000d6c4:	f43f ab83 	beq.w	9000cdce <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000d6c8:	2101      	movs	r1, #1
9000d6ca:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d6ce:	f7ff f967 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d6d2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d6d4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d6d8:	2d00      	cmp	r5, #0
9000d6da:	f47f af67 	bne.w	9000d5ac <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000d6de:	f7ff baef 	b.w	9000ccc0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d6e2:	491e      	ldr	r1, [pc, #120]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d6e4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d6e6:	f001 0103 	and.w	r1, r1, #3
9000d6ea:	2903      	cmp	r1, #3
9000d6ec:	f43f ab7a 	beq.w	9000cde4 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000d6f0:	2101      	movs	r1, #1
9000d6f2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d6f6:	f7ff f953 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d6fa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d6fc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d700:	2d00      	cmp	r5, #0
9000d702:	f47f af56 	bne.w	9000d5b2 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000d706:	f7ff bb00 	b.w	9000cd0a <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d70a:	4914      	ldr	r1, [pc, #80]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d70c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d70e:	f001 0103 	and.w	r1, r1, #3
9000d712:	2903      	cmp	r1, #3
9000d714:	f43f ab3d 	beq.w	9000cd92 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000d718:	2100      	movs	r1, #0
9000d71a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d71e:	f7ff f93f 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d722:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d724:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d728:	2d00      	cmp	r5, #0
9000d72a:	f47f af29 	bne.w	9000d580 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000d72e:	f7ff ba5b 	b.w	9000cbe8 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d732:	490a      	ldr	r1, [pc, #40]	@ (9000d75c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000d734:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d736:	f001 0103 	and.w	r1, r1, #3
9000d73a:	2903      	cmp	r1, #3
9000d73c:	f43f ab3a 	beq.w	9000cdb4 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000d740:	2100      	movs	r1, #0
9000d742:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d746:	f7ff f92b 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d74a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d74c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d750:	2d00      	cmp	r5, #0
9000d752:	f47f af18 	bne.w	9000d586 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000d756:	f7ff ba8c 	b.w	9000cc72 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000d75a:	bf00      	nop
9000d75c:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d760:	4973      	ldr	r1, [pc, #460]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d762:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d764:	f001 0103 	and.w	r1, r1, #3
9000d768:	2903      	cmp	r1, #3
9000d76a:	f43f ae07 	beq.w	9000d37c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000d76e:	2102      	movs	r1, #2
9000d770:	3028      	adds	r0, #40	@ 0x28
9000d772:	f7ff f915 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d776:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d778:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d77c:	2e00      	cmp	r6, #0
9000d77e:	f47f a9b0 	bne.w	9000cae2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d782:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000d784:	f7ff b9a6 	b.w	9000cad4 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d788:	4969      	ldr	r1, [pc, #420]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d78a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d78c:	f001 0103 	and.w	r1, r1, #3
9000d790:	2903      	cmp	r1, #3
9000d792:	f43f a9b2 	beq.w	9000cafa <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d796:	2100      	movs	r1, #0
9000d798:	f104 0008 	add.w	r0, r4, #8
9000d79c:	f7ff f88e 	bl	9000c8bc <RCCEx_PLL2_Config.part.0>
9000d7a0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d7a2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d7a6:	2d00      	cmp	r5, #0
9000d7a8:	f43f ae53 	beq.w	9000d452 <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000d7ac:	462e      	mov	r6, r5
9000d7ae:	f7ff b9a6 	b.w	9000cafe <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d7b2:	495f      	ldr	r1, [pc, #380]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d7b4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d7b6:	f001 0103 	and.w	r1, r1, #3
9000d7ba:	2903      	cmp	r1, #3
9000d7bc:	f43f a99d 	beq.w	9000cafa <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d7c0:	2100      	movs	r1, #0
9000d7c2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d7c6:	f7ff f8eb 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d7ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d7cc:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d7d0:	e63c      	b.n	9000d44c <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d7d2:	4957      	ldr	r1, [pc, #348]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d7d4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d7d6:	f001 0103 	and.w	r1, r1, #3
9000d7da:	2903      	cmp	r1, #3
9000d7dc:	f43f aac0 	beq.w	9000cd60 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000d7e0:	2100      	movs	r1, #0
9000d7e2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d7e6:	f7ff f8db 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d7ea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d7ec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d7f0:	2d00      	cmp	r5, #0
9000d7f2:	f47f aebf 	bne.w	9000d574 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000d7f6:	f7ff b9a2 	b.w	9000cb3e <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d7fa:	494d      	ldr	r1, [pc, #308]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d7fc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d7fe:	f001 0103 	and.w	r1, r1, #3
9000d802:	2903      	cmp	r1, #3
9000d804:	f43f aaba 	beq.w	9000cd7c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000d808:	2100      	movs	r1, #0
9000d80a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d80e:	f7ff f8c7 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d812:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d814:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d818:	2d00      	cmp	r5, #0
9000d81a:	f47f aeae 	bne.w	9000d57a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000d81e:	f7ff b9b8 	b.w	9000cb92 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d822:	4943      	ldr	r1, [pc, #268]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d824:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d826:	f001 0103 	and.w	r1, r1, #3
9000d82a:	2903      	cmp	r1, #3
9000d82c:	d041      	beq.n	9000d8b2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000d82e:	2101      	movs	r1, #1
9000d830:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d834:	f7ff f8b4 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d838:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d83a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d83e:	2d00      	cmp	r5, #0
9000d840:	f47f ab56 	bne.w	9000cef0 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000d844:	e6b8      	b.n	9000d5b8 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d846:	493a      	ldr	r1, [pc, #232]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d848:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d84a:	f001 0103 	and.w	r1, r1, #3
9000d84e:	2903      	cmp	r1, #3
9000d850:	d02b      	beq.n	9000d8aa <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000d852:	2101      	movs	r1, #1
9000d854:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d858:	f7ff f8a2 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d85c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d85e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d862:	2d00      	cmp	r5, #0
9000d864:	f47f ab1f 	bne.w	9000cea6 <HAL_RCCEx_PeriphCLKConfig+0x422>
9000d868:	e698      	b.n	9000d59c <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d86a:	4931      	ldr	r1, [pc, #196]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d86c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d86e:	f001 0103 	and.w	r1, r1, #3
9000d872:	2903      	cmp	r1, #3
9000d874:	f43f aaf5 	beq.w	9000ce62 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000d878:	2101      	movs	r1, #1
9000d87a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d87e:	f7ff f88f 	bl	9000c9a0 <RCCEx_PLL3_Config.part.0>
9000d882:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d884:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d888:	2d00      	cmp	r5, #0
9000d88a:	f47f aea6 	bne.w	9000d5da <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000d88e:	e56d      	b.n	9000d36c <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000d890:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d892:	462e      	mov	r6, r5
9000d894:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d898:	f7ff bab3 	b.w	9000ce02 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d89c:	4d24      	ldr	r5, [pc, #144]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d89e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000d8a0:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d8a4:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d8a6:	f7ff b915 	b.w	9000cad4 <HAL_RCCEx_PeriphCLKConfig+0x50>
9000d8aa:	2601      	movs	r6, #1
9000d8ac:	4635      	mov	r5, r6
9000d8ae:	f7ff bafb 	b.w	9000cea8 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000d8b2:	2601      	movs	r6, #1
9000d8b4:	4635      	mov	r5, r6
9000d8b6:	f7ff bb1c 	b.w	9000cef2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000d8ba:	2601      	movs	r6, #1
9000d8bc:	f7ff bb9c 	b.w	9000cff8 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000d8c0:	2601      	movs	r6, #1
9000d8c2:	f7ff bba7 	b.w	9000d014 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d8c6:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000d8ca:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d8cc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d8d0:	f7ff bba0 	b.w	9000d014 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d8d4:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d8d8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d8dc:	f7ff bb8c 	b.w	9000cff8 <HAL_RCCEx_PeriphCLKConfig+0x574>
9000d8e0:	2601      	movs	r6, #1
9000d8e2:	4635      	mov	r5, r6
9000d8e4:	f7ff ba8a 	b.w	9000cdfc <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000d8e8:	f7fa fa28 	bl	90007d3c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d8ec:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000d8f0:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d8f2:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d8f6:	e004      	b.n	9000d902 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d8f8:	f7fa fa20 	bl	90007d3c <HAL_GetTick>
9000d8fc:	1bc0      	subs	r0, r0, r7
9000d8fe:	4548      	cmp	r0, r9
9000d900:	d810      	bhi.n	9000d924 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d902:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000d906:	079b      	lsls	r3, r3, #30
9000d908:	d5f6      	bpl.n	9000d8f8 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d90a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d90e:	e566      	b.n	9000d3de <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000d910:	4807      	ldr	r0, [pc, #28]	@ (9000d930 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d912:	4a08      	ldr	r2, [pc, #32]	@ (9000d934 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000d914:	6901      	ldr	r1, [r0, #16]
9000d916:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000d91a:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000d91e:	430a      	orrs	r2, r1
9000d920:	6102      	str	r2, [r0, #16]
9000d922:	e567      	b.n	9000d3f4 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000d924:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d926:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d92a:	4635      	mov	r5, r6
9000d92c:	f7ff ba69 	b.w	9000ce02 <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000d930:	58024400 	.word	0x58024400
9000d934:	00ffffcf 	.word	0x00ffffcf

9000d938 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d938:	4a47      	ldr	r2, [pc, #284]	@ (9000da58 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000d93a:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d93c:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000d93e:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000d940:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000d942:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000d946:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d94a:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000d94c:	d05b      	beq.n	9000da06 <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d94e:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000d952:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d956:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d95a:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d95e:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000d962:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d964:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d968:	ee06 1a90 	vmov	s13, r1
9000d96c:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000d970:	d003      	beq.n	9000d97a <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000d972:	2c02      	cmp	r4, #2
9000d974:	d06a      	beq.n	9000da4c <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000d976:	2c00      	cmp	r4, #0
9000d978:	d04a      	beq.n	9000da10 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d97a:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000da5c <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000d97e:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000d982:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d984:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d988:	ee07 3a90 	vmov	s15, r3
9000d98c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000d990:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d994:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000d998:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000d99c:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000d9a0:	4a2d      	ldr	r2, [pc, #180]	@ (9000da58 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000d9a2:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000d9a6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d9a8:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000d9ac:	ee07 3a10 	vmov	s14, r3
9000d9b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000d9b4:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000d9b6:	ee37 7a06 	vadd.f32	s14, s14, s12
9000d9ba:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000d9be:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000d9c2:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000d9c6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d9c8:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000d9cc:	ee07 3a10 	vmov	s14, r3
9000d9d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000d9d4:	ee37 7a06 	vadd.f32	s14, s14, s12
9000d9d8:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000d9dc:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000d9e0:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000d9e4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d9e6:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000d9ea:	ee06 3a90 	vmov	s13, r3
9000d9ee:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000d9f2:	ee76 6a86 	vadd.f32	s13, s13, s12
9000d9f6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000d9fa:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000d9fe:	ee17 3a90 	vmov	r3, s15
9000da02:	6083      	str	r3, [r0, #8]
}
9000da04:	4770      	bx	lr
9000da06:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000da08:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000da0c:	6083      	str	r3, [r0, #8]
}
9000da0e:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000da10:	6813      	ldr	r3, [r2, #0]
9000da12:	069b      	lsls	r3, r3, #26
9000da14:	d51d      	bpl.n	9000da52 <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000da16:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000da18:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000da1c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000da1e:	4910      	ldr	r1, [pc, #64]	@ (9000da60 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000da20:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000da24:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000da28:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000da2a:	ee07 3a90 	vmov	s15, r3
9000da2e:	ee06 1a10 	vmov	s12, r1
9000da32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000da36:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000da3a:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000da3e:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000da42:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000da46:	ee67 7a87 	vmul.f32	s15, s15, s14
9000da4a:	e7a9      	b.n	9000d9a0 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000da4c:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000da64 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000da50:	e795      	b.n	9000d97e <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000da52:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000da68 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000da56:	e792      	b.n	9000d97e <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000da58:	58024400 	.word	0x58024400
9000da5c:	4a742400 	.word	0x4a742400
9000da60:	03d09000 	.word	0x03d09000
9000da64:	4bbebc20 	.word	0x4bbebc20
9000da68:	4c742400 	.word	0x4c742400

9000da6c <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000da6c:	4a47      	ldr	r2, [pc, #284]	@ (9000db8c <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000da6e:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000da70:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000da72:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000da74:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000da76:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000da7a:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000da7e:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000da80:	d05b      	beq.n	9000db3a <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000da82:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000da86:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000da8a:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000da8e:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000da92:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000da96:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000da98:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000da9c:	ee06 1a90 	vmov	s13, r1
9000daa0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000daa4:	d003      	beq.n	9000daae <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000daa6:	2c02      	cmp	r4, #2
9000daa8:	d06a      	beq.n	9000db80 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000daaa:	2c00      	cmp	r4, #0
9000daac:	d04a      	beq.n	9000db44 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000daae:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000db90 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000dab2:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000dab6:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000dab8:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000dabc:	ee07 3a90 	vmov	s15, r3
9000dac0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000dac4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dac8:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000dacc:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000dad0:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000dad4:	4a2d      	ldr	r2, [pc, #180]	@ (9000db8c <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000dad6:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000dada:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000dadc:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000dae0:	ee07 3a10 	vmov	s14, r3
9000dae4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000dae8:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000daea:	ee37 7a06 	vadd.f32	s14, s14, s12
9000daee:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000daf2:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000daf6:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000dafa:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000dafc:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000db00:	ee07 3a10 	vmov	s14, r3
9000db04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000db08:	ee37 7a06 	vadd.f32	s14, s14, s12
9000db0c:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000db10:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000db14:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000db18:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000db1a:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000db1e:	ee06 3a90 	vmov	s13, r3
9000db22:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000db26:	ee76 6a86 	vadd.f32	s13, s13, s12
9000db2a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000db2e:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000db32:	ee17 3a90 	vmov	r3, s15
9000db36:	6083      	str	r3, [r0, #8]
}
9000db38:	4770      	bx	lr
9000db3a:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000db3c:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000db40:	6083      	str	r3, [r0, #8]
}
9000db42:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000db44:	6813      	ldr	r3, [r2, #0]
9000db46:	069b      	lsls	r3, r3, #26
9000db48:	d51d      	bpl.n	9000db86 <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000db4a:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db4c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000db50:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000db52:	4910      	ldr	r1, [pc, #64]	@ (9000db94 <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000db54:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db58:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000db5c:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db5e:	ee07 3a90 	vmov	s15, r3
9000db62:	ee06 1a10 	vmov	s12, r1
9000db66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000db6a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000db6e:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000db72:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000db76:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000db7a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000db7e:	e7a9      	b.n	9000dad4 <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db80:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000db98 <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000db84:	e795      	b.n	9000dab2 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db86:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000db9c <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000db8a:	e792      	b.n	9000dab2 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000db8c:	58024400 	.word	0x58024400
9000db90:	4a742400 	.word	0x4a742400
9000db94:	03d09000 	.word	0x03d09000
9000db98:	4bbebc20 	.word	0x4bbebc20
9000db9c:	4c742400 	.word	0x4c742400

9000dba0 <HAL_RCCEx_GetPLL1ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dba0:	4a47      	ldr	r2, [pc, #284]	@ (9000dcc0 <HAL_RCCEx_GetPLL1ClockFreq+0x120>)
{
9000dba2:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dba4:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll1m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
9000dba6:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll1fracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
9000dba8:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll1m != 0U)
9000dbaa:	f415 7f7c 	tst.w	r5, #1008	@ 0x3f0
  pll1m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
9000dbae:	f3c5 1305 	ubfx	r3, r5, #4, #6
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dbb2:	6b51      	ldr	r1, [r2, #52]	@ 0x34
  if (pll1m != 0U)
9000dbb4:	d05b      	beq.n	9000dc6e <HAL_RCCEx_GetPLL1ClockFreq+0xce>
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dbb6:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll1fracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
9000dbba:	f006 0601 	and.w	r6, r6, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dbbe:	f004 0403 	and.w	r4, r4, #3
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dbc2:	ee07 3a90 	vmov	s15, r3
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dbc6:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000dbca:	2c01      	cmp	r4, #1
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dbcc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000dbd0:	ee06 1a90 	vmov	s13, r1
9000dbd4:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000dbd8:	d06f      	beq.n	9000dcba <HAL_RCCEx_GetPLL1ClockFreq+0x11a>
9000dbda:	2c02      	cmp	r4, #2
9000dbdc:	d06a      	beq.n	9000dcb4 <HAL_RCCEx_GetPLL1ClockFreq+0x114>
9000dbde:	2c00      	cmp	r4, #0
9000dbe0:	d04a      	beq.n	9000dc78 <HAL_RCCEx_GetPLL1ClockFreq+0xd8>
        pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dbe2:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000dcc4 <HAL_RCCEx_GetPLL1ClockFreq+0x124>
9000dbe6:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000dbea:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000dbec:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000dbf0:	ee07 3a90 	vmov	s15, r3
9000dbf4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000dbf8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dbfc:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000dc00:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000dc04:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9)  + (float_t)1)) ;
9000dc08:	4a2d      	ldr	r2, [pc, #180]	@ (9000dcc0 <HAL_RCCEx_GetPLL1ClockFreq+0x120>)
9000dc0a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000dc0e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000dc10:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000dc14:	ee07 3a10 	vmov	s14, r3
9000dc18:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000dc1c:	bc70      	pop	{r4, r5, r6}
    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9)  + (float_t)1)) ;
9000dc1e:	ee37 7a06 	vadd.f32	s14, s14, s12
9000dc22:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000dc26:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000dc2a:	edc0 6a00 	vstr	s13, [r0]
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> 16) + (float_t)1)) ;
9000dc2e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000dc30:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000dc34:	ee07 3a10 	vmov	s14, r3
9000dc38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000dc3c:	ee37 7a06 	vadd.f32	s14, s14, s12
9000dc40:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000dc44:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000dc48:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> 24) + (float_t)1)) ;
9000dc4c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000dc4e:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000dc52:	ee06 3a90 	vmov	s13, r3
9000dc56:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000dc5a:	ee76 6a86 	vadd.f32	s13, s13, s12
9000dc5e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000dc62:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000dc66:	ee17 3a90 	vmov	r3, s15
9000dc6a:	6083      	str	r3, [r0, #8]
}
9000dc6c:	4770      	bx	lr
9000dc6e:	bc70      	pop	{r4, r5, r6}
    PLL1_Clocks->PLL1_P_Frequency = 0U;
9000dc70:	e9c0 3300 	strd	r3, r3, [r0]
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> 24) + (float_t)1)) ;
9000dc74:	6083      	str	r3, [r0, #8]
}
9000dc76:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dc78:	6813      	ldr	r3, [r2, #0]
9000dc7a:	069b      	lsls	r3, r3, #26
9000dc7c:	d5b1      	bpl.n	9000dbe2 <HAL_RCCEx_GetPLL1ClockFreq+0x42>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dc7e:	6814      	ldr	r4, [r2, #0]
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dc80:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000dc84:	6b13      	ldr	r3, [r2, #48]	@ 0x30
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dc86:	4910      	ldr	r1, [pc, #64]	@ (9000dcc8 <HAL_RCCEx_GetPLL1ClockFreq+0x128>)
9000dc88:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dc8c:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dc90:	40d1      	lsrs	r1, r2
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dc92:	ee07 3a90 	vmov	s15, r3
9000dc96:	ee06 1a10 	vmov	s12, r1
9000dc9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dc9e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000dca2:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000dca6:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000dcaa:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000dcae:	ee67 7a87 	vmul.f32	s15, s15, s14
9000dcb2:	e7a9      	b.n	9000dc08 <HAL_RCCEx_GetPLL1ClockFreq+0x68>
        pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dcb4:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000dccc <HAL_RCCEx_GetPLL1ClockFreq+0x12c>
9000dcb8:	e795      	b.n	9000dbe6 <HAL_RCCEx_GetPLL1ClockFreq+0x46>
        pll1vco = ((float_t)CSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dcba:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000dcd0 <HAL_RCCEx_GetPLL1ClockFreq+0x130>
9000dcbe:	e792      	b.n	9000dbe6 <HAL_RCCEx_GetPLL1ClockFreq+0x46>
9000dcc0:	58024400 	.word	0x58024400
9000dcc4:	4c742400 	.word	0x4c742400
9000dcc8:	03d09000 	.word	0x03d09000
9000dccc:	4bbebc20 	.word	0x4bbebc20
9000dcd0:	4a742400 	.word	0x4a742400

9000dcd4 <HAL_RCCEx_GetPeriphCLKFreq>:
  if (PeriphClk == RCC_PERIPHCLK_SAI1)
9000dcd4:	f5a0 7380 	sub.w	r3, r0, #256	@ 0x100
9000dcd8:	430b      	orrs	r3, r1
{
9000dcda:	b500      	push	{lr}
9000dcdc:	b085      	sub	sp, #20
  if (PeriphClk == RCC_PERIPHCLK_SAI1)
9000dcde:	f000 8083 	beq.w	9000dde8 <HAL_RCCEx_GetPeriphCLKFreq+0x114>
  else if (PeriphClk == RCC_PERIPHCLK_SAI23)
9000dce2:	f5a0 7300 	sub.w	r3, r0, #512	@ 0x200
9000dce6:	430b      	orrs	r3, r1
9000dce8:	d038      	beq.n	9000dd5c <HAL_RCCEx_GetPeriphCLKFreq+0x88>
  else if (PeriphClk == RCC_PERIPHCLK_SAI4A)
9000dcea:	f5a0 6380 	sub.w	r3, r0, #1024	@ 0x400
9000dcee:	430b      	orrs	r3, r1
9000dcf0:	f000 80e6 	beq.w	9000dec0 <HAL_RCCEx_GetPeriphCLKFreq+0x1ec>
  else if (PeriphClk == RCC_PERIPHCLK_SAI4B)
9000dcf4:	f5a0 6300 	sub.w	r3, r0, #2048	@ 0x800
9000dcf8:	430b      	orrs	r3, r1
9000dcfa:	f000 8089 	beq.w	9000de10 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
  else if (PeriphClk == RCC_PERIPHCLK_SPI123)
9000dcfe:	f5a0 5380 	sub.w	r3, r0, #4096	@ 0x1000
9000dd02:	430b      	orrs	r3, r1
9000dd04:	d060      	beq.n	9000ddc8 <HAL_RCCEx_GetPeriphCLKFreq+0xf4>
  else if (PeriphClk == RCC_PERIPHCLK_SPI45)
9000dd06:	f5a0 5300 	sub.w	r3, r0, #8192	@ 0x2000
9000dd0a:	430b      	orrs	r3, r1
9000dd0c:	f000 8112 	beq.w	9000df34 <HAL_RCCEx_GetPeriphCLKFreq+0x260>
  else if (PeriphClk == RCC_PERIPHCLK_ADC)
9000dd10:	f5a0 2300 	sub.w	r3, r0, #524288	@ 0x80000
9000dd14:	430b      	orrs	r3, r1
9000dd16:	f000 80a3 	beq.w	9000de60 <HAL_RCCEx_GetPeriphCLKFreq+0x18c>
  else if (PeriphClk == RCC_PERIPHCLK_SDMMC)
9000dd1a:	f5a0 3380 	sub.w	r3, r0, #65536	@ 0x10000
9000dd1e:	430b      	orrs	r3, r1
9000dd20:	f000 80fa 	beq.w	9000df18 <HAL_RCCEx_GetPeriphCLKFreq+0x244>
  else if (PeriphClk == RCC_PERIPHCLK_SPI6)
9000dd24:	f5a0 4380 	sub.w	r3, r0, #16384	@ 0x4000
9000dd28:	430b      	orrs	r3, r1
9000dd2a:	f000 8143 	beq.w	9000dfb4 <HAL_RCCEx_GetPeriphCLKFreq+0x2e0>
  else if (PeriphClk == RCC_PERIPHCLK_FDCAN)
9000dd2e:	f5a0 4000 	sub.w	r0, r0, #32768	@ 0x8000
9000dd32:	4308      	orrs	r0, r1
9000dd34:	d137      	bne.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
    srcclk = __HAL_RCC_GET_FDCAN_SOURCE();
9000dd36:	4a9a      	ldr	r2, [pc, #616]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000dd38:	6d13      	ldr	r3, [r2, #80]	@ 0x50
9000dd3a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
    switch (srcclk)
9000dd3e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
9000dd42:	f000 8084 	beq.w	9000de4e <HAL_RCCEx_GetPeriphCLKFreq+0x17a>
9000dd46:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
9000dd4a:	f000 8157 	beq.w	9000dffc <HAL_RCCEx_GetPeriphCLKFreq+0x328>
9000dd4e:	bb53      	cbnz	r3, 9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
9000dd50:	6810      	ldr	r0, [r2, #0]
9000dd52:	f410 3000 	ands.w	r0, r0, #131072	@ 0x20000
9000dd56:	d044      	beq.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          frequency = HSE_VALUE;
9000dd58:	4892      	ldr	r0, [pc, #584]	@ (9000dfa4 <HAL_RCCEx_GetPeriphCLKFreq+0x2d0>)
9000dd5a:	e042      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    saiclocksource = __HAL_RCC_GET_SAI23_SOURCE();
9000dd5c:	4a90      	ldr	r2, [pc, #576]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000dd5e:	6d13      	ldr	r3, [r2, #80]	@ 0x50
9000dd60:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
    switch (saiclocksource)
9000dd64:	2b80      	cmp	r3, #128	@ 0x80
9000dd66:	f000 80a6 	beq.w	9000deb6 <HAL_RCCEx_GetPeriphCLKFreq+0x1e2>
9000dd6a:	d920      	bls.n	9000ddae <HAL_RCCEx_GetPeriphCLKFreq+0xda>
9000dd6c:	2bc0      	cmp	r3, #192	@ 0xc0
9000dd6e:	d037      	beq.n	9000dde0 <HAL_RCCEx_GetPeriphCLKFreq+0x10c>
9000dd70:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000dd74:	d117      	bne.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
9000dd76:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
9000dd78:	6811      	ldr	r1, [r2, #0]
        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
9000dd7a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
9000dd7e:	0749      	lsls	r1, r1, #29
9000dd80:	d502      	bpl.n	9000dd88 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
9000dd82:	2b00      	cmp	r3, #0
9000dd84:	f000 80c2 	beq.w	9000df0c <HAL_RCCEx_GetPeriphCLKFreq+0x238>
        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
9000dd88:	4a85      	ldr	r2, [pc, #532]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000dd8a:	6812      	ldr	r2, [r2, #0]
9000dd8c:	05d0      	lsls	r0, r2, #23
9000dd8e:	d503      	bpl.n	9000dd98 <HAL_RCCEx_GetPeriphCLKFreq+0xc4>
9000dd90:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
9000dd94:	f000 8102 	beq.w	9000df9c <HAL_RCCEx_GetPeriphCLKFreq+0x2c8>
        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
9000dd98:	4a81      	ldr	r2, [pc, #516]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000dd9a:	6812      	ldr	r2, [r2, #0]
9000dd9c:	0391      	lsls	r1, r2, #14
9000dd9e:	d502      	bpl.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
9000dda0:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
9000dda4:	d0d8      	beq.n	9000dd58 <HAL_RCCEx_GetPeriphCLKFreq+0x84>
          frequency = 0;
9000dda6:	2000      	movs	r0, #0
}
9000dda8:	b005      	add	sp, #20
9000ddaa:	f85d fb04 	ldr.w	pc, [sp], #4
    switch (saiclocksource)
9000ddae:	2b00      	cmp	r3, #0
9000ddb0:	d04d      	beq.n	9000de4e <HAL_RCCEx_GetPeriphCLKFreq+0x17a>
9000ddb2:	2b40      	cmp	r3, #64	@ 0x40
9000ddb4:	d1f7      	bne.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
9000ddb6:	6810      	ldr	r0, [r2, #0]
9000ddb8:	f010 6000 	ands.w	r0, r0, #134217728	@ 0x8000000
9000ddbc:	d011      	beq.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000ddbe:	a801      	add	r0, sp, #4
9000ddc0:	f7ff fdba 	bl	9000d938 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
9000ddc4:	9801      	ldr	r0, [sp, #4]
9000ddc6:	e00c      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    srcclk = __HAL_RCC_GET_SPI123_SOURCE();
9000ddc8:	4a75      	ldr	r2, [pc, #468]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000ddca:	6d13      	ldr	r3, [r2, #80]	@ 0x50
9000ddcc:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
    switch (srcclk)
9000ddd0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
9000ddd4:	d06f      	beq.n	9000deb6 <HAL_RCCEx_GetPeriphCLKFreq+0x1e2>
9000ddd6:	d938      	bls.n	9000de4a <HAL_RCCEx_GetPeriphCLKFreq+0x176>
9000ddd8:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
9000dddc:	f040 8088 	bne.w	9000def0 <HAL_RCCEx_GetPeriphCLKFreq+0x21c>
        frequency = EXTERNAL_CLOCK_VALUE;
9000dde0:	4871      	ldr	r0, [pc, #452]	@ (9000dfa8 <HAL_RCCEx_GetPeriphCLKFreq+0x2d4>)
}
9000dde2:	b005      	add	sp, #20
9000dde4:	f85d fb04 	ldr.w	pc, [sp], #4
    saiclocksource = __HAL_RCC_GET_SAI1_SOURCE();
9000dde8:	4b6d      	ldr	r3, [pc, #436]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000ddea:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9000ddec:	f003 0307 	and.w	r3, r3, #7
    switch (saiclocksource)
9000ddf0:	2b04      	cmp	r3, #4
9000ddf2:	d8d8      	bhi.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
9000ddf4:	a201      	add	r2, pc, #4	@ (adr r2, 9000ddfc <HAL_RCCEx_GetPeriphCLKFreq+0x128>)
9000ddf6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000ddfa:	bf00      	nop
9000ddfc:	9000de9f 	.word	0x9000de9f
9000de00:	9000de7b 	.word	0x9000de7b
9000de04:	9000de8b 	.word	0x9000de8b
9000de08:	9000dde1 	.word	0x9000dde1
9000de0c:	9000de87 	.word	0x9000de87
    saiclocksource = __HAL_RCC_GET_SAI4B_SOURCE();
9000de10:	4a63      	ldr	r2, [pc, #396]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000de12:	6d93      	ldr	r3, [r2, #88]	@ 0x58
9000de14:	f003 63e0 	and.w	r3, r3, #117440512	@ 0x7000000
    switch (saiclocksource)
9000de18:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000de1c:	d04b      	beq.n	9000deb6 <HAL_RCCEx_GetPeriphCLKFreq+0x1e2>
9000de1e:	d944      	bls.n	9000deaa <HAL_RCCEx_GetPeriphCLKFreq+0x1d6>
9000de20:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
9000de24:	d0dc      	beq.n	9000dde0 <HAL_RCCEx_GetPeriphCLKFreq+0x10c>
9000de26:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
9000de2a:	d1bc      	bne.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
9000de2c:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
9000de2e:	6812      	ldr	r2, [r2, #0]
        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
9000de30:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
9000de34:	0752      	lsls	r2, r2, #29
9000de36:	d5a7      	bpl.n	9000dd88 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
9000de38:	2b00      	cmp	r3, #0
9000de3a:	d1a5      	bne.n	9000dd88 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000de3c:	4b58      	ldr	r3, [pc, #352]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000de3e:	485b      	ldr	r0, [pc, #364]	@ (9000dfac <HAL_RCCEx_GetPeriphCLKFreq+0x2d8>)
9000de40:	681b      	ldr	r3, [r3, #0]
9000de42:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000de46:	40d8      	lsrs	r0, r3
9000de48:	e7cb      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    switch (srcclk)
9000de4a:	2b00      	cmp	r3, #0
9000de4c:	d154      	bne.n	9000def8 <HAL_RCCEx_GetPeriphCLKFreq+0x224>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
9000de4e:	6810      	ldr	r0, [r2, #0]
9000de50:	f010 7000 	ands.w	r0, r0, #33554432	@ 0x2000000
9000de54:	d0c5      	beq.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
9000de56:	a801      	add	r0, sp, #4
9000de58:	f7ff fea2 	bl	9000dba0 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
9000de5c:	9802      	ldr	r0, [sp, #8]
9000de5e:	e7c0      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    srcclk = __HAL_RCC_GET_ADC_SOURCE();
9000de60:	4a4f      	ldr	r2, [pc, #316]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000de62:	6d93      	ldr	r3, [r2, #88]	@ 0x58
9000de64:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
    switch (srcclk)
9000de68:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000de6c:	f000 80d0 	beq.w	9000e010 <HAL_RCCEx_GetPeriphCLKFreq+0x33c>
9000de70:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
9000de74:	d0da      	beq.n	9000de2c <HAL_RCCEx_GetPeriphCLKFreq+0x158>
9000de76:	2b00      	cmp	r3, #0
9000de78:	d195      	bne.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
9000de7a:	4b49      	ldr	r3, [pc, #292]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000de7c:	6818      	ldr	r0, [r3, #0]
9000de7e:	f010 6000 	ands.w	r0, r0, #134217728	@ 0x8000000
9000de82:	d0ae      	beq.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
9000de84:	e79b      	b.n	9000ddbe <HAL_RCCEx_GetPeriphCLKFreq+0xea>
        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
9000de86:	4a46      	ldr	r2, [pc, #280]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000de88:	e775      	b.n	9000dd76 <HAL_RCCEx_GetPeriphCLKFreq+0xa2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
9000de8a:	4b45      	ldr	r3, [pc, #276]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000de8c:	6818      	ldr	r0, [r3, #0]
9000de8e:	f010 5000 	ands.w	r0, r0, #536870912	@ 0x20000000
9000de92:	d0a6      	beq.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000de94:	a801      	add	r0, sp, #4
9000de96:	f7ff fde9 	bl	9000da6c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
9000de9a:	9801      	ldr	r0, [sp, #4]
9000de9c:	e7a1      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
9000de9e:	4b40      	ldr	r3, [pc, #256]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000dea0:	6818      	ldr	r0, [r3, #0]
9000dea2:	f010 7000 	ands.w	r0, r0, #33554432	@ 0x2000000
9000dea6:	d09c      	beq.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
9000dea8:	e7d5      	b.n	9000de56 <HAL_RCCEx_GetPeriphCLKFreq+0x182>
    switch (saiclocksource)
9000deaa:	2b00      	cmp	r3, #0
9000deac:	d0cf      	beq.n	9000de4e <HAL_RCCEx_GetPeriphCLKFreq+0x17a>
9000deae:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
9000deb2:	d080      	beq.n	9000ddb6 <HAL_RCCEx_GetPeriphCLKFreq+0xe2>
9000deb4:	e777      	b.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
9000deb6:	6810      	ldr	r0, [r2, #0]
9000deb8:	f010 5000 	ands.w	r0, r0, #536870912	@ 0x20000000
9000debc:	d091      	beq.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
9000debe:	e7e9      	b.n	9000de94 <HAL_RCCEx_GetPeriphCLKFreq+0x1c0>
    saiclocksource = __HAL_RCC_GET_SAI4A_SOURCE();
9000dec0:	4a37      	ldr	r2, [pc, #220]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000dec2:	6d93      	ldr	r3, [r2, #88]	@ 0x58
9000dec4:	f403 0360 	and.w	r3, r3, #14680064	@ 0xe00000
    switch (saiclocksource)
9000dec8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
9000decc:	d0f3      	beq.n	9000deb6 <HAL_RCCEx_GetPeriphCLKFreq+0x1e2>
9000dece:	d806      	bhi.n	9000dede <HAL_RCCEx_GetPeriphCLKFreq+0x20a>
9000ded0:	2b00      	cmp	r3, #0
9000ded2:	d0bc      	beq.n	9000de4e <HAL_RCCEx_GetPeriphCLKFreq+0x17a>
9000ded4:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
9000ded8:	f43f af6d 	beq.w	9000ddb6 <HAL_RCCEx_GetPeriphCLKFreq+0xe2>
9000dedc:	e763      	b.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
9000dede:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
9000dee2:	f43f af7d 	beq.w	9000dde0 <HAL_RCCEx_GetPeriphCLKFreq+0x10c>
9000dee6:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
9000deea:	f43f af44 	beq.w	9000dd76 <HAL_RCCEx_GetPeriphCLKFreq+0xa2>
9000deee:	e75a      	b.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
    switch (srcclk)
9000def0:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
9000def4:	d09a      	beq.n	9000de2c <HAL_RCCEx_GetPeriphCLKFreq+0x158>
9000def6:	e756      	b.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
9000def8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000defc:	f43f af5b 	beq.w	9000ddb6 <HAL_RCCEx_GetPeriphCLKFreq+0xe2>
9000df00:	e751      	b.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
9000df02:	6810      	ldr	r0, [r2, #0]
9000df04:	f010 0004 	ands.w	r0, r0, #4
9000df08:	f43f af6b 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000df0c:	6813      	ldr	r3, [r2, #0]
9000df0e:	4827      	ldr	r0, [pc, #156]	@ (9000dfac <HAL_RCCEx_GetPeriphCLKFreq+0x2d8>)
9000df10:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000df14:	40d8      	lsrs	r0, r3
9000df16:	e764      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
9000df18:	4b21      	ldr	r3, [pc, #132]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000df1a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
    switch (srcclk)
9000df1c:	03d2      	lsls	r2, r2, #15
9000df1e:	d5bf      	bpl.n	9000dea0 <HAL_RCCEx_GetPeriphCLKFreq+0x1cc>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
9000df20:	6818      	ldr	r0, [r3, #0]
9000df22:	f010 6000 	ands.w	r0, r0, #134217728	@ 0x8000000
9000df26:	f43f af5c 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000df2a:	a801      	add	r0, sp, #4
9000df2c:	f7ff fd04 	bl	9000d938 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_R_Frequency;
9000df30:	9803      	ldr	r0, [sp, #12]
9000df32:	e756      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    srcclk = __HAL_RCC_GET_SPI45_SOURCE();
9000df34:	4a1a      	ldr	r2, [pc, #104]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000df36:	6d13      	ldr	r3, [r2, #80]	@ 0x50
9000df38:	f403 23e0 	and.w	r3, r3, #458752	@ 0x70000
    switch (srcclk)
9000df3c:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
9000df40:	d0df      	beq.n	9000df02 <HAL_RCCEx_GetPeriphCLKFreq+0x22e>
9000df42:	d810      	bhi.n	9000df66 <HAL_RCCEx_GetPeriphCLKFreq+0x292>
9000df44:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000df48:	d058      	beq.n	9000dffc <HAL_RCCEx_GetPeriphCLKFreq+0x328>
9000df4a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
9000df4e:	d118      	bne.n	9000df82 <HAL_RCCEx_GetPeriphCLKFreq+0x2ae>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
9000df50:	4b13      	ldr	r3, [pc, #76]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000df52:	6818      	ldr	r0, [r3, #0]
9000df54:	f010 5000 	ands.w	r0, r0, #536870912	@ 0x20000000
9000df58:	f43f af43 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000df5c:	a801      	add	r0, sp, #4
9000df5e:	f7ff fd85 	bl	9000da6c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
9000df62:	9802      	ldr	r0, [sp, #8]
9000df64:	e73d      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    switch (srcclk)
9000df66:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
9000df6a:	d012      	beq.n	9000df92 <HAL_RCCEx_GetPeriphCLKFreq+0x2be>
9000df6c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000df70:	f47f af19 	bne.w	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
9000df74:	4b0a      	ldr	r3, [pc, #40]	@ (9000dfa0 <HAL_RCCEx_GetPeriphCLKFreq+0x2cc>)
9000df76:	6818      	ldr	r0, [r3, #0]
9000df78:	f410 3000 	ands.w	r0, r0, #131072	@ 0x20000
9000df7c:	f43f af31 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
9000df80:	e6ea      	b.n	9000dd58 <HAL_RCCEx_GetPeriphCLKFreq+0x84>
    switch (srcclk)
9000df82:	2b00      	cmp	r3, #0
9000df84:	f47f af0f 	bne.w	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
}
9000df88:	b005      	add	sp, #20
9000df8a:	f85d eb04 	ldr.w	lr, [sp], #4
        frequency = HAL_RCC_GetPCLK1Freq();
9000df8e:	f7fe bbd9 	b.w	9000c744 <HAL_RCC_GetPCLK1Freq>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
9000df92:	6810      	ldr	r0, [r2, #0]
9000df94:	f410 7080 	ands.w	r0, r0, #256	@ 0x100
9000df98:	f43f af23 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          frequency = CSI_VALUE;
9000df9c:	4804      	ldr	r0, [pc, #16]	@ (9000dfb0 <HAL_RCCEx_GetPeriphCLKFreq+0x2dc>)
9000df9e:	e720      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
9000dfa0:	58024400 	.word	0x58024400
9000dfa4:	017d7840 	.word	0x017d7840
9000dfa8:	00bb8000 	.word	0x00bb8000
9000dfac:	03d09000 	.word	0x03d09000
9000dfb0:	003d0900 	.word	0x003d0900
    srcclk = __HAL_RCC_GET_SPI6_SOURCE();
9000dfb4:	4b28      	ldr	r3, [pc, #160]	@ (9000e058 <HAL_RCCEx_GetPeriphCLKFreq+0x384>)
9000dfb6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
9000dfb8:	f003 43e0 	and.w	r3, r3, #1879048192	@ 0x70000000
    switch (srcclk)
9000dfbc:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
9000dfc0:	d037      	beq.n	9000e032 <HAL_RCCEx_GetPeriphCLKFreq+0x35e>
9000dfc2:	d814      	bhi.n	9000dfee <HAL_RCCEx_GetPeriphCLKFreq+0x31a>
9000dfc4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
9000dfc8:	d03f      	beq.n	9000e04a <HAL_RCCEx_GetPeriphCLKFreq+0x376>
9000dfca:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
9000dfce:	d0bf      	beq.n	9000df50 <HAL_RCCEx_GetPeriphCLKFreq+0x27c>
9000dfd0:	2b00      	cmp	r3, #0
9000dfd2:	f47f aee8 	bne.w	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000dfd6:	f7fe fb75 	bl	9000c6c4 <HAL_RCC_GetHCLKFreq>
9000dfda:	4b1f      	ldr	r3, [pc, #124]	@ (9000e058 <HAL_RCCEx_GetPeriphCLKFreq+0x384>)
9000dfdc:	4a1f      	ldr	r2, [pc, #124]	@ (9000e05c <HAL_RCCEx_GetPeriphCLKFreq+0x388>)
9000dfde:	6a1b      	ldr	r3, [r3, #32]
9000dfe0:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000dfe4:	5cd3      	ldrb	r3, [r2, r3]
9000dfe6:	f003 031f 	and.w	r3, r3, #31
9000dfea:	40d8      	lsrs	r0, r3
        break;
9000dfec:	e6f9      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
    switch (srcclk)
9000dfee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000dff2:	d017      	beq.n	9000e024 <HAL_RCCEx_GetPeriphCLKFreq+0x350>
9000dff4:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
9000dff8:	d0bc      	beq.n	9000df74 <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>
9000dffa:	e6d4      	b.n	9000dda6 <HAL_RCCEx_GetPeriphCLKFreq+0xd2>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
9000dffc:	6810      	ldr	r0, [r2, #0]
9000dffe:	f010 6000 	ands.w	r0, r0, #134217728	@ 0x8000000
9000e002:	f43f aeee 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000e006:	a801      	add	r0, sp, #4
9000e008:	f7ff fc96 	bl	9000d938 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
9000e00c:	9802      	ldr	r0, [sp, #8]
9000e00e:	e6e8      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
9000e010:	6810      	ldr	r0, [r2, #0]
9000e012:	f010 5000 	ands.w	r0, r0, #536870912	@ 0x20000000
9000e016:	f43f aee4 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000e01a:	a801      	add	r0, sp, #4
9000e01c:	f7ff fd26 	bl	9000da6c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_R_Frequency;
9000e020:	9803      	ldr	r0, [sp, #12]
9000e022:	e6de      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
9000e024:	4b0c      	ldr	r3, [pc, #48]	@ (9000e058 <HAL_RCCEx_GetPeriphCLKFreq+0x384>)
9000e026:	6818      	ldr	r0, [r3, #0]
9000e028:	f410 7080 	ands.w	r0, r0, #256	@ 0x100
9000e02c:	f43f aed9 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
9000e030:	e7b4      	b.n	9000df9c <HAL_RCCEx_GetPeriphCLKFreq+0x2c8>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
9000e032:	4b09      	ldr	r3, [pc, #36]	@ (9000e058 <HAL_RCCEx_GetPeriphCLKFreq+0x384>)
9000e034:	6818      	ldr	r0, [r3, #0]
9000e036:	f010 0004 	ands.w	r0, r0, #4
9000e03a:	f43f aed2 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e03e:	681b      	ldr	r3, [r3, #0]
9000e040:	4807      	ldr	r0, [pc, #28]	@ (9000e060 <HAL_RCCEx_GetPeriphCLKFreq+0x38c>)
9000e042:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e046:	40d8      	lsrs	r0, r3
9000e048:	e6cb      	b.n	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
9000e04a:	4b03      	ldr	r3, [pc, #12]	@ (9000e058 <HAL_RCCEx_GetPeriphCLKFreq+0x384>)
9000e04c:	6818      	ldr	r0, [r3, #0]
9000e04e:	f010 6000 	ands.w	r0, r0, #134217728	@ 0x8000000
9000e052:	f43f aec6 	beq.w	9000dde2 <HAL_RCCEx_GetPeriphCLKFreq+0x10e>
9000e056:	e7d6      	b.n	9000e006 <HAL_RCCEx_GetPeriphCLKFreq+0x332>
9000e058:	58024400 	.word	0x58024400
9000e05c:	9002df9c 	.word	0x9002df9c
9000e060:	03d09000 	.word	0x03d09000

9000e064 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000e064:	b318      	cbz	r0, 9000e0ae <HAL_SDRAM_Init+0x4a>
{
9000e066:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000e068:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000e06c:	4604      	mov	r4, r0
9000e06e:	460d      	mov	r5, r1
9000e070:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000e074:	b1b3      	cbz	r3, 9000e0a4 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000e076:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e078:	2302      	movs	r3, #2
9000e07a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000e07e:	f851 0b04 	ldr.w	r0, [r1], #4
9000e082:	f000 ff2d 	bl	9000eee0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000e086:	6862      	ldr	r2, [r4, #4]
9000e088:	4629      	mov	r1, r5
9000e08a:	6820      	ldr	r0, [r4, #0]
9000e08c:	f000 ff60 	bl	9000ef50 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000e090:	4a08      	ldr	r2, [pc, #32]	@ (9000e0b4 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000e092:	2101      	movs	r1, #1

  return HAL_OK;
9000e094:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000e096:	6813      	ldr	r3, [r2, #0]
9000e098:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000e09c:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000e09e:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000e0a2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000e0a4:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000e0a8:	f7f6 fc34 	bl	90004914 <HAL_SDRAM_MspInit>
9000e0ac:	e7e3      	b.n	9000e076 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000e0ae:	2001      	movs	r0, #1
}
9000e0b0:	4770      	bx	lr
9000e0b2:	bf00      	nop
9000e0b4:	52004000 	.word	0x52004000

9000e0b8 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000e0b8:	b510      	push	{r4, lr}
9000e0ba:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000e0bc:	f7f6 fca6 	bl	90004a0c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000e0c0:	e9d4 0100 	ldrd	r0, r1, [r4]
9000e0c4:	f000 ff82 	bl	9000efcc <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000e0c8:	2000      	movs	r0, #0
9000e0ca:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000e0ce:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000e0d2:	bd10      	pop	{r4, pc}

9000e0d4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000e0d4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000e0d6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000e0da:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000e0dc:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000e0de:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000e0e0:	d004      	beq.n	9000e0ec <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000e0e2:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000e0e6:	2c01      	cmp	r4, #1
9000e0e8:	d001      	beq.n	9000e0ee <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000e0ea:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000e0ec:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e0ee:	2302      	movs	r3, #2
9000e0f0:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000e0f2:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e0f4:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000e0f8:	f000 ff7c 	bl	9000eff4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000e0fc:	6833      	ldr	r3, [r6, #0]
9000e0fe:	2b02      	cmp	r3, #2
9000e100:	d003      	beq.n	9000e10a <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000e102:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000e106:	2000      	movs	r0, #0
}
9000e108:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000e10a:	2305      	movs	r3, #5
9000e10c:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000e110:	e7f9      	b.n	9000e106 <HAL_SDRAM_SendCommand+0x32>
9000e112:	bf00      	nop

9000e114 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000e114:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000e116:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000e11a:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000e11c:	2b02      	cmp	r3, #2
9000e11e:	b2d8      	uxtb	r0, r3
9000e120:	d005      	beq.n	9000e12e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000e122:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000e126:	2b01      	cmp	r3, #1
9000e128:	b2dd      	uxtb	r5, r3
9000e12a:	d001      	beq.n	9000e130 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000e12c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000e12e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e130:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000e132:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e134:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000e138:	f000 ff74 	bl	9000f024 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000e13c:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000e13e:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000e142:	bd38      	pop	{r3, r4, r5, pc}

9000e144 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000e144:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
9000e146:	4a1b      	ldr	r2, [pc, #108]	@ (9000e1b4 <TIM_OC1_SetConfig+0x70>)
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000e148:	f023 0301 	bic.w	r3, r3, #1
{
9000e14c:	b470      	push	{r4, r5, r6}
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000e14e:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
9000e150:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
9000e152:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
9000e154:	6985      	ldr	r5, [r0, #24]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
9000e156:	f023 0302 	bic.w	r3, r3, #2
  tmpccmrx &= ~TIM_CCMR1_CC1S;
9000e15a:	402a      	ands	r2, r5
  tmpccmrx |= OC_Config->OCMode;
9000e15c:	680d      	ldr	r5, [r1, #0]
9000e15e:	432a      	orrs	r2, r5
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
9000e160:	688d      	ldr	r5, [r1, #8]
9000e162:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
9000e164:	4d14      	ldr	r5, [pc, #80]	@ (9000e1b8 <TIM_OC1_SetConfig+0x74>)
9000e166:	42a8      	cmp	r0, r5
9000e168:	d00f      	beq.n	9000e18a <TIM_OC1_SetConfig+0x46>
9000e16a:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000e16e:	42a8      	cmp	r0, r5
9000e170:	d00b      	beq.n	9000e18a <TIM_OC1_SetConfig+0x46>
9000e172:	f505 5570 	add.w	r5, r5, #15360	@ 0x3c00
9000e176:	42a8      	cmp	r0, r5
9000e178:	d007      	beq.n	9000e18a <TIM_OC1_SetConfig+0x46>
9000e17a:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000e17e:	42a8      	cmp	r0, r5
9000e180:	d003      	beq.n	9000e18a <TIM_OC1_SetConfig+0x46>
9000e182:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000e186:	42a8      	cmp	r0, r5
9000e188:	d10d      	bne.n	9000e1a6 <TIM_OC1_SetConfig+0x62>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
9000e18a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
9000e18c:	f023 0308 	bic.w	r3, r3, #8
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
9000e190:	f424 7440 	bic.w	r4, r4, #768	@ 0x300
    tmpccer |= OC_Config->OCNPolarity;
9000e194:	432b      	orrs	r3, r5
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
9000e196:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpccer &= ~TIM_CCER_CC1NE;
9000e19a:	f023 0304 	bic.w	r3, r3, #4
    tmpcr2 |= OC_Config->OCNIdleState;
9000e19e:	ea46 0c05 	orr.w	ip, r6, r5
9000e1a2:	ea4c 0404 	orr.w	r4, ip, r4

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
9000e1a6:	6849      	ldr	r1, [r1, #4]
  TIMx->CR2 = tmpcr2;
9000e1a8:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
9000e1aa:	6182      	str	r2, [r0, #24]
  TIMx->CCR1 = OC_Config->Pulse;
9000e1ac:	6341      	str	r1, [r0, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
9000e1ae:	6203      	str	r3, [r0, #32]
}
9000e1b0:	bc70      	pop	{r4, r5, r6}
9000e1b2:	4770      	bx	lr
9000e1b4:	fffeff8c 	.word	0xfffeff8c
9000e1b8:	40010000 	.word	0x40010000

9000e1bc <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
9000e1bc:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
9000e1be:	4a1c      	ldr	r2, [pc, #112]	@ (9000e230 <TIM_OC3_SetConfig+0x74>)
  TIMx->CCER &= ~TIM_CCER_CC3E;
9000e1c0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
{
9000e1c4:	b470      	push	{r4, r5, r6}
  TIMx->CCER &= ~TIM_CCER_CC3E;
9000e1c6:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
9000e1c8:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
9000e1ca:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR2;
9000e1cc:	69c5      	ldr	r5, [r0, #28]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
9000e1ce:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
  tmpccmrx &= ~TIM_CCMR2_CC3S;
9000e1d2:	402a      	ands	r2, r5
  tmpccmrx |= OC_Config->OCMode;
9000e1d4:	680d      	ldr	r5, [r1, #0]
9000e1d6:	432a      	orrs	r2, r5
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
9000e1d8:	688d      	ldr	r5, [r1, #8]
9000e1da:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
9000e1de:	4d15      	ldr	r5, [pc, #84]	@ (9000e234 <TIM_OC3_SetConfig+0x78>)
9000e1e0:	42a8      	cmp	r0, r5
9000e1e2:	d00f      	beq.n	9000e204 <TIM_OC3_SetConfig+0x48>
9000e1e4:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000e1e8:	42a8      	cmp	r0, r5
9000e1ea:	d00b      	beq.n	9000e204 <TIM_OC3_SetConfig+0x48>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
9000e1ec:	4e12      	ldr	r6, [pc, #72]	@ (9000e238 <TIM_OC3_SetConfig+0x7c>)
9000e1ee:	f505 4580 	add.w	r5, r5, #16384	@ 0x4000
9000e1f2:	42a8      	cmp	r0, r5
9000e1f4:	bf18      	it	ne
9000e1f6:	42b0      	cmpne	r0, r6
9000e1f8:	d00b      	beq.n	9000e212 <TIM_OC3_SetConfig+0x56>
9000e1fa:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000e1fe:	42a8      	cmp	r0, r5
9000e200:	d10f      	bne.n	9000e222 <TIM_OC3_SetConfig+0x66>
9000e202:	e006      	b.n	9000e212 <TIM_OC3_SetConfig+0x56>
    tmpccer &= ~TIM_CCER_CC3NP;
9000e204:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
9000e208:	68cd      	ldr	r5, [r1, #12]
9000e20a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    tmpccer &= ~TIM_CCER_CC3NE;
9000e20e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
9000e212:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
9000e216:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
9000e21a:	ea46 0c05 	orr.w	ip, r6, r5
9000e21e:	ea44 140c 	orr.w	r4, r4, ip, lsl #4

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
9000e222:	6849      	ldr	r1, [r1, #4]
  TIMx->CR2 = tmpcr2;
9000e224:	6044      	str	r4, [r0, #4]
  TIMx->CCMR2 = tmpccmrx;
9000e226:	61c2      	str	r2, [r0, #28]
  TIMx->CCR3 = OC_Config->Pulse;
9000e228:	63c1      	str	r1, [r0, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
9000e22a:	6203      	str	r3, [r0, #32]
}
9000e22c:	bc70      	pop	{r4, r5, r6}
9000e22e:	4770      	bx	lr
9000e230:	fffeff8c 	.word	0xfffeff8c
9000e234:	40010000 	.word	0x40010000
9000e238:	40014000 	.word	0x40014000

9000e23c <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000e23c:	2800      	cmp	r0, #0
9000e23e:	f000 808c 	beq.w	9000e35a <HAL_TIM_Base_Init+0x11e>
{
9000e242:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000e244:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000e248:	4604      	mov	r4, r0
9000e24a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000e24e:	2b00      	cmp	r3, #0
9000e250:	d073      	beq.n	9000e33a <HAL_TIM_Base_Init+0xfe>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000e252:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e254:	2302      	movs	r3, #2
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e256:	4942      	ldr	r1, [pc, #264]	@ (9000e360 <HAL_TIM_Base_Init+0x124>)
9000e258:	4842      	ldr	r0, [pc, #264]	@ (9000e364 <HAL_TIM_Base_Init+0x128>)
9000e25a:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000e25e:	eba2 0101 	sub.w	r1, r2, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000e262:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e266:	eba2 0e00 	sub.w	lr, r2, r0
  tmpcr1 = TIMx->CR1;
9000e26a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e26c:	fab1 f181 	clz	r1, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e270:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e272:	fabe fe8e 	clz	lr, lr
  TIMx->PSC = Structure->Prescaler;
9000e276:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e278:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e27c:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e27e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000e282:	d020      	beq.n	9000e2c6 <HAL_TIM_Base_Init+0x8a>
9000e284:	b9f9      	cbnz	r1, 9000e2c6 <HAL_TIM_Base_Init+0x8a>
9000e286:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 9000e374 <HAL_TIM_Base_Init+0x138>
9000e28a:	4562      	cmp	r2, ip
9000e28c:	d01b      	beq.n	9000e2c6 <HAL_TIM_Base_Init+0x8a>
9000e28e:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e292:	4562      	cmp	r2, ip
9000e294:	d017      	beq.n	9000e2c6 <HAL_TIM_Base_Init+0x8a>
9000e296:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e29a:	4562      	cmp	r2, ip
9000e29c:	d013      	beq.n	9000e2c6 <HAL_TIM_Base_Init+0x8a>
9000e29e:	f1be 0f00 	cmp.w	lr, #0
9000e2a2:	d110      	bne.n	9000e2c6 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e2a4:	4830      	ldr	r0, [pc, #192]	@ (9000e368 <HAL_TIM_Base_Init+0x12c>)
9000e2a6:	4931      	ldr	r1, [pc, #196]	@ (9000e36c <HAL_TIM_Base_Init+0x130>)
9000e2a8:	428a      	cmp	r2, r1
9000e2aa:	bf18      	it	ne
9000e2ac:	4282      	cmpne	r2, r0
9000e2ae:	d049      	beq.n	9000e344 <HAL_TIM_Base_Init+0x108>
9000e2b0:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000e2b4:	428a      	cmp	r2, r1
9000e2b6:	d045      	beq.n	9000e344 <HAL_TIM_Base_Init+0x108>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e2b8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e2bc:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000e2be:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e2c0:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e2c2:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e2c4:	e01d      	b.n	9000e302 <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000e2c6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000e2c8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000e2cc:	4303      	orrs	r3, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e2ce:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e2d0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e2d4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e2d6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e2da:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000e2dc:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e2de:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e2e0:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e2e2:	b961      	cbnz	r1, 9000e2fe <HAL_TIM_Base_Init+0xc2>
9000e2e4:	f1be 0f00 	cmp.w	lr, #0
9000e2e8:	d109      	bne.n	9000e2fe <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e2ea:	4921      	ldr	r1, [pc, #132]	@ (9000e370 <HAL_TIM_Base_Init+0x134>)
9000e2ec:	4b1e      	ldr	r3, [pc, #120]	@ (9000e368 <HAL_TIM_Base_Init+0x12c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e2ee:	429a      	cmp	r2, r3
9000e2f0:	bf18      	it	ne
9000e2f2:	428a      	cmpne	r2, r1
9000e2f4:	d003      	beq.n	9000e2fe <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e2f6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e2fa:	429a      	cmp	r2, r3
9000e2fc:	d101      	bne.n	9000e302 <HAL_TIM_Base_Init+0xc6>
    TIMx->RCR = Structure->RepetitionCounter;
9000e2fe:	6963      	ldr	r3, [r4, #20]
9000e300:	6313      	str	r3, [r2, #48]	@ 0x30
  TIMx->EGR = TIM_EGR_UG;
9000e302:	2301      	movs	r3, #1
  return HAL_OK;
9000e304:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000e306:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000e308:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e30c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000e310:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000e314:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000e318:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000e31c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000e320:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e324:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e328:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e32c:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000e330:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000e334:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000e338:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000e33a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000e33e:	f7f6 fa7f 	bl	90004840 <HAL_TIM_Base_MspInit>
9000e342:	e786      	b.n	9000e252 <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e344:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e346:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e34a:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e34c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e350:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000e352:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e354:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e356:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e358:	e7c7      	b.n	9000e2ea <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000e35a:	2001      	movs	r0, #1
}
9000e35c:	4770      	bx	lr
9000e35e:	bf00      	nop
9000e360:	40010000 	.word	0x40010000
9000e364:	40010400 	.word	0x40010400
9000e368:	40014000 	.word	0x40014000
9000e36c:	40014400 	.word	0x40014400
9000e370:	40014800 	.word	0x40014800
9000e374:	40000400 	.word	0x40000400

9000e378 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000e378:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000e37c:	2b01      	cmp	r3, #1
9000e37e:	d13d      	bne.n	9000e3fc <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e380:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e382:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e384:	4b1e      	ldr	r3, [pc, #120]	@ (9000e400 <HAL_TIM_Base_Start_IT+0x88>)
9000e386:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000e38a:	bf18      	it	ne
9000e38c:	429a      	cmpne	r2, r3
{
9000e38e:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e390:	bf0c      	ite	eq
9000e392:	2301      	moveq	r3, #1
9000e394:	2300      	movne	r3, #0
9000e396:	4d1b      	ldr	r5, [pc, #108]	@ (9000e404 <HAL_TIM_Base_Start_IT+0x8c>)
9000e398:	4c1b      	ldr	r4, [pc, #108]	@ (9000e408 <HAL_TIM_Base_Start_IT+0x90>)
9000e39a:	42aa      	cmp	r2, r5
9000e39c:	bf08      	it	eq
9000e39e:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000e3a2:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e3a6:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e3a8:	42a2      	cmp	r2, r4
9000e3aa:	bf08      	it	eq
9000e3ac:	f043 0301 	orreq.w	r3, r3, #1
9000e3b0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e3b4:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e3b8:	4814      	ldr	r0, [pc, #80]	@ (9000e40c <HAL_TIM_Base_Start_IT+0x94>)
9000e3ba:	42a2      	cmp	r2, r4
9000e3bc:	bf08      	it	eq
9000e3be:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e3c2:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e3c4:	4282      	cmp	r2, r0
9000e3c6:	bf08      	it	eq
9000e3c8:	f043 0301 	orreq.w	r3, r3, #1
9000e3cc:	4910      	ldr	r1, [pc, #64]	@ (9000e410 <HAL_TIM_Base_Start_IT+0x98>)
9000e3ce:	428a      	cmp	r2, r1
9000e3d0:	bf08      	it	eq
9000e3d2:	f043 0301 	orreq.w	r3, r3, #1
9000e3d6:	b913      	cbnz	r3, 9000e3de <HAL_TIM_Base_Start_IT+0x66>
9000e3d8:	4b0e      	ldr	r3, [pc, #56]	@ (9000e414 <HAL_TIM_Base_Start_IT+0x9c>)
9000e3da:	429a      	cmp	r2, r3
9000e3dc:	d107      	bne.n	9000e3ee <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000e3de:	6891      	ldr	r1, [r2, #8]
9000e3e0:	4b0d      	ldr	r3, [pc, #52]	@ (9000e418 <HAL_TIM_Base_Start_IT+0xa0>)
9000e3e2:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000e3e4:	2b06      	cmp	r3, #6
9000e3e6:	d006      	beq.n	9000e3f6 <HAL_TIM_Base_Start_IT+0x7e>
9000e3e8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000e3ec:	d003      	beq.n	9000e3f6 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000e3ee:	6813      	ldr	r3, [r2, #0]
9000e3f0:	f043 0301 	orr.w	r3, r3, #1
9000e3f4:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000e3f6:	2000      	movs	r0, #0
}
9000e3f8:	bc30      	pop	{r4, r5}
9000e3fa:	4770      	bx	lr
    return HAL_ERROR;
9000e3fc:	2001      	movs	r0, #1
}
9000e3fe:	4770      	bx	lr
9000e400:	40010000 	.word	0x40010000
9000e404:	40000400 	.word	0x40000400
9000e408:	40000800 	.word	0x40000800
9000e40c:	40010400 	.word	0x40010400
9000e410:	40001800 	.word	0x40001800
9000e414:	40014000 	.word	0x40014000
9000e418:	00010007 	.word	0x00010007

9000e41c <HAL_TIM_Base_Stop_IT>:
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
9000e41c:	6802      	ldr	r2, [r0, #0]
  __HAL_TIM_DISABLE(htim);
9000e41e:	f241 1c11 	movw	ip, #4369	@ 0x1111
{
9000e422:	4603      	mov	r3, r0
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
9000e424:	68d1      	ldr	r1, [r2, #12]
9000e426:	f021 0101 	bic.w	r1, r1, #1
9000e42a:	60d1      	str	r1, [r2, #12]
  __HAL_TIM_DISABLE(htim);
9000e42c:	6a11      	ldr	r1, [r2, #32]
9000e42e:	ea11 0f0c 	tst.w	r1, ip
9000e432:	d108      	bne.n	9000e446 <HAL_TIM_Base_Stop_IT+0x2a>
9000e434:	6a10      	ldr	r0, [r2, #32]
9000e436:	f240 4144 	movw	r1, #1092	@ 0x444
9000e43a:	4208      	tst	r0, r1
9000e43c:	d103      	bne.n	9000e446 <HAL_TIM_Base_Stop_IT+0x2a>
9000e43e:	6811      	ldr	r1, [r2, #0]
9000e440:	f021 0101 	bic.w	r1, r1, #1
9000e444:	6011      	str	r1, [r2, #0]
  htim->State = HAL_TIM_STATE_READY;
9000e446:	2201      	movs	r2, #1
}
9000e448:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
9000e44a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
}
9000e44e:	4770      	bx	lr

9000e450 <HAL_TIM_PWM_MspInit>:
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
9000e450:	4770      	bx	lr
9000e452:	bf00      	nop

9000e454 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
9000e454:	2800      	cmp	r0, #0
9000e456:	f000 808c 	beq.w	9000e572 <HAL_TIM_PWM_Init+0x11e>
{
9000e45a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000e45c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000e460:	4604      	mov	r4, r0
9000e462:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000e466:	2b00      	cmp	r3, #0
9000e468:	d073      	beq.n	9000e552 <HAL_TIM_PWM_Init+0xfe>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000e46a:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e46c:	2302      	movs	r3, #2
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e46e:	4942      	ldr	r1, [pc, #264]	@ (9000e578 <HAL_TIM_PWM_Init+0x124>)
9000e470:	4842      	ldr	r0, [pc, #264]	@ (9000e57c <HAL_TIM_PWM_Init+0x128>)
9000e472:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000e476:	eba2 0101 	sub.w	r1, r2, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000e47a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e47e:	eba2 0e00 	sub.w	lr, r2, r0
  tmpcr1 = TIMx->CR1;
9000e482:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e484:	fab1 f181 	clz	r1, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e488:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e48a:	fabe fe8e 	clz	lr, lr
  TIMx->PSC = Structure->Prescaler;
9000e48e:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e490:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e494:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e496:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000e49a:	d020      	beq.n	9000e4de <HAL_TIM_PWM_Init+0x8a>
9000e49c:	b9f9      	cbnz	r1, 9000e4de <HAL_TIM_PWM_Init+0x8a>
9000e49e:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 9000e58c <HAL_TIM_PWM_Init+0x138>
9000e4a2:	4562      	cmp	r2, ip
9000e4a4:	d01b      	beq.n	9000e4de <HAL_TIM_PWM_Init+0x8a>
9000e4a6:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e4aa:	4562      	cmp	r2, ip
9000e4ac:	d017      	beq.n	9000e4de <HAL_TIM_PWM_Init+0x8a>
9000e4ae:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e4b2:	4562      	cmp	r2, ip
9000e4b4:	d013      	beq.n	9000e4de <HAL_TIM_PWM_Init+0x8a>
9000e4b6:	f1be 0f00 	cmp.w	lr, #0
9000e4ba:	d110      	bne.n	9000e4de <HAL_TIM_PWM_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e4bc:	4830      	ldr	r0, [pc, #192]	@ (9000e580 <HAL_TIM_PWM_Init+0x12c>)
9000e4be:	4931      	ldr	r1, [pc, #196]	@ (9000e584 <HAL_TIM_PWM_Init+0x130>)
9000e4c0:	428a      	cmp	r2, r1
9000e4c2:	bf18      	it	ne
9000e4c4:	4282      	cmpne	r2, r0
9000e4c6:	d049      	beq.n	9000e55c <HAL_TIM_PWM_Init+0x108>
9000e4c8:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000e4cc:	428a      	cmp	r2, r1
9000e4ce:	d045      	beq.n	9000e55c <HAL_TIM_PWM_Init+0x108>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e4d0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e4d4:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000e4d6:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e4d8:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e4da:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e4dc:	e01d      	b.n	9000e51a <HAL_TIM_PWM_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000e4de:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000e4e0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000e4e4:	4303      	orrs	r3, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e4e6:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e4e8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e4ec:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e4ee:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e4f2:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000e4f4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e4f6:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e4f8:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e4fa:	b961      	cbnz	r1, 9000e516 <HAL_TIM_PWM_Init+0xc2>
9000e4fc:	f1be 0f00 	cmp.w	lr, #0
9000e500:	d109      	bne.n	9000e516 <HAL_TIM_PWM_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e502:	4921      	ldr	r1, [pc, #132]	@ (9000e588 <HAL_TIM_PWM_Init+0x134>)
9000e504:	4b1e      	ldr	r3, [pc, #120]	@ (9000e580 <HAL_TIM_PWM_Init+0x12c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e506:	429a      	cmp	r2, r3
9000e508:	bf18      	it	ne
9000e50a:	428a      	cmpne	r2, r1
9000e50c:	d003      	beq.n	9000e516 <HAL_TIM_PWM_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e50e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e512:	429a      	cmp	r2, r3
9000e514:	d101      	bne.n	9000e51a <HAL_TIM_PWM_Init+0xc6>
    TIMx->RCR = Structure->RepetitionCounter;
9000e516:	6963      	ldr	r3, [r4, #20]
9000e518:	6313      	str	r3, [r2, #48]	@ 0x30
  TIMx->EGR = TIM_EGR_UG;
9000e51a:	2301      	movs	r3, #1
  return HAL_OK;
9000e51c:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000e51e:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000e520:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e524:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000e528:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000e52c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000e530:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000e534:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000e538:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e53c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e540:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e544:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000e548:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000e54c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000e550:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000e552:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_PWM_MspInit(htim);
9000e556:	f7ff ff7b 	bl	9000e450 <HAL_TIM_PWM_MspInit>
9000e55a:	e786      	b.n	9000e46a <HAL_TIM_PWM_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e55c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e55e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e562:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e564:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e568:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000e56a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e56c:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e56e:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e570:	e7c7      	b.n	9000e502 <HAL_TIM_PWM_Init+0xae>
    return HAL_ERROR;
9000e572:	2001      	movs	r0, #1
}
9000e574:	4770      	bx	lr
9000e576:	bf00      	nop
9000e578:	40010000 	.word	0x40010000
9000e57c:	40010400 	.word	0x40010400
9000e580:	40014000 	.word	0x40014000
9000e584:	40014400 	.word	0x40014400
9000e588:	40014800 	.word	0x40014800
9000e58c:	40000400 	.word	0x40000400

9000e590 <HAL_TIM_PWM_Start>:
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
9000e590:	2910      	cmp	r1, #16
9000e592:	d80a      	bhi.n	9000e5aa <HAL_TIM_PWM_Start+0x1a>
9000e594:	e8df f001 	tbb	[pc, r1]
9000e598:	09090919 	.word	0x09090919
9000e59c:	09090956 	.word	0x09090956
9000e5a0:	0909095e 	.word	0x0909095e
9000e5a4:	09090966 	.word	0x09090966
9000e5a8:	6e          	.byte	0x6e
9000e5a9:	00          	.byte	0x00
9000e5aa:	f890 3043 	ldrb.w	r3, [r0, #67]	@ 0x43
9000e5ae:	2b01      	cmp	r3, #1
9000e5b0:	d171      	bne.n	9000e696 <HAL_TIM_PWM_Start+0x106>
9000e5b2:	1f0b      	subs	r3, r1, #4
9000e5b4:	2b0c      	cmp	r3, #12
9000e5b6:	d865      	bhi.n	9000e684 <HAL_TIM_PWM_Start+0xf4>
9000e5b8:	e8df f003 	tbb	[pc, r3]
9000e5bc:	64646448 	.word	0x64646448
9000e5c0:	64646450 	.word	0x64646450
9000e5c4:	64646458 	.word	0x64646458
9000e5c8:	60          	.byte	0x60
9000e5c9:	00          	.byte	0x00
9000e5ca:	f890 303e 	ldrb.w	r3, [r0, #62]	@ 0x3e
9000e5ce:	2b01      	cmp	r3, #1
9000e5d0:	d161      	bne.n	9000e696 <HAL_TIM_PWM_Start+0x106>
9000e5d2:	2302      	movs	r3, #2
9000e5d4:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
9000e5d8:	6803      	ldr	r3, [r0, #0]
9000e5da:	f001 011f 	and.w	r1, r1, #31
9000e5de:	2201      	movs	r2, #1
9000e5e0:	6a18      	ldr	r0, [r3, #32]
9000e5e2:	408a      	lsls	r2, r1
9000e5e4:	ea20 0002 	bic.w	r0, r0, r2
9000e5e8:	b410      	push	{r4}
9000e5ea:	6218      	str	r0, [r3, #32]
9000e5ec:	4c33      	ldr	r4, [pc, #204]	@ (9000e6bc <HAL_TIM_PWM_Start+0x12c>)
9000e5ee:	6a19      	ldr	r1, [r3, #32]
9000e5f0:	42a3      	cmp	r3, r4
9000e5f2:	ea42 0201 	orr.w	r2, r2, r1
9000e5f6:	621a      	str	r2, [r3, #32]
9000e5f8:	d048      	beq.n	9000e68c <HAL_TIM_PWM_Start+0xfc>
9000e5fa:	4a31      	ldr	r2, [pc, #196]	@ (9000e6c0 <HAL_TIM_PWM_Start+0x130>)
9000e5fc:	4293      	cmp	r3, r2
9000e5fe:	d045      	beq.n	9000e68c <HAL_TIM_PWM_Start+0xfc>
9000e600:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
9000e604:	4293      	cmp	r3, r2
9000e606:	d041      	beq.n	9000e68c <HAL_TIM_PWM_Start+0xfc>
9000e608:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
9000e60c:	4293      	cmp	r3, r2
9000e60e:	d044      	beq.n	9000e69a <HAL_TIM_PWM_Start+0x10a>
9000e610:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
9000e614:	4293      	cmp	r3, r2
9000e616:	d040      	beq.n	9000e69a <HAL_TIM_PWM_Start+0x10a>
9000e618:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000e61c:	d002      	beq.n	9000e624 <HAL_TIM_PWM_Start+0x94>
9000e61e:	4a29      	ldr	r2, [pc, #164]	@ (9000e6c4 <HAL_TIM_PWM_Start+0x134>)
9000e620:	4293      	cmp	r3, r2
9000e622:	d13f      	bne.n	9000e6a4 <HAL_TIM_PWM_Start+0x114>
9000e624:	6899      	ldr	r1, [r3, #8]
9000e626:	4a28      	ldr	r2, [pc, #160]	@ (9000e6c8 <HAL_TIM_PWM_Start+0x138>)
9000e628:	400a      	ands	r2, r1
9000e62a:	2a06      	cmp	r2, #6
9000e62c:	d006      	beq.n	9000e63c <HAL_TIM_PWM_Start+0xac>
9000e62e:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
9000e632:	d003      	beq.n	9000e63c <HAL_TIM_PWM_Start+0xac>
9000e634:	681a      	ldr	r2, [r3, #0]
9000e636:	f042 0201 	orr.w	r2, r2, #1
9000e63a:	601a      	str	r2, [r3, #0]
9000e63c:	2000      	movs	r0, #0
9000e63e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e642:	4770      	bx	lr
9000e644:	f890 303f 	ldrb.w	r3, [r0, #63]	@ 0x3f
9000e648:	2b01      	cmp	r3, #1
9000e64a:	d124      	bne.n	9000e696 <HAL_TIM_PWM_Start+0x106>
9000e64c:	2302      	movs	r3, #2
9000e64e:	f880 303f 	strb.w	r3, [r0, #63]	@ 0x3f
9000e652:	e7c1      	b.n	9000e5d8 <HAL_TIM_PWM_Start+0x48>
9000e654:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
9000e658:	2b01      	cmp	r3, #1
9000e65a:	d11c      	bne.n	9000e696 <HAL_TIM_PWM_Start+0x106>
9000e65c:	2302      	movs	r3, #2
9000e65e:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
9000e662:	e7b9      	b.n	9000e5d8 <HAL_TIM_PWM_Start+0x48>
9000e664:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
9000e668:	2b01      	cmp	r3, #1
9000e66a:	d114      	bne.n	9000e696 <HAL_TIM_PWM_Start+0x106>
9000e66c:	2302      	movs	r3, #2
9000e66e:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
9000e672:	e7b1      	b.n	9000e5d8 <HAL_TIM_PWM_Start+0x48>
9000e674:	f890 3042 	ldrb.w	r3, [r0, #66]	@ 0x42
9000e678:	2b01      	cmp	r3, #1
9000e67a:	d10c      	bne.n	9000e696 <HAL_TIM_PWM_Start+0x106>
9000e67c:	2302      	movs	r3, #2
9000e67e:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
9000e682:	e7a9      	b.n	9000e5d8 <HAL_TIM_PWM_Start+0x48>
9000e684:	2302      	movs	r3, #2
9000e686:	f880 3043 	strb.w	r3, [r0, #67]	@ 0x43
9000e68a:	e7a5      	b.n	9000e5d8 <HAL_TIM_PWM_Start+0x48>
9000e68c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
9000e68e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000e692:	645a      	str	r2, [r3, #68]	@ 0x44
9000e694:	e7c6      	b.n	9000e624 <HAL_TIM_PWM_Start+0x94>
9000e696:	2001      	movs	r0, #1
9000e698:	4770      	bx	lr
9000e69a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
9000e69c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000e6a0:	645a      	str	r2, [r3, #68]	@ 0x44
9000e6a2:	e7c7      	b.n	9000e634 <HAL_TIM_PWM_Start+0xa4>
9000e6a4:	4909      	ldr	r1, [pc, #36]	@ (9000e6cc <HAL_TIM_PWM_Start+0x13c>)
9000e6a6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
9000e6aa:	4293      	cmp	r3, r2
9000e6ac:	bf18      	it	ne
9000e6ae:	428b      	cmpne	r3, r1
9000e6b0:	d0b8      	beq.n	9000e624 <HAL_TIM_PWM_Start+0x94>
9000e6b2:	f502 6240 	add.w	r2, r2, #3072	@ 0xc00
9000e6b6:	4293      	cmp	r3, r2
9000e6b8:	d1bc      	bne.n	9000e634 <HAL_TIM_PWM_Start+0xa4>
9000e6ba:	e7b3      	b.n	9000e624 <HAL_TIM_PWM_Start+0x94>
9000e6bc:	40010000 	.word	0x40010000
9000e6c0:	40010400 	.word	0x40010400
9000e6c4:	40000400 	.word	0x40000400
9000e6c8:	00010007 	.word	0x00010007
9000e6cc:	40000800 	.word	0x40000800

9000e6d0 <HAL_TIM_PWM_Stop>:
HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
9000e6d0:	6803      	ldr	r3, [r0, #0]
9000e6d2:	f001 0c1f 	and.w	ip, r1, #31
9000e6d6:	2201      	movs	r2, #1
9000e6d8:	b410      	push	{r4}
9000e6da:	fa02 f20c 	lsl.w	r2, r2, ip
9000e6de:	6a1c      	ldr	r4, [r3, #32]
9000e6e0:	ea24 0402 	bic.w	r4, r4, r2
9000e6e4:	4a37      	ldr	r2, [pc, #220]	@ (9000e7c4 <HAL_TIM_PWM_Stop+0xf4>)
9000e6e6:	621c      	str	r4, [r3, #32]
9000e6e8:	6a1c      	ldr	r4, [r3, #32]
9000e6ea:	621c      	str	r4, [r3, #32]
9000e6ec:	4c36      	ldr	r4, [pc, #216]	@ (9000e7c8 <HAL_TIM_PWM_Stop+0xf8>)
9000e6ee:	42a3      	cmp	r3, r4
9000e6f0:	bf18      	it	ne
9000e6f2:	4293      	cmpne	r3, r2
9000e6f4:	f504 5470 	add.w	r4, r4, #15360	@ 0x3c00
9000e6f8:	bf0c      	ite	eq
9000e6fa:	2201      	moveq	r2, #1
9000e6fc:	2200      	movne	r2, #0
9000e6fe:	42a3      	cmp	r3, r4
9000e700:	bf08      	it	eq
9000e702:	f042 0201 	orreq.w	r2, r2, #1
9000e706:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
9000e70a:	42a3      	cmp	r3, r4
9000e70c:	bf08      	it	eq
9000e70e:	f042 0201 	orreq.w	r2, r2, #1
9000e712:	b912      	cbnz	r2, 9000e71a <HAL_TIM_PWM_Stop+0x4a>
9000e714:	4a2d      	ldr	r2, [pc, #180]	@ (9000e7cc <HAL_TIM_PWM_Stop+0xfc>)
9000e716:	4293      	cmp	r3, r2
9000e718:	d10d      	bne.n	9000e736 <HAL_TIM_PWM_Stop+0x66>
9000e71a:	6a1c      	ldr	r4, [r3, #32]
9000e71c:	f241 1211 	movw	r2, #4369	@ 0x1111
9000e720:	4214      	tst	r4, r2
9000e722:	d108      	bne.n	9000e736 <HAL_TIM_PWM_Stop+0x66>
9000e724:	6a1c      	ldr	r4, [r3, #32]
9000e726:	f240 4244 	movw	r2, #1092	@ 0x444
9000e72a:	4214      	tst	r4, r2
9000e72c:	d103      	bne.n	9000e736 <HAL_TIM_PWM_Stop+0x66>
9000e72e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
9000e730:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000e734:	645a      	str	r2, [r3, #68]	@ 0x44
9000e736:	6a1c      	ldr	r4, [r3, #32]
9000e738:	f241 1211 	movw	r2, #4369	@ 0x1111
9000e73c:	4214      	tst	r4, r2
9000e73e:	d104      	bne.n	9000e74a <HAL_TIM_PWM_Stop+0x7a>
9000e740:	6a1c      	ldr	r4, [r3, #32]
9000e742:	f240 4244 	movw	r2, #1092	@ 0x444
9000e746:	4214      	tst	r4, r2
9000e748:	d013      	beq.n	9000e772 <HAL_TIM_PWM_Stop+0xa2>
9000e74a:	b931      	cbnz	r1, 9000e75a <HAL_TIM_PWM_Stop+0x8a>
9000e74c:	2301      	movs	r3, #1
9000e74e:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
9000e752:	2000      	movs	r0, #0
9000e754:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e758:	4770      	bx	lr
9000e75a:	3904      	subs	r1, #4
9000e75c:	290c      	cmp	r1, #12
9000e75e:	d80d      	bhi.n	9000e77c <HAL_TIM_PWM_Stop+0xac>
9000e760:	e8df f001 	tbb	[pc, r1]
9000e764:	0c0c0c13 	.word	0x0c0c0c13
9000e768:	0c0c0c1a 	.word	0x0c0c0c1a
9000e76c:	0c0c0c21 	.word	0x0c0c0c21
9000e770:	28          	.byte	0x28
9000e771:	00          	.byte	0x00
9000e772:	681a      	ldr	r2, [r3, #0]
9000e774:	f022 0201 	bic.w	r2, r2, #1
9000e778:	601a      	str	r2, [r3, #0]
9000e77a:	e7e6      	b.n	9000e74a <HAL_TIM_PWM_Stop+0x7a>
9000e77c:	2301      	movs	r3, #1
9000e77e:	f880 3043 	strb.w	r3, [r0, #67]	@ 0x43
9000e782:	2000      	movs	r0, #0
9000e784:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e788:	4770      	bx	lr
9000e78a:	2301      	movs	r3, #1
9000e78c:	f880 303f 	strb.w	r3, [r0, #63]	@ 0x3f
9000e790:	2000      	movs	r0, #0
9000e792:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e796:	4770      	bx	lr
9000e798:	2301      	movs	r3, #1
9000e79a:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
9000e79e:	2000      	movs	r0, #0
9000e7a0:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e7a4:	4770      	bx	lr
9000e7a6:	2301      	movs	r3, #1
9000e7a8:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
9000e7ac:	2000      	movs	r0, #0
9000e7ae:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e7b2:	4770      	bx	lr
9000e7b4:	2301      	movs	r3, #1
9000e7b6:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
9000e7ba:	2000      	movs	r0, #0
9000e7bc:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e7c0:	4770      	bx	lr
9000e7c2:	bf00      	nop
9000e7c4:	40010000 	.word	0x40010000
9000e7c8:	40010400 	.word	0x40010400
9000e7cc:	40014800 	.word	0x40014800

9000e7d0 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
9000e7d0:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
9000e7d4:	2b01      	cmp	r3, #1
9000e7d6:	d07e      	beq.n	9000e8d6 <HAL_TIM_ConfigClockSource+0x106>
9000e7d8:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
9000e7da:	2302      	movs	r3, #2
{
9000e7dc:	b430      	push	{r4, r5}
  tmpsmcr = htim->Instance->SMCR;
9000e7de:	6804      	ldr	r4, [r0, #0]
  __HAL_LOCK(htim);
9000e7e0:	2001      	movs	r0, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000e7e2:	f882 303d 	strb.w	r3, [r2, #61]	@ 0x3d
  __HAL_LOCK(htim);
9000e7e6:	f882 003c 	strb.w	r0, [r2, #60]	@ 0x3c
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000e7ea:	4b58      	ldr	r3, [pc, #352]	@ (9000e94c <HAL_TIM_ConfigClockSource+0x17c>)
  tmpsmcr = htim->Instance->SMCR;
9000e7ec:	68a5      	ldr	r5, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000e7ee:	402b      	ands	r3, r5
  htim->Instance->SMCR = tmpsmcr;
9000e7f0:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
9000e7f2:	680b      	ldr	r3, [r1, #0]
9000e7f4:	2b70      	cmp	r3, #112	@ 0x70
9000e7f6:	f000 8098 	beq.w	9000e92a <HAL_TIM_ConfigClockSource+0x15a>
9000e7fa:	d825      	bhi.n	9000e848 <HAL_TIM_ConfigClockSource+0x78>
9000e7fc:	2b50      	cmp	r3, #80	@ 0x50
9000e7fe:	d06c      	beq.n	9000e8da <HAL_TIM_ConfigClockSource+0x10a>
9000e800:	d938      	bls.n	9000e874 <HAL_TIM_ConfigClockSource+0xa4>
9000e802:	2b60      	cmp	r3, #96	@ 0x60
9000e804:	d118      	bne.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000e806:	6a23      	ldr	r3, [r4, #32]
                               sClockSourceConfig->ClockPolarity,
9000e808:	6848      	ldr	r0, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000e80a:	f023 0310 	bic.w	r3, r3, #16
                               sClockSourceConfig->ClockFilter);
9000e80e:	68c9      	ldr	r1, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000e810:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
9000e812:	69a3      	ldr	r3, [r4, #24]
  tmpccer = TIMx->CCER;

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
9000e814:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
  tmpccmr1 |= (TIM_ICFilter << 12U);
9000e818:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
  tmpccer = TIMx->CCER;
9000e81c:	6a21      	ldr	r1, [r4, #32]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
9000e81e:	f021 01a0 	bic.w	r1, r1, #160	@ 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
9000e822:	61a3      	str	r3, [r4, #24]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
9000e824:	4b4a      	ldr	r3, [pc, #296]	@ (9000e950 <HAL_TIM_ConfigClockSource+0x180>)
  tmpccer |= (TIM_ICPolarity << 4U);
9000e826:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
  HAL_StatusTypeDef status = HAL_OK;
9000e82a:	2000      	movs	r0, #0
  TIMx->CCER = tmpccer;
9000e82c:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
9000e82e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000e830:	400b      	ands	r3, r1
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000e832:	f043 0367 	orr.w	r3, r3, #103	@ 0x67
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
9000e836:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
9000e838:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
9000e83a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
9000e83c:	f882 103d 	strb.w	r1, [r2, #61]	@ 0x3d
  __HAL_UNLOCK(htim);
9000e840:	f882 303c 	strb.w	r3, [r2, #60]	@ 0x3c
}
9000e844:	bc30      	pop	{r4, r5}
9000e846:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
9000e848:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
9000e84c:	d05d      	beq.n	9000e90a <HAL_TIM_ConfigClockSource+0x13a>
9000e84e:	d931      	bls.n	9000e8b4 <HAL_TIM_ConfigClockSource+0xe4>
9000e850:	4940      	ldr	r1, [pc, #256]	@ (9000e954 <HAL_TIM_ConfigClockSource+0x184>)
9000e852:	428b      	cmp	r3, r1
9000e854:	d006      	beq.n	9000e864 <HAL_TIM_ConfigClockSource+0x94>
9000e856:	d927      	bls.n	9000e8a8 <HAL_TIM_ConfigClockSource+0xd8>
9000e858:	493f      	ldr	r1, [pc, #252]	@ (9000e958 <HAL_TIM_ConfigClockSource+0x188>)
9000e85a:	428b      	cmp	r3, r1
9000e85c:	d002      	beq.n	9000e864 <HAL_TIM_ConfigClockSource+0x94>
9000e85e:	3110      	adds	r1, #16
9000e860:	428b      	cmp	r3, r1
9000e862:	d1e9      	bne.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
9000e864:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000e866:	493a      	ldr	r1, [pc, #232]	@ (9000e950 <HAL_TIM_ConfigClockSource+0x180>)
9000e868:	4001      	ands	r1, r0
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000e86a:	4319      	orrs	r1, r3
9000e86c:	f041 0107 	orr.w	r1, r1, #7
  TIMx->SMCR = tmpsmcr;
9000e870:	60a1      	str	r1, [r4, #8]
}
9000e872:	e022      	b.n	9000e8ba <HAL_TIM_ConfigClockSource+0xea>
  switch (sClockSourceConfig->ClockSource)
9000e874:	2b40      	cmp	r3, #64	@ 0x40
9000e876:	d122      	bne.n	9000e8be <HAL_TIM_ConfigClockSource+0xee>
  tmpccer = TIMx->CCER;
9000e878:	6a23      	ldr	r3, [r4, #32]
                               sClockSourceConfig->ClockPolarity,
9000e87a:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
9000e87c:	68cd      	ldr	r5, [r1, #12]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
9000e87e:	f023 030a 	bic.w	r3, r3, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000e882:	6a21      	ldr	r1, [r4, #32]
  tmpccer |= TIM_ICPolarity;
9000e884:	4318      	orrs	r0, r3
  tmpsmcr &= ~TIM_SMCR_TS;
9000e886:	4b32      	ldr	r3, [pc, #200]	@ (9000e950 <HAL_TIM_ConfigClockSource+0x180>)
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000e888:	f021 0101 	bic.w	r1, r1, #1
9000e88c:	6221      	str	r1, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
9000e88e:	69a1      	ldr	r1, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
9000e890:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
9000e894:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
9000e898:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
9000e89a:	6220      	str	r0, [r4, #32]
  tmpsmcr = TIMx->SMCR;
9000e89c:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000e89e:	400b      	ands	r3, r1
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000e8a0:	f043 0347 	orr.w	r3, r3, #71	@ 0x47
  TIMx->SMCR = tmpsmcr;
9000e8a4:	60a3      	str	r3, [r4, #8]
}
9000e8a6:	e008      	b.n	9000e8ba <HAL_TIM_ConfigClockSource+0xea>
  switch (sClockSourceConfig->ClockSource)
9000e8a8:	f023 0110 	bic.w	r1, r3, #16
9000e8ac:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000e8b0:	d1c2      	bne.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
9000e8b2:	e7d7      	b.n	9000e864 <HAL_TIM_ConfigClockSource+0x94>
9000e8b4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000e8b8:	d1be      	bne.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
  HAL_StatusTypeDef status = HAL_OK;
9000e8ba:	2000      	movs	r0, #0
9000e8bc:	e7bc      	b.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
9000e8be:	d8bb      	bhi.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
9000e8c0:	2b20      	cmp	r3, #32
9000e8c2:	d0cf      	beq.n	9000e864 <HAL_TIM_ConfigClockSource+0x94>
9000e8c4:	d903      	bls.n	9000e8ce <HAL_TIM_ConfigClockSource+0xfe>
9000e8c6:	2b30      	cmp	r3, #48	@ 0x30
9000e8c8:	d0cc      	beq.n	9000e864 <HAL_TIM_ConfigClockSource+0x94>
      status = HAL_ERROR;
9000e8ca:	2001      	movs	r0, #1
9000e8cc:	e7b4      	b.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
9000e8ce:	f033 0110 	bics.w	r1, r3, #16
9000e8d2:	d1b1      	bne.n	9000e838 <HAL_TIM_ConfigClockSource+0x68>
9000e8d4:	e7c6      	b.n	9000e864 <HAL_TIM_ConfigClockSource+0x94>
  __HAL_LOCK(htim);
9000e8d6:	2002      	movs	r0, #2
}
9000e8d8:	4770      	bx	lr
  tmpccer = TIMx->CCER;
9000e8da:	6a23      	ldr	r3, [r4, #32]
                               sClockSourceConfig->ClockPolarity,
9000e8dc:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
9000e8de:	68cd      	ldr	r5, [r1, #12]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
9000e8e0:	f023 030a 	bic.w	r3, r3, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000e8e4:	6a21      	ldr	r1, [r4, #32]
  tmpccer |= TIM_ICPolarity;
9000e8e6:	4318      	orrs	r0, r3
  tmpsmcr &= ~TIM_SMCR_TS;
9000e8e8:	4b19      	ldr	r3, [pc, #100]	@ (9000e950 <HAL_TIM_ConfigClockSource+0x180>)
  TIMx->CCER &= ~TIM_CCER_CC1E;
9000e8ea:	f021 0101 	bic.w	r1, r1, #1
9000e8ee:	6221      	str	r1, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
9000e8f0:	69a1      	ldr	r1, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
9000e8f2:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
9000e8f6:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
9000e8fa:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
9000e8fc:	6220      	str	r0, [r4, #32]
  tmpsmcr = TIMx->SMCR;
9000e8fe:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
9000e900:	400b      	ands	r3, r1
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
9000e902:	f043 0357 	orr.w	r3, r3, #87	@ 0x57
  TIMx->SMCR = tmpsmcr;
9000e906:	60a3      	str	r3, [r4, #8]
}
9000e908:	e7d7      	b.n	9000e8ba <HAL_TIM_ConfigClockSource+0xea>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000e90a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
9000e90e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000e910:	432b      	orrs	r3, r5
9000e912:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000e914:	f420 417f 	bic.w	r1, r0, #65280	@ 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000e918:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
9000e91c:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
9000e91e:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
9000e920:	68a3      	ldr	r3, [r4, #8]
9000e922:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
9000e926:	60a3      	str	r3, [r4, #8]
      break;
9000e928:	e7c7      	b.n	9000e8ba <HAL_TIM_ConfigClockSource+0xea>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000e92a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
9000e92e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000e930:	432b      	orrs	r3, r5
9000e932:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
9000e934:	f420 417f 	bic.w	r1, r0, #65280	@ 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
9000e938:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
9000e93c:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
9000e93e:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
9000e940:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
9000e942:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
      htim->Instance->SMCR = tmpsmcr;
9000e946:	60a3      	str	r3, [r4, #8]
      break;
9000e948:	e7b7      	b.n	9000e8ba <HAL_TIM_ConfigClockSource+0xea>
9000e94a:	bf00      	nop
9000e94c:	ffce0088 	.word	0xffce0088
9000e950:	ffcfff8f 	.word	0xffcfff8f
9000e954:	00100020 	.word	0x00100020
9000e958:	00100030 	.word	0x00100030

9000e95c <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000e95c:	4770      	bx	lr
9000e95e:	bf00      	nop

9000e960 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000e960:	4770      	bx	lr
9000e962:	bf00      	nop

9000e964 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000e964:	4770      	bx	lr
9000e966:	bf00      	nop

9000e968 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000e968:	4770      	bx	lr
9000e96a:	bf00      	nop

9000e96c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000e96c:	6803      	ldr	r3, [r0, #0]
9000e96e:	691a      	ldr	r2, [r3, #16]
9000e970:	0791      	lsls	r1, r2, #30
{
9000e972:	b510      	push	{r4, lr}
9000e974:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000e976:	d502      	bpl.n	9000e97e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000e978:	68da      	ldr	r2, [r3, #12]
9000e97a:	0792      	lsls	r2, r2, #30
9000e97c:	d468      	bmi.n	9000ea50 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000e97e:	691a      	ldr	r2, [r3, #16]
9000e980:	0752      	lsls	r2, r2, #29
9000e982:	d502      	bpl.n	9000e98a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000e984:	68da      	ldr	r2, [r3, #12]
9000e986:	0750      	lsls	r0, r2, #29
9000e988:	d44f      	bmi.n	9000ea2a <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000e98a:	691a      	ldr	r2, [r3, #16]
9000e98c:	0711      	lsls	r1, r2, #28
9000e98e:	d502      	bpl.n	9000e996 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000e990:	68da      	ldr	r2, [r3, #12]
9000e992:	0712      	lsls	r2, r2, #28
9000e994:	d437      	bmi.n	9000ea06 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000e996:	691a      	ldr	r2, [r3, #16]
9000e998:	06d0      	lsls	r0, r2, #27
9000e99a:	d502      	bpl.n	9000e9a2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000e99c:	68da      	ldr	r2, [r3, #12]
9000e99e:	06d1      	lsls	r1, r2, #27
9000e9a0:	d41e      	bmi.n	9000e9e0 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000e9a2:	691a      	ldr	r2, [r3, #16]
9000e9a4:	07d2      	lsls	r2, r2, #31
9000e9a6:	d502      	bpl.n	9000e9ae <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000e9a8:	68da      	ldr	r2, [r3, #12]
9000e9aa:	07d0      	lsls	r0, r2, #31
9000e9ac:	d469      	bmi.n	9000ea82 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000e9ae:	691a      	ldr	r2, [r3, #16]
9000e9b0:	0611      	lsls	r1, r2, #24
9000e9b2:	d502      	bpl.n	9000e9ba <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000e9b4:	68da      	ldr	r2, [r3, #12]
9000e9b6:	0612      	lsls	r2, r2, #24
9000e9b8:	d46b      	bmi.n	9000ea92 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000e9ba:	691a      	ldr	r2, [r3, #16]
9000e9bc:	05d0      	lsls	r0, r2, #23
9000e9be:	d502      	bpl.n	9000e9c6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000e9c0:	68da      	ldr	r2, [r3, #12]
9000e9c2:	0611      	lsls	r1, r2, #24
9000e9c4:	d46d      	bmi.n	9000eaa2 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000e9c6:	691a      	ldr	r2, [r3, #16]
9000e9c8:	0652      	lsls	r2, r2, #25
9000e9ca:	d502      	bpl.n	9000e9d2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000e9cc:	68da      	ldr	r2, [r3, #12]
9000e9ce:	0650      	lsls	r0, r2, #25
9000e9d0:	d46f      	bmi.n	9000eab2 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000e9d2:	691a      	ldr	r2, [r3, #16]
9000e9d4:	0691      	lsls	r1, r2, #26
9000e9d6:	d502      	bpl.n	9000e9de <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000e9d8:	68da      	ldr	r2, [r3, #12]
9000e9da:	0692      	lsls	r2, r2, #26
9000e9dc:	d449      	bmi.n	9000ea72 <HAL_TIM_IRQHandler+0x106>
}
9000e9de:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000e9e0:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000e9e4:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000e9e6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000e9e8:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000e9ea:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000e9ec:	69db      	ldr	r3, [r3, #28]
9000e9ee:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000e9f2:	d16f      	bne.n	9000ead4 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e9f4:	f7ff ffb2 	bl	9000e95c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e9f8:	4620      	mov	r0, r4
9000e9fa:	f7ff ffb3 	bl	9000e964 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e9fe:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000ea00:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ea02:	7722      	strb	r2, [r4, #28]
9000ea04:	e7cd      	b.n	9000e9a2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000ea06:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000ea0a:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000ea0c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000ea0e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000ea10:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000ea12:	69db      	ldr	r3, [r3, #28]
9000ea14:	079b      	lsls	r3, r3, #30
9000ea16:	d15a      	bne.n	9000eace <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000ea18:	f7ff ffa0 	bl	9000e95c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000ea1c:	4620      	mov	r0, r4
9000ea1e:	f7ff ffa1 	bl	9000e964 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ea22:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000ea24:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ea26:	7722      	strb	r2, [r4, #28]
9000ea28:	e7b5      	b.n	9000e996 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000ea2a:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000ea2e:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000ea30:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000ea32:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000ea34:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000ea36:	699b      	ldr	r3, [r3, #24]
9000ea38:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000ea3c:	d144      	bne.n	9000eac8 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000ea3e:	f7ff ff8d 	bl	9000e95c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000ea42:	4620      	mov	r0, r4
9000ea44:	f7ff ff8e 	bl	9000e964 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ea48:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000ea4a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ea4c:	7722      	strb	r2, [r4, #28]
9000ea4e:	e79c      	b.n	9000e98a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000ea50:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000ea54:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000ea56:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000ea58:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000ea5a:	699b      	ldr	r3, [r3, #24]
9000ea5c:	0799      	lsls	r1, r3, #30
9000ea5e:	d130      	bne.n	9000eac2 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000ea60:	f7ff ff7c 	bl	9000e95c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000ea64:	4620      	mov	r0, r4
9000ea66:	f7ff ff7d 	bl	9000e964 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ea6a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000ea6c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ea6e:	7722      	strb	r2, [r4, #28]
9000ea70:	e785      	b.n	9000e97e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000ea72:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000ea76:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000ea78:	611a      	str	r2, [r3, #16]
}
9000ea7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000ea7e:	f000 ba29 	b.w	9000eed4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000ea82:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000ea86:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000ea88:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000ea8a:	f7f5 fcbd 	bl	90004408 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000ea8e:	6823      	ldr	r3, [r4, #0]
9000ea90:	e78d      	b.n	9000e9ae <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000ea92:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
9000ea96:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000ea98:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000ea9a:	f000 fa1d 	bl	9000eed8 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000ea9e:	6823      	ldr	r3, [r4, #0]
9000eaa0:	e78b      	b.n	9000e9ba <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000eaa2:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000eaa6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000eaa8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000eaaa:	f000 fa17 	bl	9000eedc <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000eaae:	6823      	ldr	r3, [r4, #0]
9000eab0:	e789      	b.n	9000e9c6 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000eab2:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000eab6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000eab8:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000eaba:	f7ff ff55 	bl	9000e968 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000eabe:	6823      	ldr	r3, [r4, #0]
9000eac0:	e787      	b.n	9000e9d2 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000eac2:	f7ff ff4d 	bl	9000e960 <HAL_TIM_IC_CaptureCallback>
9000eac6:	e7d0      	b.n	9000ea6a <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000eac8:	f7ff ff4a 	bl	9000e960 <HAL_TIM_IC_CaptureCallback>
9000eacc:	e7bc      	b.n	9000ea48 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000eace:	f7ff ff47 	bl	9000e960 <HAL_TIM_IC_CaptureCallback>
9000ead2:	e7a6      	b.n	9000ea22 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000ead4:	f7ff ff44 	bl	9000e960 <HAL_TIM_IC_CaptureCallback>
9000ead8:	e791      	b.n	9000e9fe <HAL_TIM_IRQHandler+0x92>
9000eada:	bf00      	nop

9000eadc <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000eadc:	6a03      	ldr	r3, [r0, #32]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
9000eade:	4a1d      	ldr	r2, [pc, #116]	@ (9000eb54 <TIM_OC2_SetConfig+0x78>)
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000eae0:	f023 0310 	bic.w	r3, r3, #16
{
9000eae4:	b470      	push	{r4, r5, r6}
  TIMx->CCER &= ~TIM_CCER_CC2E;
9000eae6:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
9000eae8:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
9000eaea:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
9000eaec:	6985      	ldr	r5, [r0, #24]
  tmpccer &= ~TIM_CCER_CC2P;
9000eaee:	f023 0320 	bic.w	r3, r3, #32
  tmpccmrx &= ~TIM_CCMR1_CC2S;
9000eaf2:	402a      	ands	r2, r5
  tmpccmrx |= (OC_Config->OCMode << 8U);
9000eaf4:	680d      	ldr	r5, [r1, #0]
9000eaf6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
9000eafa:	688d      	ldr	r5, [r1, #8]
9000eafc:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
9000eb00:	4d15      	ldr	r5, [pc, #84]	@ (9000eb58 <TIM_OC2_SetConfig+0x7c>)
9000eb02:	42a8      	cmp	r0, r5
9000eb04:	d00f      	beq.n	9000eb26 <TIM_OC2_SetConfig+0x4a>
9000eb06:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000eb0a:	42a8      	cmp	r0, r5
9000eb0c:	d00b      	beq.n	9000eb26 <TIM_OC2_SetConfig+0x4a>
  if (IS_TIM_BREAK_INSTANCE(TIMx))
9000eb0e:	4e13      	ldr	r6, [pc, #76]	@ (9000eb5c <TIM_OC2_SetConfig+0x80>)
9000eb10:	f505 4580 	add.w	r5, r5, #16384	@ 0x4000
9000eb14:	42a8      	cmp	r0, r5
9000eb16:	bf18      	it	ne
9000eb18:	42b0      	cmpne	r0, r6
9000eb1a:	d00b      	beq.n	9000eb34 <TIM_OC2_SetConfig+0x58>
9000eb1c:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000eb20:	42a8      	cmp	r0, r5
9000eb22:	d10f      	bne.n	9000eb44 <TIM_OC2_SetConfig+0x68>
9000eb24:	e006      	b.n	9000eb34 <TIM_OC2_SetConfig+0x58>
    tmpccer &= ~TIM_CCER_CC2NP;
9000eb26:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
9000eb2a:	68cd      	ldr	r5, [r1, #12]
9000eb2c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
    tmpccer &= ~TIM_CCER_CC2NE;
9000eb30:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
    tmpcr2 &= ~TIM_CR2_OIS2N;
9000eb34:	f424 6440 	bic.w	r4, r4, #3072	@ 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
9000eb38:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
9000eb3c:	ea46 0c05 	orr.w	ip, r6, r5
9000eb40:	ea44 048c 	orr.w	r4, r4, ip, lsl #2
  TIMx->CCR2 = OC_Config->Pulse;
9000eb44:	6849      	ldr	r1, [r1, #4]
  TIMx->CR2 = tmpcr2;
9000eb46:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
9000eb48:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
9000eb4a:	6381      	str	r1, [r0, #56]	@ 0x38
  TIMx->CCER = tmpccer;
9000eb4c:	6203      	str	r3, [r0, #32]
}
9000eb4e:	bc70      	pop	{r4, r5, r6}
9000eb50:	4770      	bx	lr
9000eb52:	bf00      	nop
9000eb54:	feff8cff 	.word	0xfeff8cff
9000eb58:	40010000 	.word	0x40010000
9000eb5c:	40014000 	.word	0x40014000

9000eb60 <HAL_TIM_PWM_ConfigChannel>:
{
9000eb60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(htim);
9000eb62:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
9000eb66:	2b01      	cmp	r3, #1
9000eb68:	f000 8107 	beq.w	9000ed7a <HAL_TIM_PWM_ConfigChannel+0x21a>
9000eb6c:	2301      	movs	r3, #1
9000eb6e:	4604      	mov	r4, r0
9000eb70:	460d      	mov	r5, r1
9000eb72:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  switch (Channel)
9000eb76:	2a14      	cmp	r2, #20
9000eb78:	d816      	bhi.n	9000eba8 <HAL_TIM_PWM_ConfigChannel+0x48>
9000eb7a:	e8df f012 	tbh	[pc, r2, lsl #1]
9000eb7e:	0056      	.short	0x0056
9000eb80:	00150015 	.word	0x00150015
9000eb84:	00670015 	.word	0x00670015
9000eb88:	00150015 	.word	0x00150015
9000eb8c:	00780015 	.word	0x00780015
9000eb90:	00150015 	.word	0x00150015
9000eb94:	00880015 	.word	0x00880015
9000eb98:	00150015 	.word	0x00150015
9000eb9c:	00c40015 	.word	0x00c40015
9000eba0:	00150015 	.word	0x00150015
9000eba4:	001a0015 	.word	0x001a0015
9000eba8:	2001      	movs	r0, #1
  __HAL_UNLOCK(htim);
9000ebaa:	2300      	movs	r3, #0
9000ebac:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
9000ebb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      TIM_OC6_SetConfig(htim->Instance, sConfig);
9000ebb2:	6803      	ldr	r3, [r0, #0]
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
9000ebb4:	4972      	ldr	r1, [pc, #456]	@ (9000ed80 <HAL_TIM_PWM_ConfigChannel+0x220>)
  TIMx->CCER &= ~TIM_CCER_CC6E;
9000ebb6:	6a1a      	ldr	r2, [r3, #32]
9000ebb8:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000ebbc:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
9000ebbe:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
9000ebc0:	6858      	ldr	r0, [r3, #4]
  tmpccmrx = TIMx->CCMR3;
9000ebc2:	6d5e      	ldr	r6, [r3, #84]	@ 0x54
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
9000ebc4:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
9000ebc8:	4031      	ands	r1, r6
  tmpccmrx |= (OC_Config->OCMode << 8U);
9000ebca:	682e      	ldr	r6, [r5, #0]
9000ebcc:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 20U);
9000ebd0:	68ae      	ldr	r6, [r5, #8]
9000ebd2:	ea42 5206 	orr.w	r2, r2, r6, lsl #20
  if (IS_TIM_BREAK_INSTANCE(TIMx))
9000ebd6:	4e6b      	ldr	r6, [pc, #428]	@ (9000ed84 <HAL_TIM_PWM_ConfigChannel+0x224>)
9000ebd8:	42b3      	cmp	r3, r6
9000ebda:	d00e      	beq.n	9000ebfa <HAL_TIM_PWM_ConfigChannel+0x9a>
9000ebdc:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000ebe0:	42b3      	cmp	r3, r6
9000ebe2:	d00a      	beq.n	9000ebfa <HAL_TIM_PWM_ConfigChannel+0x9a>
9000ebe4:	4f68      	ldr	r7, [pc, #416]	@ (9000ed88 <HAL_TIM_PWM_ConfigChannel+0x228>)
9000ebe6:	f506 4680 	add.w	r6, r6, #16384	@ 0x4000
9000ebea:	42b3      	cmp	r3, r6
9000ebec:	bf18      	it	ne
9000ebee:	42bb      	cmpne	r3, r7
9000ebf0:	d003      	beq.n	9000ebfa <HAL_TIM_PWM_ConfigChannel+0x9a>
9000ebf2:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000ebf6:	42b3      	cmp	r3, r6
9000ebf8:	d104      	bne.n	9000ec04 <HAL_TIM_PWM_ConfigChannel+0xa4>
    tmpcr2 &= ~TIM_CR2_OIS6;
9000ebfa:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
9000ebfe:	696e      	ldr	r6, [r5, #20]
9000ec00:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
  TIMx->CR2 = tmpcr2;
9000ec04:	6058      	str	r0, [r3, #4]
  TIMx->CCR6 = OC_Config->Pulse;
9000ec06:	6868      	ldr	r0, [r5, #4]
  TIMx->CCMR3 = tmpccmrx;
9000ec08:	6559      	str	r1, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
9000ec0a:	6929      	ldr	r1, [r5, #16]
  TIMx->CCR6 = OC_Config->Pulse;
9000ec0c:	65d8      	str	r0, [r3, #92]	@ 0x5c
  TIMx->CCER = tmpccer;
9000ec0e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
9000ec10:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
9000ec12:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
9000ec16:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
9000ec18:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
9000ec1a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
9000ec1e:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
9000ec20:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
9000ec22:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000ec26:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
9000ec28:	e00e      	b.n	9000ec48 <HAL_TIM_PWM_ConfigChannel+0xe8>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
9000ec2a:	6800      	ldr	r0, [r0, #0]
9000ec2c:	f7ff fa8a 	bl	9000e144 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
9000ec30:	692a      	ldr	r2, [r5, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
9000ec32:	6983      	ldr	r3, [r0, #24]
9000ec34:	f043 0308 	orr.w	r3, r3, #8
9000ec38:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
9000ec3a:	6983      	ldr	r3, [r0, #24]
9000ec3c:	f023 0304 	bic.w	r3, r3, #4
9000ec40:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
9000ec42:	6983      	ldr	r3, [r0, #24]
9000ec44:	4313      	orrs	r3, r2
9000ec46:	6183      	str	r3, [r0, #24]
  HAL_StatusTypeDef status = HAL_OK;
9000ec48:	2000      	movs	r0, #0
9000ec4a:	e7ae      	b.n	9000ebaa <HAL_TIM_PWM_ConfigChannel+0x4a>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
9000ec4c:	6800      	ldr	r0, [r0, #0]
9000ec4e:	f7ff ff45 	bl	9000eadc <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
9000ec52:	692a      	ldr	r2, [r5, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
9000ec54:	6983      	ldr	r3, [r0, #24]
9000ec56:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
9000ec5a:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
9000ec5c:	6983      	ldr	r3, [r0, #24]
9000ec5e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
9000ec62:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
9000ec64:	6983      	ldr	r3, [r0, #24]
9000ec66:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9000ec6a:	6183      	str	r3, [r0, #24]
      break;
9000ec6c:	e7ec      	b.n	9000ec48 <HAL_TIM_PWM_ConfigChannel+0xe8>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
9000ec6e:	6800      	ldr	r0, [r0, #0]
9000ec70:	f7ff faa4 	bl	9000e1bc <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
9000ec74:	692a      	ldr	r2, [r5, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
9000ec76:	69c3      	ldr	r3, [r0, #28]
9000ec78:	f043 0308 	orr.w	r3, r3, #8
9000ec7c:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
9000ec7e:	69c3      	ldr	r3, [r0, #28]
9000ec80:	f023 0304 	bic.w	r3, r3, #4
9000ec84:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
9000ec86:	69c3      	ldr	r3, [r0, #28]
9000ec88:	4313      	orrs	r3, r2
9000ec8a:	61c3      	str	r3, [r0, #28]
      break;
9000ec8c:	e7dc      	b.n	9000ec48 <HAL_TIM_PWM_ConfigChannel+0xe8>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
9000ec8e:	6803      	ldr	r3, [r0, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
9000ec90:	493e      	ldr	r1, [pc, #248]	@ (9000ed8c <HAL_TIM_PWM_ConfigChannel+0x22c>)
  TIMx->CCER &= ~TIM_CCER_CC4E;
9000ec92:	6a1a      	ldr	r2, [r3, #32]
9000ec94:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000ec98:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
9000ec9a:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
9000ec9c:	6858      	ldr	r0, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
9000ec9e:	69de      	ldr	r6, [r3, #28]
  tmpccer &= ~TIM_CCER_CC4P;
9000eca0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
  tmpccmrx &= ~TIM_CCMR2_CC4S;
9000eca4:	4031      	ands	r1, r6
  tmpccmrx |= (OC_Config->OCMode << 8U);
9000eca6:	682e      	ldr	r6, [r5, #0]
9000eca8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 12U);
9000ecac:	68ae      	ldr	r6, [r5, #8]
9000ecae:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  if (IS_TIM_BREAK_INSTANCE(TIMx))
9000ecb2:	4e34      	ldr	r6, [pc, #208]	@ (9000ed84 <HAL_TIM_PWM_ConfigChannel+0x224>)
9000ecb4:	42b3      	cmp	r3, r6
9000ecb6:	d00e      	beq.n	9000ecd6 <HAL_TIM_PWM_ConfigChannel+0x176>
9000ecb8:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000ecbc:	42b3      	cmp	r3, r6
9000ecbe:	d00a      	beq.n	9000ecd6 <HAL_TIM_PWM_ConfigChannel+0x176>
9000ecc0:	4f31      	ldr	r7, [pc, #196]	@ (9000ed88 <HAL_TIM_PWM_ConfigChannel+0x228>)
9000ecc2:	f506 4680 	add.w	r6, r6, #16384	@ 0x4000
9000ecc6:	42b3      	cmp	r3, r6
9000ecc8:	bf18      	it	ne
9000ecca:	42bb      	cmpne	r3, r7
9000eccc:	d003      	beq.n	9000ecd6 <HAL_TIM_PWM_ConfigChannel+0x176>
9000ecce:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000ecd2:	42b3      	cmp	r3, r6
9000ecd4:	d104      	bne.n	9000ece0 <HAL_TIM_PWM_ConfigChannel+0x180>
    tmpcr2 &= ~TIM_CR2_OIS4;
9000ecd6:	f420 4080 	bic.w	r0, r0, #16384	@ 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
9000ecda:	696e      	ldr	r6, [r5, #20]
9000ecdc:	ea40 1086 	orr.w	r0, r0, r6, lsl #6
  TIMx->CR2 = tmpcr2;
9000ece0:	6058      	str	r0, [r3, #4]
  TIMx->CCR4 = OC_Config->Pulse;
9000ece2:	6868      	ldr	r0, [r5, #4]
  TIMx->CCMR2 = tmpccmrx;
9000ece4:	61d9      	str	r1, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
9000ece6:	6929      	ldr	r1, [r5, #16]
  TIMx->CCR4 = OC_Config->Pulse;
9000ece8:	6418      	str	r0, [r3, #64]	@ 0x40
  TIMx->CCER = tmpccer;
9000ecea:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
9000ecec:	69da      	ldr	r2, [r3, #28]
9000ecee:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
9000ecf2:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
9000ecf4:	69da      	ldr	r2, [r3, #28]
9000ecf6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
9000ecfa:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
9000ecfc:	69da      	ldr	r2, [r3, #28]
9000ecfe:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000ed02:	61da      	str	r2, [r3, #28]
      break;
9000ed04:	e7a0      	b.n	9000ec48 <HAL_TIM_PWM_ConfigChannel+0xe8>
      TIM_OC5_SetConfig(htim->Instance, sConfig);
9000ed06:	6803      	ldr	r3, [r0, #0]
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
9000ed08:	4921      	ldr	r1, [pc, #132]	@ (9000ed90 <HAL_TIM_PWM_ConfigChannel+0x230>)
  TIMx->CCER &= ~TIM_CCER_CC5E;
9000ed0a:	6a1a      	ldr	r2, [r3, #32]
9000ed0c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000ed10:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
9000ed12:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
9000ed14:	6858      	ldr	r0, [r3, #4]
  tmpccmrx = TIMx->CCMR3;
9000ed16:	6d5e      	ldr	r6, [r3, #84]	@ 0x54
  tmpccer &= ~TIM_CCER_CC5P;
9000ed18:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
9000ed1c:	4031      	ands	r1, r6
  tmpccmrx |= OC_Config->OCMode;
9000ed1e:	682e      	ldr	r6, [r5, #0]
9000ed20:	4331      	orrs	r1, r6
  tmpccer |= (OC_Config->OCPolarity << 16U);
9000ed22:	68ae      	ldr	r6, [r5, #8]
9000ed24:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
  if (IS_TIM_BREAK_INSTANCE(TIMx))
9000ed28:	4e16      	ldr	r6, [pc, #88]	@ (9000ed84 <HAL_TIM_PWM_ConfigChannel+0x224>)
9000ed2a:	42b3      	cmp	r3, r6
9000ed2c:	d00e      	beq.n	9000ed4c <HAL_TIM_PWM_ConfigChannel+0x1ec>
9000ed2e:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000ed32:	42b3      	cmp	r3, r6
9000ed34:	d00a      	beq.n	9000ed4c <HAL_TIM_PWM_ConfigChannel+0x1ec>
9000ed36:	4f14      	ldr	r7, [pc, #80]	@ (9000ed88 <HAL_TIM_PWM_ConfigChannel+0x228>)
9000ed38:	f506 4680 	add.w	r6, r6, #16384	@ 0x4000
9000ed3c:	42b3      	cmp	r3, r6
9000ed3e:	bf18      	it	ne
9000ed40:	42bb      	cmpne	r3, r7
9000ed42:	d003      	beq.n	9000ed4c <HAL_TIM_PWM_ConfigChannel+0x1ec>
9000ed44:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000ed48:	42b3      	cmp	r3, r6
9000ed4a:	d104      	bne.n	9000ed56 <HAL_TIM_PWM_ConfigChannel+0x1f6>
    tmpcr2 &= ~TIM_CR2_OIS5;
9000ed4c:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
9000ed50:	696e      	ldr	r6, [r5, #20]
9000ed52:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
  TIMx->CR2 = tmpcr2;
9000ed56:	6058      	str	r0, [r3, #4]
  TIMx->CCR5 = OC_Config->Pulse;
9000ed58:	6868      	ldr	r0, [r5, #4]
  TIMx->CCMR3 = tmpccmrx;
9000ed5a:	6559      	str	r1, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
9000ed5c:	6929      	ldr	r1, [r5, #16]
  TIMx->CCR5 = OC_Config->Pulse;
9000ed5e:	6598      	str	r0, [r3, #88]	@ 0x58
  TIMx->CCER = tmpccer;
9000ed60:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
9000ed62:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
9000ed64:	f042 0208 	orr.w	r2, r2, #8
9000ed68:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
9000ed6a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
9000ed6c:	f022 0204 	bic.w	r2, r2, #4
9000ed70:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
9000ed72:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
9000ed74:	430a      	orrs	r2, r1
9000ed76:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
9000ed78:	e766      	b.n	9000ec48 <HAL_TIM_PWM_ConfigChannel+0xe8>
  __HAL_LOCK(htim);
9000ed7a:	2002      	movs	r0, #2
}
9000ed7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000ed7e:	bf00      	nop
9000ed80:	feff8fff 	.word	0xfeff8fff
9000ed84:	40010000 	.word	0x40010000
9000ed88:	40014000 	.word	0x40014000
9000ed8c:	feff8cff 	.word	0xfeff8cff
9000ed90:	fffeff8f 	.word	0xfffeff8f

9000ed94 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
9000ed94:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
9000ed98:	2b01      	cmp	r3, #1
9000ed9a:	d04b      	beq.n	9000ee34 <HAL_TIMEx_MasterConfigSynchronization+0xa0>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
9000ed9c:	6803      	ldr	r3, [r0, #0]
9000ed9e:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
9000eda0:	2002      	movs	r0, #2
{
9000eda2:	b430      	push	{r4, r5}

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
9000eda4:	4d24      	ldr	r5, [pc, #144]	@ (9000ee38 <HAL_TIMEx_MasterConfigSynchronization+0xa4>)
  htim->State = HAL_TIM_STATE_BUSY;
9000eda6:	f882 003d 	strb.w	r0, [r2, #61]	@ 0x3d
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
9000edaa:	42ab      	cmp	r3, r5
  tmpcr2 = htim->Instance->CR2;
9000edac:	6858      	ldr	r0, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
9000edae:	689c      	ldr	r4, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
9000edb0:	d029      	beq.n	9000ee06 <HAL_TIMEx_MasterConfigSynchronization+0x72>
9000edb2:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000edb6:	42ab      	cmp	r3, r5
9000edb8:	d025      	beq.n	9000ee06 <HAL_TIMEx_MasterConfigSynchronization+0x72>
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000edba:	4d20      	ldr	r5, [pc, #128]	@ (9000ee3c <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
  tmpcr2 &= ~TIM_CR2_MMS;
9000edbc:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000edc0:	42ab      	cmp	r3, r5
9000edc2:	bf18      	it	ne
9000edc4:	f1b3 4f80 	cmpne.w	r3, #1073741824	@ 0x40000000
9000edc8:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000edcc:	bf0c      	ite	eq
9000edce:	f04f 0c01 	moveq.w	ip, #1
9000edd2:	f04f 0c00 	movne.w	ip, #0
9000edd6:	42ab      	cmp	r3, r5
9000edd8:	bf08      	it	eq
9000edda:	f04c 0c01 	orreq.w	ip, ip, #1
9000edde:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000ede2:	42ab      	cmp	r3, r5
9000ede4:	bf08      	it	eq
9000ede6:	f04c 0c01 	orreq.w	ip, ip, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
9000edea:	680d      	ldr	r5, [r1, #0]
9000edec:	4328      	orrs	r0, r5
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000edee:	4d14      	ldr	r5, [pc, #80]	@ (9000ee40 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
  htim->Instance->CR2 = tmpcr2;
9000edf0:	6058      	str	r0, [r3, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000edf2:	42ab      	cmp	r3, r5
9000edf4:	bf14      	ite	ne
9000edf6:	4660      	movne	r0, ip
9000edf8:	f04c 0001 	orreq.w	r0, ip, #1
9000edfc:	b960      	cbnz	r0, 9000ee18 <HAL_TIMEx_MasterConfigSynchronization+0x84>
9000edfe:	4811      	ldr	r0, [pc, #68]	@ (9000ee44 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
9000ee00:	4283      	cmp	r3, r0
9000ee02:	d009      	beq.n	9000ee18 <HAL_TIMEx_MasterConfigSynchronization+0x84>
9000ee04:	e00d      	b.n	9000ee22 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
9000ee06:	684d      	ldr	r5, [r1, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
9000ee08:	f420 0070 	bic.w	r0, r0, #15728640	@ 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
9000ee0c:	4328      	orrs	r0, r5
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
9000ee0e:	680d      	ldr	r5, [r1, #0]
  tmpcr2 &= ~TIM_CR2_MMS;
9000ee10:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
9000ee14:	4328      	orrs	r0, r5
  htim->Instance->CR2 = tmpcr2;
9000ee16:	6058      	str	r0, [r3, #4]
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
9000ee18:	6889      	ldr	r1, [r1, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
9000ee1a:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
9000ee1e:	430c      	orrs	r4, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
9000ee20:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
9000ee22:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
9000ee24:	2101      	movs	r1, #1

  return HAL_OK;
9000ee26:	4618      	mov	r0, r3
  htim->State = HAL_TIM_STATE_READY;
9000ee28:	f882 103d 	strb.w	r1, [r2, #61]	@ 0x3d
  __HAL_UNLOCK(htim);
9000ee2c:	f882 303c 	strb.w	r3, [r2, #60]	@ 0x3c
}
9000ee30:	bc30      	pop	{r4, r5}
9000ee32:	4770      	bx	lr
  __HAL_LOCK(htim);
9000ee34:	2002      	movs	r0, #2
}
9000ee36:	4770      	bx	lr
9000ee38:	40010000 	.word	0x40010000
9000ee3c:	40000400 	.word	0x40000400
9000ee40:	40001800 	.word	0x40001800
9000ee44:	40014000 	.word	0x40014000

9000ee48 <HAL_TIMEx_ConfigBreakDeadTime>:
  assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
  assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->BreakFilter));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));

  /* Check input state */
  __HAL_LOCK(htim);
9000ee48:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
9000ee4c:	2b01      	cmp	r3, #1
9000ee4e:	d03d      	beq.n	9000eecc <HAL_TIMEx_ConfigBreakDeadTime+0x84>
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
9000ee50:	4602      	mov	r2, r0
9000ee52:	6848      	ldr	r0, [r1, #4]
{
9000ee54:	b410      	push	{r4}
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
9000ee56:	e9d1 4302 	ldrd	r4, r3, [r1, #8]
9000ee5a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
9000ee5e:	4323      	orrs	r3, r4
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
9000ee60:	680c      	ldr	r4, [r1, #0]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
9000ee62:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
9000ee66:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
9000ee68:	6908      	ldr	r0, [r1, #16]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
9000ee6a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
9000ee6e:	4323      	orrs	r3, r4
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
9000ee70:	694c      	ldr	r4, [r1, #20]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
9000ee72:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000ee76:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
9000ee78:	6a88      	ldr	r0, [r1, #40]	@ 0x28
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
9000ee7a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000ee7e:	4323      	orrs	r3, r4
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << TIM_BDTR_BKF_Pos));
9000ee80:	698c      	ldr	r4, [r1, #24]
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
9000ee82:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
9000ee86:	4303      	orrs	r3, r0
    /* Set BREAK AF mode */
    MODIFY_REG(tmpbdtr, TIM_BDTR_BKBID, sBreakDeadTimeConfig->BreakAFMode);
  }

#endif /* TIM_BDTR_BKBID */
  if (IS_TIM_BKIN2_INSTANCE(htim->Instance))
9000ee88:	6810      	ldr	r0, [r2, #0]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << TIM_BDTR_BKF_Pos));
9000ee8a:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
9000ee8e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
  if (IS_TIM_BKIN2_INSTANCE(htim->Instance))
9000ee92:	4c0f      	ldr	r4, [pc, #60]	@ (9000eed0 <HAL_TIMEx_ConfigBreakDeadTime+0x88>)
9000ee94:	42a0      	cmp	r0, r4
9000ee96:	d00b      	beq.n	9000eeb0 <HAL_TIMEx_ConfigBreakDeadTime+0x68>
9000ee98:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
9000ee9c:	42a0      	cmp	r0, r4
9000ee9e:	d007      	beq.n	9000eeb0 <HAL_TIMEx_ConfigBreakDeadTime+0x68>
  }

  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;

  __HAL_UNLOCK(htim);
9000eea0:	2100      	movs	r1, #0
  htim->Instance->BDTR = tmpbdtr;
9000eea2:	6443      	str	r3, [r0, #68]	@ 0x44
  __HAL_UNLOCK(htim);
9000eea4:	f882 103c 	strb.w	r1, [r2, #60]	@ 0x3c

  return HAL_OK;
9000eea8:	4608      	mov	r0, r1
}
9000eeaa:	f85d 4b04 	ldr.w	r4, [sp], #4
9000eeae:	4770      	bx	lr
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2F, (sBreakDeadTimeConfig->Break2Filter << TIM_BDTR_BK2F_Pos));
9000eeb0:	6a4c      	ldr	r4, [r1, #36]	@ 0x24
9000eeb2:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
9000eeb6:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
9000eeba:	e9d1 4107 	ldrd	r4, r1, [r1, #28]
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2E, sBreakDeadTimeConfig->Break2State);
9000eebe:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000eec2:	4323      	orrs	r3, r4
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
9000eec4:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
9000eec8:	430b      	orrs	r3, r1
9000eeca:	e7e9      	b.n	9000eea0 <HAL_TIMEx_ConfigBreakDeadTime+0x58>
  __HAL_LOCK(htim);
9000eecc:	2002      	movs	r0, #2
}
9000eece:	4770      	bx	lr
9000eed0:	40010000 	.word	0x40010000

9000eed4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000eed4:	4770      	bx	lr
9000eed6:	bf00      	nop

9000eed8 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000eed8:	4770      	bx	lr
9000eeda:	bf00      	nop

9000eedc <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000eedc:	4770      	bx	lr
9000eede:	bf00      	nop

9000eee0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000eee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000eee4:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000eee8:	e9d1 8200 	ldrd	r8, r2, [r1]
9000eeec:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000eeee:	ea43 030e 	orr.w	r3, r3, lr
9000eef2:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000eef6:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000eefa:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000eefc:	f1b8 0f00 	cmp.w	r8, #0
9000ef00:	d10f      	bne.n	9000ef22 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ef02:	433b      	orrs	r3, r7
9000ef04:	4313      	orrs	r3, r2
9000ef06:	4a11      	ldr	r2, [pc, #68]	@ (9000ef4c <FMC_SDRAM_Init+0x6c>)
9000ef08:	ea43 030c 	orr.w	r3, r3, ip
9000ef0c:	4333      	orrs	r3, r6
9000ef0e:	432b      	orrs	r3, r5
9000ef10:	4323      	orrs	r3, r4
9000ef12:	430b      	orrs	r3, r1
9000ef14:	6801      	ldr	r1, [r0, #0]
9000ef16:	400a      	ands	r2, r1
9000ef18:	4313      	orrs	r3, r2
9000ef1a:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000ef1c:	2000      	movs	r0, #0
9000ef1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ef22:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ef26:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ef28:	4332      	orrs	r2, r6
9000ef2a:	432a      	orrs	r2, r5
9000ef2c:	4322      	orrs	r2, r4
9000ef2e:	4c07      	ldr	r4, [pc, #28]	@ (9000ef4c <FMC_SDRAM_Init+0x6c>)
9000ef30:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ef32:	6801      	ldr	r1, [r0, #0]
9000ef34:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000ef38:	430b      	orrs	r3, r1
9000ef3a:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ef3c:	6843      	ldr	r3, [r0, #4]
9000ef3e:	401c      	ands	r4, r3
9000ef40:	4322      	orrs	r2, r4
9000ef42:	6042      	str	r2, [r0, #4]
}
9000ef44:	2000      	movs	r0, #0
9000ef46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000ef4a:	bf00      	nop
9000ef4c:	ffff8000 	.word	0xffff8000

9000ef50 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000ef50:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ef52:	68cc      	ldr	r4, [r1, #12]
9000ef54:	694b      	ldr	r3, [r1, #20]
9000ef56:	3c01      	subs	r4, #1
9000ef58:	688d      	ldr	r5, [r1, #8]
9000ef5a:	698f      	ldr	r7, [r1, #24]
9000ef5c:	3b01      	subs	r3, #1
9000ef5e:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000ef62:	684c      	ldr	r4, [r1, #4]
9000ef64:	680e      	ldr	r6, [r1, #0]
9000ef66:	3d01      	subs	r5, #1
9000ef68:	3c01      	subs	r4, #1
9000ef6a:	051b      	lsls	r3, r3, #20
9000ef6c:	022d      	lsls	r5, r5, #8
9000ef6e:	3e01      	subs	r6, #1
9000ef70:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000ef74:	690c      	ldr	r4, [r1, #16]
9000ef76:	1e79      	subs	r1, r7, #1
9000ef78:	3c01      	subs	r4, #1
9000ef7a:	0609      	lsls	r1, r1, #24
9000ef7c:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000ef7e:	b972      	cbnz	r2, 9000ef9e <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ef80:	ea4e 0303 	orr.w	r3, lr, r3
9000ef84:	6882      	ldr	r2, [r0, #8]
9000ef86:	4333      	orrs	r3, r6
9000ef88:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000ef8c:	ea43 030c 	orr.w	r3, r3, ip
9000ef90:	432b      	orrs	r3, r5
9000ef92:	4323      	orrs	r3, r4
9000ef94:	430b      	orrs	r3, r1
9000ef96:	4313      	orrs	r3, r2
9000ef98:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000ef9a:	2000      	movs	r0, #0
9000ef9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ef9e:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000efa2:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000efa6:	4a08      	ldr	r2, [pc, #32]	@ (9000efc8 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000efa8:	4333      	orrs	r3, r6
9000efaa:	4323      	orrs	r3, r4
9000efac:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000efae:	6881      	ldr	r1, [r0, #8]
9000efb0:	400a      	ands	r2, r1
9000efb2:	ea42 020e 	orr.w	r2, r2, lr
9000efb6:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000efb8:	68c2      	ldr	r2, [r0, #12]
9000efba:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000efbe:	4313      	orrs	r3, r2
9000efc0:	60c3      	str	r3, [r0, #12]
}
9000efc2:	2000      	movs	r0, #0
9000efc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000efc6:	bf00      	nop
9000efc8:	ff0f0fff 	.word	0xff0f0fff

9000efcc <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000efcc:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000efce:	2200      	movs	r2, #0
{
9000efd0:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000efd2:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000efd6:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000efda:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000efde:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000efe2:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000efe4:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000efe8:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000efea:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000efec:	619a      	str	r2, [r3, #24]
}
9000efee:	bc30      	pop	{r4, r5}
9000eff0:	4770      	bx	lr
9000eff2:	bf00      	nop

9000eff4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000eff4:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000eff6:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000effa:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000effc:	6900      	ldr	r0, [r0, #16]
9000effe:	4323      	orrs	r3, r4
9000f000:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000f004:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000f008:	4c05      	ldr	r4, [pc, #20]	@ (9000f020 <FMC_SDRAM_SendCommand+0x2c>)
9000f00a:	3901      	subs	r1, #1
9000f00c:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000f00e:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f010:	4323      	orrs	r3, r4
}
9000f012:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f016:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000f01a:	6113      	str	r3, [r2, #16]
}
9000f01c:	4770      	bx	lr
9000f01e:	bf00      	nop
9000f020:	ffc00000 	.word	0xffc00000

9000f024 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000f024:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f026:	4b05      	ldr	r3, [pc, #20]	@ (9000f03c <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000f028:	2000      	movs	r0, #0
{
9000f02a:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f02c:	6954      	ldr	r4, [r2, #20]
9000f02e:	4023      	ands	r3, r4
}
9000f030:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f034:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000f038:	6153      	str	r3, [r2, #20]
}
9000f03a:	4770      	bx	lr
9000f03c:	ffffc001 	.word	0xffffc001

9000f040 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000f040:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000f042:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f046:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000f048:	f002 fc2a 	bl	900118a0 <xTaskGetSchedulerState>
9000f04c:	2801      	cmp	r0, #1
9000f04e:	d100      	bne.n	9000f052 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000f050:	bd08      	pop	{r3, pc}
9000f052:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000f056:	f000 bc55 	b.w	9000f904 <xPortSysTickHandler>
9000f05a:	bf00      	nop

9000f05c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000f05c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f060:	b92b      	cbnz	r3, 9000f06e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000f062:	4b06      	ldr	r3, [pc, #24]	@ (9000f07c <osKernelInitialize+0x20>)
9000f064:	6818      	ldr	r0, [r3, #0]
9000f066:	b928      	cbnz	r0, 9000f074 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000f068:	2201      	movs	r2, #1
9000f06a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000f06c:	4770      	bx	lr
    stat = osErrorISR;
9000f06e:	f06f 0005 	mvn.w	r0, #5
9000f072:	4770      	bx	lr
    } else {
      stat = osError;
9000f074:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
    }
  }

  return (stat);
}
9000f078:	4770      	bx	lr
9000f07a:	bf00      	nop
9000f07c:	2400a6cc 	.word	0x2400a6cc

9000f080 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000f080:	b510      	push	{r4, lr}
9000f082:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000f086:	b974      	cbnz	r4, 9000f0a6 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000f088:	4b08      	ldr	r3, [pc, #32]	@ (9000f0ac <osKernelStart+0x2c>)
9000f08a:	681a      	ldr	r2, [r3, #0]
9000f08c:	2a01      	cmp	r2, #1
9000f08e:	d107      	bne.n	9000f0a0 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000f090:	4907      	ldr	r1, [pc, #28]	@ (9000f0b0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000f092:	2202      	movs	r2, #2
9000f094:	77cc      	strb	r4, [r1, #31]
9000f096:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000f098:	f002 f932 	bl	90011300 <vTaskStartScheduler>
      stat = osOK;
9000f09c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000f09e:	bd10      	pop	{r4, pc}
      stat = osError;
9000f0a0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
9000f0a4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f0a6:	f06f 0005 	mvn.w	r0, #5
}
9000f0aa:	bd10      	pop	{r4, pc}
9000f0ac:	2400a6cc 	.word	0x2400a6cc
9000f0b0:	e000ed00 	.word	0xe000ed00

9000f0b4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f0b4:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000f0b6:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f0b8:	b087      	sub	sp, #28
  hTask = NULL;
9000f0ba:	9505      	str	r5, [sp, #20]
9000f0bc:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000f0c0:	b300      	cbz	r0, 9000f104 <osThreadNew+0x50>
9000f0c2:	b9fb      	cbnz	r3, 9000f104 <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000f0c4:	4614      	mov	r4, r2
9000f0c6:	b302      	cbz	r2, 9000f10a <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000f0c8:	6996      	ldr	r6, [r2, #24]
9000f0ca:	b9c6      	cbnz	r6, 9000f0fe <osThreadNew+0x4a>
9000f0cc:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f0ce:	6863      	ldr	r3, [r4, #4]
9000f0d0:	07db      	lsls	r3, r3, #31
9000f0d2:	d417      	bmi.n	9000f104 <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000f0d4:	6963      	ldr	r3, [r4, #20]
9000f0d6:	b32b      	cbz	r3, 9000f124 <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000f0d8:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f0da:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000f0dc:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f0e0:	68e7      	ldr	r7, [r4, #12]
9000f0e2:	b30d      	cbz	r5, 9000f128 <osThreadNew+0x74>
9000f0e4:	2f5f      	cmp	r7, #95	@ 0x5f
9000f0e6:	d90d      	bls.n	9000f104 <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000f0e8:	6924      	ldr	r4, [r4, #16]
9000f0ea:	b15b      	cbz	r3, 9000f104 <osThreadNew+0x50>
9000f0ec:	b154      	cbz	r4, 9000f104 <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000f0ee:	460b      	mov	r3, r1
9000f0f0:	9600      	str	r6, [sp, #0]
9000f0f2:	4661      	mov	r1, ip
9000f0f4:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000f0f8:	f001 ff22 	bl	90010f40 <xTaskCreateStatic>
9000f0fc:	e003      	b.n	9000f106 <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f0fe:	1e72      	subs	r2, r6, #1
9000f100:	2a37      	cmp	r2, #55	@ 0x37
9000f102:	d9e4      	bls.n	9000f0ce <osThreadNew+0x1a>
        return (NULL);
9000f104:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000f106:	b007      	add	sp, #28
9000f108:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f10a:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000f10c:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f10e:	460b      	mov	r3, r1
9000f110:	4621      	mov	r1, r4
9000f112:	ac05      	add	r4, sp, #20
9000f114:	9600      	str	r6, [sp, #0]
9000f116:	9401      	str	r4, [sp, #4]
9000f118:	f001 ffbc 	bl	90011094 <xTaskCreate>
9000f11c:	2801      	cmp	r0, #1
9000f11e:	d1f1      	bne.n	9000f104 <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000f120:	9805      	ldr	r0, [sp, #20]
9000f122:	e7f0      	b.n	9000f106 <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000f124:	2280      	movs	r2, #128	@ 0x80
9000f126:	e7d8      	b.n	9000f0da <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000f128:	2f00      	cmp	r7, #0
9000f12a:	d1eb      	bne.n	9000f104 <osThreadNew+0x50>
9000f12c:	6923      	ldr	r3, [r4, #16]
9000f12e:	2b00      	cmp	r3, #0
9000f130:	d1e8      	bne.n	9000f104 <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f132:	b292      	uxth	r2, r2
9000f134:	4664      	mov	r4, ip
9000f136:	e7ea      	b.n	9000f10e <osThreadNew+0x5a>

9000f138 <osThreadSuspend>:

  return (stat);
}

#if (configUSE_OS2_THREAD_SUSPEND_RESUME == 1)
osStatus_t osThreadSuspend (osThreadId_t thread_id) {
9000f138:	b510      	push	{r4, lr}
9000f13a:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
9000f13e:	b924      	cbnz	r4, 9000f14a <osThreadSuspend+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
9000f140:	b130      	cbz	r0, 9000f150 <osThreadSuspend+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskSuspend (hTask);
9000f142:	f002 fa17 	bl	90011574 <vTaskSuspend>
    stat = osOK;
9000f146:	4620      	mov	r0, r4
  }

  return (stat);
}
9000f148:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f14a:	f06f 0005 	mvn.w	r0, #5
}
9000f14e:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000f150:	f06f 0003 	mvn.w	r0, #3
}
9000f154:	bd10      	pop	{r4, pc}
9000f156:	bf00      	nop

9000f158 <osThreadResume>:

osStatus_t osThreadResume (osThreadId_t thread_id) {
9000f158:	b510      	push	{r4, lr}
9000f15a:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
9000f15e:	b924      	cbnz	r4, 9000f16a <osThreadResume+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
9000f160:	b130      	cbz	r0, 9000f170 <osThreadResume+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskResume (hTask);
9000f162:	f002 f87f 	bl	90011264 <vTaskResume>
    stat = osOK;
9000f166:	4620      	mov	r0, r4
  }

  return (stat);
}
9000f168:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f16a:	f06f 0005 	mvn.w	r0, #5
}
9000f16e:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000f170:	f06f 0003 	mvn.w	r0, #3
}
9000f174:	bd10      	pop	{r4, pc}
9000f176:	bf00      	nop

9000f178 <osDelay>:
9000f178:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f17c:	b93a      	cbnz	r2, 9000f18e <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000f17e:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000f180:	b908      	cbnz	r0, 9000f186 <osDelay+0xe>
    stat = osOK;
9000f182:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000f184:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000f186:	f002 f817 	bl	900111b8 <vTaskDelay>
    stat = osOK;
9000f18a:	2000      	movs	r0, #0
}
9000f18c:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000f18e:	f06f 0005 	mvn.w	r0, #5
}
9000f192:	4770      	bx	lr

9000f194 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000f194:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f196:	b083      	sub	sp, #12
9000f198:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000f19c:	b98e      	cbnz	r6, 9000f1c2 <osSemaphoreNew+0x2e>
9000f19e:	4605      	mov	r5, r0
9000f1a0:	b178      	cbz	r0, 9000f1c2 <osSemaphoreNew+0x2e>
9000f1a2:	4288      	cmp	r0, r1
9000f1a4:	460f      	mov	r7, r1
9000f1a6:	d30c      	bcc.n	9000f1c2 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000f1a8:	4614      	mov	r4, r2
9000f1aa:	b172      	cbz	r2, 9000f1ca <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000f1ac:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000f1b0:	b14a      	cbz	r2, 9000f1c6 <osSemaphoreNew+0x32>
9000f1b2:	2b4f      	cmp	r3, #79	@ 0x4f
9000f1b4:	d905      	bls.n	9000f1c2 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000f1b6:	2801      	cmp	r0, #1
9000f1b8:	d02f      	beq.n	9000f21a <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000f1ba:	f000 fd81 	bl	9000fcc0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000f1be:	4605      	mov	r5, r0
9000f1c0:	b968      	cbnz	r0, 9000f1de <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000f1c2:	2500      	movs	r5, #0
9000f1c4:	e010      	b.n	9000f1e8 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000f1c6:	2b00      	cmp	r3, #0
9000f1c8:	d1fb      	bne.n	9000f1c2 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000f1ca:	2d01      	cmp	r5, #1
9000f1cc:	d00f      	beq.n	9000f1ee <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000f1ce:	4628      	mov	r0, r5
9000f1d0:	4639      	mov	r1, r7
9000f1d2:	f000 fdd5 	bl	9000fd80 <xQueueCreateCountingSemaphore>
9000f1d6:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000f1d8:	2d00      	cmp	r5, #0
9000f1da:	d0f2      	beq.n	9000f1c2 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000f1dc:	b104      	cbz	r4, 9000f1e0 <osSemaphoreNew+0x4c>
          name = attr->name;
9000f1de:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000f1e0:	4621      	mov	r1, r4
9000f1e2:	4628      	mov	r0, r5
9000f1e4:	f001 fc06 	bl	900109f4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000f1e8:	4628      	mov	r0, r5
9000f1ea:	b003      	add	sp, #12
9000f1ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000f1ee:	4628      	mov	r0, r5
9000f1f0:	2203      	movs	r2, #3
9000f1f2:	2100      	movs	r1, #0
9000f1f4:	f000 fd22 	bl	9000fc3c <xQueueGenericCreate>
9000f1f8:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000f1fa:	2d00      	cmp	r5, #0
9000f1fc:	d0e1      	beq.n	9000f1c2 <osSemaphoreNew+0x2e>
9000f1fe:	2f00      	cmp	r7, #0
9000f200:	d0ea      	beq.n	9000f1d8 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f202:	2300      	movs	r3, #0
9000f204:	4628      	mov	r0, r5
9000f206:	461a      	mov	r2, r3
9000f208:	4619      	mov	r1, r3
9000f20a:	f000 fdff 	bl	9000fe0c <xQueueGenericSend>
9000f20e:	2801      	cmp	r0, #1
9000f210:	d0e4      	beq.n	9000f1dc <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000f212:	4628      	mov	r0, r5
9000f214:	f001 fba8 	bl	90010968 <vQueueDelete>
      if (hSemaphore != NULL) {
9000f218:	e7d3      	b.n	9000f1c2 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000f21a:	4613      	mov	r3, r2
9000f21c:	2203      	movs	r2, #3
9000f21e:	4631      	mov	r1, r6
9000f220:	9200      	str	r2, [sp, #0]
9000f222:	4632      	mov	r2, r6
9000f224:	f000 fc9e 	bl	9000fb64 <xQueueGenericCreateStatic>
9000f228:	4605      	mov	r5, r0
9000f22a:	e7e6      	b.n	9000f1fa <osSemaphoreNew+0x66>

9000f22c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f22c:	b360      	cbz	r0, 9000f288 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000f22e:	b510      	push	{r4, lr}
9000f230:	460c      	mov	r4, r1
9000f232:	b082      	sub	sp, #8
9000f234:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f238:	b1b3      	cbz	r3, 9000f268 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000f23a:	bb11      	cbnz	r1, 9000f282 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f23c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f23e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f240:	f001 fb34 	bl	900108ac <xQueueReceiveFromISR>
9000f244:	2801      	cmp	r0, #1
9000f246:	d118      	bne.n	9000f27a <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f248:	9b01      	ldr	r3, [sp, #4]
9000f24a:	b913      	cbnz	r3, 9000f252 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000f24c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f24e:	b002      	add	sp, #8
9000f250:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000f252:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f256:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f25a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f25e:	f3bf 8f4f 	dsb	sy
9000f262:	f3bf 8f6f 	isb	sy
9000f266:	e7f1      	b.n	9000f24c <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000f268:	f001 f994 	bl	90010594 <xQueueSemaphoreTake>
9000f26c:	2801      	cmp	r0, #1
9000f26e:	d0ed      	beq.n	9000f24c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000f270:	b11c      	cbz	r4, 9000f27a <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000f272:	f06f 0001 	mvn.w	r0, #1
}
9000f276:	b002      	add	sp, #8
9000f278:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000f27a:	f06f 0002 	mvn.w	r0, #2
}
9000f27e:	b002      	add	sp, #8
9000f280:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000f282:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f286:	e7e2      	b.n	9000f24e <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000f288:	f06f 0003 	mvn.w	r0, #3
}
9000f28c:	4770      	bx	lr
9000f28e:	bf00      	nop

9000f290 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f290:	b328      	cbz	r0, 9000f2de <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000f292:	b500      	push	{lr}
9000f294:	b083      	sub	sp, #12
9000f296:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f29a:	b19b      	cbz	r3, 9000f2c4 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000f29c:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f29e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000f2a0:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f2a2:	f000 ff9b 	bl	900101dc <xQueueGiveFromISR>
9000f2a6:	2801      	cmp	r0, #1
9000f2a8:	d116      	bne.n	9000f2d8 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000f2aa:	9b01      	ldr	r3, [sp, #4]
9000f2ac:	b183      	cbz	r3, 9000f2d0 <osSemaphoreRelease+0x40>
9000f2ae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f2b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f2b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f2ba:	f3bf 8f4f 	dsb	sy
9000f2be:	f3bf 8f6f 	isb	sy
9000f2c2:	e005      	b.n	9000f2d0 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f2c4:	461a      	mov	r2, r3
9000f2c6:	4619      	mov	r1, r3
9000f2c8:	f000 fda0 	bl	9000fe0c <xQueueGenericSend>
9000f2cc:	2801      	cmp	r0, #1
9000f2ce:	d103      	bne.n	9000f2d8 <osSemaphoreRelease+0x48>
  stat = osOK;
9000f2d0:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000f2d2:	b003      	add	sp, #12
9000f2d4:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000f2d8:	f06f 0002 	mvn.w	r0, #2
9000f2dc:	e7f9      	b.n	9000f2d2 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000f2de:	f06f 0003 	mvn.w	r0, #3
}
9000f2e2:	4770      	bx	lr

9000f2e4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000f2e4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f2e6:	b083      	sub	sp, #12
9000f2e8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000f2ec:	b987      	cbnz	r7, 9000f310 <osMessageQueueNew+0x2c>
9000f2ee:	4605      	mov	r5, r0
9000f2f0:	b170      	cbz	r0, 9000f310 <osMessageQueueNew+0x2c>
9000f2f2:	b169      	cbz	r1, 9000f310 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000f2f4:	4614      	mov	r4, r2
9000f2f6:	b17a      	cbz	r2, 9000f318 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f2f8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000f2fc:	b1c3      	cbz	r3, 9000f330 <osMessageQueueNew+0x4c>
9000f2fe:	2a4f      	cmp	r2, #79	@ 0x4f
9000f300:	d906      	bls.n	9000f310 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f302:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f304:	b122      	cbz	r2, 9000f310 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f306:	fb01 f505 	mul.w	r5, r1, r5
9000f30a:	6966      	ldr	r6, [r4, #20]
9000f30c:	42ae      	cmp	r6, r5
9000f30e:	d21e      	bcs.n	9000f34e <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000f310:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000f312:	4628      	mov	r0, r5
9000f314:	b003      	add	sp, #12
9000f316:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000f318:	f000 fc90 	bl	9000fc3c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f31c:	4605      	mov	r5, r0
9000f31e:	2800      	cmp	r0, #0
9000f320:	d0f6      	beq.n	9000f310 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000f322:	4628      	mov	r0, r5
9000f324:	4621      	mov	r1, r4
9000f326:	f001 fb65 	bl	900109f4 <vQueueAddToRegistry>
}
9000f32a:	4628      	mov	r0, r5
9000f32c:	b003      	add	sp, #12
9000f32e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000f330:	2a00      	cmp	r2, #0
9000f332:	d1ed      	bne.n	9000f310 <osMessageQueueNew+0x2c>
9000f334:	6923      	ldr	r3, [r4, #16]
9000f336:	2b00      	cmp	r3, #0
9000f338:	d1ea      	bne.n	9000f310 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000f33a:	6962      	ldr	r2, [r4, #20]
9000f33c:	2a00      	cmp	r2, #0
9000f33e:	d1e7      	bne.n	9000f310 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000f340:	f000 fc7c 	bl	9000fc3c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f344:	4605      	mov	r5, r0
9000f346:	2800      	cmp	r0, #0
9000f348:	d0e2      	beq.n	9000f310 <osMessageQueueNew+0x2c>
        name = attr->name;
9000f34a:	6824      	ldr	r4, [r4, #0]
9000f34c:	e7e9      	b.n	9000f322 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000f34e:	9700      	str	r7, [sp, #0]
9000f350:	f000 fc08 	bl	9000fb64 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000f354:	4605      	mov	r5, r0
9000f356:	2800      	cmp	r0, #0
9000f358:	d1f7      	bne.n	9000f34a <osMessageQueueNew+0x66>
9000f35a:	e7d9      	b.n	9000f310 <osMessageQueueNew+0x2c>

9000f35c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000f35c:	b560      	push	{r5, r6, lr}
9000f35e:	461e      	mov	r6, r3
9000f360:	b083      	sub	sp, #12
9000f362:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f366:	fab0 f580 	clz	r5, r0
9000f36a:	fab1 f381 	clz	r3, r1
9000f36e:	096d      	lsrs	r5, r5, #5
9000f370:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000f372:	b1da      	cbz	r2, 9000f3ac <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f374:	2e00      	cmp	r6, #0
9000f376:	bf18      	it	ne
9000f378:	f043 0301 	orrne.w	r3, r3, #1
9000f37c:	bb33      	cbnz	r3, 9000f3cc <osMessageQueuePut+0x70>
9000f37e:	bb2d      	cbnz	r5, 9000f3cc <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000f380:	462b      	mov	r3, r5
9000f382:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f384:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000f386:	f000 fec3 	bl	90010110 <xQueueGenericSendFromISR>
9000f38a:	2801      	cmp	r0, #1
9000f38c:	d11a      	bne.n	9000f3c4 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f38e:	9b01      	ldr	r3, [sp, #4]
9000f390:	b14b      	cbz	r3, 9000f3a6 <osMessageQueuePut+0x4a>
9000f392:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f396:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f39a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f39e:	f3bf 8f4f 	dsb	sy
9000f3a2:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000f3a6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f3a8:	b003      	add	sp, #12
9000f3aa:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000f3ac:	b975      	cbnz	r5, 9000f3cc <osMessageQueuePut+0x70>
9000f3ae:	b96b      	cbnz	r3, 9000f3cc <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000f3b0:	4632      	mov	r2, r6
9000f3b2:	f000 fd2b 	bl	9000fe0c <xQueueGenericSend>
9000f3b6:	2801      	cmp	r0, #1
9000f3b8:	d0f5      	beq.n	9000f3a6 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000f3ba:	b11e      	cbz	r6, 9000f3c4 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000f3bc:	f06f 0001 	mvn.w	r0, #1
}
9000f3c0:	b003      	add	sp, #12
9000f3c2:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000f3c4:	f06f 0002 	mvn.w	r0, #2
}
9000f3c8:	b003      	add	sp, #12
9000f3ca:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000f3cc:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f3d0:	e7ea      	b.n	9000f3a8 <osMessageQueuePut+0x4c>
9000f3d2:	bf00      	nop

9000f3d4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000f3d4:	b570      	push	{r4, r5, r6, lr}
9000f3d6:	461e      	mov	r6, r3
9000f3d8:	b082      	sub	sp, #8
9000f3da:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f3de:	fab0 f580 	clz	r5, r0
9000f3e2:	fab1 f481 	clz	r4, r1
9000f3e6:	096d      	lsrs	r5, r5, #5
9000f3e8:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000f3ea:	b1d3      	cbz	r3, 9000f422 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f3ec:	2e00      	cmp	r6, #0
9000f3ee:	bf18      	it	ne
9000f3f0:	f044 0401 	orrne.w	r4, r4, #1
9000f3f4:	bb2c      	cbnz	r4, 9000f442 <osMessageQueueGet+0x6e>
9000f3f6:	bb25      	cbnz	r5, 9000f442 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000f3f8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f3fa:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000f3fc:	f001 fa56 	bl	900108ac <xQueueReceiveFromISR>
9000f400:	2801      	cmp	r0, #1
9000f402:	d11a      	bne.n	9000f43a <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f404:	9b01      	ldr	r3, [sp, #4]
9000f406:	b14b      	cbz	r3, 9000f41c <osMessageQueueGet+0x48>
9000f408:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f40c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f410:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f414:	f3bf 8f4f 	dsb	sy
9000f418:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000f41c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f41e:	b002      	add	sp, #8
9000f420:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000f422:	b975      	cbnz	r5, 9000f442 <osMessageQueueGet+0x6e>
9000f424:	b96c      	cbnz	r4, 9000f442 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000f426:	4632      	mov	r2, r6
9000f428:	f000 ff2e 	bl	90010288 <xQueueReceive>
9000f42c:	2801      	cmp	r0, #1
9000f42e:	d0f5      	beq.n	9000f41c <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000f430:	b11e      	cbz	r6, 9000f43a <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000f432:	f06f 0001 	mvn.w	r0, #1
}
9000f436:	b002      	add	sp, #8
9000f438:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000f43a:	f06f 0002 	mvn.w	r0, #2
}
9000f43e:	b002      	add	sp, #8
9000f440:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000f442:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f446:	e7ea      	b.n	9000f41e <osMessageQueueGet+0x4a>

9000f448 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000f448:	4b04      	ldr	r3, [pc, #16]	@ (9000f45c <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000f44a:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000f44c:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000f44e:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000f450:	4c03      	ldr	r4, [pc, #12]	@ (9000f460 <vApplicationGetIdleTaskMemory+0x18>)
9000f452:	600c      	str	r4, [r1, #0]
}
9000f454:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000f458:	6013      	str	r3, [r2, #0]
}
9000f45a:	4770      	bx	lr
9000f45c:	2400a66c 	.word	0x2400a66c
9000f460:	2400a46c 	.word	0x2400a46c

9000f464 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000f464:	4b05      	ldr	r3, [pc, #20]	@ (9000f47c <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000f466:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000f468:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000f46a:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000f46e:	4c04      	ldr	r4, [pc, #16]	@ (9000f480 <vApplicationGetTimerTaskMemory+0x1c>)
9000f470:	600c      	str	r4, [r1, #0]
}
9000f472:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000f476:	6013      	str	r3, [r2, #0]
}
9000f478:	4770      	bx	lr
9000f47a:	bf00      	nop
9000f47c:	2400a40c 	.word	0x2400a40c
9000f480:	2400a00c 	.word	0x2400a00c

9000f484 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000f484:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000f488:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000f48a:	f001 ffd5 	bl	90011438 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000f48e:	4a53      	ldr	r2, [pc, #332]	@ (9000f5dc <pvPortMalloc+0x158>)
9000f490:	6815      	ldr	r5, [r2, #0]
9000f492:	2d00      	cmp	r5, #0
9000f494:	d035      	beq.n	9000f502 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000f496:	4b52      	ldr	r3, [pc, #328]	@ (9000f5e0 <pvPortMalloc+0x15c>)
9000f498:	681e      	ldr	r6, [r3, #0]
9000f49a:	4234      	tst	r4, r6
9000f49c:	d12b      	bne.n	9000f4f6 <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000f49e:	b354      	cbz	r4, 9000f4f6 <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000f4a0:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000f4a4:	0764      	lsls	r4, r4, #29
9000f4a6:	d002      	beq.n	9000f4ae <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000f4a8:	f020 0007 	bic.w	r0, r0, #7
9000f4ac:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000f4ae:	b310      	cbz	r0, 9000f4f6 <pvPortMalloc+0x72>
9000f4b0:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000f5f4 <pvPortMalloc+0x170>
9000f4b4:	f8de c000 	ldr.w	ip, [lr]
9000f4b8:	4584      	cmp	ip, r0
9000f4ba:	d31c      	bcc.n	9000f4f6 <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000f4bc:	4c49      	ldr	r4, [pc, #292]	@ (9000f5e4 <pvPortMalloc+0x160>)
9000f4be:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000f4c0:	e003      	b.n	9000f4ca <pvPortMalloc+0x46>
9000f4c2:	681a      	ldr	r2, [r3, #0]
9000f4c4:	b122      	cbz	r2, 9000f4d0 <pvPortMalloc+0x4c>
9000f4c6:	461c      	mov	r4, r3
9000f4c8:	4613      	mov	r3, r2
9000f4ca:	6859      	ldr	r1, [r3, #4]
9000f4cc:	4281      	cmp	r1, r0
9000f4ce:	d3f8      	bcc.n	9000f4c2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000f4d0:	42ab      	cmp	r3, r5
9000f4d2:	d010      	beq.n	9000f4f6 <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000f4d4:	681a      	ldr	r2, [r3, #0]
9000f4d6:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000f4d8:	1a0a      	subs	r2, r1, r0
9000f4da:	2a10      	cmp	r2, #16
9000f4dc:	d947      	bls.n	9000f56e <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000f4de:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000f4e0:	0761      	lsls	r1, r4, #29
9000f4e2:	d02d      	beq.n	9000f540 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000f4e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4e8:	f383 8811 	msr	BASEPRI, r3
9000f4ec:	f3bf 8f6f 	isb	sy
9000f4f0:	f3bf 8f4f 	dsb	sy
9000f4f4:	e7fe      	b.n	9000f4f4 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000f4f6:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000f4f8:	f001 ffa6 	bl	90011448 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000f4fc:	4620      	mov	r0, r4
9000f4fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000f502:	4b39      	ldr	r3, [pc, #228]	@ (9000f5e8 <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000f504:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000f508:	4e36      	ldr	r6, [pc, #216]	@ (9000f5e4 <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000f50a:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000f50c:	4d37      	ldr	r5, [pc, #220]	@ (9000f5ec <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000f50e:	bf18      	it	ne
9000f510:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000f512:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000f516:	bf18      	it	ne
9000f518:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000f51c:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000f51e:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000f520:	6033      	str	r3, [r6, #0]
9000f522:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000f524:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000f526:	1aeb      	subs	r3, r5, r3
}
9000f528:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000f52a:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000f52e:	4a30      	ldr	r2, [pc, #192]	@ (9000f5f0 <pvPortMalloc+0x16c>)
9000f530:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000f532:	4a30      	ldr	r2, [pc, #192]	@ (9000f5f4 <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000f534:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000f538:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000f53a:	4b29      	ldr	r3, [pc, #164]	@ (9000f5e0 <pvPortMalloc+0x15c>)
9000f53c:	6018      	str	r0, [r3, #0]
}
9000f53e:	e7ac      	b.n	9000f49a <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000f540:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000f542:	4a28      	ldr	r2, [pc, #160]	@ (9000f5e4 <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000f544:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000f546:	4617      	mov	r7, r2
9000f548:	6812      	ldr	r2, [r2, #0]
9000f54a:	4294      	cmp	r4, r2
9000f54c:	d8fb      	bhi.n	9000f546 <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000f54e:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f550:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000f554:	eb07 0901 	add.w	r9, r7, r1
9000f558:	454c      	cmp	r4, r9
9000f55a:	d028      	beq.n	9000f5ae <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f55c:	eb04 0108 	add.w	r1, r4, r8
9000f560:	428a      	cmp	r2, r1
9000f562:	d02e      	beq.n	9000f5c2 <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000f564:	4601      	mov	r1, r0
9000f566:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000f568:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000f56a:	bf18      	it	ne
9000f56c:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000f56e:	4820      	ldr	r0, [pc, #128]	@ (9000f5f0 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f570:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000f574:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000f576:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000f578:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f57a:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000f57e:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000f580:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000f584:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000f586:	bf38      	it	cc
9000f588:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000f58a:	481b      	ldr	r0, [pc, #108]	@ (9000f5f8 <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000f58c:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000f58e:	6802      	ldr	r2, [r0, #0]
9000f590:	3201      	adds	r2, #1
9000f592:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000f594:	f001 ff58 	bl	90011448 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000f598:	0763      	lsls	r3, r4, #29
9000f59a:	d0af      	beq.n	9000f4fc <pvPortMalloc+0x78>
9000f59c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f5a0:	f383 8811 	msr	BASEPRI, r3
9000f5a4:	f3bf 8f6f 	isb	sy
9000f5a8:	f3bf 8f4f 	dsb	sy
9000f5ac:	e7fe      	b.n	9000f5ac <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f5ae:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f5b0:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f5b4:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f5b8:	428a      	cmp	r2, r1
9000f5ba:	d001      	beq.n	9000f5c0 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f5bc:	6859      	ldr	r1, [r3, #4]
9000f5be:	e7d6      	b.n	9000f56e <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f5c0:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000f5c2:	42aa      	cmp	r2, r5
9000f5c4:	d006      	beq.n	9000f5d4 <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f5c6:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f5c8:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f5ca:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f5cc:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f5ce:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f5d0:	6859      	ldr	r1, [r3, #4]
9000f5d2:	e7c9      	b.n	9000f568 <pvPortMalloc+0xe4>
9000f5d4:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000f5d6:	6022      	str	r2, [r4, #0]
9000f5d8:	e7c6      	b.n	9000f568 <pvPortMalloc+0xe4>
9000f5da:	bf00      	nop
9000f5dc:	2400a6e4 	.word	0x2400a6e4
9000f5e0:	2400a6d0 	.word	0x2400a6d0
9000f5e4:	2400a6e8 	.word	0x2400a6e8
9000f5e8:	2400a6f0 	.word	0x2400a6f0
9000f5ec:	24022d88 	.word	0x24022d88
9000f5f0:	2400a6dc 	.word	0x2400a6dc
9000f5f4:	2400a6e0 	.word	0x2400a6e0
9000f5f8:	2400a6d8 	.word	0x2400a6d8

9000f5fc <vPortFree>:
	if( pv != NULL )
9000f5fc:	b1d0      	cbz	r0, 9000f634 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000f5fe:	4a2d      	ldr	r2, [pc, #180]	@ (9000f6b4 <vPortFree+0xb8>)
9000f600:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000f604:	6812      	ldr	r2, [r2, #0]
9000f606:	4213      	tst	r3, r2
9000f608:	d00b      	beq.n	9000f622 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000f60a:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000f60e:	b191      	cbz	r1, 9000f636 <vPortFree+0x3a>
9000f610:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f614:	f383 8811 	msr	BASEPRI, r3
9000f618:	f3bf 8f6f 	isb	sy
9000f61c:	f3bf 8f4f 	dsb	sy
9000f620:	e7fe      	b.n	9000f620 <vPortFree+0x24>
9000f622:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f626:	f383 8811 	msr	BASEPRI, r3
9000f62a:	f3bf 8f6f 	isb	sy
9000f62e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000f632:	e7fe      	b.n	9000f632 <vPortFree+0x36>
9000f634:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000f636:	ea23 0302 	bic.w	r3, r3, r2
{
9000f63a:	b530      	push	{r4, r5, lr}
9000f63c:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000f63e:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000f642:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000f646:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000f648:	f001 fef6 	bl	90011438 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000f64c:	4a1a      	ldr	r2, [pc, #104]	@ (9000f6b8 <vPortFree+0xbc>)
9000f64e:	9801      	ldr	r0, [sp, #4]
9000f650:	6813      	ldr	r3, [r2, #0]
9000f652:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000f656:	440b      	add	r3, r1
9000f658:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000f65a:	4b18      	ldr	r3, [pc, #96]	@ (9000f6bc <vPortFree+0xc0>)
9000f65c:	461a      	mov	r2, r3
9000f65e:	681b      	ldr	r3, [r3, #0]
9000f660:	429c      	cmp	r4, r3
9000f662:	d8fb      	bhi.n	9000f65c <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000f664:	6855      	ldr	r5, [r2, #4]
9000f666:	eb02 0e05 	add.w	lr, r2, r5
9000f66a:	4574      	cmp	r4, lr
9000f66c:	d011      	beq.n	9000f692 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f66e:	eb04 0c01 	add.w	ip, r4, r1
9000f672:	4563      	cmp	r3, ip
9000f674:	d013      	beq.n	9000f69e <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000f676:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000f67a:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000f67c:	bf18      	it	ne
9000f67e:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000f680:	4a0f      	ldr	r2, [pc, #60]	@ (9000f6c0 <vPortFree+0xc4>)
9000f682:	6813      	ldr	r3, [r2, #0]
9000f684:	3301      	adds	r3, #1
9000f686:	6013      	str	r3, [r2, #0]
}
9000f688:	b003      	add	sp, #12
9000f68a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000f68e:	f001 bedb 	b.w	90011448 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f692:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f694:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f696:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f698:	4283      	cmp	r3, r0
9000f69a:	d1f1      	bne.n	9000f680 <vPortFree+0x84>
9000f69c:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000f69e:	4809      	ldr	r0, [pc, #36]	@ (9000f6c4 <vPortFree+0xc8>)
9000f6a0:	6800      	ldr	r0, [r0, #0]
9000f6a2:	4283      	cmp	r3, r0
9000f6a4:	d003      	beq.n	9000f6ae <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f6a6:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f6aa:	4429      	add	r1, r5
9000f6ac:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f6ae:	6020      	str	r0, [r4, #0]
9000f6b0:	e7e3      	b.n	9000f67a <vPortFree+0x7e>
9000f6b2:	bf00      	nop
9000f6b4:	2400a6d0 	.word	0x2400a6d0
9000f6b8:	2400a6e0 	.word	0x2400a6e0
9000f6bc:	2400a6e8 	.word	0x2400a6e8
9000f6c0:	2400a6d4 	.word	0x2400a6d4
9000f6c4:	2400a6e4 	.word	0x2400a6e4

9000f6c8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000f6c8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000f6cc:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000f6d0:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000f6d2:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000f6d4:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000f6d6:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000f6d8:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000f6dc:	4770      	bx	lr
9000f6de:	bf00      	nop

9000f6e0 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000f6e0:	2300      	movs	r3, #0
9000f6e2:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000f6e4:	4770      	bx	lr
9000f6e6:	bf00      	nop

9000f6e8 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000f6e8:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000f6ea:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000f6ec:	3301      	adds	r3, #1
{
9000f6ee:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000f6f0:	6894      	ldr	r4, [r2, #8]
9000f6f2:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000f6f6:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000f6f8:	6091      	str	r1, [r2, #8]
}
9000f6fa:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000f6fe:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000f700:	6003      	str	r3, [r0, #0]
}
9000f702:	4770      	bx	lr

9000f704 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000f704:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000f706:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000f708:	1c6b      	adds	r3, r5, #1
9000f70a:	d010      	beq.n	9000f72e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000f70c:	f100 0308 	add.w	r3, r0, #8
9000f710:	461c      	mov	r4, r3
9000f712:	685b      	ldr	r3, [r3, #4]
9000f714:	681a      	ldr	r2, [r3, #0]
9000f716:	42aa      	cmp	r2, r5
9000f718:	d9fa      	bls.n	9000f710 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000f71a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000f71c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000f71e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000f720:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000f722:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000f724:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000f726:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000f728:	6002      	str	r2, [r0, #0]
}
9000f72a:	bc30      	pop	{r4, r5}
9000f72c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000f72e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000f730:	6863      	ldr	r3, [r4, #4]
9000f732:	e7f2      	b.n	9000f71a <vListInsert+0x16>

9000f734 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000f734:	6903      	ldr	r3, [r0, #16]
{
9000f736:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000f738:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000f73a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000f73e:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000f740:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000f744:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000f746:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000f748:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000f74c:	bf08      	it	eq
9000f74e:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000f750:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000f752:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000f754:	3a01      	subs	r2, #1
9000f756:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000f758:	6818      	ldr	r0, [r3, #0]
}
9000f75a:	4770      	bx	lr

9000f75c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000f75c:	4808      	ldr	r0, [pc, #32]	@ (9000f780 <prvPortStartFirstTask+0x24>)
9000f75e:	6800      	ldr	r0, [r0, #0]
9000f760:	6800      	ldr	r0, [r0, #0]
9000f762:	f380 8808 	msr	MSP, r0
9000f766:	f04f 0000 	mov.w	r0, #0
9000f76a:	f380 8814 	msr	CONTROL, r0
9000f76e:	b662      	cpsie	i
9000f770:	b661      	cpsie	f
9000f772:	f3bf 8f4f 	dsb	sy
9000f776:	f3bf 8f6f 	isb	sy
9000f77a:	df00      	svc	0
9000f77c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000f77e:	0000      	.short	0x0000
9000f780:	e000ed08 	.word	0xe000ed08

9000f784 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000f784:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000f794 <vPortEnableVFP+0x10>
9000f788:	6801      	ldr	r1, [r0, #0]
9000f78a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000f78e:	6001      	str	r1, [r0, #0]
9000f790:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000f792:	0000      	.short	0x0000
9000f794:	e000ed88 	.word	0xe000ed88

9000f798 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000f798:	4b0e      	ldr	r3, [pc, #56]	@ (9000f7d4 <prvTaskExitError+0x3c>)
{
9000f79a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000f79c:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000f79e:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000f7a0:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000f7a2:	3301      	adds	r3, #1
9000f7a4:	d008      	beq.n	9000f7b8 <prvTaskExitError+0x20>
9000f7a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7aa:	f383 8811 	msr	BASEPRI, r3
9000f7ae:	f3bf 8f6f 	isb	sy
9000f7b2:	f3bf 8f4f 	dsb	sy
9000f7b6:	e7fe      	b.n	9000f7b6 <prvTaskExitError+0x1e>
9000f7b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7bc:	f383 8811 	msr	BASEPRI, r3
9000f7c0:	f3bf 8f6f 	isb	sy
9000f7c4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000f7c8:	9b01      	ldr	r3, [sp, #4]
9000f7ca:	2b00      	cmp	r3, #0
9000f7cc:	d0fc      	beq.n	9000f7c8 <prvTaskExitError+0x30>
}
9000f7ce:	b002      	add	sp, #8
9000f7d0:	4770      	bx	lr
9000f7d2:	bf00      	nop
9000f7d4:	24000084 	.word	0x24000084

9000f7d8 <pxPortInitialiseStack>:
{
9000f7d8:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000f7da:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000f7de:	4809      	ldr	r0, [pc, #36]	@ (9000f804 <pxPortInitialiseStack+0x2c>)
{
9000f7e0:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000f7e2:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000f7e6:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000f7ea:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000f7ee:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000f7f2:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000f7f6:	f06f 0102 	mvn.w	r1, #2
}
9000f7fa:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000f7fe:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000f802:	4770      	bx	lr
9000f804:	9000f799 	.word	0x9000f799
	...

9000f810 <SVC_Handler>:
	__asm volatile (
9000f810:	4b07      	ldr	r3, [pc, #28]	@ (9000f830 <pxCurrentTCBConst2>)
9000f812:	6819      	ldr	r1, [r3, #0]
9000f814:	6808      	ldr	r0, [r1, #0]
9000f816:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f81a:	f380 8809 	msr	PSP, r0
9000f81e:	f3bf 8f6f 	isb	sy
9000f822:	f04f 0000 	mov.w	r0, #0
9000f826:	f380 8811 	msr	BASEPRI, r0
9000f82a:	4770      	bx	lr
9000f82c:	f3af 8000 	nop.w

9000f830 <pxCurrentTCBConst2>:
9000f830:	240232d0 	.word	0x240232d0

9000f834 <vPortEnterCritical>:
9000f834:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f838:	f383 8811 	msr	BASEPRI, r3
9000f83c:	f3bf 8f6f 	isb	sy
9000f840:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000f844:	4a0b      	ldr	r2, [pc, #44]	@ (9000f874 <vPortEnterCritical+0x40>)
9000f846:	6813      	ldr	r3, [r2, #0]
9000f848:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000f84a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000f84c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000f84e:	d000      	beq.n	9000f852 <vPortEnterCritical+0x1e>
}
9000f850:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000f852:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f856:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000f85a:	b2db      	uxtb	r3, r3
9000f85c:	2b00      	cmp	r3, #0
9000f85e:	d0f7      	beq.n	9000f850 <vPortEnterCritical+0x1c>
9000f860:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f864:	f383 8811 	msr	BASEPRI, r3
9000f868:	f3bf 8f6f 	isb	sy
9000f86c:	f3bf 8f4f 	dsb	sy
9000f870:	e7fe      	b.n	9000f870 <vPortEnterCritical+0x3c>
9000f872:	bf00      	nop
9000f874:	24000084 	.word	0x24000084

9000f878 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000f878:	4a08      	ldr	r2, [pc, #32]	@ (9000f89c <vPortExitCritical+0x24>)
9000f87a:	6813      	ldr	r3, [r2, #0]
9000f87c:	b943      	cbnz	r3, 9000f890 <vPortExitCritical+0x18>
9000f87e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f882:	f383 8811 	msr	BASEPRI, r3
9000f886:	f3bf 8f6f 	isb	sy
9000f88a:	f3bf 8f4f 	dsb	sy
9000f88e:	e7fe      	b.n	9000f88e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000f890:	3b01      	subs	r3, #1
9000f892:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000f894:	b90b      	cbnz	r3, 9000f89a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000f896:	f383 8811 	msr	BASEPRI, r3
}
9000f89a:	4770      	bx	lr
9000f89c:	24000084 	.word	0x24000084

9000f8a0 <PendSV_Handler>:
	__asm volatile
9000f8a0:	f3ef 8009 	mrs	r0, PSP
9000f8a4:	f3bf 8f6f 	isb	sy
9000f8a8:	4b15      	ldr	r3, [pc, #84]	@ (9000f900 <pxCurrentTCBConst>)
9000f8aa:	681a      	ldr	r2, [r3, #0]
9000f8ac:	f01e 0f10 	tst.w	lr, #16
9000f8b0:	bf08      	it	eq
9000f8b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000f8b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f8ba:	6010      	str	r0, [r2, #0]
9000f8bc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000f8c0:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000f8c4:	f380 8811 	msr	BASEPRI, r0
9000f8c8:	f3bf 8f4f 	dsb	sy
9000f8cc:	f3bf 8f6f 	isb	sy
9000f8d0:	f001 fdf6 	bl	900114c0 <vTaskSwitchContext>
9000f8d4:	f04f 0000 	mov.w	r0, #0
9000f8d8:	f380 8811 	msr	BASEPRI, r0
9000f8dc:	bc09      	pop	{r0, r3}
9000f8de:	6819      	ldr	r1, [r3, #0]
9000f8e0:	6808      	ldr	r0, [r1, #0]
9000f8e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f8e6:	f01e 0f10 	tst.w	lr, #16
9000f8ea:	bf08      	it	eq
9000f8ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000f8f0:	f380 8809 	msr	PSP, r0
9000f8f4:	f3bf 8f6f 	isb	sy
9000f8f8:	4770      	bx	lr
9000f8fa:	bf00      	nop
9000f8fc:	f3af 8000 	nop.w

9000f900 <pxCurrentTCBConst>:
9000f900:	240232d0 	.word	0x240232d0

9000f904 <xPortSysTickHandler>:
{
9000f904:	b508      	push	{r3, lr}
	__asm volatile
9000f906:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f90a:	f383 8811 	msr	BASEPRI, r3
9000f90e:	f3bf 8f6f 	isb	sy
9000f912:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000f916:	f001 fdad 	bl	90011474 <xTaskIncrementTick>
9000f91a:	b128      	cbz	r0, 9000f928 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000f91c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f920:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f924:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000f928:	2300      	movs	r3, #0
9000f92a:	f383 8811 	msr	BASEPRI, r3
}
9000f92e:	bd08      	pop	{r3, pc}

9000f930 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000f930:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000f934:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f936:	4806      	ldr	r0, [pc, #24]	@ (9000f950 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000f938:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f93a:	4906      	ldr	r1, [pc, #24]	@ (9000f954 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000f93c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f93e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000f940:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f942:	fba1 1303 	umull	r1, r3, r1, r3
9000f946:	099b      	lsrs	r3, r3, #6
9000f948:	3b01      	subs	r3, #1
9000f94a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000f94c:	6110      	str	r0, [r2, #16]
}
9000f94e:	4770      	bx	lr
9000f950:	24000078 	.word	0x24000078
9000f954:	10624dd3 	.word	0x10624dd3

9000f958 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000f958:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f95c:	4a48      	ldr	r2, [pc, #288]	@ (9000fa80 <xPortStartScheduler+0x128>)
9000f95e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000f962:	4291      	cmp	r1, r2
9000f964:	d041      	beq.n	9000f9ea <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000f966:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000f96a:	4b46      	ldr	r3, [pc, #280]	@ (9000fa84 <xPortStartScheduler+0x12c>)
9000f96c:	429a      	cmp	r2, r3
9000f96e:	d033      	beq.n	9000f9d8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000f970:	4b45      	ldr	r3, [pc, #276]	@ (9000fa88 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000f972:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000f976:	4845      	ldr	r0, [pc, #276]	@ (9000fa8c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f978:	4945      	ldr	r1, [pc, #276]	@ (9000fa90 <xPortStartScheduler+0x138>)
{
9000f97a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000f97c:	781a      	ldrb	r2, [r3, #0]
{
9000f97e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000f980:	b2d2      	uxtb	r2, r2
9000f982:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000f984:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000f986:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000f98a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000f98c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000f98e:	b2db      	uxtb	r3, r3
9000f990:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f994:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f998:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f99c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f9a0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f9a2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f9a4:	d50f      	bpl.n	9000f9c6 <xPortStartScheduler+0x6e>
9000f9a6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000f9a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000f9ac:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f9ae:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000f9b0:	005b      	lsls	r3, r3, #1
9000f9b2:	b2db      	uxtb	r3, r3
9000f9b4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f9b8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000f9bc:	061b      	lsls	r3, r3, #24
9000f9be:	d4f3      	bmi.n	9000f9a8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000f9c0:	2903      	cmp	r1, #3
9000f9c2:	d01b      	beq.n	9000f9fc <xPortStartScheduler+0xa4>
9000f9c4:	6001      	str	r1, [r0, #0]
	__asm volatile
9000f9c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f9ca:	f383 8811 	msr	BASEPRI, r3
9000f9ce:	f3bf 8f6f 	isb	sy
9000f9d2:	f3bf 8f4f 	dsb	sy
9000f9d6:	e7fe      	b.n	9000f9d6 <xPortStartScheduler+0x7e>
9000f9d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f9dc:	f383 8811 	msr	BASEPRI, r3
9000f9e0:	f3bf 8f6f 	isb	sy
9000f9e4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000f9e8:	e7fe      	b.n	9000f9e8 <xPortStartScheduler+0x90>
9000f9ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f9ee:	f383 8811 	msr	BASEPRI, r3
9000f9f2:	f3bf 8f6f 	isb	sy
9000f9f6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000f9fa:	e7fe      	b.n	9000f9fa <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000f9fc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000f9fe:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000fa02:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000fa06:	4a20      	ldr	r2, [pc, #128]	@ (9000fa88 <xPortStartScheduler+0x130>)
9000fa08:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000fa0a:	4e22      	ldr	r6, [pc, #136]	@ (9000fa94 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000fa0c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000fa0e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000fa10:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000fa12:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000fa16:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000fa1a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000fa1e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000fa22:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000fa26:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000fa2a:	f7ff ff81 	bl	9000f930 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000fa2e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000fa30:	f7ff fea8 	bl	9000f784 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000fa34:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000fa38:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000fa3c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000fa40:	f7ff fe8c 	bl	9000f75c <prvPortStartFirstTask>
	vTaskSwitchContext();
9000fa44:	f001 fd3c 	bl	900114c0 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000fa48:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000fa4a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000fa4c:	3301      	adds	r3, #1
9000fa4e:	d008      	beq.n	9000fa62 <xPortStartScheduler+0x10a>
9000fa50:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa54:	f383 8811 	msr	BASEPRI, r3
9000fa58:	f3bf 8f6f 	isb	sy
9000fa5c:	f3bf 8f4f 	dsb	sy
9000fa60:	e7fe      	b.n	9000fa60 <xPortStartScheduler+0x108>
9000fa62:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa66:	f383 8811 	msr	BASEPRI, r3
9000fa6a:	f3bf 8f6f 	isb	sy
9000fa6e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000fa72:	9b03      	ldr	r3, [sp, #12]
9000fa74:	2b00      	cmp	r3, #0
9000fa76:	d0fc      	beq.n	9000fa72 <xPortStartScheduler+0x11a>
}
9000fa78:	2000      	movs	r0, #0
9000fa7a:	b004      	add	sp, #16
9000fa7c:	bd70      	pop	{r4, r5, r6, pc}
9000fa7e:	bf00      	nop
9000fa80:	410fc271 	.word	0x410fc271
9000fa84:	410fc270 	.word	0x410fc270
9000fa88:	e000e400 	.word	0xe000e400
9000fa8c:	24022d90 	.word	0x24022d90
9000fa90:	24022d94 	.word	0x24022d94
9000fa94:	24000084 	.word	0x24000084

9000fa98 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000fa98:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000fa9c:	2b0f      	cmp	r3, #15
9000fa9e:	d90e      	bls.n	9000fabe <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000faa0:	4911      	ldr	r1, [pc, #68]	@ (9000fae8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000faa2:	4a12      	ldr	r2, [pc, #72]	@ (9000faec <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000faa4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000faa6:	7812      	ldrb	r2, [r2, #0]
9000faa8:	429a      	cmp	r2, r3
9000faaa:	d908      	bls.n	9000fabe <vPortValidateInterruptPriority+0x26>
9000faac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fab0:	f383 8811 	msr	BASEPRI, r3
9000fab4:	f3bf 8f6f 	isb	sy
9000fab8:	f3bf 8f4f 	dsb	sy
9000fabc:	e7fe      	b.n	9000fabc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000fabe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fac2:	4a0b      	ldr	r2, [pc, #44]	@ (9000faf0 <vPortValidateInterruptPriority+0x58>)
9000fac4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000fac8:	6812      	ldr	r2, [r2, #0]
9000faca:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000face:	4293      	cmp	r3, r2
9000fad0:	d908      	bls.n	9000fae4 <vPortValidateInterruptPriority+0x4c>
9000fad2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fad6:	f383 8811 	msr	BASEPRI, r3
9000fada:	f3bf 8f6f 	isb	sy
9000fade:	f3bf 8f4f 	dsb	sy
9000fae2:	e7fe      	b.n	9000fae2 <vPortValidateInterruptPriority+0x4a>
	}
9000fae4:	4770      	bx	lr
9000fae6:	bf00      	nop
9000fae8:	e000e3f0 	.word	0xe000e3f0
9000faec:	24022d94 	.word	0x24022d94
9000faf0:	24022d90 	.word	0x24022d90

9000faf4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000faf4:	b570      	push	{r4, r5, r6, lr}
9000faf6:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000faf8:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000fafa:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000fafc:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000fafe:	b92a      	cbnz	r2, 9000fb0c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fb00:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000fb02:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fb04:	b34e      	cbz	r6, 9000fb5a <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
9000fb06:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000fb08:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000fb0a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000fb0c:	b97e      	cbnz	r6, 9000fb2e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000fb0e:	6840      	ldr	r0, [r0, #4]
9000fb10:	f01b fa08 	bl	9002af24 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fb14:	6863      	ldr	r3, [r4, #4]
9000fb16:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000fb18:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fb1a:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000fb1c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fb1e:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000fb20:	bf24      	itt	cs
9000fb22:	6823      	ldrcs	r3, [r4, #0]
9000fb24:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000fb26:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
9000fb28:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000fb2a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000fb2c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000fb2e:	68c0      	ldr	r0, [r0, #12]
9000fb30:	f01b f9f8 	bl	9002af24 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000fb34:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000fb36:	68e3      	ldr	r3, [r4, #12]
9000fb38:	4251      	negs	r1, r2
9000fb3a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000fb3c:	6822      	ldr	r2, [r4, #0]
9000fb3e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000fb40:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000fb42:	d202      	bcs.n	9000fb4a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000fb44:	68a3      	ldr	r3, [r4, #8]
9000fb46:	440b      	add	r3, r1
9000fb48:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000fb4a:	2e02      	cmp	r6, #2
9000fb4c:	d1eb      	bne.n	9000fb26 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000fb4e:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000fb50:	f04f 0000 	mov.w	r0, #0
9000fb54:	bf38      	it	cc
9000fb56:	2501      	movcc	r5, #1
9000fb58:	e7d6      	b.n	9000fb08 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000fb5a:	6880      	ldr	r0, [r0, #8]
9000fb5c:	f001 fef0 	bl	90011940 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000fb60:	60a6      	str	r6, [r4, #8]
9000fb62:	e7d1      	b.n	9000fb08 <prvCopyDataToQueue+0x14>

9000fb64 <xQueueGenericCreateStatic>:
	{
9000fb64:	b530      	push	{r4, r5, lr}
9000fb66:	b083      	sub	sp, #12
9000fb68:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000fb6c:	b940      	cbnz	r0, 9000fb80 <xQueueGenericCreateStatic+0x1c>
9000fb6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb72:	f383 8811 	msr	BASEPRI, r3
9000fb76:	f3bf 8f6f 	isb	sy
9000fb7a:	f3bf 8f4f 	dsb	sy
9000fb7e:	e7fe      	b.n	9000fb7e <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000fb80:	461c      	mov	r4, r3
9000fb82:	b153      	cbz	r3, 9000fb9a <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000fb84:	b30a      	cbz	r2, 9000fbca <xQueueGenericCreateStatic+0x66>
9000fb86:	b989      	cbnz	r1, 9000fbac <xQueueGenericCreateStatic+0x48>
9000fb88:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb8c:	f383 8811 	msr	BASEPRI, r3
9000fb90:	f3bf 8f6f 	isb	sy
9000fb94:	f3bf 8f4f 	dsb	sy
9000fb98:	e7fe      	b.n	9000fb98 <xQueueGenericCreateStatic+0x34>
9000fb9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb9e:	f383 8811 	msr	BASEPRI, r3
9000fba2:	f3bf 8f6f 	isb	sy
9000fba6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000fbaa:	e7fe      	b.n	9000fbaa <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000fbac:	b16a      	cbz	r2, 9000fbca <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000fbae:	2350      	movs	r3, #80	@ 0x50
9000fbb0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000fbb2:	9b01      	ldr	r3, [sp, #4]
9000fbb4:	2b50      	cmp	r3, #80	@ 0x50
9000fbb6:	d013      	beq.n	9000fbe0 <xQueueGenericCreateStatic+0x7c>
9000fbb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbbc:	f383 8811 	msr	BASEPRI, r3
9000fbc0:	f3bf 8f6f 	isb	sy
9000fbc4:	f3bf 8f4f 	dsb	sy
9000fbc8:	e7fe      	b.n	9000fbc8 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000fbca:	2900      	cmp	r1, #0
9000fbcc:	d0ef      	beq.n	9000fbae <xQueueGenericCreateStatic+0x4a>
9000fbce:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbd2:	f383 8811 	msr	BASEPRI, r3
9000fbd6:	f3bf 8f6f 	isb	sy
9000fbda:	f3bf 8f4f 	dsb	sy
9000fbde:	e7fe      	b.n	9000fbde <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000fbe0:	2900      	cmp	r1, #0
9000fbe2:	bf08      	it	eq
9000fbe4:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000fbe6:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000fbe8:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000fbea:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000fbec:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000fbee:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000fbf0:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000fbf4:	f7ff fe1e 	bl	9000f834 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fbf8:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fbfa:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000fbfe:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc00:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000fc04:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc08:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc0a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc0c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc0e:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fc10:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000fc12:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc14:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fc16:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000fc18:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000fc1c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fc20:	f7ff fd52 	bl	9000f6c8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000fc24:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000fc28:	f7ff fd4e 	bl	9000f6c8 <vListInitialise>
	taskEXIT_CRITICAL();
9000fc2c:	f7ff fe24 	bl	9000f878 <vPortExitCritical>
	}
9000fc30:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000fc32:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000fc36:	b003      	add	sp, #12
9000fc38:	bd30      	pop	{r4, r5, pc}
9000fc3a:	bf00      	nop

9000fc3c <xQueueGenericCreate>:
	{
9000fc3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000fc3e:	b940      	cbnz	r0, 9000fc52 <xQueueGenericCreate+0x16>
9000fc40:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fc44:	f383 8811 	msr	BASEPRI, r3
9000fc48:	f3bf 8f6f 	isb	sy
9000fc4c:	f3bf 8f4f 	dsb	sy
9000fc50:	e7fe      	b.n	9000fc50 <xQueueGenericCreate+0x14>
9000fc52:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fc54:	fb01 f000 	mul.w	r0, r1, r0
9000fc58:	460e      	mov	r6, r1
9000fc5a:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000fc5c:	3050      	adds	r0, #80	@ 0x50
9000fc5e:	f7ff fc11 	bl	9000f484 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000fc62:	4604      	mov	r4, r0
9000fc64:	b340      	cbz	r0, 9000fcb8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000fc66:	2300      	movs	r3, #0
9000fc68:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000fc6c:	b336      	cbz	r6, 9000fcbc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc6e:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000fc72:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000fc74:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000fc78:	f7ff fddc 	bl	9000f834 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc7c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fc7e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000fc82:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc84:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000fc88:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc8c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc8e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc90:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc92:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fc94:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000fc96:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fc98:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fc9a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000fc9c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000fca0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fca4:	f7ff fd10 	bl	9000f6c8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000fca8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000fcac:	f7ff fd0c 	bl	9000f6c8 <vListInitialise>
	taskEXIT_CRITICAL();
9000fcb0:	f7ff fde2 	bl	9000f878 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000fcb4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000fcb8:	4620      	mov	r0, r4
9000fcba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000fcbc:	4603      	mov	r3, r0
9000fcbe:	e7d8      	b.n	9000fc72 <xQueueGenericCreate+0x36>

9000fcc0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000fcc0:	b940      	cbnz	r0, 9000fcd4 <xQueueCreateCountingSemaphoreStatic+0x14>
9000fcc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcc6:	f383 8811 	msr	BASEPRI, r3
9000fcca:	f3bf 8f6f 	isb	sy
9000fcce:	f3bf 8f4f 	dsb	sy
9000fcd2:	e7fe      	b.n	9000fcd2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000fcd4:	4288      	cmp	r0, r1
9000fcd6:	d208      	bcs.n	9000fcea <xQueueCreateCountingSemaphoreStatic+0x2a>
9000fcd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcdc:	f383 8811 	msr	BASEPRI, r3
9000fce0:	f3bf 8f6f 	isb	sy
9000fce4:	f3bf 8f4f 	dsb	sy
9000fce8:	e7fe      	b.n	9000fce8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000fcea:	b530      	push	{r4, r5, lr}
9000fcec:	4614      	mov	r4, r2
9000fcee:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000fcf0:	2a00      	cmp	r2, #0
9000fcf2:	d03b      	beq.n	9000fd6c <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000fcf4:	2350      	movs	r3, #80	@ 0x50
9000fcf6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000fcf8:	9b03      	ldr	r3, [sp, #12]
9000fcfa:	2b50      	cmp	r3, #80	@ 0x50
9000fcfc:	d008      	beq.n	9000fd10 <xQueueCreateCountingSemaphoreStatic+0x50>
9000fcfe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd02:	f383 8811 	msr	BASEPRI, r3
9000fd06:	f3bf 8f6f 	isb	sy
9000fd0a:	f3bf 8f4f 	dsb	sy
9000fd0e:	e7fe      	b.n	9000fd0e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000fd10:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000fd12:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000fd14:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000fd16:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000fd18:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000fd1c:	6415      	str	r5, [r2, #64]	@ 0x40
9000fd1e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000fd20:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000fd22:	f7ff fd87 	bl	9000f834 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fd26:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fd28:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000fd2a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fd2c:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000fd30:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fd34:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fd36:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fd38:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fd3a:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000fd3c:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fd3e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fd42:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000fd44:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000fd48:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fd4c:	f7ff fcbc 	bl	9000f6c8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000fd50:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000fd54:	f7ff fcb8 	bl	9000f6c8 <vListInitialise>
	taskEXIT_CRITICAL();
9000fd58:	f7ff fd8e 	bl	9000f878 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000fd5c:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000fd5e:	9901      	ldr	r1, [sp, #4]
	}
9000fd60:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000fd62:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000fd66:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000fd68:	b005      	add	sp, #20
9000fd6a:	bd30      	pop	{r4, r5, pc}
9000fd6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd70:	f383 8811 	msr	BASEPRI, r3
9000fd74:	f3bf 8f6f 	isb	sy
9000fd78:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000fd7c:	e7fe      	b.n	9000fd7c <xQueueCreateCountingSemaphoreStatic+0xbc>
9000fd7e:	bf00      	nop

9000fd80 <xQueueCreateCountingSemaphore>:
	{
9000fd80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000fd82:	b940      	cbnz	r0, 9000fd96 <xQueueCreateCountingSemaphore+0x16>
9000fd84:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd88:	f383 8811 	msr	BASEPRI, r3
9000fd8c:	f3bf 8f6f 	isb	sy
9000fd90:	f3bf 8f4f 	dsb	sy
9000fd94:	e7fe      	b.n	9000fd94 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000fd96:	4288      	cmp	r0, r1
9000fd98:	4604      	mov	r4, r0
9000fd9a:	460e      	mov	r6, r1
9000fd9c:	d208      	bcs.n	9000fdb0 <xQueueCreateCountingSemaphore+0x30>
9000fd9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fda2:	f383 8811 	msr	BASEPRI, r3
9000fda6:	f3bf 8f6f 	isb	sy
9000fdaa:	f3bf 8f4f 	dsb	sy
9000fdae:	e7fe      	b.n	9000fdae <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000fdb0:	2050      	movs	r0, #80	@ 0x50
9000fdb2:	f7ff fb67 	bl	9000f484 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000fdb6:	4605      	mov	r5, r0
9000fdb8:	b330      	cbz	r0, 9000fe08 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000fdba:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000fdbc:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000fdbe:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000fdc0:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000fdc4:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000fdc6:	f7ff fd35 	bl	9000f834 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fdca:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fdcc:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fdce:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000fdd2:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fdd4:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000fdd8:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fddc:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fdde:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fde0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fde2:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000fde4:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fde6:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000fde8:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000fdec:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fdf0:	f7ff fc6a 	bl	9000f6c8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000fdf4:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000fdf8:	f7ff fc66 	bl	9000f6c8 <vListInitialise>
	taskEXIT_CRITICAL();
9000fdfc:	f7ff fd3c 	bl	9000f878 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000fe00:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000fe02:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000fe04:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000fe08:	4628      	mov	r0, r5
9000fe0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000fe0c <xQueueGenericSend>:
{
9000fe0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fe10:	b084      	sub	sp, #16
9000fe12:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000fe14:	2800      	cmp	r0, #0
9000fe16:	f000 8103 	beq.w	90010020 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fe1a:	4688      	mov	r8, r1
9000fe1c:	4604      	mov	r4, r0
9000fe1e:	461f      	mov	r7, r3
9000fe20:	2900      	cmp	r1, #0
9000fe22:	f000 8097 	beq.w	9000ff54 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000fe26:	2f02      	cmp	r7, #2
9000fe28:	d10b      	bne.n	9000fe42 <xQueueGenericSend+0x36>
9000fe2a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fe2c:	2b01      	cmp	r3, #1
9000fe2e:	d008      	beq.n	9000fe42 <xQueueGenericSend+0x36>
9000fe30:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe34:	f383 8811 	msr	BASEPRI, r3
9000fe38:	f3bf 8f6f 	isb	sy
9000fe3c:	f3bf 8f4f 	dsb	sy
9000fe40:	e7fe      	b.n	9000fe40 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000fe42:	f001 fd2d 	bl	900118a0 <xTaskGetSchedulerState>
9000fe46:	2800      	cmp	r0, #0
9000fe48:	f000 80f3 	beq.w	90010032 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fe4c:	f1a7 0902 	sub.w	r9, r7, #2
9000fe50:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fe52:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fe56:	fab9 f989 	clz	r9, r9
9000fe5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000fe5e:	f7ff fce9 	bl	9000f834 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fe62:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000fe64:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fe66:	429a      	cmp	r2, r3
9000fe68:	f0c0 80f0 	bcc.w	9001004c <xQueueGenericSend+0x240>
9000fe6c:	f1b9 0f00 	cmp.w	r9, #0
9000fe70:	f040 80ec 	bne.w	9001004c <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000fe74:	9b01      	ldr	r3, [sp, #4]
9000fe76:	2b00      	cmp	r3, #0
9000fe78:	f000 8101 	beq.w	9001007e <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000fe7c:	2d00      	cmp	r5, #0
9000fe7e:	f000 80cb 	beq.w	90010018 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000fe82:	f7ff fcf9 	bl	9000f878 <vPortExitCritical>
		vTaskSuspendAll();
9000fe86:	f001 fad7 	bl	90011438 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000fe8a:	f7ff fcd3 	bl	9000f834 <vPortEnterCritical>
9000fe8e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000fe92:	2bff      	cmp	r3, #255	@ 0xff
9000fe94:	d102      	bne.n	9000fe9c <xQueueGenericSend+0x90>
9000fe96:	2300      	movs	r3, #0
9000fe98:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000fe9c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000fea0:	2bff      	cmp	r3, #255	@ 0xff
9000fea2:	d102      	bne.n	9000feaa <xQueueGenericSend+0x9e>
9000fea4:	2300      	movs	r3, #0
9000fea6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000feaa:	f7ff fce5 	bl	9000f878 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000feae:	a901      	add	r1, sp, #4
9000feb0:	a802      	add	r0, sp, #8
9000feb2:	f001 fcad 	bl	90011810 <xTaskCheckForTimeOut>
9000feb6:	2800      	cmp	r0, #0
9000feb8:	f040 80e5 	bne.w	90010086 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000febc:	f7ff fcba 	bl	9000f834 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000fec0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000fec2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fec4:	429a      	cmp	r2, r3
9000fec6:	d052      	beq.n	9000ff6e <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000fec8:	f7ff fcd6 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fecc:	f7ff fcb2 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fed0:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000fed4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fed6:	2d00      	cmp	r5, #0
9000fed8:	dc04      	bgt.n	9000fee4 <xQueueGenericSend+0xd8>
9000feda:	e011      	b.n	9000ff00 <xQueueGenericSend+0xf4>
			--cTxLock;
9000fedc:	1e6a      	subs	r2, r5, #1
9000fede:	b2d3      	uxtb	r3, r2
9000fee0:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fee2:	b16b      	cbz	r3, 9000ff00 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fee4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fee6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fee8:	b153      	cbz	r3, 9000ff00 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000feea:	f001 fc3f 	bl	9001176c <xTaskRemoveFromEventList>
9000feee:	2800      	cmp	r0, #0
9000fef0:	d0f4      	beq.n	9000fedc <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000fef2:	f001 fccf 	bl	90011894 <vTaskMissedYield>
			--cTxLock;
9000fef6:	1e6a      	subs	r2, r5, #1
9000fef8:	b2d3      	uxtb	r3, r2
9000fefa:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fefc:	2b00      	cmp	r3, #0
9000fefe:	d1f1      	bne.n	9000fee4 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000ff00:	23ff      	movs	r3, #255	@ 0xff
9000ff02:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ff06:	f7ff fcb7 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ff0a:	f7ff fc93 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ff0e:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000ff12:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ff14:	2d00      	cmp	r5, #0
9000ff16:	dd14      	ble.n	9000ff42 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ff18:	f104 0a10 	add.w	sl, r4, #16
9000ff1c:	e003      	b.n	9000ff26 <xQueueGenericSend+0x11a>
				--cRxLock;
9000ff1e:	1e6a      	subs	r2, r5, #1
9000ff20:	b2d3      	uxtb	r3, r2
9000ff22:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ff24:	b16b      	cbz	r3, 9000ff42 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ff26:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ff28:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ff2a:	b153      	cbz	r3, 9000ff42 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ff2c:	f001 fc1e 	bl	9001176c <xTaskRemoveFromEventList>
9000ff30:	2800      	cmp	r0, #0
9000ff32:	d0f4      	beq.n	9000ff1e <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000ff34:	f001 fcae 	bl	90011894 <vTaskMissedYield>
				--cRxLock;
9000ff38:	1e6a      	subs	r2, r5, #1
9000ff3a:	b2d3      	uxtb	r3, r2
9000ff3c:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ff3e:	2b00      	cmp	r3, #0
9000ff40:	d1f1      	bne.n	9000ff26 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000ff42:	23ff      	movs	r3, #255	@ 0xff
9000ff44:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ff48:	f7ff fc96 	bl	9000f878 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000ff4c:	f001 fa7c 	bl	90011448 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ff50:	2501      	movs	r5, #1
9000ff52:	e784      	b.n	9000fe5e <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ff54:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000ff56:	2b00      	cmp	r3, #0
9000ff58:	f43f af65 	beq.w	9000fe26 <xQueueGenericSend+0x1a>
9000ff5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff60:	f383 8811 	msr	BASEPRI, r3
9000ff64:	f3bf 8f6f 	isb	sy
9000ff68:	f3bf 8f4f 	dsb	sy
9000ff6c:	e7fe      	b.n	9000ff6c <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ff6e:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000ff72:	f7ff fc81 	bl	9000f878 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ff76:	9901      	ldr	r1, [sp, #4]
9000ff78:	4650      	mov	r0, sl
9000ff7a:	f001 fb69 	bl	90011650 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000ff7e:	f7ff fc59 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ff82:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ff86:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ff88:	2d00      	cmp	r5, #0
9000ff8a:	dc04      	bgt.n	9000ff96 <xQueueGenericSend+0x18a>
9000ff8c:	e011      	b.n	9000ffb2 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000ff8e:	1e6b      	subs	r3, r5, #1
9000ff90:	b2da      	uxtb	r2, r3
9000ff92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ff94:	b16a      	cbz	r2, 9000ffb2 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ff96:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ff98:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ff9a:	b153      	cbz	r3, 9000ffb2 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ff9c:	f001 fbe6 	bl	9001176c <xTaskRemoveFromEventList>
9000ffa0:	2800      	cmp	r0, #0
9000ffa2:	d0f4      	beq.n	9000ff8e <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000ffa4:	f001 fc76 	bl	90011894 <vTaskMissedYield>
			--cTxLock;
9000ffa8:	1e6b      	subs	r3, r5, #1
9000ffaa:	b2da      	uxtb	r2, r3
9000ffac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ffae:	2a00      	cmp	r2, #0
9000ffb0:	d1f1      	bne.n	9000ff96 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000ffb2:	23ff      	movs	r3, #255	@ 0xff
9000ffb4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ffb8:	f7ff fc5e 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ffbc:	f7ff fc3a 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ffc0:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ffc4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ffc6:	2d00      	cmp	r5, #0
9000ffc8:	dc04      	bgt.n	9000ffd4 <xQueueGenericSend+0x1c8>
9000ffca:	e011      	b.n	9000fff0 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000ffcc:	1e6b      	subs	r3, r5, #1
9000ffce:	b2da      	uxtb	r2, r3
9000ffd0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ffd2:	b16a      	cbz	r2, 9000fff0 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ffd4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ffd6:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ffd8:	b153      	cbz	r3, 9000fff0 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ffda:	f001 fbc7 	bl	9001176c <xTaskRemoveFromEventList>
9000ffde:	2800      	cmp	r0, #0
9000ffe0:	d0f4      	beq.n	9000ffcc <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000ffe2:	f001 fc57 	bl	90011894 <vTaskMissedYield>
				--cRxLock;
9000ffe6:	1e6b      	subs	r3, r5, #1
9000ffe8:	b2da      	uxtb	r2, r3
9000ffea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ffec:	2a00      	cmp	r2, #0
9000ffee:	d1f1      	bne.n	9000ffd4 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000fff0:	23ff      	movs	r3, #255	@ 0xff
9000fff2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000fff6:	f7ff fc3f 	bl	9000f878 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000fffa:	f001 fa25 	bl	90011448 <xTaskResumeAll>
9000fffe:	2800      	cmp	r0, #0
90010000:	d1a6      	bne.n	9000ff50 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
90010002:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010006:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001000a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001000e:	f3bf 8f4f 	dsb	sy
90010012:	f3bf 8f6f 	isb	sy
90010016:	e79b      	b.n	9000ff50 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90010018:	a802      	add	r0, sp, #8
9001001a:	f001 fbed 	bl	900117f8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9001001e:	e730      	b.n	9000fe82 <xQueueGenericSend+0x76>
90010020:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010024:	f383 8811 	msr	BASEPRI, r3
90010028:	f3bf 8f6f 	isb	sy
9001002c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010030:	e7fe      	b.n	90010030 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010032:	9b01      	ldr	r3, [sp, #4]
90010034:	2b00      	cmp	r3, #0
90010036:	f43f af09 	beq.w	9000fe4c <xQueueGenericSend+0x40>
9001003a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001003e:	f383 8811 	msr	BASEPRI, r3
90010042:	f3bf 8f6f 	isb	sy
90010046:	f3bf 8f4f 	dsb	sy
9001004a:	e7fe      	b.n	9001004a <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9001004c:	463a      	mov	r2, r7
9001004e:	4641      	mov	r1, r8
90010050:	4620      	mov	r0, r4
90010052:	f7ff fd4f 	bl	9000faf4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010056:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90010058:	2b00      	cmp	r3, #0
9001005a:	d151      	bne.n	90010100 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9001005c:	b148      	cbz	r0, 90010072 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9001005e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010062:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010066:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001006a:	f3bf 8f4f 	dsb	sy
9001006e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
90010072:	f7ff fc01 	bl	9000f878 <vPortExitCritical>
				return pdPASS;
90010076:	2001      	movs	r0, #1
}
90010078:	b004      	add	sp, #16
9001007a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9001007e:	f7ff fbfb 	bl	9000f878 <vPortExitCritical>
					return errQUEUE_FULL;
90010082:	2000      	movs	r0, #0
90010084:	e7f8      	b.n	90010078 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
90010086:	f7ff fbd5 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001008a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9001008e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010090:	2d00      	cmp	r5, #0
90010092:	dd10      	ble.n	900100b6 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010094:	f104 0624 	add.w	r6, r4, #36	@ 0x24
90010098:	e003      	b.n	900100a2 <xQueueGenericSend+0x296>
			--cTxLock;
9001009a:	1e6b      	subs	r3, r5, #1
9001009c:	b2da      	uxtb	r2, r3
9001009e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900100a0:	b14a      	cbz	r2, 900100b6 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900100a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900100a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900100a6:	b133      	cbz	r3, 900100b6 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900100a8:	f001 fb60 	bl	9001176c <xTaskRemoveFromEventList>
900100ac:	2800      	cmp	r0, #0
900100ae:	d0f4      	beq.n	9001009a <xQueueGenericSend+0x28e>
						vTaskMissedYield();
900100b0:	f001 fbf0 	bl	90011894 <vTaskMissedYield>
900100b4:	e7f1      	b.n	9001009a <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
900100b6:	23ff      	movs	r3, #255	@ 0xff
900100b8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900100bc:	f7ff fbdc 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
900100c0:	f7ff fbb8 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900100c4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900100c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900100ca:	2d00      	cmp	r5, #0
900100cc:	dd10      	ble.n	900100f0 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900100ce:	f104 0610 	add.w	r6, r4, #16
900100d2:	e003      	b.n	900100dc <xQueueGenericSend+0x2d0>
				--cRxLock;
900100d4:	1e6b      	subs	r3, r5, #1
900100d6:	b2da      	uxtb	r2, r3
900100d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900100da:	b14a      	cbz	r2, 900100f0 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900100dc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900100de:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900100e0:	b133      	cbz	r3, 900100f0 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900100e2:	f001 fb43 	bl	9001176c <xTaskRemoveFromEventList>
900100e6:	2800      	cmp	r0, #0
900100e8:	d0f4      	beq.n	900100d4 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
900100ea:	f001 fbd3 	bl	90011894 <vTaskMissedYield>
900100ee:	e7f1      	b.n	900100d4 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
900100f0:	23ff      	movs	r3, #255	@ 0xff
900100f2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900100f6:	f7ff fbbf 	bl	9000f878 <vPortExitCritical>
			( void ) xTaskResumeAll();
900100fa:	f001 f9a5 	bl	90011448 <xTaskResumeAll>
			return errQUEUE_FULL;
900100fe:	e7c0      	b.n	90010082 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010100:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010104:	f001 fb32 	bl	9001176c <xTaskRemoveFromEventList>
90010108:	2800      	cmp	r0, #0
9001010a:	d0b2      	beq.n	90010072 <xQueueGenericSend+0x266>
9001010c:	e7a7      	b.n	9001005e <xQueueGenericSend+0x252>
9001010e:	bf00      	nop

90010110 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
90010110:	2800      	cmp	r0, #0
90010112:	d04b      	beq.n	900101ac <xQueueGenericSendFromISR+0x9c>
{
90010114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010118:	460e      	mov	r6, r1
9001011a:	4604      	mov	r4, r0
9001011c:	4617      	mov	r7, r2
9001011e:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010120:	b339      	cbz	r1, 90010172 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
90010122:	2d02      	cmp	r5, #2
90010124:	d10b      	bne.n	9001013e <xQueueGenericSendFromISR+0x2e>
90010126:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010128:	2b01      	cmp	r3, #1
9001012a:	d008      	beq.n	9001013e <xQueueGenericSendFromISR+0x2e>
9001012c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010130:	f383 8811 	msr	BASEPRI, r3
90010134:	f3bf 8f6f 	isb	sy
90010138:	f3bf 8f4f 	dsb	sy
9001013c:	e7fe      	b.n	9001013c <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9001013e:	f7ff fcab 	bl	9000fa98 <vPortValidateInterruptPriority>
	__asm volatile
90010142:	f3ef 8811 	mrs	r8, BASEPRI
90010146:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001014a:	f383 8811 	msr	BASEPRI, r3
9001014e:	f3bf 8f6f 	isb	sy
90010152:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010156:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90010158:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001015a:	429a      	cmp	r2, r3
9001015c:	d315      	bcc.n	9001018a <xQueueGenericSendFromISR+0x7a>
9001015e:	f1a5 0002 	sub.w	r0, r5, #2
90010162:	fab0 f080 	clz	r0, r0
90010166:	0940      	lsrs	r0, r0, #5
90010168:	b978      	cbnz	r0, 9001018a <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9001016a:	f388 8811 	msr	BASEPRI, r8
}
9001016e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010172:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010174:	2b00      	cmp	r3, #0
90010176:	d0d4      	beq.n	90010122 <xQueueGenericSendFromISR+0x12>
	__asm volatile
90010178:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001017c:	f383 8811 	msr	BASEPRI, r3
90010180:	f3bf 8f6f 	isb	sy
90010184:	f3bf 8f4f 	dsb	sy
90010188:	e7fe      	b.n	90010188 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9001018a:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9001018c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010190:	4631      	mov	r1, r6
90010192:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90010194:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
90010196:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010198:	f7ff fcac 	bl	9000faf4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9001019c:	1c6b      	adds	r3, r5, #1
9001019e:	d00e      	beq.n	900101be <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
900101a0:	1c6b      	adds	r3, r5, #1
900101a2:	b25b      	sxtb	r3, r3
900101a4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
900101a8:	2001      	movs	r0, #1
900101aa:	e7de      	b.n	9001016a <xQueueGenericSendFromISR+0x5a>
900101ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
900101b0:	f383 8811 	msr	BASEPRI, r3
900101b4:	f3bf 8f6f 	isb	sy
900101b8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900101bc:	e7fe      	b.n	900101bc <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900101be:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900101c0:	2b00      	cmp	r3, #0
900101c2:	d0f1      	beq.n	900101a8 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900101c4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900101c8:	f001 fad0 	bl	9001176c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
900101cc:	2800      	cmp	r0, #0
900101ce:	d0eb      	beq.n	900101a8 <xQueueGenericSendFromISR+0x98>
900101d0:	2f00      	cmp	r7, #0
900101d2:	d0e9      	beq.n	900101a8 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
900101d4:	2301      	movs	r3, #1
900101d6:	603b      	str	r3, [r7, #0]
900101d8:	e7e6      	b.n	900101a8 <xQueueGenericSendFromISR+0x98>
900101da:	bf00      	nop

900101dc <xQueueGiveFromISR>:
	configASSERT( pxQueue );
900101dc:	b360      	cbz	r0, 90010238 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
900101de:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
900101e0:	b570      	push	{r4, r5, r6, lr}
900101e2:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
900101e4:	b143      	cbz	r3, 900101f8 <xQueueGiveFromISR+0x1c>
900101e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900101ea:	f383 8811 	msr	BASEPRI, r3
900101ee:	f3bf 8f6f 	isb	sy
900101f2:	f3bf 8f4f 	dsb	sy
900101f6:	e7fe      	b.n	900101f6 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
900101f8:	6803      	ldr	r3, [r0, #0]
900101fa:	460d      	mov	r5, r1
900101fc:	b32b      	cbz	r3, 9001024a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900101fe:	f7ff fc4b 	bl	9000fa98 <vPortValidateInterruptPriority>
	__asm volatile
90010202:	f3ef 8611 	mrs	r6, BASEPRI
90010206:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001020a:	f383 8811 	msr	BASEPRI, r3
9001020e:	f3bf 8f6f 	isb	sy
90010212:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010216:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
90010218:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9001021a:	429a      	cmp	r2, r3
9001021c:	d921      	bls.n	90010262 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9001021e:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010222:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
90010224:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010226:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
90010228:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9001022a:	d01e      	beq.n	9001026a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9001022c:	3301      	adds	r3, #1
9001022e:	b25b      	sxtb	r3, r3
90010230:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
90010234:	2001      	movs	r0, #1
90010236:	e015      	b.n	90010264 <xQueueGiveFromISR+0x88>
	__asm volatile
90010238:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001023c:	f383 8811 	msr	BASEPRI, r3
90010240:	f3bf 8f6f 	isb	sy
90010244:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010248:	e7fe      	b.n	90010248 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9001024a:	6883      	ldr	r3, [r0, #8]
9001024c:	2b00      	cmp	r3, #0
9001024e:	d0d6      	beq.n	900101fe <xQueueGiveFromISR+0x22>
90010250:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010254:	f383 8811 	msr	BASEPRI, r3
90010258:	f3bf 8f6f 	isb	sy
9001025c:	f3bf 8f4f 	dsb	sy
90010260:	e7fe      	b.n	90010260 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90010262:	2000      	movs	r0, #0
	__asm volatile
90010264:	f386 8811 	msr	BASEPRI, r6
}
90010268:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001026a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001026c:	2b00      	cmp	r3, #0
9001026e:	d0e1      	beq.n	90010234 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010270:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010274:	f001 fa7a 	bl	9001176c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010278:	2d00      	cmp	r5, #0
9001027a:	d0db      	beq.n	90010234 <xQueueGiveFromISR+0x58>
9001027c:	2800      	cmp	r0, #0
9001027e:	d0d9      	beq.n	90010234 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010280:	2301      	movs	r3, #1
90010282:	602b      	str	r3, [r5, #0]
90010284:	e7d6      	b.n	90010234 <xQueueGiveFromISR+0x58>
90010286:	bf00      	nop

90010288 <xQueueReceive>:
{
90010288:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001028c:	b085      	sub	sp, #20
9001028e:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90010290:	2800      	cmp	r0, #0
90010292:	f000 8164 	beq.w	9001055e <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010296:	460f      	mov	r7, r1
90010298:	4604      	mov	r4, r0
9001029a:	2900      	cmp	r1, #0
9001029c:	f000 8097 	beq.w	900103ce <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900102a0:	f001 fafe 	bl	900118a0 <xTaskGetSchedulerState>
900102a4:	2800      	cmp	r0, #0
900102a6:	f000 809f 	beq.w	900103e8 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
900102aa:	f7ff fac3 	bl	9000f834 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900102ae:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900102b0:	2d00      	cmp	r5, #0
900102b2:	d175      	bne.n	900103a0 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
900102b4:	9b01      	ldr	r3, [sp, #4]
900102b6:	2b00      	cmp	r3, #0
900102b8:	f000 80f4 	beq.w	900104a4 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
900102bc:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900102be:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
900102c2:	a802      	add	r0, sp, #8
900102c4:	f001 fa98 	bl	900117f8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
900102c8:	f7ff fad6 	bl	9000f878 <vPortExitCritical>
		vTaskSuspendAll();
900102cc:	f001 f8b4 	bl	90011438 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900102d0:	f7ff fab0 	bl	9000f834 <vPortEnterCritical>
900102d4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900102d8:	2bff      	cmp	r3, #255	@ 0xff
900102da:	d101      	bne.n	900102e0 <xQueueReceive+0x58>
900102dc:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
900102e0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900102e4:	2bff      	cmp	r3, #255	@ 0xff
900102e6:	d101      	bne.n	900102ec <xQueueReceive+0x64>
900102e8:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
900102ec:	f7ff fac4 	bl	9000f878 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900102f0:	a901      	add	r1, sp, #4
900102f2:	a802      	add	r0, sp, #8
900102f4:	f001 fa8c 	bl	90011810 <xTaskCheckForTimeOut>
900102f8:	2800      	cmp	r0, #0
900102fa:	f040 8082 	bne.w	90010402 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
900102fe:	f7ff fa99 	bl	9000f834 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010302:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010304:	2b00      	cmp	r3, #0
90010306:	f000 80d3 	beq.w	900104b0 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
9001030a:	f7ff fab5 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
9001030e:	f7ff fa91 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010312:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010316:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010318:	2d00      	cmp	r5, #0
9001031a:	dd14      	ble.n	90010346 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001031c:	f104 0924 	add.w	r9, r4, #36	@ 0x24
90010320:	e003      	b.n	9001032a <xQueueReceive+0xa2>
			--cTxLock;
90010322:	1e6b      	subs	r3, r5, #1
90010324:	b2da      	uxtb	r2, r3
90010326:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010328:	b16a      	cbz	r2, 90010346 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001032a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001032c:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001032e:	b153      	cbz	r3, 90010346 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010330:	f001 fa1c 	bl	9001176c <xTaskRemoveFromEventList>
90010334:	2800      	cmp	r0, #0
90010336:	d0f4      	beq.n	90010322 <xQueueReceive+0x9a>
						vTaskMissedYield();
90010338:	f001 faac 	bl	90011894 <vTaskMissedYield>
			--cTxLock;
9001033c:	1e6b      	subs	r3, r5, #1
9001033e:	b2da      	uxtb	r2, r3
90010340:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010342:	2a00      	cmp	r2, #0
90010344:	d1f1      	bne.n	9001032a <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
90010346:	23ff      	movs	r3, #255	@ 0xff
90010348:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001034c:	f7ff fa94 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
90010350:	f7ff fa70 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010354:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010358:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001035a:	2d00      	cmp	r5, #0
9001035c:	dd14      	ble.n	90010388 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001035e:	f104 0910 	add.w	r9, r4, #16
90010362:	e003      	b.n	9001036c <xQueueReceive+0xe4>
				--cRxLock;
90010364:	1e6b      	subs	r3, r5, #1
90010366:	b2da      	uxtb	r2, r3
90010368:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001036a:	b16a      	cbz	r2, 90010388 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001036c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001036e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010370:	b153      	cbz	r3, 90010388 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010372:	f001 f9fb 	bl	9001176c <xTaskRemoveFromEventList>
90010376:	2800      	cmp	r0, #0
90010378:	d0f4      	beq.n	90010364 <xQueueReceive+0xdc>
					vTaskMissedYield();
9001037a:	f001 fa8b 	bl	90011894 <vTaskMissedYield>
				--cRxLock;
9001037e:	1e6b      	subs	r3, r5, #1
90010380:	b2da      	uxtb	r2, r3
90010382:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010384:	2a00      	cmp	r2, #0
90010386:	d1f1      	bne.n	9001036c <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
90010388:	23ff      	movs	r3, #255	@ 0xff
9001038a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9001038e:	f7ff fa73 	bl	9000f878 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010392:	f001 f859 	bl	90011448 <xTaskResumeAll>
		taskENTER_CRITICAL();
90010396:	f7ff fa4d 	bl	9000f834 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001039a:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001039c:	2d00      	cmp	r5, #0
9001039e:	d07d      	beq.n	9001049c <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
900103a0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
900103a2:	b152      	cbz	r2, 900103ba <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900103a4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900103a6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900103a8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900103aa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900103ac:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900103ae:	d301      	bcc.n	900103b4 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
900103b0:	6821      	ldr	r1, [r4, #0]
900103b2:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900103b4:	4638      	mov	r0, r7
900103b6:	f01a fdb5 	bl	9002af24 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
900103ba:	3d01      	subs	r5, #1
900103bc:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900103be:	6923      	ldr	r3, [r4, #16]
900103c0:	2b00      	cmp	r3, #0
900103c2:	f040 80d5 	bne.w	90010570 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
900103c6:	f7ff fa57 	bl	9000f878 <vPortExitCritical>
				return pdPASS;
900103ca:	2001      	movs	r0, #1
900103cc:	e06d      	b.n	900104aa <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
900103ce:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900103d0:	2b00      	cmp	r3, #0
900103d2:	f43f af65 	beq.w	900102a0 <xQueueReceive+0x18>
	__asm volatile
900103d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103da:	f383 8811 	msr	BASEPRI, r3
900103de:	f3bf 8f6f 	isb	sy
900103e2:	f3bf 8f4f 	dsb	sy
900103e6:	e7fe      	b.n	900103e6 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900103e8:	9b01      	ldr	r3, [sp, #4]
900103ea:	2b00      	cmp	r3, #0
900103ec:	f43f af5d 	beq.w	900102aa <xQueueReceive+0x22>
900103f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103f4:	f383 8811 	msr	BASEPRI, r3
900103f8:	f3bf 8f6f 	isb	sy
900103fc:	f3bf 8f4f 	dsb	sy
90010400:	e7fe      	b.n	90010400 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
90010402:	f7ff fa17 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010406:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9001040a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001040c:	2d00      	cmp	r5, #0
9001040e:	dc04      	bgt.n	9001041a <xQueueReceive+0x192>
90010410:	e011      	b.n	90010436 <xQueueReceive+0x1ae>
			--cTxLock;
90010412:	1e6b      	subs	r3, r5, #1
90010414:	b2da      	uxtb	r2, r3
90010416:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010418:	b16a      	cbz	r2, 90010436 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001041a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001041c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001041e:	b153      	cbz	r3, 90010436 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010420:	f001 f9a4 	bl	9001176c <xTaskRemoveFromEventList>
90010424:	2800      	cmp	r0, #0
90010426:	d0f4      	beq.n	90010412 <xQueueReceive+0x18a>
						vTaskMissedYield();
90010428:	f001 fa34 	bl	90011894 <vTaskMissedYield>
			--cTxLock;
9001042c:	1e6b      	subs	r3, r5, #1
9001042e:	b2da      	uxtb	r2, r3
90010430:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010432:	2a00      	cmp	r2, #0
90010434:	d1f1      	bne.n	9001041a <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
90010436:	23ff      	movs	r3, #255	@ 0xff
90010438:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001043c:	f7ff fa1c 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
90010440:	f7ff f9f8 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010444:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010448:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001044a:	2d00      	cmp	r5, #0
9001044c:	dd14      	ble.n	90010478 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001044e:	f104 0910 	add.w	r9, r4, #16
90010452:	e003      	b.n	9001045c <xQueueReceive+0x1d4>
				--cRxLock;
90010454:	1e6b      	subs	r3, r5, #1
90010456:	b2da      	uxtb	r2, r3
90010458:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001045a:	b16a      	cbz	r2, 90010478 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001045c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001045e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010460:	b153      	cbz	r3, 90010478 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010462:	f001 f983 	bl	9001176c <xTaskRemoveFromEventList>
90010466:	2800      	cmp	r0, #0
90010468:	d0f4      	beq.n	90010454 <xQueueReceive+0x1cc>
					vTaskMissedYield();
9001046a:	f001 fa13 	bl	90011894 <vTaskMissedYield>
				--cRxLock;
9001046e:	1e6b      	subs	r3, r5, #1
90010470:	b2da      	uxtb	r2, r3
90010472:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010474:	2a00      	cmp	r2, #0
90010476:	d1f1      	bne.n	9001045c <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
90010478:	23ff      	movs	r3, #255	@ 0xff
9001047a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9001047e:	f7ff f9fb 	bl	9000f878 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010482:	f000 ffe1 	bl	90011448 <xTaskResumeAll>
	taskENTER_CRITICAL();
90010486:	f7ff f9d5 	bl	9000f834 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9001048a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9001048c:	b153      	cbz	r3, 900104a4 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
9001048e:	f7ff f9f3 	bl	9000f878 <vPortExitCritical>
		taskENTER_CRITICAL();
90010492:	f7ff f9cf 	bl	9000f834 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010496:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010498:	2d00      	cmp	r5, #0
9001049a:	d181      	bne.n	900103a0 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9001049c:	9b01      	ldr	r3, [sp, #4]
9001049e:	2b00      	cmp	r3, #0
900104a0:	f47f af12 	bne.w	900102c8 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
900104a4:	f7ff f9e8 	bl	9000f878 <vPortExitCritical>
					return errQUEUE_EMPTY;
900104a8:	2000      	movs	r0, #0
}
900104aa:	b005      	add	sp, #20
900104ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900104b0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
900104b4:	f7ff f9e0 	bl	9000f878 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900104b8:	9901      	ldr	r1, [sp, #4]
900104ba:	4648      	mov	r0, r9
900104bc:	f001 f8c8 	bl	90011650 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900104c0:	f7ff f9b8 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900104c4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900104c8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900104ca:	2d00      	cmp	r5, #0
900104cc:	dc04      	bgt.n	900104d8 <xQueueReceive+0x250>
900104ce:	e011      	b.n	900104f4 <xQueueReceive+0x26c>
			--cTxLock;
900104d0:	1e6b      	subs	r3, r5, #1
900104d2:	b2da      	uxtb	r2, r3
900104d4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900104d6:	b16a      	cbz	r2, 900104f4 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900104d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900104da:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900104dc:	b153      	cbz	r3, 900104f4 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900104de:	f001 f945 	bl	9001176c <xTaskRemoveFromEventList>
900104e2:	2800      	cmp	r0, #0
900104e4:	d0f4      	beq.n	900104d0 <xQueueReceive+0x248>
						vTaskMissedYield();
900104e6:	f001 f9d5 	bl	90011894 <vTaskMissedYield>
			--cTxLock;
900104ea:	1e6b      	subs	r3, r5, #1
900104ec:	b2da      	uxtb	r2, r3
900104ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900104f0:	2a00      	cmp	r2, #0
900104f2:	d1f1      	bne.n	900104d8 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
900104f4:	23ff      	movs	r3, #255	@ 0xff
900104f6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900104fa:	f7ff f9bd 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
900104fe:	f7ff f999 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010502:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010506:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010508:	2d00      	cmp	r5, #0
9001050a:	dd14      	ble.n	90010536 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001050c:	f104 0910 	add.w	r9, r4, #16
90010510:	e003      	b.n	9001051a <xQueueReceive+0x292>
				--cRxLock;
90010512:	1e6b      	subs	r3, r5, #1
90010514:	b2da      	uxtb	r2, r3
90010516:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010518:	b16a      	cbz	r2, 90010536 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001051a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001051c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001051e:	b153      	cbz	r3, 90010536 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010520:	f001 f924 	bl	9001176c <xTaskRemoveFromEventList>
90010524:	2800      	cmp	r0, #0
90010526:	d0f4      	beq.n	90010512 <xQueueReceive+0x28a>
					vTaskMissedYield();
90010528:	f001 f9b4 	bl	90011894 <vTaskMissedYield>
				--cRxLock;
9001052c:	1e6b      	subs	r3, r5, #1
9001052e:	b2da      	uxtb	r2, r3
90010530:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010532:	2a00      	cmp	r2, #0
90010534:	d1f1      	bne.n	9001051a <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
90010536:	23ff      	movs	r3, #255	@ 0xff
90010538:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9001053c:	f7ff f99c 	bl	9000f878 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010540:	f000 ff82 	bl	90011448 <xTaskResumeAll>
90010544:	2800      	cmp	r0, #0
90010546:	d1a4      	bne.n	90010492 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
90010548:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001054c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010550:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010554:	f3bf 8f4f 	dsb	sy
90010558:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9001055c:	e799      	b.n	90010492 <xQueueReceive+0x20a>
9001055e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010562:	f383 8811 	msr	BASEPRI, r3
90010566:	f3bf 8f6f 	isb	sy
9001056a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9001056e:	e7fe      	b.n	9001056e <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010570:	f104 0010 	add.w	r0, r4, #16
90010574:	f001 f8fa 	bl	9001176c <xTaskRemoveFromEventList>
90010578:	2800      	cmp	r0, #0
9001057a:	f43f af24 	beq.w	900103c6 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
9001057e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010582:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010586:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001058a:	f3bf 8f4f 	dsb	sy
9001058e:	f3bf 8f6f 	isb	sy
90010592:	e718      	b.n	900103c6 <xQueueReceive+0x13e>

90010594 <xQueueSemaphoreTake>:
{
90010594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010598:	b084      	sub	sp, #16
9001059a:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9001059c:	2800      	cmp	r0, #0
9001059e:	d05e      	beq.n	9001065e <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
900105a0:	6c07      	ldr	r7, [r0, #64]	@ 0x40
900105a2:	4604      	mov	r4, r0
900105a4:	b147      	cbz	r7, 900105b8 <xQueueSemaphoreTake+0x24>
900105a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900105aa:	f383 8811 	msr	BASEPRI, r3
900105ae:	f3bf 8f6f 	isb	sy
900105b2:	f3bf 8f4f 	dsb	sy
900105b6:	e7fe      	b.n	900105b6 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900105b8:	f001 f972 	bl	900118a0 <xTaskGetSchedulerState>
900105bc:	4605      	mov	r5, r0
900105be:	2800      	cmp	r0, #0
900105c0:	d056      	beq.n	90010670 <xQueueSemaphoreTake+0xdc>
900105c2:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900105c4:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
900105c8:	f7ff f934 	bl	9000f834 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
900105cc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
900105ce:	2b00      	cmp	r3, #0
900105d0:	f040 814d 	bne.w	9001086e <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
900105d4:	9b01      	ldr	r3, [sp, #4]
900105d6:	2b00      	cmp	r3, #0
900105d8:	f000 813e 	beq.w	90010858 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
900105dc:	2d00      	cmp	r5, #0
900105de:	f000 80a3 	beq.w	90010728 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
900105e2:	f7ff f949 	bl	9000f878 <vPortExitCritical>
		vTaskSuspendAll();
900105e6:	f000 ff27 	bl	90011438 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900105ea:	f7ff f923 	bl	9000f834 <vPortEnterCritical>
900105ee:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900105f2:	2bff      	cmp	r3, #255	@ 0xff
900105f4:	d102      	bne.n	900105fc <xQueueSemaphoreTake+0x68>
900105f6:	2300      	movs	r3, #0
900105f8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
900105fc:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010600:	2bff      	cmp	r3, #255	@ 0xff
90010602:	d102      	bne.n	9001060a <xQueueSemaphoreTake+0x76>
90010604:	2300      	movs	r3, #0
90010606:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9001060a:	f7ff f935 	bl	9000f878 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9001060e:	a901      	add	r1, sp, #4
90010610:	a802      	add	r0, sp, #8
90010612:	f001 f8fd 	bl	90011810 <xTaskCheckForTimeOut>
90010616:	2800      	cmp	r0, #0
90010618:	d137      	bne.n	9001068a <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9001061a:	f7ff f90b 	bl	9000f834 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9001061e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010620:	2b00      	cmp	r3, #0
90010622:	f000 80ae 	beq.w	90010782 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
90010626:	f7ff f927 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
9001062a:	f7ff f903 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001062e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010632:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010634:	2d00      	cmp	r5, #0
90010636:	dd7f      	ble.n	90010738 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010638:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9001063c:	e004      	b.n	90010648 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9001063e:	1e6b      	subs	r3, r5, #1
90010640:	b2da      	uxtb	r2, r3
90010642:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010644:	2a00      	cmp	r2, #0
90010646:	d077      	beq.n	90010738 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010648:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001064a:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001064c:	2b00      	cmp	r3, #0
9001064e:	d073      	beq.n	90010738 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010650:	f001 f88c 	bl	9001176c <xTaskRemoveFromEventList>
90010654:	2800      	cmp	r0, #0
90010656:	d0f2      	beq.n	9001063e <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
90010658:	f001 f91c 	bl	90011894 <vTaskMissedYield>
9001065c:	e7ef      	b.n	9001063e <xQueueSemaphoreTake+0xaa>
9001065e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010662:	f383 8811 	msr	BASEPRI, r3
90010666:	f3bf 8f6f 	isb	sy
9001066a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9001066e:	e7fe      	b.n	9001066e <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010670:	9b01      	ldr	r3, [sp, #4]
90010672:	2b00      	cmp	r3, #0
90010674:	f000 80d7 	beq.w	90010826 <xQueueSemaphoreTake+0x292>
90010678:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001067c:	f383 8811 	msr	BASEPRI, r3
90010680:	f3bf 8f6f 	isb	sy
90010684:	f3bf 8f4f 	dsb	sy
90010688:	e7fe      	b.n	90010688 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9001068a:	f7ff f8d3 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001068e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010692:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010694:	2d00      	cmp	r5, #0
90010696:	dc04      	bgt.n	900106a2 <xQueueSemaphoreTake+0x10e>
90010698:	e011      	b.n	900106be <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9001069a:	1e6b      	subs	r3, r5, #1
9001069c:	b2da      	uxtb	r2, r3
9001069e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900106a0:	b16a      	cbz	r2, 900106be <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900106a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900106a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900106a6:	b153      	cbz	r3, 900106be <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900106a8:	f001 f860 	bl	9001176c <xTaskRemoveFromEventList>
900106ac:	2800      	cmp	r0, #0
900106ae:	d0f4      	beq.n	9001069a <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
900106b0:	f001 f8f0 	bl	90011894 <vTaskMissedYield>
			--cTxLock;
900106b4:	1e6b      	subs	r3, r5, #1
900106b6:	b2da      	uxtb	r2, r3
900106b8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900106ba:	2a00      	cmp	r2, #0
900106bc:	d1f1      	bne.n	900106a2 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
900106be:	23ff      	movs	r3, #255	@ 0xff
900106c0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900106c4:	f7ff f8d8 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
900106c8:	f7ff f8b4 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900106cc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900106d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900106d2:	2d00      	cmp	r5, #0
900106d4:	dd14      	ble.n	90010700 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900106d6:	f104 0810 	add.w	r8, r4, #16
900106da:	e003      	b.n	900106e4 <xQueueSemaphoreTake+0x150>
				--cRxLock;
900106dc:	1e6b      	subs	r3, r5, #1
900106de:	b2da      	uxtb	r2, r3
900106e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900106e2:	b16a      	cbz	r2, 90010700 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900106e4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900106e6:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900106e8:	b153      	cbz	r3, 90010700 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900106ea:	f001 f83f 	bl	9001176c <xTaskRemoveFromEventList>
900106ee:	2800      	cmp	r0, #0
900106f0:	d0f4      	beq.n	900106dc <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
900106f2:	f001 f8cf 	bl	90011894 <vTaskMissedYield>
				--cRxLock;
900106f6:	1e6b      	subs	r3, r5, #1
900106f8:	b2da      	uxtb	r2, r3
900106fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900106fc:	2a00      	cmp	r2, #0
900106fe:	d1f1      	bne.n	900106e4 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
90010700:	23ff      	movs	r3, #255	@ 0xff
90010702:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010706:	f7ff f8b7 	bl	9000f878 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001070a:	f000 fe9d 	bl	90011448 <xTaskResumeAll>
	taskENTER_CRITICAL();
9001070e:	f7ff f891 	bl	9000f834 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010712:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010714:	b963      	cbnz	r3, 90010730 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
90010716:	f7ff f8af 	bl	9000f878 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9001071a:	2f00      	cmp	r7, #0
9001071c:	f040 8085 	bne.w	9001082a <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
90010720:	2000      	movs	r0, #0
}
90010722:	b004      	add	sp, #16
90010724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
90010728:	a802      	add	r0, sp, #8
9001072a:	f001 f865 	bl	900117f8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9001072e:	e758      	b.n	900105e2 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
90010730:	f7ff f8a2 	bl	9000f878 <vPortExitCritical>
	return xReturn;
90010734:	2501      	movs	r5, #1
90010736:	e747      	b.n	900105c8 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
90010738:	23ff      	movs	r3, #255	@ 0xff
9001073a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001073e:	f7ff f89b 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
90010742:	f7ff f877 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010746:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001074a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001074c:	2d00      	cmp	r5, #0
9001074e:	dd10      	ble.n	90010772 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010750:	f104 0810 	add.w	r8, r4, #16
90010754:	e003      	b.n	9001075e <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
90010756:	1e6b      	subs	r3, r5, #1
90010758:	b2da      	uxtb	r2, r3
9001075a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001075c:	b14a      	cbz	r2, 90010772 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001075e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010760:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010762:	b133      	cbz	r3, 90010772 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010764:	f001 f802 	bl	9001176c <xTaskRemoveFromEventList>
90010768:	2800      	cmp	r0, #0
9001076a:	d0f4      	beq.n	90010756 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
9001076c:	f001 f892 	bl	90011894 <vTaskMissedYield>
90010770:	e7f1      	b.n	90010756 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
90010772:	23ff      	movs	r3, #255	@ 0xff
90010774:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010778:	f7ff f87e 	bl	9000f878 <vPortExitCritical>
				( void ) xTaskResumeAll();
9001077c:	f000 fe64 	bl	90011448 <xTaskResumeAll>
90010780:	e7d8      	b.n	90010734 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
90010782:	f7ff f879 	bl	9000f878 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010786:	6823      	ldr	r3, [r4, #0]
90010788:	2b00      	cmp	r3, #0
9001078a:	d05c      	beq.n	90010846 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9001078c:	f104 0824 	add.w	r8, r4, #36	@ 0x24
90010790:	9901      	ldr	r1, [sp, #4]
90010792:	4640      	mov	r0, r8
90010794:	f000 ff5c 	bl	90011650 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010798:	f7ff f84c 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001079c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900107a0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900107a2:	2d00      	cmp	r5, #0
900107a4:	dc04      	bgt.n	900107b0 <xQueueSemaphoreTake+0x21c>
900107a6:	e00d      	b.n	900107c4 <xQueueSemaphoreTake+0x230>
			--cTxLock;
900107a8:	1e6b      	subs	r3, r5, #1
900107aa:	b2da      	uxtb	r2, r3
900107ac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900107ae:	b14a      	cbz	r2, 900107c4 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900107b0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900107b2:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900107b4:	b133      	cbz	r3, 900107c4 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900107b6:	f000 ffd9 	bl	9001176c <xTaskRemoveFromEventList>
900107ba:	2800      	cmp	r0, #0
900107bc:	d0f4      	beq.n	900107a8 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
900107be:	f001 f869 	bl	90011894 <vTaskMissedYield>
900107c2:	e7f1      	b.n	900107a8 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
900107c4:	23ff      	movs	r3, #255	@ 0xff
900107c6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900107ca:	f7ff f855 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
900107ce:	f7ff f831 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900107d2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900107d6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900107d8:	2d00      	cmp	r5, #0
900107da:	dd10      	ble.n	900107fe <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900107dc:	f104 0810 	add.w	r8, r4, #16
900107e0:	e003      	b.n	900107ea <xQueueSemaphoreTake+0x256>
				--cRxLock;
900107e2:	1e6b      	subs	r3, r5, #1
900107e4:	b2da      	uxtb	r2, r3
900107e6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900107e8:	b14a      	cbz	r2, 900107fe <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900107ea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900107ec:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900107ee:	b133      	cbz	r3, 900107fe <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900107f0:	f000 ffbc 	bl	9001176c <xTaskRemoveFromEventList>
900107f4:	2800      	cmp	r0, #0
900107f6:	d0f4      	beq.n	900107e2 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
900107f8:	f001 f84c 	bl	90011894 <vTaskMissedYield>
900107fc:	e7f1      	b.n	900107e2 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
900107fe:	23ff      	movs	r3, #255	@ 0xff
90010800:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010804:	f7ff f838 	bl	9000f878 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010808:	f000 fe1e 	bl	90011448 <xTaskResumeAll>
9001080c:	2800      	cmp	r0, #0
9001080e:	d191      	bne.n	90010734 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
90010810:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010814:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010818:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001081c:	f3bf 8f4f 	dsb	sy
90010820:	f3bf 8f6f 	isb	sy
90010824:	e786      	b.n	90010734 <xQueueSemaphoreTake+0x1a0>
90010826:	462f      	mov	r7, r5
90010828:	e6cc      	b.n	900105c4 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9001082a:	f7ff f803 	bl	9000f834 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9001082e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90010830:	b119      	cbz	r1, 9001083a <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90010832:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90010834:	6819      	ldr	r1, [r3, #0]
90010836:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9001083a:	68a0      	ldr	r0, [r4, #8]
9001083c:	f001 f8c4 	bl	900119c8 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90010840:	f7ff f81a 	bl	9000f878 <vPortExitCritical>
90010844:	e76c      	b.n	90010720 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
90010846:	f7fe fff5 	bl	9000f834 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9001084a:	68a0      	ldr	r0, [r4, #8]
9001084c:	f001 f838 	bl	900118c0 <xTaskPriorityInherit>
90010850:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
90010852:	f7ff f811 	bl	9000f878 <vPortExitCritical>
90010856:	e799      	b.n	9001078c <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
90010858:	2f00      	cmp	r7, #0
9001085a:	d0f1      	beq.n	90010840 <xQueueSemaphoreTake+0x2ac>
9001085c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010860:	f383 8811 	msr	BASEPRI, r3
90010864:	f3bf 8f6f 	isb	sy
90010868:	f3bf 8f4f 	dsb	sy
9001086c:	e7fe      	b.n	9001086c <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9001086e:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010870:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90010872:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010874:	b12a      	cbz	r2, 90010882 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010876:	6923      	ldr	r3, [r4, #16]
90010878:	b93b      	cbnz	r3, 9001088a <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
9001087a:	f7fe fffd 	bl	9000f878 <vPortExitCritical>
				return pdPASS;
9001087e:	2001      	movs	r0, #1
90010880:	e74f      	b.n	90010722 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
90010882:	f001 f8f1 	bl	90011a68 <pvTaskIncrementMutexHeldCount>
90010886:	60a0      	str	r0, [r4, #8]
90010888:	e7f5      	b.n	90010876 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001088a:	f104 0010 	add.w	r0, r4, #16
9001088e:	f000 ff6d 	bl	9001176c <xTaskRemoveFromEventList>
90010892:	2800      	cmp	r0, #0
90010894:	d0f1      	beq.n	9001087a <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
90010896:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001089a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001089e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900108a2:	f3bf 8f4f 	dsb	sy
900108a6:	f3bf 8f6f 	isb	sy
900108aa:	e7e6      	b.n	9001087a <xQueueSemaphoreTake+0x2e6>

900108ac <xQueueReceiveFromISR>:
{
900108ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
900108b0:	b310      	cbz	r0, 900108f8 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900108b2:	460f      	mov	r7, r1
900108b4:	4604      	mov	r4, r0
900108b6:	4616      	mov	r6, r2
900108b8:	b191      	cbz	r1, 900108e0 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900108ba:	f7ff f8ed 	bl	9000fa98 <vPortValidateInterruptPriority>
	__asm volatile
900108be:	f3ef 8911 	mrs	r9, BASEPRI
900108c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108c6:	f383 8811 	msr	BASEPRI, r3
900108ca:	f3bf 8f6f 	isb	sy
900108ce:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900108d2:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900108d4:	b9cd      	cbnz	r5, 9001090a <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
900108d6:	4628      	mov	r0, r5
	__asm volatile
900108d8:	f389 8811 	msr	BASEPRI, r9
}
900108dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900108e0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900108e2:	2b00      	cmp	r3, #0
900108e4:	d0e9      	beq.n	900108ba <xQueueReceiveFromISR+0xe>
	__asm volatile
900108e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108ea:	f383 8811 	msr	BASEPRI, r3
900108ee:	f3bf 8f6f 	isb	sy
900108f2:	f3bf 8f4f 	dsb	sy
900108f6:	e7fe      	b.n	900108f6 <xQueueReceiveFromISR+0x4a>
900108f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108fc:	f383 8811 	msr	BASEPRI, r3
90010900:	f3bf 8f6f 	isb	sy
90010904:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010908:	e7fe      	b.n	90010908 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9001090a:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001090e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
90010910:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010914:	b142      	cbz	r2, 90010928 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010916:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010918:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001091a:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001091c:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001091e:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010920:	d21c      	bcs.n	9001095c <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010922:	4638      	mov	r0, r7
90010924:	f01a fafe 	bl	9002af24 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010928:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9001092a:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9001092e:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
90010930:	d006      	beq.n	90010940 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90010932:	f108 0301 	add.w	r3, r8, #1
90010936:	b25b      	sxtb	r3, r3
90010938:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9001093c:	2001      	movs	r0, #1
9001093e:	e7cb      	b.n	900108d8 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010940:	6923      	ldr	r3, [r4, #16]
90010942:	2b00      	cmp	r3, #0
90010944:	d0fa      	beq.n	9001093c <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010946:	f104 0010 	add.w	r0, r4, #16
9001094a:	f000 ff0f 	bl	9001176c <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9001094e:	2e00      	cmp	r6, #0
90010950:	d0f4      	beq.n	9001093c <xQueueReceiveFromISR+0x90>
90010952:	2800      	cmp	r0, #0
90010954:	d0f2      	beq.n	9001093c <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
90010956:	2301      	movs	r3, #1
90010958:	6033      	str	r3, [r6, #0]
9001095a:	e7ef      	b.n	9001093c <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9001095c:	6821      	ldr	r1, [r4, #0]
9001095e:	60e1      	str	r1, [r4, #12]
90010960:	e7df      	b.n	90010922 <xQueueReceiveFromISR+0x76>
90010962:	bf00      	nop
90010964:	0000      	movs	r0, r0
	...

90010968 <vQueueDelete>:
	configASSERT( pxQueue );
90010968:	b1e0      	cbz	r0, 900109a4 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9001096a:	4b21      	ldr	r3, [pc, #132]	@ (900109f0 <vQueueDelete+0x88>)
9001096c:	685a      	ldr	r2, [r3, #4]
9001096e:	4290      	cmp	r0, r2
90010970:	d02b      	beq.n	900109ca <vQueueDelete+0x62>
90010972:	68da      	ldr	r2, [r3, #12]
90010974:	4290      	cmp	r0, r2
90010976:	d02a      	beq.n	900109ce <vQueueDelete+0x66>
90010978:	695a      	ldr	r2, [r3, #20]
9001097a:	4290      	cmp	r0, r2
9001097c:	d029      	beq.n	900109d2 <vQueueDelete+0x6a>
9001097e:	69da      	ldr	r2, [r3, #28]
90010980:	4290      	cmp	r0, r2
90010982:	d028      	beq.n	900109d6 <vQueueDelete+0x6e>
90010984:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90010986:	4290      	cmp	r0, r2
90010988:	d027      	beq.n	900109da <vQueueDelete+0x72>
9001098a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9001098c:	4290      	cmp	r0, r2
9001098e:	d014      	beq.n	900109ba <vQueueDelete+0x52>
90010990:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90010992:	4290      	cmp	r0, r2
90010994:	d023      	beq.n	900109de <vQueueDelete+0x76>
90010996:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90010998:	4290      	cmp	r0, r2
9001099a:	d022      	beq.n	900109e2 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9001099c:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
900109a0:	b14b      	cbz	r3, 900109b6 <vQueueDelete+0x4e>
}
900109a2:	4770      	bx	lr
900109a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900109a8:	f383 8811 	msr	BASEPRI, r3
900109ac:	f3bf 8f6f 	isb	sy
900109b0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900109b4:	e7fe      	b.n	900109b4 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
900109b6:	f7fe be21 	b.w	9000f5fc <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900109ba:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
900109bc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
900109c0:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 900109e8 <vQueueDelete+0x80>
900109c4:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
900109c8:	e7e8      	b.n	9001099c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900109ca:	2200      	movs	r2, #0
900109cc:	e7f6      	b.n	900109bc <vQueueDelete+0x54>
900109ce:	2201      	movs	r2, #1
900109d0:	e7f4      	b.n	900109bc <vQueueDelete+0x54>
900109d2:	2202      	movs	r2, #2
900109d4:	e7f2      	b.n	900109bc <vQueueDelete+0x54>
900109d6:	2203      	movs	r2, #3
900109d8:	e7f0      	b.n	900109bc <vQueueDelete+0x54>
900109da:	2204      	movs	r2, #4
900109dc:	e7ee      	b.n	900109bc <vQueueDelete+0x54>
900109de:	2206      	movs	r2, #6
900109e0:	e7ec      	b.n	900109bc <vQueueDelete+0x54>
900109e2:	2207      	movs	r2, #7
900109e4:	e7ea      	b.n	900109bc <vQueueDelete+0x54>
900109e6:	bf00      	nop
	...
900109f0:	24022d98 	.word	0x24022d98

900109f4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
900109f4:	4b12      	ldr	r3, [pc, #72]	@ (90010a40 <vQueueAddToRegistry+0x4c>)
900109f6:	681a      	ldr	r2, [r3, #0]
900109f8:	b17a      	cbz	r2, 90010a1a <vQueueAddToRegistry+0x26>
900109fa:	689a      	ldr	r2, [r3, #8]
900109fc:	b162      	cbz	r2, 90010a18 <vQueueAddToRegistry+0x24>
900109fe:	691a      	ldr	r2, [r3, #16]
90010a00:	b192      	cbz	r2, 90010a28 <vQueueAddToRegistry+0x34>
90010a02:	699a      	ldr	r2, [r3, #24]
90010a04:	b192      	cbz	r2, 90010a2c <vQueueAddToRegistry+0x38>
90010a06:	6a1a      	ldr	r2, [r3, #32]
90010a08:	b192      	cbz	r2, 90010a30 <vQueueAddToRegistry+0x3c>
90010a0a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90010a0c:	b192      	cbz	r2, 90010a34 <vQueueAddToRegistry+0x40>
90010a0e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90010a10:	b192      	cbz	r2, 90010a38 <vQueueAddToRegistry+0x44>
90010a12:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90010a14:	b192      	cbz	r2, 90010a3c <vQueueAddToRegistry+0x48>
	}
90010a16:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90010a18:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
90010a1a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
90010a1e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
90010a22:	f8cc 0004 	str.w	r0, [ip, #4]
	}
90010a26:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90010a28:	2202      	movs	r2, #2
90010a2a:	e7f6      	b.n	90010a1a <vQueueAddToRegistry+0x26>
90010a2c:	2203      	movs	r2, #3
90010a2e:	e7f4      	b.n	90010a1a <vQueueAddToRegistry+0x26>
90010a30:	2204      	movs	r2, #4
90010a32:	e7f2      	b.n	90010a1a <vQueueAddToRegistry+0x26>
90010a34:	2205      	movs	r2, #5
90010a36:	e7f0      	b.n	90010a1a <vQueueAddToRegistry+0x26>
90010a38:	2206      	movs	r2, #6
90010a3a:	e7ee      	b.n	90010a1a <vQueueAddToRegistry+0x26>
90010a3c:	2207      	movs	r2, #7
90010a3e:	e7ec      	b.n	90010a1a <vQueueAddToRegistry+0x26>
90010a40:	24022d98 	.word	0x24022d98

90010a44 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
90010a44:	b570      	push	{r4, r5, r6, lr}
90010a46:	4605      	mov	r5, r0
90010a48:	460e      	mov	r6, r1
90010a4a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
90010a4c:	f7fe fef2 	bl	9000f834 <vPortEnterCritical>
90010a50:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
90010a54:	2bff      	cmp	r3, #255	@ 0xff
90010a56:	d102      	bne.n	90010a5e <vQueueWaitForMessageRestricted+0x1a>
90010a58:	2300      	movs	r3, #0
90010a5a:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
90010a5e:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
90010a62:	2bff      	cmp	r3, #255	@ 0xff
90010a64:	d102      	bne.n	90010a6c <vQueueWaitForMessageRestricted+0x28>
90010a66:	2300      	movs	r3, #0
90010a68:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
90010a6c:	f7fe ff04 	bl	9000f878 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90010a70:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90010a72:	2b00      	cmp	r3, #0
90010a74:	d043      	beq.n	90010afe <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
90010a76:	f7fe fedd 	bl	9000f834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010a7a:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
90010a7e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a80:	2c00      	cmp	r4, #0
90010a82:	dd14      	ble.n	90010aae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a84:	f105 0624 	add.w	r6, r5, #36	@ 0x24
90010a88:	e003      	b.n	90010a92 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
90010a8a:	1e63      	subs	r3, r4, #1
90010a8c:	b2da      	uxtb	r2, r3
90010a8e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a90:	b16a      	cbz	r2, 90010aae <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a92:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a94:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a96:	b153      	cbz	r3, 90010aae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a98:	f000 fe68 	bl	9001176c <xTaskRemoveFromEventList>
90010a9c:	2800      	cmp	r0, #0
90010a9e:	d0f4      	beq.n	90010a8a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90010aa0:	f000 fef8 	bl	90011894 <vTaskMissedYield>
			--cTxLock;
90010aa4:	1e63      	subs	r3, r4, #1
90010aa6:	b2da      	uxtb	r2, r3
90010aa8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010aaa:	2a00      	cmp	r2, #0
90010aac:	d1f1      	bne.n	90010a92 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
90010aae:	23ff      	movs	r3, #255	@ 0xff
90010ab0:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010ab4:	f7fe fee0 	bl	9000f878 <vPortExitCritical>
	taskENTER_CRITICAL();
90010ab8:	f7fe febc 	bl	9000f834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010abc:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
90010ac0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ac2:	2c00      	cmp	r4, #0
90010ac4:	dd14      	ble.n	90010af0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ac6:	f105 0610 	add.w	r6, r5, #16
90010aca:	e003      	b.n	90010ad4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
90010acc:	1e63      	subs	r3, r4, #1
90010ace:	b2da      	uxtb	r2, r3
90010ad0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ad2:	b16a      	cbz	r2, 90010af0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ad4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ad6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ad8:	b153      	cbz	r3, 90010af0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ada:	f000 fe47 	bl	9001176c <xTaskRemoveFromEventList>
90010ade:	2800      	cmp	r0, #0
90010ae0:	d0f4      	beq.n	90010acc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
90010ae2:	f000 fed7 	bl	90011894 <vTaskMissedYield>
				--cRxLock;
90010ae6:	1e63      	subs	r3, r4, #1
90010ae8:	b2da      	uxtb	r2, r3
90010aea:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010aec:	2a00      	cmp	r2, #0
90010aee:	d1f1      	bne.n	90010ad4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
90010af0:	23ff      	movs	r3, #255	@ 0xff
90010af2:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90010af6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
90010afa:	f7fe bebd 	b.w	9000f878 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
90010afe:	4622      	mov	r2, r4
90010b00:	4631      	mov	r1, r6
90010b02:	f105 0024 	add.w	r0, r5, #36	@ 0x24
90010b06:	f000 fde7 	bl	900116d8 <vTaskPlaceOnEventListRestricted>
90010b0a:	e7b4      	b.n	90010a76 <vQueueWaitForMessageRestricted+0x32>

90010b0c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
90010b0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90010b10:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
90010b12:	f7fe fe8f 	bl	9000f834 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
90010b16:	4a34      	ldr	r2, [pc, #208]	@ (90010be8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
90010b18:	4e34      	ldr	r6, [pc, #208]	@ (90010bec <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
90010b1a:	6813      	ldr	r3, [r2, #0]
90010b1c:	3301      	adds	r3, #1
90010b1e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
90010b20:	6833      	ldr	r3, [r6, #0]
90010b22:	2b00      	cmp	r3, #0
90010b24:	d031      	beq.n	90010b8a <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
90010b26:	4c32      	ldr	r4, [pc, #200]	@ (90010bf0 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90010b28:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
90010b2a:	6823      	ldr	r3, [r4, #0]
90010b2c:	b333      	cbz	r3, 90010b7c <prvAddNewTaskToReadyList+0x70>
90010b2e:	4f31      	ldr	r7, [pc, #196]	@ (90010bf4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
90010b30:	4a31      	ldr	r2, [pc, #196]	@ (90010bf8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
90010b32:	4932      	ldr	r1, [pc, #200]	@ (90010bfc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
90010b34:	6813      	ldr	r3, [r2, #0]
90010b36:	3301      	adds	r3, #1
90010b38:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
90010b3a:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
90010b3c:	680b      	ldr	r3, [r1, #0]
90010b3e:	4283      	cmp	r3, r0
90010b40:	d200      	bcs.n	90010b44 <prvAddNewTaskToReadyList+0x38>
90010b42:	6008      	str	r0, [r1, #0]
90010b44:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010b48:	1d29      	adds	r1, r5, #4
90010b4a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90010b4e:	f7fe fdcb 	bl	9000f6e8 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
90010b52:	f7fe fe91 	bl	9000f878 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
90010b56:	6823      	ldr	r3, [r4, #0]
90010b58:	b173      	cbz	r3, 90010b78 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
90010b5a:	6832      	ldr	r2, [r6, #0]
90010b5c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
90010b5e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010b60:	429a      	cmp	r2, r3
90010b62:	d209      	bcs.n	90010b78 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
90010b64:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010b68:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010b6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010b70:	f3bf 8f4f 	dsb	sy
90010b74:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90010b78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90010b7c:	6833      	ldr	r3, [r6, #0]
90010b7e:	4f1d      	ldr	r7, [pc, #116]	@ (90010bf4 <prvAddNewTaskToReadyList+0xe8>)
90010b80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010b82:	4283      	cmp	r3, r0
90010b84:	d8d4      	bhi.n	90010b30 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90010b86:	6035      	str	r5, [r6, #0]
90010b88:	e7d2      	b.n	90010b30 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
90010b8a:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
90010b8c:	6813      	ldr	r3, [r2, #0]
90010b8e:	2b01      	cmp	r3, #1
90010b90:	d003      	beq.n	90010b9a <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90010b92:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
90010b94:	4f17      	ldr	r7, [pc, #92]	@ (90010bf4 <prvAddNewTaskToReadyList+0xe8>)
90010b96:	4c16      	ldr	r4, [pc, #88]	@ (90010bf0 <prvAddNewTaskToReadyList+0xe4>)
90010b98:	e7ca      	b.n	90010b30 <prvAddNewTaskToReadyList+0x24>
90010b9a:	4f16      	ldr	r7, [pc, #88]	@ (90010bf4 <prvAddNewTaskToReadyList+0xe8>)
90010b9c:	463c      	mov	r4, r7
90010b9e:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90010ba2:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90010ba4:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90010ba6:	f7fe fd8f 	bl	9000f6c8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90010baa:	45a0      	cmp	r8, r4
90010bac:	d1f9      	bne.n	90010ba2 <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
90010bae:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 90010c14 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
90010bb2:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 90010c18 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90010bb6:	4648      	mov	r0, r9
90010bb8:	4c0d      	ldr	r4, [pc, #52]	@ (90010bf0 <prvAddNewTaskToReadyList+0xe4>)
90010bba:	f7fe fd85 	bl	9000f6c8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90010bbe:	4640      	mov	r0, r8
90010bc0:	f7fe fd82 	bl	9000f6c8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
90010bc4:	480e      	ldr	r0, [pc, #56]	@ (90010c00 <prvAddNewTaskToReadyList+0xf4>)
90010bc6:	f7fe fd7f 	bl	9000f6c8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
90010bca:	480e      	ldr	r0, [pc, #56]	@ (90010c04 <prvAddNewTaskToReadyList+0xf8>)
90010bcc:	f7fe fd7c 	bl	9000f6c8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90010bd0:	480d      	ldr	r0, [pc, #52]	@ (90010c08 <prvAddNewTaskToReadyList+0xfc>)
90010bd2:	f7fe fd79 	bl	9000f6c8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90010bd6:	4b0d      	ldr	r3, [pc, #52]	@ (90010c0c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
90010bd8:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
90010bda:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90010bde:	4b0c      	ldr	r3, [pc, #48]	@ (90010c10 <prvAddNewTaskToReadyList+0x104>)
90010be0:	f8c3 8000 	str.w	r8, [r3]
}
90010be4:	e7a4      	b.n	90010b30 <prvAddNewTaskToReadyList+0x24>
90010be6:	bf00      	nop
90010be8:	24022dfc 	.word	0x24022dfc
90010bec:	240232d0 	.word	0x240232d0
90010bf0:	24022df0 	.word	0x24022df0
90010bf4:	24022e70 	.word	0x24022e70
90010bf8:	24022de0 	.word	0x24022de0
90010bfc:	24022df4 	.word	0x24022df4
90010c00:	24022e2c 	.word	0x24022e2c
90010c04:	24022e18 	.word	0x24022e18
90010c08:	24022e00 	.word	0x24022e00
90010c0c:	24022e44 	.word	0x24022e44
90010c10:	24022e40 	.word	0x24022e40
90010c14:	24022e5c 	.word	0x24022e5c
90010c18:	24022e48 	.word	0x24022e48

90010c1c <prvIdleTask>:
{
90010c1c:	b580      	push	{r7, lr}
90010c1e:	4c22      	ldr	r4, [pc, #136]	@ (90010ca8 <prvIdleTask+0x8c>)
90010c20:	4e22      	ldr	r6, [pc, #136]	@ (90010cac <prvIdleTask+0x90>)
90010c22:	4d23      	ldr	r5, [pc, #140]	@ (90010cb0 <prvIdleTask+0x94>)
90010c24:	4f23      	ldr	r7, [pc, #140]	@ (90010cb4 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90010c26:	6823      	ldr	r3, [r4, #0]
90010c28:	b353      	cbz	r3, 90010c80 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
90010c2a:	f7fe fe03 	bl	9000f834 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010c2e:	68f3      	ldr	r3, [r6, #12]
90010c30:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010c34:	f108 0004 	add.w	r0, r8, #4
90010c38:	f7fe fd7c 	bl	9000f734 <uxListRemove>
				--uxCurrentNumberOfTasks;
90010c3c:	682b      	ldr	r3, [r5, #0]
90010c3e:	3b01      	subs	r3, #1
90010c40:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
90010c42:	6823      	ldr	r3, [r4, #0]
90010c44:	3b01      	subs	r3, #1
90010c46:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
90010c48:	f7fe fe16 	bl	9000f878 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90010c4c:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
90010c50:	b163      	cbz	r3, 90010c6c <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90010c52:	2b01      	cmp	r3, #1
90010c54:	d024      	beq.n	90010ca0 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90010c56:	2b02      	cmp	r3, #2
90010c58:	d0e5      	beq.n	90010c26 <prvIdleTask+0xa>
90010c5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010c5e:	f383 8811 	msr	BASEPRI, r3
90010c62:	f3bf 8f6f 	isb	sy
90010c66:	f3bf 8f4f 	dsb	sy
90010c6a:	e7fe      	b.n	90010c6a <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
90010c6c:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
90010c70:	f7fe fcc4 	bl	9000f5fc <vPortFree>
				vPortFree( pxTCB );
90010c74:	4640      	mov	r0, r8
90010c76:	f7fe fcc1 	bl	9000f5fc <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90010c7a:	6823      	ldr	r3, [r4, #0]
90010c7c:	2b00      	cmp	r3, #0
90010c7e:	d1d4      	bne.n	90010c2a <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90010c80:	683b      	ldr	r3, [r7, #0]
90010c82:	2b01      	cmp	r3, #1
90010c84:	d909      	bls.n	90010c9a <prvIdleTask+0x7e>
				taskYIELD();
90010c86:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010c8a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010c8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010c92:	f3bf 8f4f 	dsb	sy
90010c96:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
90010c9a:	f7f2 fcc9 	bl	90003630 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
90010c9e:	e7c2      	b.n	90010c26 <prvIdleTask+0xa>
				vPortFree( pxTCB );
90010ca0:	4640      	mov	r0, r8
90010ca2:	f7fe fcab 	bl	9000f5fc <vPortFree>
90010ca6:	e7be      	b.n	90010c26 <prvIdleTask+0xa>
90010ca8:	24022e14 	.word	0x24022e14
90010cac:	24022e18 	.word	0x24022e18
90010cb0:	24022dfc 	.word	0x24022dfc
90010cb4:	24022e70 	.word	0x24022e70

90010cb8 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010cb8:	4b49      	ldr	r3, [pc, #292]	@ (90010de0 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
90010cba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010cbe:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90010cc0:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010cc2:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90010cc4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90010cc6:	2e00      	cmp	r6, #0
90010cc8:	d03e      	beq.n	90010d48 <xTaskIncrementTick.part.0+0x90>
90010cca:	4b46      	ldr	r3, [pc, #280]	@ (90010de4 <xTaskIncrementTick.part.0+0x12c>)
90010ccc:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
90010cce:	681b      	ldr	r3, [r3, #0]
90010cd0:	429e      	cmp	r6, r3
90010cd2:	d346      	bcc.n	90010d62 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010cd4:	4f44      	ldr	r7, [pc, #272]	@ (90010de8 <xTaskIncrementTick.part.0+0x130>)
90010cd6:	683b      	ldr	r3, [r7, #0]
90010cd8:	681d      	ldr	r5, [r3, #0]
90010cda:	2d00      	cmp	r5, #0
90010cdc:	d077      	beq.n	90010dce <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
90010cde:	2500      	movs	r5, #0
90010ce0:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 90010df8 <xTaskIncrementTick.part.0+0x140>
90010ce4:	f8df a114 	ldr.w	sl, [pc, #276]	@ 90010dfc <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
90010ce8:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 90010e00 <xTaskIncrementTick.part.0+0x148>
90010cec:	e020      	b.n	90010d30 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010cee:	f7fe fd21 	bl	9000f734 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90010cf2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010cf4:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90010cf8:	b10b      	cbz	r3, 90010cfe <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010cfa:	f7fe fd1b 	bl	9000f734 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90010cfe:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90010d00:	4659      	mov	r1, fp
90010d02:	f8d8 2000 	ldr.w	r2, [r8]
90010d06:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90010d0a:	4293      	cmp	r3, r2
90010d0c:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010d10:	d901      	bls.n	90010d16 <xTaskIncrementTick.part.0+0x5e>
90010d12:	f8c8 3000 	str.w	r3, [r8]
90010d16:	f7fe fce7 	bl	9000f6e8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010d1a:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010d1e:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010d20:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90010d22:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010d24:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
90010d26:	4291      	cmp	r1, r2
90010d28:	bf28      	it	cs
90010d2a:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010d2c:	2b00      	cmp	r3, #0
90010d2e:	d052      	beq.n	90010dd6 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010d30:	683b      	ldr	r3, [r7, #0]
90010d32:	68db      	ldr	r3, [r3, #12]
90010d34:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
90010d36:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010d38:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
90010d3c:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010d3e:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
90010d40:	d2d5      	bcs.n	90010cee <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
90010d42:	9a01      	ldr	r2, [sp, #4]
90010d44:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90010d46:	e011      	b.n	90010d6c <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
90010d48:	4b27      	ldr	r3, [pc, #156]	@ (90010de8 <xTaskIncrementTick.part.0+0x130>)
90010d4a:	681a      	ldr	r2, [r3, #0]
90010d4c:	6812      	ldr	r2, [r2, #0]
90010d4e:	b30a      	cbz	r2, 90010d94 <xTaskIncrementTick.part.0+0xdc>
90010d50:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010d54:	f383 8811 	msr	BASEPRI, r3
90010d58:	f3bf 8f6f 	isb	sy
90010d5c:	f3bf 8f4f 	dsb	sy
90010d60:	e7fe      	b.n	90010d60 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
90010d62:	2500      	movs	r5, #0
90010d64:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 90010df8 <xTaskIncrementTick.part.0+0x140>
90010d68:	f8df a090 	ldr.w	sl, [pc, #144]	@ 90010dfc <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010d6c:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90010d70:	491e      	ldr	r1, [pc, #120]	@ (90010dec <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010d72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010d74:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010d78:	009b      	lsls	r3, r3, #2
90010d7a:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90010d7e:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90010d80:	2a02      	cmp	r2, #2
90010d82:	bf28      	it	cs
90010d84:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90010d86:	2b00      	cmp	r3, #0
}
90010d88:	bf0c      	ite	eq
90010d8a:	4628      	moveq	r0, r5
90010d8c:	2001      	movne	r0, #1
90010d8e:	b003      	add	sp, #12
90010d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90010d94:	4a16      	ldr	r2, [pc, #88]	@ (90010df0 <xTaskIncrementTick.part.0+0x138>)
90010d96:	6818      	ldr	r0, [r3, #0]
90010d98:	6811      	ldr	r1, [r2, #0]
90010d9a:	6019      	str	r1, [r3, #0]
90010d9c:	4915      	ldr	r1, [pc, #84]	@ (90010df4 <xTaskIncrementTick.part.0+0x13c>)
90010d9e:	6010      	str	r0, [r2, #0]
90010da0:	680a      	ldr	r2, [r1, #0]
90010da2:	3201      	adds	r2, #1
90010da4:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010da6:	681a      	ldr	r2, [r3, #0]
90010da8:	6812      	ldr	r2, [r2, #0]
90010daa:	b93a      	cbnz	r2, 90010dbc <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90010dac:	4b0d      	ldr	r3, [pc, #52]	@ (90010de4 <xTaskIncrementTick.part.0+0x12c>)
90010dae:	461a      	mov	r2, r3
90010db0:	9301      	str	r3, [sp, #4]
90010db2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
90010db6:	6013      	str	r3, [r2, #0]
90010db8:	4613      	mov	r3, r2
90010dba:	e788      	b.n	90010cce <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010dbc:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010dbe:	4a09      	ldr	r2, [pc, #36]	@ (90010de4 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010dc0:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010dc2:	9201      	str	r2, [sp, #4]
90010dc4:	68db      	ldr	r3, [r3, #12]
90010dc6:	685b      	ldr	r3, [r3, #4]
90010dc8:	6013      	str	r3, [r2, #0]
90010dca:	4613      	mov	r3, r2
	}
}
90010dcc:	e77f      	b.n	90010cce <xTaskIncrementTick.part.0+0x16>
90010dce:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 90010df8 <xTaskIncrementTick.part.0+0x140>
90010dd2:	f8df a028 	ldr.w	sl, [pc, #40]	@ 90010dfc <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010dd6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
90010dda:	9a01      	ldr	r2, [sp, #4]
90010ddc:	6013      	str	r3, [r2, #0]
					break;
90010dde:	e7c5      	b.n	90010d6c <xTaskIncrementTick.part.0+0xb4>
90010de0:	24022df8 	.word	0x24022df8
90010de4:	24022ddc 	.word	0x24022ddc
90010de8:	24022e44 	.word	0x24022e44
90010dec:	24022de8 	.word	0x24022de8
90010df0:	24022e40 	.word	0x24022e40
90010df4:	24022de4 	.word	0x24022de4
90010df8:	24022e70 	.word	0x24022e70
90010dfc:	240232d0 	.word	0x240232d0
90010e00:	24022df4 	.word	0x24022df4

90010e04 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90010e04:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
90010e08:	4d43      	ldr	r5, [pc, #268]	@ (90010f18 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
90010e0a:	f7fe fd13 	bl	9000f834 <vPortEnterCritical>
		--uxSchedulerSuspended;
90010e0e:	682b      	ldr	r3, [r5, #0]
90010e10:	3b01      	subs	r3, #1
90010e12:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010e14:	682b      	ldr	r3, [r5, #0]
90010e16:	2b00      	cmp	r3, #0
90010e18:	d168      	bne.n	90010eec <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
90010e1a:	4b40      	ldr	r3, [pc, #256]	@ (90010f1c <xTaskResumeAll.part.0+0x118>)
90010e1c:	681b      	ldr	r3, [r3, #0]
90010e1e:	2b00      	cmp	r3, #0
90010e20:	d064      	beq.n	90010eec <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010e22:	4e3f      	ldr	r6, [pc, #252]	@ (90010f20 <xTaskResumeAll.part.0+0x11c>)
90010e24:	6833      	ldr	r3, [r6, #0]
90010e26:	2b00      	cmp	r3, #0
90010e28:	d073      	beq.n	90010f12 <xTaskResumeAll.part.0+0x10e>
90010e2a:	4f3e      	ldr	r7, [pc, #248]	@ (90010f24 <xTaskResumeAll.part.0+0x120>)
90010e2c:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 90010f34 <xTaskResumeAll.part.0+0x130>
90010e30:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 90010f38 <xTaskResumeAll.part.0+0x134>
90010e34:	f8df a104 	ldr.w	sl, [pc, #260]	@ 90010f3c <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010e38:	68f3      	ldr	r3, [r6, #12]
90010e3a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010e3e:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010e42:	f10b 0018 	add.w	r0, fp, #24
90010e46:	f7fe fc75 	bl	9000f734 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010e4a:	4620      	mov	r0, r4
90010e4c:	f7fe fc72 	bl	9000f734 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90010e50:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
90010e54:	4621      	mov	r1, r4
90010e56:	683c      	ldr	r4, [r7, #0]
90010e58:	eb02 0082 	add.w	r0, r2, r2, lsl #2
90010e5c:	42a2      	cmp	r2, r4
90010e5e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010e62:	d900      	bls.n	90010e66 <xTaskResumeAll.part.0+0x62>
90010e64:	603a      	str	r2, [r7, #0]
90010e66:	f7fe fc3f 	bl	9000f6e8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010e6a:	f8d8 1000 	ldr.w	r1, [r8]
90010e6e:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
90010e72:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
90010e74:	429a      	cmp	r2, r3
90010e76:	d33f      	bcc.n	90010ef8 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
90010e78:	2301      	movs	r3, #1
90010e7a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010e7e:	6833      	ldr	r3, [r6, #0]
90010e80:	2b00      	cmp	r3, #0
90010e82:	d1d9      	bne.n	90010e38 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010e84:	4b28      	ldr	r3, [pc, #160]	@ (90010f28 <xTaskResumeAll.part.0+0x124>)
90010e86:	681a      	ldr	r2, [r3, #0]
90010e88:	6812      	ldr	r2, [r2, #0]
90010e8a:	2a00      	cmp	r2, #0
90010e8c:	d03c      	beq.n	90010f08 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010e8e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010e90:	4b26      	ldr	r3, [pc, #152]	@ (90010f2c <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010e92:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010e94:	68d2      	ldr	r2, [r2, #12]
90010e96:	6852      	ldr	r2, [r2, #4]
90010e98:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90010e9a:	4e25      	ldr	r6, [pc, #148]	@ (90010f30 <xTaskResumeAll.part.0+0x12c>)
90010e9c:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90010e9e:	b194      	cbz	r4, 90010ec6 <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
90010ea0:	2701      	movs	r7, #1
90010ea2:	e006      	b.n	90010eb2 <xTaskResumeAll.part.0+0xae>
90010ea4:	f7ff ff08 	bl	90010cb8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90010ea8:	b108      	cbz	r0, 90010eae <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
90010eaa:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010eae:	3c01      	subs	r4, #1
90010eb0:	d008      	beq.n	90010ec4 <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010eb2:	682b      	ldr	r3, [r5, #0]
90010eb4:	2b00      	cmp	r3, #0
90010eb6:	d0f5      	beq.n	90010ea4 <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
90010eb8:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010eba:	3c01      	subs	r4, #1
		++xPendedTicks;
90010ebc:	f103 0301 	add.w	r3, r3, #1
90010ec0:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010ec2:	d1f6      	bne.n	90010eb2 <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
90010ec4:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90010ec6:	f8da 3000 	ldr.w	r3, [sl]
90010eca:	b17b      	cbz	r3, 90010eec <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
90010ecc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010ed0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010ed4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010ed8:	f3bf 8f4f 	dsb	sy
90010edc:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90010ee0:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90010ee2:	f7fe fcc9 	bl	9000f878 <vPortExitCritical>
}
90010ee6:	4620      	mov	r0, r4
90010ee8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
90010eec:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
90010eee:	f7fe fcc3 	bl	9000f878 <vPortExitCritical>
}
90010ef2:	4620      	mov	r0, r4
90010ef4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010ef8:	6833      	ldr	r3, [r6, #0]
90010efa:	2b00      	cmp	r3, #0
90010efc:	d19c      	bne.n	90010e38 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010efe:	4b0a      	ldr	r3, [pc, #40]	@ (90010f28 <xTaskResumeAll.part.0+0x124>)
90010f00:	681a      	ldr	r2, [r3, #0]
90010f02:	6812      	ldr	r2, [r2, #0]
90010f04:	2a00      	cmp	r2, #0
90010f06:	d1c2      	bne.n	90010e8e <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
90010f08:	4b08      	ldr	r3, [pc, #32]	@ (90010f2c <xTaskResumeAll.part.0+0x128>)
90010f0a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
90010f0e:	601a      	str	r2, [r3, #0]
90010f10:	e7c3      	b.n	90010e9a <xTaskResumeAll.part.0+0x96>
90010f12:	f8df a028 	ldr.w	sl, [pc, #40]	@ 90010f3c <xTaskResumeAll.part.0+0x138>
90010f16:	e7c0      	b.n	90010e9a <xTaskResumeAll.part.0+0x96>
90010f18:	24022dd8 	.word	0x24022dd8
90010f1c:	24022dfc 	.word	0x24022dfc
90010f20:	24022e2c 	.word	0x24022e2c
90010f24:	24022df4 	.word	0x24022df4
90010f28:	24022e44 	.word	0x24022e44
90010f2c:	24022ddc 	.word	0x24022ddc
90010f30:	24022dec 	.word	0x24022dec
90010f34:	24022e70 	.word	0x24022e70
90010f38:	240232d0 	.word	0x240232d0
90010f3c:	24022de8 	.word	0x24022de8

90010f40 <xTaskCreateStatic>:
	{
90010f40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010f44:	b083      	sub	sp, #12
90010f46:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
90010f48:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
90010f4c:	b1bb      	cbz	r3, 90010f7e <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
90010f4e:	b16c      	cbz	r4, 90010f6c <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
90010f50:	2360      	movs	r3, #96	@ 0x60
90010f52:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
90010f54:	9b01      	ldr	r3, [sp, #4]
90010f56:	2b60      	cmp	r3, #96	@ 0x60
90010f58:	d01a      	beq.n	90010f90 <xTaskCreateStatic+0x50>
90010f5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f5e:	f383 8811 	msr	BASEPRI, r3
90010f62:	f3bf 8f6f 	isb	sy
90010f66:	f3bf 8f4f 	dsb	sy
90010f6a:	e7fe      	b.n	90010f6a <xTaskCreateStatic+0x2a>
90010f6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f70:	f383 8811 	msr	BASEPRI, r3
90010f74:	f3bf 8f6f 	isb	sy
90010f78:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90010f7c:	e7fe      	b.n	90010f7c <xTaskCreateStatic+0x3c>
90010f7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f82:	f383 8811 	msr	BASEPRI, r3
90010f86:	f3bf 8f6f 	isb	sy
90010f8a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90010f8e:	e7fe      	b.n	90010f8e <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010f90:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010f92:	0096      	lsls	r6, r2, #2
90010f94:	4607      	mov	r7, r0
90010f96:	460d      	mov	r5, r1
90010f98:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010f9a:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010f9c:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010f9e:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010fa0:	4632      	mov	r2, r6
90010fa2:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010fa4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010fa8:	f019 fed4 	bl	9002ad54 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010fac:	1f32      	subs	r2, r6, #4
90010fae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90010fb0:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90010fb2:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
90010fb6:	2d00      	cmp	r5, #0
90010fb8:	d068      	beq.n	9001108c <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010fba:	782b      	ldrb	r3, [r5, #0]
90010fbc:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90010fc0:	2b00      	cmp	r3, #0
90010fc2:	d036      	beq.n	90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010fc4:	786b      	ldrb	r3, [r5, #1]
90010fc6:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90010fca:	b393      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010fcc:	78ab      	ldrb	r3, [r5, #2]
90010fce:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90010fd2:	b373      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010fd4:	78eb      	ldrb	r3, [r5, #3]
90010fd6:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90010fda:	b353      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010fdc:	792b      	ldrb	r3, [r5, #4]
90010fde:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90010fe2:	b333      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010fe4:	796b      	ldrb	r3, [r5, #5]
90010fe6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90010fea:	b313      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010fec:	79ab      	ldrb	r3, [r5, #6]
90010fee:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90010ff2:	b1f3      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010ff4:	79eb      	ldrb	r3, [r5, #7]
90010ff6:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90010ffa:	b1d3      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010ffc:	7a2b      	ldrb	r3, [r5, #8]
90010ffe:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011002:	b1b3      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011004:	7a6b      	ldrb	r3, [r5, #9]
90011006:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9001100a:	b193      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001100c:	7aab      	ldrb	r3, [r5, #10]
9001100e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011012:	b173      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011014:	7aeb      	ldrb	r3, [r5, #11]
90011016:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9001101a:	b153      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001101c:	7b2b      	ldrb	r3, [r5, #12]
9001101e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011022:	b133      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011024:	7b6b      	ldrb	r3, [r5, #13]
90011026:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9001102a:	b113      	cbz	r3, 90011032 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001102c:	7bab      	ldrb	r3, [r5, #14]
9001102e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011032:	2300      	movs	r3, #0
90011034:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011038:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9001103a:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001103e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011040:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011042:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011046:	bf28      	it	cs
90011048:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9001104a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9001104c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001104e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011052:	f7fe fb45 	bl	9000f6e0 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011056:	f104 0018 	add.w	r0, r4, #24
9001105a:	f7fe fb41 	bl	9000f6e0 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001105e:	4642      	mov	r2, r8
90011060:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90011062:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011066:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011068:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001106a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001106c:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9001106e:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011072:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011076:	f7fe fbaf 	bl	9000f7d8 <pxPortInitialiseStack>
9001107a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9001107c:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001107e:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011080:	f7ff fd44 	bl	90010b0c <prvAddNewTaskToReadyList>
	}
90011084:	4620      	mov	r0, r4
90011086:	b003      	add	sp, #12
90011088:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9001108c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
90011090:	e7d2      	b.n	90011038 <xTaskCreateStatic+0xf8>
90011092:	bf00      	nop

90011094 <xTaskCreate>:
	{
90011094:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011098:	0096      	lsls	r6, r2, #2
	{
9001109a:	4680      	mov	r8, r0
9001109c:	460d      	mov	r5, r1
9001109e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
900110a0:	4630      	mov	r0, r6
900110a2:	f7fe f9ef 	bl	9000f484 <pvPortMalloc>
			if( pxStack != NULL )
900110a6:	2800      	cmp	r0, #0
900110a8:	d07f      	beq.n	900111aa <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
900110aa:	4607      	mov	r7, r0
900110ac:	2060      	movs	r0, #96	@ 0x60
900110ae:	f7fe f9e9 	bl	9000f484 <pvPortMalloc>
				if( pxNewTCB != NULL )
900110b2:	4604      	mov	r4, r0
900110b4:	2800      	cmp	r0, #0
900110b6:	d075      	beq.n	900111a4 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900110b8:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
900110ba:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900110bc:	4632      	mov	r2, r6
900110be:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900110c0:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900110c4:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900110c6:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900110c8:	f019 fe44 	bl	9002ad54 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900110cc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900110ce:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
900110d0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
900110d4:	2d00      	cmp	r5, #0
900110d6:	d06c      	beq.n	900111b2 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900110d8:	782b      	ldrb	r3, [r5, #0]
900110da:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
900110de:	2b00      	cmp	r3, #0
900110e0:	d036      	beq.n	90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900110e2:	786b      	ldrb	r3, [r5, #1]
900110e4:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
900110e8:	b393      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900110ea:	78ab      	ldrb	r3, [r5, #2]
900110ec:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
900110f0:	b373      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900110f2:	78eb      	ldrb	r3, [r5, #3]
900110f4:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
900110f8:	b353      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900110fa:	792b      	ldrb	r3, [r5, #4]
900110fc:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011100:	b333      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011102:	796b      	ldrb	r3, [r5, #5]
90011104:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011108:	b313      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001110a:	79ab      	ldrb	r3, [r5, #6]
9001110c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011110:	b1f3      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011112:	79eb      	ldrb	r3, [r5, #7]
90011114:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011118:	b1d3      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001111a:	7a2b      	ldrb	r3, [r5, #8]
9001111c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011120:	b1b3      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011122:	7a6b      	ldrb	r3, [r5, #9]
90011124:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90011128:	b193      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001112a:	7aab      	ldrb	r3, [r5, #10]
9001112c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011130:	b173      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011132:	7aeb      	ldrb	r3, [r5, #11]
90011134:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90011138:	b153      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001113a:	7b2b      	ldrb	r3, [r5, #12]
9001113c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011140:	b133      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011142:	7b6b      	ldrb	r3, [r5, #13]
90011144:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011148:	b113      	cbz	r3, 90011150 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001114a:	7bab      	ldrb	r3, [r5, #14]
9001114c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011150:	2300      	movs	r3, #0
90011152:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011156:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90011158:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001115a:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9001115c:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9001115e:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011160:	bf28      	it	cs
90011162:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
90011164:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011166:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011168:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001116c:	f7fe fab8 	bl	9000f6e0 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011170:	f104 0018 	add.w	r0, r4, #24
90011174:	f7fe fab4 	bl	9000f6e0 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
90011178:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001117a:	464a      	mov	r2, r9
9001117c:	4641      	mov	r1, r8
9001117e:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011180:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011182:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011184:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
90011186:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011188:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001118c:	f7fe fb24 	bl	9000f7d8 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90011190:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011192:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90011194:	b103      	cbz	r3, 90011198 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90011196:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011198:	4620      	mov	r0, r4
9001119a:	f7ff fcb7 	bl	90010b0c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9001119e:	2001      	movs	r0, #1
	}
900111a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
900111a4:	4638      	mov	r0, r7
900111a6:	f7fe fa29 	bl	9000f5fc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
900111aa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
	}
900111ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
900111b2:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
900111b6:	e7ce      	b.n	90011156 <xTaskCreate+0xc2>

900111b8 <vTaskDelay>:
	{
900111b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
900111ba:	b950      	cbnz	r0, 900111d2 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
900111bc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900111c0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900111c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900111c8:	f3bf 8f4f 	dsb	sy
900111cc:	f3bf 8f6f 	isb	sy
	}
900111d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
900111d2:	4d1e      	ldr	r5, [pc, #120]	@ (9001124c <vTaskDelay+0x94>)
900111d4:	682b      	ldr	r3, [r5, #0]
900111d6:	b143      	cbz	r3, 900111ea <vTaskDelay+0x32>
900111d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900111dc:	f383 8811 	msr	BASEPRI, r3
900111e0:	f3bf 8f6f 	isb	sy
900111e4:	f3bf 8f4f 	dsb	sy
900111e8:	e7fe      	b.n	900111e8 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
900111ea:	682b      	ldr	r3, [r5, #0]
900111ec:	4604      	mov	r4, r0
900111ee:	3301      	adds	r3, #1
900111f0:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
900111f2:	4b17      	ldr	r3, [pc, #92]	@ (90011250 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900111f4:	4e17      	ldr	r6, [pc, #92]	@ (90011254 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
900111f6:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900111f8:	6830      	ldr	r0, [r6, #0]
900111fa:	3004      	adds	r0, #4
900111fc:	f7fe fa9a 	bl	9000f734 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90011200:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011202:	6833      	ldr	r3, [r6, #0]
90011204:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90011206:	d315      	bcc.n	90011234 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011208:	4b13      	ldr	r3, [pc, #76]	@ (90011258 <vTaskDelay+0xa0>)
9001120a:	6818      	ldr	r0, [r3, #0]
9001120c:	6831      	ldr	r1, [r6, #0]
9001120e:	3104      	adds	r1, #4
90011210:	f7fe fa78 	bl	9000f704 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90011214:	682b      	ldr	r3, [r5, #0]
90011216:	b943      	cbnz	r3, 9001122a <vTaskDelay+0x72>
90011218:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001121c:	f383 8811 	msr	BASEPRI, r3
90011220:	f3bf 8f6f 	isb	sy
90011224:	f3bf 8f4f 	dsb	sy
90011228:	e7fe      	b.n	90011228 <vTaskDelay+0x70>
9001122a:	f7ff fdeb 	bl	90010e04 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9001122e:	2800      	cmp	r0, #0
90011230:	d0c4      	beq.n	900111bc <vTaskDelay+0x4>
	}
90011232:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011234:	4b09      	ldr	r3, [pc, #36]	@ (9001125c <vTaskDelay+0xa4>)
90011236:	6818      	ldr	r0, [r3, #0]
90011238:	6831      	ldr	r1, [r6, #0]
9001123a:	3104      	adds	r1, #4
9001123c:	f7fe fa62 	bl	9000f704 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90011240:	4b07      	ldr	r3, [pc, #28]	@ (90011260 <vTaskDelay+0xa8>)
90011242:	681a      	ldr	r2, [r3, #0]
90011244:	4294      	cmp	r4, r2
90011246:	d2e5      	bcs.n	90011214 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90011248:	601c      	str	r4, [r3, #0]
9001124a:	e7e3      	b.n	90011214 <vTaskDelay+0x5c>
9001124c:	24022dd8 	.word	0x24022dd8
90011250:	24022df8 	.word	0x24022df8
90011254:	240232d0 	.word	0x240232d0
90011258:	24022e40 	.word	0x24022e40
9001125c:	24022e44 	.word	0x24022e44
90011260:	24022ddc 	.word	0x24022ddc

90011264 <vTaskResume>:
		configASSERT( xTaskToResume );
90011264:	b180      	cbz	r0, 90011288 <vTaskResume+0x24>
	{
90011266:	b570      	push	{r4, r5, r6, lr}
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
90011268:	4d20      	ldr	r5, [pc, #128]	@ (900112ec <vTaskResume+0x88>)
9001126a:	4604      	mov	r4, r0
9001126c:	682b      	ldr	r3, [r5, #0]
9001126e:	4283      	cmp	r3, r0
90011270:	d009      	beq.n	90011286 <vTaskResume+0x22>
			taskENTER_CRITICAL();
90011272:	f7fe fadf 	bl	9000f834 <vPortEnterCritical>
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
90011276:	4b1e      	ldr	r3, [pc, #120]	@ (900112f0 <vTaskResume+0x8c>)
90011278:	6962      	ldr	r2, [r4, #20]
9001127a:	429a      	cmp	r2, r3
9001127c:	d00d      	beq.n	9001129a <vTaskResume+0x36>
	}
9001127e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			taskEXIT_CRITICAL();
90011282:	f7fe baf9 	b.w	9000f878 <vPortExitCritical>
	}
90011286:	bd70      	pop	{r4, r5, r6, pc}
90011288:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001128c:	f383 8811 	msr	BASEPRI, r3
90011290:	f3bf 8f6f 	isb	sy
90011294:	f3bf 8f4f 	dsb	sy
		configASSERT( xTaskToResume );
90011298:	e7fe      	b.n	90011298 <vTaskResume+0x34>
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
9001129a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
9001129c:	2b00      	cmp	r3, #0
9001129e:	d1ee      	bne.n	9001127e <vTaskResume+0x1a>
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
900112a0:	4a14      	ldr	r2, [pc, #80]	@ (900112f4 <vTaskResume+0x90>)
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
900112a2:	4293      	cmp	r3, r2
900112a4:	d0eb      	beq.n	9001127e <vTaskResume+0x1a>
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
900112a6:	1d26      	adds	r6, r4, #4
900112a8:	4630      	mov	r0, r6
900112aa:	f7fe fa43 	bl	9000f734 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900112ae:	4b12      	ldr	r3, [pc, #72]	@ (900112f8 <vTaskResume+0x94>)
900112b0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
900112b2:	681a      	ldr	r2, [r3, #0]
900112b4:	4290      	cmp	r0, r2
900112b6:	d900      	bls.n	900112ba <vTaskResume+0x56>
900112b8:	6018      	str	r0, [r3, #0]
900112ba:	4b10      	ldr	r3, [pc, #64]	@ (900112fc <vTaskResume+0x98>)
900112bc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900112c0:	4631      	mov	r1, r6
900112c2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900112c6:	f7fe fa0f 	bl	9000f6e8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900112ca:	682b      	ldr	r3, [r5, #0]
900112cc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900112ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900112d0:	429a      	cmp	r2, r3
900112d2:	d3d4      	bcc.n	9001127e <vTaskResume+0x1a>
						taskYIELD_IF_USING_PREEMPTION();
900112d4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900112d8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900112dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900112e0:	f3bf 8f4f 	dsb	sy
900112e4:	f3bf 8f6f 	isb	sy
900112e8:	e7c9      	b.n	9001127e <vTaskResume+0x1a>
900112ea:	bf00      	nop
900112ec:	240232d0 	.word	0x240232d0
900112f0:	24022e00 	.word	0x24022e00
900112f4:	24022e2c 	.word	0x24022e2c
900112f8:	24022df4 	.word	0x24022df4
900112fc:	24022e70 	.word	0x24022e70

90011300 <vTaskStartScheduler>:
{
90011300:	b570      	push	{r4, r5, r6, lr}
90011302:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90011304:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011306:	4668      	mov	r0, sp
90011308:	aa02      	add	r2, sp, #8
9001130a:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9001130c:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011310:	f7fe f89a 	bl	9000f448 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90011314:	9d00      	ldr	r5, [sp, #0]
90011316:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9001131a:	b1b8      	cbz	r0, 9001134c <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9001131c:	b16d      	cbz	r5, 9001133a <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9001131e:	2260      	movs	r2, #96	@ 0x60
90011320:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90011322:	9a03      	ldr	r2, [sp, #12]
90011324:	2a60      	cmp	r2, #96	@ 0x60
90011326:	d01a      	beq.n	9001135e <vTaskStartScheduler+0x5e>
90011328:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001132c:	f383 8811 	msr	BASEPRI, r3
90011330:	f3bf 8f6f 	isb	sy
90011334:	f3bf 8f4f 	dsb	sy
90011338:	e7fe      	b.n	90011338 <vTaskStartScheduler+0x38>
9001133a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001133e:	f383 8811 	msr	BASEPRI, r3
90011342:	f3bf 8f6f 	isb	sy
90011346:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9001134a:	e7fe      	b.n	9001134a <vTaskStartScheduler+0x4a>
9001134c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011350:	f383 8811 	msr	BASEPRI, r3
90011354:	f3bf 8f6f 	isb	sy
90011358:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9001135c:	e7fe      	b.n	9001135c <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001135e:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011360:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011362:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011364:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011366:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011368:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9001136c:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001136e:	f019 fcf1 	bl	9002ad54 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011372:	1f33      	subs	r3, r6, #4
90011374:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011376:	492a      	ldr	r1, [pc, #168]	@ (90011420 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011378:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001137a:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001137c:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
90011380:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011382:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011386:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9001138a:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9001138c:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011390:	f7fe f9a6 	bl	9000f6e0 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011394:	f105 0018 	add.w	r0, r5, #24
90011398:	f7fe f9a2 	bl	9000f6e0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001139c:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001139e:	4622      	mov	r2, r4
900113a0:	4920      	ldr	r1, [pc, #128]	@ (90011424 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
900113a2:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900113a4:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900113a6:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900113a8:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900113aa:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
900113ac:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900113ae:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900113b2:	f7fe fa11 	bl	9000f7d8 <pxPortInitialiseStack>
900113b6:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
900113b8:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900113ba:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
900113bc:	f7ff fba6 	bl	90010b0c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
900113c0:	f000 fcf4 	bl	90011dac <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
900113c4:	2801      	cmp	r0, #1
900113c6:	d00c      	beq.n	900113e2 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900113c8:	3001      	adds	r0, #1
900113ca:	d001      	beq.n	900113d0 <vTaskStartScheduler+0xd0>
}
900113cc:	b004      	add	sp, #16
900113ce:	bd70      	pop	{r4, r5, r6, pc}
900113d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900113d4:	f383 8811 	msr	BASEPRI, r3
900113d8:	f3bf 8f6f 	isb	sy
900113dc:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900113e0:	e7fe      	b.n	900113e0 <vTaskStartScheduler+0xe0>
900113e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900113e6:	f383 8811 	msr	BASEPRI, r3
900113ea:	f3bf 8f6f 	isb	sy
900113ee:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
900113f2:	4b0d      	ldr	r3, [pc, #52]	@ (90011428 <vTaskStartScheduler+0x128>)
900113f4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
		xSchedulerRunning = pdTRUE;
900113f8:	490c      	ldr	r1, [pc, #48]	@ (9001142c <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
900113fa:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900113fc:	4b0c      	ldr	r3, [pc, #48]	@ (90011430 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
900113fe:	4a0d      	ldr	r2, [pc, #52]	@ (90011434 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90011400:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011402:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90011404:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90011406:	b143      	cbz	r3, 9001141a <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90011408:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001140a:	b10b      	cbz	r3, 90011410 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9001140c:	2000      	movs	r0, #0
9001140e:	4798      	blx	r3
}
90011410:	b004      	add	sp, #16
90011412:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
90011416:	f7fe ba9f 	b.w	9000f958 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9001141a:	6813      	ldr	r3, [r2, #0]
9001141c:	e7f4      	b.n	90011408 <vTaskStartScheduler+0x108>
9001141e:	bf00      	nop
90011420:	454c4449 	.word	0x454c4449
90011424:	90010c1d 	.word	0x90010c1d
90011428:	24022ddc 	.word	0x24022ddc
9001142c:	24022df0 	.word	0x24022df0
90011430:	24022df8 	.word	0x24022df8
90011434:	240232d0 	.word	0x240232d0

90011438 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90011438:	4a02      	ldr	r2, [pc, #8]	@ (90011444 <vTaskSuspendAll+0xc>)
9001143a:	6813      	ldr	r3, [r2, #0]
9001143c:	3301      	adds	r3, #1
9001143e:	6013      	str	r3, [r2, #0]
}
90011440:	4770      	bx	lr
90011442:	bf00      	nop
90011444:	24022dd8 	.word	0x24022dd8

90011448 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90011448:	4b06      	ldr	r3, [pc, #24]	@ (90011464 <xTaskResumeAll+0x1c>)
9001144a:	681b      	ldr	r3, [r3, #0]
9001144c:	b943      	cbnz	r3, 90011460 <xTaskResumeAll+0x18>
9001144e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011452:	f383 8811 	msr	BASEPRI, r3
90011456:	f3bf 8f6f 	isb	sy
9001145a:	f3bf 8f4f 	dsb	sy
9001145e:	e7fe      	b.n	9001145e <xTaskResumeAll+0x16>
90011460:	f7ff bcd0 	b.w	90010e04 <xTaskResumeAll.part.0>
90011464:	24022dd8 	.word	0x24022dd8

90011468 <xTaskGetTickCount>:
		xTicks = xTickCount;
90011468:	4b01      	ldr	r3, [pc, #4]	@ (90011470 <xTaskGetTickCount+0x8>)
9001146a:	6818      	ldr	r0, [r3, #0]
}
9001146c:	4770      	bx	lr
9001146e:	bf00      	nop
90011470:	24022df8 	.word	0x24022df8

90011474 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011474:	4b05      	ldr	r3, [pc, #20]	@ (9001148c <xTaskIncrementTick+0x18>)
90011476:	681b      	ldr	r3, [r3, #0]
90011478:	b90b      	cbnz	r3, 9001147e <xTaskIncrementTick+0xa>
9001147a:	f7ff bc1d 	b.w	90010cb8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9001147e:	4a04      	ldr	r2, [pc, #16]	@ (90011490 <xTaskIncrementTick+0x1c>)
}
90011480:	2000      	movs	r0, #0
		++xPendedTicks;
90011482:	6813      	ldr	r3, [r2, #0]
90011484:	3301      	adds	r3, #1
90011486:	6013      	str	r3, [r2, #0]
}
90011488:	4770      	bx	lr
9001148a:	bf00      	nop
9001148c:	24022dd8 	.word	0x24022dd8
90011490:	24022dec 	.word	0x24022dec

90011494 <vTaskSetApplicationTaskTag>:
	{
90011494:	b538      	push	{r3, r4, r5, lr}
90011496:	460d      	mov	r5, r1
		if( xTask == NULL )
90011498:	b138      	cbz	r0, 900114aa <vTaskSetApplicationTaskTag+0x16>
9001149a:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9001149c:	f7fe f9ca 	bl	9000f834 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900114a0:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900114a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900114a6:	f7fe b9e7 	b.w	9000f878 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
900114aa:	4b04      	ldr	r3, [pc, #16]	@ (900114bc <vTaskSetApplicationTaskTag+0x28>)
900114ac:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
900114ae:	f7fe f9c1 	bl	9000f834 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900114b2:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900114b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900114b8:	f7fe b9de 	b.w	9000f878 <vPortExitCritical>
900114bc:	240232d0 	.word	0x240232d0

900114c0 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
900114c0:	4b27      	ldr	r3, [pc, #156]	@ (90011560 <vTaskSwitchContext+0xa0>)
900114c2:	681b      	ldr	r3, [r3, #0]
900114c4:	b11b      	cbz	r3, 900114ce <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
900114c6:	4b27      	ldr	r3, [pc, #156]	@ (90011564 <vTaskSwitchContext+0xa4>)
900114c8:	2201      	movs	r2, #1
900114ca:	601a      	str	r2, [r3, #0]
900114cc:	4770      	bx	lr
{
900114ce:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
900114d0:	4a24      	ldr	r2, [pc, #144]	@ (90011564 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
900114d2:	4c25      	ldr	r4, [pc, #148]	@ (90011568 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
900114d4:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
900114d6:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900114d8:	2b00      	cmp	r3, #0
900114da:	d036      	beq.n	9001154a <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
900114dc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900114de:	b10b      	cbz	r3, 900114e4 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
900114e0:	2001      	movs	r0, #1
900114e2:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900114e4:	4d21      	ldr	r5, [pc, #132]	@ (9001156c <vTaskSwitchContext+0xac>)
900114e6:	4922      	ldr	r1, [pc, #136]	@ (90011570 <vTaskSwitchContext+0xb0>)
900114e8:	682b      	ldr	r3, [r5, #0]
900114ea:	eb03 0283 	add.w	r2, r3, r3, lsl #2
900114ee:	0098      	lsls	r0, r3, #2
900114f0:	0092      	lsls	r2, r2, #2
900114f2:	588a      	ldr	r2, [r1, r2]
900114f4:	b942      	cbnz	r2, 90011508 <vTaskSwitchContext+0x48>
900114f6:	b1fb      	cbz	r3, 90011538 <vTaskSwitchContext+0x78>
900114f8:	3b01      	subs	r3, #1
900114fa:	eb03 0283 	add.w	r2, r3, r3, lsl #2
900114fe:	0098      	lsls	r0, r3, #2
90011500:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90011504:	2a00      	cmp	r2, #0
90011506:	d0f6      	beq.n	900114f6 <vTaskSwitchContext+0x36>
90011508:	4418      	add	r0, r3
9001150a:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9001150e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90011512:	4662      	mov	r2, ip
90011514:	6849      	ldr	r1, [r1, #4]
90011516:	3208      	adds	r2, #8
90011518:	4291      	cmp	r1, r2
9001151a:	f8cc 1004 	str.w	r1, [ip, #4]
9001151e:	d01b      	beq.n	90011558 <vTaskSwitchContext+0x98>
90011520:	68ca      	ldr	r2, [r1, #12]
90011522:	6022      	str	r2, [r4, #0]
90011524:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
90011526:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011528:	b1a3      	cbz	r3, 90011554 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9001152a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001152c:	b11b      	cbz	r3, 90011536 <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9001152e:	2000      	movs	r0, #0
}
90011530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90011534:	4718      	bx	r3
}
90011536:	bd70      	pop	{r4, r5, r6, pc}
90011538:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001153c:	f383 8811 	msr	BASEPRI, r3
90011540:	f3bf 8f6f 	isb	sy
90011544:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011548:	e7fe      	b.n	90011548 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9001154a:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9001154c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001154e:	2b00      	cmp	r3, #0
90011550:	d1c6      	bne.n	900114e0 <vTaskSwitchContext+0x20>
90011552:	e7c7      	b.n	900114e4 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90011554:	6823      	ldr	r3, [r4, #0]
90011556:	e7e8      	b.n	9001152a <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011558:	6849      	ldr	r1, [r1, #4]
9001155a:	f8cc 1004 	str.w	r1, [ip, #4]
9001155e:	e7df      	b.n	90011520 <vTaskSwitchContext+0x60>
90011560:	24022dd8 	.word	0x24022dd8
90011564:	24022de8 	.word	0x24022de8
90011568:	240232d0 	.word	0x240232d0
9001156c:	24022df4 	.word	0x24022df4
90011570:	24022e70 	.word	0x24022e70

90011574 <vTaskSuspend>:
	{
90011574:	b570      	push	{r4, r5, r6, lr}
90011576:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
90011578:	4e2e      	ldr	r6, [pc, #184]	@ (90011634 <vTaskSuspend+0xc0>)
		taskENTER_CRITICAL();
9001157a:	f7fe f95b 	bl	9000f834 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
9001157e:	2c00      	cmp	r4, #0
90011580:	d03a      	beq.n	900115f8 <vTaskSuspend+0x84>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011582:	1d25      	adds	r5, r4, #4
90011584:	4628      	mov	r0, r5
90011586:	f7fe f8d5 	bl	9000f734 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9001158a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9001158c:	b11b      	cbz	r3, 90011596 <vTaskSuspend+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9001158e:	f104 0018 	add.w	r0, r4, #24
90011592:	f7fe f8cf 	bl	9000f734 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
90011596:	4629      	mov	r1, r5
90011598:	4827      	ldr	r0, [pc, #156]	@ (90011638 <vTaskSuspend+0xc4>)
9001159a:	f7fe f8a5 	bl	9000f6e8 <vListInsertEnd>
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
9001159e:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
900115a2:	2b01      	cmp	r3, #1
900115a4:	d102      	bne.n	900115ac <vTaskSuspend+0x38>
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900115a6:	2300      	movs	r3, #0
900115a8:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
		if( xSchedulerRunning != pdFALSE )
900115ac:	4d23      	ldr	r5, [pc, #140]	@ (9001163c <vTaskSuspend+0xc8>)
		taskEXIT_CRITICAL();
900115ae:	f7fe f963 	bl	9000f878 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
900115b2:	682b      	ldr	r3, [r5, #0]
900115b4:	b98b      	cbnz	r3, 900115da <vTaskSuspend+0x66>
		if( pxTCB == pxCurrentTCB )
900115b6:	6833      	ldr	r3, [r6, #0]
900115b8:	42a3      	cmp	r3, r4
900115ba:	d000      	beq.n	900115be <vTaskSuspend+0x4a>
	}
900115bc:	bd70      	pop	{r4, r5, r6, pc}
			if( xSchedulerRunning != pdFALSE )
900115be:	682b      	ldr	r3, [r5, #0]
900115c0:	b30b      	cbz	r3, 90011606 <vTaskSuspend+0x92>
				configASSERT( uxSchedulerSuspended == 0 );
900115c2:	4b1f      	ldr	r3, [pc, #124]	@ (90011640 <vTaskSuspend+0xcc>)
900115c4:	681b      	ldr	r3, [r3, #0]
900115c6:	b333      	cbz	r3, 90011616 <vTaskSuspend+0xa2>
900115c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900115cc:	f383 8811 	msr	BASEPRI, r3
900115d0:	f3bf 8f6f 	isb	sy
900115d4:	f3bf 8f4f 	dsb	sy
900115d8:	e7fe      	b.n	900115d8 <vTaskSuspend+0x64>
			taskENTER_CRITICAL();
900115da:	f7fe f92b 	bl	9000f834 <vPortEnterCritical>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900115de:	4b19      	ldr	r3, [pc, #100]	@ (90011644 <vTaskSuspend+0xd0>)
900115e0:	681a      	ldr	r2, [r3, #0]
900115e2:	6812      	ldr	r2, [r2, #0]
900115e4:	b152      	cbz	r2, 900115fc <vTaskSuspend+0x88>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900115e6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900115e8:	4b17      	ldr	r3, [pc, #92]	@ (90011648 <vTaskSuspend+0xd4>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900115ea:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900115ec:	68d2      	ldr	r2, [r2, #12]
900115ee:	6852      	ldr	r2, [r2, #4]
900115f0:	601a      	str	r2, [r3, #0]
			taskEXIT_CRITICAL();
900115f2:	f7fe f941 	bl	9000f878 <vPortExitCritical>
900115f6:	e7de      	b.n	900115b6 <vTaskSuspend+0x42>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
900115f8:	6834      	ldr	r4, [r6, #0]
900115fa:	e7c2      	b.n	90011582 <vTaskSuspend+0xe>
		xNextTaskUnblockTime = portMAX_DELAY;
900115fc:	4b12      	ldr	r3, [pc, #72]	@ (90011648 <vTaskSuspend+0xd4>)
900115fe:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
90011602:	601a      	str	r2, [r3, #0]
90011604:	e7f5      	b.n	900115f2 <vTaskSuspend+0x7e>
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
90011606:	490c      	ldr	r1, [pc, #48]	@ (90011638 <vTaskSuspend+0xc4>)
90011608:	4a10      	ldr	r2, [pc, #64]	@ (9001164c <vTaskSuspend+0xd8>)
9001160a:	6809      	ldr	r1, [r1, #0]
9001160c:	6812      	ldr	r2, [r2, #0]
9001160e:	4291      	cmp	r1, r2
90011610:	d10c      	bne.n	9001162c <vTaskSuspend+0xb8>
					pxCurrentTCB = NULL;
90011612:	6033      	str	r3, [r6, #0]
	}
90011614:	bd70      	pop	{r4, r5, r6, pc}
				portYIELD_WITHIN_API();
90011616:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001161a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001161e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011622:	f3bf 8f4f 	dsb	sy
90011626:	f3bf 8f6f 	isb	sy
	}
9001162a:	bd70      	pop	{r4, r5, r6, pc}
9001162c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					vTaskSwitchContext();
90011630:	f7ff bf46 	b.w	900114c0 <vTaskSwitchContext>
90011634:	240232d0 	.word	0x240232d0
90011638:	24022e00 	.word	0x24022e00
9001163c:	24022df0 	.word	0x24022df0
90011640:	24022dd8 	.word	0x24022dd8
90011644:	24022e44 	.word	0x24022e44
90011648:	24022ddc 	.word	0x24022ddc
9001164c:	24022dfc 	.word	0x24022dfc

90011650 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90011650:	b1f0      	cbz	r0, 90011690 <vTaskPlaceOnEventList+0x40>
{
90011652:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011654:	4d1a      	ldr	r5, [pc, #104]	@ (900116c0 <vTaskPlaceOnEventList+0x70>)
90011656:	460c      	mov	r4, r1
90011658:	6829      	ldr	r1, [r5, #0]
9001165a:	3118      	adds	r1, #24
9001165c:	f7fe f852 	bl	9000f704 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90011660:	4b18      	ldr	r3, [pc, #96]	@ (900116c4 <vTaskPlaceOnEventList+0x74>)
90011662:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011664:	6828      	ldr	r0, [r5, #0]
90011666:	3004      	adds	r0, #4
90011668:	f7fe f864 	bl	9000f734 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9001166c:	1c63      	adds	r3, r4, #1
9001166e:	d020      	beq.n	900116b2 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011670:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011672:	682b      	ldr	r3, [r5, #0]
90011674:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011676:	d214      	bcs.n	900116a2 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011678:	4b13      	ldr	r3, [pc, #76]	@ (900116c8 <vTaskPlaceOnEventList+0x78>)
9001167a:	6818      	ldr	r0, [r3, #0]
9001167c:	6829      	ldr	r1, [r5, #0]
9001167e:	3104      	adds	r1, #4
90011680:	f7fe f840 	bl	9000f704 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011684:	4b11      	ldr	r3, [pc, #68]	@ (900116cc <vTaskPlaceOnEventList+0x7c>)
90011686:	681a      	ldr	r2, [r3, #0]
90011688:	4294      	cmp	r4, r2
9001168a:	d200      	bcs.n	9001168e <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9001168c:	601c      	str	r4, [r3, #0]
}
9001168e:	bd70      	pop	{r4, r5, r6, pc}
90011690:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011694:	f383 8811 	msr	BASEPRI, r3
90011698:	f3bf 8f6f 	isb	sy
9001169c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900116a0:	e7fe      	b.n	900116a0 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900116a2:	4b0b      	ldr	r3, [pc, #44]	@ (900116d0 <vTaskPlaceOnEventList+0x80>)
900116a4:	6818      	ldr	r0, [r3, #0]
900116a6:	6829      	ldr	r1, [r5, #0]
}
900116a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900116ac:	3104      	adds	r1, #4
900116ae:	f7fe b829 	b.w	9000f704 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900116b2:	6829      	ldr	r1, [r5, #0]
900116b4:	4807      	ldr	r0, [pc, #28]	@ (900116d4 <vTaskPlaceOnEventList+0x84>)
900116b6:	3104      	adds	r1, #4
}
900116b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900116bc:	f7fe b814 	b.w	9000f6e8 <vListInsertEnd>
900116c0:	240232d0 	.word	0x240232d0
900116c4:	24022df8 	.word	0x24022df8
900116c8:	24022e44 	.word	0x24022e44
900116cc:	24022ddc 	.word	0x24022ddc
900116d0:	24022e40 	.word	0x24022e40
900116d4:	24022e00 	.word	0x24022e00

900116d8 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
900116d8:	b358      	cbz	r0, 90011732 <vTaskPlaceOnEventListRestricted+0x5a>
	{
900116da:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
900116dc:	4e1d      	ldr	r6, [pc, #116]	@ (90011754 <vTaskPlaceOnEventListRestricted+0x7c>)
900116de:	460c      	mov	r4, r1
900116e0:	4615      	mov	r5, r2
900116e2:	6831      	ldr	r1, [r6, #0]
900116e4:	3118      	adds	r1, #24
900116e6:	f7fd ffff 	bl	9000f6e8 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
900116ea:	b165      	cbz	r5, 90011706 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
900116ec:	4b1a      	ldr	r3, [pc, #104]	@ (90011758 <vTaskPlaceOnEventListRestricted+0x80>)
900116ee:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900116f0:	6830      	ldr	r0, [r6, #0]
900116f2:	3004      	adds	r0, #4
900116f4:	f7fe f81e 	bl	9000f734 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900116f8:	6831      	ldr	r1, [r6, #0]
900116fa:	4818      	ldr	r0, [pc, #96]	@ (9001175c <vTaskPlaceOnEventListRestricted+0x84>)
900116fc:	3104      	adds	r1, #4
	}
900116fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011702:	f7fd bff1 	b.w	9000f6e8 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90011706:	4b14      	ldr	r3, [pc, #80]	@ (90011758 <vTaskPlaceOnEventListRestricted+0x80>)
90011708:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001170a:	6830      	ldr	r0, [r6, #0]
9001170c:	3004      	adds	r0, #4
9001170e:	f7fe f811 	bl	9000f734 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011712:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011714:	6833      	ldr	r3, [r6, #0]
90011716:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011718:	d214      	bcs.n	90011744 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001171a:	4b11      	ldr	r3, [pc, #68]	@ (90011760 <vTaskPlaceOnEventListRestricted+0x88>)
9001171c:	6818      	ldr	r0, [r3, #0]
9001171e:	6831      	ldr	r1, [r6, #0]
90011720:	3104      	adds	r1, #4
90011722:	f7fd ffef 	bl	9000f704 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011726:	4b0f      	ldr	r3, [pc, #60]	@ (90011764 <vTaskPlaceOnEventListRestricted+0x8c>)
90011728:	681a      	ldr	r2, [r3, #0]
9001172a:	4294      	cmp	r4, r2
9001172c:	d200      	bcs.n	90011730 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9001172e:	601c      	str	r4, [r3, #0]
	}
90011730:	bd70      	pop	{r4, r5, r6, pc}
90011732:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011736:	f383 8811 	msr	BASEPRI, r3
9001173a:	f3bf 8f6f 	isb	sy
9001173e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90011742:	e7fe      	b.n	90011742 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011744:	4b08      	ldr	r3, [pc, #32]	@ (90011768 <vTaskPlaceOnEventListRestricted+0x90>)
90011746:	6818      	ldr	r0, [r3, #0]
90011748:	6831      	ldr	r1, [r6, #0]
	}
9001174a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001174e:	3104      	adds	r1, #4
90011750:	f7fd bfd8 	b.w	9000f704 <vListInsert>
90011754:	240232d0 	.word	0x240232d0
90011758:	24022df8 	.word	0x24022df8
9001175c:	24022e00 	.word	0x24022e00
90011760:	24022e44 	.word	0x24022e44
90011764:	24022ddc 	.word	0x24022ddc
90011768:	24022e40 	.word	0x24022e40

9001176c <xTaskRemoveFromEventList>:
{
9001176c:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001176e:	68c3      	ldr	r3, [r0, #12]
90011770:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90011772:	b34c      	cbz	r4, 900117c8 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90011774:	f104 0518 	add.w	r5, r4, #24
90011778:	4628      	mov	r0, r5
9001177a:	f7fd ffdb 	bl	9000f734 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001177e:	4b18      	ldr	r3, [pc, #96]	@ (900117e0 <xTaskRemoveFromEventList+0x74>)
90011780:	681b      	ldr	r3, [r3, #0]
90011782:	b173      	cbz	r3, 900117a2 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90011784:	4629      	mov	r1, r5
90011786:	4817      	ldr	r0, [pc, #92]	@ (900117e4 <xTaskRemoveFromEventList+0x78>)
90011788:	f7fd ffae 	bl	9000f6e8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9001178c:	4b16      	ldr	r3, [pc, #88]	@ (900117e8 <xTaskRemoveFromEventList+0x7c>)
9001178e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011790:	681b      	ldr	r3, [r3, #0]
90011792:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011794:	429a      	cmp	r2, r3
90011796:	d920      	bls.n	900117da <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
90011798:	2301      	movs	r3, #1
9001179a:	4a14      	ldr	r2, [pc, #80]	@ (900117ec <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
9001179c:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9001179e:	6013      	str	r3, [r2, #0]
}
900117a0:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900117a2:	1d25      	adds	r5, r4, #4
900117a4:	4628      	mov	r0, r5
900117a6:	f7fd ffc5 	bl	9000f734 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900117aa:	4b11      	ldr	r3, [pc, #68]	@ (900117f0 <xTaskRemoveFromEventList+0x84>)
900117ac:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
900117ae:	681a      	ldr	r2, [r3, #0]
900117b0:	4290      	cmp	r0, r2
900117b2:	d900      	bls.n	900117b6 <xTaskRemoveFromEventList+0x4a>
900117b4:	6018      	str	r0, [r3, #0]
900117b6:	4b0f      	ldr	r3, [pc, #60]	@ (900117f4 <xTaskRemoveFromEventList+0x88>)
900117b8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900117bc:	4629      	mov	r1, r5
900117be:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900117c2:	f7fd ff91 	bl	9000f6e8 <vListInsertEnd>
900117c6:	e7e1      	b.n	9001178c <xTaskRemoveFromEventList+0x20>
900117c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900117cc:	f383 8811 	msr	BASEPRI, r3
900117d0:	f3bf 8f6f 	isb	sy
900117d4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
900117d8:	e7fe      	b.n	900117d8 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
900117da:	2000      	movs	r0, #0
}
900117dc:	bd38      	pop	{r3, r4, r5, pc}
900117de:	bf00      	nop
900117e0:	24022dd8 	.word	0x24022dd8
900117e4:	24022e2c 	.word	0x24022e2c
900117e8:	240232d0 	.word	0x240232d0
900117ec:	24022de8 	.word	0x24022de8
900117f0:	24022df4 	.word	0x24022df4
900117f4:	24022e70 	.word	0x24022e70

900117f8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900117f8:	4a03      	ldr	r2, [pc, #12]	@ (90011808 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
900117fa:	4b04      	ldr	r3, [pc, #16]	@ (9001180c <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900117fc:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900117fe:	681b      	ldr	r3, [r3, #0]
90011800:	e9c0 2300 	strd	r2, r3, [r0]
}
90011804:	4770      	bx	lr
90011806:	bf00      	nop
90011808:	24022de4 	.word	0x24022de4
9001180c:	24022df8 	.word	0x24022df8

90011810 <xTaskCheckForTimeOut>:
{
90011810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
90011812:	b308      	cbz	r0, 90011858 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90011814:	460d      	mov	r5, r1
90011816:	b1b1      	cbz	r1, 90011846 <xTaskCheckForTimeOut+0x36>
90011818:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9001181a:	f7fe f80b 	bl	9000f834 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9001181e:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90011820:	4a1a      	ldr	r2, [pc, #104]	@ (9001188c <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
90011822:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90011824:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90011826:	d02c      	beq.n	90011882 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011828:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90011890 <xTaskCheckForTimeOut+0x80>
9001182c:	6826      	ldr	r6, [r4, #0]
9001182e:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011832:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011834:	42be      	cmp	r6, r7
90011836:	d018      	beq.n	9001186a <xTaskCheckForTimeOut+0x5a>
90011838:	4288      	cmp	r0, r1
9001183a:	d816      	bhi.n	9001186a <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
9001183c:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9001183e:	f7fe f81b 	bl	9000f878 <vPortExitCritical>
}
90011842:	4620      	mov	r0, r4
90011844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011846:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001184a:	f383 8811 	msr	BASEPRI, r3
9001184e:	f3bf 8f6f 	isb	sy
90011852:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90011856:	e7fe      	b.n	90011856 <xTaskCheckForTimeOut+0x46>
90011858:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001185c:	f383 8811 	msr	BASEPRI, r3
90011860:	f3bf 8f6f 	isb	sy
90011864:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
90011868:	e7fe      	b.n	90011868 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9001186a:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9001186e:	4573      	cmp	r3, lr
90011870:	d909      	bls.n	90011886 <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90011872:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011874:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011878:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9001187a:	4403      	add	r3, r0
9001187c:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001187e:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90011882:	2400      	movs	r4, #0
90011884:	e7db      	b.n	9001183e <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
90011886:	2300      	movs	r3, #0
90011888:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9001188a:	e7d7      	b.n	9001183c <xTaskCheckForTimeOut+0x2c>
9001188c:	24022df8 	.word	0x24022df8
90011890:	24022de4 	.word	0x24022de4

90011894 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90011894:	4b01      	ldr	r3, [pc, #4]	@ (9001189c <vTaskMissedYield+0x8>)
90011896:	2201      	movs	r2, #1
90011898:	601a      	str	r2, [r3, #0]
}
9001189a:	4770      	bx	lr
9001189c:	24022de8 	.word	0x24022de8

900118a0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900118a0:	4b05      	ldr	r3, [pc, #20]	@ (900118b8 <xTaskGetSchedulerState+0x18>)
900118a2:	681b      	ldr	r3, [r3, #0]
900118a4:	b133      	cbz	r3, 900118b4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900118a6:	4b05      	ldr	r3, [pc, #20]	@ (900118bc <xTaskGetSchedulerState+0x1c>)
900118a8:	6818      	ldr	r0, [r3, #0]
900118aa:	fab0 f080 	clz	r0, r0
900118ae:	0940      	lsrs	r0, r0, #5
900118b0:	0040      	lsls	r0, r0, #1
900118b2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
900118b4:	2001      	movs	r0, #1
	}
900118b6:	4770      	bx	lr
900118b8:	24022df0 	.word	0x24022df0
900118bc:	24022dd8 	.word	0x24022dd8

900118c0 <xTaskPriorityInherit>:
	{
900118c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
900118c2:	4604      	mov	r4, r0
900118c4:	b1c8      	cbz	r0, 900118fa <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
900118c6:	4d1b      	ldr	r5, [pc, #108]	@ (90011934 <xTaskPriorityInherit+0x74>)
900118c8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900118ca:	682a      	ldr	r2, [r5, #0]
900118cc:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900118ce:	4293      	cmp	r3, r2
900118d0:	d214      	bcs.n	900118fc <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900118d2:	6982      	ldr	r2, [r0, #24]
900118d4:	2a00      	cmp	r2, #0
900118d6:	db04      	blt.n	900118e2 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900118d8:	682a      	ldr	r2, [r5, #0]
900118da:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900118dc:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
900118e0:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
900118e2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900118e6:	4e14      	ldr	r6, [pc, #80]	@ (90011938 <xTaskPriorityInherit+0x78>)
900118e8:	6962      	ldr	r2, [r4, #20]
900118ea:	eb06 0383 	add.w	r3, r6, r3, lsl #2
900118ee:	429a      	cmp	r2, r3
900118f0:	d00c      	beq.n	9001190c <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900118f2:	682b      	ldr	r3, [r5, #0]
900118f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900118f6:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
900118f8:	2001      	movs	r0, #1
	}
900118fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
900118fc:	682b      	ldr	r3, [r5, #0]
900118fe:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90011900:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011902:	4298      	cmp	r0, r3
90011904:	bf2c      	ite	cs
90011906:	2000      	movcs	r0, #0
90011908:	2001      	movcc	r0, #1
	}
9001190a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001190c:	1d27      	adds	r7, r4, #4
9001190e:	4638      	mov	r0, r7
90011910:	f7fd ff10 	bl	9000f734 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011914:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011916:	4b09      	ldr	r3, [pc, #36]	@ (9001193c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011918:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001191a:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001191c:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001191e:	4290      	cmp	r0, r2
90011920:	d900      	bls.n	90011924 <xTaskPriorityInherit+0x64>
90011922:	6018      	str	r0, [r3, #0]
90011924:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011928:	4639      	mov	r1, r7
9001192a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9001192e:	f7fd fedb 	bl	9000f6e8 <vListInsertEnd>
90011932:	e7e1      	b.n	900118f8 <xTaskPriorityInherit+0x38>
90011934:	240232d0 	.word	0x240232d0
90011938:	24022e70 	.word	0x24022e70
9001193c:	24022df4 	.word	0x24022df4

90011940 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90011940:	b308      	cbz	r0, 90011986 <xTaskPriorityDisinherit+0x46>
	{
90011942:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90011944:	4b1d      	ldr	r3, [pc, #116]	@ (900119bc <xTaskPriorityDisinherit+0x7c>)
90011946:	681c      	ldr	r4, [r3, #0]
90011948:	4284      	cmp	r4, r0
9001194a:	d008      	beq.n	9001195e <xTaskPriorityDisinherit+0x1e>
9001194c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011950:	f383 8811 	msr	BASEPRI, r3
90011954:	f3bf 8f6f 	isb	sy
90011958:	f3bf 8f4f 	dsb	sy
9001195c:	e7fe      	b.n	9001195c <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9001195e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90011960:	b143      	cbz	r3, 90011974 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011962:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90011964:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011966:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
90011968:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9001196a:	4291      	cmp	r1, r2
9001196c:	d000      	beq.n	90011970 <xTaskPriorityDisinherit+0x30>
9001196e:	b163      	cbz	r3, 9001198a <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90011970:	2000      	movs	r0, #0
	}
90011972:	bd38      	pop	{r3, r4, r5, pc}
90011974:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011978:	f383 8811 	msr	BASEPRI, r3
9001197c:	f3bf 8f6f 	isb	sy
90011980:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011984:	e7fe      	b.n	90011984 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
90011986:	2000      	movs	r0, #0
	}
90011988:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001198a:	1d25      	adds	r5, r4, #4
9001198c:	4628      	mov	r0, r5
9001198e:	f7fd fed1 	bl	9000f734 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011992:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90011994:	4b0a      	ldr	r3, [pc, #40]	@ (900119c0 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011996:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9001199a:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001199c:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9001199e:	681a      	ldr	r2, [r3, #0]
900119a0:	4290      	cmp	r0, r2
900119a2:	d900      	bls.n	900119a6 <xTaskPriorityDisinherit+0x66>
900119a4:	6018      	str	r0, [r3, #0]
900119a6:	4b07      	ldr	r3, [pc, #28]	@ (900119c4 <xTaskPriorityDisinherit+0x84>)
900119a8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900119ac:	4629      	mov	r1, r5
900119ae:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900119b2:	f7fd fe99 	bl	9000f6e8 <vListInsertEnd>
					xReturn = pdTRUE;
900119b6:	2001      	movs	r0, #1
	}
900119b8:	bd38      	pop	{r3, r4, r5, pc}
900119ba:	bf00      	nop
900119bc:	240232d0 	.word	0x240232d0
900119c0:	24022df4 	.word	0x24022df4
900119c4:	24022e70 	.word	0x24022e70

900119c8 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
900119c8:	2800      	cmp	r0, #0
900119ca:	d03c      	beq.n	90011a46 <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
900119cc:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
900119ce:	b570      	push	{r4, r5, r6, lr}
900119d0:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
900119d2:	b14b      	cbz	r3, 900119e8 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
900119d4:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
900119d6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900119d8:	4281      	cmp	r1, r0
900119da:	bf38      	it	cc
900119dc:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
900119de:	2b01      	cmp	r3, #1
900119e0:	d101      	bne.n	900119e6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
900119e2:	428a      	cmp	r2, r1
900119e4:	d109      	bne.n	900119fa <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
900119e6:	bd70      	pop	{r4, r5, r6, pc}
900119e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900119ec:	f383 8811 	msr	BASEPRI, r3
900119f0:	f3bf 8f6f 	isb	sy
900119f4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900119f8:	e7fe      	b.n	900119f8 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
900119fa:	4b18      	ldr	r3, [pc, #96]	@ (90011a5c <vTaskPriorityDisinheritAfterTimeout+0x94>)
900119fc:	681b      	ldr	r3, [r3, #0]
900119fe:	42a3      	cmp	r3, r4
90011a00:	d022      	beq.n	90011a48 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011a02:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90011a04:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011a06:	2b00      	cmp	r3, #0
90011a08:	db02      	blt.n	90011a10 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011a0a:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90011a0e:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90011a10:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90011a14:	4d12      	ldr	r5, [pc, #72]	@ (90011a60 <vTaskPriorityDisinheritAfterTimeout+0x98>)
90011a16:	6961      	ldr	r1, [r4, #20]
90011a18:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90011a1c:	4299      	cmp	r1, r3
90011a1e:	d1e2      	bne.n	900119e6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011a20:	1d26      	adds	r6, r4, #4
90011a22:	4630      	mov	r0, r6
90011a24:	f7fd fe86 	bl	9000f734 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90011a28:	4b0e      	ldr	r3, [pc, #56]	@ (90011a64 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90011a2a:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011a2c:	681a      	ldr	r2, [r3, #0]
90011a2e:	4290      	cmp	r0, r2
90011a30:	d900      	bls.n	90011a34 <vTaskPriorityDisinheritAfterTimeout+0x6c>
90011a32:	6018      	str	r0, [r3, #0]
90011a34:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011a38:	4631      	mov	r1, r6
90011a3a:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90011a3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90011a42:	f7fd be51 	b.w	9000f6e8 <vListInsertEnd>
90011a46:	4770      	bx	lr
90011a48:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a4c:	f383 8811 	msr	BASEPRI, r3
90011a50:	f3bf 8f6f 	isb	sy
90011a54:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90011a58:	e7fe      	b.n	90011a58 <vTaskPriorityDisinheritAfterTimeout+0x90>
90011a5a:	bf00      	nop
90011a5c:	240232d0 	.word	0x240232d0
90011a60:	24022e70 	.word	0x24022e70
90011a64:	24022df4 	.word	0x24022df4

90011a68 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90011a68:	4b04      	ldr	r3, [pc, #16]	@ (90011a7c <pvTaskIncrementMutexHeldCount+0x14>)
90011a6a:	681a      	ldr	r2, [r3, #0]
90011a6c:	b11a      	cbz	r2, 90011a76 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
90011a6e:	6819      	ldr	r1, [r3, #0]
90011a70:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90011a72:	3201      	adds	r2, #1
90011a74:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90011a76:	6818      	ldr	r0, [r3, #0]
	}
90011a78:	4770      	bx	lr
90011a7a:	bf00      	nop
90011a7c:	240232d0 	.word	0x240232d0

90011a80 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90011a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011a84:	4e21      	ldr	r6, [pc, #132]	@ (90011b0c <prvSwitchTimerLists+0x8c>)
90011a86:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90011a88:	e00d      	b.n	90011aa6 <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011a8a:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011a8c:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011a8e:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011a90:	1d25      	adds	r5, r4, #4
90011a92:	4628      	mov	r0, r5
90011a94:	f7fd fe4e 	bl	9000f734 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90011a98:	6a23      	ldr	r3, [r4, #32]
90011a9a:	4620      	mov	r0, r4
90011a9c:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90011a9e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90011aa2:	075b      	lsls	r3, r3, #29
90011aa4:	d40a      	bmi.n	90011abc <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90011aa6:	6833      	ldr	r3, [r6, #0]
90011aa8:	681a      	ldr	r2, [r3, #0]
90011aaa:	2a00      	cmp	r2, #0
90011aac:	d1ed      	bne.n	90011a8a <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90011aae:	4a18      	ldr	r2, [pc, #96]	@ (90011b10 <prvSwitchTimerLists+0x90>)
90011ab0:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90011ab2:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90011ab4:	6031      	str	r1, [r6, #0]
}
90011ab6:	b004      	add	sp, #16
90011ab8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90011abc:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011abe:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
90011ac0:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 90011b14 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90011ac4:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90011ac6:	429f      	cmp	r7, r3
90011ac8:	d205      	bcs.n	90011ad6 <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011aca:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90011acc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011ace:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011ad0:	f7fd fe18 	bl	9000f704 <vListInsert>
90011ad4:	e7e7      	b.n	90011aa6 <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
90011ad6:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
90011ada:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
90011adc:	b16b      	cbz	r3, 90011afa <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90011ade:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
90011ae0:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011ae4:	f7ff fedc 	bl	900118a0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90011ae8:	462b      	mov	r3, r5
90011aea:	462a      	mov	r2, r5
90011aec:	4669      	mov	r1, sp
90011aee:	f8d8 0000 	ldr.w	r0, [r8]
90011af2:	f7fe f98b 	bl	9000fe0c <xQueueGenericSend>
				configASSERT( xResult );
90011af6:	2800      	cmp	r0, #0
90011af8:	d1d5      	bne.n	90011aa6 <prvSwitchTimerLists+0x26>
90011afa:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011afe:	f383 8811 	msr	BASEPRI, r3
90011b02:	f3bf 8f6f 	isb	sy
90011b06:	f3bf 8f4f 	dsb	sy
90011b0a:	e7fe      	b.n	90011b0a <prvSwitchTimerLists+0x8a>
90011b0c:	240233d4 	.word	0x240233d4
90011b10:	240233d0 	.word	0x240233d0
90011b14:	240233cc 	.word	0x240233cc

90011b18 <prvTimerTask>:
{
90011b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011b1c:	4e9f      	ldr	r6, [pc, #636]	@ (90011d9c <prvTimerTask+0x284>)
90011b1e:	b089      	sub	sp, #36	@ 0x24
90011b20:	4d9f      	ldr	r5, [pc, #636]	@ (90011da0 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90011b22:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
90011b26:	4c9f      	ldr	r4, [pc, #636]	@ (90011da4 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90011b28:	6833      	ldr	r3, [r6, #0]
90011b2a:	681f      	ldr	r7, [r3, #0]
90011b2c:	2f00      	cmp	r7, #0
90011b2e:	f000 80b2 	beq.w	90011c96 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011b32:	68db      	ldr	r3, [r3, #12]
90011b34:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
90011b36:	f7ff fc7f 	bl	90011438 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90011b3a:	f7ff fc95 	bl	90011468 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90011b3e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90011b40:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90011b42:	4298      	cmp	r0, r3
90011b44:	f0c0 80af 	bcc.w	90011ca6 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90011b48:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
90011b4a:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90011b4c:	f200 80d0 	bhi.w	90011cf0 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90011b50:	f7ff fc7a 	bl	90011448 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b54:	6833      	ldr	r3, [r6, #0]
90011b56:	68db      	ldr	r3, [r3, #12]
90011b58:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011b5c:	f10b 0804 	add.w	r8, fp, #4
90011b60:	4640      	mov	r0, r8
90011b62:	f7fd fde7 	bl	9000f734 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90011b66:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
90011b6a:	0758      	lsls	r0, r3, #29
90011b6c:	f100 80d0 	bmi.w	90011d10 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90011b70:	f023 0301 	bic.w	r3, r3, #1
90011b74:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90011b78:	f8db 3020 	ldr.w	r3, [fp, #32]
90011b7c:	4658      	mov	r0, fp
90011b7e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90011b80:	2200      	movs	r2, #0
90011b82:	4669      	mov	r1, sp
90011b84:	6820      	ldr	r0, [r4, #0]
90011b86:	f7fe fb7f 	bl	90010288 <xQueueReceive>
90011b8a:	2800      	cmp	r0, #0
90011b8c:	d0cc      	beq.n	90011b28 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90011b8e:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90011b90:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90011b92:	2b00      	cmp	r3, #0
90011b94:	db77      	blt.n	90011c86 <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90011b96:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90011b98:	697b      	ldr	r3, [r7, #20]
90011b9a:	b113      	cbz	r3, 90011ba2 <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011b9c:	1d38      	adds	r0, r7, #4
90011b9e:	f7fd fdc9 	bl	9000f734 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90011ba2:	f7ff fc61 	bl	90011468 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90011ba6:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90011ba8:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
90011baa:	4298      	cmp	r0, r3
90011bac:	f0c0 8082 	bcc.w	90011cb4 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90011bb0:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90011bb2:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
90011bb6:	2b09      	cmp	r3, #9
90011bb8:	d8e2      	bhi.n	90011b80 <prvTimerTask+0x68>
90011bba:	e8df f003 	tbb	[pc, r3]
90011bbe:	0505      	.short	0x0505
90011bc0:	5b3e5405 	.word	0x5b3e5405
90011bc4:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011bc8:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90011bcc:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011bce:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011bd2:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011bd4:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90011bd8:	69ba      	ldr	r2, [r7, #24]
90011bda:	1899      	adds	r1, r3, r2
90011bdc:	bf2c      	ite	cs
90011bde:	2001      	movcs	r0, #1
90011be0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90011be2:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90011be4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90011be6:	f200 8085 	bhi.w	90011cf4 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011bea:	ebab 0303 	sub.w	r3, fp, r3
90011bee:	429a      	cmp	r2, r3
90011bf0:	f200 80be 	bhi.w	90011d70 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90011bf4:	6a3b      	ldr	r3, [r7, #32]
90011bf6:	4638      	mov	r0, r7
90011bf8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90011bfa:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90011bfe:	0759      	lsls	r1, r3, #29
90011c00:	d5be      	bpl.n	90011b80 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90011c02:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90011c04:	9b01      	ldr	r3, [sp, #4]
90011c06:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
90011c08:	b171      	cbz	r1, 90011c28 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90011c0a:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90011c0c:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90011c10:	2700      	movs	r7, #0
90011c12:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011c14:	f7ff fe44 	bl	900118a0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90011c18:	463b      	mov	r3, r7
90011c1a:	463a      	mov	r2, r7
90011c1c:	a904      	add	r1, sp, #16
90011c1e:	6820      	ldr	r0, [r4, #0]
90011c20:	f7fe f8f4 	bl	9000fe0c <xQueueGenericSend>
							configASSERT( xResult );
90011c24:	2800      	cmp	r0, #0
90011c26:	d1ab      	bne.n	90011b80 <prvTimerTask+0x68>
90011c28:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011c2c:	f383 8811 	msr	BASEPRI, r3
90011c30:	f3bf 8f6f 	isb	sy
90011c34:	f3bf 8f4f 	dsb	sy
90011c38:	e7fe      	b.n	90011c38 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011c3a:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90011c3e:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011c40:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90011c44:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011c46:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90011c4a:	2b00      	cmp	r3, #0
90011c4c:	f000 809c 	beq.w	90011d88 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90011c50:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011c52:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011c54:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90011c56:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90011c58:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90011c5a:	d855      	bhi.n	90011d08 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011c5c:	4b52      	ldr	r3, [pc, #328]	@ (90011da8 <prvTimerTask+0x290>)
90011c5e:	6818      	ldr	r0, [r3, #0]
90011c60:	f7fd fd50 	bl	9000f704 <vListInsert>
90011c64:	e78c      	b.n	90011b80 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90011c66:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90011c6a:	f023 0301 	bic.w	r3, r3, #1
90011c6e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
90011c72:	e785      	b.n	90011b80 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90011c74:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90011c78:	079a      	lsls	r2, r3, #30
90011c7a:	d570      	bpl.n	90011d5e <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90011c7c:	f023 0301 	bic.w	r3, r3, #1
90011c80:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
90011c84:	e77c      	b.n	90011b80 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90011c86:	9b01      	ldr	r3, [sp, #4]
90011c88:	9903      	ldr	r1, [sp, #12]
90011c8a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90011c8c:	9b00      	ldr	r3, [sp, #0]
90011c8e:	2b00      	cmp	r3, #0
90011c90:	f6ff af76 	blt.w	90011b80 <prvTimerTask+0x68>
90011c94:	e77f      	b.n	90011b96 <prvTimerTask+0x7e>
	vTaskSuspendAll();
90011c96:	f7ff fbcf 	bl	90011438 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90011c9a:	f7ff fbe5 	bl	90011468 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90011c9e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90011ca0:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90011ca2:	4298      	cmp	r0, r3
90011ca4:	d209      	bcs.n	90011cba <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
90011ca6:	f7ff feeb 	bl	90011a80 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90011caa:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90011cae:	f7ff fbcb 	bl	90011448 <xTaskResumeAll>
90011cb2:	e765      	b.n	90011b80 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90011cb4:	f7ff fee4 	bl	90011a80 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90011cb8:	e77a      	b.n	90011bb0 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90011cba:	4b3b      	ldr	r3, [pc, #236]	@ (90011da8 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90011cbc:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90011cc0:	681b      	ldr	r3, [r3, #0]
90011cc2:	681a      	ldr	r2, [r3, #0]
90011cc4:	fab2 f282 	clz	r2, r2
90011cc8:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90011cca:	eba7 010a 	sub.w	r1, r7, sl
90011cce:	6820      	ldr	r0, [r4, #0]
90011cd0:	f7fe feb8 	bl	90010a44 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90011cd4:	f7ff fbb8 	bl	90011448 <xTaskResumeAll>
90011cd8:	2800      	cmp	r0, #0
90011cda:	f47f af51 	bne.w	90011b80 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90011cde:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
90011ce2:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
90011ce6:	f3bf 8f4f 	dsb	sy
90011cea:	f3bf 8f6f 	isb	sy
90011cee:	e747      	b.n	90011b80 <prvTimerTask+0x68>
90011cf0:	2200      	movs	r2, #0
90011cf2:	e7ea      	b.n	90011cca <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90011cf4:	455b      	cmp	r3, fp
90011cf6:	d902      	bls.n	90011cfe <prvTimerTask+0x1e6>
90011cf8:	2800      	cmp	r0, #0
90011cfa:	f43f af7b 	beq.w	90011bf4 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011cfe:	1d39      	adds	r1, r7, #4
90011d00:	6830      	ldr	r0, [r6, #0]
90011d02:	f7fd fcff 	bl	9000f704 <vListInsert>
	return xProcessTimerNow;
90011d06:	e73b      	b.n	90011b80 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011d08:	6830      	ldr	r0, [r6, #0]
90011d0a:	f7fd fcfb 	bl	9000f704 <vListInsert>
90011d0e:	e737      	b.n	90011b80 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90011d10:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011d14:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90011d18:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
90011d1a:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90011d1c:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90011d20:	d321      	bcc.n	90011d66 <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011d22:	ebaa 0a07 	sub.w	sl, sl, r7
90011d26:	4550      	cmp	r0, sl
90011d28:	d828      	bhi.n	90011d7c <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90011d2a:	6823      	ldr	r3, [r4, #0]
90011d2c:	b173      	cbz	r3, 90011d4c <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90011d2e:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
90011d32:	2700      	movs	r7, #0
90011d34:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011d36:	f7ff fdb3 	bl	900118a0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90011d3a:	463b      	mov	r3, r7
90011d3c:	463a      	mov	r2, r7
90011d3e:	a904      	add	r1, sp, #16
90011d40:	6820      	ldr	r0, [r4, #0]
90011d42:	f7fe f863 	bl	9000fe0c <xQueueGenericSend>
			configASSERT( xResult );
90011d46:	2800      	cmp	r0, #0
90011d48:	f47f af16 	bne.w	90011b78 <prvTimerTask+0x60>
90011d4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d50:	f383 8811 	msr	BASEPRI, r3
90011d54:	f3bf 8f6f 	isb	sy
90011d58:	f3bf 8f4f 	dsb	sy
90011d5c:	e7fe      	b.n	90011d5c <prvTimerTask+0x244>
							vPortFree( pxTimer );
90011d5e:	4638      	mov	r0, r7
90011d60:	f7fd fc4c 	bl	9000f5fc <vPortFree>
90011d64:	e70c      	b.n	90011b80 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011d66:	4641      	mov	r1, r8
90011d68:	6830      	ldr	r0, [r6, #0]
90011d6a:	f7fd fccb 	bl	9000f704 <vListInsert>
	return xProcessTimerNow;
90011d6e:	e703      	b.n	90011b78 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011d70:	4b0d      	ldr	r3, [pc, #52]	@ (90011da8 <prvTimerTask+0x290>)
90011d72:	1d39      	adds	r1, r7, #4
90011d74:	6818      	ldr	r0, [r3, #0]
90011d76:	f7fd fcc5 	bl	9000f704 <vListInsert>
	return xProcessTimerNow;
90011d7a:	e701      	b.n	90011b80 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011d7c:	4b0a      	ldr	r3, [pc, #40]	@ (90011da8 <prvTimerTask+0x290>)
90011d7e:	4641      	mov	r1, r8
90011d80:	6818      	ldr	r0, [r3, #0]
90011d82:	f7fd fcbf 	bl	9000f704 <vListInsert>
	return xProcessTimerNow;
90011d86:	e6f7      	b.n	90011b78 <prvTimerTask+0x60>
90011d88:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d8c:	f383 8811 	msr	BASEPRI, r3
90011d90:	f3bf 8f6f 	isb	sy
90011d94:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90011d98:	e7fe      	b.n	90011d98 <prvTimerTask+0x280>
90011d9a:	bf00      	nop
90011d9c:	240233d4 	.word	0x240233d4
90011da0:	240233c4 	.word	0x240233c4
90011da4:	240233cc 	.word	0x240233cc
90011da8:	240233d0 	.word	0x240233d0

90011dac <xTimerCreateTimerTask>:
{
90011dac:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90011dae:	4c23      	ldr	r4, [pc, #140]	@ (90011e3c <xTimerCreateTimerTask+0x90>)
{
90011db0:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
90011db2:	f7fd fd3f 	bl	9000f834 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90011db6:	6825      	ldr	r5, [r4, #0]
90011db8:	b335      	cbz	r5, 90011e08 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90011dba:	f7fd fd5d 	bl	9000f878 <vPortExitCritical>
	if( xTimerQueue != NULL )
90011dbe:	6823      	ldr	r3, [r4, #0]
90011dc0:	b1cb      	cbz	r3, 90011df6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90011dc2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011dc4:	aa07      	add	r2, sp, #28
90011dc6:	a906      	add	r1, sp, #24
90011dc8:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011dca:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90011dcc:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011dd0:	f7fd fb48 	bl	9000f464 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011dd4:	4623      	mov	r3, r4
90011dd6:	9a07      	ldr	r2, [sp, #28]
90011dd8:	9500      	str	r5, [sp, #0]
90011dda:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90011dde:	e9cd 1001 	strd	r1, r0, [sp, #4]
90011de2:	4917      	ldr	r1, [pc, #92]	@ (90011e40 <xTimerCreateTimerTask+0x94>)
90011de4:	4817      	ldr	r0, [pc, #92]	@ (90011e44 <xTimerCreateTimerTask+0x98>)
90011de6:	f7ff f8ab 	bl	90010f40 <xTaskCreateStatic>
90011dea:	4b17      	ldr	r3, [pc, #92]	@ (90011e48 <xTimerCreateTimerTask+0x9c>)
90011dec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90011dee:	b110      	cbz	r0, 90011df6 <xTimerCreateTimerTask+0x4a>
}
90011df0:	2001      	movs	r0, #1
90011df2:	b009      	add	sp, #36	@ 0x24
90011df4:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011df6:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011dfa:	f383 8811 	msr	BASEPRI, r3
90011dfe:	f3bf 8f6f 	isb	sy
90011e02:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90011e06:	e7fe      	b.n	90011e06 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90011e08:	4f10      	ldr	r7, [pc, #64]	@ (90011e4c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90011e0a:	4e11      	ldr	r6, [pc, #68]	@ (90011e50 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90011e0c:	4638      	mov	r0, r7
90011e0e:	f7fd fc5b 	bl	9000f6c8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90011e12:	4630      	mov	r0, r6
90011e14:	f7fd fc58 	bl	9000f6c8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90011e18:	4a0e      	ldr	r2, [pc, #56]	@ (90011e54 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011e1a:	9500      	str	r5, [sp, #0]
90011e1c:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90011e1e:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011e20:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90011e22:	4a0d      	ldr	r2, [pc, #52]	@ (90011e58 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011e24:	4b0d      	ldr	r3, [pc, #52]	@ (90011e5c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90011e26:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011e28:	4a0d      	ldr	r2, [pc, #52]	@ (90011e60 <xTimerCreateTimerTask+0xb4>)
90011e2a:	f7fd fe9b 	bl	9000fb64 <xQueueGenericCreateStatic>
90011e2e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90011e30:	2800      	cmp	r0, #0
90011e32:	d0c2      	beq.n	90011dba <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90011e34:	490b      	ldr	r1, [pc, #44]	@ (90011e64 <xTimerCreateTimerTask+0xb8>)
90011e36:	f7fe fddd 	bl	900109f4 <vQueueAddToRegistry>
90011e3a:	e7be      	b.n	90011dba <xTimerCreateTimerTask+0xe>
90011e3c:	240233cc 	.word	0x240233cc
90011e40:	9002e214 	.word	0x9002e214
90011e44:	90011b19 	.word	0x90011b19
90011e48:	240233c8 	.word	0x240233c8
90011e4c:	240233ec 	.word	0x240233ec
90011e50:	240233d8 	.word	0x240233d8
90011e54:	240233d4 	.word	0x240233d4
90011e58:	240233d0 	.word	0x240233d0
90011e5c:	240232d4 	.word	0x240232d4
90011e60:	24023324 	.word	0x24023324
90011e64:	9002e20c 	.word	0x9002e20c

90011e68 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90011e68:	8880      	ldrh	r0, [r0, #4]
90011e6a:	4770      	bx	lr

90011e6c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90011e6c:	b570      	push	{r4, r5, r6, lr}
90011e6e:	6803      	ldr	r3, [r0, #0]
90011e70:	460c      	mov	r4, r1
90011e72:	2100      	movs	r1, #0
90011e74:	4605      	mov	r5, r0
90011e76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011e78:	4798      	blx	r3
90011e7a:	4606      	mov	r6, r0
90011e7c:	682b      	ldr	r3, [r5, #0]
90011e7e:	4628      	mov	r0, r5
90011e80:	1ba4      	subs	r4, r4, r6
90011e82:	6a1b      	ldr	r3, [r3, #32]
90011e84:	b2a4      	uxth	r4, r4
90011e86:	4798      	blx	r3
90011e88:	fbb4 f0f0 	udiv	r0, r4, r0
90011e8c:	bd70      	pop	{r4, r5, r6, pc}

90011e8e <_ZN8touchgfx17AbstractPartition5clearEv>:
90011e8e:	2300      	movs	r3, #0
90011e90:	8083      	strh	r3, [r0, #4]
90011e92:	4770      	bx	lr

90011e94 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90011e94:	b510      	push	{r4, lr}
90011e96:	6803      	ldr	r3, [r0, #0]
90011e98:	4604      	mov	r4, r0
90011e9a:	8881      	ldrh	r1, [r0, #4]
90011e9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011e9e:	4798      	blx	r3
90011ea0:	88a3      	ldrh	r3, [r4, #4]
90011ea2:	3301      	adds	r3, #1
90011ea4:	80a3      	strh	r3, [r4, #4]
90011ea6:	bd10      	pop	{r4, pc}

90011ea8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90011ea8:	6803      	ldr	r3, [r0, #0]
90011eaa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011eac:	4718      	bx	r3

90011eae <_ZN8touchgfx17AbstractPartitionD1Ev>:
90011eae:	4770      	bx	lr

90011eb0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90011eb0:	4a02      	ldr	r2, [pc, #8]	@ (90011ebc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90011eb2:	6002      	str	r2, [r0, #0]
90011eb4:	2200      	movs	r2, #0
90011eb6:	8082      	strh	r2, [r0, #4]
90011eb8:	4770      	bx	lr
90011eba:	bf00      	nop
90011ebc:	9002e224 	.word	0x9002e224

90011ec0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90011ec0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011ec2:	2000      	movs	r0, #0
90011ec4:	b12b      	cbz	r3, 90011ed2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90011ec6:	b920      	cbnz	r0, 90011ed2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90011ec8:	1a5a      	subs	r2, r3, r1
90011eca:	699b      	ldr	r3, [r3, #24]
90011ecc:	4250      	negs	r0, r2
90011ece:	4150      	adcs	r0, r2
90011ed0:	e7f8      	b.n	90011ec4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90011ed2:	4770      	bx	lr

90011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90011ed4:	2300      	movs	r3, #0
90011ed6:	6148      	str	r0, [r1, #20]
90011ed8:	618b      	str	r3, [r1, #24]
90011eda:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011edc:	b913      	cbnz	r3, 90011ee4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90011ede:	6281      	str	r1, [r0, #40]	@ 0x28
90011ee0:	4770      	bx	lr
90011ee2:	4613      	mov	r3, r2
90011ee4:	699a      	ldr	r2, [r3, #24]
90011ee6:	2a00      	cmp	r2, #0
90011ee8:	d1fb      	bne.n	90011ee2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90011eea:	6199      	str	r1, [r3, #24]
90011eec:	4770      	bx	lr

90011eee <_ZN8touchgfx9Container9removeAllEv>:
90011eee:	2200      	movs	r2, #0
90011ef0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011ef2:	b123      	cbz	r3, 90011efe <_ZN8touchgfx9Container9removeAllEv+0x10>
90011ef4:	6999      	ldr	r1, [r3, #24]
90011ef6:	6281      	str	r1, [r0, #40]	@ 0x28
90011ef8:	e9c3 2205 	strd	r2, r2, [r3, #20]
90011efc:	e7f8      	b.n	90011ef0 <_ZN8touchgfx9Container9removeAllEv+0x2>
90011efe:	4770      	bx	lr

90011f00 <_ZN8touchgfx9Container6unlinkEv>:
90011f00:	2300      	movs	r3, #0
90011f02:	6283      	str	r3, [r0, #40]	@ 0x28
90011f04:	4770      	bx	lr

90011f06 <_ZNK8touchgfx9Container12getSolidRectEv>:
90011f06:	2200      	movs	r2, #0
90011f08:	8002      	strh	r2, [r0, #0]
90011f0a:	8042      	strh	r2, [r0, #2]
90011f0c:	8082      	strh	r2, [r0, #4]
90011f0e:	80c2      	strh	r2, [r0, #6]
90011f10:	4770      	bx	lr

90011f12 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90011f12:	b570      	push	{r4, r5, r6, lr}
90011f14:	460d      	mov	r5, r1
90011f16:	4616      	mov	r6, r2
90011f18:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011f1a:	b13c      	cbz	r4, 90011f2c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90011f1c:	6823      	ldr	r3, [r4, #0]
90011f1e:	4620      	mov	r0, r4
90011f20:	4632      	mov	r2, r6
90011f22:	4629      	mov	r1, r5
90011f24:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011f26:	4798      	blx	r3
90011f28:	69a4      	ldr	r4, [r4, #24]
90011f2a:	e7f6      	b.n	90011f1a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90011f2c:	bd70      	pop	{r4, r5, r6, pc}

90011f2e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90011f2e:	b538      	push	{r3, r4, r5, lr}
90011f30:	460d      	mov	r5, r1
90011f32:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011f34:	b134      	cbz	r4, 90011f44 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90011f36:	682b      	ldr	r3, [r5, #0]
90011f38:	4621      	mov	r1, r4
90011f3a:	4628      	mov	r0, r5
90011f3c:	689b      	ldr	r3, [r3, #8]
90011f3e:	4798      	blx	r3
90011f40:	69a4      	ldr	r4, [r4, #24]
90011f42:	e7f7      	b.n	90011f34 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90011f44:	bd38      	pop	{r3, r4, r5, pc}

90011f46 <_ZN8touchgfx9ContainerD1Ev>:
90011f46:	4770      	bx	lr

90011f48 <_ZN8touchgfx9ContainerD0Ev>:
90011f48:	b510      	push	{r4, lr}
90011f4a:	4604      	mov	r4, r0
90011f4c:	212c      	movs	r1, #44	@ 0x2c
90011f4e:	f018 f85d 	bl	9002a00c <_ZdlPvj>
90011f52:	4620      	mov	r0, r4
90011f54:	bd10      	pop	{r4, pc}

90011f56 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90011f56:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011f58:	b19b      	cbz	r3, 90011f82 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90011f5a:	428b      	cmp	r3, r1
90011f5c:	d109      	bne.n	90011f72 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90011f5e:	699a      	ldr	r2, [r3, #24]
90011f60:	2100      	movs	r1, #0
90011f62:	6159      	str	r1, [r3, #20]
90011f64:	6282      	str	r2, [r0, #40]	@ 0x28
90011f66:	b902      	cbnz	r2, 90011f6a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90011f68:	4770      	bx	lr
90011f6a:	6199      	str	r1, [r3, #24]
90011f6c:	4770      	bx	lr
90011f6e:	4613      	mov	r3, r2
90011f70:	b13a      	cbz	r2, 90011f82 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90011f72:	699a      	ldr	r2, [r3, #24]
90011f74:	428a      	cmp	r2, r1
90011f76:	d1fa      	bne.n	90011f6e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90011f78:	698a      	ldr	r2, [r1, #24]
90011f7a:	619a      	str	r2, [r3, #24]
90011f7c:	2300      	movs	r3, #0
90011f7e:	e9c1 3305 	strd	r3, r3, [r1, #20]
90011f82:	4770      	bx	lr

90011f84 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90011f84:	b410      	push	{r4}
90011f86:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011f88:	4604      	mov	r4, r0
90011f8a:	b92b      	cbnz	r3, 90011f98 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90011f8c:	6803      	ldr	r3, [r0, #0]
90011f8e:	4611      	mov	r1, r2
90011f90:	f85d 4b04 	ldr.w	r4, [sp], #4
90011f94:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90011f96:	4718      	bx	r3
90011f98:	b941      	cbnz	r1, 90011fac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90011f9a:	6193      	str	r3, [r2, #24]
90011f9c:	6282      	str	r2, [r0, #40]	@ 0x28
90011f9e:	6154      	str	r4, [r2, #20]
90011fa0:	f85d 4b04 	ldr.w	r4, [sp], #4
90011fa4:	4770      	bx	lr
90011fa6:	4603      	mov	r3, r0
90011fa8:	2800      	cmp	r0, #0
90011faa:	d0f9      	beq.n	90011fa0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90011fac:	4299      	cmp	r1, r3
90011fae:	6998      	ldr	r0, [r3, #24]
90011fb0:	d1f9      	bne.n	90011fa6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90011fb2:	6190      	str	r0, [r2, #24]
90011fb4:	618a      	str	r2, [r1, #24]
90011fb6:	e7f2      	b.n	90011f9e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90011fb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90011fb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011fbc:	461f      	mov	r7, r3
90011fbe:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90011fc2:	460d      	mov	r5, r1
90011fc4:	4616      	mov	r6, r2
90011fc6:	b103      	cbz	r3, 90011fca <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90011fc8:	6038      	str	r0, [r7, #0]
90011fca:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011fcc:	b314      	cbz	r4, 90012014 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90011fce:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90011fd2:	b1eb      	cbz	r3, 90012010 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011fd4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90011fd8:	428d      	cmp	r5, r1
90011fda:	db19      	blt.n	90012010 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011fdc:	b289      	uxth	r1, r1
90011fde:	8923      	ldrh	r3, [r4, #8]
90011fe0:	440b      	add	r3, r1
90011fe2:	b21b      	sxth	r3, r3
90011fe4:	429d      	cmp	r5, r3
90011fe6:	da13      	bge.n	90012010 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011fe8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011fec:	4296      	cmp	r6, r2
90011fee:	db0f      	blt.n	90012010 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011ff0:	b292      	uxth	r2, r2
90011ff2:	8963      	ldrh	r3, [r4, #10]
90011ff4:	4413      	add	r3, r2
90011ff6:	b21b      	sxth	r3, r3
90011ff8:	429e      	cmp	r6, r3
90011ffa:	da09      	bge.n	90012010 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011ffc:	6823      	ldr	r3, [r4, #0]
90011ffe:	1ab2      	subs	r2, r6, r2
90012000:	1a69      	subs	r1, r5, r1
90012002:	4620      	mov	r0, r4
90012004:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90012008:	b212      	sxth	r2, r2
9001200a:	463b      	mov	r3, r7
9001200c:	b209      	sxth	r1, r1
9001200e:	47c0      	blx	r8
90012010:	69a4      	ldr	r4, [r4, #24]
90012012:	e7db      	b.n	90011fcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90012014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012018 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90012018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001201c:	4c6d      	ldr	r4, [pc, #436]	@ (900121d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9001201e:	b0a1      	sub	sp, #132	@ 0x84
90012020:	4606      	mov	r6, r0
90012022:	6824      	ldr	r4, [r4, #0]
90012024:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90012026:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
9001202a:	2400      	movs	r4, #0
9001202c:	9303      	str	r3, [sp, #12]
9001202e:	802c      	strh	r4, [r5, #0]
90012030:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
90012032:	802c      	strh	r4, [r5, #0]
90012034:	601c      	str	r4, [r3, #0]
90012036:	e9cd 1201 	strd	r1, r2, [sp, #4]
9001203a:	f7ff ffbd 	bl	90011fb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9001203e:	f1b9 0f03 	cmp.w	r9, #3
90012042:	f340 80c1 	ble.w	900121c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90012046:	4631      	mov	r1, r6
90012048:	a80c      	add	r0, sp, #48	@ 0x30
9001204a:	f007 fb15 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001204e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90012052:	9306      	str	r3, [sp, #24]
90012054:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90012058:	9307      	str	r3, [sp, #28]
9001205a:	9b03      	ldr	r3, [sp, #12]
9001205c:	f8d3 a000 	ldr.w	sl, [r3]
90012060:	f1ba 0f00 	cmp.w	sl, #0
90012064:	f000 80b3 	beq.w	900121ce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90012068:	4651      	mov	r1, sl
9001206a:	a810      	add	r0, sp, #64	@ 0x40
9001206c:	f007 fb04 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012070:	2002      	movs	r0, #2
90012072:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90012076:	9b01      	ldr	r3, [sp, #4]
90012078:	9a06      	ldr	r2, [sp, #24]
9001207a:	fb91 f1f0 	sdiv	r1, r1, r0
9001207e:	189d      	adds	r5, r3, r2
90012080:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90012084:	9a07      	ldr	r2, [sp, #28]
90012086:	4419      	add	r1, r3
90012088:	9b02      	ldr	r3, [sp, #8]
9001208a:	4413      	add	r3, r2
9001208c:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90012090:	1a6d      	subs	r5, r5, r1
90012092:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90012096:	fb92 f2f0 	sdiv	r2, r2, r0
9001209a:	440a      	add	r2, r1
9001209c:	1a9b      	subs	r3, r3, r2
9001209e:	435b      	muls	r3, r3
900120a0:	fb05 3505 	mla	r5, r5, r5, r3
900120a4:	4f4c      	ldr	r7, [pc, #304]	@ (900121d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
900120a6:	ac10      	add	r4, sp, #64	@ 0x40
900120a8:	f1b9 0f0c 	cmp.w	r9, #12
900120ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900120ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900120b0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900120b2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900120b4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900120b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900120b8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
900120bc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
900120c0:	f04f 0303 	mov.w	r3, #3
900120c4:	bfd8      	it	le
900120c6:	f109 32ff 	addle.w	r2, r9, #4294967295	@ 0xffffffff
900120ca:	f04f 0400 	mov.w	r4, #0
900120ce:	f8cd 9000 	str.w	r9, [sp]
900120d2:	bfcc      	ite	gt
900120d4:	4698      	movgt	r8, r3
900120d6:	fb92 f8f3 	sdivle	r8, r2, r3
900120da:	1c63      	adds	r3, r4, #1
900120dc:	aa10      	add	r2, sp, #64	@ 0x40
900120de:	f004 0401 	and.w	r4, r4, #1
900120e2:	f04f 0b00 	mov.w	fp, #0
900120e6:	9308      	str	r3, [sp, #32]
900120e8:	9b00      	ldr	r3, [sp, #0]
900120ea:	eb02 1444 	add.w	r4, r2, r4, lsl #5
900120ee:	fb93 f3f8 	sdiv	r3, r3, r8
900120f2:	3404      	adds	r4, #4
900120f4:	b29b      	uxth	r3, r3
900120f6:	9304      	str	r3, [sp, #16]
900120f8:	9a04      	ldr	r2, [sp, #16]
900120fa:	f854 3c04 	ldr.w	r3, [r4, #-4]
900120fe:	fb13 f302 	smulbb	r3, r3, r2
90012102:	9a01      	ldr	r2, [sp, #4]
90012104:	b29b      	uxth	r3, r3
90012106:	1899      	adds	r1, r3, r2
90012108:	9305      	str	r3, [sp, #20]
9001210a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9001210e:	b209      	sxth	r1, r1
90012110:	4299      	cmp	r1, r3
90012112:	db4d      	blt.n	900121b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012114:	8932      	ldrh	r2, [r6, #8]
90012116:	4413      	add	r3, r2
90012118:	b21b      	sxth	r3, r3
9001211a:	4299      	cmp	r1, r3
9001211c:	da48      	bge.n	900121b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001211e:	9b04      	ldr	r3, [sp, #16]
90012120:	6827      	ldr	r7, [r4, #0]
90012122:	fb17 f703 	smulbb	r7, r7, r3
90012126:	9b02      	ldr	r3, [sp, #8]
90012128:	b2bf      	uxth	r7, r7
9001212a:	18fa      	adds	r2, r7, r3
9001212c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90012130:	b212      	sxth	r2, r2
90012132:	429a      	cmp	r2, r3
90012134:	db3c      	blt.n	900121b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012136:	8970      	ldrh	r0, [r6, #10]
90012138:	4403      	add	r3, r0
9001213a:	b21b      	sxth	r3, r3
9001213c:	429a      	cmp	r2, r3
9001213e:	da37      	bge.n	900121b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012140:	2300      	movs	r3, #0
90012142:	4630      	mov	r0, r6
90012144:	930b      	str	r3, [sp, #44]	@ 0x2c
90012146:	ab0b      	add	r3, sp, #44	@ 0x2c
90012148:	f7ff ff36 	bl	90011fb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9001214c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001214e:	b37a      	cbz	r2, 900121b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012150:	4552      	cmp	r2, sl
90012152:	d02d      	beq.n	900121b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012154:	4611      	mov	r1, r2
90012156:	a80e      	add	r0, sp, #56	@ 0x38
90012158:	9209      	str	r2, [sp, #36]	@ 0x24
9001215a:	f007 fa8d 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001215e:	f04f 0e02 	mov.w	lr, #2
90012162:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90012166:	9a06      	ldr	r2, [sp, #24]
90012168:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
9001216c:	9b01      	ldr	r3, [sp, #4]
9001216e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
90012172:	4413      	add	r3, r2
90012174:	9a07      	ldr	r2, [sp, #28]
90012176:	fb91 f1fe 	sdiv	r1, r1, lr
9001217a:	fb9c fcfe 	sdiv	ip, ip, lr
9001217e:	4401      	add	r1, r0
90012180:	1a58      	subs	r0, r3, r1
90012182:	9b02      	ldr	r3, [sp, #8]
90012184:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90012188:	4413      	add	r3, r2
9001218a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001218c:	448c      	add	ip, r1
9001218e:	eba3 030c 	sub.w	r3, r3, ip
90012192:	435b      	muls	r3, r3
90012194:	fb00 3300 	mla	r3, r0, r0, r3
90012198:	42ab      	cmp	r3, r5
9001219a:	d208      	bcs.n	900121ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9001219c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001219e:	461d      	mov	r5, r3
900121a0:	9803      	ldr	r0, [sp, #12]
900121a2:	6001      	str	r1, [r0, #0]
900121a4:	992a      	ldr	r1, [sp, #168]	@ 0xa8
900121a6:	9805      	ldr	r0, [sp, #20]
900121a8:	8008      	strh	r0, [r1, #0]
900121aa:	992b      	ldr	r1, [sp, #172]	@ 0xac
900121ac:	800f      	strh	r7, [r1, #0]
900121ae:	4692      	mov	sl, r2
900121b0:	f10b 0b01 	add.w	fp, fp, #1
900121b4:	3408      	adds	r4, #8
900121b6:	f1bb 0f04 	cmp.w	fp, #4
900121ba:	d19d      	bne.n	900120f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
900121bc:	9b00      	ldr	r3, [sp, #0]
900121be:	9c08      	ldr	r4, [sp, #32]
900121c0:	444b      	add	r3, r9
900121c2:	4544      	cmp	r4, r8
900121c4:	9300      	str	r3, [sp, #0]
900121c6:	d188      	bne.n	900120da <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
900121c8:	b021      	add	sp, #132	@ 0x84
900121ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900121ce:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
900121d2:	e767      	b.n	900120a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
900121d4:	2402340c 	.word	0x2402340c
900121d8:	9002b8c0 	.word	0x9002b8c0

900121dc <_ZN8touchgfx4RectaNERKS0_>:
900121dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900121e0:	f9b1 7000 	ldrsh.w	r7, [r1]
900121e4:	888c      	ldrh	r4, [r1, #4]
900121e6:	f9b0 9000 	ldrsh.w	r9, [r0]
900121ea:	443c      	add	r4, r7
900121ec:	b2a4      	uxth	r4, r4
900121ee:	fa0f f884 	sxth.w	r8, r4
900121f2:	45c1      	cmp	r9, r8
900121f4:	da2f      	bge.n	90012256 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900121f6:	8882      	ldrh	r2, [r0, #4]
900121f8:	444a      	add	r2, r9
900121fa:	b292      	uxth	r2, r2
900121fc:	fa0f fe82 	sxth.w	lr, r2
90012200:	4577      	cmp	r7, lr
90012202:	da28      	bge.n	90012256 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012204:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90012208:	88cb      	ldrh	r3, [r1, #6]
9001220a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001220e:	442b      	add	r3, r5
90012210:	b21b      	sxth	r3, r3
90012212:	429e      	cmp	r6, r3
90012214:	da1f      	bge.n	90012256 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012216:	88c3      	ldrh	r3, [r0, #6]
90012218:	4433      	add	r3, r6
9001221a:	b29b      	uxth	r3, r3
9001221c:	fa0f fc83 	sxth.w	ip, r3
90012220:	4565      	cmp	r5, ip
90012222:	da18      	bge.n	90012256 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012224:	454f      	cmp	r7, r9
90012226:	bfb8      	it	lt
90012228:	464f      	movlt	r7, r9
9001222a:	42b5      	cmp	r5, r6
9001222c:	bfb8      	it	lt
9001222e:	4635      	movlt	r5, r6
90012230:	45f0      	cmp	r8, lr
90012232:	bfd8      	it	le
90012234:	4622      	movle	r2, r4
90012236:	1bd2      	subs	r2, r2, r7
90012238:	8082      	strh	r2, [r0, #4]
9001223a:	884a      	ldrh	r2, [r1, #2]
9001223c:	88c9      	ldrh	r1, [r1, #6]
9001223e:	8007      	strh	r7, [r0, #0]
90012240:	440a      	add	r2, r1
90012242:	8045      	strh	r5, [r0, #2]
90012244:	b292      	uxth	r2, r2
90012246:	b211      	sxth	r1, r2
90012248:	458c      	cmp	ip, r1
9001224a:	bfa8      	it	ge
9001224c:	4613      	movge	r3, r2
9001224e:	1b5b      	subs	r3, r3, r5
90012250:	80c3      	strh	r3, [r0, #6]
90012252:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012256:	2300      	movs	r3, #0
90012258:	8003      	strh	r3, [r0, #0]
9001225a:	8043      	strh	r3, [r0, #2]
9001225c:	8083      	strh	r3, [r0, #4]
9001225e:	80c3      	strh	r3, [r0, #6]
90012260:	e7f7      	b.n	90012252 <_ZN8touchgfx4RectaNERKS0_+0x76>

90012262 <_ZNK8touchgfx4Rect7isEmptyEv>:
90012262:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90012266:	2b00      	cmp	r3, #0
90012268:	dd06      	ble.n	90012278 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9001226a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001226e:	2800      	cmp	r0, #0
90012270:	bfcc      	ite	gt
90012272:	2000      	movgt	r0, #0
90012274:	2001      	movle	r0, #1
90012276:	4770      	bx	lr
90012278:	2001      	movs	r0, #1
9001227a:	4770      	bx	lr

9001227c <_ZNK8touchgfx9Container16getContainedAreaEv>:
9001227c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012280:	2300      	movs	r3, #0
90012282:	4604      	mov	r4, r0
90012284:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90012286:	8003      	strh	r3, [r0, #0]
90012288:	8043      	strh	r3, [r0, #2]
9001228a:	8083      	strh	r3, [r0, #4]
9001228c:	80c3      	strh	r3, [r0, #6]
9001228e:	2d00      	cmp	r5, #0
90012290:	d040      	beq.n	90012314 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90012292:	1d28      	adds	r0, r5, #4
90012294:	f7ff ffe5 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90012298:	b988      	cbnz	r0, 900122be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001229a:	4620      	mov	r0, r4
9001229c:	f7ff ffe1 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900122a0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900122a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900122a8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
900122ac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
900122b0:	b138      	cbz	r0, 900122c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
900122b2:	8022      	strh	r2, [r4, #0]
900122b4:	8063      	strh	r3, [r4, #2]
900122b6:	f8a4 e004 	strh.w	lr, [r4, #4]
900122ba:	f8a4 c006 	strh.w	ip, [r4, #6]
900122be:	69ad      	ldr	r5, [r5, #24]
900122c0:	e7e5      	b.n	9001228e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
900122c2:	f9b4 0000 	ldrsh.w	r0, [r4]
900122c6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900122ca:	4290      	cmp	r0, r2
900122cc:	4607      	mov	r7, r0
900122ce:	f8b4 8004 	ldrh.w	r8, [r4, #4]
900122d2:	460e      	mov	r6, r1
900122d4:	bfa8      	it	ge
900122d6:	4617      	movge	r7, r2
900122d8:	4299      	cmp	r1, r3
900122da:	4472      	add	r2, lr
900122dc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
900122e0:	bfa8      	it	ge
900122e2:	461e      	movge	r6, r3
900122e4:	4440      	add	r0, r8
900122e6:	4471      	add	r1, lr
900122e8:	4463      	add	r3, ip
900122ea:	b200      	sxth	r0, r0
900122ec:	8027      	strh	r7, [r4, #0]
900122ee:	b212      	sxth	r2, r2
900122f0:	8066      	strh	r6, [r4, #2]
900122f2:	b209      	sxth	r1, r1
900122f4:	b21b      	sxth	r3, r3
900122f6:	4290      	cmp	r0, r2
900122f8:	bfac      	ite	ge
900122fa:	ebc7 0200 	rsbge	r2, r7, r0
900122fe:	ebc7 0202 	rsblt	r2, r7, r2
90012302:	4299      	cmp	r1, r3
90012304:	bfac      	ite	ge
90012306:	ebc6 0301 	rsbge	r3, r6, r1
9001230a:	ebc6 0303 	rsblt	r3, r6, r3
9001230e:	80a2      	strh	r2, [r4, #4]
90012310:	80e3      	strh	r3, [r4, #6]
90012312:	e7d4      	b.n	900122be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90012314:	4620      	mov	r0, r4
90012316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001231a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9001231a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9001231e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90012322:	b383      	cbz	r3, 90012386 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012324:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90012326:	b374      	cbz	r4, 90012386 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012328:	f9b1 5000 	ldrsh.w	r5, [r1]
9001232c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90012330:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90012334:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90012338:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001233c:	b303      	cbz	r3, 90012380 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001233e:	4668      	mov	r0, sp
90012340:	1d21      	adds	r1, r4, #4
90012342:	f8ad 5000 	strh.w	r5, [sp]
90012346:	f8ad 6002 	strh.w	r6, [sp, #2]
9001234a:	f8ad 7004 	strh.w	r7, [sp, #4]
9001234e:	f8ad 8006 	strh.w	r8, [sp, #6]
90012352:	f7ff ff43 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
90012356:	4668      	mov	r0, sp
90012358:	f7ff ff83 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
9001235c:	b980      	cbnz	r0, 90012380 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001235e:	f8bd 3000 	ldrh.w	r3, [sp]
90012362:	4669      	mov	r1, sp
90012364:	88a2      	ldrh	r2, [r4, #4]
90012366:	4620      	mov	r0, r4
90012368:	1a9b      	subs	r3, r3, r2
9001236a:	88e2      	ldrh	r2, [r4, #6]
9001236c:	f8ad 3000 	strh.w	r3, [sp]
90012370:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012374:	1a9b      	subs	r3, r3, r2
90012376:	f8ad 3002 	strh.w	r3, [sp, #2]
9001237a:	6823      	ldr	r3, [r4, #0]
9001237c:	689b      	ldr	r3, [r3, #8]
9001237e:	4798      	blx	r3
90012380:	69a4      	ldr	r4, [r4, #24]
90012382:	2c00      	cmp	r4, #0
90012384:	d1d8      	bne.n	90012338 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90012386:	b002      	add	sp, #8
90012388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001238c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9001238c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001238e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90012392:	460d      	mov	r5, r1
90012394:	4616      	mov	r6, r2
90012396:	b323      	cbz	r3, 900123e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012398:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001239a:	b314      	cbz	r4, 900123e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9001239c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900123a0:	b1eb      	cbz	r3, 900123de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900123a2:	6828      	ldr	r0, [r5, #0]
900123a4:	466b      	mov	r3, sp
900123a6:	6869      	ldr	r1, [r5, #4]
900123a8:	c303      	stmia	r3!, {r0, r1}
900123aa:	4668      	mov	r0, sp
900123ac:	1d21      	adds	r1, r4, #4
900123ae:	f7ff ff15 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
900123b2:	4668      	mov	r0, sp
900123b4:	f7ff ff55 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900123b8:	b988      	cbnz	r0, 900123de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900123ba:	f8bd 3000 	ldrh.w	r3, [sp]
900123be:	4669      	mov	r1, sp
900123c0:	88a2      	ldrh	r2, [r4, #4]
900123c2:	4620      	mov	r0, r4
900123c4:	1a9b      	subs	r3, r3, r2
900123c6:	88e2      	ldrh	r2, [r4, #6]
900123c8:	f8ad 3000 	strh.w	r3, [sp]
900123cc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900123d0:	1a9b      	subs	r3, r3, r2
900123d2:	4632      	mov	r2, r6
900123d4:	f8ad 3002 	strh.w	r3, [sp, #2]
900123d8:	6823      	ldr	r3, [r4, #0]
900123da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
900123dc:	4798      	blx	r3
900123de:	69a4      	ldr	r4, [r4, #24]
900123e0:	e7db      	b.n	9001239a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900123e2:	b002      	add	sp, #8
900123e4:	bd70      	pop	{r4, r5, r6, pc}

900123e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900123e6:	6803      	ldr	r3, [r0, #0]
900123e8:	b513      	push	{r0, r1, r4, lr}
900123ea:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
900123ee:	2300      	movs	r3, #0
900123f0:	e9cd 3300 	strd	r3, r3, [sp]
900123f4:	466b      	mov	r3, sp
900123f6:	47a0      	blx	r4
900123f8:	b002      	add	sp, #8
900123fa:	bd10      	pop	{r4, pc}

900123fc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900123fc:	2301      	movs	r3, #1
900123fe:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90012402:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
90012406:	4770      	bx	lr

90012408 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90012408:	2301      	movs	r3, #1
9001240a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001240e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
90012412:	4770      	bx	lr

90012414 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90012414:	6843      	ldr	r3, [r0, #4]
90012416:	2201      	movs	r2, #1
90012418:	725a      	strb	r2, [r3, #9]
9001241a:	6840      	ldr	r0, [r0, #4]
9001241c:	6803      	ldr	r3, [r0, #0]
9001241e:	691b      	ldr	r3, [r3, #16]
90012420:	4718      	bx	r3

90012422 <_ZN8touchgfx3HAL8flushDMAEv>:
90012422:	6840      	ldr	r0, [r0, #4]
90012424:	6803      	ldr	r3, [r0, #0]
90012426:	689b      	ldr	r3, [r3, #8]
90012428:	4718      	bx	r3

9001242a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
9001242a:	b530      	push	{r4, r5, lr}
9001242c:	b08b      	sub	sp, #44	@ 0x2c
9001242e:	6804      	ldr	r4, [r0, #0]
90012430:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90012434:	9509      	str	r5, [sp, #36]	@ 0x24
90012436:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
9001243a:	9508      	str	r5, [sp, #32]
9001243c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90012440:	9507      	str	r5, [sp, #28]
90012442:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
90012446:	9506      	str	r5, [sp, #24]
90012448:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
9001244c:	9505      	str	r5, [sp, #20]
9001244e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
90012452:	9504      	str	r5, [sp, #16]
90012454:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90012458:	9503      	str	r5, [sp, #12]
9001245a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
9001245e:	9502      	str	r5, [sp, #8]
90012460:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90012464:	e9cd 3500 	strd	r3, r5, [sp]
90012468:	4613      	mov	r3, r2
9001246a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
9001246c:	2200      	movs	r2, #0
9001246e:	47a0      	blx	r4
90012470:	b00b      	add	sp, #44	@ 0x2c
90012472:	bd30      	pop	{r4, r5, pc}

90012474 <_ZN8touchgfx3HAL10beginFrameEv>:
90012474:	4b04      	ldr	r3, [pc, #16]	@ (90012488 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90012476:	781b      	ldrb	r3, [r3, #0]
90012478:	b123      	cbz	r3, 90012484 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
9001247a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
9001247e:	f080 0001 	eor.w	r0, r0, #1
90012482:	4770      	bx	lr
90012484:	2001      	movs	r0, #1
90012486:	4770      	bx	lr
90012488:	2402340a 	.word	0x2402340a

9001248c <_ZN8touchgfx3HAL8endFrameEv>:
9001248c:	b510      	push	{r4, lr}
9001248e:	4604      	mov	r4, r0
90012490:	6840      	ldr	r0, [r0, #4]
90012492:	6803      	ldr	r3, [r0, #0]
90012494:	689b      	ldr	r3, [r3, #8]
90012496:	4798      	blx	r3
90012498:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
9001249c:	b113      	cbz	r3, 900124a4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001249e:	2301      	movs	r3, #1
900124a0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
900124a4:	bd10      	pop	{r4, pc}

900124a6 <_ZN8touchgfx3HAL10initializeEv>:
900124a6:	b510      	push	{r4, lr}
900124a8:	4604      	mov	r4, r0
900124aa:	f7ef ff1d 	bl	900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>
900124ae:	f7ee fb93 	bl	90000bd8 <_ZN8touchgfx4GPIO4initEv>
900124b2:	6860      	ldr	r0, [r4, #4]
900124b4:	6803      	ldr	r3, [r0, #0]
900124b6:	68db      	ldr	r3, [r3, #12]
900124b8:	4798      	blx	r3
900124ba:	68e0      	ldr	r0, [r4, #12]
900124bc:	6803      	ldr	r3, [r0, #0]
900124be:	689b      	ldr	r3, [r3, #8]
900124c0:	4798      	blx	r3
900124c2:	6823      	ldr	r3, [r4, #0]
900124c4:	4620      	mov	r0, r4
900124c6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
900124c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900124cc:	4718      	bx	r3
	...

900124d0 <_ZN8touchgfx3HAL4tickEv>:
900124d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900124d2:	6803      	ldr	r3, [r0, #0]
900124d4:	4604      	mov	r4, r0
900124d6:	4d5b      	ldr	r5, [pc, #364]	@ (90012644 <_ZN8touchgfx3HAL4tickEv+0x174>)
900124d8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
900124dc:	4798      	blx	r3
900124de:	2800      	cmp	r0, #0
900124e0:	f000 8095 	beq.w	9001260e <_ZN8touchgfx3HAL4tickEv+0x13e>
900124e4:	2001      	movs	r0, #1
900124e6:	2600      	movs	r6, #0
900124e8:	f7ee fbb0 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900124ec:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
900124f0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900124f4:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900124f8:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
900124fc:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
90012500:	b133      	cbz	r3, 90012510 <_ZN8touchgfx3HAL4tickEv+0x40>
90012502:	6823      	ldr	r3, [r4, #0]
90012504:	4620      	mov	r0, r4
90012506:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
9001250a:	4798      	blx	r3
9001250c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012510:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
90012514:	2601      	movs	r6, #1
90012516:	6862      	ldr	r2, [r4, #4]
90012518:	f083 0301 	eor.w	r3, r3, #1
9001251c:	702e      	strb	r6, [r5, #0]
9001251e:	7253      	strb	r3, [r2, #9]
90012520:	f005 ff96 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
90012524:	6803      	ldr	r3, [r0, #0]
90012526:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012528:	4798      	blx	r3
9001252a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001252e:	b90b      	cbnz	r3, 90012534 <_ZN8touchgfx3HAL4tickEv+0x64>
90012530:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
90012534:	f005 ff8c 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
90012538:	6803      	ldr	r3, [r0, #0]
9001253a:	695b      	ldr	r3, [r3, #20]
9001253c:	4798      	blx	r3
9001253e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90012540:	6803      	ldr	r3, [r0, #0]
90012542:	691b      	ldr	r3, [r3, #16]
90012544:	4798      	blx	r3
90012546:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001254a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
9001254e:	3b01      	subs	r3, #1
90012550:	b2db      	uxtb	r3, r3
90012552:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90012556:	b10a      	cbz	r2, 9001255c <_ZN8touchgfx3HAL4tickEv+0x8c>
90012558:	2b00      	cmp	r3, #0
9001255a:	d1eb      	bne.n	90012534 <_ZN8touchgfx3HAL4tickEv+0x64>
9001255c:	4a3a      	ldr	r2, [pc, #232]	@ (90012648 <_ZN8touchgfx3HAL4tickEv+0x178>)
9001255e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
90012562:	7813      	ldrb	r3, [r2, #0]
90012564:	3301      	adds	r3, #1
90012566:	b25b      	sxtb	r3, r3
90012568:	4299      	cmp	r1, r3
9001256a:	7013      	strb	r3, [r2, #0]
9001256c:	dc10      	bgt.n	90012590 <_ZN8touchgfx3HAL4tickEv+0xc0>
9001256e:	2300      	movs	r3, #0
90012570:	68e0      	ldr	r0, [r4, #12]
90012572:	a902      	add	r1, sp, #8
90012574:	7013      	strb	r3, [r2, #0]
90012576:	aa03      	add	r2, sp, #12
90012578:	6803      	ldr	r3, [r0, #0]
9001257a:	68db      	ldr	r3, [r3, #12]
9001257c:	4798      	blx	r3
9001257e:	6823      	ldr	r3, [r4, #0]
90012580:	2800      	cmp	r0, #0
90012582:	d050      	beq.n	90012626 <_ZN8touchgfx3HAL4tickEv+0x156>
90012584:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90012588:	4620      	mov	r0, r4
9001258a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001258e:	4798      	blx	r3
90012590:	2300      	movs	r3, #0
90012592:	6960      	ldr	r0, [r4, #20]
90012594:	f88d 3007 	strb.w	r3, [sp, #7]
90012598:	b158      	cbz	r0, 900125b2 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001259a:	6803      	ldr	r3, [r0, #0]
9001259c:	f10d 0107 	add.w	r1, sp, #7
900125a0:	68db      	ldr	r3, [r3, #12]
900125a2:	4798      	blx	r3
900125a4:	b128      	cbz	r0, 900125b2 <_ZN8touchgfx3HAL4tickEv+0xe2>
900125a6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900125a8:	f89d 1007 	ldrb.w	r1, [sp, #7]
900125ac:	6803      	ldr	r3, [r0, #0]
900125ae:	68db      	ldr	r3, [r3, #12]
900125b0:	4798      	blx	r3
900125b2:	f104 001c 	add.w	r0, r4, #28
900125b6:	f016 ff0d 	bl	900293d4 <_ZN8touchgfx8Gestures4tickEv>
900125ba:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
900125be:	b30b      	cbz	r3, 90012604 <_ZN8touchgfx3HAL4tickEv+0x134>
900125c0:	6920      	ldr	r0, [r4, #16]
900125c2:	6803      	ldr	r3, [r0, #0]
900125c4:	691b      	ldr	r3, [r3, #16]
900125c6:	4798      	blx	r3
900125c8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900125ca:	4606      	mov	r6, r0
900125cc:	b903      	cbnz	r3, 900125d0 <_ZN8touchgfx3HAL4tickEv+0x100>
900125ce:	6760      	str	r0, [r4, #116]	@ 0x74
900125d0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900125d2:	4a1e      	ldr	r2, [pc, #120]	@ (9001264c <_ZN8touchgfx3HAL4tickEv+0x17c>)
900125d4:	1af3      	subs	r3, r6, r3
900125d6:	4293      	cmp	r3, r2
900125d8:	d914      	bls.n	90012604 <_ZN8touchgfx3HAL4tickEv+0x134>
900125da:	6920      	ldr	r0, [r4, #16]
900125dc:	6803      	ldr	r3, [r0, #0]
900125de:	699b      	ldr	r3, [r3, #24]
900125e0:	4798      	blx	r3
900125e2:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900125e4:	2264      	movs	r2, #100	@ 0x64
900125e6:	1af3      	subs	r3, r6, r3
900125e8:	fbb3 f3f2 	udiv	r3, r3, r2
900125ec:	fbb0 f0f3 	udiv	r0, r0, r3
900125f0:	2800      	cmp	r0, #0
900125f2:	dc1d      	bgt.n	90012630 <_ZN8touchgfx3HAL4tickEv+0x160>
900125f4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
900125f8:	6920      	ldr	r0, [r4, #16]
900125fa:	2100      	movs	r1, #0
900125fc:	6803      	ldr	r3, [r0, #0]
900125fe:	69db      	ldr	r3, [r3, #28]
90012600:	4798      	blx	r3
90012602:	6766      	str	r6, [r4, #116]	@ 0x74
90012604:	f005 ff24 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
90012608:	6803      	ldr	r3, [r0, #0]
9001260a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001260c:	4798      	blx	r3
9001260e:	6823      	ldr	r3, [r4, #0]
90012610:	4620      	mov	r0, r4
90012612:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
90012616:	4798      	blx	r3
90012618:	2001      	movs	r0, #1
9001261a:	f7ee fb4b 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001261e:	2300      	movs	r3, #0
90012620:	702b      	strb	r3, [r5, #0]
90012622:	b004      	add	sp, #16
90012624:	bd70      	pop	{r4, r5, r6, pc}
90012626:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
9001262a:	4620      	mov	r0, r4
9001262c:	4798      	blx	r3
9001262e:	e7af      	b.n	90012590 <_ZN8touchgfx3HAL4tickEv+0xc0>
90012630:	2863      	cmp	r0, #99	@ 0x63
90012632:	bfcb      	itete	gt
90012634:	2300      	movgt	r3, #0
90012636:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
9001263a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
9001263e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
90012642:	e7d9      	b.n	900125f8 <_ZN8touchgfx3HAL4tickEv+0x128>
90012644:	24023410 	.word	0x24023410
90012648:	24023411 	.word	0x24023411
9001264c:	05f5e100 	.word	0x05f5e100

90012650 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90012650:	b510      	push	{r4, lr}
90012652:	4604      	mov	r4, r0
90012654:	f7ef fe7a 	bl	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90012658:	2200      	movs	r2, #0
9001265a:	6863      	ldr	r3, [r4, #4]
9001265c:	729a      	strb	r2, [r3, #10]
9001265e:	bd10      	pop	{r4, pc}

90012660 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90012660:	65c1      	str	r1, [r0, #92]	@ 0x5c
90012662:	301c      	adds	r0, #28
90012664:	f016 beb4 	b.w	900293d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90012668 <_ZN8touchgfx3HAL5touchEll>:
90012668:	b530      	push	{r4, r5, lr}
9001266a:	b087      	sub	sp, #28
9001266c:	4604      	mov	r4, r0
9001266e:	a804      	add	r0, sp, #16
90012670:	e9cd 1204 	strd	r1, r2, [sp, #16]
90012674:	f005 fcd2 	bl	9001801c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90012678:	9b04      	ldr	r3, [sp, #16]
9001267a:	a906      	add	r1, sp, #24
9001267c:	a803      	add	r0, sp, #12
9001267e:	f8ad 300c 	strh.w	r3, [sp, #12]
90012682:	9b05      	ldr	r3, [sp, #20]
90012684:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90012688:	f005 fd1a 	bl	900180c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
9001268c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90012690:	f104 001c 	add.w	r0, r4, #28
90012694:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90012698:	f8bd 300e 	ldrh.w	r3, [sp, #14]
9001269c:	b189      	cbz	r1, 900126c2 <_ZN8touchgfx3HAL5touchEll+0x5a>
9001269e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
900126a2:	9300      	str	r3, [sp, #0]
900126a4:	4613      	mov	r3, r2
900126a6:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
900126aa:	462a      	mov	r2, r5
900126ac:	f016 fea0 	bl	900293f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900126b0:	b128      	cbz	r0, 900126be <_ZN8touchgfx3HAL5touchEll+0x56>
900126b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900126b6:	6623      	str	r3, [r4, #96]	@ 0x60
900126b8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900126bc:	6663      	str	r3, [r4, #100]	@ 0x64
900126be:	b007      	add	sp, #28
900126c0:	bd30      	pop	{r4, r5, pc}
900126c2:	f016 fed5 	bl	90029470 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900126c6:	2301      	movs	r3, #1
900126c8:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900126cc:	e7f1      	b.n	900126b2 <_ZN8touchgfx3HAL5touchEll+0x4a>

900126ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900126ce:	b510      	push	{r4, lr}
900126d0:	2b00      	cmp	r3, #0
900126d2:	d046      	beq.n	90012762 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900126d4:	ea81 0002 	eor.w	r0, r1, r2
900126d8:	07c4      	lsls	r4, r0, #31
900126da:	d508      	bpl.n	900126ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900126dc:	440b      	add	r3, r1
900126de:	3a01      	subs	r2, #1
900126e0:	428b      	cmp	r3, r1
900126e2:	d93e      	bls.n	90012762 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900126e4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900126e8:	f801 0b01 	strb.w	r0, [r1], #1
900126ec:	e7f8      	b.n	900126e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900126ee:	07d0      	lsls	r0, r2, #31
900126f0:	bf42      	ittt	mi
900126f2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900126f6:	f103 33ff 	addmi.w	r3, r3, #4294967295	@ 0xffffffff
900126fa:	f801 0b01 	strbmi.w	r0, [r1], #1
900126fe:	2b01      	cmp	r3, #1
90012700:	d911      	bls.n	90012726 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012702:	ea81 0402 	eor.w	r4, r1, r2
90012706:	4610      	mov	r0, r2
90012708:	07a4      	lsls	r4, r4, #30
9001270a:	d022      	beq.n	90012752 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
9001270c:	f023 0401 	bic.w	r4, r3, #1
90012710:	440c      	add	r4, r1
90012712:	428c      	cmp	r4, r1
90012714:	4602      	mov	r2, r0
90012716:	d904      	bls.n	90012722 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90012718:	8812      	ldrh	r2, [r2, #0]
9001271a:	3002      	adds	r0, #2
9001271c:	f821 2b02 	strh.w	r2, [r1], #2
90012720:	e7f7      	b.n	90012712 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90012722:	f003 0301 	and.w	r3, r3, #1
90012726:	f023 0003 	bic.w	r0, r3, #3
9001272a:	4408      	add	r0, r1
9001272c:	4288      	cmp	r0, r1
9001272e:	4614      	mov	r4, r2
90012730:	d904      	bls.n	9001273c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90012732:	6824      	ldr	r4, [r4, #0]
90012734:	3204      	adds	r2, #4
90012736:	f841 4b04 	str.w	r4, [r1], #4
9001273a:	e7f7      	b.n	9001272c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
9001273c:	f003 0303 	and.w	r3, r3, #3
90012740:	3a01      	subs	r2, #1
90012742:	440b      	add	r3, r1
90012744:	428b      	cmp	r3, r1
90012746:	d90c      	bls.n	90012762 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90012748:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001274c:	f801 0b01 	strb.w	r0, [r1], #1
90012750:	e7f8      	b.n	90012744 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90012752:	0790      	lsls	r0, r2, #30
90012754:	d0e7      	beq.n	90012726 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012756:	f832 0b02 	ldrh.w	r0, [r2], #2
9001275a:	3b02      	subs	r3, #2
9001275c:	f821 0b02 	strh.w	r0, [r1], #2
90012760:	e7e1      	b.n	90012726 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012762:	2001      	movs	r0, #1
90012764:	bd10      	pop	{r4, pc}

90012766 <_ZN8touchgfx3HAL7noTouchEv>:
90012766:	b510      	push	{r4, lr}
90012768:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
9001276c:	4604      	mov	r4, r0
9001276e:	b153      	cbz	r3, 90012786 <_ZN8touchgfx3HAL7noTouchEv+0x20>
90012770:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90012774:	2101      	movs	r1, #1
90012776:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
9001277a:	301c      	adds	r0, #28
9001277c:	f016 fe78 	bl	90029470 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90012780:	2300      	movs	r3, #0
90012782:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90012786:	bd10      	pop	{r4, pc}

90012788 <_ZN8touchgfx8Drawable5setXYEss>:
90012788:	b570      	push	{r4, r5, r6, lr}
9001278a:	6803      	ldr	r3, [r0, #0]
9001278c:	4604      	mov	r4, r0
9001278e:	4615      	mov	r5, r2
90012790:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012792:	4798      	blx	r3
90012794:	6823      	ldr	r3, [r4, #0]
90012796:	4629      	mov	r1, r5
90012798:	4620      	mov	r0, r4
9001279a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001279c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900127a0:	4718      	bx	r3
	...

900127a4 <_ZN8touchgfx3HAL3lcdEv>:
900127a4:	4b04      	ldr	r3, [pc, #16]	@ (900127b8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
900127a6:	681b      	ldr	r3, [r3, #0]
900127a8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900127ac:	b10a      	cbz	r2, 900127b2 <_ZN8touchgfx3HAL3lcdEv+0xe>
900127ae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900127b0:	b900      	cbnz	r0, 900127b4 <_ZN8touchgfx3HAL3lcdEv+0x10>
900127b2:	6898      	ldr	r0, [r3, #8]
900127b4:	4770      	bx	lr
900127b6:	bf00      	nop
900127b8:	2402340c 	.word	0x2402340c

900127bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900127bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900127c0:	b085      	sub	sp, #20
900127c2:	4604      	mov	r4, r0
900127c4:	2000      	movs	r0, #0
900127c6:	4699      	mov	r9, r3
900127c8:	ad04      	add	r5, sp, #16
900127ca:	460f      	mov	r7, r1
900127cc:	4690      	mov	r8, r2
900127ce:	f845 0d04 	str.w	r0, [r5, #-4]!
900127d2:	69a0      	ldr	r0, [r4, #24]
900127d4:	6806      	ldr	r6, [r0, #0]
900127d6:	9501      	str	r5, [sp, #4]
900127d8:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
900127dc:	9500      	str	r5, [sp, #0]
900127de:	6835      	ldr	r5, [r6, #0]
900127e0:	47a8      	blx	r5
900127e2:	4d10      	ldr	r5, [pc, #64]	@ (90012824 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900127e4:	4606      	mov	r6, r0
900127e6:	f8a5 9000 	strh.w	r9, [r5]
900127ea:	f7ff ffdb 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
900127ee:	6803      	ldr	r3, [r0, #0]
900127f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900127f2:	4798      	blx	r3
900127f4:	b128      	cbz	r0, 90012802 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900127f6:	2801      	cmp	r0, #1
900127f8:	d00b      	beq.n	90012812 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900127fa:	4630      	mov	r0, r6
900127fc:	b005      	add	sp, #20
900127fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012802:	882b      	ldrh	r3, [r5, #0]
90012804:	fb08 7203 	mla	r2, r8, r3, r7
90012808:	9b03      	ldr	r3, [sp, #12]
9001280a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001280e:	63e3      	str	r3, [r4, #60]	@ 0x3c
90012810:	e7f3      	b.n	900127fa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90012812:	882a      	ldrh	r2, [r5, #0]
90012814:	9b03      	ldr	r3, [sp, #12]
90012816:	fb08 7202 	mla	r2, r8, r2, r7
9001281a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001281e:	1a9a      	subs	r2, r3, r2
90012820:	63e2      	str	r2, [r4, #60]	@ 0x3c
90012822:	e7ea      	b.n	900127fa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90012824:	24023406 	.word	0x24023406

90012828 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90012828:	b5f0      	push	{r4, r5, r6, r7, lr}
9001282a:	b08b      	sub	sp, #44	@ 0x2c
9001282c:	4617      	mov	r7, r2
9001282e:	4604      	mov	r4, r0
90012830:	460e      	mov	r6, r1
90012832:	461d      	mov	r5, r3
90012834:	f7ff ffb6 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90012838:	6803      	ldr	r3, [r0, #0]
9001283a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001283c:	4798      	blx	r3
9001283e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90012842:	9007      	str	r0, [sp, #28]
90012844:	4631      	mov	r1, r6
90012846:	6822      	ldr	r2, [r4, #0]
90012848:	e9cd 0308 	strd	r0, r3, [sp, #32]
9001284c:	4b0c      	ldr	r3, [pc, #48]	@ (90012880 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
9001284e:	4620      	mov	r0, r4
90012850:	881b      	ldrh	r3, [r3, #0]
90012852:	9306      	str	r3, [sp, #24]
90012854:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012858:	9305      	str	r3, [sp, #20]
9001285a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
9001285e:	9304      	str	r3, [sp, #16]
90012860:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012864:	9303      	str	r3, [sp, #12]
90012866:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001286a:	9302      	str	r3, [sp, #8]
9001286c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90012870:	e9cd 5300 	strd	r5, r3, [sp]
90012874:	463b      	mov	r3, r7
90012876:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
90012878:	2200      	movs	r2, #0
9001287a:	47a8      	blx	r5
9001287c:	b00b      	add	sp, #44	@ 0x2c
9001287e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012880:	24023406 	.word	0x24023406

90012884 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90012884:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012888:	4698      	mov	r8, r3
9001288a:	6803      	ldr	r3, [r0, #0]
9001288c:	b08b      	sub	sp, #44	@ 0x2c
9001288e:	4617      	mov	r7, r2
90012890:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
90012892:	460e      	mov	r6, r1
90012894:	4b13      	ldr	r3, [pc, #76]	@ (900128e4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90012896:	4604      	mov	r4, r0
90012898:	f8b3 9000 	ldrh.w	r9, [r3]
9001289c:	f7ff ff82 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
900128a0:	6803      	ldr	r3, [r0, #0]
900128a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900128a4:	4798      	blx	r3
900128a6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900128aa:	2200      	movs	r2, #0
900128ac:	4631      	mov	r1, r6
900128ae:	e9cd 0308 	strd	r0, r3, [sp, #32]
900128b2:	2302      	movs	r3, #2
900128b4:	4620      	mov	r0, r4
900128b6:	e9cd 9306 	strd	r9, r3, [sp, #24]
900128ba:	2301      	movs	r3, #1
900128bc:	9305      	str	r3, [sp, #20]
900128be:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900128c2:	9304      	str	r3, [sp, #16]
900128c4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900128c8:	9303      	str	r3, [sp, #12]
900128ca:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900128ce:	9302      	str	r3, [sp, #8]
900128d0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900128d4:	e9cd 8300 	strd	r8, r3, [sp]
900128d8:	463b      	mov	r3, r7
900128da:	47a8      	blx	r5
900128dc:	b00b      	add	sp, #44	@ 0x2c
900128de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900128e2:	bf00      	nop
900128e4:	24023406 	.word	0x24023406

900128e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900128e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900128ec:	4698      	mov	r8, r3
900128ee:	6803      	ldr	r3, [r0, #0]
900128f0:	b087      	sub	sp, #28
900128f2:	460e      	mov	r6, r1
900128f4:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
900128f6:	4617      	mov	r7, r2
900128f8:	4b0f      	ldr	r3, [pc, #60]	@ (90012938 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900128fa:	4604      	mov	r4, r0
900128fc:	f8b3 9000 	ldrh.w	r9, [r3]
90012900:	f7ff ff50 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90012904:	6803      	ldr	r3, [r0, #0]
90012906:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012908:	4798      	blx	r3
9001290a:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
9001290e:	463a      	mov	r2, r7
90012910:	4631      	mov	r1, r6
90012912:	f8cd 900c 	str.w	r9, [sp, #12]
90012916:	e9cd 0304 	strd	r0, r3, [sp, #16]
9001291a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9001291e:	4620      	mov	r0, r4
90012920:	9302      	str	r3, [sp, #8]
90012922:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90012926:	9301      	str	r3, [sp, #4]
90012928:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001292c:	9300      	str	r3, [sp, #0]
9001292e:	4643      	mov	r3, r8
90012930:	47a8      	blx	r5
90012932:	b007      	add	sp, #28
90012934:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012938:	24023406 	.word	0x24023406

9001293c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
9001293c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012940:	4604      	mov	r4, r0
90012942:	b08f      	sub	sp, #60	@ 0x3c
90012944:	4610      	mov	r0, r2
90012946:	460d      	mov	r5, r1
90012948:	4691      	mov	r9, r2
9001294a:	461e      	mov	r6, r3
9001294c:	f009 f914 	bl	9001bb78 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90012950:	2800      	cmp	r0, #0
90012952:	f000 809d 	beq.w	90012a90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90012956:	6823      	ldr	r3, [r4, #0]
90012958:	4620      	mov	r0, r4
9001295a:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90012af4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
9001295e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90012962:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90012964:	4798      	blx	r3
90012966:	6823      	ldr	r3, [r4, #0]
90012968:	4620      	mov	r0, r4
9001296a:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90012af8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
9001296e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012970:	4798      	blx	r3
90012972:	f8bb 3000 	ldrh.w	r3, [fp]
90012976:	4f5c      	ldr	r7, [pc, #368]	@ (90012ae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90012978:	9301      	str	r3, [sp, #4]
9001297a:	f8ba 3000 	ldrh.w	r3, [sl]
9001297e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90012982:	4640      	mov	r0, r8
90012984:	9302      	str	r3, [sp, #8]
90012986:	883b      	ldrh	r3, [r7, #0]
90012988:	9303      	str	r3, [sp, #12]
9001298a:	4b58      	ldr	r3, [pc, #352]	@ (90012aec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001298c:	881a      	ldrh	r2, [r3, #0]
9001298e:	9305      	str	r3, [sp, #20]
90012990:	9204      	str	r2, [sp, #16]
90012992:	f009 f985 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012996:	8038      	strh	r0, [r7, #0]
90012998:	4640      	mov	r0, r8
9001299a:	f009 f9b5 	bl	9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001299e:	9b05      	ldr	r3, [sp, #20]
900129a0:	b280      	uxth	r0, r0
900129a2:	8018      	strh	r0, [r3, #0]
900129a4:	4b52      	ldr	r3, [pc, #328]	@ (90012af0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900129a6:	781b      	ldrb	r3, [r3, #0]
900129a8:	2b00      	cmp	r3, #0
900129aa:	d174      	bne.n	90012a96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900129ac:	883b      	ldrh	r3, [r7, #0]
900129ae:	f8aa 0000 	strh.w	r0, [sl]
900129b2:	f8ab 3000 	strh.w	r3, [fp]
900129b6:	4648      	mov	r0, r9
900129b8:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
900129bc:	f009 f8dc 	bl	9001bb78 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900129c0:	2200      	movs	r2, #0
900129c2:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
900129c6:	4611      	mov	r1, r2
900129c8:	4628      	mov	r0, r5
900129ca:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900129ce:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900129d2:	f7ff fed9 	bl	90012788 <_ZN8touchgfx8Drawable5setXYEss>
900129d6:	2301      	movs	r3, #1
900129d8:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
900129dc:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
900129e0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900129e4:	2b00      	cmp	r3, #0
900129e6:	dd5c      	ble.n	90012aa2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900129e8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900129ec:	2b00      	cmp	r3, #0
900129ee:	dd58      	ble.n	90012aa2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900129f0:	462a      	mov	r2, r5
900129f2:	ab0a      	add	r3, sp, #40	@ 0x28
900129f4:	f852 0f04 	ldr.w	r0, [r2, #4]!
900129f8:	6851      	ldr	r1, [r2, #4]
900129fa:	c303      	stmia	r3!, {r0, r1}
900129fc:	4631      	mov	r1, r6
900129fe:	a80a      	add	r0, sp, #40	@ 0x28
90012a00:	f7ff fbec 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
90012a04:	4b38      	ldr	r3, [pc, #224]	@ (90012ae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90012a06:	2100      	movs	r1, #0
90012a08:	f9b3 2000 	ldrsh.w	r2, [r3]
90012a0c:	4b37      	ldr	r3, [pc, #220]	@ (90012aec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90012a0e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90012a12:	aa0a      	add	r2, sp, #40	@ 0x28
90012a14:	f9b3 3000 	ldrsh.w	r3, [r3]
90012a18:	910c      	str	r1, [sp, #48]	@ 0x30
90012a1a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90012a1e:	ab08      	add	r3, sp, #32
90012a20:	e892 0003 	ldmia.w	r2, {r0, r1}
90012a24:	e883 0003 	stmia.w	r3, {r0, r1}
90012a28:	4618      	mov	r0, r3
90012a2a:	a90c      	add	r1, sp, #48	@ 0x30
90012a2c:	f7ff fbd6 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
90012a30:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90012a32:	2b00      	cmp	r3, #0
90012a34:	d13c      	bne.n	90012ab0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90012a36:	2000      	movs	r0, #0
90012a38:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90012a3c:	2600      	movs	r6, #0
90012a3e:	696b      	ldr	r3, [r5, #20]
90012a40:	a908      	add	r1, sp, #32
90012a42:	682a      	ldr	r2, [r5, #0]
90012a44:	4628      	mov	r0, r5
90012a46:	9305      	str	r3, [sp, #20]
90012a48:	616e      	str	r6, [r5, #20]
90012a4a:	6892      	ldr	r2, [r2, #8]
90012a4c:	4790      	blx	r2
90012a4e:	9b05      	ldr	r3, [sp, #20]
90012a50:	4652      	mov	r2, sl
90012a52:	4649      	mov	r1, r9
90012a54:	616b      	str	r3, [r5, #20]
90012a56:	4628      	mov	r0, r5
90012a58:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90012a5c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90012a60:	f7ff fe92 	bl	90012788 <_ZN8touchgfx8Drawable5setXYEss>
90012a64:	9a01      	ldr	r2, [sp, #4]
90012a66:	4b23      	ldr	r3, [pc, #140]	@ (90012af4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90012a68:	4620      	mov	r0, r4
90012a6a:	801a      	strh	r2, [r3, #0]
90012a6c:	9a02      	ldr	r2, [sp, #8]
90012a6e:	4b22      	ldr	r3, [pc, #136]	@ (90012af8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90012a70:	801a      	strh	r2, [r3, #0]
90012a72:	9a03      	ldr	r2, [sp, #12]
90012a74:	4b1c      	ldr	r3, [pc, #112]	@ (90012ae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90012a76:	801a      	strh	r2, [r3, #0]
90012a78:	4b1c      	ldr	r3, [pc, #112]	@ (90012aec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90012a7a:	9a04      	ldr	r2, [sp, #16]
90012a7c:	801a      	strh	r2, [r3, #0]
90012a7e:	6823      	ldr	r3, [r4, #0]
90012a80:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90012a84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90012a86:	4798      	blx	r3
90012a88:	6823      	ldr	r3, [r4, #0]
90012a8a:	4620      	mov	r0, r4
90012a8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012a8e:	4798      	blx	r3
90012a90:	b00f      	add	sp, #60	@ 0x3c
90012a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012a96:	883b      	ldrh	r3, [r7, #0]
90012a98:	f8ab 0000 	strh.w	r0, [fp]
90012a9c:	f8aa 3000 	strh.w	r3, [sl]
90012aa0:	e789      	b.n	900129b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90012aa2:	462a      	mov	r2, r5
90012aa4:	ab0a      	add	r3, sp, #40	@ 0x28
90012aa6:	f852 0f04 	ldr.w	r0, [r2, #4]!
90012aaa:	6851      	ldr	r1, [r2, #4]
90012aac:	c303      	stmia	r3!, {r0, r1}
90012aae:	e7a9      	b.n	90012a04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90012ab0:	a807      	add	r0, sp, #28
90012ab2:	f009 fa65 	bl	9001bf80 <_ZNK8touchgfx6Bitmap9getFormatEv>
90012ab6:	4606      	mov	r6, r0
90012ab8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90012aba:	6803      	ldr	r3, [r0, #0]
90012abc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012abe:	4798      	blx	r3
90012ac0:	4286      	cmp	r6, r0
90012ac2:	d1b8      	bne.n	90012a36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90012ac4:	f7ff fe6e 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90012ac8:	6803      	ldr	r3, [r0, #0]
90012aca:	4606      	mov	r6, r0
90012acc:	a807      	add	r0, sp, #28
90012ace:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012ad0:	9305      	str	r3, [sp, #20]
90012ad2:	f009 fa55 	bl	9001bf80 <_ZNK8touchgfx6Bitmap9getFormatEv>
90012ad6:	9b05      	ldr	r3, [sp, #20]
90012ad8:	4601      	mov	r1, r0
90012ada:	4630      	mov	r0, r6
90012adc:	4798      	blx	r3
90012ade:	f080 0001 	eor.w	r0, r0, #1
90012ae2:	b2c0      	uxtb	r0, r0
90012ae4:	e7a8      	b.n	90012a38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90012ae6:	bf00      	nop
90012ae8:	24023400 	.word	0x24023400
90012aec:	24023402 	.word	0x24023402
90012af0:	24023404 	.word	0x24023404
90012af4:	24023406 	.word	0x24023406
90012af8:	24023408 	.word	0x24023408

90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90012afc:	4b07      	ldr	r3, [pc, #28]	@ (90012b1c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90012afe:	b510      	push	{r4, lr}
90012b00:	781b      	ldrb	r3, [r3, #0]
90012b02:	4604      	mov	r4, r0
90012b04:	b13b      	cbz	r3, 90012b16 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90012b06:	6803      	ldr	r3, [r0, #0]
90012b08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012b0a:	4798      	blx	r3
90012b0c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90012b0e:	4283      	cmp	r3, r0
90012b10:	d101      	bne.n	90012b16 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90012b12:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90012b14:	bd10      	pop	{r4, pc}
90012b16:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90012b18:	e7fc      	b.n	90012b14 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90012b1a:	bf00      	nop
90012b1c:	2402340a 	.word	0x2402340a

90012b20 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90012b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012b24:	461d      	mov	r5, r3
90012b26:	b08a      	sub	sp, #40	@ 0x28
90012b28:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90012b2c:	4690      	mov	r8, r2
90012b2e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90012b32:	2400      	movs	r4, #0
90012b34:	4607      	mov	r7, r0
90012b36:	fb06 8505 	mla	r5, r6, r5, r8
90012b3a:	9404      	str	r4, [sp, #16]
90012b3c:	f88d 4020 	strb.w	r4, [sp, #32]
90012b40:	e9cd 3101 	strd	r3, r1, [sp, #4]
90012b44:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90012b48:	f8ad 3018 	strh.w	r3, [sp, #24]
90012b4c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90012b50:	f8ad 301a 	strh.w	r3, [sp, #26]
90012b54:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012b58:	f8ad 301c 	strh.w	r3, [sp, #28]
90012b5c:	f7ff ffce 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012b60:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90012b64:	6878      	ldr	r0, [r7, #4]
90012b66:	f8ad 601e 	strh.w	r6, [sp, #30]
90012b6a:	a901      	add	r1, sp, #4
90012b6c:	9505      	str	r5, [sp, #20]
90012b6e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90012b72:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90012b76:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90012b7a:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90012b7e:	6803      	ldr	r3, [r0, #0]
90012b80:	685b      	ldr	r3, [r3, #4]
90012b82:	4798      	blx	r3
90012b84:	b00a      	add	sp, #40	@ 0x28
90012b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012b8a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90012b8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012b8e:	b08b      	sub	sp, #44	@ 0x2c
90012b90:	2400      	movs	r4, #0
90012b92:	4691      	mov	r9, r2
90012b94:	461d      	mov	r5, r3
90012b96:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90012b9a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90012b9e:	4688      	mov	r8, r1
90012ba0:	4607      	mov	r7, r0
90012ba2:	9404      	str	r4, [sp, #16]
90012ba4:	fb06 9505 	mla	r5, r6, r5, r9
90012ba8:	e9cd 3401 	strd	r3, r4, [sp, #4]
90012bac:	f7ff ffa6 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012bb0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012bb4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90012bb8:	6878      	ldr	r0, [r7, #4]
90012bba:	f8ad 3018 	strh.w	r3, [sp, #24]
90012bbe:	a901      	add	r1, sp, #4
90012bc0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90012bc4:	9505      	str	r5, [sp, #20]
90012bc6:	f8ad 301a 	strh.w	r3, [sp, #26]
90012bca:	f8ad 401c 	strh.w	r4, [sp, #28]
90012bce:	f8ad 601e 	strh.w	r6, [sp, #30]
90012bd2:	f8cd 8010 	str.w	r8, [sp, #16]
90012bd6:	f8ad 4020 	strh.w	r4, [sp, #32]
90012bda:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90012bde:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90012be2:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90012be6:	6803      	ldr	r3, [r0, #0]
90012be8:	685b      	ldr	r3, [r3, #4]
90012bea:	4798      	blx	r3
90012bec:	b00b      	add	sp, #44	@ 0x2c
90012bee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90012bf4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90012bf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012bf8:	b08a      	sub	sp, #40	@ 0x28
90012bfa:	4698      	mov	r8, r3
90012bfc:	2300      	movs	r3, #0
90012bfe:	4606      	mov	r6, r0
90012c00:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90012c04:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90012c08:	2d0b      	cmp	r5, #11
90012c0a:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90012c0e:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90012c12:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90012c16:	9304      	str	r3, [sp, #16]
90012c18:	d137      	bne.n	90012c8a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90012c1a:	2380      	movs	r3, #128	@ 0x80
90012c1c:	f88d 0020 	strb.w	r0, [sp, #32]
90012c20:	4630      	mov	r0, r6
90012c22:	9203      	str	r2, [sp, #12]
90012c24:	e9cd 3101 	strd	r3, r1, [sp, #4]
90012c28:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90012c2c:	f8ad 3018 	strh.w	r3, [sp, #24]
90012c30:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012c34:	f8ad 301a 	strh.w	r3, [sp, #26]
90012c38:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90012c3c:	f8ad 301c 	strh.w	r3, [sp, #28]
90012c40:	f7ff ff5c 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012c44:	2c0b      	cmp	r4, #11
90012c46:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90012c4a:	f8ad 701e 	strh.w	r7, [sp, #30]
90012c4e:	bf94      	ite	ls
90012c50:	4b19      	ldrls	r3, [pc, #100]	@ (90012cb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90012c52:	2100      	movhi	r1, #0
90012c54:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90012c58:	bf98      	it	ls
90012c5a:	5d19      	ldrbls	r1, [r3, r4]
90012c5c:	fb02 8307 	mla	r3, r2, r7, r8
90012c60:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90012c64:	10c9      	asrs	r1, r1, #3
90012c66:	fb01 0003 	mla	r0, r1, r3, r0
90012c6a:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90012c6e:	a901      	add	r1, sp, #4
90012c70:	9005      	str	r0, [sp, #20]
90012c72:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90012c76:	2300      	movs	r3, #0
90012c78:	6870      	ldr	r0, [r6, #4]
90012c7a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90012c7e:	6803      	ldr	r3, [r0, #0]
90012c80:	685b      	ldr	r3, [r3, #4]
90012c82:	4798      	blx	r3
90012c84:	b00a      	add	sp, #40	@ 0x28
90012c86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012c8a:	2d02      	cmp	r5, #2
90012c8c:	d109      	bne.n	90012ca2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90012c8e:	28ff      	cmp	r0, #255	@ 0xff
90012c90:	d105      	bne.n	90012c9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90012c92:	f1bc 0f00 	cmp.w	ip, #0
90012c96:	bf14      	ite	ne
90012c98:	2340      	movne	r3, #64	@ 0x40
90012c9a:	2320      	moveq	r3, #32
90012c9c:	e7be      	b.n	90012c1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012c9e:	2340      	movs	r3, #64	@ 0x40
90012ca0:	e7bc      	b.n	90012c1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012ca2:	28ff      	cmp	r0, #255	@ 0xff
90012ca4:	d105      	bne.n	90012cb2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90012ca6:	f1bc 0f00 	cmp.w	ip, #0
90012caa:	bf14      	ite	ne
90012cac:	2304      	movne	r3, #4
90012cae:	2301      	moveq	r3, #1
90012cb0:	e7b4      	b.n	90012c1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012cb2:	2304      	movs	r3, #4
90012cb4:	e7b2      	b.n	90012c1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012cb6:	bf00      	nop
90012cb8:	9002e2e0 	.word	0x9002e2e0

90012cbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90012cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012cc0:	b08b      	sub	sp, #44	@ 0x2c
90012cc2:	461d      	mov	r5, r3
90012cc4:	2400      	movs	r4, #0
90012cc6:	4688      	mov	r8, r1
90012cc8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90012ccc:	4693      	mov	fp, r2
90012cce:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90012cd2:	4607      	mov	r7, r0
90012cd4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90012cd8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90012cdc:	9404      	str	r4, [sp, #16]
90012cde:	bf14      	ite	ne
90012ce0:	2308      	movne	r3, #8
90012ce2:	2302      	moveq	r3, #2
90012ce4:	fb05 b50a 	mla	r5, r5, sl, fp
90012ce8:	e9cd 3401 	strd	r3, r4, [sp, #4]
90012cec:	f7ff ff06 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012cf0:	2e0b      	cmp	r6, #11
90012cf2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90012cf6:	a901      	add	r1, sp, #4
90012cf8:	bf98      	it	ls
90012cfa:	4b13      	ldrls	r3, [pc, #76]	@ (90012d48 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90012cfc:	f8ad a01e 	strh.w	sl, [sp, #30]
90012d00:	bf98      	it	ls
90012d02:	5d9c      	ldrbls	r4, [r3, r6]
90012d04:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90012d08:	10e4      	asrs	r4, r4, #3
90012d0a:	f8cd 8010 	str.w	r8, [sp, #16]
90012d0e:	f8ad 3018 	strh.w	r3, [sp, #24]
90012d12:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90012d16:	fb04 0405 	mla	r4, r4, r5, r0
90012d1a:	6878      	ldr	r0, [r7, #4]
90012d1c:	f8ad 301a 	strh.w	r3, [sp, #26]
90012d20:	2300      	movs	r3, #0
90012d22:	9405      	str	r4, [sp, #20]
90012d24:	f8ad 301c 	strh.w	r3, [sp, #28]
90012d28:	f88d 9020 	strb.w	r9, [sp, #32]
90012d2c:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90012d30:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90012d34:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90012d38:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90012d3c:	6803      	ldr	r3, [r0, #0]
90012d3e:	685b      	ldr	r3, [r3, #4]
90012d40:	4798      	blx	r3
90012d42:	b00b      	add	sp, #44	@ 0x2c
90012d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012d48:	9002e2e0 	.word	0x9002e2e0

90012d4c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90012d4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012d50:	461e      	mov	r6, r3
90012d52:	4b0a      	ldr	r3, [pc, #40]	@ (90012d7c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90012d54:	460f      	mov	r7, r1
90012d56:	4690      	mov	r8, r2
90012d58:	881d      	ldrh	r5, [r3, #0]
90012d5a:	f7ff fd23 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90012d5e:	6803      	ldr	r3, [r0, #0]
90012d60:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012d62:	4798      	blx	r3
90012d64:	280b      	cmp	r0, #11
90012d66:	bf96      	itet	ls
90012d68:	4b05      	ldrls	r3, [pc, #20]	@ (90012d80 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90012d6a:	2400      	movhi	r4, #0
90012d6c:	5c1c      	ldrbls	r4, [r3, r0]
90012d6e:	fb08 7005 	mla	r0, r8, r5, r7
90012d72:	10e4      	asrs	r4, r4, #3
90012d74:	fb04 6000 	mla	r0, r4, r0, r6
90012d78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012d7c:	24023406 	.word	0x24023406
90012d80:	9002e2e0 	.word	0x9002e2e0

90012d84 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90012d84:	b5f0      	push	{r4, r5, r6, r7, lr}
90012d86:	b08b      	sub	sp, #44	@ 0x2c
90012d88:	461f      	mov	r7, r3
90012d8a:	4604      	mov	r4, r0
90012d8c:	4616      	mov	r6, r2
90012d8e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90012d92:	2500      	movs	r5, #0
90012d94:	e9cd 3101 	strd	r3, r1, [sp, #4]
90012d98:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90012d9c:	9504      	str	r5, [sp, #16]
90012d9e:	f8ad 3018 	strh.w	r3, [sp, #24]
90012da2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90012da6:	f8ad 301a 	strh.w	r3, [sp, #26]
90012daa:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012dae:	f8ad 301c 	strh.w	r3, [sp, #28]
90012db2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012db6:	f88d 3020 	strb.w	r3, [sp, #32]
90012dba:	f7ff fe9f 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012dbe:	463a      	mov	r2, r7
90012dc0:	4631      	mov	r1, r6
90012dc2:	4603      	mov	r3, r0
90012dc4:	4620      	mov	r0, r4
90012dc6:	f7ff ffc1 	bl	90012d4c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012dca:	4b0e      	ldr	r3, [pc, #56]	@ (90012e04 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90012dcc:	9005      	str	r0, [sp, #20]
90012dce:	881b      	ldrh	r3, [r3, #0]
90012dd0:	f8ad 301e 	strh.w	r3, [sp, #30]
90012dd4:	f7ff fce6 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90012dd8:	6803      	ldr	r3, [r0, #0]
90012dda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012ddc:	4798      	blx	r3
90012dde:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90012de0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90012de4:	a901      	add	r1, sp, #4
90012de6:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90012dea:	9304      	str	r3, [sp, #16]
90012dec:	6860      	ldr	r0, [r4, #4]
90012dee:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90012df2:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90012df6:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90012dfa:	6803      	ldr	r3, [r0, #0]
90012dfc:	685b      	ldr	r3, [r3, #4]
90012dfe:	4798      	blx	r3
90012e00:	b00b      	add	sp, #44	@ 0x2c
90012e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012e04:	24023406 	.word	0x24023406

90012e08 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90012e08:	b5f0      	push	{r4, r5, r6, r7, lr}
90012e0a:	b08d      	sub	sp, #52	@ 0x34
90012e0c:	2501      	movs	r5, #1
90012e0e:	4604      	mov	r4, r0
90012e10:	466b      	mov	r3, sp
90012e12:	9503      	str	r5, [sp, #12]
90012e14:	e883 0006 	stmia.w	r3, {r1, r2}
90012e18:	2300      	movs	r3, #0
90012e1a:	f8bd 6000 	ldrh.w	r6, [sp]
90012e1e:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90012e22:	9306      	str	r3, [sp, #24]
90012e24:	6803      	ldr	r3, [r0, #0]
90012e26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012e28:	4798      	blx	r3
90012e2a:	463a      	mov	r2, r7
90012e2c:	4631      	mov	r1, r6
90012e2e:	4603      	mov	r3, r0
90012e30:	4620      	mov	r0, r4
90012e32:	f7ff ff8b 	bl	90012d4c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012e36:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90012e38:	9004      	str	r0, [sp, #16]
90012e3a:	9307      	str	r3, [sp, #28]
90012e3c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90012e40:	f8ad 3020 	strh.w	r3, [sp, #32]
90012e44:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90012e48:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90012e4c:	4b0e      	ldr	r3, [pc, #56]	@ (90012e88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90012e4e:	881b      	ldrh	r3, [r3, #0]
90012e50:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90012e54:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90012e58:	f7ff fca4 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90012e5c:	6803      	ldr	r3, [r0, #0]
90012e5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012e60:	4798      	blx	r3
90012e62:	23ff      	movs	r3, #255	@ 0xff
90012e64:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90012e68:	a903      	add	r1, sp, #12
90012e6a:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90012e6e:	6860      	ldr	r0, [r4, #4]
90012e70:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90012e74:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90012e78:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90012e7c:	6803      	ldr	r3, [r0, #0]
90012e7e:	685b      	ldr	r3, [r3, #4]
90012e80:	4798      	blx	r3
90012e82:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90012e84:	b00d      	add	sp, #52	@ 0x34
90012e86:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012e88:	24023406 	.word	0x24023406

90012e8c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90012e8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012e90:	b08c      	sub	sp, #48	@ 0x30
90012e92:	461e      	mov	r6, r3
90012e94:	2300      	movs	r3, #0
90012e96:	4604      	mov	r4, r0
90012e98:	466d      	mov	r5, sp
90012e9a:	9306      	str	r3, [sp, #24]
90012e9c:	6803      	ldr	r3, [r0, #0]
90012e9e:	e885 0006 	stmia.w	r5, {r1, r2}
90012ea2:	2501      	movs	r5, #1
90012ea4:	f8bd 7000 	ldrh.w	r7, [sp]
90012ea8:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90012eac:	9503      	str	r5, [sp, #12]
90012eae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012eb0:	4798      	blx	r3
90012eb2:	4642      	mov	r2, r8
90012eb4:	4639      	mov	r1, r7
90012eb6:	4603      	mov	r3, r0
90012eb8:	4620      	mov	r0, r4
90012eba:	f7ff ff47 	bl	90012d4c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012ebe:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90012ec2:	9004      	str	r0, [sp, #16]
90012ec4:	f8ad 3020 	strh.w	r3, [sp, #32]
90012ec8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90012ecc:	9607      	str	r6, [sp, #28]
90012ece:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90012ed2:	4b10      	ldr	r3, [pc, #64]	@ (90012f14 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90012ed4:	881b      	ldrh	r3, [r3, #0]
90012ed6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90012eda:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90012edc:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90012ee0:	f7ff fc60 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90012ee4:	6803      	ldr	r3, [r0, #0]
90012ee6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012ee8:	4798      	blx	r3
90012eea:	23ff      	movs	r3, #255	@ 0xff
90012eec:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90012ef0:	a903      	add	r1, sp, #12
90012ef2:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90012ef6:	6860      	ldr	r0, [r4, #4]
90012ef8:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90012efc:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90012f00:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90012f04:	6803      	ldr	r3, [r0, #0]
90012f06:	685b      	ldr	r3, [r3, #4]
90012f08:	4798      	blx	r3
90012f0a:	4630      	mov	r0, r6
90012f0c:	b00c      	add	sp, #48	@ 0x30
90012f0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012f12:	bf00      	nop
90012f14:	24023406 	.word	0x24023406

90012f18 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90012f18:	b5f0      	push	{r4, r5, r6, r7, lr}
90012f1a:	b085      	sub	sp, #20
90012f1c:	4605      	mov	r5, r0
90012f1e:	ac02      	add	r4, sp, #8
90012f20:	e884 0006 	stmia.w	r4, {r1, r2}
90012f24:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90012f28:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90012f2c:	f7ff fde6 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012f30:	4631      	mov	r1, r6
90012f32:	4603      	mov	r3, r0
90012f34:	463a      	mov	r2, r7
90012f36:	4628      	mov	r0, r5
90012f38:	f7ff ff08 	bl	90012d4c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012f3c:	4a05      	ldr	r2, [pc, #20]	@ (90012f54 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90012f3e:	682b      	ldr	r3, [r5, #0]
90012f40:	8812      	ldrh	r2, [r2, #0]
90012f42:	9200      	str	r2, [sp, #0]
90012f44:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90012f46:	4603      	mov	r3, r0
90012f48:	4628      	mov	r0, r5
90012f4a:	e894 0006 	ldmia.w	r4, {r1, r2}
90012f4e:	47b0      	blx	r6
90012f50:	b005      	add	sp, #20
90012f52:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012f54:	24023406 	.word	0x24023406

90012f58 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90012f58:	b570      	push	{r4, r5, r6, lr}
90012f5a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90012f5e:	4604      	mov	r4, r0
90012f60:	b19b      	cbz	r3, 90012f8a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90012f62:	2002      	movs	r0, #2
90012f64:	f7ed feda 	bl	90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90012f68:	2300      	movs	r3, #0
90012f6a:	4620      	mov	r0, r4
90012f6c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90012f70:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90012f74:	6823      	ldr	r3, [r4, #0]
90012f76:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
90012f7a:	f7ff fdbf 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012f7e:	4601      	mov	r1, r0
90012f80:	4620      	mov	r0, r4
90012f82:	462b      	mov	r3, r5
90012f84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012f88:	4718      	bx	r3
90012f8a:	bd70      	pop	{r4, r5, r6, pc}

90012f8c <_ZN8touchgfx3HAL12setMCUActiveEb>:
90012f8c:	b570      	push	{r4, r5, r6, lr}
90012f8e:	4605      	mov	r5, r0
90012f90:	460c      	mov	r4, r1
90012f92:	2003      	movs	r0, #3
90012f94:	b149      	cbz	r1, 90012faa <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90012f96:	f7ed fe59 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90012f9a:	6928      	ldr	r0, [r5, #16]
90012f9c:	b168      	cbz	r0, 90012fba <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90012f9e:	6803      	ldr	r3, [r0, #0]
90012fa0:	2101      	movs	r1, #1
90012fa2:	695b      	ldr	r3, [r3, #20]
90012fa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012fa8:	4718      	bx	r3
90012faa:	f7ed fe83 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90012fae:	6928      	ldr	r0, [r5, #16]
90012fb0:	b118      	cbz	r0, 90012fba <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90012fb2:	6803      	ldr	r3, [r0, #0]
90012fb4:	4621      	mov	r1, r4
90012fb6:	695b      	ldr	r3, [r3, #20]
90012fb8:	e7f4      	b.n	90012fa4 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90012fba:	bd70      	pop	{r4, r5, r6, pc}

90012fbc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90012fbc:	b538      	push	{r3, r4, r5, lr}
90012fbe:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
90012fc2:	4604      	mov	r4, r0
90012fc4:	460d      	mov	r5, r1
90012fc6:	428b      	cmp	r3, r1
90012fc8:	d006      	beq.n	90012fd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90012fca:	6803      	ldr	r3, [r0, #0]
90012fcc:	b929      	cbnz	r1, 90012fda <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90012fce:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
90012fd2:	4798      	blx	r3
90012fd4:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90012fd8:	bd38      	pop	{r3, r4, r5, pc}
90012fda:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90012fde:	e7f8      	b.n	90012fd2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90012fe0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90012fe0:	4b0d      	ldr	r3, [pc, #52]	@ (90013018 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90012fe2:	b510      	push	{r4, lr}
90012fe4:	781b      	ldrb	r3, [r3, #0]
90012fe6:	4604      	mov	r4, r0
90012fe8:	b95b      	cbnz	r3, 90013002 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90012fea:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90012fee:	2b02      	cmp	r3, #2
90012ff0:	d007      	beq.n	90013002 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90012ff2:	6840      	ldr	r0, [r0, #4]
90012ff4:	f000 f91a 	bl	9001322c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90012ff8:	b118      	cbz	r0, 90013002 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90012ffa:	6862      	ldr	r2, [r4, #4]
90012ffc:	7a53      	ldrb	r3, [r2, #9]
90012ffe:	2b00      	cmp	r3, #0
90013000:	d0fc      	beq.n	90012ffc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90013002:	f7ef f99b 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90013006:	4620      	mov	r0, r4
90013008:	2100      	movs	r1, #0
9001300a:	f7ff ffd7 	bl	90012fbc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
9001300e:	4620      	mov	r0, r4
90013010:	f7ff fd74 	bl	90012afc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013014:	bd10      	pop	{r4, pc}
90013016:	bf00      	nop
90013018:	2402340a 	.word	0x2402340a

9001301c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
9001301c:	b570      	push	{r4, r5, r6, lr}
9001301e:	4604      	mov	r4, r0
90013020:	6803      	ldr	r3, [r0, #0]
90013022:	b919      	cbnz	r1, 9001302c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90013024:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013026:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001302a:	4718      	bx	r3
9001302c:	2200      	movs	r2, #0
9001302e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90013032:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90013036:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013038:	4798      	blx	r3
9001303a:	6863      	ldr	r3, [r4, #4]
9001303c:	2101      	movs	r1, #1
9001303e:	4605      	mov	r5, r0
90013040:	4620      	mov	r0, r4
90013042:	7299      	strb	r1, [r3, #10]
90013044:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90013048:	f7ff ffb8 	bl	90012fbc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
9001304c:	4628      	mov	r0, r5
9001304e:	bd70      	pop	{r4, r5, r6, pc}

90013050 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90013050:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90013054:	1a13      	subs	r3, r2, r0
90013056:	4258      	negs	r0, r3
90013058:	4158      	adcs	r0, r3
9001305a:	4770      	bx	lr

9001305c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
9001305c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90013060:	1a9b      	subs	r3, r3, r2
90013062:	2b00      	cmp	r3, #0
90013064:	bfdc      	itt	le
90013066:	6882      	ldrle	r2, [r0, #8]
90013068:	189b      	addle	r3, r3, r2
9001306a:	2b01      	cmp	r3, #1
9001306c:	bfcc      	ite	gt
9001306e:	2000      	movgt	r0, #0
90013070:	2001      	movle	r0, #1
90013072:	4770      	bx	lr

90013074 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90013074:	6902      	ldr	r2, [r0, #16]
90013076:	6843      	ldr	r3, [r0, #4]
90013078:	2024      	movs	r0, #36	@ 0x24
9001307a:	fb00 3002 	mla	r0, r0, r2, r3
9001307e:	4770      	bx	lr

90013080 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90013080:	6803      	ldr	r3, [r0, #0]
90013082:	691b      	ldr	r3, [r3, #16]
90013084:	4718      	bx	r3

90013086 <_ZN8touchgfx13DMA_Interface7executeEv>:
90013086:	2301      	movs	r3, #1
90013088:	b570      	push	{r4, r5, r6, lr}
9001308a:	7203      	strb	r3, [r0, #8]
9001308c:	4604      	mov	r4, r0
9001308e:	6840      	ldr	r0, [r0, #4]
90013090:	6803      	ldr	r3, [r0, #0]
90013092:	699b      	ldr	r3, [r3, #24]
90013094:	4798      	blx	r3
90013096:	6803      	ldr	r3, [r0, #0]
90013098:	4605      	mov	r5, r0
9001309a:	2b40      	cmp	r3, #64	@ 0x40
9001309c:	d00c      	beq.n	900130b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001309e:	d810      	bhi.n	900130c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900130a0:	2b04      	cmp	r3, #4
900130a2:	d01d      	beq.n	900130e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900130a4:	d804      	bhi.n	900130b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900130a6:	2b01      	cmp	r3, #1
900130a8:	d006      	beq.n	900130b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900130aa:	2b02      	cmp	r3, #2
900130ac:	d02c      	beq.n	90013108 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900130ae:	bd70      	pop	{r4, r5, r6, pc}
900130b0:	2b08      	cmp	r3, #8
900130b2:	d01d      	beq.n	900130f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900130b4:	2b20      	cmp	r3, #32
900130b6:	d1fa      	bne.n	900130ae <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900130b8:	6823      	ldr	r3, [r4, #0]
900130ba:	4620      	mov	r0, r4
900130bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900130be:	4798      	blx	r3
900130c0:	e013      	b.n	900130ea <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900130c2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900130c6:	d0f7      	beq.n	900130b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900130c8:	d804      	bhi.n	900130d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900130ca:	2b80      	cmp	r3, #128	@ 0x80
900130cc:	d0f4      	beq.n	900130b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900130ce:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900130d2:	e7f0      	b.n	900130b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
900130d4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900130d8:	d0ee      	beq.n	900130b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900130da:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
900130de:	e7e5      	b.n	900130ac <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
900130e0:	6823      	ldr	r3, [r4, #0]
900130e2:	7f01      	ldrb	r1, [r0, #28]
900130e4:	4620      	mov	r0, r4
900130e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900130e8:	4798      	blx	r3
900130ea:	6823      	ldr	r3, [r4, #0]
900130ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900130ee:	e006      	b.n	900130fe <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
900130f0:	6823      	ldr	r3, [r4, #0]
900130f2:	7f01      	ldrb	r1, [r0, #28]
900130f4:	4620      	mov	r0, r4
900130f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900130f8:	4798      	blx	r3
900130fa:	6823      	ldr	r3, [r4, #0]
900130fc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900130fe:	4629      	mov	r1, r5
90013100:	4620      	mov	r0, r4
90013102:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013106:	4718      	bx	r3
90013108:	6823      	ldr	r3, [r4, #0]
9001310a:	4620      	mov	r0, r4
9001310c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001310e:	4798      	blx	r3
90013110:	e7f3      	b.n	900130fa <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90013112 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90013112:	4770      	bx	lr

90013114 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90013114:	4770      	bx	lr

90013116 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90013116:	4770      	bx	lr

90013118 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90013118:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
9001311c:	b510      	push	{r4, lr}
9001311e:	1ad2      	subs	r2, r2, r3
90013120:	2a00      	cmp	r2, #0
90013122:	bfdc      	itt	le
90013124:	6884      	ldrle	r4, [r0, #8]
90013126:	1912      	addle	r2, r2, r4
90013128:	2a01      	cmp	r2, #1
9001312a:	dd16      	ble.n	9001315a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
9001312c:	6842      	ldr	r2, [r0, #4]
9001312e:	2424      	movs	r4, #36	@ 0x24
90013130:	fb04 2303 	mla	r3, r4, r3, r2
90013134:	f101 0220 	add.w	r2, r1, #32
90013138:	f851 4b04 	ldr.w	r4, [r1], #4
9001313c:	4291      	cmp	r1, r2
9001313e:	f843 4b04 	str.w	r4, [r3], #4
90013142:	d1f9      	bne.n	90013138 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90013144:	780a      	ldrb	r2, [r1, #0]
90013146:	701a      	strb	r2, [r3, #0]
90013148:	68c3      	ldr	r3, [r0, #12]
9001314a:	6882      	ldr	r2, [r0, #8]
9001314c:	f3bf 8f5b 	dmb	ish
90013150:	3301      	adds	r3, #1
90013152:	429a      	cmp	r2, r3
90013154:	bfd8      	it	le
90013156:	1a9b      	suble	r3, r3, r2
90013158:	60c3      	str	r3, [r0, #12]
9001315a:	bd10      	pop	{r4, pc}

9001315c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
9001315c:	6903      	ldr	r3, [r0, #16]
9001315e:	6882      	ldr	r2, [r0, #8]
90013160:	f3bf 8f5b 	dmb	ish
90013164:	3301      	adds	r3, #1
90013166:	429a      	cmp	r2, r3
90013168:	bfd8      	it	le
9001316a:	1a9b      	suble	r3, r3, r2
9001316c:	6103      	str	r3, [r0, #16]
9001316e:	4770      	bx	lr

90013170 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90013170:	b570      	push	{r4, r5, r6, lr}
90013172:	4604      	mov	r4, r0
90013174:	460e      	mov	r6, r1
90013176:	6860      	ldr	r0, [r4, #4]
90013178:	6803      	ldr	r3, [r0, #0]
9001317a:	685b      	ldr	r3, [r3, #4]
9001317c:	4798      	blx	r3
9001317e:	2800      	cmp	r0, #0
90013180:	d1f9      	bne.n	90013176 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90013182:	4d0d      	ldr	r5, [pc, #52]	@ (900131b8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90013184:	6828      	ldr	r0, [r5, #0]
90013186:	6803      	ldr	r3, [r0, #0]
90013188:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001318a:	4798      	blx	r3
9001318c:	f7ef f8e4 	bl	90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90013190:	6828      	ldr	r0, [r5, #0]
90013192:	2101      	movs	r1, #1
90013194:	f7ff ff12 	bl	90012fbc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013198:	6860      	ldr	r0, [r4, #4]
9001319a:	4631      	mov	r1, r6
9001319c:	6803      	ldr	r3, [r0, #0]
9001319e:	689b      	ldr	r3, [r3, #8]
900131a0:	4798      	blx	r3
900131a2:	6823      	ldr	r3, [r4, #0]
900131a4:	4620      	mov	r0, r4
900131a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900131a8:	4798      	blx	r3
900131aa:	6828      	ldr	r0, [r5, #0]
900131ac:	6803      	ldr	r3, [r0, #0]
900131ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900131b2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
900131b4:	4718      	bx	r3
900131b6:	bf00      	nop
900131b8:	2402340c 	.word	0x2402340c

900131bc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900131bc:	b508      	push	{r3, lr}
900131be:	f7ef f8bd 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900131c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900131c6:	f7ef b8c1 	b.w	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900131ca <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900131ca:	b510      	push	{r4, lr}
900131cc:	4604      	mov	r4, r0
900131ce:	2114      	movs	r1, #20
900131d0:	f016 ff1c 	bl	9002a00c <_ZdlPvj>
900131d4:	4620      	mov	r0, r4
900131d6:	bd10      	pop	{r4, pc}

900131d8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
900131d8:	b570      	push	{r4, r5, r6, lr}
900131da:	4604      	mov	r4, r0
900131dc:	6840      	ldr	r0, [r0, #4]
900131de:	6803      	ldr	r3, [r0, #0]
900131e0:	681b      	ldr	r3, [r3, #0]
900131e2:	4798      	blx	r3
900131e4:	4605      	mov	r5, r0
900131e6:	b930      	cbnz	r0, 900131f6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900131e8:	7a23      	ldrb	r3, [r4, #8]
900131ea:	b123      	cbz	r3, 900131f6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900131ec:	6860      	ldr	r0, [r4, #4]
900131ee:	6803      	ldr	r3, [r0, #0]
900131f0:	695b      	ldr	r3, [r3, #20]
900131f2:	4798      	blx	r3
900131f4:	7225      	strb	r5, [r4, #8]
900131f6:	6860      	ldr	r0, [r4, #4]
900131f8:	6803      	ldr	r3, [r0, #0]
900131fa:	681b      	ldr	r3, [r3, #0]
900131fc:	4798      	blx	r3
900131fe:	b928      	cbnz	r0, 9001320c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90013200:	6823      	ldr	r3, [r4, #0]
90013202:	4620      	mov	r0, r4
90013204:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90013206:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001320a:	4718      	bx	r3
9001320c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013210:	f7ef b8aa 	b.w	90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90013214 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90013214:	b510      	push	{r4, lr}
90013216:	6082      	str	r2, [r0, #8]
90013218:	2200      	movs	r2, #0
9001321a:	4c03      	ldr	r4, [pc, #12]	@ (90013228 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
9001321c:	e9c0 2203 	strd	r2, r2, [r0, #12]
90013220:	e9c0 4100 	strd	r4, r1, [r0]
90013224:	bd10      	pop	{r4, pc}
90013226:	bf00      	nop
90013228:	9002e2f4 	.word	0x9002e2f4

9001322c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
9001322c:	6840      	ldr	r0, [r0, #4]
9001322e:	6803      	ldr	r3, [r0, #0]
90013230:	681b      	ldr	r3, [r3, #0]
90013232:	4718      	bx	r3
90013234:	0000      	movs	r0, r0
	...

90013238 <_ZN8touchgfxL10applyNoiseEiihhh>:
90013238:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
9001323c:	fb80 0101 	smull	r0, r1, r0, r1
90013240:	4f21      	ldr	r7, [pc, #132]	@ (900132c8 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90013242:	461c      	mov	r4, r3
90013244:	4616      	mov	r6, r2
90013246:	fba0 bc07 	umull	fp, ip, r0, r7
9001324a:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001324e:	fb07 cc01 	mla	ip, r7, r1, ip
90013252:	fbab 010b 	umull	r0, r1, fp, fp
90013256:	fb0b f70c 	mul.w	r7, fp, ip
9001325a:	fb00 f30c 	mul.w	r3, r0, ip
9001325e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90013262:	fb0b 3301 	mla	r3, fp, r1, r3
90013266:	fba0 010b 	umull	r0, r1, r0, fp
9001326a:	4419      	add	r1, r3
9001326c:	a314      	add	r3, pc, #80	@ (adr r3, 900132c0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
9001326e:	e9d3 2300 	ldrd	r2, r3, [r3]
90013272:	f7ed fa41 	bl	900006f8 <__aeabi_ldivmod>
90013276:	2ef7      	cmp	r6, #247	@ 0xf7
90013278:	b290      	uxth	r0, r2
9001327a:	bf9e      	ittt	ls
9001327c:	f002 0207 	andls.w	r2, r2, #7
90013280:	18b6      	addls	r6, r6, r2
90013282:	b2f6      	uxtbls	r6, r6
90013284:	2cfb      	cmp	r4, #251	@ 0xfb
90013286:	bf9e      	ittt	ls
90013288:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
9001328c:	18e4      	addls	r4, r4, r3
9001328e:	b2e4      	uxtbls	r4, r4
90013290:	2df7      	cmp	r5, #247	@ 0xf7
90013292:	bf98      	it	ls
90013294:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90013298:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001329c:	bf98      	it	ls
9001329e:	182d      	addls	r5, r5, r0
900132a0:	480a      	ldr	r0, [pc, #40]	@ (900132cc <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900132a2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900132a6:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900132aa:	bf98      	it	ls
900132ac:	b2ed      	uxtbls	r5, r5
900132ae:	4304      	orrs	r4, r0
900132b0:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900132b4:	b280      	uxth	r0, r0
900132b6:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900132ba:	bf00      	nop
900132bc:	f3af 8000 	nop.w
900132c0:	797a8d77 	.word	0x797a8d77
900132c4:	00000000 	.word	0x00000000
900132c8:	00ec4ba7 	.word	0x00ec4ba7
900132cc:	fffff800 	.word	0xfffff800

900132d0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900132d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900132d4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900132d8:	4605      	mov	r5, r0
900132da:	ed2d 8b02 	vpush	{d8}
900132de:	b087      	sub	sp, #28
900132e0:	7c41      	ldrb	r1, [r0, #17]
900132e2:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900132e6:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900132ea:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900132ee:	2900      	cmp	r1, #0
900132f0:	f000 809a 	beq.w	90013428 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
900132f4:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900132f8:	ed90 7a08 	vldr	s14, [r0, #32]
900132fc:	454a      	cmp	r2, r9
900132fe:	68c0      	ldr	r0, [r0, #12]
90013300:	db25      	blt.n	9001334e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90013302:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013306:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001330a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001330e:	bfc8      	it	gt
90013310:	2200      	movgt	r2, #0
90013312:	5882      	ldr	r2, [r0, r2]
90013314:	2100      	movs	r1, #0
90013316:	ea4f 2812 	mov.w	r8, r2, lsr #8
9001331a:	7c2d      	ldrb	r5, [r5, #16]
9001331c:	0950      	lsrs	r0, r2, #5
9001331e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90013322:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90013326:	eb04 0746 	add.w	r7, r4, r6, lsl #1
9001332a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001332e:	2d00      	cmp	r5, #0
90013330:	d044      	beq.n	900133bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90013332:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90013336:	d141      	bne.n	900133bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90013338:	bb61      	cbnz	r1, 90013394 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
9001333a:	ea4e 0000 	orr.w	r0, lr, r0
9001333e:	ea4c 0500 	orr.w	r5, ip, r0
90013342:	42bc      	cmp	r4, r7
90013344:	f080 8214 	bcs.w	90013770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013348:	f824 5b02 	strh.w	r5, [r4], #2
9001334c:	e7f9      	b.n	90013342 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
9001334e:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
90013352:	454f      	cmp	r7, r9
90013354:	dc08      	bgt.n	90013368 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90013356:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001335a:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001335e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013362:	bfd8      	it	le
90013364:	2200      	movle	r2, #0
90013366:	e7d4      	b.n	90013312 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90013368:	eba9 0202 	sub.w	r2, r9, r2
9001336c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013370:	ee07 2a90 	vmov	s15, r2
90013374:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013378:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001337c:	ee67 7a87 	vmul.f32	s15, s15, s14
90013380:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90013384:	ee17 2a90 	vmov	r2, s15
90013388:	bfd8      	it	le
9001338a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
9001338e:	0092      	lsls	r2, r2, #2
90013390:	5882      	ldr	r2, [r0, r2]
90013392:	e7c0      	b.n	90013316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
90013394:	b2d5      	uxtb	r5, r2
90013396:	f3c2 4a07 	ubfx	sl, r2, #16, #8
9001339a:	fa5f f888 	uxtb.w	r8, r8
9001339e:	461e      	mov	r6, r3
900133a0:	42bc      	cmp	r4, r7
900133a2:	f080 81e5 	bcs.w	90013770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900133a6:	4630      	mov	r0, r6
900133a8:	9500      	str	r5, [sp, #0]
900133aa:	4643      	mov	r3, r8
900133ac:	4652      	mov	r2, sl
900133ae:	4649      	mov	r1, r9
900133b0:	3601      	adds	r6, #1
900133b2:	f7ff ff41 	bl	90013238 <_ZN8touchgfxL10applyNoiseEiihhh>
900133b6:	f824 0b02 	strh.w	r0, [r4], #2
900133ba:	e7f1      	b.n	900133a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900133bc:	0e12      	lsrs	r2, r2, #24
900133be:	26ff      	movs	r6, #255	@ 0xff
900133c0:	fb02 f20a 	mul.w	r2, r2, sl
900133c4:	1c53      	adds	r3, r2, #1
900133c6:	eb03 2222 	add.w	r2, r3, r2, asr #8
900133ca:	1212      	asrs	r2, r2, #8
900133cc:	fb02 f50c 	mul.w	r5, r2, ip
900133d0:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90013784 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900133d4:	fb02 f10e 	mul.w	r1, r2, lr
900133d8:	4350      	muls	r0, r2
900133da:	43d2      	mvns	r2, r2
900133dc:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900133e0:	42bc      	cmp	r4, r7
900133e2:	f080 81c5 	bcs.w	90013770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900133e6:	f8b4 e000 	ldrh.w	lr, [r4]
900133ea:	ea0e 030c 	and.w	r3, lr, ip
900133ee:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900133f2:	f00e 0e1f 	and.w	lr, lr, #31
900133f6:	fb02 1303 	mla	r3, r2, r3, r1
900133fa:	fb02 0808 	mla	r8, r2, r8, r0
900133fe:	fb02 5e0e 	mla	lr, r2, lr, r5
90013402:	fb93 f3f6 	sdiv	r3, r3, r6
90013406:	fb98 f8f6 	sdiv	r8, r8, r6
9001340a:	fb9e fef6 	sdiv	lr, lr, r6
9001340e:	ea03 030c 	and.w	r3, r3, ip
90013412:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90013416:	f00e 0e1f 	and.w	lr, lr, #31
9001341a:	ea43 0308 	orr.w	r3, r3, r8
9001341e:	ea43 030e 	orr.w	r3, r3, lr
90013422:	f824 3b02 	strh.w	r3, [r4], #2
90013426:	e7db      	b.n	900133e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90013428:	7c82      	ldrb	r2, [r0, #18]
9001342a:	2a00      	cmp	r2, #0
9001342c:	d04f      	beq.n	900134ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
9001342e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90013432:	ee07 2a90 	vmov	s15, r2
90013436:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001343a:	ee07 3a10 	vmov	s14, r3
9001343e:	461f      	mov	r7, r3
90013440:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90013444:	eef4 6ae7 	vcmpe.f32	s13, s15
90013448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001344c:	f200 8095 	bhi.w	9001357a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90013450:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90013454:	f640 71fc 	movw	r1, #4092	@ 0xffc
90013458:	68ea      	ldr	r2, [r5, #12]
9001345a:	f895 c010 	ldrb.w	ip, [r5, #16]
9001345e:	ee37 7a87 	vadd.f32	s14, s15, s14
90013462:	ee37 7a66 	vsub.f32	s14, s14, s13
90013466:	ee06 6a90 	vmov	s13, r6
9001346a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001346e:	eeb4 7ae6 	vcmpe.f32	s14, s13
90013472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013476:	bf4a      	itet	mi
90013478:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
9001347c:	9602      	strpl	r6, [sp, #8]
9001347e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90013482:	ed95 7a08 	vldr	s14, [r5, #32]
90013486:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001348a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001348e:	bfc8      	it	gt
90013490:	2100      	movgt	r1, #0
90013492:	5852      	ldr	r2, [r2, r1]
90013494:	9902      	ldr	r1, [sp, #8]
90013496:	ea4f 2b12 	mov.w	fp, r2, lsr #8
9001349a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001349e:	0950      	lsrs	r0, r2, #5
900134a0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900134a4:	9103      	str	r1, [sp, #12]
900134a6:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900134aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900134ae:	f1bc 0f00 	cmp.w	ip, #0
900134b2:	d024      	beq.n	900134fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900134b4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900134b8:	d121      	bne.n	900134fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900134ba:	ea4b 0b00 	orr.w	fp, fp, r0
900134be:	ea41 010b 	orr.w	r1, r1, fp
900134c2:	9a03      	ldr	r2, [sp, #12]
900134c4:	4294      	cmp	r4, r2
900134c6:	d255      	bcs.n	90013574 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900134c8:	f824 1b02 	strh.w	r1, [r4], #2
900134cc:	e7f9      	b.n	900134c2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900134ce:	ee07 9a10 	vmov	s14, r9
900134d2:	edd0 7a06 	vldr	s15, [r0, #24]
900134d6:	edd0 6a05 	vldr	s13, [r0, #20]
900134da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900134de:	ee37 7a67 	vsub.f32	s14, s14, s15
900134e2:	eec7 7a26 	vdiv.f32	s15, s14, s13
900134e6:	ed90 7a08 	vldr	s14, [r0, #32]
900134ea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900134ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900134f2:	bf44      	itt	mi
900134f4:	ed90 7a07 	vldrmi	s14, [r0, #28]
900134f8:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
900134fc:	e79d      	b.n	9001343a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
900134fe:	0e12      	lsrs	r2, r2, #24
90013500:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90013784 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013504:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90013508:	fb02 f20a 	mul.w	r2, r2, sl
9001350c:	f102 0c01 	add.w	ip, r2, #1
90013510:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90013514:	1212      	asrs	r2, r2, #8
90013516:	4350      	muls	r0, r2
90013518:	4351      	muls	r1, r2
9001351a:	fb02 fb0b 	mul.w	fp, r2, fp
9001351e:	43d2      	mvns	r2, r2
90013520:	9004      	str	r0, [sp, #16]
90013522:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90013526:	9105      	str	r1, [sp, #20]
90013528:	9903      	ldr	r1, [sp, #12]
9001352a:	428c      	cmp	r4, r1
9001352c:	d222      	bcs.n	90013574 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
9001352e:	8820      	ldrh	r0, [r4, #0]
90013530:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
90013534:	ea00 0c08 	and.w	ip, r0, r8
90013538:	460f      	mov	r7, r1
9001353a:	9904      	ldr	r1, [sp, #16]
9001353c:	fb02 bc0c 	mla	ip, r2, ip, fp
90013540:	fb02 1107 	mla	r1, r2, r7, r1
90013544:	fb9c fcfe 	sdiv	ip, ip, lr
90013548:	fb91 f1fe 	sdiv	r1, r1, lr
9001354c:	ea0c 0c08 	and.w	ip, ip, r8
90013550:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90013554:	ea4c 0101 	orr.w	r1, ip, r1
90013558:	f000 0c1f 	and.w	ip, r0, #31
9001355c:	9805      	ldr	r0, [sp, #20]
9001355e:	fb02 0c0c 	mla	ip, r2, ip, r0
90013562:	fb9c fcfe 	sdiv	ip, ip, lr
90013566:	f00c 0c1f 	and.w	ip, ip, #31
9001356a:	ea41 010c 	orr.w	r1, r1, ip
9001356e:	f824 1b02 	strh.w	r1, [r4], #2
90013572:	e7d9      	b.n	90013528 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90013574:	9a02      	ldr	r2, [sp, #8]
90013576:	441a      	add	r2, r3
90013578:	4617      	mov	r7, r2
9001357a:	441e      	add	r6, r3
9001357c:	b236      	sxth	r6, r6
9001357e:	42be      	cmp	r6, r7
90013580:	f340 80f6 	ble.w	90013770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013584:	ed95 7a07 	vldr	s14, [r5, #28]
90013588:	ee06 7a90 	vmov	s13, r7
9001358c:	ee37 7a87 	vadd.f32	s14, s15, s14
90013590:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90013594:	eeb4 7ae6 	vcmpe.f32	s14, s13
90013598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001359c:	f340 80b2 	ble.w	90013704 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
900135a0:	ee06 6a10 	vmov	s12, r6
900135a4:	ee76 7ae7 	vsub.f32	s15, s13, s15
900135a8:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 9001377c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900135ac:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900135b0:	7c2b      	ldrb	r3, [r5, #16]
900135b2:	eeb4 7ac6 	vcmpe.f32	s14, s12
900135b6:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90013780 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900135ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900135be:	bfd6      	itet	le
900135c0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900135c4:	46b0      	movgt	r8, r6
900135c6:	ee17 8a10 	vmovle	r8, s14
900135ca:	ed95 7a08 	vldr	s14, [r5, #32]
900135ce:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900135d2:	eba8 0707 	sub.w	r7, r8, r7
900135d6:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900135da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900135de:	fe38 8a06 	vselgt.f32	s16, s16, s12
900135e2:	eea7 8a27 	vfma.f32	s16, s14, s15
900135e6:	b1db      	cbz	r3, 90013620 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900135e8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900135ec:	d118      	bne.n	90013620 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900135ee:	42bc      	cmp	r4, r7
900135f0:	d262      	bcs.n	900136b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
900135f2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900135f6:	68eb      	ldr	r3, [r5, #12]
900135f8:	4649      	mov	r1, r9
900135fa:	ee17 0a90 	vmov	r0, s15
900135fe:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90013602:	b2d3      	uxtb	r3, r2
90013604:	9300      	str	r3, [sp, #0]
90013606:	f3c2 2307 	ubfx	r3, r2, #8, #8
9001360a:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001360e:	f7ff fe13 	bl	90013238 <_ZN8touchgfxL10applyNoiseEiihhh>
90013612:	f824 0b02 	strh.w	r0, [r4], #2
90013616:	edd5 7a08 	vldr	s15, [r5, #32]
9001361a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001361e:	e7e6      	b.n	900135ee <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90013620:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90013784 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013624:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90013628:	42bc      	cmp	r4, r7
9001362a:	d245      	bcs.n	900136b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001362c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90013630:	68eb      	ldr	r3, [r5, #12]
90013632:	f8b4 e000 	ldrh.w	lr, [r4]
90013636:	ee17 2a90 	vmov	r2, s15
9001363a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001363e:	0e13      	lsrs	r3, r2, #24
90013640:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90013644:	fb03 f30a 	mul.w	r3, r3, sl
90013648:	b289      	uxth	r1, r1
9001364a:	1c58      	adds	r0, r3, #1
9001364c:	eb00 2023 	add.w	r0, r0, r3, asr #8
90013650:	ea0e 030b 	and.w	r3, lr, fp
90013654:	1200      	asrs	r0, r0, #8
90013656:	ea6f 0c00 	mvn.w	ip, r0
9001365a:	fa5f fc8c 	uxtb.w	ip, ip
9001365e:	fb0c f303 	mul.w	r3, ip, r3
90013662:	fb00 3101 	mla	r1, r0, r1, r3
90013666:	fb91 f1f9 	sdiv	r1, r1, r9
9001366a:	ea01 030b 	and.w	r3, r1, fp
9001366e:	9302      	str	r3, [sp, #8]
90013670:	0953      	lsrs	r3, r2, #5
90013672:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90013676:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001367a:	4619      	mov	r1, r3
9001367c:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90013680:	f00e 0e1f 	and.w	lr, lr, #31
90013684:	fb0c f303 	mul.w	r3, ip, r3
90013688:	fb0c fc0e 	mul.w	ip, ip, lr
9001368c:	fb00 3301 	mla	r3, r0, r1, r3
90013690:	9902      	ldr	r1, [sp, #8]
90013692:	fb00 c002 	mla	r0, r0, r2, ip
90013696:	fb93 f3f9 	sdiv	r3, r3, r9
9001369a:	fb90 f0f9 	sdiv	r0, r0, r9
9001369e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900136a2:	f000 001f 	and.w	r0, r0, #31
900136a6:	4319      	orrs	r1, r3
900136a8:	4301      	orrs	r1, r0
900136aa:	f824 1b02 	strh.w	r1, [r4], #2
900136ae:	edd5 7a08 	vldr	s15, [r5, #32]
900136b2:	ee38 8a27 	vadd.f32	s16, s16, s15
900136b6:	e7b7      	b.n	90013628 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900136b8:	4546      	cmp	r6, r8
900136ba:	dd59      	ble.n	90013770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900136bc:	edd5 7a08 	vldr	s15, [r5, #32]
900136c0:	f640 73fc 	movw	r3, #4092	@ 0xffc
900136c4:	68ea      	ldr	r2, [r5, #12]
900136c6:	eba6 0608 	sub.w	r6, r6, r8
900136ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900136ce:	7c29      	ldrb	r1, [r5, #16]
900136d0:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900136d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900136d8:	bfd8      	it	le
900136da:	2300      	movle	r3, #0
900136dc:	58d2      	ldr	r2, [r2, r3]
900136de:	0a10      	lsrs	r0, r2, #8
900136e0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900136e4:	0953      	lsrs	r3, r2, #5
900136e6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900136ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900136ee:	b159      	cbz	r1, 90013708 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900136f0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900136f4:	d108      	bne.n	90013708 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900136f6:	4318      	orrs	r0, r3
900136f8:	4338      	orrs	r0, r7
900136fa:	42b4      	cmp	r4, r6
900136fc:	d238      	bcs.n	90013770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900136fe:	f824 0b02 	strh.w	r0, [r4], #2
90013702:	e7fa      	b.n	900136fa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90013704:	46b8      	mov	r8, r7
90013706:	e7d9      	b.n	900136bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90013708:	0e12      	lsrs	r2, r2, #24
9001370a:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90013784 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001370e:	fb02 f10a 	mul.w	r1, r2, sl
90013712:	1c4a      	adds	r2, r1, #1
90013714:	eb02 2221 	add.w	r2, r2, r1, asr #8
90013718:	1212      	asrs	r2, r2, #8
9001371a:	fb02 f507 	mul.w	r5, r2, r7
9001371e:	27ff      	movs	r7, #255	@ 0xff
90013720:	4350      	muls	r0, r2
90013722:	4353      	muls	r3, r2
90013724:	43d2      	mvns	r2, r2
90013726:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001372a:	42b4      	cmp	r4, r6
9001372c:	d220      	bcs.n	90013770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001372e:	f8b4 e000 	ldrh.w	lr, [r4]
90013732:	ea0e 010c 	and.w	r1, lr, ip
90013736:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
9001373a:	f00e 0e1f 	and.w	lr, lr, #31
9001373e:	fb02 0101 	mla	r1, r2, r1, r0
90013742:	fb02 3808 	mla	r8, r2, r8, r3
90013746:	fb02 5e0e 	mla	lr, r2, lr, r5
9001374a:	fb91 f1f7 	sdiv	r1, r1, r7
9001374e:	fb98 f8f7 	sdiv	r8, r8, r7
90013752:	fb9e fef7 	sdiv	lr, lr, r7
90013756:	ea01 010c 	and.w	r1, r1, ip
9001375a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001375e:	f00e 0e1f 	and.w	lr, lr, #31
90013762:	ea41 0108 	orr.w	r1, r1, r8
90013766:	ea41 010e 	orr.w	r1, r1, lr
9001376a:	f824 1b02 	strh.w	r1, [r4], #2
9001376e:	e7dc      	b.n	9001372a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90013770:	b007      	add	sp, #28
90013772:	ecbd 8b02 	vpop	{d8}
90013776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001377a:	bf00      	nop
9001377c:	00000000 	.word	0x00000000
90013780:	447ffffe 	.word	0x447ffffe
90013784:	fffff800 	.word	0xfffff800

90013788 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90013788:	4770      	bx	lr

9001378a <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
9001378a:	4770      	bx	lr

9001378c <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
9001378c:	b510      	push	{r4, lr}
9001378e:	4604      	mov	r4, r0
90013790:	2124      	movs	r1, #36	@ 0x24
90013792:	f016 fc3b 	bl	9002a00c <_ZdlPvj>
90013796:	4620      	mov	r0, r4
90013798:	bd10      	pop	{r4, pc}
	...

9001379c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
9001379c:	094a      	lsrs	r2, r1, #5
9001379e:	4b06      	ldr	r3, [pc, #24]	@ (900137b8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900137a0:	60c1      	str	r1, [r0, #12]
900137a2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900137a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900137aa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900137ae:	4313      	orrs	r3, r2
900137b0:	4319      	orrs	r1, r3
900137b2:	8201      	strh	r1, [r0, #16]
900137b4:	4770      	bx	lr
900137b6:	bf00      	nop
900137b8:	fffff800 	.word	0xfffff800

900137bc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900137bc:	f1a0 0008 	sub.w	r0, r0, #8
900137c0:	e7ec      	b.n	9001379c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900137c2:	bf00      	nop

900137c4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900137c4:	b508      	push	{r3, lr}
900137c6:	4b05      	ldr	r3, [pc, #20]	@ (900137dc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900137c8:	6818      	ldr	r0, [r3, #0]
900137ca:	6803      	ldr	r3, [r0, #0]
900137cc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
900137d0:	4798      	blx	r3
900137d2:	1e43      	subs	r3, r0, #1
900137d4:	4258      	negs	r0, r3
900137d6:	4158      	adcs	r0, r3
900137d8:	bd08      	pop	{r3, pc}
900137da:	bf00      	nop
900137dc:	2402340c 	.word	0x2402340c

900137e0 <_ZN8touchgfx13PainterRGB565D1Ev>:
900137e0:	4770      	bx	lr

900137e2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900137e2:	3808      	subs	r0, #8
900137e4:	4770      	bx	lr

900137e6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900137e6:	b430      	push	{r4, r5}
900137e8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900137ec:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
900137f0:	8a02      	ldrh	r2, [r0, #16]
900137f2:	f89d 3010 	ldrb.w	r3, [sp, #16]
900137f6:	4629      	mov	r1, r5
900137f8:	9202      	str	r2, [sp, #8]
900137fa:	68c2      	ldr	r2, [r0, #12]
900137fc:	4620      	mov	r0, r4
900137fe:	bc30      	pop	{r4, r5}
90013800:	f7ef b886 	b.w	90002910 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90013804 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90013804:	f7ef b87a 	b.w	900028fc <_ZN8touchgfx5paint8tearDownEv>

90013808 <_ZN8touchgfx13PainterRGB565D0Ev>:
90013808:	b510      	push	{r4, lr}
9001380a:	4604      	mov	r4, r0
9001380c:	2114      	movs	r1, #20
9001380e:	f016 fbfd 	bl	9002a00c <_ZdlPvj>
90013812:	4620      	mov	r0, r4
90013814:	bd10      	pop	{r4, pc}

90013816 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90013816:	f1a0 0008 	sub.w	r0, r0, #8
9001381a:	e7f5      	b.n	90013808 <_ZN8touchgfx13PainterRGB565D0Ev>

9001381c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
9001381c:	2300      	movs	r3, #0
9001381e:	84c3      	strh	r3, [r0, #38]	@ 0x26
90013820:	8503      	strh	r3, [r0, #40]	@ 0x28
90013822:	8543      	strh	r3, [r0, #42]	@ 0x2a
90013824:	8583      	strh	r3, [r0, #44]	@ 0x2c
90013826:	6980      	ldr	r0, [r0, #24]
90013828:	b110      	cbz	r0, 90013830 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
9001382a:	6803      	ldr	r3, [r0, #0]
9001382c:	691b      	ldr	r3, [r3, #16]
9001382e:	4718      	bx	r3
90013830:	4770      	bx	lr

90013832 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90013832:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90013836:	4770      	bx	lr

90013838 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90013838:	b538      	push	{r3, r4, r5, lr}
9001383a:	0e0b      	lsrs	r3, r1, #24
9001383c:	4604      	mov	r4, r0
9001383e:	460d      	mov	r5, r1
90013840:	7783      	strb	r3, [r0, #30]
90013842:	6803      	ldr	r3, [r0, #0]
90013844:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013846:	4798      	blx	r3
90013848:	6803      	ldr	r3, [r0, #0]
9001384a:	4629      	mov	r1, r5
9001384c:	689b      	ldr	r3, [r3, #8]
9001384e:	4798      	blx	r3
90013850:	6823      	ldr	r3, [r4, #0]
90013852:	4620      	mov	r0, r4
90013854:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90013856:	4798      	blx	r3
90013858:	61a0      	str	r0, [r4, #24]
9001385a:	bd38      	pop	{r3, r4, r5, pc}

9001385c <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
9001385c:	7741      	strb	r1, [r0, #29]
9001385e:	4770      	bx	lr

90013860 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90013860:	b530      	push	{r4, r5, lr}
90013862:	460d      	mov	r5, r1
90013864:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90013868:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001386a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001386c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001386e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90013870:	682b      	ldr	r3, [r5, #0]
90013872:	6023      	str	r3, [r4, #0]
90013874:	bd30      	pop	{r4, r5, pc}

90013876 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90013876:	b538      	push	{r3, r4, r5, lr}
90013878:	4604      	mov	r4, r0
9001387a:	1d03      	adds	r3, r0, #4
9001387c:	6808      	ldr	r0, [r1, #0]
9001387e:	2500      	movs	r5, #0
90013880:	6849      	ldr	r1, [r1, #4]
90013882:	c303      	stmia	r3!, {r0, r1}
90013884:	6813      	ldr	r3, [r2, #0]
90013886:	f104 0034 	add.w	r0, r4, #52	@ 0x34
9001388a:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
9001388e:	6853      	ldr	r3, [r2, #4]
90013890:	61a5      	str	r5, [r4, #24]
90013892:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90013896:	f006 f95b 	bl	90019b50 <_ZN8touchgfx9Matrix3x35resetEv>
9001389a:	23ff      	movs	r3, #255	@ 0xff
9001389c:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
900138a0:	7763      	strb	r3, [r4, #29]
900138a2:	77a3      	strb	r3, [r4, #30]
900138a4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
900138a8:	6323      	str	r3, [r4, #48]	@ 0x30
900138aa:	2301      	movs	r3, #1
900138ac:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
900138b0:	bd38      	pop	{r3, r4, r5, pc}
	...

900138b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
900138b4:	ee70 7a41 	vsub.f32	s15, s0, s2
900138b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900138bc:	eef5 7a40 	vcmp.f32	s15, #0.0
900138c0:	4605      	mov	r5, r0
900138c2:	ed2d 8b0a 	vpush	{d8-d12}
900138c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900138ca:	b086      	sub	sp, #24
900138cc:	eeb0 ba40 	vmov.f32	s22, s0
900138d0:	6802      	ldr	r2, [r0, #0]
900138d2:	eef0 ba60 	vmov.f32	s23, s1
900138d6:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
900138da:	eef0 aa41 	vmov.f32	s21, s2
900138de:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
900138e0:	eeb0 aa61 	vmov.f32	s20, s3
900138e4:	eeb0 ca42 	vmov.f32	s24, s4
900138e8:	eef0 ca62 	vmov.f32	s25, s5
900138ec:	d112      	bne.n	90013914 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900138ee:	ee70 7ae1 	vsub.f32	s15, s1, s3
900138f2:	eef5 7a40 	vcmp.f32	s15, #0.0
900138f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900138fa:	d10b      	bne.n	90013914 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900138fc:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90013900:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90013902:	3901      	subs	r1, #1
90013904:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90013908:	b006      	add	sp, #24
9001390a:	ecbd 8b0a 	vpop	{d8-d12}
9001390e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90013912:	4710      	bx	r2
90013914:	23ff      	movs	r3, #255	@ 0xff
90013916:	4628      	mov	r0, r5
90013918:	f105 0834 	add.w	r8, r5, #52	@ 0x34
9001391c:	77ab      	strb	r3, [r5, #30]
9001391e:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90013920:	4798      	blx	r3
90013922:	eeb0 0a4b 	vmov.f32	s0, s22
90013926:	eef0 0a6b 	vmov.f32	s1, s23
9001392a:	4604      	mov	r4, r0
9001392c:	4640      	mov	r0, r8
9001392e:	f006 f9be 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013932:	eef0 8a40 	vmov.f32	s17, s0
90013936:	ed8d 0a00 	vstr	s0, [sp]
9001393a:	eeb0 0a6a 	vmov.f32	s0, s21
9001393e:	eef0 9a60 	vmov.f32	s19, s1
90013942:	edcd 0a01 	vstr	s1, [sp, #4]
90013946:	4640      	mov	r0, r8
90013948:	eef0 0a4a 	vmov.f32	s1, s20
9001394c:	f006 f9af 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013950:	eef4 8a40 	vcmp.f32	s17, s0
90013954:	eeb0 8a40 	vmov.f32	s16, s0
90013958:	ed8d 0a02 	vstr	s0, [sp, #8]
9001395c:	eeb0 9a60 	vmov.f32	s18, s1
90013960:	edcd 0a03 	vstr	s1, [sp, #12]
90013964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013968:	eef4 9a60 	vcmp.f32	s19, s1
9001396c:	bf0c      	ite	eq
9001396e:	2301      	moveq	r3, #1
90013970:	2300      	movne	r3, #0
90013972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013976:	eef4 8a40 	vcmp.f32	s17, s0
9001397a:	7463      	strb	r3, [r4, #17]
9001397c:	bf0c      	ite	eq
9001397e:	2301      	moveq	r3, #1
90013980:	2300      	movne	r3, #0
90013982:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013986:	74a3      	strb	r3, [r4, #18]
90013988:	d024      	beq.n	900139d4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
9001398a:	eef4 9a60 	vcmp.f32	s19, s1
9001398e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013992:	d01f      	beq.n	900139d4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90013994:	ee3a aa6b 	vsub.f32	s20, s20, s23
90013998:	4640      	mov	r0, r8
9001399a:	ee7a aacb 	vsub.f32	s21, s21, s22
9001399e:	eeb0 0a4b 	vmov.f32	s0, s22
900139a2:	eeca 7a2c 	vdiv.f32	s15, s20, s25
900139a6:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
900139aa:	eef0 0a6b 	vmov.f32	s1, s23
900139ae:	eea7 0acc 	vfms.f32	s0, s15, s24
900139b2:	eeec 0a87 	vfma.f32	s1, s25, s14
900139b6:	f006 f97a 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900139ba:	ed8d 0a04 	vstr	s0, [sp, #16]
900139be:	ee30 0a68 	vsub.f32	s0, s0, s17
900139c2:	eeb5 0a40 	vcmp.f32	s0, #0.0
900139c6:	edcd 0a05 	vstr	s1, [sp, #20]
900139ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900139ce:	d121      	bne.n	90013a14 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
900139d0:	2301      	movs	r3, #1
900139d2:	74a3      	strb	r3, [r4, #18]
900139d4:	7c63      	ldrb	r3, [r4, #17]
900139d6:	2b00      	cmp	r3, #0
900139d8:	d051      	beq.n	90013a7e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
900139da:	ee39 7a69 	vsub.f32	s14, s18, s19
900139de:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 90013ad4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
900139e2:	eef4 9ac9 	vcmpe.f32	s19, s18
900139e6:	eec6 7a87 	vdiv.f32	s15, s13, s14
900139ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900139ee:	edc4 7a08 	vstr	s15, [r4, #32]
900139f2:	eefd 7ac9 	vcvt.s32.f32	s15, s18
900139f6:	ee17 3a90 	vmov	r3, s15
900139fa:	eefd 7ae9 	vcvt.s32.f32	s15, s19
900139fe:	b21a      	sxth	r2, r3
90013a00:	ee17 3a90 	vmov	r3, s15
90013a04:	bf48      	it	mi
90013a06:	8122      	strhmi	r2, [r4, #8]
90013a08:	b21b      	sxth	r3, r3
90013a0a:	bf56      	itet	pl
90013a0c:	80e2      	strhpl	r2, [r4, #6]
90013a0e:	80e3      	strhmi	r3, [r4, #6]
90013a10:	8123      	strhpl	r3, [r4, #8]
90013a12:	e02c      	b.n	90013a6e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90013a14:	ee70 0ae9 	vsub.f32	s1, s1, s19
90013a18:	eec0 7a80 	vdiv.f32	s15, s1, s0
90013a1c:	eef5 7a40 	vcmp.f32	s15, #0.0
90013a20:	edc4 7a05 	vstr	s15, [r4, #20]
90013a24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013a28:	d102      	bne.n	90013a30 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
90013a2a:	2301      	movs	r3, #1
90013a2c:	7463      	strb	r3, [r4, #17]
90013a2e:	e7d1      	b.n	900139d4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90013a30:	eeb0 7a69 	vmov.f32	s14, s19
90013a34:	ee39 9a69 	vsub.f32	s18, s18, s19
90013a38:	ee38 8a68 	vsub.f32	s16, s16, s17
90013a3c:	eea8 7ae7 	vfms.f32	s14, s17, s15
90013a40:	ed84 7a06 	vstr	s14, [r4, #24]
90013a44:	ee89 7a27 	vdiv.f32	s14, s18, s15
90013a48:	ee38 8a47 	vsub.f32	s16, s16, s14
90013a4c:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 90013ad8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90013a50:	eec7 7a08 	vdiv.f32	s15, s14, s16
90013a54:	ed84 8a07 	vstr	s16, [r4, #28]
90013a58:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90013a5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013a60:	edc4 7a08 	vstr	s15, [r4, #32]
90013a64:	d503      	bpl.n	90013a6e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90013a66:	eeb1 8a48 	vneg.f32	s16, s16
90013a6a:	ed84 8a07 	vstr	s16, [r4, #28]
90013a6e:	60e7      	str	r7, [r4, #12]
90013a70:	7426      	strb	r6, [r4, #16]
90013a72:	61ac      	str	r4, [r5, #24]
90013a74:	b006      	add	sp, #24
90013a76:	ecbd 8b0a 	vpop	{d8-d12}
90013a7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013a7e:	7ca3      	ldrb	r3, [r4, #18]
90013a80:	2b00      	cmp	r3, #0
90013a82:	d0f4      	beq.n	90013a6e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90013a84:	ee38 7a68 	vsub.f32	s14, s16, s17
90013a88:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90013ad4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90013a8c:	eef4 8ac8 	vcmpe.f32	s17, s16
90013a90:	eec6 7a87 	vdiv.f32	s15, s13, s14
90013a94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013a98:	edc4 7a08 	vstr	s15, [r4, #32]
90013a9c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90013aa0:	ee17 3a90 	vmov	r3, s15
90013aa4:	eefd 7ae8 	vcvt.s32.f32	s15, s17
90013aa8:	b21a      	sxth	r2, r3
90013aaa:	ee17 3a90 	vmov	r3, s15
90013aae:	bf48      	it	mi
90013ab0:	8122      	strhmi	r2, [r4, #8]
90013ab2:	b21b      	sxth	r3, r3
90013ab4:	bf56      	itet	pl
90013ab6:	80e2      	strhpl	r2, [r4, #6]
90013ab8:	80e3      	strhmi	r3, [r4, #6]
90013aba:	8123      	strhpl	r3, [r4, #8]
90013abc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90013ac0:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
90013ac4:	1a9b      	subs	r3, r3, r2
90013ac6:	ee07 3a90 	vmov	s15, r3
90013aca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90013ace:	edc4 7a07 	vstr	s15, [r4, #28]
90013ad2:	e7cc      	b.n	90013a6e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90013ad4:	447ffffe 	.word	0x447ffffe
90013ad8:	44800000 	.word	0x44800000

90013adc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90013adc:	b510      	push	{r4, lr}
90013ade:	ed2d 8b02 	vpush	{d8}
90013ae2:	eef0 8a62 	vmov.f32	s17, s5
90013ae6:	2100      	movs	r1, #0
90013ae8:	4604      	mov	r4, r0
90013aea:	eeb0 8a42 	vmov.f32	s16, s4
90013aee:	f015 ffff 	bl	90029af0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90013af2:	eef0 7a68 	vmov.f32	s15, s17
90013af6:	6823      	ldr	r3, [r4, #0]
90013af8:	4620      	mov	r0, r4
90013afa:	689b      	ldr	r3, [r3, #8]
90013afc:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013b00:	ee17 2a90 	vmov	r2, s15
90013b04:	eef0 7a48 	vmov.f32	s15, s16
90013b08:	ecbd 8b02 	vpop	{d8}
90013b0c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013b10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013b14:	ee17 1a90 	vmov	r1, s15
90013b18:	4718      	bx	r3

90013b1a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90013b1a:	b510      	push	{r4, lr}
90013b1c:	ed2d 8b02 	vpush	{d8}
90013b20:	eef0 8a63 	vmov.f32	s17, s7
90013b24:	2100      	movs	r1, #0
90013b26:	4604      	mov	r4, r0
90013b28:	eeb0 8a43 	vmov.f32	s16, s6
90013b2c:	f016 f8a2 	bl	90029c74 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90013b30:	eef0 7a68 	vmov.f32	s15, s17
90013b34:	6823      	ldr	r3, [r4, #0]
90013b36:	4620      	mov	r0, r4
90013b38:	689b      	ldr	r3, [r3, #8]
90013b3a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013b3e:	ee17 2a90 	vmov	r2, s15
90013b42:	eef0 7a48 	vmov.f32	s15, s16
90013b46:	ecbd 8b02 	vpop	{d8}
90013b4a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013b4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013b52:	ee17 1a90 	vmov	r1, s15
90013b56:	4718      	bx	r3

90013b58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90013b58:	b513      	push	{r0, r1, r4, lr}
90013b5a:	4604      	mov	r4, r0
90013b5c:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90013b5e:	f006 f8a6 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013b62:	eef0 7a60 	vmov.f32	s15, s1
90013b66:	4620      	mov	r0, r4
90013b68:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013b6c:	ee17 2a90 	vmov	r2, s15
90013b70:	eef0 7a40 	vmov.f32	s15, s0
90013b74:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013b78:	ee17 1a90 	vmov	r1, s15
90013b7c:	b002      	add	sp, #8
90013b7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013b82:	f015 bf0f 	b.w	900299a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90013b86:	b513      	push	{r0, r1, r4, lr}
90013b88:	4604      	mov	r4, r0
90013b8a:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90013b8c:	f006 f88f 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013b90:	eef0 7a60 	vmov.f32	s15, s1
90013b94:	4620      	mov	r0, r4
90013b96:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013b9a:	ee17 2a90 	vmov	r2, s15
90013b9e:	eef0 7a40 	vmov.f32	s15, s0
90013ba2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013ba6:	ee17 1a90 	vmov	r1, s15
90013baa:	b002      	add	sp, #8
90013bac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013bb0:	f015 bf45 	b.w	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90013bb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90013bb4:	b5f0      	push	{r4, r5, r6, r7, lr}
90013bb6:	2400      	movs	r4, #0
90013bb8:	9f07      	ldr	r7, [sp, #28]
90013bba:	f04f 0e01 	mov.w	lr, #1
90013bbe:	4626      	mov	r6, r4
90013bc0:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90013bc4:	4463      	add	r3, ip
90013bc6:	4563      	cmp	r3, ip
90013bc8:	d02d      	beq.n	90013c26 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90013bca:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90013bce:	2d06      	cmp	r5, #6
90013bd0:	d8f9      	bhi.n	90013bc6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013bd2:	fa0e f505 	lsl.w	r5, lr, r5
90013bd6:	f015 0f66 	tst.w	r5, #102	@ 0x66
90013bda:	d10d      	bne.n	90013bf8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90013bdc:	f015 0f10 	tst.w	r5, #16
90013be0:	d117      	bne.n	90013c12 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90013be2:	072d      	lsls	r5, r5, #28
90013be4:	d5ef      	bpl.n	90013bc6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013be6:	3801      	subs	r0, #1
90013be8:	b91e      	cbnz	r6, 90013bf2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90013bea:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90013bee:	682d      	ldr	r5, [r5, #0]
90013bf0:	600d      	str	r5, [r1, #0]
90013bf2:	b96c      	cbnz	r4, 90013c10 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013bf4:	2601      	movs	r6, #1
90013bf6:	e7e6      	b.n	90013bc6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013bf8:	b926      	cbnz	r6, 90013c04 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90013bfa:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90013bfe:	f853 3c08 	ldr.w	r3, [r3, #-8]
90013c02:	600b      	str	r3, [r1, #0]
90013c04:	b924      	cbnz	r4, 90013c10 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013c06:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90013c0a:	f850 3c04 	ldr.w	r3, [r0, #-4]
90013c0e:	6013      	str	r3, [r2, #0]
90013c10:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013c12:	3801      	subs	r0, #1
90013c14:	b91c      	cbnz	r4, 90013c1e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90013c16:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90013c1a:	6824      	ldr	r4, [r4, #0]
90013c1c:	6014      	str	r4, [r2, #0]
90013c1e:	2e00      	cmp	r6, #0
90013c20:	d1f6      	bne.n	90013c10 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013c22:	2401      	movs	r4, #1
90013c24:	e7cf      	b.n	90013bc6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013c26:	b90e      	cbnz	r6, 90013c2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90013c28:	2300      	movs	r3, #0
90013c2a:	600b      	str	r3, [r1, #0]
90013c2c:	2c00      	cmp	r4, #0
90013c2e:	d1ef      	bne.n	90013c10 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013c30:	2300      	movs	r3, #0
90013c32:	e7ec      	b.n	90013c0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90013c34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90013c34:	b538      	push	{r3, r4, r5, lr}
90013c36:	ed2d 8b0a 	vpush	{d8-d12}
90013c3a:	eef0 ba40 	vmov.f32	s23, s0
90013c3e:	4604      	mov	r4, r0
90013c40:	eeb0 ca60 	vmov.f32	s24, s1
90013c44:	460d      	mov	r5, r1
90013c46:	eef0 aa41 	vmov.f32	s21, s2
90013c4a:	eeb0 ba61 	vmov.f32	s22, s3
90013c4e:	eeb0 9a42 	vmov.f32	s18, s4
90013c52:	eef0 9a62 	vmov.f32	s19, s5
90013c56:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90013c5a:	ee7b 8a29 	vadd.f32	s17, s22, s19
90013c5e:	ee3a 8a89 	vadd.f32	s16, s21, s18
90013c62:	ee68 8a8a 	vmul.f32	s17, s17, s20
90013c66:	ee28 8a0a 	vmul.f32	s16, s16, s20
90013c6a:	ee3c 0a68 	vsub.f32	s0, s24, s17
90013c6e:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90013c72:	ee20 0a00 	vmul.f32	s0, s0, s0
90013c76:	eea7 0aa7 	vfma.f32	s0, s15, s15
90013c7a:	f016 fb9f 	bl	9002a3bc <sqrtf>
90013c7e:	eeb5 0a40 	vcmp.f32	s0, #0.0
90013c82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c86:	d12e      	bne.n	90013ce6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90013c88:	ee79 7a6a 	vsub.f32	s15, s18, s21
90013c8c:	ee39 7acb 	vsub.f32	s14, s19, s22
90013c90:	eeb0 8a6a 	vmov.f32	s16, s21
90013c94:	eef0 8a4b 	vmov.f32	s17, s22
90013c98:	eea7 8a8a 	vfma.f32	s16, s15, s20
90013c9c:	eee7 8a0a 	vfma.f32	s17, s14, s20
90013ca0:	eea7 8a0a 	vfma.f32	s16, s14, s20
90013ca4:	eee7 8aca 	vfms.f32	s17, s15, s20
90013ca8:	2d02      	cmp	r5, #2
90013caa:	dc2f      	bgt.n	90013d0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90013cac:	3501      	adds	r5, #1
90013cae:	eef0 1a4b 	vmov.f32	s3, s22
90013cb2:	eeb0 1a6a 	vmov.f32	s2, s21
90013cb6:	4620      	mov	r0, r4
90013cb8:	4629      	mov	r1, r5
90013cba:	eef0 2a68 	vmov.f32	s5, s17
90013cbe:	eeb0 2a48 	vmov.f32	s4, s16
90013cc2:	eef0 0a4c 	vmov.f32	s1, s24
90013cc6:	eeb0 0a6b 	vmov.f32	s0, s23
90013cca:	f7ff ffb3 	bl	90013c34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90013cce:	eef0 0a68 	vmov.f32	s1, s17
90013cd2:	eeb0 0a48 	vmov.f32	s0, s16
90013cd6:	4620      	mov	r0, r4
90013cd8:	f7ff ff55 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013cdc:	eeb0 ba68 	vmov.f32	s22, s17
90013ce0:	eef0 aa48 	vmov.f32	s21, s16
90013ce4:	e7b9      	b.n	90013c5a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90013ce6:	ee38 8a6b 	vsub.f32	s16, s16, s23
90013cea:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90013cee:	ee78 8acc 	vsub.f32	s17, s17, s24
90013cf2:	ee28 7a27 	vmul.f32	s14, s16, s15
90013cf6:	ee68 7aa7 	vmul.f32	s15, s17, s15
90013cfa:	ee87 8a00 	vdiv.f32	s16, s14, s0
90013cfe:	eec7 8a80 	vdiv.f32	s17, s15, s0
90013d02:	ee3b 8a88 	vadd.f32	s16, s23, s16
90013d06:	ee7c 8a28 	vadd.f32	s17, s24, s17
90013d0a:	e7cd      	b.n	90013ca8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90013d0c:	eef0 0a68 	vmov.f32	s1, s17
90013d10:	4620      	mov	r0, r4
90013d12:	eeb0 0a48 	vmov.f32	s0, s16
90013d16:	f7ff ff36 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d1a:	ecbd 8b0a 	vpop	{d8-d12}
90013d1e:	bd38      	pop	{r3, r4, r5, pc}

90013d20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90013d20:	b510      	push	{r4, lr}
90013d22:	ed2d 8b0a 	vpush	{d8-d12}
90013d26:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90013d2a:	4604      	mov	r4, r0
90013d2c:	eeb0 ca40 	vmov.f32	s24, s0
90013d30:	2b02      	cmp	r3, #2
90013d32:	eeb0 9a60 	vmov.f32	s18, s1
90013d36:	eef0 9a41 	vmov.f32	s19, s2
90013d3a:	eef0 8a61 	vmov.f32	s17, s3
90013d3e:	eeb0 ba42 	vmov.f32	s22, s4
90013d42:	eef0 ba62 	vmov.f32	s23, s5
90013d46:	eeb0 aa43 	vmov.f32	s20, s6
90013d4a:	eef0 aa63 	vmov.f32	s21, s7
90013d4e:	eeb0 8a44 	vmov.f32	s16, s8
90013d52:	eef0 ca64 	vmov.f32	s25, s9
90013d56:	d12c      	bne.n	90013db2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90013d58:	eef0 0a62 	vmov.f32	s1, s5
90013d5c:	eeb0 0a42 	vmov.f32	s0, s4
90013d60:	f7ff ff11 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d64:	ee79 9acb 	vsub.f32	s19, s19, s22
90013d68:	ee7a caec 	vsub.f32	s25, s21, s25
90013d6c:	ee78 8aeb 	vsub.f32	s17, s17, s23
90013d70:	ee3a 8a48 	vsub.f32	s16, s20, s16
90013d74:	ee69 9aac 	vmul.f32	s19, s19, s25
90013d78:	ee28 8a88 	vmul.f32	s16, s17, s16
90013d7c:	eef4 9ac8 	vcmpe.f32	s19, s16
90013d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013d84:	db0f      	blt.n	90013da6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90013d86:	2101      	movs	r1, #1
90013d88:	eef0 2a6a 	vmov.f32	s5, s21
90013d8c:	eeb0 2a4a 	vmov.f32	s4, s20
90013d90:	4620      	mov	r0, r4
90013d92:	eef0 1a6b 	vmov.f32	s3, s23
90013d96:	eeb0 1a4b 	vmov.f32	s2, s22
90013d9a:	eef0 0a49 	vmov.f32	s1, s18
90013d9e:	eeb0 0a4c 	vmov.f32	s0, s24
90013da2:	f7ff ff47 	bl	90013c34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90013da6:	eef0 0a6a 	vmov.f32	s1, s21
90013daa:	4620      	mov	r0, r4
90013dac:	eeb0 0a4a 	vmov.f32	s0, s20
90013db0:	e035      	b.n	90013e1e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90013db2:	2b01      	cmp	r3, #1
90013db4:	d138      	bne.n	90013e28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90013db6:	ee31 4ae2 	vsub.f32	s8, s3, s5
90013dba:	ee33 6a48 	vsub.f32	s12, s6, s16
90013dbe:	ee71 7a42 	vsub.f32	s15, s2, s4
90013dc2:	ee73 6ae4 	vsub.f32	s13, s7, s9
90013dc6:	ee26 7a44 	vnmul.f32	s14, s12, s8
90013dca:	eea7 7aa6 	vfma.f32	s14, s15, s13
90013dce:	eeb5 7a40 	vcmp.f32	s14, #0.0
90013dd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013dd6:	d027      	beq.n	90013e28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90013dd8:	ee28 8a63 	vnmul.f32	s16, s16, s7
90013ddc:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90013de0:	eea4 8a83 	vfma.f32	s16, s9, s6
90013de4:	eee1 8a22 	vfma.f32	s17, s2, s5
90013de8:	ee68 7a67 	vnmul.f32	s15, s16, s15
90013dec:	ee28 8a44 	vnmul.f32	s16, s16, s8
90013df0:	eee6 7a28 	vfma.f32	s15, s12, s17
90013df4:	eea6 8aa8 	vfma.f32	s16, s13, s17
90013df8:	ee87 0a87 	vdiv.f32	s0, s15, s14
90013dfc:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90013e00:	eec8 0a07 	vdiv.f32	s1, s16, s14
90013e04:	ee3c ca40 	vsub.f32	s24, s24, s0
90013e08:	ee39 9a60 	vsub.f32	s18, s18, s1
90013e0c:	ee29 9a09 	vmul.f32	s18, s18, s18
90013e10:	eeac 9a0c 	vfma.f32	s18, s24, s24
90013e14:	eef4 7ac9 	vcmpe.f32	s15, s18
90013e18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013e1c:	db04      	blt.n	90013e28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90013e1e:	f7ff feb2 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013e22:	ecbd 8b0a 	vpop	{d8-d12}
90013e26:	bd10      	pop	{r4, pc}
90013e28:	eef0 0a6b 	vmov.f32	s1, s23
90013e2c:	4620      	mov	r0, r4
90013e2e:	eeb0 0a4b 	vmov.f32	s0, s22
90013e32:	f7ff fea8 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013e36:	e7b6      	b.n	90013da6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90013e38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90013e38:	b510      	push	{r4, lr}
90013e3a:	ed2d 8b0c 	vpush	{d8-d13}
90013e3e:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90013e42:	4604      	mov	r4, r0
90013e44:	eeb0 9a40 	vmov.f32	s18, s0
90013e48:	eef0 9a60 	vmov.f32	s19, s1
90013e4c:	eef0 aa41 	vmov.f32	s21, s2
90013e50:	eeb0 ba61 	vmov.f32	s22, s3
90013e54:	b933      	cbnz	r3, 90013e64 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90013e56:	f7ff fe96 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013e5a:	eef0 0a4b 	vmov.f32	s1, s22
90013e5e:	eeb0 0a6a 	vmov.f32	s0, s21
90013e62:	e015      	b.n	90013e90 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90013e64:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90013e68:	2b02      	cmp	r3, #2
90013e6a:	ee71 8a40 	vsub.f32	s17, s2, s0
90013e6e:	ee31 8ae0 	vsub.f32	s16, s3, s1
90013e72:	ee68 8aa7 	vmul.f32	s17, s17, s15
90013e76:	ee28 8a27 	vmul.f32	s16, s16, s15
90013e7a:	d10f      	bne.n	90013e9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90013e7c:	ee70 0ae8 	vsub.f32	s1, s1, s17
90013e80:	ee30 0a08 	vadd.f32	s0, s0, s16
90013e84:	f7ff fe7f 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013e88:	ee7b 0a68 	vsub.f32	s1, s22, s17
90013e8c:	ee3a 0a88 	vadd.f32	s0, s21, s16
90013e90:	4620      	mov	r0, r4
90013e92:	f7ff fe78 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013e96:	ecbd 8b0c 	vpop	{d8-d13}
90013e9a:	bd10      	pop	{r4, pc}
90013e9c:	f7ff fe73 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013ea0:	eef0 0a69 	vmov.f32	s1, s19
90013ea4:	eeb0 0a49 	vmov.f32	s0, s18
90013ea8:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90013fd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
90013eac:	eeb1 aa68 	vneg.f32	s20, s17
90013eb0:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90013fdc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
90013eb4:	eee8 0a27 	vfma.f32	s1, s16, s15
90013eb8:	4620      	mov	r0, r4
90013eba:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013ebe:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90013fe0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
90013ec2:	eddf ca48 	vldr	s25, [pc, #288]	@ 90013fe4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
90013ec6:	ed9f da48 	vldr	s26, [pc, #288]	@ 90013fe8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90013eca:	eeea 0a2b 	vfma.f32	s1, s20, s23
90013ece:	eea8 0a2b 	vfma.f32	s0, s16, s23
90013ed2:	f7ff fe58 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013ed6:	eef0 0a69 	vmov.f32	s1, s19
90013eda:	eeb0 0a49 	vmov.f32	s0, s18
90013ede:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90013fec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90013ee2:	4620      	mov	r0, r4
90013ee4:	eee8 0a27 	vfma.f32	s1, s16, s15
90013ee8:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013eec:	eeea 0a0c 	vfma.f32	s1, s20, s24
90013ef0:	eea8 0a0c 	vfma.f32	s0, s16, s24
90013ef4:	f7ff fe47 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013ef8:	eef0 0a69 	vmov.f32	s1, s19
90013efc:	eeb0 0a49 	vmov.f32	s0, s18
90013f00:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90013ff0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90013f04:	4620      	mov	r0, r4
90013f06:	eee8 0a27 	vfma.f32	s1, s16, s15
90013f0a:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013f0e:	eeea 0a2c 	vfma.f32	s1, s20, s25
90013f12:	eea8 0a2c 	vfma.f32	s0, s16, s25
90013f16:	f7ff fe36 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013f1a:	eef0 0a69 	vmov.f32	s1, s19
90013f1e:	eeb0 0a49 	vmov.f32	s0, s18
90013f22:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90013ff4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90013f26:	4620      	mov	r0, r4
90013f28:	eee8 0a27 	vfma.f32	s1, s16, s15
90013f2c:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013f30:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013f34:	eea8 0a0d 	vfma.f32	s0, s16, s26
90013f38:	f7ff fe25 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013f3c:	ee79 0a88 	vadd.f32	s1, s19, s16
90013f40:	ee39 0a28 	vadd.f32	s0, s18, s17
90013f44:	4620      	mov	r0, r4
90013f46:	ee70 0ae8 	vsub.f32	s1, s1, s17
90013f4a:	ee30 0a08 	vadd.f32	s0, s0, s16
90013f4e:	f7ff fe1a 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013f52:	eef0 0a69 	vmov.f32	s1, s19
90013f56:	eeb0 0a49 	vmov.f32	s0, s18
90013f5a:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90013ff8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90013f5e:	4620      	mov	r0, r4
90013f60:	eee8 0a27 	vfma.f32	s1, s16, s15
90013f64:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013f68:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013f6c:	eea8 0a0d 	vfma.f32	s0, s16, s26
90013f70:	f7ff fe09 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013f74:	eef0 0a69 	vmov.f32	s1, s19
90013f78:	eeb0 0a49 	vmov.f32	s0, s18
90013f7c:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90013ffc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90013f80:	4620      	mov	r0, r4
90013f82:	eee8 0a27 	vfma.f32	s1, s16, s15
90013f86:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013f8a:	eeea 0a2c 	vfma.f32	s1, s20, s25
90013f8e:	eea8 0a2c 	vfma.f32	s0, s16, s25
90013f92:	f7ff fdf8 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013f96:	eef0 0a69 	vmov.f32	s1, s19
90013f9a:	eeb0 0a49 	vmov.f32	s0, s18
90013f9e:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90014000 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
90013fa2:	4620      	mov	r0, r4
90013fa4:	eee8 0a27 	vfma.f32	s1, s16, s15
90013fa8:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013fac:	eeea 0a0c 	vfma.f32	s1, s20, s24
90013fb0:	eea8 0a0c 	vfma.f32	s0, s16, s24
90013fb4:	f7ff fde7 	bl	90013b86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013fb8:	eef0 0a69 	vmov.f32	s1, s19
90013fbc:	eeb0 0a49 	vmov.f32	s0, s18
90013fc0:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90014004 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
90013fc4:	4620      	mov	r0, r4
90013fc6:	eee8 0a27 	vfma.f32	s1, s16, s15
90013fca:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013fce:	eeea 0a2b 	vfma.f32	s1, s20, s23
90013fd2:	eea8 0a2b 	vfma.f32	s0, s16, s23
90013fd6:	e73e      	b.n	90013e56 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90013fd8:	3d23d70a 	.word	0x3d23d70a
90013fdc:	3e8f5c29 	.word	0x3e8f5c29
90013fe0:	3f19999a 	.word	0x3f19999a
90013fe4:	3f4ccccd 	.word	0x3f4ccccd
90013fe8:	3f75c28f 	.word	0x3f75c28f
90013fec:	3e4ccccd 	.word	0x3e4ccccd
90013ff0:	3ecccccd 	.word	0x3ecccccd
90013ff4:	3f3851ec 	.word	0x3f3851ec
90013ff8:	3fa3d70a 	.word	0x3fa3d70a
90013ffc:	3fcccccd 	.word	0x3fcccccd
90014000:	3fe66666 	.word	0x3fe66666
90014004:	3ffae148 	.word	0x3ffae148

90014008 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90014008:	b570      	push	{r4, r5, r6, lr}
9001400a:	ed2d 8b06 	vpush	{d8-d10}
9001400e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90014012:	eef0 aa40 	vmov.f32	s21, s0
90014016:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
9001401a:	4604      	mov	r4, r0
9001401c:	ee30 8ac8 	vsub.f32	s16, s1, s16
90014020:	ee30 9a49 	vsub.f32	s18, s0, s18
90014024:	eeb0 aa60 	vmov.f32	s20, s1
90014028:	ee28 0a08 	vmul.f32	s0, s16, s16
9001402c:	eea9 0a09 	vfma.f32	s0, s18, s18
90014030:	f016 f9c4 	bl	9002a3bc <sqrtf>
90014034:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90014038:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001403c:	dd36      	ble.n	900140ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
9001403e:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90014042:	2600      	movs	r6, #0
90014044:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90014048:	eec0 6a27 	vdiv.f32	s13, s0, s15
9001404c:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90014050:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90014054:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90014058:	eec8 8a26 	vdiv.f32	s17, s16, s13
9001405c:	ee89 8a26 	vdiv.f32	s16, s18, s13
90014060:	ee70 9a28 	vadd.f32	s19, s0, s17
90014064:	ee78 8aaa 	vadd.f32	s17, s17, s21
90014068:	ee30 9ac8 	vsub.f32	s18, s1, s16
9001406c:	ee3a 8a48 	vsub.f32	s16, s20, s16
90014070:	b1fd      	cbz	r5, 900140b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90014072:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90014076:	eef0 0a49 	vmov.f32	s1, s18
9001407a:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
9001407e:	eeb0 0a69 	vmov.f32	s0, s19
90014082:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
90014086:	4620      	mov	r0, r4
90014088:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
9001408c:	f7ff fd64 	bl	90013b58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90014090:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90014094:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90014098:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
9001409c:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900140a0:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900140a4:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900140a8:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900140ac:	ecbd 8b06 	vpop	{d8-d10}
900140b0:	bd70      	pop	{r4, r5, r6, pc}
900140b2:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900140b6:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900140ba:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900140be:	b16b      	cbz	r3, 900140dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900140c0:	eef0 1a49 	vmov.f32	s3, s18
900140c4:	4620      	mov	r0, r4
900140c6:	eeb0 1a69 	vmov.f32	s2, s19
900140ca:	eef0 0a62 	vmov.f32	s1, s5
900140ce:	eeb0 0a42 	vmov.f32	s0, s4
900140d2:	f7ff feb1 	bl	90013e38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900140d6:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
900140da:	e7db      	b.n	90014094 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
900140dc:	eef0 4a48 	vmov.f32	s9, s16
900140e0:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900140e4:	eeb0 4a68 	vmov.f32	s8, s17
900140e8:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900140ec:	eef0 3a49 	vmov.f32	s7, s18
900140f0:	4620      	mov	r0, r4
900140f2:	eeb0 3a69 	vmov.f32	s6, s19
900140f6:	f7ff fe13 	bl	90013d20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900140fa:	e7cb      	b.n	90014094 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

900140fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
900140fc:	ee07 2a90 	vmov	s15, r2
90014100:	ee07 1a10 	vmov	s14, r1
90014104:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90014108:	eddf 7a04 	vldr	s15, [pc, #16]	@ 9001411c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
9001410c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90014110:	ee60 0aa7 	vmul.f32	s1, s1, s15
90014114:	ee20 0a27 	vmul.f32	s0, s0, s15
90014118:	f7ff bf76 	b.w	90014008 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001411c:	3d000000 	.word	0x3d000000

90014120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90014120:	b538      	push	{r3, r4, r5, lr}
90014122:	ed2d 8b02 	vpush	{d8}
90014126:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
9001412a:	4604      	mov	r4, r0
9001412c:	b31d      	cbz	r5, 90014176 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
9001412e:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90014132:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90014136:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
9001413a:	ee78 8a67 	vsub.f32	s17, s16, s15
9001413e:	ee38 8a27 	vadd.f32	s16, s16, s15
90014142:	eef0 0a68 	vmov.f32	s1, s17
90014146:	f7ff fd07 	bl	90013b58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
9001414a:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
9001414e:	eef0 1a48 	vmov.f32	s3, s16
90014152:	4620      	mov	r0, r4
90014154:	eeb0 0a41 	vmov.f32	s0, s2
90014158:	eef0 0a68 	vmov.f32	s1, s17
9001415c:	f7ff fe6c 	bl	90013e38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90014160:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90014164:	eef0 1a68 	vmov.f32	s3, s17
90014168:	4620      	mov	r0, r4
9001416a:	eef0 0a48 	vmov.f32	s1, s16
9001416e:	eeb0 0a41 	vmov.f32	s0, s2
90014172:	f7ff fe61 	bl	90013e38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90014176:	4628      	mov	r0, r5
90014178:	ecbd 8b02 	vpop	{d8}
9001417c:	bd38      	pop	{r3, r4, r5, pc}

9001417e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
9001417e:	b510      	push	{r4, lr}
90014180:	ed2d 8b02 	vpush	{d8}
90014184:	4604      	mov	r4, r0
90014186:	eeb0 8a40 	vmov.f32	s16, s0
9001418a:	eef0 8a60 	vmov.f32	s17, s1
9001418e:	f7ff ffc7 	bl	90014120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90014192:	b9d0      	cbnz	r0, 900141ca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90014194:	4620      	mov	r0, r4
90014196:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
9001419a:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
9001419e:	eef0 0a68 	vmov.f32	s1, s17
900141a2:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900141a6:	eeb0 0a48 	vmov.f32	s0, s16
900141aa:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900141ae:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900141b2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900141b6:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900141ba:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900141be:	f7ff fdaf 	bl	90013d20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900141c2:	2001      	movs	r0, #1
900141c4:	ecbd 8b02 	vpop	{d8}
900141c8:	bd10      	pop	{r4, pc}
900141ca:	2000      	movs	r0, #0
900141cc:	e7fa      	b.n	900141c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

900141ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
900141ce:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
900141d2:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
900141d6:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
900141da:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
900141de:	f7ff be2b 	b.w	90013e38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

900141e4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
900141e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900141e8:	b089      	sub	sp, #36	@ 0x24
900141ea:	461c      	mov	r4, r3
900141ec:	4682      	mov	sl, r0
900141ee:	4615      	mov	r5, r2
900141f0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900141f4:	f10d 0820 	add.w	r8, sp, #32
900141f8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
900141fa:	9304      	str	r3, [sp, #16]
900141fc:	2300      	movs	r3, #0
900141fe:	9105      	str	r1, [sp, #20]
90014200:	9306      	str	r3, [sp, #24]
90014202:	f848 3d04 	str.w	r3, [r8, #-4]!
90014206:	9b04      	ldr	r3, [sp, #16]
90014208:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
9001420c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90014210:	9b05      	ldr	r3, [sp, #20]
90014212:	429d      	cmp	r5, r3
90014214:	d96d      	bls.n	900142f2 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90014216:	3d01      	subs	r5, #1
90014218:	f819 3005 	ldrb.w	r3, [r9, r5]
9001421c:	2b06      	cmp	r3, #6
9001421e:	d8f7      	bhi.n	90014210 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90014220:	a201      	add	r2, pc, #4	@ (adr r2, 90014228 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
90014222:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90014226:	bf00      	nop
90014228:	90014247 	.word	0x90014247
9001422c:	90014211 	.word	0x90014211
90014230:	90014245 	.word	0x90014245
90014234:	90014269 	.word	0x90014269
90014238:	90014269 	.word	0x90014269
9001423c:	9001426d 	.word	0x9001426d
90014240:	900142ad 	.word	0x900142ad
90014244:	3c02      	subs	r4, #2
90014246:	4650      	mov	r0, sl
90014248:	9400      	str	r4, [sp, #0]
9001424a:	462b      	mov	r3, r5
9001424c:	4642      	mov	r2, r8
9001424e:	a906      	add	r1, sp, #24
90014250:	e9cd 9701 	strd	r9, r7, [sp, #4]
90014254:	f7ff fcae 	bl	90013bb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90014258:	eddd 0a07 	vldr	s1, [sp, #28]
9001425c:	ed9d 0a06 	vldr	s0, [sp, #24]
90014260:	4630      	mov	r0, r6
90014262:	f7ff fed1 	bl	90014008 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90014266:	e7d3      	b.n	90014210 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90014268:	3c01      	subs	r4, #1
9001426a:	e7ec      	b.n	90014246 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
9001426c:	f1a4 0b04 	sub.w	fp, r4, #4
90014270:	3c02      	subs	r4, #2
90014272:	4650      	mov	r0, sl
90014274:	462b      	mov	r3, r5
90014276:	eb07 0484 	add.w	r4, r7, r4, lsl #2
9001427a:	f8cd b000 	str.w	fp, [sp]
9001427e:	4642      	mov	r2, r8
90014280:	a906      	add	r1, sp, #24
90014282:	e9cd 9701 	strd	r9, r7, [sp, #4]
90014286:	f7ff fc95 	bl	90013bb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
9001428a:	eddd 2a07 	vldr	s5, [sp, #28]
9001428e:	ed9d 2a06 	vldr	s4, [sp, #24]
90014292:	4630      	mov	r0, r6
90014294:	ed54 1a01 	vldr	s3, [r4, #-4]
90014298:	ed14 1a02 	vldr	s2, [r4, #-8]
9001429c:	edd4 0a01 	vldr	s1, [r4, #4]
900142a0:	ed94 0a00 	vldr	s0, [r4]
900142a4:	f7ff fc1a 	bl	90013adc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900142a8:	465c      	mov	r4, fp
900142aa:	e7b1      	b.n	90014210 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900142ac:	f1a4 0b06 	sub.w	fp, r4, #6
900142b0:	3c02      	subs	r4, #2
900142b2:	4650      	mov	r0, sl
900142b4:	462b      	mov	r3, r5
900142b6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900142ba:	f8cd b000 	str.w	fp, [sp]
900142be:	4642      	mov	r2, r8
900142c0:	a906      	add	r1, sp, #24
900142c2:	e9cd 9701 	strd	r9, r7, [sp, #4]
900142c6:	f7ff fc75 	bl	90013bb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900142ca:	eddd 3a07 	vldr	s7, [sp, #28]
900142ce:	ed9d 3a06 	vldr	s6, [sp, #24]
900142d2:	4630      	mov	r0, r6
900142d4:	ed54 2a03 	vldr	s5, [r4, #-12]
900142d8:	ed14 2a04 	vldr	s4, [r4, #-16]
900142dc:	ed54 1a01 	vldr	s3, [r4, #-4]
900142e0:	ed14 1a02 	vldr	s2, [r4, #-8]
900142e4:	edd4 0a01 	vldr	s1, [r4, #4]
900142e8:	ed94 0a00 	vldr	s0, [r4]
900142ec:	f7ff fc15 	bl	90013b1a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900142f0:	e7da      	b.n	900142a8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
900142f2:	9b04      	ldr	r3, [sp, #16]
900142f4:	b113      	cbz	r3, 900142fc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
900142f6:	4630      	mov	r0, r6
900142f8:	f7ff ff69 	bl	900141ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
900142fc:	b009      	add	sp, #36	@ 0x24
900142fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014302:	bf00      	nop

90014304 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90014304:	eef0 7a60 	vmov.f32	s15, s1
90014308:	6803      	ldr	r3, [r0, #0]
9001430a:	689b      	ldr	r3, [r3, #8]
9001430c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014310:	ee17 2a90 	vmov	r2, s15
90014314:	eef0 7a40 	vmov.f32	s15, s0
90014318:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001431c:	ee17 1a90 	vmov	r1, s15
90014320:	4718      	bx	r3
	...

90014324 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90014324:	4b04      	ldr	r3, [pc, #16]	@ (90014338 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90014326:	b510      	push	{r4, lr}
90014328:	4604      	mov	r4, r0
9001432a:	f840 3b14 	str.w	r3, [r0], #20
9001432e:	f001 fd0d 	bl	90015d4c <_ZN8touchgfx7OutlineD1Ev>
90014332:	4620      	mov	r0, r4
90014334:	bd10      	pop	{r4, pc}
90014336:	bf00      	nop
90014338:	9002eb5c 	.word	0x9002eb5c

9001433c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
9001433c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014340:	ed2d 8b04 	vpush	{d8-d9}
90014344:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90014348:	b0b5      	sub	sp, #212	@ 0xd4
9001434a:	4605      	mov	r5, r0
9001434c:	468b      	mov	fp, r1
9001434e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90014352:	9206      	str	r2, [sp, #24]
90014354:	461e      	mov	r6, r3
90014356:	2400      	movs	r4, #0
90014358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001435c:	f240 814f 	bls.w	900145fe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90014360:	23ff      	movs	r3, #255	@ 0xff
90014362:	1d02      	adds	r2, r0, #4
90014364:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90014604 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90014368:	f04f 0800 	mov.w	r8, #0
9001436c:	9300      	str	r3, [sp, #0]
9001436e:	af08      	add	r7, sp, #32
90014370:	6981      	ldr	r1, [r0, #24]
90014372:	a808      	add	r0, sp, #32
90014374:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90014376:	eef0 9a49 	vmov.f32	s19, s18
9001437a:	f015 f9c7 	bl	9002970c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001437e:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
90014382:	4ba1      	ldr	r3, [pc, #644]	@ (90014608 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
90014384:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90014388:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001438c:	2201      	movs	r2, #1
9001438e:	9308      	str	r3, [sp, #32]
90014390:	f105 0334 	add.w	r3, r5, #52	@ 0x34
90014394:	edd5 6a08 	vldr	s13, [r5, #32]
90014398:	eeb0 8a49 	vmov.f32	s16, s18
9001439c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900143a0:	9325      	str	r3, [sp, #148]	@ 0x94
900143a2:	f04f 0300 	mov.w	r3, #0
900143a6:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900143aa:	7f6a      	ldrb	r2, [r5, #29]
900143ac:	eef0 8a49 	vmov.f32	s17, s18
900143b0:	bf48      	it	mi
900143b2:	eef1 7a67 	vnegmi.f32	s15, s15
900143b6:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900143ba:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900143be:	46c1      	mov	r9, r8
900143c0:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
900143c4:	f04f 0a01 	mov.w	sl, #1
900143c8:	ee67 7a87 	vmul.f32	s15, s15, s14
900143cc:	7fab      	ldrb	r3, [r5, #30]
900143ce:	942a      	str	r4, [sp, #168]	@ 0xa8
900143d0:	435a      	muls	r2, r3
900143d2:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900143d6:	ee26 7aa7 	vmul.f32	s14, s13, s15
900143da:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900143de:	1c53      	adds	r3, r2, #1
900143e0:	942b      	str	r4, [sp, #172]	@ 0xac
900143e2:	942c      	str	r4, [sp, #176]	@ 0xb0
900143e4:	ee27 7a26 	vmul.f32	s14, s14, s13
900143e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900143ec:	942d      	str	r4, [sp, #180]	@ 0xb4
900143ee:	942e      	str	r4, [sp, #184]	@ 0xb8
900143f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900143f4:	ee67 7a27 	vmul.f32	s15, s14, s15
900143f8:	942f      	str	r4, [sp, #188]	@ 0xbc
900143fa:	9430      	str	r4, [sp, #192]	@ 0xc0
900143fc:	9431      	str	r4, [sp, #196]	@ 0xc4
900143fe:	9432      	str	r4, [sp, #200]	@ 0xc8
90014400:	9433      	str	r4, [sp, #204]	@ 0xcc
90014402:	4644      	mov	r4, r8
90014404:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90014408:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
9001440c:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90014410:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90014414:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90014418:	9b06      	ldr	r3, [sp, #24]
9001441a:	454b      	cmp	r3, r9
9001441c:	f000 80cc 	beq.w	900145b8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90014420:	f109 0301 	add.w	r3, r9, #1
90014424:	9305      	str	r3, [sp, #20]
90014426:	f81b 3009 	ldrb.w	r3, [fp, r9]
9001442a:	2b06      	cmp	r3, #6
9001442c:	d839      	bhi.n	900144a2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001442e:	e8df f003 	tbb	[pc, r3]
90014432:	3b04      	.short	0x3b04
90014434:	817c6f60 	.word	0x817c6f60
90014438:	a0          	.byte	0xa0
90014439:	00          	.byte	0x00
9001443a:	45c1      	cmp	r9, r8
9001443c:	d92b      	bls.n	90014496 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001443e:	eef0 0a49 	vmov.f32	s1, s18
90014442:	4638      	mov	r0, r7
90014444:	eeb0 0a69 	vmov.f32	s0, s19
90014448:	f7ff fdde 	bl	90014008 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001444c:	4638      	mov	r0, r7
9001444e:	f7ff fe67 	bl	90014120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90014452:	4681      	mov	r9, r0
90014454:	b9f8      	cbnz	r0, 90014496 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90014456:	eef0 0a49 	vmov.f32	s1, s18
9001445a:	4638      	mov	r0, r7
9001445c:	eeb0 0a69 	vmov.f32	s0, s19
90014460:	f7ff fe8d 	bl	9001417e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90014464:	4628      	mov	r0, r5
90014466:	4623      	mov	r3, r4
90014468:	9a05      	ldr	r2, [sp, #20]
9001446a:	4641      	mov	r1, r8
9001446c:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90014470:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90014474:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90014478:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
9001447c:	e9cd 9702 	strd	r9, r7, [sp, #8]
90014480:	e9cd b600 	strd	fp, r6, [sp]
90014484:	f7ff feae 	bl	900141e4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90014488:	eef0 0a49 	vmov.f32	s1, s18
9001448c:	eeb0 0a69 	vmov.f32	s0, s19
90014490:	4638      	mov	r0, r7
90014492:	f7ff fe74 	bl	9001417e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90014496:	eeb0 8a49 	vmov.f32	s16, s18
9001449a:	f8dd 8014 	ldr.w	r8, [sp, #20]
9001449e:	eef0 8a69 	vmov.f32	s17, s19
900144a2:	f8dd 9014 	ldr.w	r9, [sp, #20]
900144a6:	e7b7      	b.n	90014418 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
900144a8:	45c1      	cmp	r9, r8
900144aa:	d90d      	bls.n	900144c8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900144ac:	4638      	mov	r0, r7
900144ae:	f7ff fe37 	bl	90014120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900144b2:	b948      	cbnz	r0, 900144c8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900144b4:	4623      	mov	r3, r4
900144b6:	464a      	mov	r2, r9
900144b8:	4641      	mov	r1, r8
900144ba:	4628      	mov	r0, r5
900144bc:	e9cd a702 	strd	sl, r7, [sp, #8]
900144c0:	e9cd b600 	strd	fp, r6, [sp]
900144c4:	f7ff fe8e 	bl	900141e4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900144c8:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900144cc:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900144d0:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900144d4:	3402      	adds	r4, #2
900144d6:	edd3 8a00 	vldr	s17, [r3]
900144da:	46c8      	mov	r8, r9
900144dc:	ed93 8a01 	vldr	s16, [r3, #4]
900144e0:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
900144e4:	eef0 9a68 	vmov.f32	s19, s17
900144e8:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
900144ec:	eeb0 9a48 	vmov.f32	s18, s16
900144f0:	e7d7      	b.n	900144a2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900144f2:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900144f6:	4638      	mov	r0, r7
900144f8:	3402      	adds	r4, #2
900144fa:	edd3 8a00 	vldr	s17, [r3]
900144fe:	ed93 8a01 	vldr	s16, [r3, #4]
90014502:	eeb0 0a68 	vmov.f32	s0, s17
90014506:	eef0 0a48 	vmov.f32	s1, s16
9001450a:	f7ff fd7d 	bl	90014008 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001450e:	e7c8      	b.n	900144a2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014510:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014514:	edd3 8a00 	vldr	s17, [r3]
90014518:	eef0 0a48 	vmov.f32	s1, s16
9001451c:	4638      	mov	r0, r7
9001451e:	eeb0 0a68 	vmov.f32	s0, s17
90014522:	3401      	adds	r4, #1
90014524:	f7ff fd70 	bl	90014008 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90014528:	e7bb      	b.n	900144a2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001452a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001452e:	ed93 8a00 	vldr	s16, [r3]
90014532:	e7f1      	b.n	90014518 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90014534:	00a3      	lsls	r3, r4, #2
90014536:	eef0 0a48 	vmov.f32	s1, s16
9001453a:	eeb0 0a68 	vmov.f32	s0, s17
9001453e:	4638      	mov	r0, r7
90014540:	f103 0208 	add.w	r2, r3, #8
90014544:	f103 090c 	add.w	r9, r3, #12
90014548:	4433      	add	r3, r6
9001454a:	3404      	adds	r4, #4
9001454c:	4432      	add	r2, r6
9001454e:	44b1      	add	r9, r6
90014550:	edd3 1a01 	vldr	s3, [r3, #4]
90014554:	ed92 2a00 	vldr	s4, [r2]
90014558:	edd9 2a00 	vldr	s5, [r9]
9001455c:	ed93 1a00 	vldr	s2, [r3]
90014560:	9207      	str	r2, [sp, #28]
90014562:	f7ff fabb 	bl	90013adc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90014566:	9a07      	ldr	r2, [sp, #28]
90014568:	ed99 8a00 	vldr	s16, [r9]
9001456c:	edd2 8a00 	vldr	s17, [r2]
90014570:	e797      	b.n	900144a2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014572:	00a3      	lsls	r3, r4, #2
90014574:	eef0 0a48 	vmov.f32	s1, s16
90014578:	eeb0 0a68 	vmov.f32	s0, s17
9001457c:	4638      	mov	r0, r7
9001457e:	f103 0210 	add.w	r2, r3, #16
90014582:	f103 0914 	add.w	r9, r3, #20
90014586:	4433      	add	r3, r6
90014588:	3406      	adds	r4, #6
9001458a:	4432      	add	r2, r6
9001458c:	44b1      	add	r9, r6
9001458e:	edd3 2a03 	vldr	s5, [r3, #12]
90014592:	ed92 3a00 	vldr	s6, [r2]
90014596:	edd9 3a00 	vldr	s7, [r9]
9001459a:	ed93 2a02 	vldr	s4, [r3, #8]
9001459e:	edd3 1a01 	vldr	s3, [r3, #4]
900145a2:	ed93 1a00 	vldr	s2, [r3]
900145a6:	9207      	str	r2, [sp, #28]
900145a8:	f7ff fab7 	bl	90013b1a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900145ac:	9a07      	ldr	r2, [sp, #28]
900145ae:	ed99 8a00 	vldr	s16, [r9]
900145b2:	edd2 8a00 	vldr	s17, [r2]
900145b6:	e774      	b.n	900144a2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900145b8:	9b06      	ldr	r3, [sp, #24]
900145ba:	af08      	add	r7, sp, #32
900145bc:	4543      	cmp	r3, r8
900145be:	d90f      	bls.n	900145e0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900145c0:	4638      	mov	r0, r7
900145c2:	f7ff fdad 	bl	90014120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900145c6:	b958      	cbnz	r0, 900145e0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900145c8:	2301      	movs	r3, #1
900145ca:	9703      	str	r7, [sp, #12]
900145cc:	f8cd b000 	str.w	fp, [sp]
900145d0:	4641      	mov	r1, r8
900145d2:	9a06      	ldr	r2, [sp, #24]
900145d4:	4628      	mov	r0, r5
900145d6:	e9cd 6301 	strd	r6, r3, [sp, #4]
900145da:	4623      	mov	r3, r4
900145dc:	f7ff fe02 	bl	900141e4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900145e0:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
900145e4:	4638      	mov	r0, r7
900145e6:	f015 f925 	bl	90029834 <_ZN8touchgfx6Canvas6renderEh>
900145ea:	4604      	mov	r4, r0
900145ec:	4638      	mov	r0, r7
900145ee:	f7ff fe99 	bl	90014324 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900145f2:	4620      	mov	r0, r4
900145f4:	b035      	add	sp, #212	@ 0xd4
900145f6:	ecbd 8b04 	vpop	{d8-d9}
900145fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900145fe:	2401      	movs	r4, #1
90014600:	e7f7      	b.n	900145f2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
90014602:	bf00      	nop
90014604:	00000000 	.word	0x00000000
90014608:	9002e370 	.word	0x9002e370

9001460c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
9001460c:	b510      	push	{r4, lr}
9001460e:	4604      	mov	r4, r0
90014610:	f7ff fe88 	bl	90014324 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90014614:	21b0      	movs	r1, #176	@ 0xb0
90014616:	4620      	mov	r0, r4
90014618:	f015 fcf8 	bl	9002a00c <_ZdlPvj>
9001461c:	4620      	mov	r0, r4
9001461e:	bd10      	pop	{r4, pc}

90014620 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90014620:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014624:	4698      	mov	r8, r3
90014626:	23ff      	movs	r3, #255	@ 0xff
90014628:	4607      	mov	r7, r0
9001462a:	4689      	mov	r9, r1
9001462c:	4692      	mov	sl, r2
9001462e:	1d02      	adds	r2, r0, #4
90014630:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90014634:	2400      	movs	r4, #0
90014636:	44ca      	add	sl, r9
90014638:	ed2d 8b06 	vpush	{d8-d10}
9001463c:	b0aa      	sub	sp, #168	@ 0xa8
9001463e:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90014844 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90014642:	9300      	str	r3, [sp, #0]
90014644:	eef0 8a48 	vmov.f32	s17, s16
90014648:	6981      	ldr	r1, [r0, #24]
9001464a:	a80d      	add	r0, sp, #52	@ 0x34
9001464c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
9001464e:	f015 f85d 	bl	9002970c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90014652:	7f3b      	ldrb	r3, [r7, #28]
90014654:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90014844 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90014658:	4628      	mov	r0, r5
9001465a:	1e5a      	subs	r2, r3, #1
9001465c:	eeb0 0a60 	vmov.f32	s0, s1
90014660:	4253      	negs	r3, r2
90014662:	4153      	adcs	r3, r2
90014664:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90014668:	f005 fb21 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001466c:	eeb0 9a40 	vmov.f32	s18, s0
90014670:	eef0 9a60 	vmov.f32	s19, s1
90014674:	45ca      	cmp	sl, r9
90014676:	f000 80cd 	beq.w	90014814 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
9001467a:	f819 3b01 	ldrb.w	r3, [r9], #1
9001467e:	2b06      	cmp	r3, #6
90014680:	d8f8      	bhi.n	90014674 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014682:	e8df f003 	tbb	[pc, r3]
90014686:	0804      	.short	0x0804
90014688:	58533f2a 	.word	0x58533f2a
9001468c:	8a          	.byte	0x8a
9001468d:	00          	.byte	0x00
9001468e:	a80d      	add	r0, sp, #52	@ 0x34
90014690:	f015 f8ae 	bl	900297f0 <_ZN8touchgfx6Canvas5closeEv>
90014694:	e7ee      	b.n	90014674 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014696:	eb08 0384 	add.w	r3, r8, r4, lsl #2
9001469a:	4628      	mov	r0, r5
9001469c:	ed93 8a01 	vldr	s16, [r3, #4]
900146a0:	edd3 8a00 	vldr	s17, [r3]
900146a4:	eef0 0a48 	vmov.f32	s1, s16
900146a8:	eeb0 0a68 	vmov.f32	s0, s17
900146ac:	f005 faff 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900146b0:	a80d      	add	r0, sp, #52	@ 0x34
900146b2:	eef0 7a60 	vmov.f32	s15, s1
900146b6:	eeb0 9a40 	vmov.f32	s18, s0
900146ba:	eef0 9a60 	vmov.f32	s19, s1
900146be:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900146c2:	ee17 2a90 	vmov	r2, s15
900146c6:	eef0 7a40 	vmov.f32	s15, s0
900146ca:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900146ce:	ee17 1a90 	vmov	r1, s15
900146d2:	f015 f967 	bl	900299a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900146d6:	3402      	adds	r4, #2
900146d8:	e7cc      	b.n	90014674 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900146da:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900146de:	4628      	mov	r0, r5
900146e0:	edd3 8a00 	vldr	s17, [r3]
900146e4:	ed93 8a01 	vldr	s16, [r3, #4]
900146e8:	eeb0 0a68 	vmov.f32	s0, s17
900146ec:	eef0 0a48 	vmov.f32	s1, s16
900146f0:	f005 fadd 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900146f4:	a80d      	add	r0, sp, #52	@ 0x34
900146f6:	eeb0 9a40 	vmov.f32	s18, s0
900146fa:	eef0 9a60 	vmov.f32	s19, s1
900146fe:	f7ff fe01 	bl	90014304 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90014702:	e7e8      	b.n	900146d6 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90014704:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014708:	edd3 8a00 	vldr	s17, [r3]
9001470c:	eef0 0a48 	vmov.f32	s1, s16
90014710:	4628      	mov	r0, r5
90014712:	eeb0 0a68 	vmov.f32	s0, s17
90014716:	3401      	adds	r4, #1
90014718:	f005 fac9 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001471c:	a80d      	add	r0, sp, #52	@ 0x34
9001471e:	eef0 9a60 	vmov.f32	s19, s1
90014722:	eeb0 9a40 	vmov.f32	s18, s0
90014726:	f7ff fded 	bl	90014304 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9001472a:	e7a3      	b.n	90014674 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001472c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014730:	ed93 8a00 	vldr	s16, [r3]
90014734:	e7ea      	b.n	9001470c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90014736:	1ca3      	adds	r3, r4, #2
90014738:	4628      	mov	r0, r5
9001473a:	3404      	adds	r4, #4
9001473c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90014740:	ed53 0a01 	vldr	s1, [r3, #-4]
90014744:	ed13 0a02 	vldr	s0, [r3, #-8]
90014748:	edd3 8a00 	vldr	s17, [r3]
9001474c:	ed93 8a01 	vldr	s16, [r3, #4]
90014750:	f005 faad 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014754:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90014758:	eeb0 0a68 	vmov.f32	s0, s17
9001475c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90014760:	eef0 0a48 	vmov.f32	s1, s16
90014764:	4628      	mov	r0, r5
90014766:	f005 faa2 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001476a:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
9001476e:	eef0 2a60 	vmov.f32	s5, s1
90014772:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90014776:	eeb0 2a40 	vmov.f32	s4, s0
9001477a:	a80d      	add	r0, sp, #52	@ 0x34
9001477c:	eeb0 aa40 	vmov.f32	s20, s0
90014780:	eef0 aa60 	vmov.f32	s21, s1
90014784:	eeb0 0a49 	vmov.f32	s0, s18
90014788:	eef0 0a69 	vmov.f32	s1, s19
9001478c:	f7ff f9a6 	bl	90013adc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90014790:	eef0 9a6a 	vmov.f32	s19, s21
90014794:	eeb0 9a4a 	vmov.f32	s18, s20
90014798:	e76c      	b.n	90014674 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001479a:	1d26      	adds	r6, r4, #4
9001479c:	4628      	mov	r0, r5
9001479e:	3406      	adds	r4, #6
900147a0:	eb08 0686 	add.w	r6, r8, r6, lsl #2
900147a4:	ed56 0a03 	vldr	s1, [r6, #-12]
900147a8:	ed16 0a04 	vldr	s0, [r6, #-16]
900147ac:	edd6 8a00 	vldr	s17, [r6]
900147b0:	ed96 8a01 	vldr	s16, [r6, #4]
900147b4:	f005 fa7b 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900147b8:	ed8d 0a07 	vstr	s0, [sp, #28]
900147bc:	4628      	mov	r0, r5
900147be:	ed16 0a02 	vldr	s0, [r6, #-8]
900147c2:	edcd 0a08 	vstr	s1, [sp, #32]
900147c6:	ed56 0a01 	vldr	s1, [r6, #-4]
900147ca:	f005 fa70 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900147ce:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
900147d2:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900147d6:	eeb0 0a68 	vmov.f32	s0, s17
900147da:	eef0 0a48 	vmov.f32	s1, s16
900147de:	4628      	mov	r0, r5
900147e0:	f005 fa65 	bl	90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900147e4:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
900147e8:	eeb0 3a40 	vmov.f32	s6, s0
900147ec:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
900147f0:	eef0 3a60 	vmov.f32	s7, s1
900147f4:	eddd 1a08 	vldr	s3, [sp, #32]
900147f8:	eeb0 aa40 	vmov.f32	s20, s0
900147fc:	ed9d 1a07 	vldr	s2, [sp, #28]
90014800:	eef0 aa60 	vmov.f32	s21, s1
90014804:	a80d      	add	r0, sp, #52	@ 0x34
90014806:	eef0 0a69 	vmov.f32	s1, s19
9001480a:	eeb0 0a49 	vmov.f32	s0, s18
9001480e:	f7ff f984 	bl	90013b1a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90014812:	e7bd      	b.n	90014790 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90014814:	7f7b      	ldrb	r3, [r7, #29]
90014816:	a80d      	add	r0, sp, #52	@ 0x34
90014818:	7fb9      	ldrb	r1, [r7, #30]
9001481a:	4359      	muls	r1, r3
9001481c:	1c4b      	adds	r3, r1, #1
9001481e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90014822:	f3c1 2107 	ubfx	r1, r1, #8, #8
90014826:	f015 f805 	bl	90029834 <_ZN8touchgfx6Canvas6renderEh>
9001482a:	4b07      	ldr	r3, [pc, #28]	@ (90014848 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
9001482c:	4604      	mov	r4, r0
9001482e:	a812      	add	r0, sp, #72	@ 0x48
90014830:	930d      	str	r3, [sp, #52]	@ 0x34
90014832:	f001 fa8b 	bl	90015d4c <_ZN8touchgfx7OutlineD1Ev>
90014836:	4620      	mov	r0, r4
90014838:	b02a      	add	sp, #168	@ 0xa8
9001483a:	ecbd 8b06 	vpop	{d8-d10}
9001483e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90014842:	bf00      	nop
90014844:	00000000 	.word	0x00000000
90014848:	9002eb5c 	.word	0x9002eb5c

9001484c <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
9001484c:	b410      	push	{r4}
9001484e:	7f04      	ldrb	r4, [r0, #28]
90014850:	b11c      	cbz	r4, 9001485a <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90014852:	f85d 4b04 	ldr.w	r4, [sp], #4
90014856:	f7ff bee3 	b.w	90014620 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
9001485a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001485e:	f7ff bd6d 	b.w	9001433c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

90014862 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90014862:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90014866:	4691      	mov	r9, r2
90014868:	4602      	mov	r2, r0
9001486a:	4606      	mov	r6, r0
9001486c:	4688      	mov	r8, r1
9001486e:	f852 0f26 	ldr.w	r0, [r2, #38]!
90014872:	469a      	mov	sl, r3
90014874:	ab02      	add	r3, sp, #8
90014876:	af02      	add	r7, sp, #8
90014878:	6851      	ldr	r1, [r2, #4]
9001487a:	c303      	stmia	r3!, {r0, r1}
9001487c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90014880:	2b00      	cmp	r3, #0
90014882:	dd2f      	ble.n	900148e4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90014884:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90014888:	2c00      	cmp	r4, #0
9001488a:	dd2b      	ble.n	900148e4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
9001488c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90014890:	441c      	add	r4, r3
90014892:	b2a4      	uxth	r4, r4
90014894:	b225      	sxth	r5, r4
90014896:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001489a:	42ab      	cmp	r3, r5
9001489c:	da22      	bge.n	900148e4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
9001489e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900148a0:	464a      	mov	r2, r9
900148a2:	9701      	str	r7, [sp, #4]
900148a4:	4641      	mov	r1, r8
900148a6:	9300      	str	r3, [sp, #0]
900148a8:	4630      	mov	r0, r6
900148aa:	4653      	mov	r3, sl
900148ac:	f7ff ffce 	bl	9001484c <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
900148b0:	b940      	cbnz	r0, 900148c4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
900148b2:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900148b6:	2b01      	cmp	r3, #1
900148b8:	d004      	beq.n	900148c4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
900148ba:	3301      	adds	r3, #1
900148bc:	105b      	asrs	r3, r3, #1
900148be:	f8ad 300e 	strh.w	r3, [sp, #14]
900148c2:	e7ec      	b.n	9001489e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
900148c4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
900148c8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900148cc:	4413      	add	r3, r2
900148ce:	b29b      	uxth	r3, r3
900148d0:	441a      	add	r2, r3
900148d2:	f8ad 300a 	strh.w	r3, [sp, #10]
900148d6:	b212      	sxth	r2, r2
900148d8:	4295      	cmp	r5, r2
900148da:	dadc      	bge.n	90014896 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
900148dc:	1ae3      	subs	r3, r4, r3
900148de:	f8ad 300e 	strh.w	r3, [sp, #14]
900148e2:	e7d8      	b.n	90014896 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
900148e4:	b004      	add	sp, #16
900148e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900148ea <_ZN8touchgfx6CircleD1Ev>:
900148ea:	4770      	bx	lr

900148ec <_ZN8touchgfx6CircleD0Ev>:
900148ec:	b510      	push	{r4, lr}
900148ee:	4604      	mov	r4, r0
900148f0:	2148      	movs	r1, #72	@ 0x48
900148f2:	f015 fb8b 	bl	9002a00c <_ZdlPvj>
900148f6:	4620      	mov	r0, r4
900148f8:	bd10      	pop	{r4, pc}

900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
900148fa:	b507      	push	{r0, r1, r2, lr}
900148fc:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
90014900:	ab01      	add	r3, sp, #4
90014902:	6809      	ldr	r1, [r1, #0]
90014904:	6800      	ldr	r0, [r0, #0]
90014906:	f005 faeb 	bl	90019ee0 <_ZN8touchgfx6muldivElllRl>
9001490a:	b003      	add	sp, #12
9001490c:	f85d fb04 	ldr.w	pc, [sp], #4

90014910 <_ZN8touchgfx7CWRUtil4sineEi>:
90014910:	f44f 73b4 	mov.w	r3, #360	@ 0x168
90014914:	fb90 f2f3 	sdiv	r2, r0, r3
90014918:	fb02 0013 	mls	r0, r2, r3, r0
9001491c:	2800      	cmp	r0, #0
9001491e:	bfb8      	it	lt
90014920:	18c0      	addlt	r0, r0, r3
90014922:	4b0a      	ldr	r3, [pc, #40]	@ (9001494c <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90014924:	285a      	cmp	r0, #90	@ 0x5a
90014926:	dc02      	bgt.n	9001492e <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90014928:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001492c:	4770      	bx	lr
9001492e:	28b4      	cmp	r0, #180	@ 0xb4
90014930:	dc02      	bgt.n	90014938 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90014932:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
90014936:	e7f7      	b.n	90014928 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90014938:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
9001493c:	bfd4      	ite	le
9001493e:	38b4      	suble	r0, #180	@ 0xb4
90014940:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
90014944:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90014948:	4240      	negs	r0, r0
9001494a:	4770      	bx	lr
9001494c:	9002e3c8 	.word	0x9002e3c8

90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90014950:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
90014954:	fb90 f2f3 	sdiv	r2, r0, r3
90014958:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001495a:	fb02 0013 	mls	r0, r2, r3, r0
9001495e:	2800      	cmp	r0, #0
90014960:	bfb8      	it	lt
90014962:	18c0      	addlt	r0, r0, r3
90014964:	1144      	asrs	r4, r0, #5
90014966:	f000 061f 	and.w	r6, r0, #31
9001496a:	4620      	mov	r0, r4
9001496c:	f7ff ffd0 	bl	90014910 <_ZN8touchgfx7CWRUtil4sineEi>
90014970:	4605      	mov	r5, r0
90014972:	b90e      	cbnz	r6, 90014978 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90014974:	b002      	add	sp, #8
90014976:	bd70      	pop	{r4, r5, r6, pc}
90014978:	1c60      	adds	r0, r4, #1
9001497a:	f7ff ffc9 	bl	90014910 <_ZN8touchgfx7CWRUtil4sineEi>
9001497e:	ab01      	add	r3, sp, #4
90014980:	2220      	movs	r2, #32
90014982:	4631      	mov	r1, r6
90014984:	1b40      	subs	r0, r0, r5
90014986:	f005 faab 	bl	90019ee0 <_ZN8touchgfx6muldivElllRl>
9001498a:	4428      	add	r0, r5
9001498c:	e7f2      	b.n	90014974 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
9001498e:	b508      	push	{r3, lr}
90014990:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
90014994:	f7ff ffdc 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014998:	bd08      	pop	{r3, pc}
	...

9001499c <_ZN8touchgfx6CircleC1Ev>:
9001499c:	b510      	push	{r4, lr}
9001499e:	4604      	mov	r4, r0
900149a0:	f000 fd04 	bl	900153ac <_ZN8touchgfx12CanvasWidgetC1Ev>
900149a4:	4b08      	ldr	r3, [pc, #32]	@ (900149c8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
900149a6:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
900149aa:	4620      	mov	r0, r4
900149ac:	6023      	str	r3, [r4, #0]
900149ae:	2300      	movs	r3, #0
900149b0:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
900149b4:	f24b 4205 	movw	r2, #46085	@ 0xb405
900149b8:	60a3      	str	r3, [r4, #8]
900149ba:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
900149be:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
900149c2:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
900149c6:	bd10      	pop	{r4, pc}
900149c8:	9002e488 	.word	0x9002e488

900149cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
900149cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900149d0:	428a      	cmp	r2, r1
900149d2:	4680      	mov	r8, r0
900149d4:	4610      	mov	r0, r2
900149d6:	4699      	mov	r9, r3
900149d8:	bfaa      	itet	ge
900149da:	460a      	movge	r2, r1
900149dc:	460b      	movlt	r3, r1
900149de:	4603      	movge	r3, r0
900149e0:	b085      	sub	sp, #20
900149e2:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
900149e6:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
900149ea:	1a99      	subs	r1, r3, r2
900149ec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900149ee:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
900149f2:	bfa4      	itt	ge
900149f4:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
900149f8:	2200      	movge	r2, #0
900149fa:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
900149fe:	9300      	str	r3, [sp, #0]
90014a00:	f102 0b01 	add.w	fp, r2, #1
90014a04:	2c00      	cmp	r4, #0
90014a06:	f040 80ae 	bne.w	90014b66 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
90014a0a:	4610      	mov	r0, r2
90014a0c:	9201      	str	r2, [sp, #4]
90014a0e:	f7ff ff9f 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014a12:	a903      	add	r1, sp, #12
90014a14:	9003      	str	r0, [sp, #12]
90014a16:	4650      	mov	r0, sl
90014a18:	f7ff ff6f 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014a1c:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90014a20:	9a01      	ldr	r2, [sp, #4]
90014a22:	4408      	add	r0, r1
90014a24:	f8d9 1000 	ldr.w	r1, [r9]
90014a28:	4281      	cmp	r1, r0
90014a2a:	bfc8      	it	gt
90014a2c:	f8c9 0000 	strgt.w	r0, [r9]
90014a30:	6839      	ldr	r1, [r7, #0]
90014a32:	4288      	cmp	r0, r1
90014a34:	bfc8      	it	gt
90014a36:	6038      	strgt	r0, [r7, #0]
90014a38:	4610      	mov	r0, r2
90014a3a:	f7ff ffa8 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014a3e:	a903      	add	r1, sp, #12
90014a40:	9003      	str	r0, [sp, #12]
90014a42:	4650      	mov	r0, sl
90014a44:	f7ff ff59 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014a48:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90014a4c:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90014a50:	1a10      	subs	r0, r2, r0
90014a52:	6832      	ldr	r2, [r6, #0]
90014a54:	4282      	cmp	r2, r0
90014a56:	bfc8      	it	gt
90014a58:	6030      	strgt	r0, [r6, #0]
90014a5a:	682a      	ldr	r2, [r5, #0]
90014a5c:	4290      	cmp	r0, r2
90014a5e:	fb9b f2f1 	sdiv	r2, fp, r1
90014a62:	fb01 b212 	mls	r2, r1, r2, fp
90014a66:	bfc8      	it	gt
90014a68:	6028      	strgt	r0, [r5, #0]
90014a6a:	1a8a      	subs	r2, r1, r2
90014a6c:	fb92 f0f1 	sdiv	r0, r2, r1
90014a70:	fb01 2210 	mls	r2, r1, r0, r2
90014a74:	4493      	add	fp, r2
90014a76:	9b00      	ldr	r3, [sp, #0]
90014a78:	455b      	cmp	r3, fp
90014a7a:	db2a      	blt.n	90014ad2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
90014a7c:	4658      	mov	r0, fp
90014a7e:	f7ff ff67 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014a82:	a903      	add	r1, sp, #12
90014a84:	9003      	str	r0, [sp, #12]
90014a86:	4650      	mov	r0, sl
90014a88:	f7ff ff37 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014a8c:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90014a90:	4410      	add	r0, r2
90014a92:	f8d9 2000 	ldr.w	r2, [r9]
90014a96:	4282      	cmp	r2, r0
90014a98:	bfc8      	it	gt
90014a9a:	f8c9 0000 	strgt.w	r0, [r9]
90014a9e:	683a      	ldr	r2, [r7, #0]
90014aa0:	4290      	cmp	r0, r2
90014aa2:	bfc8      	it	gt
90014aa4:	6038      	strgt	r0, [r7, #0]
90014aa6:	4658      	mov	r0, fp
90014aa8:	f7ff ff71 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014aac:	a903      	add	r1, sp, #12
90014aae:	9003      	str	r0, [sp, #12]
90014ab0:	4650      	mov	r0, sl
90014ab2:	f7ff ff22 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014ab6:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90014aba:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90014abe:	1a10      	subs	r0, r2, r0
90014ac0:	6832      	ldr	r2, [r6, #0]
90014ac2:	4282      	cmp	r2, r0
90014ac4:	bfc8      	it	gt
90014ac6:	6030      	strgt	r0, [r6, #0]
90014ac8:	682a      	ldr	r2, [r5, #0]
90014aca:	4290      	cmp	r0, r2
90014acc:	bfc8      	it	gt
90014ace:	6028      	strgt	r0, [r5, #0]
90014ad0:	e7d1      	b.n	90014a76 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
90014ad2:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90014ad6:	9b00      	ldr	r3, [sp, #0]
90014ad8:	455b      	cmp	r3, fp
90014ada:	dd27      	ble.n	90014b2c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
90014adc:	4618      	mov	r0, r3
90014ade:	f7ff ff37 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014ae2:	a903      	add	r1, sp, #12
90014ae4:	9003      	str	r0, [sp, #12]
90014ae6:	4650      	mov	r0, sl
90014ae8:	f7ff ff07 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014aec:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90014af0:	4410      	add	r0, r2
90014af2:	f8d9 2000 	ldr.w	r2, [r9]
90014af6:	4282      	cmp	r2, r0
90014af8:	bfc8      	it	gt
90014afa:	f8c9 0000 	strgt.w	r0, [r9]
90014afe:	683a      	ldr	r2, [r7, #0]
90014b00:	4290      	cmp	r0, r2
90014b02:	bfc8      	it	gt
90014b04:	6038      	strgt	r0, [r7, #0]
90014b06:	9800      	ldr	r0, [sp, #0]
90014b08:	f7ff ff41 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014b0c:	a903      	add	r1, sp, #12
90014b0e:	9003      	str	r0, [sp, #12]
90014b10:	4650      	mov	r0, sl
90014b12:	f7ff fef2 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014b16:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90014b1a:	1a10      	subs	r0, r2, r0
90014b1c:	6832      	ldr	r2, [r6, #0]
90014b1e:	4282      	cmp	r2, r0
90014b20:	bfc8      	it	gt
90014b22:	6030      	strgt	r0, [r6, #0]
90014b24:	682a      	ldr	r2, [r5, #0]
90014b26:	4290      	cmp	r0, r2
90014b28:	bfc8      	it	gt
90014b2a:	6028      	strgt	r0, [r5, #0]
90014b2c:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90014b30:	f8d9 1000 	ldr.w	r1, [r9]
90014b34:	4291      	cmp	r1, r2
90014b36:	bfc8      	it	gt
90014b38:	f8c9 2000 	strgt.w	r2, [r9]
90014b3c:	683a      	ldr	r2, [r7, #0]
90014b3e:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
90014b42:	429a      	cmp	r2, r3
90014b44:	bfb8      	it	lt
90014b46:	603b      	strlt	r3, [r7, #0]
90014b48:	6832      	ldr	r2, [r6, #0]
90014b4a:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90014b4e:	429a      	cmp	r2, r3
90014b50:	bfc8      	it	gt
90014b52:	6033      	strgt	r3, [r6, #0]
90014b54:	682a      	ldr	r2, [r5, #0]
90014b56:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90014b5a:	429a      	cmp	r2, r3
90014b5c:	da00      	bge.n	90014b60 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90014b5e:	602b      	str	r3, [r5, #0]
90014b60:	b005      	add	sp, #20
90014b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014b66:	2002      	movs	r0, #2
90014b68:	3401      	adds	r4, #1
90014b6a:	9201      	str	r2, [sp, #4]
90014b6c:	fb94 f4f0 	sdiv	r4, r4, r0
90014b70:	4610      	mov	r0, r2
90014b72:	f7ff feed 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014b76:	a903      	add	r1, sp, #12
90014b78:	9003      	str	r0, [sp, #12]
90014b7a:	4650      	mov	r0, sl
90014b7c:	f7ff febd 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014b80:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90014b84:	9a01      	ldr	r2, [sp, #4]
90014b86:	4408      	add	r0, r1
90014b88:	f8d9 1000 	ldr.w	r1, [r9]
90014b8c:	1b03      	subs	r3, r0, r4
90014b8e:	4420      	add	r0, r4
90014b90:	4299      	cmp	r1, r3
90014b92:	bfc8      	it	gt
90014b94:	f8c9 3000 	strgt.w	r3, [r9]
90014b98:	6839      	ldr	r1, [r7, #0]
90014b9a:	428b      	cmp	r3, r1
90014b9c:	bfc8      	it	gt
90014b9e:	603b      	strgt	r3, [r7, #0]
90014ba0:	f8d9 1000 	ldr.w	r1, [r9]
90014ba4:	4281      	cmp	r1, r0
90014ba6:	bfc8      	it	gt
90014ba8:	f8c9 0000 	strgt.w	r0, [r9]
90014bac:	6839      	ldr	r1, [r7, #0]
90014bae:	4288      	cmp	r0, r1
90014bb0:	bfc8      	it	gt
90014bb2:	6038      	strgt	r0, [r7, #0]
90014bb4:	4610      	mov	r0, r2
90014bb6:	f7ff feea 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014bba:	a903      	add	r1, sp, #12
90014bbc:	9003      	str	r0, [sp, #12]
90014bbe:	4650      	mov	r0, sl
90014bc0:	f7ff fe9b 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014bc4:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90014bc8:	1a10      	subs	r0, r2, r0
90014bca:	6832      	ldr	r2, [r6, #0]
90014bcc:	1b01      	subs	r1, r0, r4
90014bce:	4420      	add	r0, r4
90014bd0:	428a      	cmp	r2, r1
90014bd2:	bfc8      	it	gt
90014bd4:	6031      	strgt	r1, [r6, #0]
90014bd6:	682a      	ldr	r2, [r5, #0]
90014bd8:	4291      	cmp	r1, r2
90014bda:	bfc8      	it	gt
90014bdc:	6029      	strgt	r1, [r5, #0]
90014bde:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90014be2:	6832      	ldr	r2, [r6, #0]
90014be4:	4282      	cmp	r2, r0
90014be6:	bfc8      	it	gt
90014be8:	6030      	strgt	r0, [r6, #0]
90014bea:	682a      	ldr	r2, [r5, #0]
90014bec:	4290      	cmp	r0, r2
90014bee:	fb9b f2f1 	sdiv	r2, fp, r1
90014bf2:	fb01 b212 	mls	r2, r1, r2, fp
90014bf6:	bfc8      	it	gt
90014bf8:	6028      	strgt	r0, [r5, #0]
90014bfa:	1a8a      	subs	r2, r1, r2
90014bfc:	fb92 f0f1 	sdiv	r0, r2, r1
90014c00:	fb01 2210 	mls	r2, r1, r0, r2
90014c04:	4493      	add	fp, r2
90014c06:	9b00      	ldr	r3, [sp, #0]
90014c08:	455b      	cmp	r3, fp
90014c0a:	db40      	blt.n	90014c8e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
90014c0c:	4658      	mov	r0, fp
90014c0e:	f7ff fe9f 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014c12:	a903      	add	r1, sp, #12
90014c14:	9003      	str	r0, [sp, #12]
90014c16:	4650      	mov	r0, sl
90014c18:	f7ff fe6f 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014c1c:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90014c20:	4410      	add	r0, r2
90014c22:	f8d9 2000 	ldr.w	r2, [r9]
90014c26:	1b01      	subs	r1, r0, r4
90014c28:	4420      	add	r0, r4
90014c2a:	428a      	cmp	r2, r1
90014c2c:	bfc8      	it	gt
90014c2e:	f8c9 1000 	strgt.w	r1, [r9]
90014c32:	683a      	ldr	r2, [r7, #0]
90014c34:	4291      	cmp	r1, r2
90014c36:	bfc8      	it	gt
90014c38:	6039      	strgt	r1, [r7, #0]
90014c3a:	f8d9 2000 	ldr.w	r2, [r9]
90014c3e:	4282      	cmp	r2, r0
90014c40:	bfc8      	it	gt
90014c42:	f8c9 0000 	strgt.w	r0, [r9]
90014c46:	683a      	ldr	r2, [r7, #0]
90014c48:	4290      	cmp	r0, r2
90014c4a:	bfc8      	it	gt
90014c4c:	6038      	strgt	r0, [r7, #0]
90014c4e:	4658      	mov	r0, fp
90014c50:	f7ff fe9d 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014c54:	a903      	add	r1, sp, #12
90014c56:	9003      	str	r0, [sp, #12]
90014c58:	4650      	mov	r0, sl
90014c5a:	f7ff fe4e 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014c5e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90014c62:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90014c66:	1a10      	subs	r0, r2, r0
90014c68:	6832      	ldr	r2, [r6, #0]
90014c6a:	1b01      	subs	r1, r0, r4
90014c6c:	4420      	add	r0, r4
90014c6e:	428a      	cmp	r2, r1
90014c70:	bfc8      	it	gt
90014c72:	6031      	strgt	r1, [r6, #0]
90014c74:	682a      	ldr	r2, [r5, #0]
90014c76:	4291      	cmp	r1, r2
90014c78:	bfc8      	it	gt
90014c7a:	6029      	strgt	r1, [r5, #0]
90014c7c:	6832      	ldr	r2, [r6, #0]
90014c7e:	4282      	cmp	r2, r0
90014c80:	bfc8      	it	gt
90014c82:	6030      	strgt	r0, [r6, #0]
90014c84:	682a      	ldr	r2, [r5, #0]
90014c86:	4290      	cmp	r0, r2
90014c88:	bfc8      	it	gt
90014c8a:	6028      	strgt	r0, [r5, #0]
90014c8c:	e7bb      	b.n	90014c06 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
90014c8e:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90014c92:	9b00      	ldr	r3, [sp, #0]
90014c94:	455b      	cmp	r3, fp
90014c96:	f77f af63 	ble.w	90014b60 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90014c9a:	4618      	mov	r0, r3
90014c9c:	f7ff fe58 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014ca0:	a903      	add	r1, sp, #12
90014ca2:	9003      	str	r0, [sp, #12]
90014ca4:	4650      	mov	r0, sl
90014ca6:	f7ff fe28 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014caa:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90014cae:	4410      	add	r0, r2
90014cb0:	f8d9 2000 	ldr.w	r2, [r9]
90014cb4:	1b01      	subs	r1, r0, r4
90014cb6:	4420      	add	r0, r4
90014cb8:	428a      	cmp	r2, r1
90014cba:	bfc8      	it	gt
90014cbc:	f8c9 1000 	strgt.w	r1, [r9]
90014cc0:	683a      	ldr	r2, [r7, #0]
90014cc2:	4291      	cmp	r1, r2
90014cc4:	bfc8      	it	gt
90014cc6:	6039      	strgt	r1, [r7, #0]
90014cc8:	f8d9 2000 	ldr.w	r2, [r9]
90014ccc:	4282      	cmp	r2, r0
90014cce:	bfc8      	it	gt
90014cd0:	f8c9 0000 	strgt.w	r0, [r9]
90014cd4:	683b      	ldr	r3, [r7, #0]
90014cd6:	4298      	cmp	r0, r3
90014cd8:	bfc8      	it	gt
90014cda:	6038      	strgt	r0, [r7, #0]
90014cdc:	9800      	ldr	r0, [sp, #0]
90014cde:	f7ff fe56 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014ce2:	a903      	add	r1, sp, #12
90014ce4:	9003      	str	r0, [sp, #12]
90014ce6:	4650      	mov	r0, sl
90014ce8:	f7ff fe07 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014cec:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90014cf0:	6832      	ldr	r2, [r6, #0]
90014cf2:	1a18      	subs	r0, r3, r0
90014cf4:	1b03      	subs	r3, r0, r4
90014cf6:	4404      	add	r4, r0
90014cf8:	429a      	cmp	r2, r3
90014cfa:	bfc8      	it	gt
90014cfc:	6033      	strgt	r3, [r6, #0]
90014cfe:	682a      	ldr	r2, [r5, #0]
90014d00:	4293      	cmp	r3, r2
90014d02:	bfc8      	it	gt
90014d04:	602b      	strgt	r3, [r5, #0]
90014d06:	6833      	ldr	r3, [r6, #0]
90014d08:	42a3      	cmp	r3, r4
90014d0a:	bfc8      	it	gt
90014d0c:	6034      	strgt	r4, [r6, #0]
90014d0e:	682b      	ldr	r3, [r5, #0]
90014d10:	429c      	cmp	r4, r3
90014d12:	bfc8      	it	gt
90014d14:	602c      	strgt	r4, [r5, #0]
90014d16:	e723      	b.n	90014b60 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

90014d18 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
90014d18:	b530      	push	{r4, r5, lr}
90014d1a:	4604      	mov	r4, r0
90014d1c:	4608      	mov	r0, r1
90014d1e:	4611      	mov	r1, r2
90014d20:	461a      	mov	r2, r3
90014d22:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014d26:	b089      	sub	sp, #36	@ 0x24
90014d28:	2500      	movs	r5, #0
90014d2a:	015b      	lsls	r3, r3, #5
90014d2c:	9505      	str	r5, [sp, #20]
90014d2e:	9304      	str	r3, [sp, #16]
90014d30:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014d34:	015b      	lsls	r3, r3, #5
90014d36:	e9cd 3506 	strd	r3, r5, [sp, #24]
90014d3a:	ab07      	add	r3, sp, #28
90014d3c:	2520      	movs	r5, #32
90014d3e:	9302      	str	r3, [sp, #8]
90014d40:	ab06      	add	r3, sp, #24
90014d42:	9301      	str	r3, [sp, #4]
90014d44:	ab05      	add	r3, sp, #20
90014d46:	9300      	str	r3, [sp, #0]
90014d48:	ab04      	add	r3, sp, #16
90014d4a:	f7ff fe3f 	bl	900149cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
90014d4e:	9a04      	ldr	r2, [sp, #16]
90014d50:	9805      	ldr	r0, [sp, #20]
90014d52:	9b06      	ldr	r3, [sp, #24]
90014d54:	9907      	ldr	r1, [sp, #28]
90014d56:	fb92 f2f5 	sdiv	r2, r2, r5
90014d5a:	fb90 f0f5 	sdiv	r0, r0, r5
90014d5e:	fb93 f3f5 	sdiv	r3, r3, r5
90014d62:	fb91 f1f5 	sdiv	r1, r1, r5
90014d66:	b292      	uxth	r2, r2
90014d68:	3002      	adds	r0, #2
90014d6a:	b29b      	uxth	r3, r3
90014d6c:	3102      	adds	r1, #2
90014d6e:	1a80      	subs	r0, r0, r2
90014d70:	3a01      	subs	r2, #1
90014d72:	1ac9      	subs	r1, r1, r3
90014d74:	3b01      	subs	r3, #1
90014d76:	80a0      	strh	r0, [r4, #4]
90014d78:	4620      	mov	r0, r4
90014d7a:	8022      	strh	r2, [r4, #0]
90014d7c:	8063      	strh	r3, [r4, #2]
90014d7e:	80e1      	strh	r1, [r4, #6]
90014d80:	b009      	add	sp, #36	@ 0x24
90014d82:	bd30      	pop	{r4, r5, pc}

90014d84 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
90014d84:	b510      	push	{r4, lr}
90014d86:	4604      	mov	r4, r0
90014d88:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
90014d8c:	f7ff ffc4 	bl	90014d18 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
90014d90:	4620      	mov	r0, r4
90014d92:	bd10      	pop	{r4, pc}

90014d94 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
90014d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014d98:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
90014d9c:	468a      	mov	sl, r1
90014d9e:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
90014da2:	42b5      	cmp	r5, r6
90014da4:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
90014da8:	6c01      	ldr	r1, [r0, #64]	@ 0x40
90014daa:	b0af      	sub	sp, #188	@ 0xbc
90014dac:	bfa4      	itt	ge
90014dae:	462b      	movge	r3, r5
90014db0:	4635      	movge	r5, r6
90014db2:	4604      	mov	r4, r0
90014db4:	6b42      	ldr	r2, [r0, #52]	@ 0x34
90014db6:	bfa8      	it	ge
90014db8:	461e      	movge	r6, r3
90014dba:	1b73      	subs	r3, r6, r5
90014dbc:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90014dc0:	f04f 0320 	mov.w	r3, #32
90014dc4:	bfa4      	itt	ge
90014dc6:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
90014dca:	2500      	movge	r5, #0
90014dcc:	fb99 f9f3 	sdiv	r9, r9, r3
90014dd0:	fb9b fbf3 	sdiv	fp, fp, r3
90014dd4:	2900      	cmp	r1, #0
90014dd6:	f000 80fb 	beq.w	90014fd0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x23c>
90014dda:	f9ba 0000 	ldrsh.w	r0, [sl]
90014dde:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
90014de2:	eba9 0700 	sub.w	r7, r9, r0
90014de6:	ebab 0803 	sub.w	r8, fp, r3
90014dea:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
90014dee:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
90014df2:	f8ba 7004 	ldrh.w	r7, [sl, #4]
90014df6:	4407      	add	r7, r0
90014df8:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
90014dfc:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
90014e00:	f8ba 8006 	ldrh.w	r8, [sl, #6]
90014e04:	b23f      	sxth	r7, r7
90014e06:	4498      	add	r8, r3
90014e08:	2302      	movs	r3, #2
90014e0a:	eba9 0707 	sub.w	r7, r9, r7
90014e0e:	fa0f f888 	sxth.w	r8, r8
90014e12:	9303      	str	r3, [sp, #12]
90014e14:	2f00      	cmp	r7, #0
90014e16:	ebab 0808 	sub.w	r8, fp, r8
90014e1a:	bfb8      	it	lt
90014e1c:	427f      	neglt	r7, r7
90014e1e:	f1b8 0f00 	cmp.w	r8, #0
90014e22:	bfb8      	it	lt
90014e24:	f1c8 0800 	rsblt	r8, r8, #0
90014e28:	45bc      	cmp	ip, r7
90014e2a:	bfcc      	ite	gt
90014e2c:	f10c 0701 	addgt.w	r7, ip, #1
90014e30:	3701      	addle	r7, #1
90014e32:	4540      	cmp	r0, r8
90014e34:	bfc8      	it	gt
90014e36:	f100 0801 	addgt.w	r8, r0, #1
90014e3a:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
90014e3e:	bfd8      	it	le
90014e40:	f108 0801 	addle.w	r8, r8, #1
90014e44:	3001      	adds	r0, #1
90014e46:	fb08 f808 	mul.w	r8, r8, r8
90014e4a:	1040      	asrs	r0, r0, #1
90014e4c:	fb07 8707 	mla	r7, r7, r7, r8
90014e50:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
90014e54:	fb91 f1f3 	sdiv	r1, r1, r3
90014e58:	1a52      	subs	r2, r2, r1
90014e5a:	920f      	str	r2, [sp, #60]	@ 0x3c
90014e5c:	f7ff fd58 	bl	90014910 <_ZN8touchgfx7CWRUtil4sineEi>
90014e60:	a92e      	add	r1, sp, #184	@ 0xb8
90014e62:	f841 0d74 	str.w	r0, [r1, #-116]!
90014e66:	a80f      	add	r0, sp, #60	@ 0x3c
90014e68:	f7ff fd47 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014e6c:	f04f 0c20 	mov.w	ip, #32
90014e70:	9b03      	ldr	r3, [sp, #12]
90014e72:	fb90 f0fc 	sdiv	r0, r0, ip
90014e76:	4340      	muls	r0, r0
90014e78:	4287      	cmp	r7, r0
90014e7a:	da04      	bge.n	90014e86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
90014e7c:	2401      	movs	r4, #1
90014e7e:	4620      	mov	r0, r4
90014e80:	b02f      	add	sp, #188	@ 0xbc
90014e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014e86:	6c21      	ldr	r1, [r4, #64]	@ 0x40
90014e88:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90014e8a:	fb91 f2f3 	sdiv	r2, r1, r3
90014e8e:	4402      	add	r2, r0
90014e90:	fb92 f2fc 	sdiv	r2, r2, ip
90014e94:	f9ba 1000 	ldrsh.w	r1, [sl]
90014e98:	3201      	adds	r2, #1
90014e9a:	f8ba 3004 	ldrh.w	r3, [sl, #4]
90014e9e:	4352      	muls	r2, r2
90014ea0:	440b      	add	r3, r1
90014ea2:	b21b      	sxth	r3, r3
90014ea4:	454b      	cmp	r3, r9
90014ea6:	bfa8      	it	ge
90014ea8:	464b      	movge	r3, r9
90014eaa:	428b      	cmp	r3, r1
90014eac:	bfac      	ite	ge
90014eae:	eba9 0903 	subge.w	r9, r9, r3
90014eb2:	eba9 0901 	sublt.w	r9, r9, r1
90014eb6:	f8ba 3006 	ldrh.w	r3, [sl, #6]
90014eba:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
90014ebe:	440b      	add	r3, r1
90014ec0:	b21b      	sxth	r3, r3
90014ec2:	455b      	cmp	r3, fp
90014ec4:	bfa8      	it	ge
90014ec6:	465b      	movge	r3, fp
90014ec8:	428b      	cmp	r3, r1
90014eca:	bfac      	ite	ge
90014ecc:	ebab 0b03 	subge.w	fp, fp, r3
90014ed0:	ebab 0b01 	sublt.w	fp, fp, r1
90014ed4:	fb0b fb0b 	mul.w	fp, fp, fp
90014ed8:	fb09 b909 	mla	r9, r9, r9, fp
90014edc:	4591      	cmp	r9, r2
90014ede:	dccd      	bgt.n	90014e7c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
90014ee0:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
90014ee4:	4621      	mov	r1, r4
90014ee6:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
90014ee8:	4648      	mov	r0, r9
90014eea:	f004 fbc5 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014eee:	6823      	ldr	r3, [r4, #0]
90014ef0:	4620      	mov	r0, r4
90014ef2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90014ef4:	4798      	blx	r3
90014ef6:	4653      	mov	r3, sl
90014ef8:	9000      	str	r0, [sp, #0]
90014efa:	464a      	mov	r2, r9
90014efc:	4639      	mov	r1, r7
90014efe:	a811      	add	r0, sp, #68	@ 0x44
90014f00:	f014 fc04 	bl	9002970c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90014f04:	6b62      	ldr	r2, [r4, #52]	@ 0x34
90014f06:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90014f08:	920b      	str	r2, [sp, #44]	@ 0x2c
90014f0a:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
90014f0e:	930c      	str	r3, [sp, #48]	@ 0x30
90014f10:	dd07      	ble.n	90014f22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18e>
90014f12:	2102      	movs	r1, #2
90014f14:	fb93 f3f1 	sdiv	r3, r3, r1
90014f18:	4413      	add	r3, r2
90014f1a:	930c      	str	r3, [sp, #48]	@ 0x30
90014f1c:	fb93 f3f1 	sdiv	r3, r3, r1
90014f20:	930b      	str	r3, [sp, #44]	@ 0x2c
90014f22:	f04f 0a02 	mov.w	sl, #2
90014f26:	4628      	mov	r0, r5
90014f28:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
90014f2c:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
90014f30:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90014f34:	017f      	lsls	r7, r7, #5
90014f36:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90014f3a:	930d      	str	r3, [sp, #52]	@ 0x34
90014f3c:	f7ff fd08 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014f40:	4649      	mov	r1, r9
90014f42:	900f      	str	r0, [sp, #60]	@ 0x3c
90014f44:	a80d      	add	r0, sp, #52	@ 0x34
90014f46:	f7ff fcd8 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014f4a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90014f4c:	fb90 f0fa 	sdiv	r0, r0, sl
90014f50:	eb00 0b03 	add.w	fp, r0, r3
90014f54:	4628      	mov	r0, r5
90014f56:	f7ff fd1a 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014f5a:	f848 0d80 	str.w	r0, [r8, #-128]!
90014f5e:	a80d      	add	r0, sp, #52	@ 0x34
90014f60:	4641      	mov	r1, r8
90014f62:	f7ff fcca 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014f66:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90014f68:	4659      	mov	r1, fp
90014f6a:	fb90 f0fa 	sdiv	r0, r0, sl
90014f6e:	1a12      	subs	r2, r2, r0
90014f70:	a811      	add	r0, sp, #68	@ 0x44
90014f72:	f014 fd17 	bl	900299a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90014f76:	f105 0a20 	add.w	sl, r5, #32
90014f7a:	bb67      	cbnz	r7, 90014fd6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
90014f7c:	46ab      	mov	fp, r5
90014f7e:	45b2      	cmp	sl, r6
90014f80:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90014f82:	dc33      	bgt.n	90014fec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x258>
90014f84:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90014f86:	4650      	mov	r0, sl
90014f88:	eb02 0241 	add.w	r2, r2, r1, lsl #1
90014f8c:	920d      	str	r2, [sp, #52]	@ 0x34
90014f8e:	f7ff fcdf 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014f92:	4641      	mov	r1, r8
90014f94:	900e      	str	r0, [sp, #56]	@ 0x38
90014f96:	a80d      	add	r0, sp, #52	@ 0x34
90014f98:	f7ff fcaf 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014f9c:	2302      	movs	r3, #2
90014f9e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90014fa0:	fb90 f0f3 	sdiv	r0, r0, r3
90014fa4:	eb00 0b02 	add.w	fp, r0, r2
90014fa8:	4650      	mov	r0, sl
90014faa:	f7ff fcf0 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90014fae:	4649      	mov	r1, r9
90014fb0:	900f      	str	r0, [sp, #60]	@ 0x3c
90014fb2:	a80d      	add	r0, sp, #52	@ 0x34
90014fb4:	f7ff fca1 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014fb8:	2302      	movs	r3, #2
90014fba:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90014fbc:	4659      	mov	r1, fp
90014fbe:	46d3      	mov	fp, sl
90014fc0:	44ba      	add	sl, r7
90014fc2:	fb90 f0f3 	sdiv	r0, r0, r3
90014fc6:	1a12      	subs	r2, r2, r0
90014fc8:	a811      	add	r0, sp, #68	@ 0x44
90014fca:	f014 fd38 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014fce:	e7d6      	b.n	90014f7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ea>
90014fd0:	fb92 f2f3 	sdiv	r2, r2, r3
90014fd4:	e75e      	b.n	90014e94 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x100>
90014fd6:	fb9a f2f7 	sdiv	r2, sl, r7
90014fda:	fb07 a212 	mls	r2, r7, r2, sl
90014fde:	1aba      	subs	r2, r7, r2
90014fe0:	fb92 f1f7 	sdiv	r1, r2, r7
90014fe4:	fb07 2211 	mls	r2, r7, r1, r2
90014fe8:	4492      	add	sl, r2
90014fea:	e7c7      	b.n	90014f7c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
90014fec:	455e      	cmp	r6, fp
90014fee:	dd23      	ble.n	90015038 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
90014ff0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90014ff2:	f04f 0a02 	mov.w	sl, #2
90014ff6:	4630      	mov	r0, r6
90014ff8:	eb02 0243 	add.w	r2, r2, r3, lsl #1
90014ffc:	920d      	str	r2, [sp, #52]	@ 0x34
90014ffe:	f7ff fca7 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015002:	4641      	mov	r1, r8
90015004:	900e      	str	r0, [sp, #56]	@ 0x38
90015006:	a80d      	add	r0, sp, #52	@ 0x34
90015008:	f7ff fc77 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001500c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001500e:	fb90 f0fa 	sdiv	r0, r0, sl
90015012:	4403      	add	r3, r0
90015014:	4630      	mov	r0, r6
90015016:	9303      	str	r3, [sp, #12]
90015018:	f7ff fcb9 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001501c:	4649      	mov	r1, r9
9001501e:	900f      	str	r0, [sp, #60]	@ 0x3c
90015020:	a80d      	add	r0, sp, #52	@ 0x34
90015022:	f7ff fc6a 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015026:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90015028:	9b03      	ldr	r3, [sp, #12]
9001502a:	fb90 f0fa 	sdiv	r0, r0, sl
9001502e:	4619      	mov	r1, r3
90015030:	1a12      	subs	r2, r2, r0
90015032:	a811      	add	r0, sp, #68	@ 0x44
90015034:	f014 fd03 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90015038:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001503a:	b99b      	cbnz	r3, 90015064 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d0>
9001503c:	1b75      	subs	r5, r6, r5
9001503e:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
90015042:	da04      	bge.n	9001504e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90015044:	a811      	add	r0, sp, #68	@ 0x44
90015046:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
9001504a:	f014 fcf8 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001504e:	21ff      	movs	r1, #255	@ 0xff
90015050:	a811      	add	r0, sp, #68	@ 0x44
90015052:	f014 fbef 	bl	90029834 <_ZN8touchgfx6Canvas6renderEh>
90015056:	4604      	mov	r4, r0
90015058:	4b89      	ldr	r3, [pc, #548]	@ (90015280 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ec>)
9001505a:	a816      	add	r0, sp, #88	@ 0x58
9001505c:	9311      	str	r3, [sp, #68]	@ 0x44
9001505e:	f000 fe75 	bl	90015d4c <_ZN8touchgfx7OutlineD1Ev>
90015062:	e70c      	b.n	90014e7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xea>
90015064:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
90015068:	429a      	cmp	r2, r3
9001506a:	f0c0 8107 	bcc.w	9001527c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e8>
9001506e:	1b73      	subs	r3, r6, r5
90015070:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
90015074:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90015078:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
9001507c:	9303      	str	r3, [sp, #12]
9001507e:	da43      	bge.n	90015108 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
90015080:	4630      	mov	r0, r6
90015082:	f7ff fc65 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015086:	4649      	mov	r1, r9
90015088:	900f      	str	r0, [sp, #60]	@ 0x3c
9001508a:	a80b      	add	r0, sp, #44	@ 0x2c
9001508c:	f7ff fc35 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015090:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90015092:	18c3      	adds	r3, r0, r3
90015094:	4630      	mov	r0, r6
90015096:	9305      	str	r3, [sp, #20]
90015098:	f7ff fc79 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001509c:	4649      	mov	r1, r9
9001509e:	900f      	str	r0, [sp, #60]	@ 0x3c
900150a0:	a80b      	add	r0, sp, #44	@ 0x2c
900150a2:	f7ff fc2a 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900150a6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900150a8:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
900150ac:	1a1b      	subs	r3, r3, r0
900150ae:	9206      	str	r2, [sp, #24]
900150b0:	9304      	str	r3, [sp, #16]
900150b2:	eb06 030a 	add.w	r3, r6, sl
900150b6:	9a06      	ldr	r2, [sp, #24]
900150b8:	4293      	cmp	r3, r2
900150ba:	da25      	bge.n	90015108 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
900150bc:	4618      	mov	r0, r3
900150be:	9308      	str	r3, [sp, #32]
900150c0:	f7ff fc46 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900150c4:	4649      	mov	r1, r9
900150c6:	900f      	str	r0, [sp, #60]	@ 0x3c
900150c8:	a80c      	add	r0, sp, #48	@ 0x30
900150ca:	f7ff fc16 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900150ce:	2202      	movs	r2, #2
900150d0:	9b05      	ldr	r3, [sp, #20]
900150d2:	9209      	str	r2, [sp, #36]	@ 0x24
900150d4:	fb90 f0f2 	sdiv	r0, r0, r2
900150d8:	18c3      	adds	r3, r0, r3
900150da:	9307      	str	r3, [sp, #28]
900150dc:	9b08      	ldr	r3, [sp, #32]
900150de:	4618      	mov	r0, r3
900150e0:	f7ff fc55 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900150e4:	a92e      	add	r1, sp, #184	@ 0xb8
900150e6:	f841 0d80 	str.w	r0, [r1, #-128]!
900150ea:	a80c      	add	r0, sp, #48	@ 0x30
900150ec:	f7ff fc05 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900150f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900150f2:	9b04      	ldr	r3, [sp, #16]
900150f4:	9907      	ldr	r1, [sp, #28]
900150f6:	fb90 f2f2 	sdiv	r2, r0, r2
900150fa:	a811      	add	r0, sp, #68	@ 0x44
900150fc:	1a9a      	subs	r2, r3, r2
900150fe:	f014 fc9e 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90015102:	9b08      	ldr	r3, [sp, #32]
90015104:	4453      	add	r3, sl
90015106:	e7d6      	b.n	900150b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x322>
90015108:	455e      	cmp	r6, fp
9001510a:	dd25      	ble.n	90015158 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c4>
9001510c:	4630      	mov	r0, r6
9001510e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90015112:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90015116:	930d      	str	r3, [sp, #52]	@ 0x34
90015118:	f7ff fc1a 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001511c:	4641      	mov	r1, r8
9001511e:	900e      	str	r0, [sp, #56]	@ 0x38
90015120:	a80d      	add	r0, sp, #52	@ 0x34
90015122:	f7ff fbea 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015126:	2202      	movs	r2, #2
90015128:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001512a:	9204      	str	r2, [sp, #16]
9001512c:	fb90 f0f2 	sdiv	r0, r0, r2
90015130:	eb00 0903 	add.w	r9, r0, r3
90015134:	4630      	mov	r0, r6
90015136:	f7ff fc2a 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001513a:	a92e      	add	r1, sp, #184	@ 0xb8
9001513c:	f841 0d7c 	str.w	r0, [r1, #-124]!
90015140:	a80d      	add	r0, sp, #52	@ 0x34
90015142:	f7ff fbda 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015146:	9a04      	ldr	r2, [sp, #16]
90015148:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9001514a:	4649      	mov	r1, r9
9001514c:	fb90 f2f2 	sdiv	r2, r0, r2
90015150:	a811      	add	r0, sp, #68	@ 0x44
90015152:	1a9a      	subs	r2, r3, r2
90015154:	f014 fc73 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90015158:	46d9      	mov	r9, fp
9001515a:	2602      	movs	r6, #2
9001515c:	45a9      	cmp	r9, r5
9001515e:	db25      	blt.n	900151ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x418>
90015160:	4648      	mov	r0, r9
90015162:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90015166:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
9001516a:	930d      	str	r3, [sp, #52]	@ 0x34
9001516c:	f7ff fbf0 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015170:	4641      	mov	r1, r8
90015172:	900e      	str	r0, [sp, #56]	@ 0x38
90015174:	a80d      	add	r0, sp, #52	@ 0x34
90015176:	f7ff fbc0 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001517a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001517c:	fb90 f0f6 	sdiv	r0, r0, r6
90015180:	eb00 0b03 	add.w	fp, r0, r3
90015184:	4648      	mov	r0, r9
90015186:	f7ff fc02 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001518a:	a90f      	add	r1, sp, #60	@ 0x3c
9001518c:	900f      	str	r0, [sp, #60]	@ 0x3c
9001518e:	a80d      	add	r0, sp, #52	@ 0x34
90015190:	f7ff fbb3 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015194:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90015196:	4659      	mov	r1, fp
90015198:	46cb      	mov	fp, r9
9001519a:	eba9 0907 	sub.w	r9, r9, r7
9001519e:	fb90 f0f6 	sdiv	r0, r0, r6
900151a2:	1a12      	subs	r2, r2, r0
900151a4:	a811      	add	r0, sp, #68	@ 0x44
900151a6:	f014 fc4a 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900151aa:	e7d7      	b.n	9001515c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c8>
900151ac:	455d      	cmp	r5, fp
900151ae:	da22      	bge.n	900151f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x462>
900151b0:	2602      	movs	r6, #2
900151b2:	4628      	mov	r0, r5
900151b4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
900151b8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
900151bc:	930d      	str	r3, [sp, #52]	@ 0x34
900151be:	f7ff fbc7 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900151c2:	4641      	mov	r1, r8
900151c4:	900e      	str	r0, [sp, #56]	@ 0x38
900151c6:	a80d      	add	r0, sp, #52	@ 0x34
900151c8:	f7ff fb97 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900151cc:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
900151ce:	fb90 f0f6 	sdiv	r0, r0, r6
900151d2:	4407      	add	r7, r0
900151d4:	4628      	mov	r0, r5
900151d6:	f7ff fbda 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900151da:	a92e      	add	r1, sp, #184	@ 0xb8
900151dc:	f841 0d7c 	str.w	r0, [r1, #-124]!
900151e0:	a80d      	add	r0, sp, #52	@ 0x34
900151e2:	f7ff fb8a 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900151e6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900151e8:	4639      	mov	r1, r7
900151ea:	fb90 f0f6 	sdiv	r0, r0, r6
900151ee:	1a12      	subs	r2, r2, r0
900151f0:	a811      	add	r0, sp, #68	@ 0x44
900151f2:	f014 fc24 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900151f6:	9b03      	ldr	r3, [sp, #12]
900151f8:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
900151fc:	f6bf af27 	bge.w	9001504e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90015200:	ae2e      	add	r6, sp, #184	@ 0xb8
90015202:	4628      	mov	r0, r5
90015204:	f7ff fba4 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015208:	f04f 0b02 	mov.w	fp, #2
9001520c:	f846 0d7c 	str.w	r0, [r6, #-124]!
90015210:	a80b      	add	r0, sp, #44	@ 0x2c
90015212:	4631      	mov	r1, r6
90015214:	f7ff fb71 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015218:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001521a:	eb00 0903 	add.w	r9, r0, r3
9001521e:	4628      	mov	r0, r5
90015220:	f7ff fbb5 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015224:	4631      	mov	r1, r6
90015226:	900f      	str	r0, [sp, #60]	@ 0x3c
90015228:	a80b      	add	r0, sp, #44	@ 0x2c
9001522a:	f7ff fb66 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001522e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90015230:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
90015234:	eba3 0800 	sub.w	r8, r3, r0
90015238:	4454      	add	r4, sl
9001523a:	42a5      	cmp	r5, r4
9001523c:	f77f af07 	ble.w	9001504e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90015240:	4620      	mov	r0, r4
90015242:	f7ff fb85 	bl	90014950 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015246:	4631      	mov	r1, r6
90015248:	900f      	str	r0, [sp, #60]	@ 0x3c
9001524a:	a80c      	add	r0, sp, #48	@ 0x30
9001524c:	f7ff fb55 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015250:	fb90 f0fb 	sdiv	r0, r0, fp
90015254:	eb00 0709 	add.w	r7, r0, r9
90015258:	4620      	mov	r0, r4
9001525a:	f7ff fb98 	bl	9001498e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001525e:	a90e      	add	r1, sp, #56	@ 0x38
90015260:	900e      	str	r0, [sp, #56]	@ 0x38
90015262:	a80c      	add	r0, sp, #48	@ 0x30
90015264:	f7ff fb49 	bl	900148fa <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015268:	4639      	mov	r1, r7
9001526a:	4454      	add	r4, sl
9001526c:	fb90 f2fb 	sdiv	r2, r0, fp
90015270:	a811      	add	r0, sp, #68	@ 0x44
90015272:	eba8 0202 	sub.w	r2, r8, r2
90015276:	f014 fbe2 	bl	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001527a:	e7de      	b.n	9001523a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4a6>
9001527c:	2400      	movs	r4, #0
9001527e:	e6eb      	b.n	90015058 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c4>
90015280:	9002eb5c 	.word	0x9002eb5c

90015284 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90015284:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90015286:	6803      	ldr	r3, [r0, #0]
90015288:	460d      	mov	r5, r1
9001528a:	4604      	mov	r4, r0
9001528c:	4601      	mov	r1, r0
9001528e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90015290:	a802      	add	r0, sp, #8
90015292:	4798      	blx	r3
90015294:	6828      	ldr	r0, [r5, #0]
90015296:	6869      	ldr	r1, [r5, #4]
90015298:	466b      	mov	r3, sp
9001529a:	c303      	stmia	r3!, {r0, r1}
9001529c:	4668      	mov	r0, sp
9001529e:	4619      	mov	r1, r3
900152a0:	f7fc ff9c 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
900152a4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900152a6:	b188      	cbz	r0, 900152cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900152a8:	6803      	ldr	r3, [r0, #0]
900152aa:	1d21      	adds	r1, r4, #4
900152ac:	68db      	ldr	r3, [r3, #12]
900152ae:	4798      	blx	r3
900152b0:	b160      	cbz	r0, 900152cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900152b2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900152b6:	2b00      	cmp	r3, #0
900152b8:	dd08      	ble.n	900152cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900152ba:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
900152be:	2d00      	cmp	r5, #0
900152c0:	dd04      	ble.n	900152cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900152c2:	4a2b      	ldr	r2, [pc, #172]	@ (90015370 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
900152c4:	7812      	ldrb	r2, [r2, #0]
900152c6:	b11a      	cbz	r2, 900152d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
900152c8:	2a01      	cmp	r2, #1
900152ca:	d029      	beq.n	90015320 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
900152cc:	b004      	add	sp, #16
900152ce:	bd70      	pop	{r4, r5, r6, pc}
900152d0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900152d4:	441d      	add	r5, r3
900152d6:	b2ad      	uxth	r5, r5
900152d8:	b22e      	sxth	r6, r5
900152da:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900152de:	42b3      	cmp	r3, r6
900152e0:	daf4      	bge.n	900152cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900152e2:	6823      	ldr	r3, [r4, #0]
900152e4:	4669      	mov	r1, sp
900152e6:	4620      	mov	r0, r4
900152e8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900152ea:	4798      	blx	r3
900152ec:	b940      	cbnz	r0, 90015300 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900152ee:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900152f2:	2b01      	cmp	r3, #1
900152f4:	d004      	beq.n	90015300 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900152f6:	3301      	adds	r3, #1
900152f8:	105b      	asrs	r3, r3, #1
900152fa:	f8ad 3006 	strh.w	r3, [sp, #6]
900152fe:	e7f0      	b.n	900152e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90015300:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90015304:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90015308:	4413      	add	r3, r2
9001530a:	b29b      	uxth	r3, r3
9001530c:	441a      	add	r2, r3
9001530e:	f8ad 3002 	strh.w	r3, [sp, #2]
90015312:	b212      	sxth	r2, r2
90015314:	4296      	cmp	r6, r2
90015316:	dae0      	bge.n	900152da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90015318:	1aeb      	subs	r3, r5, r3
9001531a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001531e:	e7dc      	b.n	900152da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90015320:	f8bd 5000 	ldrh.w	r5, [sp]
90015324:	441d      	add	r5, r3
90015326:	b2ad      	uxth	r5, r5
90015328:	b22e      	sxth	r6, r5
9001532a:	f9bd 3000 	ldrsh.w	r3, [sp]
9001532e:	42b3      	cmp	r3, r6
90015330:	dacc      	bge.n	900152cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90015332:	6823      	ldr	r3, [r4, #0]
90015334:	4669      	mov	r1, sp
90015336:	4620      	mov	r0, r4
90015338:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001533a:	4798      	blx	r3
9001533c:	b940      	cbnz	r0, 90015350 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001533e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90015342:	2b01      	cmp	r3, #1
90015344:	d004      	beq.n	90015350 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90015346:	3301      	adds	r3, #1
90015348:	105b      	asrs	r3, r3, #1
9001534a:	f8ad 3004 	strh.w	r3, [sp, #4]
9001534e:	e7f0      	b.n	90015332 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90015350:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90015354:	f8bd 3000 	ldrh.w	r3, [sp]
90015358:	4413      	add	r3, r2
9001535a:	b29b      	uxth	r3, r3
9001535c:	441a      	add	r2, r3
9001535e:	f8ad 3000 	strh.w	r3, [sp]
90015362:	b212      	sxth	r2, r2
90015364:	4296      	cmp	r6, r2
90015366:	dae0      	bge.n	9001532a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90015368:	1aeb      	subs	r3, r5, r3
9001536a:	f8ad 3004 	strh.w	r3, [sp, #4]
9001536e:	e7dc      	b.n	9001532a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90015370:	24023404 	.word	0x24023404

90015374 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90015374:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90015376:	6803      	ldr	r3, [r0, #0]
90015378:	4604      	mov	r4, r0
9001537a:	4601      	mov	r1, r0
9001537c:	4668      	mov	r0, sp
9001537e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90015380:	4798      	blx	r3
90015382:	2100      	movs	r1, #0
90015384:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015388:	4668      	mov	r0, sp
9001538a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001538e:	9102      	str	r1, [sp, #8]
90015390:	a902      	add	r1, sp, #8
90015392:	f8ad 200c 	strh.w	r2, [sp, #12]
90015396:	f8ad 300e 	strh.w	r3, [sp, #14]
9001539a:	f7fc ff1f 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
9001539e:	6823      	ldr	r3, [r4, #0]
900153a0:	4669      	mov	r1, sp
900153a2:	4620      	mov	r0, r4
900153a4:	691b      	ldr	r3, [r3, #16]
900153a6:	4798      	blx	r3
900153a8:	b004      	add	sp, #16
900153aa:	bd10      	pop	{r4, pc}

900153ac <_ZN8touchgfx12CanvasWidgetC1Ev>:
900153ac:	2101      	movs	r1, #1
900153ae:	2200      	movs	r2, #0
900153b0:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900153b4:	490a      	ldr	r1, [pc, #40]	@ (900153e0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900153b6:	8082      	strh	r2, [r0, #4]
900153b8:	6001      	str	r1, [r0, #0]
900153ba:	21ff      	movs	r1, #255	@ 0xff
900153bc:	80c2      	strh	r2, [r0, #6]
900153be:	8102      	strh	r2, [r0, #8]
900153c0:	8142      	strh	r2, [r0, #10]
900153c2:	8182      	strh	r2, [r0, #12]
900153c4:	81c2      	strh	r2, [r0, #14]
900153c6:	8202      	strh	r2, [r0, #16]
900153c8:	8242      	strh	r2, [r0, #18]
900153ca:	61c2      	str	r2, [r0, #28]
900153cc:	8402      	strh	r2, [r0, #32]
900153ce:	8442      	strh	r2, [r0, #34]	@ 0x22
900153d0:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
900153d4:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
900153d8:	6282      	str	r2, [r0, #40]	@ 0x28
900153da:	e9c0 2205 	strd	r2, r2, [r0, #20]
900153de:	4770      	bx	lr
900153e0:	9002e500 	.word	0x9002e500

900153e4 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
900153e4:	b508      	push	{r3, lr}
900153e6:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
900153ea:	b10b      	cbz	r3, 900153f0 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
900153ec:	f7ed fca8 	bl	90002d40 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900153f0:	bd08      	pop	{r3, pc}

900153f2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
900153f2:	6803      	ldr	r3, [r0, #0]
900153f4:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
900153f8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
900153fa:	4718      	bx	r3

900153fc <_ZN8touchgfx14SnapshotWidgetD1Ev>:
900153fc:	4770      	bx	lr

900153fe <_ZN8touchgfx14SnapshotWidgetD0Ev>:
900153fe:	b510      	push	{r4, lr}
90015400:	4604      	mov	r4, r0
90015402:	212c      	movs	r1, #44	@ 0x2c
90015404:	f014 fe02 	bl	9002a00c <_ZdlPvj>
90015408:	4620      	mov	r0, r4
9001540a:	bd10      	pop	{r4, pc}

9001540c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
9001540c:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90015410:	2bff      	cmp	r3, #255	@ 0xff
90015412:	b510      	push	{r4, lr}
90015414:	d104      	bne.n	90015420 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
90015416:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
90015418:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001541c:	429a      	cmp	r2, r3
9001541e:	d105      	bne.n	9001542c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
90015420:	2300      	movs	r3, #0
90015422:	8003      	strh	r3, [r0, #0]
90015424:	8043      	strh	r3, [r0, #2]
90015426:	8083      	strh	r3, [r0, #4]
90015428:	80c3      	strh	r3, [r0, #6]
9001542a:	bd10      	pop	{r4, pc}
9001542c:	2300      	movs	r3, #0
9001542e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
90015432:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
90015436:	8003      	strh	r3, [r0, #0]
90015438:	8043      	strh	r3, [r0, #2]
9001543a:	8084      	strh	r4, [r0, #4]
9001543c:	80c2      	strh	r2, [r0, #6]
9001543e:	e7f4      	b.n	9001542a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

90015440 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
90015440:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015444:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90015448:	b087      	sub	sp, #28
9001544a:	4604      	mov	r4, r0
9001544c:	4689      	mov	r9, r1
9001544e:	b363      	cbz	r3, 900154aa <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90015450:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
90015452:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90015456:	429a      	cmp	r2, r3
90015458:	d027      	beq.n	900154aa <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001545a:	ad06      	add	r5, sp, #24
9001545c:	2700      	movs	r7, #0
9001545e:	f825 2d0c 	strh.w	r2, [r5, #-12]!
90015462:	4628      	mov	r0, r5
90015464:	f006 fc1c 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015468:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001546c:	a904      	add	r1, sp, #16
9001546e:	f8ad 0014 	strh.w	r0, [sp, #20]
90015472:	f8ad 3016 	strh.w	r3, [sp, #22]
90015476:	4620      	mov	r0, r4
90015478:	6823      	ldr	r3, [r4, #0]
9001547a:	9704      	str	r7, [sp, #16]
9001547c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001547e:	4798      	blx	r3
90015480:	f7fd f990 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90015484:	6803      	ldr	r3, [r0, #0]
90015486:	4606      	mov	r6, r0
90015488:	4628      	mov	r0, r5
9001548a:	f8d3 800c 	ldr.w	r8, [r3, #12]
9001548e:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
90015490:	f8ad 300c 	strh.w	r3, [sp, #12]
90015494:	f006 fcf0 	bl	9001be78 <_ZNK8touchgfx6Bitmap7getDataEv>
90015498:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9001549c:	4601      	mov	r1, r0
9001549e:	9701      	str	r7, [sp, #4]
900154a0:	aa04      	add	r2, sp, #16
900154a2:	9300      	str	r3, [sp, #0]
900154a4:	4630      	mov	r0, r6
900154a6:	464b      	mov	r3, r9
900154a8:	47c0      	blx	r8
900154aa:	b007      	add	sp, #28
900154ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

900154b0 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
900154b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900154b2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900154b6:	460d      	mov	r5, r1
900154b8:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900154bc:	2100      	movs	r1, #0
900154be:	f8ad 3006 	strh.w	r3, [sp, #6]
900154c2:	4604      	mov	r4, r0
900154c4:	6803      	ldr	r3, [r0, #0]
900154c6:	f8ad 2004 	strh.w	r2, [sp, #4]
900154ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900154cc:	9100      	str	r1, [sp, #0]
900154ce:	4669      	mov	r1, sp
900154d0:	4798      	blx	r3
900154d2:	4621      	mov	r1, r4
900154d4:	a802      	add	r0, sp, #8
900154d6:	f004 f8cf 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900154da:	f7fd f963 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
900154de:	6803      	ldr	r3, [r0, #0]
900154e0:	aa02      	add	r2, sp, #8
900154e2:	4669      	mov	r1, sp
900154e4:	695e      	ldr	r6, [r3, #20]
900154e6:	462b      	mov	r3, r5
900154e8:	47b0      	blx	r6
900154ea:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900154ee:	2800      	cmp	r0, #0
900154f0:	bf08      	it	eq
900154f2:	461d      	moveq	r5, r3
900154f4:	84e5      	strh	r5, [r4, #38]	@ 0x26
900154f6:	b004      	add	sp, #16
900154f8:	bd70      	pop	{r4, r5, r6, pc}
	...

900154fc <_ZN8touchgfx14SnapshotWidgetC1Ev>:
900154fc:	2200      	movs	r2, #0
900154fe:	8082      	strh	r2, [r0, #4]
90015500:	80c2      	strh	r2, [r0, #6]
90015502:	8102      	strh	r2, [r0, #8]
90015504:	8142      	strh	r2, [r0, #10]
90015506:	8182      	strh	r2, [r0, #12]
90015508:	81c2      	strh	r2, [r0, #14]
9001550a:	8202      	strh	r2, [r0, #16]
9001550c:	8242      	strh	r2, [r0, #18]
9001550e:	61c2      	str	r2, [r0, #28]
90015510:	8402      	strh	r2, [r0, #32]
90015512:	8442      	strh	r2, [r0, #34]	@ 0x22
90015514:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90015518:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001551c:	2201      	movs	r2, #1
9001551e:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
90015522:	4a04      	ldr	r2, [pc, #16]	@ (90015534 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90015524:	6002      	str	r2, [r0, #0]
90015526:	f64f 72ff 	movw	r2, #65535	@ 0xffff
9001552a:	84c2      	strh	r2, [r0, #38]	@ 0x26
9001552c:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
90015530:	4770      	bx	lr
90015532:	bf00      	nop
90015534:	9002e578 	.word	0x9002e578

90015538 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90015538:	4b07      	ldr	r3, [pc, #28]	@ (90015558 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
9001553a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9001553c:	881b      	ldrh	r3, [r3, #0]
9001553e:	4293      	cmp	r3, r2
90015540:	bf81      	itttt	hi
90015542:	4b06      	ldrhi	r3, [pc, #24]	@ (9001555c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90015544:	681b      	ldrhi	r3, [r3, #0]
90015546:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
9001554a:	7858      	ldrbhi	r0, [r3, #1]
9001554c:	bf8c      	ite	hi
9001554e:	f000 0003 	andhi.w	r0, r0, #3
90015552:	2000      	movls	r0, #0
90015554:	4770      	bx	lr
90015556:	bf00      	nop
90015558:	24023468 	.word	0x24023468
9001555c:	24023464 	.word	0x24023464

90015560 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90015560:	4b11      	ldr	r3, [pc, #68]	@ (900155a8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90015562:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015566:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90015568:	4604      	mov	r4, r0
9001556a:	881b      	ldrh	r3, [r3, #0]
9001556c:	428b      	cmp	r3, r1
9001556e:	d918      	bls.n	900155a2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90015570:	6803      	ldr	r3, [r0, #0]
90015572:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90015574:	4b0d      	ldr	r3, [pc, #52]	@ (900155ac <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90015576:	6818      	ldr	r0, [r3, #0]
90015578:	f7f1 f88c 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
9001557c:	6823      	ldr	r3, [r4, #0]
9001557e:	4606      	mov	r6, r0
90015580:	4620      	mov	r0, r4
90015582:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90015584:	4798      	blx	r3
90015586:	6823      	ldr	r3, [r4, #0]
90015588:	4607      	mov	r7, r0
9001558a:	4620      	mov	r0, r4
9001558c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90015590:	4798      	blx	r3
90015592:	463a      	mov	r2, r7
90015594:	4603      	mov	r3, r0
90015596:	4631      	mov	r1, r6
90015598:	4620      	mov	r0, r4
9001559a:	46ac      	mov	ip, r5
9001559c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900155a0:	4760      	bx	ip
900155a2:	2000      	movs	r0, #0
900155a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900155a8:	24023468 	.word	0x24023468
900155ac:	24023470 	.word	0x24023470

900155b0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
900155b0:	4b18      	ldr	r3, [pc, #96]	@ (90015614 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
900155b2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
900155b6:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900155b8:	4604      	mov	r4, r0
900155ba:	881b      	ldrh	r3, [r3, #0]
900155bc:	428b      	cmp	r3, r1
900155be:	d926      	bls.n	9001560e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
900155c0:	4b15      	ldr	r3, [pc, #84]	@ (90015618 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
900155c2:	681b      	ldr	r3, [r3, #0]
900155c4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
900155c8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
900155cc:	4b13      	ldr	r3, [pc, #76]	@ (9001561c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
900155ce:	7855      	ldrb	r5, [r2, #1]
900155d0:	681b      	ldr	r3, [r3, #0]
900155d2:	f3c5 0581 	ubfx	r5, r5, #2, #2
900155d6:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
900155da:	6833      	ldr	r3, [r6, #0]
900155dc:	69df      	ldr	r7, [r3, #28]
900155de:	4b10      	ldr	r3, [pc, #64]	@ (90015620 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
900155e0:	6818      	ldr	r0, [r3, #0]
900155e2:	f7f1 f857 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
900155e6:	6823      	ldr	r3, [r4, #0]
900155e8:	4680      	mov	r8, r0
900155ea:	4620      	mov	r0, r4
900155ec:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900155ee:	4798      	blx	r3
900155f0:	6823      	ldr	r3, [r4, #0]
900155f2:	4681      	mov	r9, r0
900155f4:	4620      	mov	r0, r4
900155f6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900155fa:	4798      	blx	r3
900155fc:	464b      	mov	r3, r9
900155fe:	9000      	str	r0, [sp, #0]
90015600:	4642      	mov	r2, r8
90015602:	4629      	mov	r1, r5
90015604:	4630      	mov	r0, r6
90015606:	47b8      	blx	r7
90015608:	b003      	add	sp, #12
9001560a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001560e:	2000      	movs	r0, #0
90015610:	e7fa      	b.n	90015608 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90015612:	bf00      	nop
90015614:	24023468 	.word	0x24023468
90015618:	24023464 	.word	0x24023464
9001561c:	2402346c 	.word	0x2402346c
90015620:	24023470 	.word	0x24023470

90015624 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90015624:	b40e      	push	{r1, r2, r3}
90015626:	4b30      	ldr	r3, [pc, #192]	@ (900156e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90015628:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001562c:	881a      	ldrh	r2, [r3, #0]
9001562e:	b09d      	sub	sp, #116	@ 0x74
90015630:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
90015632:	4604      	mov	r4, r0
90015634:	429a      	cmp	r2, r3
90015636:	d954      	bls.n	900156e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90015638:	aa26      	add	r2, sp, #152	@ 0x98
9001563a:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 900156ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9001563e:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 900156f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90015642:	9202      	str	r2, [sp, #8]
90015644:	f8d9 2000 	ldr.w	r2, [r9]
90015648:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9001564c:	f8d8 3000 	ldr.w	r3, [r8]
90015650:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90015654:	682b      	ldr	r3, [r5, #0]
90015656:	4628      	mov	r0, r5
90015658:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001565a:	4798      	blx	r3
9001565c:	4606      	mov	r6, r0
9001565e:	b207      	sxth	r7, r0
90015660:	a803      	add	r0, sp, #12
90015662:	f004 ffaa 	bl	9001a5ba <_ZN8touchgfx12TextProviderC1Ev>
90015666:	682b      	ldr	r3, [r5, #0]
90015668:	4628      	mov	r0, r5
9001566a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001566c:	4798      	blx	r3
9001566e:	682b      	ldr	r3, [r5, #0]
90015670:	4682      	mov	sl, r0
90015672:	4628      	mov	r0, r5
90015674:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90015676:	4798      	blx	r3
90015678:	4653      	mov	r3, sl
9001567a:	9000      	str	r0, [sp, #0]
9001567c:	a803      	add	r0, sp, #12
9001567e:	9a02      	ldr	r2, [sp, #8]
90015680:	9925      	ldr	r1, [sp, #148]	@ 0x94
90015682:	f004 ffed 	bl	9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015686:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90015688:	f8d9 3000 	ldr.w	r3, [r9]
9001568c:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90015690:	8925      	ldrh	r5, [r4, #8]
90015692:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90015696:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9001569a:	eba5 050c 	sub.w	r5, r5, ip
9001569e:	784a      	ldrb	r2, [r1, #1]
900156a0:	f8d8 3000 	ldr.w	r3, [r8]
900156a4:	b22d      	sxth	r5, r5
900156a6:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
900156aa:	f3c2 0281 	ubfx	r2, r2, #2, #2
900156ae:	9500      	str	r5, [sp, #0]
900156b0:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
900156b4:	a803      	add	r0, sp, #12
900156b6:	f002 fa37 	bl	90017b28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
900156ba:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
900156be:	b203      	sxth	r3, r0
900156c0:	18b9      	adds	r1, r7, r2
900156c2:	2900      	cmp	r1, #0
900156c4:	dd0b      	ble.n	900156de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
900156c6:	3b01      	subs	r3, #1
900156c8:	fb13 f302 	smulbb	r3, r3, r2
900156cc:	fb16 3300 	smlabb	r3, r6, r0, r3
900156d0:	b21f      	sxth	r7, r3
900156d2:	4638      	mov	r0, r7
900156d4:	b01d      	add	sp, #116	@ 0x74
900156d6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900156da:	b003      	add	sp, #12
900156dc:	4770      	bx	lr
900156de:	2b00      	cmp	r3, #0
900156e0:	dcf7      	bgt.n	900156d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900156e2:	2700      	movs	r7, #0
900156e4:	e7f5      	b.n	900156d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900156e6:	bf00      	nop
900156e8:	24023468 	.word	0x24023468
900156ec:	24023464 	.word	0x24023464
900156f0:	2402346c 	.word	0x2402346c

900156f4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900156f4:	b570      	push	{r4, r5, r6, lr}
900156f6:	6803      	ldr	r3, [r0, #0]
900156f8:	4604      	mov	r4, r0
900156fa:	4615      	mov	r5, r2
900156fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900156fe:	4798      	blx	r3
90015700:	6823      	ldr	r3, [r4, #0]
90015702:	4629      	mov	r1, r5
90015704:	4620      	mov	r0, r4
90015706:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015708:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001570c:	4718      	bx	r3
	...

90015710 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90015710:	b538      	push	{r3, r4, r5, lr}
90015712:	4b0e      	ldr	r3, [pc, #56]	@ (9001574c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90015714:	4604      	mov	r4, r0
90015716:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90015718:	881b      	ldrh	r3, [r3, #0]
9001571a:	429a      	cmp	r2, r3
9001571c:	d214      	bcs.n	90015748 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9001571e:	6803      	ldr	r3, [r0, #0]
90015720:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90015722:	4798      	blx	r3
90015724:	6823      	ldr	r3, [r4, #0]
90015726:	4605      	mov	r5, r0
90015728:	4620      	mov	r0, r4
9001572a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
9001572c:	4798      	blx	r3
9001572e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90015732:	b22d      	sxth	r5, r5
90015734:	4601      	mov	r1, r0
90015736:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001573a:	bf06      	itte	eq
9001573c:	4602      	moveq	r2, r0
9001573e:	4629      	moveq	r1, r5
90015740:	462a      	movne	r2, r5
90015742:	4620      	mov	r0, r4
90015744:	f7ff ffd6 	bl	900156f4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015748:	bd38      	pop	{r3, r4, r5, pc}
9001574a:	bf00      	nop
9001574c:	24023468 	.word	0x24023468

90015750 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90015750:	b530      	push	{r4, r5, lr}
90015752:	888b      	ldrh	r3, [r1, #4]
90015754:	b085      	sub	sp, #20
90015756:	4604      	mov	r4, r0
90015758:	8583      	strh	r3, [r0, #44]	@ 0x2c
9001575a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001575e:	b923      	cbnz	r3, 9001576a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015760:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015764:	b90b      	cbnz	r3, 9001576a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015766:	f7ff ffd3 	bl	90015710 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001576a:	6823      	ldr	r3, [r4, #0]
9001576c:	466d      	mov	r5, sp
9001576e:	4621      	mov	r1, r4
90015770:	343c      	adds	r4, #60	@ 0x3c
90015772:	4628      	mov	r0, r5
90015774:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90015778:	4798      	blx	r3
9001577a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001577e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90015782:	b005      	add	sp, #20
90015784:	bd30      	pop	{r4, r5, pc}

90015786 <_ZNK8touchgfx3Box12getSolidRectEv>:
90015786:	2300      	movs	r3, #0
90015788:	8083      	strh	r3, [r0, #4]
9001578a:	80c3      	strh	r3, [r0, #6]
9001578c:	8003      	strh	r3, [r0, #0]
9001578e:	8043      	strh	r3, [r0, #2]
90015790:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90015794:	2bff      	cmp	r3, #255	@ 0xff
90015796:	bf01      	itttt	eq
90015798:	890b      	ldrheq	r3, [r1, #8]
9001579a:	8083      	strheq	r3, [r0, #4]
9001579c:	894b      	ldrheq	r3, [r1, #10]
9001579e:	80c3      	strheq	r3, [r0, #6]
900157a0:	4770      	bx	lr
	...

900157a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
900157a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900157a6:	4604      	mov	r4, r0
900157a8:	466b      	mov	r3, sp
900157aa:	6808      	ldr	r0, [r1, #0]
900157ac:	6849      	ldr	r1, [r1, #4]
900157ae:	c303      	stmia	r3!, {r0, r1}
900157b0:	6823      	ldr	r3, [r4, #0]
900157b2:	4669      	mov	r1, sp
900157b4:	4620      	mov	r0, r4
900157b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900157b8:	4798      	blx	r3
900157ba:	4b08      	ldr	r3, [pc, #32]	@ (900157dc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900157bc:	681b      	ldr	r3, [r3, #0]
900157be:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900157c2:	b10a      	cbz	r2, 900157c8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900157c4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900157c6:	b900      	cbnz	r0, 900157ca <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900157c8:	6898      	ldr	r0, [r3, #8]
900157ca:	6803      	ldr	r3, [r0, #0]
900157cc:	4669      	mov	r1, sp
900157ce:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900157d0:	6a1d      	ldr	r5, [r3, #32]
900157d2:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
900157d6:	47a8      	blx	r5
900157d8:	b003      	add	sp, #12
900157da:	bd30      	pop	{r4, r5, pc}
900157dc:	2402340c 	.word	0x2402340c

900157e0 <_ZN8touchgfx3BoxD1Ev>:
900157e0:	4770      	bx	lr

900157e2 <_ZN8touchgfx3BoxD0Ev>:
900157e2:	b510      	push	{r4, lr}
900157e4:	4604      	mov	r4, r0
900157e6:	212c      	movs	r1, #44	@ 0x2c
900157e8:	f014 fc10 	bl	9002a00c <_ZdlPvj>
900157ec:	4620      	mov	r0, r4
900157ee:	bd10      	pop	{r4, pc}

900157f0 <_ZNK8touchgfx3Box17invalidateContentEv>:
900157f0:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
900157f4:	b12a      	cbz	r2, 90015802 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900157f6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900157fa:	b112      	cbz	r2, 90015802 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900157fc:	6803      	ldr	r3, [r0, #0]
900157fe:	695b      	ldr	r3, [r3, #20]
90015800:	4718      	bx	r3
90015802:	4770      	bx	lr

90015804 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90015804:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90015808:	4770      	bx	lr

9001580a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
9001580a:	b570      	push	{r4, r5, r6, lr}
9001580c:	880b      	ldrh	r3, [r1, #0]
9001580e:	4605      	mov	r5, r0
90015810:	4604      	mov	r4, r0
90015812:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90015814:	8813      	ldrh	r3, [r2, #0]
90015816:	f825 3f30 	strh.w	r3, [r5, #48]!
9001581a:	4628      	mov	r0, r5
9001581c:	f006 fa40 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015820:	4606      	mov	r6, r0
90015822:	4628      	mov	r0, r5
90015824:	f006 fa70 	bl	9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015828:	6823      	ldr	r3, [r4, #0]
9001582a:	4605      	mov	r5, r0
9001582c:	4631      	mov	r1, r6
9001582e:	4620      	mov	r0, r4
90015830:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015832:	4798      	blx	r3
90015834:	6823      	ldr	r3, [r4, #0]
90015836:	4629      	mov	r1, r5
90015838:	4620      	mov	r0, r4
9001583a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001583c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015840:	4718      	bx	r3

90015842 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90015842:	b510      	push	{r4, lr}
90015844:	4604      	mov	r4, r0
90015846:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90015848:	b150      	cbz	r0, 90015860 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001584a:	6803      	ldr	r3, [r0, #0]
9001584c:	68db      	ldr	r3, [r3, #12]
9001584e:	4798      	blx	r3
90015850:	b130      	cbz	r0, 90015860 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90015852:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90015854:	4621      	mov	r1, r4
90015856:	6803      	ldr	r3, [r0, #0]
90015858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001585c:	689b      	ldr	r3, [r3, #8]
9001585e:	4718      	bx	r3
90015860:	bd10      	pop	{r4, pc}

90015862 <_ZNK8touchgfx6Button12getSolidRectEv>:
90015862:	b510      	push	{r4, lr}
90015864:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90015868:	4604      	mov	r4, r0
9001586a:	2bff      	cmp	r3, #255	@ 0xff
9001586c:	d006      	beq.n	9001587c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
9001586e:	2300      	movs	r3, #0
90015870:	8003      	strh	r3, [r0, #0]
90015872:	8043      	strh	r3, [r0, #2]
90015874:	8083      	strh	r3, [r0, #4]
90015876:	80c3      	strh	r3, [r0, #6]
90015878:	4620      	mov	r0, r4
9001587a:	bd10      	pop	{r4, pc}
9001587c:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
90015880:	b11b      	cbz	r3, 9001588a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90015882:	3130      	adds	r1, #48	@ 0x30
90015884:	f006 fa74 	bl	9001bd70 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90015888:	e7f6      	b.n	90015878 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
9001588a:	312e      	adds	r1, #46	@ 0x2e
9001588c:	e7fa      	b.n	90015884 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90015890 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90015890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015894:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90015898:	b08a      	sub	sp, #40	@ 0x28
9001589a:	4604      	mov	r4, r0
9001589c:	4688      	mov	r8, r1
9001589e:	2b00      	cmp	r3, #0
900158a0:	d066      	beq.n	90015970 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
900158a2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
900158a4:	a805      	add	r0, sp, #20
900158a6:	f8ad 3014 	strh.w	r3, [sp, #20]
900158aa:	f006 f9f9 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900158ae:	4607      	mov	r7, r0
900158b0:	a805      	add	r0, sp, #20
900158b2:	f006 fa29 	bl	9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>
900158b6:	f9b8 6000 	ldrsh.w	r6, [r8]
900158ba:	f8b8 2004 	ldrh.w	r2, [r8, #4]
900158be:	2300      	movs	r3, #0
900158c0:	4432      	add	r2, r6
900158c2:	9306      	str	r3, [sp, #24]
900158c4:	b292      	uxth	r2, r2
900158c6:	fa0f fc82 	sxth.w	ip, r2
900158ca:	459c      	cmp	ip, r3
900158cc:	dd52      	ble.n	90015974 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900158ce:	42b7      	cmp	r7, r6
900158d0:	dd50      	ble.n	90015974 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900158d2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900158d6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900158da:	442b      	add	r3, r5
900158dc:	b29b      	uxth	r3, r3
900158de:	b219      	sxth	r1, r3
900158e0:	2900      	cmp	r1, #0
900158e2:	dd47      	ble.n	90015974 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900158e4:	42a8      	cmp	r0, r5
900158e6:	dd45      	ble.n	90015974 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900158e8:	4567      	cmp	r7, ip
900158ea:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
900158ee:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900158f2:	bfb8      	it	lt
900158f4:	b2ba      	uxthlt	r2, r7
900158f6:	4288      	cmp	r0, r1
900158f8:	f8ad 6018 	strh.w	r6, [sp, #24]
900158fc:	bfb8      	it	lt
900158fe:	b283      	uxthlt	r3, r0
90015900:	1b92      	subs	r2, r2, r6
90015902:	f8ad 501a 	strh.w	r5, [sp, #26]
90015906:	1b5b      	subs	r3, r3, r5
90015908:	f8ad 201c 	strh.w	r2, [sp, #28]
9001590c:	f8ad 301e 	strh.w	r3, [sp, #30]
90015910:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90015914:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90015918:	429a      	cmp	r2, r3
9001591a:	d026      	beq.n	9001596a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001591c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90015920:	2b00      	cmp	r3, #0
90015922:	dd22      	ble.n	9001596a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015924:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015928:	2b00      	cmp	r3, #0
9001592a:	dd1e      	ble.n	9001596a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001592c:	2300      	movs	r3, #0
9001592e:	a908      	add	r1, sp, #32
90015930:	4620      	mov	r0, r4
90015932:	e9cd 3308 	strd	r3, r3, [sp, #32]
90015936:	6823      	ldr	r3, [r4, #0]
90015938:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001593a:	4798      	blx	r3
9001593c:	4b0f      	ldr	r3, [pc, #60]	@ (9001597c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
9001593e:	681b      	ldr	r3, [r3, #0]
90015940:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015944:	b10a      	cbz	r2, 9001594a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90015946:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90015948:	b900      	cbnz	r0, 9001594c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
9001594a:	6898      	ldr	r0, [r3, #8]
9001594c:	2501      	movs	r5, #1
9001594e:	6801      	ldr	r1, [r0, #0]
90015950:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90015954:	9502      	str	r5, [sp, #8]
90015956:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
9001595a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001595e:	9401      	str	r4, [sp, #4]
90015960:	ac06      	add	r4, sp, #24
90015962:	9400      	str	r4, [sp, #0]
90015964:	688c      	ldr	r4, [r1, #8]
90015966:	a905      	add	r1, sp, #20
90015968:	47a0      	blx	r4
9001596a:	b00a      	add	sp, #40	@ 0x28
9001596c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015970:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
90015972:	e797      	b.n	900158a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90015974:	2300      	movs	r3, #0
90015976:	9307      	str	r3, [sp, #28]
90015978:	e7ca      	b.n	90015910 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
9001597a:	bf00      	nop
9001597c:	2402340c 	.word	0x2402340c

90015980 <_ZNK8touchgfx6Button17invalidateContentEv>:
90015980:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
90015984:	b12a      	cbz	r2, 90015992 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90015986:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001598a:	b112      	cbz	r2, 90015992 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001598c:	6803      	ldr	r3, [r0, #0]
9001598e:	695b      	ldr	r3, [r3, #20]
90015990:	4718      	bx	r3
90015992:	4770      	bx	lr

90015994 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90015994:	4b30      	ldr	r3, [pc, #192]	@ (90015a58 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90015996:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001599a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9001599c:	b08d      	sub	sp, #52	@ 0x34
9001599e:	881b      	ldrh	r3, [r3, #0]
900159a0:	4604      	mov	r4, r0
900159a2:	460f      	mov	r7, r1
900159a4:	4293      	cmp	r3, r2
900159a6:	d954      	bls.n	90015a52 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900159a8:	4b2c      	ldr	r3, [pc, #176]	@ (90015a5c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
900159aa:	6819      	ldr	r1, [r3, #0]
900159ac:	eb01 0342 	add.w	r3, r1, r2, lsl #1
900159b0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
900159b4:	4a2a      	ldr	r2, [pc, #168]	@ (90015a60 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
900159b6:	6812      	ldr	r2, [r2, #0]
900159b8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
900159bc:	2900      	cmp	r1, #0
900159be:	d048      	beq.n	90015a52 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900159c0:	785a      	ldrb	r2, [r3, #1]
900159c2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
900159c6:	f3c2 0801 	ubfx	r8, r2, #0, #2
900159ca:	f3c2 0281 	ubfx	r2, r2, #2, #2
900159ce:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
900159d2:	4b24      	ldr	r3, [pc, #144]	@ (90015a64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
900159d4:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
900159d8:	681a      	ldr	r2, [r3, #0]
900159da:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
900159de:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
900159e2:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
900159e6:	6b26      	ldr	r6, [r4, #48]	@ 0x30
900159e8:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
900159ec:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
900159f0:	9107      	str	r1, [sp, #28]
900159f2:	f88d 8020 	strb.w	r8, [sp, #32]
900159f6:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
900159fa:	9609      	str	r6, [sp, #36]	@ 0x24
900159fc:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90015a00:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
90015a04:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90015a08:	b10b      	cbz	r3, 90015a0e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90015a0a:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90015a0c:	b905      	cbnz	r5, 90015a10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90015a0e:	6895      	ldr	r5, [r2, #8]
90015a10:	ae05      	add	r6, sp, #20
90015a12:	4621      	mov	r1, r4
90015a14:	4630      	mov	r0, r6
90015a16:	f003 fe2f 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015a1a:	4b13      	ldr	r3, [pc, #76]	@ (90015a68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90015a1c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90015a1e:	6818      	ldr	r0, [r3, #0]
90015a20:	f7f0 fe38 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
90015a24:	6823      	ldr	r3, [r4, #0]
90015a26:	4680      	mov	r8, r0
90015a28:	4620      	mov	r0, r4
90015a2a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90015a2c:	4798      	blx	r3
90015a2e:	6823      	ldr	r3, [r4, #0]
90015a30:	4681      	mov	r9, r0
90015a32:	4620      	mov	r0, r4
90015a34:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90015a38:	4798      	blx	r3
90015a3a:	ab07      	add	r3, sp, #28
90015a3c:	f8cd 8004 	str.w	r8, [sp, #4]
90015a40:	9300      	str	r3, [sp, #0]
90015a42:	463b      	mov	r3, r7
90015a44:	e9cd 9002 	strd	r9, r0, [sp, #8]
90015a48:	4628      	mov	r0, r5
90015a4a:	e896 0006 	ldmia.w	r6, {r1, r2}
90015a4e:	f7f0 fdd1 	bl	900065f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015a52:	b00d      	add	sp, #52	@ 0x34
90015a54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015a58:	24023468 	.word	0x24023468
90015a5c:	24023464 	.word	0x24023464
90015a60:	2402346c 	.word	0x2402346c
90015a64:	2402340c 	.word	0x2402340c
90015a68:	24023470 	.word	0x24023470

90015a6c <_ZN8touchgfx5ImageD1Ev>:
90015a6c:	4770      	bx	lr

90015a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90015a6e:	b570      	push	{r4, r5, r6, lr}
90015a70:	880b      	ldrh	r3, [r1, #0]
90015a72:	460d      	mov	r5, r1
90015a74:	4604      	mov	r4, r0
90015a76:	84c3      	strh	r3, [r0, #38]	@ 0x26
90015a78:	4608      	mov	r0, r1
90015a7a:	f006 f911 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015a7e:	4606      	mov	r6, r0
90015a80:	4628      	mov	r0, r5
90015a82:	f006 f941 	bl	9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015a86:	6823      	ldr	r3, [r4, #0]
90015a88:	4605      	mov	r5, r0
90015a8a:	4631      	mov	r1, r6
90015a8c:	4620      	mov	r0, r4
90015a8e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015a90:	4798      	blx	r3
90015a92:	6823      	ldr	r3, [r4, #0]
90015a94:	4629      	mov	r1, r5
90015a96:	4620      	mov	r0, r4
90015a98:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015a9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015a9e:	4718      	bx	r3

90015aa0 <_ZN8touchgfx5ImageD0Ev>:
90015aa0:	b510      	push	{r4, lr}
90015aa2:	4604      	mov	r4, r0
90015aa4:	212c      	movs	r1, #44	@ 0x2c
90015aa6:	f014 fab1 	bl	9002a00c <_ZdlPvj>
90015aaa:	4620      	mov	r0, r4
90015aac:	bd10      	pop	{r4, pc}

90015aae <_ZNK8touchgfx5Image12getSolidRectEv>:
90015aae:	b510      	push	{r4, lr}
90015ab0:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90015ab4:	4604      	mov	r4, r0
90015ab6:	2bff      	cmp	r3, #255	@ 0xff
90015ab8:	d006      	beq.n	90015ac8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90015aba:	2300      	movs	r3, #0
90015abc:	8003      	strh	r3, [r0, #0]
90015abe:	8043      	strh	r3, [r0, #2]
90015ac0:	8083      	strh	r3, [r0, #4]
90015ac2:	80c3      	strh	r3, [r0, #6]
90015ac4:	4620      	mov	r0, r4
90015ac6:	bd10      	pop	{r4, pc}
90015ac8:	3126      	adds	r1, #38	@ 0x26
90015aca:	f006 f951 	bl	9001bd70 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90015ace:	e7f9      	b.n	90015ac4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90015ad0 <_ZNK8touchgfx5Image17invalidateContentEv>:
90015ad0:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90015ad4:	b12a      	cbz	r2, 90015ae2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90015ad6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90015ada:	b112      	cbz	r2, 90015ae2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90015adc:	6803      	ldr	r3, [r0, #0]
90015ade:	695b      	ldr	r3, [r3, #20]
90015ae0:	4718      	bx	r3
90015ae2:	4770      	bx	lr

90015ae4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90015ae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015ae8:	4604      	mov	r4, r0
90015aea:	b088      	sub	sp, #32
90015aec:	2500      	movs	r5, #0
90015aee:	460f      	mov	r7, r1
90015af0:	f854 3b26 	ldr.w	r3, [r4], #38
90015af4:	a904      	add	r1, sp, #16
90015af6:	4606      	mov	r6, r0
90015af8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015afa:	e9cd 5504 	strd	r5, r5, [sp, #16]
90015afe:	4798      	blx	r3
90015b00:	4620      	mov	r0, r4
90015b02:	f006 f8cd 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015b06:	4680      	mov	r8, r0
90015b08:	4620      	mov	r0, r4
90015b0a:	f006 f8fd 	bl	9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015b0e:	9506      	str	r5, [sp, #24]
90015b10:	ad06      	add	r5, sp, #24
90015b12:	f8ad 001e 	strh.w	r0, [sp, #30]
90015b16:	4639      	mov	r1, r7
90015b18:	f8ad 801c 	strh.w	r8, [sp, #28]
90015b1c:	4628      	mov	r0, r5
90015b1e:	f7fc fb5d 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
90015b22:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90015b26:	2b00      	cmp	r3, #0
90015b28:	dd19      	ble.n	90015b5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90015b2a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015b2e:	2b00      	cmp	r3, #0
90015b30:	dd15      	ble.n	90015b5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90015b32:	4b0c      	ldr	r3, [pc, #48]	@ (90015b64 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90015b34:	681b      	ldr	r3, [r3, #0]
90015b36:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015b3a:	b10a      	cbz	r2, 90015b40 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90015b3c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90015b3e:	b900      	cbnz	r0, 90015b42 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90015b40:	6898      	ldr	r0, [r3, #8]
90015b42:	2701      	movs	r7, #1
90015b44:	6801      	ldr	r1, [r0, #0]
90015b46:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90015b4a:	9702      	str	r7, [sp, #8]
90015b4c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90015b50:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90015b54:	e9cd 5600 	strd	r5, r6, [sp]
90015b58:	688d      	ldr	r5, [r1, #8]
90015b5a:	4621      	mov	r1, r4
90015b5c:	47a8      	blx	r5
90015b5e:	b008      	add	sp, #32
90015b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015b64:	2402340c 	.word	0x2402340c

90015b68 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90015b68:	4770      	bx	lr

90015b6a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90015b6a:	b510      	push	{r4, lr}
90015b6c:	4604      	mov	r4, r0
90015b6e:	2148      	movs	r1, #72	@ 0x48
90015b70:	f014 fa4c 	bl	9002a00c <_ZdlPvj>
90015b74:	4620      	mov	r0, r4
90015b76:	bd10      	pop	{r4, pc}

90015b78 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90015b78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015b7c:	b08d      	sub	sp, #52	@ 0x34
90015b7e:	4604      	mov	r4, r0
90015b80:	460f      	mov	r7, r1
90015b82:	f7ff fe85 	bl	90015890 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90015b86:	4a55      	ldr	r2, [pc, #340]	@ (90015cdc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90015b88:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90015b8a:	8812      	ldrh	r2, [r2, #0]
90015b8c:	429a      	cmp	r2, r3
90015b8e:	f240 8082 	bls.w	90015c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015b92:	4d53      	ldr	r5, [pc, #332]	@ (90015ce0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90015b94:	682a      	ldr	r2, [r5, #0]
90015b96:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90015b9a:	4b52      	ldr	r3, [pc, #328]	@ (90015ce4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90015b9c:	681b      	ldr	r3, [r3, #0]
90015b9e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90015ba2:	2200      	movs	r2, #0
90015ba4:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
90015ba8:	e9cd 2203 	strd	r2, r2, [sp, #12]
90015bac:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90015bb0:	2a03      	cmp	r2, #3
90015bb2:	d811      	bhi.n	90015bd8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90015bb4:	e8df f002 	tbb	[pc, r2]
90015bb8:	89727902 	.word	0x89727902
90015bbc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015bc0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90015bc4:	1ad2      	subs	r2, r2, r3
90015bc6:	2002      	movs	r0, #2
90015bc8:	f8ad 1010 	strh.w	r1, [sp, #16]
90015bcc:	f8ad 3012 	strh.w	r3, [sp, #18]
90015bd0:	fb92 f2f0 	sdiv	r2, r2, r0
90015bd4:	f8ad 200e 	strh.w	r2, [sp, #14]
90015bd8:	f10d 080c 	add.w	r8, sp, #12
90015bdc:	f10d 0914 	add.w	r9, sp, #20
90015be0:	e898 0003 	ldmia.w	r8, {r0, r1}
90015be4:	e889 0003 	stmia.w	r9, {r0, r1}
90015be8:	4639      	mov	r1, r7
90015bea:	4648      	mov	r0, r9
90015bec:	f7fc faf6 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
90015bf0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015bf4:	2b00      	cmp	r3, #0
90015bf6:	dd4e      	ble.n	90015c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015bf8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015bfc:	2b00      	cmp	r3, #0
90015bfe:	dd4a      	ble.n	90015c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015c00:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90015c04:	4641      	mov	r1, r8
90015c06:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015c0a:	4620      	mov	r0, r4
90015c0c:	1a9b      	subs	r3, r3, r2
90015c0e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90015c12:	f8ad 3014 	strh.w	r3, [sp, #20]
90015c16:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90015c1a:	1a9b      	subs	r3, r3, r2
90015c1c:	f8ad 3016 	strh.w	r3, [sp, #22]
90015c20:	6823      	ldr	r3, [r4, #0]
90015c22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015c24:	4798      	blx	r3
90015c26:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90015c2a:	2b00      	cmp	r3, #0
90015c2c:	d053      	beq.n	90015cd6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90015c2e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90015c30:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
90015c32:	682b      	ldr	r3, [r5, #0]
90015c34:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
90015c38:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90015c3c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
90015c40:	785b      	ldrb	r3, [r3, #1]
90015c42:	9209      	str	r2, [sp, #36]	@ 0x24
90015c44:	f3c3 0501 	ubfx	r5, r3, #0, #2
90015c48:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015c4c:	9607      	str	r6, [sp, #28]
90015c4e:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
90015c52:	2300      	movs	r3, #0
90015c54:	f88d 5020 	strb.w	r5, [sp, #32]
90015c58:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90015c5c:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
90015c60:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90015c64:	4b20      	ldr	r3, [pc, #128]	@ (90015ce8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90015c66:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90015c6a:	681b      	ldr	r3, [r3, #0]
90015c6c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90015c70:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015c74:	b10a      	cbz	r2, 90015c7a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90015c76:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
90015c78:	b904      	cbnz	r4, 90015c7c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90015c7a:	689c      	ldr	r4, [r3, #8]
90015c7c:	4b1b      	ldr	r3, [pc, #108]	@ (90015cec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90015c7e:	6818      	ldr	r0, [r3, #0]
90015c80:	f7f0 fd08 	bl	90006694 <_ZNK8touchgfx5Texts7getTextEt>
90015c84:	ab07      	add	r3, sp, #28
90015c86:	9001      	str	r0, [sp, #4]
90015c88:	4620      	mov	r0, r4
90015c8a:	9300      	str	r3, [sp, #0]
90015c8c:	464b      	mov	r3, r9
90015c8e:	e898 0006 	ldmia.w	r8, {r1, r2}
90015c92:	f7f0 fcaf 	bl	900065f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015c96:	b00d      	add	sp, #52	@ 0x34
90015c98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015c9c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015ca0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90015ca4:	1ad2      	subs	r2, r2, r3
90015ca6:	3201      	adds	r2, #1
90015ca8:	e78d      	b.n	90015bc6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90015caa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015cae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90015cb2:	1ad2      	subs	r2, r2, r3
90015cb4:	3201      	adds	r2, #1
90015cb6:	2002      	movs	r0, #2
90015cb8:	f8ad 3010 	strh.w	r3, [sp, #16]
90015cbc:	f8ad 1012 	strh.w	r1, [sp, #18]
90015cc0:	fb92 f2f0 	sdiv	r2, r2, r0
90015cc4:	f8ad 200c 	strh.w	r2, [sp, #12]
90015cc8:	e786      	b.n	90015bd8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90015cca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015cce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90015cd2:	1ad2      	subs	r2, r2, r3
90015cd4:	e7ef      	b.n	90015cb6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90015cd6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
90015cd8:	e7aa      	b.n	90015c30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90015cda:	bf00      	nop
90015cdc:	24023468 	.word	0x24023468
90015ce0:	24023464 	.word	0x24023464
90015ce4:	2402346c 	.word	0x2402346c
90015ce8:	2402340c 	.word	0x2402340c
90015cec:	24023470 	.word	0x24023470

90015cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90015cf0:	2101      	movs	r1, #1
90015cf2:	2200      	movs	r2, #0
90015cf4:	b510      	push	{r4, lr}
90015cf6:	4c13      	ldr	r4, [pc, #76]	@ (90015d44 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90015cf8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90015cfc:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90015d00:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90015d04:	6004      	str	r4, [r0, #0]
90015d06:	4c10      	ldr	r4, [pc, #64]	@ (90015d48 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90015d08:	8082      	strh	r2, [r0, #4]
90015d0a:	80c2      	strh	r2, [r0, #6]
90015d0c:	8102      	strh	r2, [r0, #8]
90015d0e:	8142      	strh	r2, [r0, #10]
90015d10:	8182      	strh	r2, [r0, #12]
90015d12:	81c2      	strh	r2, [r0, #14]
90015d14:	8202      	strh	r2, [r0, #16]
90015d16:	8242      	strh	r2, [r0, #18]
90015d18:	61c2      	str	r2, [r0, #28]
90015d1a:	8402      	strh	r2, [r0, #32]
90015d1c:	8442      	strh	r2, [r0, #34]	@ 0x22
90015d1e:	6282      	str	r2, [r0, #40]	@ 0x28
90015d20:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90015d24:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90015d26:	8601      	strh	r1, [r0, #48]	@ 0x30
90015d28:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90015d2c:	6344      	str	r4, [r0, #52]	@ 0x34
90015d2e:	8701      	strh	r1, [r0, #56]	@ 0x38
90015d30:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90015d34:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90015d38:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015d3c:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90015d40:	bd10      	pop	{r4, pc}
90015d42:	bf00      	nop
90015d44:	9002e6bc 	.word	0x9002e6bc
90015d48:	9002d3d8 	.word	0x9002d3d8

90015d4c <_ZN8touchgfx7OutlineD1Ev>:
90015d4c:	4770      	bx	lr

90015d4e <_ZN8touchgfx7OutlineD0Ev>:
90015d4e:	b510      	push	{r4, lr}
90015d50:	4604      	mov	r4, r0
90015d52:	2130      	movs	r1, #48	@ 0x30
90015d54:	f014 f95a 	bl	9002a00c <_ZdlPvj>
90015d58:	4620      	mov	r0, r4
90015d5a:	bd10      	pop	{r4, pc}

90015d5c <_ZN8touchgfx7Outline5resetEv>:
90015d5c:	b510      	push	{r4, lr}
90015d5e:	4604      	mov	r4, r0
90015d60:	f000 fe86 	bl	90016a70 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90015d64:	60e0      	str	r0, [r4, #12]
90015d66:	f000 fe89 	bl	90016a7c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90015d6a:	68e3      	ldr	r3, [r4, #12]
90015d6c:	08c0      	lsrs	r0, r0, #3
90015d6e:	2200      	movs	r2, #0
90015d70:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90015d74:	6123      	str	r3, [r4, #16]
90015d76:	3801      	subs	r0, #1
90015d78:	60a2      	str	r2, [r4, #8]
90015d7a:	6060      	str	r0, [r4, #4]
90015d7c:	8019      	strh	r1, [r3, #0]
90015d7e:	8059      	strh	r1, [r3, #2]
90015d80:	809a      	strh	r2, [r3, #4]
90015d82:	80da      	strh	r2, [r3, #6]
90015d84:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015d86:	f023 0301 	bic.w	r3, r3, #1
90015d8a:	f043 0302 	orr.w	r3, r3, #2
90015d8e:	6263      	str	r3, [r4, #36]	@ 0x24
90015d90:	bd10      	pop	{r4, pc}
	...

90015d94 <_ZN8touchgfx7OutlineC1Ev>:
90015d94:	4b0a      	ldr	r3, [pc, #40]	@ (90015dc0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90015d96:	b510      	push	{r4, lr}
90015d98:	6003      	str	r3, [r0, #0]
90015d9a:	2300      	movs	r3, #0
90015d9c:	4604      	mov	r4, r0
90015d9e:	6243      	str	r3, [r0, #36]	@ 0x24
90015da0:	e9c0 3301 	strd	r3, r3, [r0, #4]
90015da4:	e9c0 3303 	strd	r3, r3, [r0, #12]
90015da8:	e9c0 3305 	strd	r3, r3, [r0, #20]
90015dac:	e9c0 3307 	strd	r3, r3, [r0, #28]
90015db0:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90015db4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90015db8:	f7ff ffd0 	bl	90015d5c <_ZN8touchgfx7Outline5resetEv>
90015dbc:	4620      	mov	r0, r4
90015dbe:	bd10      	pop	{r4, pc}
90015dc0:	9002e730 	.word	0x9002e730

90015dc4 <_ZN8touchgfx7Outline10renderLineEiiii>:
90015dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015dc8:	b093      	sub	sp, #76	@ 0x4c
90015dca:	1156      	asrs	r6, r2, #5
90015dcc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90015dce:	9305      	str	r3, [sp, #20]
90015dd0:	1153      	asrs	r3, r2, #5
90015dd2:	f004 051f 	and.w	r5, r4, #31
90015dd6:	9303      	str	r3, [sp, #12]
90015dd8:	1163      	asrs	r3, r4, #5
90015dda:	9504      	str	r5, [sp, #16]
90015ddc:	1165      	asrs	r5, r4, #5
90015dde:	9306      	str	r3, [sp, #24]
90015de0:	f002 031f 	and.w	r3, r2, #31
90015de4:	42ae      	cmp	r6, r5
90015de6:	f040 80f4 	bne.w	90015fd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90015dea:	9c04      	ldr	r4, [sp, #16]
90015dec:	9a05      	ldr	r2, [sp, #20]
90015dee:	42a3      	cmp	r3, r4
90015df0:	ea4f 1e62 	mov.w	lr, r2, asr #5
90015df4:	6902      	ldr	r2, [r0, #16]
90015df6:	d125      	bne.n	90015e44 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90015df8:	f9b2 3000 	ldrsh.w	r3, [r2]
90015dfc:	459e      	cmp	lr, r3
90015dfe:	d103      	bne.n	90015e08 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90015e00:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015e04:	429e      	cmp	r6, r3
90015e06:	d035      	beq.n	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015e08:	88d1      	ldrh	r1, [r2, #6]
90015e0a:	8893      	ldrh	r3, [r2, #4]
90015e0c:	430b      	orrs	r3, r1
90015e0e:	d010      	beq.n	90015e32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015e10:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015e14:	2b00      	cmp	r3, #0
90015e16:	db0c      	blt.n	90015e32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015e18:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90015e1a:	428b      	cmp	r3, r1
90015e1c:	da09      	bge.n	90015e32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015e1e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015e22:	428b      	cmp	r3, r1
90015e24:	f103 0301 	add.w	r3, r3, #1
90015e28:	bf38      	it	cc
90015e2a:	3208      	addcc	r2, #8
90015e2c:	6083      	str	r3, [r0, #8]
90015e2e:	bf38      	it	cc
90015e30:	6102      	strcc	r2, [r0, #16]
90015e32:	6903      	ldr	r3, [r0, #16]
90015e34:	9a03      	ldr	r2, [sp, #12]
90015e36:	f8a3 e000 	strh.w	lr, [r3]
90015e3a:	805a      	strh	r2, [r3, #2]
90015e3c:	2200      	movs	r2, #0
90015e3e:	809a      	strh	r2, [r3, #4]
90015e40:	80da      	strh	r2, [r3, #6]
90015e42:	e017      	b.n	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015e44:	9c05      	ldr	r4, [sp, #20]
90015e46:	114e      	asrs	r6, r1, #5
90015e48:	f001 0c1f 	and.w	ip, r1, #31
90015e4c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90015e50:	f004 041f 	and.w	r4, r4, #31
90015e54:	4576      	cmp	r6, lr
90015e56:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90015e5a:	9402      	str	r4, [sp, #8]
90015e5c:	9c04      	ldr	r4, [sp, #16]
90015e5e:	eba4 0403 	sub.w	r4, r4, r3
90015e62:	d10a      	bne.n	90015e7a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90015e64:	9b02      	ldr	r3, [sp, #8]
90015e66:	44a0      	add	r8, r4
90015e68:	449c      	add	ip, r3
90015e6a:	f8a2 8004 	strh.w	r8, [r2, #4]
90015e6e:	fb04 a40c 	mla	r4, r4, ip, sl
90015e72:	80d4      	strh	r4, [r2, #6]
90015e74:	b013      	add	sp, #76	@ 0x4c
90015e76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015e7a:	9d05      	ldr	r5, [sp, #20]
90015e7c:	1a69      	subs	r1, r5, r1
90015e7e:	bf51      	iteee	pl
90015e80:	f1cc 0520 	rsbpl	r5, ip, #32
90015e84:	fb04 f40c 	mulmi.w	r4, r4, ip
90015e88:	4249      	negmi	r1, r1
90015e8a:	2500      	movmi	r5, #0
90015e8c:	bf5d      	ittte	pl
90015e8e:	436c      	mulpl	r4, r5
90015e90:	2520      	movpl	r5, #32
90015e92:	f04f 0901 	movpl.w	r9, #1
90015e96:	f04f 39ff 	movmi.w	r9, #4294967295	@ 0xffffffff
90015e9a:	9501      	str	r5, [sp, #4]
90015e9c:	9f01      	ldr	r7, [sp, #4]
90015e9e:	444e      	add	r6, r9
90015ea0:	fb94 f5f1 	sdiv	r5, r4, r1
90015ea4:	fb01 4415 	mls	r4, r1, r5, r4
90015ea8:	44bc      	add	ip, r7
90015eaa:	2c00      	cmp	r4, #0
90015eac:	bfbc      	itt	lt
90015eae:	f105 35ff 	addlt.w	r5, r5, #4294967295	@ 0xffffffff
90015eb2:	1864      	addlt	r4, r4, r1
90015eb4:	44a8      	add	r8, r5
90015eb6:	fb05 ac0c 	mla	ip, r5, ip, sl
90015eba:	f8a2 8004 	strh.w	r8, [r2, #4]
90015ebe:	f8a2 c006 	strh.w	ip, [r2, #6]
90015ec2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015ec6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015eca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90015ece:	ea58 0202 	orrs.w	r2, r8, r2
90015ed2:	d011      	beq.n	90015ef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015ed4:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90015ed8:	f1b8 0f00 	cmp.w	r8, #0
90015edc:	db0c      	blt.n	90015ef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015ede:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90015ee0:	4590      	cmp	r8, r2
90015ee2:	da09      	bge.n	90015ef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015ee4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90015ee8:	4590      	cmp	r8, r2
90015eea:	bf3c      	itt	cc
90015eec:	f10c 0208 	addcc.w	r2, ip, #8
90015ef0:	6102      	strcc	r2, [r0, #16]
90015ef2:	f108 0201 	add.w	r2, r8, #1
90015ef6:	6082      	str	r2, [r0, #8]
90015ef8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015efc:	2700      	movs	r7, #0
90015efe:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90015f02:	45b6      	cmp	lr, r6
90015f04:	f8ac 6000 	strh.w	r6, [ip]
90015f08:	442b      	add	r3, r5
90015f0a:	f8ac 2002 	strh.w	r2, [ip, #2]
90015f0e:	f8ac 7004 	strh.w	r7, [ip, #4]
90015f12:	f8ac 7006 	strh.w	r7, [ip, #6]
90015f16:	d04b      	beq.n	90015fb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90015f18:	9f04      	ldr	r7, [sp, #16]
90015f1a:	1a64      	subs	r4, r4, r1
90015f1c:	f04f 0a00 	mov.w	sl, #0
90015f20:	1aff      	subs	r7, r7, r3
90015f22:	443d      	add	r5, r7
90015f24:	016d      	lsls	r5, r5, #5
90015f26:	fb95 f8f1 	sdiv	r8, r5, r1
90015f2a:	fb01 5518 	mls	r5, r1, r8, r5
90015f2e:	2d00      	cmp	r5, #0
90015f30:	bfbc      	itt	lt
90015f32:	f108 38ff 	addlt.w	r8, r8, #4294967295	@ 0xffffffff
90015f36:	186d      	addlt	r5, r5, r1
90015f38:	f108 0701 	add.w	r7, r8, #1
90015f3c:	9703      	str	r7, [sp, #12]
90015f3e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015f42:	1964      	adds	r4, r4, r5
90015f44:	444e      	add	r6, r9
90015f46:	bf54      	ite	pl
90015f48:	9f03      	ldrpl	r7, [sp, #12]
90015f4a:	4647      	movmi	r7, r8
90015f4c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90015f50:	bf58      	it	pl
90015f52:	1a64      	subpl	r4, r4, r1
90015f54:	443b      	add	r3, r7
90015f56:	44bb      	add	fp, r7
90015f58:	f8ac b004 	strh.w	fp, [ip, #4]
90015f5c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015f60:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015f64:	f8ac b006 	strh.w	fp, [ip, #6]
90015f68:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015f6c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015f70:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015f74:	ea5b 0707 	orrs.w	r7, fp, r7
90015f78:	d011      	beq.n	90015f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015f7a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90015f7e:	f1bb 0f00 	cmp.w	fp, #0
90015f82:	db0c      	blt.n	90015f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015f84:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015f86:	45bb      	cmp	fp, r7
90015f88:	da09      	bge.n	90015f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015f8a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90015f8e:	45bb      	cmp	fp, r7
90015f90:	bf3c      	itt	cc
90015f92:	f10c 0708 	addcc.w	r7, ip, #8
90015f96:	6107      	strcc	r7, [r0, #16]
90015f98:	f10b 0701 	add.w	r7, fp, #1
90015f9c:	6087      	str	r7, [r0, #8]
90015f9e:	6907      	ldr	r7, [r0, #16]
90015fa0:	45b6      	cmp	lr, r6
90015fa2:	803e      	strh	r6, [r7, #0]
90015fa4:	807a      	strh	r2, [r7, #2]
90015fa6:	f8a7 a004 	strh.w	sl, [r7, #4]
90015faa:	f8a7 a006 	strh.w	sl, [r7, #6]
90015fae:	d1c6      	bne.n	90015f3e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90015fb0:	9a04      	ldr	r2, [sp, #16]
90015fb2:	1ad3      	subs	r3, r2, r3
90015fb4:	6902      	ldr	r2, [r0, #16]
90015fb6:	8891      	ldrh	r1, [r2, #4]
90015fb8:	88d6      	ldrh	r6, [r2, #6]
90015fba:	4419      	add	r1, r3
90015fbc:	8091      	strh	r1, [r2, #4]
90015fbe:	9902      	ldr	r1, [sp, #8]
90015fc0:	f101 0c20 	add.w	ip, r1, #32
90015fc4:	9901      	ldr	r1, [sp, #4]
90015fc6:	ebac 0c01 	sub.w	ip, ip, r1
90015fca:	fb03 630c 	mla	r3, r3, ip, r6
90015fce:	80d3      	strh	r3, [r2, #6]
90015fd0:	e750      	b.n	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015fd2:	9d05      	ldr	r5, [sp, #20]
90015fd4:	1aa2      	subs	r2, r4, r2
90015fd6:	eba5 0501 	sub.w	r5, r5, r1
90015fda:	9202      	str	r2, [sp, #8]
90015fdc:	9508      	str	r5, [sp, #32]
90015fde:	f140 8128 	bpl.w	90016232 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90015fe2:	9a03      	ldr	r2, [sp, #12]
90015fe4:	2a00      	cmp	r2, #0
90015fe6:	f6ff af45 	blt.w	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015fea:	9a02      	ldr	r2, [sp, #8]
90015fec:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
90015ff0:	4252      	negs	r2, r2
90015ff2:	940b      	str	r4, [sp, #44]	@ 0x2c
90015ff4:	2400      	movs	r4, #0
90015ff6:	9202      	str	r2, [sp, #8]
90015ff8:	9a06      	ldr	r2, [sp, #24]
90015ffa:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90015ffe:	9206      	str	r2, [sp, #24]
90016000:	462a      	mov	r2, r5
90016002:	435a      	muls	r2, r3
90016004:	9401      	str	r4, [sp, #4]
90016006:	9c02      	ldr	r4, [sp, #8]
90016008:	9d02      	ldr	r5, [sp, #8]
9001600a:	fb92 f4f4 	sdiv	r4, r2, r4
9001600e:	fb05 2214 	mls	r2, r5, r4, r2
90016012:	2a00      	cmp	r2, #0
90016014:	9207      	str	r2, [sp, #28]
90016016:	bfbc      	itt	lt
90016018:	1952      	addlt	r2, r2, r5
9001601a:	f104 34ff 	addlt.w	r4, r4, #4294967295	@ 0xffffffff
9001601e:	6905      	ldr	r5, [r0, #16]
90016020:	bfb8      	it	lt
90016022:	9207      	strlt	r2, [sp, #28]
90016024:	eb04 0901 	add.w	r9, r4, r1
90016028:	9a01      	ldr	r2, [sp, #4]
9001602a:	ea4f 1669 	mov.w	r6, r9, asr #5
9001602e:	429a      	cmp	r2, r3
90016030:	f040 8111 	bne.w	90016256 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90016034:	f9b5 3000 	ldrsh.w	r3, [r5]
90016038:	429e      	cmp	r6, r3
9001603a:	d104      	bne.n	90016046 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
9001603c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016040:	9a03      	ldr	r2, [sp, #12]
90016042:	429a      	cmp	r2, r3
90016044:	d01b      	beq.n	9001607e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016046:	88ea      	ldrh	r2, [r5, #6]
90016048:	88ab      	ldrh	r3, [r5, #4]
9001604a:	4313      	orrs	r3, r2
9001604c:	d010      	beq.n	90016070 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001604e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016052:	2a00      	cmp	r2, #0
90016054:	db0c      	blt.n	90016070 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90016056:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016058:	429a      	cmp	r2, r3
9001605a:	da09      	bge.n	90016070 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001605c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90016060:	429a      	cmp	r2, r3
90016062:	f102 0201 	add.w	r2, r2, #1
90016066:	bf38      	it	cc
90016068:	3508      	addcc	r5, #8
9001606a:	6082      	str	r2, [r0, #8]
9001606c:	bf38      	it	cc
9001606e:	6105      	strcc	r5, [r0, #16]
90016070:	6903      	ldr	r3, [r0, #16]
90016072:	9a03      	ldr	r2, [sp, #12]
90016074:	801e      	strh	r6, [r3, #0]
90016076:	805a      	strh	r2, [r3, #2]
90016078:	2200      	movs	r2, #0
9001607a:	809a      	strh	r2, [r3, #4]
9001607c:	80da      	strh	r2, [r3, #6]
9001607e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90016080:	9a03      	ldr	r2, [sp, #12]
90016082:	6901      	ldr	r1, [r0, #16]
90016084:	441a      	add	r2, r3
90016086:	f9b1 3000 	ldrsh.w	r3, [r1]
9001608a:	42b3      	cmp	r3, r6
9001608c:	d103      	bne.n	90016096 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001608e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016092:	429a      	cmp	r2, r3
90016094:	d01a      	beq.n	900160cc <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90016096:	88cc      	ldrh	r4, [r1, #6]
90016098:	888b      	ldrh	r3, [r1, #4]
9001609a:	4323      	orrs	r3, r4
9001609c:	d010      	beq.n	900160c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001609e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900160a2:	2c00      	cmp	r4, #0
900160a4:	db0c      	blt.n	900160c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900160a6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900160a8:	429c      	cmp	r4, r3
900160aa:	da09      	bge.n	900160c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900160ac:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900160b0:	429c      	cmp	r4, r3
900160b2:	f104 0401 	add.w	r4, r4, #1
900160b6:	bf38      	it	cc
900160b8:	3108      	addcc	r1, #8
900160ba:	6084      	str	r4, [r0, #8]
900160bc:	bf38      	it	cc
900160be:	6101      	strcc	r1, [r0, #16]
900160c0:	6903      	ldr	r3, [r0, #16]
900160c2:	2100      	movs	r1, #0
900160c4:	801e      	strh	r6, [r3, #0]
900160c6:	805a      	strh	r2, [r3, #2]
900160c8:	8099      	strh	r1, [r3, #4]
900160ca:	80d9      	strh	r1, [r3, #6]
900160cc:	9b06      	ldr	r3, [sp, #24]
900160ce:	4293      	cmp	r3, r2
900160d0:	f000 8082 	beq.w	900161d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900160d4:	9b08      	ldr	r3, [sp, #32]
900160d6:	9902      	ldr	r1, [sp, #8]
900160d8:	015b      	lsls	r3, r3, #5
900160da:	9c02      	ldr	r4, [sp, #8]
900160dc:	fb93 f1f1 	sdiv	r1, r3, r1
900160e0:	fb04 3311 	mls	r3, r4, r1, r3
900160e4:	9103      	str	r1, [sp, #12]
900160e6:	2b00      	cmp	r3, #0
900160e8:	9308      	str	r3, [sp, #32]
900160ea:	da04      	bge.n	900160f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900160ec:	1e4b      	subs	r3, r1, #1
900160ee:	9303      	str	r3, [sp, #12]
900160f0:	9b08      	ldr	r3, [sp, #32]
900160f2:	4423      	add	r3, r4
900160f4:	9308      	str	r3, [sp, #32]
900160f6:	9b07      	ldr	r3, [sp, #28]
900160f8:	464f      	mov	r7, r9
900160fa:	9902      	ldr	r1, [sp, #8]
900160fc:	2600      	movs	r6, #0
900160fe:	1a5b      	subs	r3, r3, r1
90016100:	9307      	str	r3, [sp, #28]
90016102:	9b01      	ldr	r3, [sp, #4]
90016104:	f1c3 0320 	rsb	r3, r3, #32
90016108:	930e      	str	r3, [sp, #56]	@ 0x38
9001610a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001610c:	9b01      	ldr	r3, [sp, #4]
9001610e:	1a5b      	subs	r3, r3, r1
90016110:	930a      	str	r3, [sp, #40]	@ 0x28
90016112:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90016116:	185b      	adds	r3, r3, r1
90016118:	bf58      	it	pl
9001611a:	9902      	ldrpl	r1, [sp, #8]
9001611c:	9307      	str	r3, [sp, #28]
9001611e:	bf57      	itett	pl
90016120:	1a5b      	subpl	r3, r3, r1
90016122:	9903      	ldrmi	r1, [sp, #12]
90016124:	9307      	strpl	r3, [sp, #28]
90016126:	9b03      	ldrpl	r3, [sp, #12]
90016128:	bf58      	it	pl
9001612a:	1c59      	addpl	r1, r3, #1
9001612c:	2a00      	cmp	r2, #0
9001612e:	4489      	add	r9, r1
90016130:	ea4f 1a69 	mov.w	sl, r9, asr #5
90016134:	db2e      	blt.n	90016194 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016136:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016138:	4293      	cmp	r3, r2
9001613a:	dd2b      	ble.n	90016194 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001613c:	9c01      	ldr	r4, [sp, #4]
9001613e:	6905      	ldr	r5, [r0, #16]
90016140:	46a0      	mov	r8, r4
90016142:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90016144:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90016148:	45a0      	cmp	r8, r4
9001614a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001614e:	f040 814c 	bne.w	900163ea <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90016152:	f9b5 1000 	ldrsh.w	r1, [r5]
90016156:	4551      	cmp	r1, sl
90016158:	d103      	bne.n	90016162 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001615a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001615e:	4291      	cmp	r1, r2
90016160:	d018      	beq.n	90016194 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016162:	ea5c 010e 	orrs.w	r1, ip, lr
90016166:	d00f      	beq.n	90016188 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016168:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001616c:	2900      	cmp	r1, #0
9001616e:	db0b      	blt.n	90016188 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016170:	428b      	cmp	r3, r1
90016172:	dd09      	ble.n	90016188 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016174:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90016178:	4299      	cmp	r1, r3
9001617a:	f101 0101 	add.w	r1, r1, #1
9001617e:	bf38      	it	cc
90016180:	3508      	addcc	r5, #8
90016182:	6081      	str	r1, [r0, #8]
90016184:	bf38      	it	cc
90016186:	6105      	strcc	r5, [r0, #16]
90016188:	6903      	ldr	r3, [r0, #16]
9001618a:	f8a3 a000 	strh.w	sl, [r3]
9001618e:	805a      	strh	r2, [r3, #2]
90016190:	809e      	strh	r6, [r3, #4]
90016192:	80de      	strh	r6, [r3, #6]
90016194:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90016196:	6901      	ldr	r1, [r0, #16]
90016198:	441a      	add	r2, r3
9001619a:	88cc      	ldrh	r4, [r1, #6]
9001619c:	888b      	ldrh	r3, [r1, #4]
9001619e:	4323      	orrs	r3, r4
900161a0:	d010      	beq.n	900161c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900161a2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900161a6:	2c00      	cmp	r4, #0
900161a8:	db0c      	blt.n	900161c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900161aa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900161ac:	429c      	cmp	r4, r3
900161ae:	da09      	bge.n	900161c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900161b0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900161b4:	429c      	cmp	r4, r3
900161b6:	f104 0401 	add.w	r4, r4, #1
900161ba:	bf38      	it	cc
900161bc:	3108      	addcc	r1, #8
900161be:	6084      	str	r4, [r0, #8]
900161c0:	bf38      	it	cc
900161c2:	6101      	strcc	r1, [r0, #16]
900161c4:	6903      	ldr	r3, [r0, #16]
900161c6:	464f      	mov	r7, r9
900161c8:	f8a3 a000 	strh.w	sl, [r3]
900161cc:	805a      	strh	r2, [r3, #2]
900161ce:	809e      	strh	r6, [r3, #4]
900161d0:	80de      	strh	r6, [r3, #6]
900161d2:	9b06      	ldr	r3, [sp, #24]
900161d4:	4293      	cmp	r3, r2
900161d6:	d19c      	bne.n	90016112 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900161d8:	9b01      	ldr	r3, [sp, #4]
900161da:	6907      	ldr	r7, [r0, #16]
900161dc:	f1c3 0620 	rsb	r6, r3, #32
900161e0:	9b05      	ldr	r3, [sp, #20]
900161e2:	ea4f 1e63 	mov.w	lr, r3, asr #5
900161e6:	9b04      	ldr	r3, [sp, #16]
900161e8:	429e      	cmp	r6, r3
900161ea:	f040 81c7 	bne.w	9001657c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900161ee:	f9b7 3000 	ldrsh.w	r3, [r7]
900161f2:	459e      	cmp	lr, r3
900161f4:	d104      	bne.n	90016200 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900161f6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900161fa:	429a      	cmp	r2, r3
900161fc:	f43f ae3a 	beq.w	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016200:	88f9      	ldrh	r1, [r7, #6]
90016202:	88bb      	ldrh	r3, [r7, #4]
90016204:	430b      	orrs	r3, r1
90016206:	d010      	beq.n	9001622a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016208:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001620c:	2b00      	cmp	r3, #0
9001620e:	db0c      	blt.n	9001622a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016210:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90016212:	428b      	cmp	r3, r1
90016214:	da09      	bge.n	9001622a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016216:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001621a:	428b      	cmp	r3, r1
9001621c:	f103 0301 	add.w	r3, r3, #1
90016220:	bf38      	it	cc
90016222:	3708      	addcc	r7, #8
90016224:	6083      	str	r3, [r0, #8]
90016226:	bf38      	it	cc
90016228:	6107      	strcc	r7, [r0, #16]
9001622a:	6903      	ldr	r3, [r0, #16]
9001622c:	f8a3 e000 	strh.w	lr, [r3]
90016230:	e603      	b.n	90015e3a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90016232:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90016234:	9c03      	ldr	r4, [sp, #12]
90016236:	42a2      	cmp	r2, r4
90016238:	f6ff ae1c 	blt.w	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001623c:	9c06      	ldr	r4, [sp, #24]
9001623e:	42a2      	cmp	r2, r4
90016240:	9c08      	ldr	r4, [sp, #32]
90016242:	bfbc      	itt	lt
90016244:	3201      	addlt	r2, #1
90016246:	9206      	strlt	r2, [sp, #24]
90016248:	f1c3 0220 	rsb	r2, r3, #32
9001624c:	4362      	muls	r2, r4
9001624e:	2401      	movs	r4, #1
90016250:	940b      	str	r4, [sp, #44]	@ 0x2c
90016252:	2420      	movs	r4, #32
90016254:	e6d6      	b.n	90016004 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90016256:	ea4f 1861 	mov.w	r8, r1, asr #5
9001625a:	f009 021f 	and.w	r2, r9, #31
9001625e:	f001 011f 	and.w	r1, r1, #31
90016262:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90016266:	920c      	str	r2, [sp, #48]	@ 0x30
90016268:	45b0      	cmp	r8, r6
9001626a:	9a01      	ldr	r2, [sp, #4]
9001626c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90016270:	eba2 0203 	sub.w	r2, r2, r3
90016274:	d108      	bne.n	90016288 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90016276:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016278:	4496      	add	lr, r2
9001627a:	4419      	add	r1, r3
9001627c:	f8a5 e004 	strh.w	lr, [r5, #4]
90016280:	fb02 a101 	mla	r1, r2, r1, sl
90016284:	80e9      	strh	r1, [r5, #6]
90016286:	e6fa      	b.n	9001607e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016288:	2c00      	cmp	r4, #0
9001628a:	f2c0 80a7 	blt.w	900163dc <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001628e:	2701      	movs	r7, #1
90016290:	f1c1 0c20 	rsb	ip, r1, #32
90016294:	970a      	str	r7, [sp, #40]	@ 0x28
90016296:	2720      	movs	r7, #32
90016298:	fb02 f20c 	mul.w	r2, r2, ip
9001629c:	9709      	str	r7, [sp, #36]	@ 0x24
9001629e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900162a0:	fb92 fcf4 	sdiv	ip, r2, r4
900162a4:	fb04 221c 	mls	r2, r4, ip, r2
900162a8:	4439      	add	r1, r7
900162aa:	2a00      	cmp	r2, #0
900162ac:	bfbc      	itt	lt
900162ae:	f10c 3cff 	addlt.w	ip, ip, #4294967295	@ 0xffffffff
900162b2:	1912      	addlt	r2, r2, r4
900162b4:	fb0c a101 	mla	r1, ip, r1, sl
900162b8:	44e6      	add	lr, ip
900162ba:	80e9      	strh	r1, [r5, #6]
900162bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
900162be:	f8a5 e004 	strh.w	lr, [r5, #4]
900162c2:	eb08 0501 	add.w	r5, r8, r1
900162c6:	6901      	ldr	r1, [r0, #16]
900162c8:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900162cc:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900162d0:	ea58 070e 	orrs.w	r7, r8, lr
900162d4:	d010      	beq.n	900162f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900162d6:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900162da:	f1be 0f00 	cmp.w	lr, #0
900162de:	db0b      	blt.n	900162f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900162e0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900162e2:	45be      	cmp	lr, r7
900162e4:	da08      	bge.n	900162f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900162e6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900162ea:	45be      	cmp	lr, r7
900162ec:	bf3c      	itt	cc
900162ee:	3108      	addcc	r1, #8
900162f0:	6101      	strcc	r1, [r0, #16]
900162f2:	f10e 0101 	add.w	r1, lr, #1
900162f6:	6081      	str	r1, [r0, #8]
900162f8:	6901      	ldr	r1, [r0, #16]
900162fa:	f04f 0e00 	mov.w	lr, #0
900162fe:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90016302:	42ae      	cmp	r6, r5
90016304:	800d      	strh	r5, [r1, #0]
90016306:	4463      	add	r3, ip
90016308:	f8a1 8002 	strh.w	r8, [r1, #2]
9001630c:	f8a1 e004 	strh.w	lr, [r1, #4]
90016310:	f8a1 e006 	strh.w	lr, [r1, #6]
90016314:	d053      	beq.n	900163be <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90016316:	9901      	ldr	r1, [sp, #4]
90016318:	1b12      	subs	r2, r2, r4
9001631a:	1ac9      	subs	r1, r1, r3
9001631c:	4461      	add	r1, ip
9001631e:	0149      	lsls	r1, r1, #5
90016320:	fb91 fef4 	sdiv	lr, r1, r4
90016324:	fb04 111e 	mls	r1, r4, lr, r1
90016328:	2900      	cmp	r1, #0
9001632a:	bfbc      	itt	lt
9001632c:	f10e 3eff 	addlt.w	lr, lr, #4294967295	@ 0xffffffff
90016330:	1909      	addlt	r1, r1, r4
90016332:	f10e 0701 	add.w	r7, lr, #1
90016336:	970d      	str	r7, [sp, #52]	@ 0x34
90016338:	f8d0 a010 	ldr.w	sl, [r0, #16]
9001633c:	1852      	adds	r2, r2, r1
9001633e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90016340:	bf54      	ite	pl
90016342:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90016346:	46f4      	movmi	ip, lr
90016348:	f8ba b004 	ldrh.w	fp, [sl, #4]
9001634c:	bf58      	it	pl
9001634e:	1b12      	subpl	r2, r2, r4
90016350:	4463      	add	r3, ip
90016352:	443d      	add	r5, r7
90016354:	44e3      	add	fp, ip
90016356:	f8aa b004 	strh.w	fp, [sl, #4]
9001635a:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001635e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90016362:	f8aa b006 	strh.w	fp, [sl, #6]
90016366:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001636a:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001636e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90016372:	ea5b 070a 	orrs.w	r7, fp, sl
90016376:	d014      	beq.n	900163a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016378:	f9bc a002 	ldrsh.w	sl, [ip, #2]
9001637c:	f1ba 0f00 	cmp.w	sl, #0
90016380:	db0f      	blt.n	900163a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016382:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90016384:	45ba      	cmp	sl, r7
90016386:	da0c      	bge.n	900163a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016388:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001638c:	45ba      	cmp	sl, r7
9001638e:	f10a 0a01 	add.w	sl, sl, #1
90016392:	bf38      	it	cc
90016394:	f10c 0c08 	addcc.w	ip, ip, #8
90016398:	f8c0 a008 	str.w	sl, [r0, #8]
9001639c:	bf38      	it	cc
9001639e:	f8c0 c010 	strcc.w	ip, [r0, #16]
900163a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900163a6:	f04f 0700 	mov.w	r7, #0
900163aa:	42ae      	cmp	r6, r5
900163ac:	f8ac 5000 	strh.w	r5, [ip]
900163b0:	f8ac 8002 	strh.w	r8, [ip, #2]
900163b4:	f8ac 7004 	strh.w	r7, [ip, #4]
900163b8:	f8ac 7006 	strh.w	r7, [ip, #6]
900163bc:	d1bc      	bne.n	90016338 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900163be:	6904      	ldr	r4, [r0, #16]
900163c0:	9a01      	ldr	r2, [sp, #4]
900163c2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900163c4:	1ad3      	subs	r3, r2, r3
900163c6:	88a2      	ldrh	r2, [r4, #4]
900163c8:	3120      	adds	r1, #32
900163ca:	441a      	add	r2, r3
900163cc:	80a2      	strh	r2, [r4, #4]
900163ce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900163d0:	1a89      	subs	r1, r1, r2
900163d2:	88e2      	ldrh	r2, [r4, #6]
900163d4:	fb03 2301 	mla	r3, r3, r1, r2
900163d8:	80e3      	strh	r3, [r4, #6]
900163da:	e650      	b.n	9001607e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900163dc:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
900163e0:	434a      	muls	r2, r1
900163e2:	4264      	negs	r4, r4
900163e4:	970a      	str	r7, [sp, #40]	@ 0x28
900163e6:	2700      	movs	r7, #0
900163e8:	e758      	b.n	9001629c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900163ea:	ea4f 1867 	mov.w	r8, r7, asr #5
900163ee:	f009 031f 	and.w	r3, r9, #31
900163f2:	f007 071f 	and.w	r7, r7, #31
900163f6:	fa1f fc8c 	uxth.w	ip, ip
900163fa:	45d0      	cmp	r8, sl
900163fc:	930f      	str	r3, [sp, #60]	@ 0x3c
900163fe:	fa1f fe8e 	uxth.w	lr, lr
90016402:	d10a      	bne.n	9001641a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90016404:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90016406:	449c      	add	ip, r3
90016408:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001640a:	441f      	add	r7, r3
9001640c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001640e:	f8a5 c004 	strh.w	ip, [r5, #4]
90016412:	fb03 e707 	mla	r7, r3, r7, lr
90016416:	80ef      	strh	r7, [r5, #6]
90016418:	e6bc      	b.n	90016194 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001641a:	2900      	cmp	r1, #0
9001641c:	f2c0 80a6 	blt.w	9001656c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90016420:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90016422:	f1c7 0320 	rsb	r3, r7, #32
90016426:	4363      	muls	r3, r4
90016428:	2401      	movs	r4, #1
9001642a:	940d      	str	r4, [sp, #52]	@ 0x34
9001642c:	2420      	movs	r4, #32
9001642e:	940c      	str	r4, [sp, #48]	@ 0x30
90016430:	fb93 f4f1 	sdiv	r4, r3, r1
90016434:	fb01 3b14 	mls	fp, r1, r4, r3
90016438:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001643a:	f1bb 0f00 	cmp.w	fp, #0
9001643e:	441f      	add	r7, r3
90016440:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016442:	bfbc      	itt	lt
90016444:	f104 34ff 	addlt.w	r4, r4, #4294967295	@ 0xffffffff
90016448:	448b      	addlt	fp, r1
9001644a:	fb04 e707 	mla	r7, r4, r7, lr
9001644e:	44a4      	add	ip, r4
90016450:	80ef      	strh	r7, [r5, #6]
90016452:	f8a5 c004 	strh.w	ip, [r5, #4]
90016456:	eb08 0503 	add.w	r5, r8, r3
9001645a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001645e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90016462:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016466:	ea5e 0307 	orrs.w	r3, lr, r7
9001646a:	d011      	beq.n	90016490 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001646c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90016470:	f1be 0f00 	cmp.w	lr, #0
90016474:	db0c      	blt.n	90016490 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016476:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90016478:	45be      	cmp	lr, r7
9001647a:	da09      	bge.n	90016490 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001647c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90016480:	45be      	cmp	lr, r7
90016482:	bf3c      	itt	cc
90016484:	f10c 0708 	addcc.w	r7, ip, #8
90016488:	6107      	strcc	r7, [r0, #16]
9001648a:	f10e 0701 	add.w	r7, lr, #1
9001648e:	6087      	str	r7, [r0, #8]
90016490:	6907      	ldr	r7, [r0, #16]
90016492:	b213      	sxth	r3, r2
90016494:	4555      	cmp	r5, sl
90016496:	9310      	str	r3, [sp, #64]	@ 0x40
90016498:	807b      	strh	r3, [r7, #2]
9001649a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001649c:	803d      	strh	r5, [r7, #0]
9001649e:	80be      	strh	r6, [r7, #4]
900164a0:	eb04 0c03 	add.w	ip, r4, r3
900164a4:	80fe      	strh	r6, [r7, #6]
900164a6:	d050      	beq.n	9001654a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900164a8:	9b01      	ldr	r3, [sp, #4]
900164aa:	eba3 070c 	sub.w	r7, r3, ip
900164ae:	ebab 0301 	sub.w	r3, fp, r1
900164b2:	443c      	add	r4, r7
900164b4:	9309      	str	r3, [sp, #36]	@ 0x24
900164b6:	0164      	lsls	r4, r4, #5
900164b8:	fb94 f8f1 	sdiv	r8, r4, r1
900164bc:	fb01 4418 	mls	r4, r1, r8, r4
900164c0:	2c00      	cmp	r4, #0
900164c2:	bfbc      	itt	lt
900164c4:	f108 38ff 	addlt.w	r8, r8, #4294967295	@ 0xffffffff
900164c8:	1864      	addlt	r4, r4, r1
900164ca:	f108 0701 	add.w	r7, r8, #1
900164ce:	9711      	str	r7, [sp, #68]	@ 0x44
900164d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900164d2:	f8d0 e010 	ldr.w	lr, [r0, #16]
900164d6:	191b      	adds	r3, r3, r4
900164d8:	f8be b004 	ldrh.w	fp, [lr, #4]
900164dc:	bf54      	ite	pl
900164de:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
900164e0:	4647      	movmi	r7, r8
900164e2:	9309      	str	r3, [sp, #36]	@ 0x24
900164e4:	bf58      	it	pl
900164e6:	1a5b      	subpl	r3, r3, r1
900164e8:	44bb      	add	fp, r7
900164ea:	44bc      	add	ip, r7
900164ec:	bf58      	it	pl
900164ee:	9309      	strpl	r3, [sp, #36]	@ 0x24
900164f0:	f8ae b004 	strh.w	fp, [lr, #4]
900164f4:	f8be b006 	ldrh.w	fp, [lr, #6]
900164f8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900164fc:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
900164fe:	f8ae b006 	strh.w	fp, [lr, #6]
90016502:	443d      	add	r5, r7
90016504:	f8d0 e010 	ldr.w	lr, [r0, #16]
90016508:	f8be b006 	ldrh.w	fp, [lr, #6]
9001650c:	f8be 7004 	ldrh.w	r7, [lr, #4]
90016510:	ea5b 0307 	orrs.w	r3, fp, r7
90016514:	d011      	beq.n	9001653a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016516:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001651a:	f1bb 0f00 	cmp.w	fp, #0
9001651e:	db0c      	blt.n	9001653a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016520:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90016522:	45bb      	cmp	fp, r7
90016524:	da09      	bge.n	9001653a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016526:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001652a:	45bb      	cmp	fp, r7
9001652c:	bf3c      	itt	cc
9001652e:	f10e 0708 	addcc.w	r7, lr, #8
90016532:	6107      	strcc	r7, [r0, #16]
90016534:	f10b 0701 	add.w	r7, fp, #1
90016538:	6087      	str	r7, [r0, #8]
9001653a:	6907      	ldr	r7, [r0, #16]
9001653c:	4555      	cmp	r5, sl
9001653e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90016540:	803d      	strh	r5, [r7, #0]
90016542:	807b      	strh	r3, [r7, #2]
90016544:	80be      	strh	r6, [r7, #4]
90016546:	80fe      	strh	r6, [r7, #6]
90016548:	d1c2      	bne.n	900164d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001654a:	9b01      	ldr	r3, [sp, #4]
9001654c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001654e:	eba3 0c0c 	sub.w	ip, r3, ip
90016552:	6903      	ldr	r3, [r0, #16]
90016554:	3720      	adds	r7, #32
90016556:	8899      	ldrh	r1, [r3, #4]
90016558:	4461      	add	r1, ip
9001655a:	8099      	strh	r1, [r3, #4]
9001655c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001655e:	1a7f      	subs	r7, r7, r1
90016560:	88d9      	ldrh	r1, [r3, #6]
90016562:	fb0c 1c07 	mla	ip, ip, r7, r1
90016566:	f8a3 c006 	strh.w	ip, [r3, #6]
9001656a:	e613      	b.n	90016194 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001656c:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
90016570:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90016572:	4249      	negs	r1, r1
90016574:	940d      	str	r4, [sp, #52]	@ 0x34
90016576:	2400      	movs	r4, #0
90016578:	437b      	muls	r3, r7
9001657a:	e758      	b.n	9001642e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
9001657c:	9905      	ldr	r1, [sp, #20]
9001657e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90016582:	f009 0c1f 	and.w	ip, r9, #31
90016586:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001658a:	f001 011f 	and.w	r1, r1, #31
9001658e:	45f3      	cmp	fp, lr
90016590:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90016594:	9102      	str	r1, [sp, #8]
90016596:	9904      	ldr	r1, [sp, #16]
90016598:	eba1 0406 	sub.w	r4, r1, r6
9001659c:	d108      	bne.n	900165b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001659e:	9b02      	ldr	r3, [sp, #8]
900165a0:	44a0      	add	r8, r4
900165a2:	449c      	add	ip, r3
900165a4:	f8a7 8004 	strh.w	r8, [r7, #4]
900165a8:	fb04 a40c 	mla	r4, r4, ip, sl
900165ac:	80fc      	strh	r4, [r7, #6]
900165ae:	e461      	b.n	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900165b0:	9905      	ldr	r1, [sp, #20]
900165b2:	ebb1 0109 	subs.w	r1, r1, r9
900165b6:	bf51      	iteee	pl
900165b8:	f1cc 0520 	rsbpl	r5, ip, #32
900165bc:	fb04 f40c 	mulmi.w	r4, r4, ip
900165c0:	4249      	negmi	r1, r1
900165c2:	2500      	movmi	r5, #0
900165c4:	bf5d      	ittte	pl
900165c6:	436c      	mulpl	r4, r5
900165c8:	2520      	movpl	r5, #32
900165ca:	f04f 0901 	movpl.w	r9, #1
900165ce:	f04f 39ff 	movmi.w	r9, #4294967295	@ 0xffffffff
900165d2:	9501      	str	r5, [sp, #4]
900165d4:	9b01      	ldr	r3, [sp, #4]
900165d6:	fb94 f5f1 	sdiv	r5, r4, r1
900165da:	fb01 4415 	mls	r4, r1, r5, r4
900165de:	449c      	add	ip, r3
900165e0:	eb0b 0309 	add.w	r3, fp, r9
900165e4:	2c00      	cmp	r4, #0
900165e6:	bfbc      	itt	lt
900165e8:	f105 35ff 	addlt.w	r5, r5, #4294967295	@ 0xffffffff
900165ec:	1864      	addlt	r4, r4, r1
900165ee:	44a8      	add	r8, r5
900165f0:	fb05 ac0c 	mla	ip, r5, ip, sl
900165f4:	f8a7 8004 	strh.w	r8, [r7, #4]
900165f8:	f8a7 c006 	strh.w	ip, [r7, #6]
900165fc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016600:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90016604:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016608:	ea58 0707 	orrs.w	r7, r8, r7
9001660c:	d011      	beq.n	90016632 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001660e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90016612:	f1b8 0f00 	cmp.w	r8, #0
90016616:	db0c      	blt.n	90016632 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016618:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001661a:	45b8      	cmp	r8, r7
9001661c:	da09      	bge.n	90016632 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001661e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90016622:	45b8      	cmp	r8, r7
90016624:	bf3c      	itt	cc
90016626:	f10c 0708 	addcc.w	r7, ip, #8
9001662a:	6107      	strcc	r7, [r0, #16]
9001662c:	f108 0701 	add.w	r7, r8, #1
90016630:	6087      	str	r7, [r0, #8]
90016632:	6907      	ldr	r7, [r0, #16]
90016634:	f04f 0c00 	mov.w	ip, #0
90016638:	b212      	sxth	r2, r2
9001663a:	459e      	cmp	lr, r3
9001663c:	803b      	strh	r3, [r7, #0]
9001663e:	442e      	add	r6, r5
90016640:	807a      	strh	r2, [r7, #2]
90016642:	f8a7 c004 	strh.w	ip, [r7, #4]
90016646:	f8a7 c006 	strh.w	ip, [r7, #6]
9001664a:	d04b      	beq.n	900166e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
9001664c:	9f04      	ldr	r7, [sp, #16]
9001664e:	1a64      	subs	r4, r4, r1
90016650:	f04f 0a00 	mov.w	sl, #0
90016654:	1bbf      	subs	r7, r7, r6
90016656:	443d      	add	r5, r7
90016658:	016d      	lsls	r5, r5, #5
9001665a:	fb95 f8f1 	sdiv	r8, r5, r1
9001665e:	fb01 5518 	mls	r5, r1, r8, r5
90016662:	4565      	cmp	r5, ip
90016664:	bfbc      	itt	lt
90016666:	f108 38ff 	addlt.w	r8, r8, #4294967295	@ 0xffffffff
9001666a:	186d      	addlt	r5, r5, r1
9001666c:	f108 0701 	add.w	r7, r8, #1
90016670:	9703      	str	r7, [sp, #12]
90016672:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016676:	1964      	adds	r4, r4, r5
90016678:	444b      	add	r3, r9
9001667a:	bf54      	ite	pl
9001667c:	9f03      	ldrpl	r7, [sp, #12]
9001667e:	4647      	movmi	r7, r8
90016680:	f8bc b004 	ldrh.w	fp, [ip, #4]
90016684:	bf58      	it	pl
90016686:	1a64      	subpl	r4, r4, r1
90016688:	443e      	add	r6, r7
9001668a:	44bb      	add	fp, r7
9001668c:	f8ac b004 	strh.w	fp, [ip, #4]
90016690:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016694:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016698:	f8ac b006 	strh.w	fp, [ip, #6]
9001669c:	f8d0 c010 	ldr.w	ip, [r0, #16]
900166a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900166a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900166a8:	ea5b 0707 	orrs.w	r7, fp, r7
900166ac:	d011      	beq.n	900166d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900166ae:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900166b2:	f1bb 0f00 	cmp.w	fp, #0
900166b6:	db0c      	blt.n	900166d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900166b8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900166ba:	45bb      	cmp	fp, r7
900166bc:	da09      	bge.n	900166d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900166be:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900166c2:	45bb      	cmp	fp, r7
900166c4:	bf3c      	itt	cc
900166c6:	f10c 0708 	addcc.w	r7, ip, #8
900166ca:	6107      	strcc	r7, [r0, #16]
900166cc:	f10b 0701 	add.w	r7, fp, #1
900166d0:	6087      	str	r7, [r0, #8]
900166d2:	6907      	ldr	r7, [r0, #16]
900166d4:	459e      	cmp	lr, r3
900166d6:	803b      	strh	r3, [r7, #0]
900166d8:	807a      	strh	r2, [r7, #2]
900166da:	f8a7 a004 	strh.w	sl, [r7, #4]
900166de:	f8a7 a006 	strh.w	sl, [r7, #6]
900166e2:	d1c6      	bne.n	90016672 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900166e4:	9b04      	ldr	r3, [sp, #16]
900166e6:	1b9e      	subs	r6, r3, r6
900166e8:	6903      	ldr	r3, [r0, #16]
900166ea:	889a      	ldrh	r2, [r3, #4]
900166ec:	4432      	add	r2, r6
900166ee:	809a      	strh	r2, [r3, #4]
900166f0:	9a02      	ldr	r2, [sp, #8]
900166f2:	f102 0c20 	add.w	ip, r2, #32
900166f6:	9a01      	ldr	r2, [sp, #4]
900166f8:	ebac 0c02 	sub.w	ip, ip, r2
900166fc:	88da      	ldrh	r2, [r3, #6]
900166fe:	fb06 260c 	mla	r6, r6, ip, r2
90016702:	80de      	strh	r6, [r3, #6]
90016704:	f7ff bbb6 	b.w	90015e74 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90016708 <_ZN8touchgfx7Outline6lineToEii>:
90016708:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001670a:	079b      	lsls	r3, r3, #30
9001670c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001670e:	460e      	mov	r6, r1
90016710:	4615      	mov	r5, r2
90016712:	d511      	bpl.n	90016738 <_ZN8touchgfx7Outline6lineToEii+0x30>
90016714:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90016718:	ea86 0701 	eor.w	r7, r6, r1
9001671c:	ea85 0302 	eor.w	r3, r5, r2
90016720:	433b      	orrs	r3, r7
90016722:	d009      	beq.n	90016738 <_ZN8touchgfx7Outline6lineToEii+0x30>
90016724:	4633      	mov	r3, r6
90016726:	9500      	str	r5, [sp, #0]
90016728:	f7ff fb4c 	bl	90015dc4 <_ZN8touchgfx7Outline10renderLineEiiii>
9001672c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001672e:	f043 0301 	orr.w	r3, r3, #1
90016732:	e9c0 6505 	strd	r6, r5, [r0, #20]
90016736:	6243      	str	r3, [r0, #36]	@ 0x24
90016738:	b003      	add	sp, #12
9001673a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001673c <_ZN8touchgfx7Outline6moveToEii>:
9001673c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001673e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90016740:	4615      	mov	r5, r2
90016742:	4604      	mov	r4, r0
90016744:	460e      	mov	r6, r1
90016746:	079a      	lsls	r2, r3, #30
90016748:	d401      	bmi.n	9001674e <_ZN8touchgfx7Outline6moveToEii+0x12>
9001674a:	f7ff fb07 	bl	90015d5c <_ZN8touchgfx7Outline5resetEv>
9001674e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016750:	07db      	lsls	r3, r3, #31
90016752:	d504      	bpl.n	9001675e <_ZN8touchgfx7Outline6moveToEii+0x22>
90016754:	4620      	mov	r0, r4
90016756:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001675a:	f7ff ffd5 	bl	90016708 <_ZN8touchgfx7Outline6lineToEii>
9001675e:	6923      	ldr	r3, [r4, #16]
90016760:	1170      	asrs	r0, r6, #5
90016762:	1169      	asrs	r1, r5, #5
90016764:	f9b3 2000 	ldrsh.w	r2, [r3]
90016768:	4290      	cmp	r0, r2
9001676a:	d103      	bne.n	90016774 <_ZN8touchgfx7Outline6moveToEii+0x38>
9001676c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016770:	4291      	cmp	r1, r2
90016772:	d01a      	beq.n	900167aa <_ZN8touchgfx7Outline6moveToEii+0x6e>
90016774:	88df      	ldrh	r7, [r3, #6]
90016776:	889a      	ldrh	r2, [r3, #4]
90016778:	433a      	orrs	r2, r7
9001677a:	d010      	beq.n	9001679e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001677c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016780:	2a00      	cmp	r2, #0
90016782:	db0c      	blt.n	9001679e <_ZN8touchgfx7Outline6moveToEii+0x62>
90016784:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90016786:	42ba      	cmp	r2, r7
90016788:	da09      	bge.n	9001679e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001678a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
9001678e:	42ba      	cmp	r2, r7
90016790:	f102 0201 	add.w	r2, r2, #1
90016794:	bf38      	it	cc
90016796:	3308      	addcc	r3, #8
90016798:	60a2      	str	r2, [r4, #8]
9001679a:	bf38      	it	cc
9001679c:	6123      	strcc	r3, [r4, #16]
9001679e:	6923      	ldr	r3, [r4, #16]
900167a0:	2200      	movs	r2, #0
900167a2:	8018      	strh	r0, [r3, #0]
900167a4:	8059      	strh	r1, [r3, #2]
900167a6:	809a      	strh	r2, [r3, #4]
900167a8:	80da      	strh	r2, [r3, #6]
900167aa:	6166      	str	r6, [r4, #20]
900167ac:	6225      	str	r5, [r4, #32]
900167ae:	e9c4 5606 	strd	r5, r6, [r4, #24]
900167b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900167b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900167b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900167b8:	b0d0      	sub	sp, #320	@ 0x140
900167ba:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900167be:	466c      	mov	r4, sp
900167c0:	4627      	mov	r7, r4
900167c2:	1a0d      	subs	r5, r1, r0
900167c4:	f100 0308 	add.w	r3, r0, #8
900167c8:	2d48      	cmp	r5, #72	@ 0x48
900167ca:	f340 80d5 	ble.w	90016978 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900167ce:	112d      	asrs	r5, r5, #4
900167d0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900167d4:	f9b0 9000 	ldrsh.w	r9, [r0]
900167d8:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900167dc:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
900167e0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900167e4:	6816      	ldr	r6, [r2, #0]
900167e6:	6006      	str	r6, [r0, #0]
900167e8:	6856      	ldr	r6, [r2, #4]
900167ea:	6046      	str	r6, [r0, #4]
900167ec:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900167f0:	f8a2 8002 	strh.w	r8, [r2, #2]
900167f4:	f8a2 e004 	strh.w	lr, [r2, #4]
900167f8:	f8a2 c006 	strh.w	ip, [r2, #6]
900167fc:	f1a1 0208 	sub.w	r2, r1, #8
90016800:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90016804:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90016808:	4565      	cmp	r5, ip
9001680a:	db06      	blt.n	9001681a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
9001680c:	d119      	bne.n	90016842 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001680e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90016812:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90016816:	42ae      	cmp	r6, r5
90016818:	dd13      	ble.n	90016842 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001681a:	460e      	mov	r6, r1
9001681c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90016820:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90016824:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90016828:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
9001682c:	601d      	str	r5, [r3, #0]
9001682e:	6875      	ldr	r5, [r6, #4]
90016830:	605d      	str	r5, [r3, #4]
90016832:	f821 9c08 	strh.w	r9, [r1, #-8]
90016836:	f821 cc06 	strh.w	ip, [r1, #-6]
9001683a:	f821 8c04 	strh.w	r8, [r1, #-4]
9001683e:	f821 ec02 	strh.w	lr, [r1, #-2]
90016842:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90016846:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001684a:	42ae      	cmp	r6, r5
9001684c:	db06      	blt.n	9001685c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001684e:	d116      	bne.n	9001687e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90016850:	f9b0 c000 	ldrsh.w	ip, [r0]
90016854:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90016858:	45ac      	cmp	ip, r5
9001685a:	da10      	bge.n	9001687e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001685c:	681d      	ldr	r5, [r3, #0]
9001685e:	f9b0 8000 	ldrsh.w	r8, [r0]
90016862:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90016866:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001686a:	6005      	str	r5, [r0, #0]
9001686c:	685d      	ldr	r5, [r3, #4]
9001686e:	f8a0 8008 	strh.w	r8, [r0, #8]
90016872:	6045      	str	r5, [r0, #4]
90016874:	8146      	strh	r6, [r0, #10]
90016876:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001687a:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001687e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90016882:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90016886:	4565      	cmp	r5, ip
90016888:	db06      	blt.n	90016898 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001688a:	d119      	bne.n	900168c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001688c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90016890:	f9b0 5000 	ldrsh.w	r5, [r0]
90016894:	42ae      	cmp	r6, r5
90016896:	da13      	bge.n	900168c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016898:	460e      	mov	r6, r1
9001689a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001689e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900168a2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900168a6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900168aa:	6005      	str	r5, [r0, #0]
900168ac:	6875      	ldr	r5, [r6, #4]
900168ae:	6045      	str	r5, [r0, #4]
900168b0:	f821 9c08 	strh.w	r9, [r1, #-8]
900168b4:	f821 cc06 	strh.w	ip, [r1, #-6]
900168b8:	f821 8c04 	strh.w	r8, [r1, #-4]
900168bc:	f821 ec02 	strh.w	lr, [r1, #-2]
900168c0:	3308      	adds	r3, #8
900168c2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900168c6:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900168ca:	45e6      	cmp	lr, ip
900168cc:	dbf8      	blt.n	900168c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900168ce:	d105      	bne.n	900168dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900168d0:	f9b3 6000 	ldrsh.w	r6, [r3]
900168d4:	f9b0 5000 	ldrsh.w	r5, [r0]
900168d8:	42ae      	cmp	r6, r5
900168da:	dbf1      	blt.n	900168c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900168dc:	4615      	mov	r5, r2
900168de:	3a08      	subs	r2, #8
900168e0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900168e4:	45b4      	cmp	ip, r6
900168e6:	dbf9      	blt.n	900168dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900168e8:	d105      	bne.n	900168f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900168ea:	f9b0 8000 	ldrsh.w	r8, [r0]
900168ee:	f9b2 6000 	ldrsh.w	r6, [r2]
900168f2:	45b0      	cmp	r8, r6
900168f4:	dbf2      	blt.n	900168dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900168f6:	4293      	cmp	r3, r2
900168f8:	f1a5 0608 	sub.w	r6, r5, #8
900168fc:	d816      	bhi.n	9001692c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900168fe:	f8d6 c000 	ldr.w	ip, [r6]
90016902:	f9b3 a000 	ldrsh.w	sl, [r3]
90016906:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001690a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
9001690e:	f8c3 c000 	str.w	ip, [r3]
90016912:	f8d6 c004 	ldr.w	ip, [r6, #4]
90016916:	f8c3 c004 	str.w	ip, [r3, #4]
9001691a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001691e:	f825 ec06 	strh.w	lr, [r5, #-6]
90016922:	f825 9c04 	strh.w	r9, [r5, #-4]
90016926:	f825 8c02 	strh.w	r8, [r5, #-2]
9001692a:	e7c9      	b.n	900168c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001692c:	f8d6 e000 	ldr.w	lr, [r6]
90016930:	f9b0 a000 	ldrsh.w	sl, [r0]
90016934:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90016938:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
9001693c:	f8c0 e000 	str.w	lr, [r0]
90016940:	f8d6 e004 	ldr.w	lr, [r6, #4]
90016944:	1a16      	subs	r6, r2, r0
90016946:	f8c0 e004 	str.w	lr, [r0, #4]
9001694a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001694e:	f825 cc06 	strh.w	ip, [r5, #-6]
90016952:	f825 9c04 	strh.w	r9, [r5, #-4]
90016956:	f825 8c02 	strh.w	r8, [r5, #-2]
9001695a:	1acd      	subs	r5, r1, r3
9001695c:	10ed      	asrs	r5, r5, #3
9001695e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90016962:	bfb5      	itete	lt
90016964:	e9c4 0200 	strdlt	r0, r2, [r4]
90016968:	e9c4 3100 	strdge	r3, r1, [r4]
9001696c:	460a      	movlt	r2, r1
9001696e:	4603      	movge	r3, r0
90016970:	3408      	adds	r4, #8
90016972:	4618      	mov	r0, r3
90016974:	4611      	mov	r1, r2
90016976:	e724      	b.n	900167c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016978:	4299      	cmp	r1, r3
9001697a:	d927      	bls.n	900169cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
9001697c:	f1a3 0210 	sub.w	r2, r3, #16
90016980:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90016984:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90016988:	45ac      	cmp	ip, r5
9001698a:	db06      	blt.n	9001699a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
9001698c:	d11c      	bne.n	900169c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001698e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90016992:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90016996:	42ae      	cmp	r6, r5
90016998:	da16      	bge.n	900169c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001699a:	4615      	mov	r5, r2
9001699c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900169a0:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900169a4:	3a08      	subs	r2, #8
900169a6:	f855 6f08 	ldr.w	r6, [r5, #8]!
900169aa:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900169ae:	6196      	str	r6, [r2, #24]
900169b0:	42a8      	cmp	r0, r5
900169b2:	686e      	ldr	r6, [r5, #4]
900169b4:	f8a2 9010 	strh.w	r9, [r2, #16]
900169b8:	61d6      	str	r6, [r2, #28]
900169ba:	f8a2 c012 	strh.w	ip, [r2, #18]
900169be:	f8a2 8014 	strh.w	r8, [r2, #20]
900169c2:	f8a2 e016 	strh.w	lr, [r2, #22]
900169c6:	d1db      	bne.n	90016980 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900169c8:	3308      	adds	r3, #8
900169ca:	e7d5      	b.n	90016978 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900169cc:	42bc      	cmp	r4, r7
900169ce:	d903      	bls.n	900169d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900169d0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900169d4:	3c08      	subs	r4, #8
900169d6:	e6f4      	b.n	900167c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900169d8:	b050      	add	sp, #320	@ 0x140
900169da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900169de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900169de:	b510      	push	{r4, lr}
900169e0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900169e2:	4604      	mov	r4, r0
900169e4:	07da      	lsls	r2, r3, #31
900169e6:	d507      	bpl.n	900169f8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900169e8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900169ec:	f7ff fe8c 	bl	90016708 <_ZN8touchgfx7Outline6lineToEii>
900169f0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900169f2:	f023 0301 	bic.w	r3, r3, #1
900169f6:	6243      	str	r3, [r0, #36]	@ 0x24
900169f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900169fa:	079b      	lsls	r3, r3, #30
900169fc:	d521      	bpl.n	90016a42 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900169fe:	6923      	ldr	r3, [r4, #16]
90016a00:	88d9      	ldrh	r1, [r3, #6]
90016a02:	889a      	ldrh	r2, [r3, #4]
90016a04:	430a      	orrs	r2, r1
90016a06:	d010      	beq.n	90016a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016a08:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016a0c:	2a00      	cmp	r2, #0
90016a0e:	db0c      	blt.n	90016a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016a10:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90016a12:	428a      	cmp	r2, r1
90016a14:	da09      	bge.n	90016a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016a16:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90016a1a:	4291      	cmp	r1, r2
90016a1c:	f102 0201 	add.w	r2, r2, #1
90016a20:	bf88      	it	hi
90016a22:	3308      	addhi	r3, #8
90016a24:	60a2      	str	r2, [r4, #8]
90016a26:	bf88      	it	hi
90016a28:	6123      	strhi	r3, [r4, #16]
90016a2a:	68a1      	ldr	r1, [r4, #8]
90016a2c:	b129      	cbz	r1, 90016a3a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90016a2e:	6863      	ldr	r3, [r4, #4]
90016a30:	4299      	cmp	r1, r3
90016a32:	d802      	bhi.n	90016a3a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90016a34:	68e0      	ldr	r0, [r4, #12]
90016a36:	f7ff febd 	bl	900167b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90016a3a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016a3c:	f023 0302 	bic.w	r3, r3, #2
90016a40:	6263      	str	r3, [r4, #36]	@ 0x24
90016a42:	68e0      	ldr	r0, [r4, #12]
90016a44:	bd10      	pop	{r4, pc}
	...

90016a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90016a48:	4b02      	ldr	r3, [pc, #8]	@ (90016a54 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90016a4a:	6018      	str	r0, [r3, #0]
90016a4c:	4b02      	ldr	r3, [pc, #8]	@ (90016a58 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90016a4e:	6019      	str	r1, [r3, #0]
90016a50:	4770      	bx	lr
90016a52:	bf00      	nop
90016a54:	24023414 	.word	0x24023414
90016a58:	24023418 	.word	0x24023418

90016a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90016a5c:	2300      	movs	r3, #0
90016a5e:	4a02      	ldr	r2, [pc, #8]	@ (90016a68 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90016a60:	6013      	str	r3, [r2, #0]
90016a62:	4a02      	ldr	r2, [pc, #8]	@ (90016a6c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90016a64:	6013      	str	r3, [r2, #0]
90016a66:	4770      	bx	lr
90016a68:	24023414 	.word	0x24023414
90016a6c:	24023418 	.word	0x24023418

90016a70 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90016a70:	4b01      	ldr	r3, [pc, #4]	@ (90016a78 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90016a72:	6818      	ldr	r0, [r3, #0]
90016a74:	4770      	bx	lr
90016a76:	bf00      	nop
90016a78:	24023414 	.word	0x24023414

90016a7c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90016a7c:	4b01      	ldr	r3, [pc, #4]	@ (90016a84 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90016a7e:	6818      	ldr	r0, [r3, #0]
90016a80:	4770      	bx	lr
90016a82:	bf00      	nop
90016a84:	24023418 	.word	0x24023418

90016a88 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90016a88:	b510      	push	{r4, lr}
90016a8a:	6803      	ldr	r3, [r0, #0]
90016a8c:	460c      	mov	r4, r1
90016a8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016a90:	4798      	blx	r3
90016a92:	1b03      	subs	r3, r0, r4
90016a94:	4258      	negs	r0, r3
90016a96:	4158      	adcs	r0, r3
90016a98:	bd10      	pop	{r4, pc}
	...

90016a9c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90016a9c:	4b01      	ldr	r3, [pc, #4]	@ (90016aa4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90016a9e:	6019      	str	r1, [r3, #0]
90016aa0:	4770      	bx	lr
90016aa2:	bf00      	nop
90016aa4:	2402341c 	.word	0x2402341c

90016aa8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016aac:	4696      	mov	lr, r2
90016aae:	b097      	sub	sp, #92	@ 0x5c
90016ab0:	4605      	mov	r5, r0
90016ab2:	4614      	mov	r4, r2
90016ab4:	460e      	mov	r6, r1
90016ab6:	461f      	mov	r7, r3
90016ab8:	f10d 0c1c 	add.w	ip, sp, #28
90016abc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90016ac0:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90016ac4:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90016ac8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016acc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016ad0:	f8de 3000 	ldr.w	r3, [lr]
90016ad4:	f104 0e14 	add.w	lr, r4, #20
90016ad8:	f8cc 3000 	str.w	r3, [ip]
90016adc:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90016ae0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016ae4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016ae8:	f8de 3000 	ldr.w	r3, [lr]
90016aec:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90016af0:	f8cc 3000 	str.w	r3, [ip]
90016af4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90016af8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016afc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016b00:	f8de 3000 	ldr.w	r3, [lr]
90016b04:	4631      	mov	r1, r6
90016b06:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90016b08:	4628      	mov	r0, r5
90016b0a:	f8cc 3000 	str.w	r3, [ip]
90016b0e:	682b      	ldr	r3, [r5, #0]
90016b10:	9201      	str	r2, [sp, #4]
90016b12:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90016b14:	f8cd 8008 	str.w	r8, [sp, #8]
90016b18:	9200      	str	r2, [sp, #0]
90016b1a:	aa07      	add	r2, sp, #28
90016b1c:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90016b20:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90016b24:	463b      	mov	r3, r7
90016b26:	47d8      	blx	fp
90016b28:	46a6      	mov	lr, r4
90016b2a:	f10d 0c1c 	add.w	ip, sp, #28
90016b2e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016b32:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016b36:	f8de 3000 	ldr.w	r3, [lr]
90016b3a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90016b3e:	343c      	adds	r4, #60	@ 0x3c
90016b40:	f8cc 3000 	str.w	r3, [ip]
90016b44:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90016b48:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016b4c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016b50:	f8de 3000 	ldr.w	r3, [lr]
90016b54:	f8cc 3000 	str.w	r3, [ip]
90016b58:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90016b5c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90016b5e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016b62:	6823      	ldr	r3, [r4, #0]
90016b64:	4631      	mov	r1, r6
90016b66:	4628      	mov	r0, r5
90016b68:	f8cc 3000 	str.w	r3, [ip]
90016b6c:	682b      	ldr	r3, [r5, #0]
90016b6e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90016b72:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90016b74:	f8cd 8008 	str.w	r8, [sp, #8]
90016b78:	9201      	str	r2, [sp, #4]
90016b7a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90016b7c:	9200      	str	r2, [sp, #0]
90016b7e:	aa07      	add	r2, sp, #28
90016b80:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90016b82:	463b      	mov	r3, r7
90016b84:	47a0      	blx	r4
90016b86:	b017      	add	sp, #92	@ 0x5c
90016b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90016b8c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90016b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016b90:	b08d      	sub	sp, #52	@ 0x34
90016b92:	4688      	mov	r8, r1
90016b94:	f8d3 c000 	ldr.w	ip, [r3]
90016b98:	9916      	ldr	r1, [sp, #88]	@ 0x58
90016b9a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90016b9e:	680f      	ldr	r7, [r1, #0]
90016ba0:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90016ba4:	eba7 070c 	sub.w	r7, r7, ip
90016ba8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90016bac:	edd3 6a07 	vldr	s13, [r3, #28]
90016bb0:	42bc      	cmp	r4, r7
90016bb2:	9918      	ldr	r1, [sp, #96]	@ 0x60
90016bb4:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90016bb8:	bfa8      	it	ge
90016bba:	463c      	movge	r4, r7
90016bbc:	f9b1 9000 	ldrsh.w	r9, [r1]
90016bc0:	f9ba 1000 	ldrsh.w	r1, [sl]
90016bc4:	ee07 4a90 	vmov	s15, r4
90016bc8:	eb09 0e0c 	add.w	lr, r9, ip
90016bcc:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90016bd0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90016bd4:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90016bd8:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90016bdc:	4571      	cmp	r1, lr
90016bde:	ee25 4a04 	vmul.f32	s8, s10, s8
90016be2:	ee65 4a24 	vmul.f32	s9, s10, s9
90016be6:	ee25 5a27 	vmul.f32	s10, s10, s15
90016bea:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90016bee:	ee71 0aa4 	vadd.f32	s1, s3, s9
90016bf2:	ee32 1a05 	vadd.f32	s2, s4, s10
90016bf6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90016bfa:	ee36 0a84 	vadd.f32	s0, s13, s8
90016bfe:	ee61 1a87 	vmul.f32	s3, s3, s14
90016c02:	ee22 2a07 	vmul.f32	s4, s4, s14
90016c06:	f340 808c 	ble.w	90016d22 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90016c0a:	eba1 060e 	sub.w	r6, r1, lr
90016c0e:	fb96 f5f4 	sdiv	r5, r6, r4
90016c12:	ee07 5a10 	vmov	s14, r5
90016c16:	2d00      	cmp	r5, #0
90016c18:	fb04 6615 	mls	r6, r4, r5, r6
90016c1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90016c20:	eea7 0a04 	vfma.f32	s0, s14, s8
90016c24:	eee7 0a24 	vfma.f32	s1, s14, s9
90016c28:	eea7 1a05 	vfma.f32	s2, s14, s10
90016c2c:	dd12      	ble.n	90016c54 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90016c2e:	ee70 6a44 	vsub.f32	s13, s0, s8
90016c32:	ee70 1ae4 	vsub.f32	s3, s1, s9
90016c36:	ee31 2a45 	vsub.f32	s4, s2, s10
90016c3a:	eef5 6a40 	vcmp.f32	s13, #0.0
90016c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016c42:	bf14      	ite	ne
90016c44:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90016c48:	eeb0 7a67 	vmoveq.f32	s14, s15
90016c4c:	ee61 1a87 	vmul.f32	s3, s3, s14
90016c50:	ee22 2a07 	vmul.f32	s4, s4, s14
90016c54:	fb05 f204 	mul.w	r2, r5, r4
90016c58:	1abf      	subs	r7, r7, r2
90016c5a:	4494      	add	ip, r2
90016c5c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90016c60:	4411      	add	r1, r2
90016c62:	eb09 020c 	add.w	r2, r9, ip
90016c66:	b209      	sxth	r1, r1
90016c68:	443a      	add	r2, r7
90016c6a:	428a      	cmp	r2, r1
90016c6c:	bfc4      	itt	gt
90016c6e:	eba1 0209 	subgt.w	r2, r1, r9
90016c72:	eba2 070c 	subgt.w	r7, r2, ip
90016c76:	2f00      	cmp	r7, #0
90016c78:	dd50      	ble.n	90016d1c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90016c7a:	fb97 f1f4 	sdiv	r1, r7, r4
90016c7e:	fb04 7211 	mls	r2, r4, r1, r7
90016c82:	b90a      	cbnz	r2, 90016c88 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90016c84:	3901      	subs	r1, #1
90016c86:	4622      	mov	r2, r4
90016c88:	eec7 3a80 	vdiv.f32	s7, s15, s0
90016c8c:	6840      	ldr	r0, [r0, #4]
90016c8e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90016c92:	44b6      	add	lr, r6
90016c94:	f8d0 a000 	ldr.w	sl, [r0]
90016c98:	2900      	cmp	r1, #0
90016c9a:	bfcc      	ite	gt
90016c9c:	46a1      	movgt	r9, r4
90016c9e:	4691      	movle	r9, r2
90016ca0:	900b      	str	r0, [sp, #44]	@ 0x2c
90016ca2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90016ca4:	fb04 e505 	mla	r5, r4, r5, lr
90016ca8:	eef0 6a42 	vmov.f32	s13, s4
90016cac:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90016cb0:	9008      	str	r0, [sp, #32]
90016cb2:	eeb0 7a61 	vmov.f32	s14, s3
90016cb6:	9818      	ldr	r0, [sp, #96]	@ 0x60
90016cb8:	695b      	ldr	r3, [r3, #20]
90016cba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90016cbe:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90016cc2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90016cc6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90016cc8:	445b      	add	r3, fp
90016cca:	9307      	str	r3, [sp, #28]
90016ccc:	ee16 3a90 	vmov	r3, s13
90016cd0:	e9cd 8505 	strd	r8, r5, [sp, #20]
90016cd4:	ee60 2aa3 	vmul.f32	s5, s1, s7
90016cd8:	ee21 3a23 	vmul.f32	s6, s2, s7
90016cdc:	ee72 7ae1 	vsub.f32	s15, s5, s3
90016ce0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90016ce4:	ee17 7a90 	vmov	r7, s15
90016ce8:	ee73 7a42 	vsub.f32	s15, s6, s4
90016cec:	fb97 f7f4 	sdiv	r7, r7, r4
90016cf0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90016cf4:	ee17 ca90 	vmov	ip, s15
90016cf8:	fb9c fcf4 	sdiv	ip, ip, r4
90016cfc:	fb0c 3306 	mla	r3, ip, r6, r3
90016d00:	9302      	str	r3, [sp, #8]
90016d02:	ee17 3a10 	vmov	r3, s14
90016d06:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90016d0a:	fb07 3706 	mla	r7, r7, r6, r3
90016d0e:	eba9 0306 	sub.w	r3, r9, r6
90016d12:	e9cd 4700 	strd	r4, r7, [sp]
90016d16:	f8da 4008 	ldr.w	r4, [sl, #8]
90016d1a:	47a0      	blx	r4
90016d1c:	b00d      	add	sp, #52	@ 0x34
90016d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016d22:	2500      	movs	r5, #0
90016d24:	462e      	mov	r6, r5
90016d26:	e799      	b.n	90016c5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90016d28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016d2c:	b0db      	sub	sp, #364	@ 0x16c
90016d2e:	461d      	mov	r5, r3
90016d30:	4614      	mov	r4, r2
90016d32:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90016d36:	910f      	str	r1, [sp, #60]	@ 0x3c
90016d38:	4629      	mov	r1, r5
90016d3a:	930a      	str	r3, [sp, #40]	@ 0x28
90016d3c:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90016d40:	9009      	str	r0, [sp, #36]	@ 0x24
90016d42:	930b      	str	r3, [sp, #44]	@ 0x2c
90016d44:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90016d48:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90016d4c:	9310      	str	r3, [sp, #64]	@ 0x40
90016d4e:	6803      	ldr	r3, [r0, #0]
90016d50:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90016d52:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90016d56:	47b8      	blx	r7
90016d58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016d5a:	6058      	str	r0, [r3, #4]
90016d5c:	2800      	cmp	r0, #0
90016d5e:	f000 83a1 	beq.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016d62:	682b      	ldr	r3, [r5, #0]
90016d64:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90016d68:	ed94 7a02 	vldr	s14, [r4, #8]
90016d6c:	9314      	str	r3, [sp, #80]	@ 0x50
90016d6e:	686b      	ldr	r3, [r5, #4]
90016d70:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016d74:	9315      	str	r3, [sp, #84]	@ 0x54
90016d76:	4bc1      	ldr	r3, [pc, #772]	@ (9001707c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90016d78:	7819      	ldrb	r1, [r3, #0]
90016d7a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90016d7e:	2900      	cmp	r1, #0
90016d80:	bf16      	itet	ne
90016d82:	4619      	movne	r1, r3
90016d84:	4611      	moveq	r1, r2
90016d86:	4613      	movne	r3, r2
90016d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016d8c:	9116      	str	r1, [sp, #88]	@ 0x58
90016d8e:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90016d92:	f240 8387 	bls.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016d96:	ed94 7a07 	vldr	s14, [r4, #28]
90016d9a:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016d9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016da2:	f240 837f 	bls.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016da6:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90016daa:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016dae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016db2:	f240 8377 	bls.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016db6:	6822      	ldr	r2, [r4, #0]
90016db8:	4bb1      	ldr	r3, [pc, #708]	@ (90017080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90016dba:	429a      	cmp	r2, r3
90016dbc:	f2c0 8372 	blt.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016dc0:	49b0      	ldr	r1, [pc, #704]	@ (90017084 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90016dc2:	6963      	ldr	r3, [r4, #20]
90016dc4:	428a      	cmp	r2, r1
90016dc6:	f300 836d 	bgt.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016dca:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90016dce:	48ae      	ldr	r0, [pc, #696]	@ (90017088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90016dd0:	33ff      	adds	r3, #255	@ 0xff
90016dd2:	4283      	cmp	r3, r0
90016dd4:	f200 8366 	bhi.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016dd8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90016dda:	4dac      	ldr	r5, [pc, #688]	@ (9001708c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90016ddc:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90016de0:	33ff      	adds	r3, #255	@ 0xff
90016de2:	42ab      	cmp	r3, r5
90016de4:	f200 835e 	bhi.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016de8:	6862      	ldr	r2, [r4, #4]
90016dea:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90016dee:	33ff      	adds	r3, #255	@ 0xff
90016df0:	4283      	cmp	r3, r0
90016df2:	f200 8357 	bhi.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016df6:	69a1      	ldr	r1, [r4, #24]
90016df8:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90016dfc:	33ff      	adds	r3, #255	@ 0xff
90016dfe:	4283      	cmp	r3, r0
90016e00:	f200 8350 	bhi.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016e04:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016e06:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90016e0a:	30ff      	adds	r0, #255	@ 0xff
90016e0c:	42a8      	cmp	r0, r5
90016e0e:	f200 8349 	bhi.w	900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016e12:	428a      	cmp	r2, r1
90016e14:	f280 8110 	bge.w	90017038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90016e18:	429a      	cmp	r2, r3
90016e1a:	f300 8119 	bgt.w	90017050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90016e1e:	4299      	cmp	r1, r3
90016e20:	f280 811d 	bge.w	9001705e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90016e24:	2502      	movs	r5, #2
90016e26:	2701      	movs	r7, #1
90016e28:	46a9      	mov	r9, r5
90016e2a:	46b8      	mov	r8, r7
90016e2c:	f04f 0a00 	mov.w	sl, #0
90016e30:	4621      	mov	r1, r4
90016e32:	a849      	add	r0, sp, #292	@ 0x124
90016e34:	f004 f8f2 	bl	9001b01c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90016e38:	4622      	mov	r2, r4
90016e3a:	4653      	mov	r3, sl
90016e3c:	a949      	add	r1, sp, #292	@ 0x124
90016e3e:	f8cd 9000 	str.w	r9, [sp]
90016e42:	a819      	add	r0, sp, #100	@ 0x64
90016e44:	f004 fa1a 	bl	9001b27c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016e48:	4622      	mov	r2, r4
90016e4a:	4653      	mov	r3, sl
90016e4c:	a949      	add	r1, sp, #292	@ 0x124
90016e4e:	f8cd 8000 	str.w	r8, [sp]
90016e52:	a829      	add	r0, sp, #164	@ 0xa4
90016e54:	f004 fa12 	bl	9001b27c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016e58:	4643      	mov	r3, r8
90016e5a:	4622      	mov	r2, r4
90016e5c:	a949      	add	r1, sp, #292	@ 0x124
90016e5e:	f8cd 9000 	str.w	r9, [sp]
90016e62:	a839      	add	r0, sp, #228	@ 0xe4
90016e64:	f004 fa0a 	bl	9001b27c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016e68:	42af      	cmp	r7, r5
90016e6a:	af12      	add	r7, sp, #72	@ 0x48
90016e6c:	bfb7      	itett	lt
90016e6e:	2300      	movlt	r3, #0
90016e70:	2301      	movge	r3, #1
90016e72:	ad29      	addlt	r5, sp, #164	@ 0xa4
90016e74:	ac19      	addlt	r4, sp, #100	@ 0x64
90016e76:	bfb1      	iteee	lt
90016e78:	930e      	strlt	r3, [sp, #56]	@ 0x38
90016e7a:	ad19      	addge	r5, sp, #100	@ 0x64
90016e7c:	930e      	strge	r3, [sp, #56]	@ 0x38
90016e7e:	ac29      	addge	r4, sp, #164	@ 0xa4
90016e80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90016e82:	e893 0003 	ldmia.w	r3, {r0, r1}
90016e86:	e887 0003 	stmia.w	r7, {r0, r1}
90016e8a:	b928      	cbnz	r0, 90016e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90016e8c:	4b80      	ldr	r3, [pc, #512]	@ (90017090 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90016e8e:	6818      	ldr	r0, [r3, #0]
90016e90:	6803      	ldr	r3, [r0, #0]
90016e92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016e94:	4798      	blx	r3
90016e96:	6038      	str	r0, [r7, #0]
90016e98:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90016e9a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016e9e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016ea2:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90016ea4:	930c      	str	r3, [sp, #48]	@ 0x30
90016ea6:	990c      	ldr	r1, [sp, #48]	@ 0x30
90016ea8:	6963      	ldr	r3, [r4, #20]
90016eaa:	440b      	add	r3, r1
90016eac:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016eb0:	4408      	add	r0, r1
90016eb2:	b200      	sxth	r0, r0
90016eb4:	4283      	cmp	r3, r0
90016eb6:	900d      	str	r0, [sp, #52]	@ 0x34
90016eb8:	f280 80dd 	bge.w	90017076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90016ebc:	428b      	cmp	r3, r1
90016ebe:	da08      	bge.n	90016ed2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016ec0:	2a00      	cmp	r2, #0
90016ec2:	dd06      	ble.n	90016ed2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016ec4:	1acb      	subs	r3, r1, r3
90016ec6:	429a      	cmp	r2, r3
90016ec8:	f2c0 80e4 	blt.w	90017094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90016ecc:	2b00      	cmp	r3, #0
90016ece:	f300 80e2 	bgt.w	90017096 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90016ed2:	6967      	ldr	r7, [r4, #20]
90016ed4:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90016ed8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016eda:	443b      	add	r3, r7
90016edc:	461f      	mov	r7, r3
90016ede:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016ee0:	1bdf      	subs	r7, r3, r7
90016ee2:	4297      	cmp	r7, r2
90016ee4:	bfa8      	it	ge
90016ee6:	4617      	movge	r7, r2
90016ee8:	2f00      	cmp	r7, #0
90016eea:	f340 8166 	ble.w	900171ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90016eee:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90016ef0:	6829      	ldr	r1, [r5, #0]
90016ef2:	f9b3 2000 	ldrsh.w	r2, [r3]
90016ef6:	f9bb 3000 	ldrsh.w	r3, [fp]
90016efa:	4411      	add	r1, r2
90016efc:	6820      	ldr	r0, [r4, #0]
90016efe:	4299      	cmp	r1, r3
90016f00:	dd1a      	ble.n	90016f38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016f02:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016f06:	4402      	add	r2, r0
90016f08:	440b      	add	r3, r1
90016f0a:	b21b      	sxth	r3, r3
90016f0c:	429a      	cmp	r2, r3
90016f0e:	dc13      	bgt.n	90016f38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016f10:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016f12:	a912      	add	r1, sp, #72	@ 0x48
90016f14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016f16:	9809      	ldr	r0, [sp, #36]	@ 0x24
90016f18:	681b      	ldr	r3, [r3, #0]
90016f1a:	9206      	str	r2, [sp, #24]
90016f1c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90016f1e:	9500      	str	r5, [sp, #0]
90016f20:	9205      	str	r2, [sp, #20]
90016f22:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90016f24:	e9cd b203 	strd	fp, r2, [sp, #12]
90016f28:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90016f2a:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016f2e:	aa49      	add	r2, sp, #292	@ 0x124
90016f30:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90016f34:	4623      	mov	r3, r4
90016f36:	47c8      	blx	r9
90016f38:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90016f3c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90016f40:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90016f44:	ee37 7a27 	vadd.f32	s14, s14, s15
90016f48:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90016f4c:	68a1      	ldr	r1, [r4, #8]
90016f4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016f52:	ed94 6a08 	vldr	s12, [r4, #32]
90016f56:	edd4 6a07 	vldr	s13, [r4, #28]
90016f5a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90016f5e:	ee76 6a86 	vadd.f32	s13, s13, s12
90016f62:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90016f66:	e9d4 2300 	ldrd	r2, r3, [r4]
90016f6a:	edc4 6a07 	vstr	s13, [r4, #28]
90016f6e:	441a      	add	r2, r3
90016f70:	6963      	ldr	r3, [r4, #20]
90016f72:	3301      	adds	r3, #1
90016f74:	6022      	str	r2, [r4, #0]
90016f76:	6163      	str	r3, [r4, #20]
90016f78:	69a3      	ldr	r3, [r4, #24]
90016f7a:	3b01      	subs	r3, #1
90016f7c:	61a3      	str	r3, [r4, #24]
90016f7e:	6923      	ldr	r3, [r4, #16]
90016f80:	440b      	add	r3, r1
90016f82:	68e1      	ldr	r1, [r4, #12]
90016f84:	428b      	cmp	r3, r1
90016f86:	6123      	str	r3, [r4, #16]
90016f88:	db15      	blt.n	90016fb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90016f8a:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90016f8e:	3201      	adds	r2, #1
90016f90:	1a5b      	subs	r3, r3, r1
90016f92:	ee76 6a26 	vadd.f32	s13, s12, s13
90016f96:	6022      	str	r2, [r4, #0]
90016f98:	6123      	str	r3, [r4, #16]
90016f9a:	edc4 6a07 	vstr	s13, [r4, #28]
90016f9e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90016fa2:	ee36 7a87 	vadd.f32	s14, s13, s14
90016fa6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90016faa:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90016fae:	ee77 7a27 	vadd.f32	s15, s14, s15
90016fb2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90016fb6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90016fba:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90016fbe:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90016fc2:	ee37 7a27 	vadd.f32	s14, s14, s15
90016fc6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90016fca:	68a9      	ldr	r1, [r5, #8]
90016fcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016fd0:	ed95 6a08 	vldr	s12, [r5, #32]
90016fd4:	edd5 6a07 	vldr	s13, [r5, #28]
90016fd8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90016fdc:	ee76 6a86 	vadd.f32	s13, s13, s12
90016fe0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016fe4:	e9d5 2300 	ldrd	r2, r3, [r5]
90016fe8:	edc5 6a07 	vstr	s13, [r5, #28]
90016fec:	441a      	add	r2, r3
90016fee:	696b      	ldr	r3, [r5, #20]
90016ff0:	3301      	adds	r3, #1
90016ff2:	602a      	str	r2, [r5, #0]
90016ff4:	616b      	str	r3, [r5, #20]
90016ff6:	69ab      	ldr	r3, [r5, #24]
90016ff8:	3b01      	subs	r3, #1
90016ffa:	61ab      	str	r3, [r5, #24]
90016ffc:	692b      	ldr	r3, [r5, #16]
90016ffe:	440b      	add	r3, r1
90017000:	68e9      	ldr	r1, [r5, #12]
90017002:	428b      	cmp	r3, r1
90017004:	612b      	str	r3, [r5, #16]
90017006:	db15      	blt.n	90017034 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90017008:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
9001700c:	3201      	adds	r2, #1
9001700e:	1a5b      	subs	r3, r3, r1
90017010:	ee76 6a26 	vadd.f32	s13, s12, s13
90017014:	602a      	str	r2, [r5, #0]
90017016:	612b      	str	r3, [r5, #16]
90017018:	edc5 6a07 	vstr	s13, [r5, #28]
9001701c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90017020:	ee36 7a87 	vadd.f32	s14, s13, s14
90017024:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90017028:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001702c:	ee77 7a27 	vadd.f32	s15, s14, s15
90017030:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017034:	3f01      	subs	r7, #1
90017036:	e757      	b.n	90016ee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90017038:	4299      	cmp	r1, r3
9001703a:	dc13      	bgt.n	90017064 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
9001703c:	429a      	cmp	r2, r3
9001703e:	da14      	bge.n	9001706a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90017040:	2502      	movs	r5, #2
90017042:	2703      	movs	r7, #3
90017044:	f04f 0800 	mov.w	r8, #0
90017048:	46a9      	mov	r9, r5
9001704a:	f04f 0a01 	mov.w	sl, #1
9001704e:	e6ef      	b.n	90016e30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90017050:	2501      	movs	r5, #1
90017052:	2700      	movs	r7, #0
90017054:	46a9      	mov	r9, r5
90017056:	46b8      	mov	r8, r7
90017058:	f04f 0a02 	mov.w	sl, #2
9001705c:	e6e8      	b.n	90016e30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001705e:	2501      	movs	r5, #1
90017060:	2702      	movs	r7, #2
90017062:	e6e1      	b.n	90016e28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90017064:	2500      	movs	r5, #0
90017066:	2701      	movs	r7, #1
90017068:	e7f4      	b.n	90017054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9001706a:	2702      	movs	r7, #2
9001706c:	2503      	movs	r5, #3
9001706e:	f04f 0900 	mov.w	r9, #0
90017072:	46b8      	mov	r8, r7
90017074:	e7e9      	b.n	9001704a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90017076:	4613      	mov	r3, r2
90017078:	e728      	b.n	90016ecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9001707a:	bf00      	nop
9001707c:	24023404 	.word	0x24023404
90017080:	fffd8f01 	.word	0xfffd8f01
90017084:	00027100 	.word	0x00027100
90017088:	0004e1ff 	.word	0x0004e1ff
9001708c:	0004e1fe 	.word	0x0004e1fe
90017090:	2402340c 	.word	0x2402340c
90017094:	4613      	mov	r3, r2
90017096:	992b      	ldr	r1, [sp, #172]	@ 0xac
90017098:	469e      	mov	lr, r3
9001709a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
9001709c:	469c      	mov	ip, r3
9001709e:	9111      	str	r1, [sp, #68]	@ 0x44
900170a0:	f04f 0900 	mov.w	r9, #0
900170a4:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
900170a8:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
900170ac:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
900170b0:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
900170b4:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
900170b8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
900170bc:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
900170c0:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
900170c4:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
900170c8:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
900170cc:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
900170d0:	f1bc 0f00 	cmp.w	ip, #0
900170d4:	d147      	bne.n	90017166 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900170d6:	eb03 0c07 	add.w	ip, r3, r7
900170da:	1ad7      	subs	r7, r2, r3
900170dc:	f1b9 0f00 	cmp.w	r9, #0
900170e0:	d009      	beq.n	900170f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900170e2:	9029      	str	r0, [sp, #164]	@ 0xa4
900170e4:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
900170e8:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
900170ec:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
900170f0:	912d      	str	r1, [sp, #180]	@ 0xb4
900170f2:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
900170f6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900170f8:	f04f 0800 	mov.w	r8, #0
900170fc:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90017100:	9111      	str	r1, [sp, #68]	@ 0x44
90017102:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90017106:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
9001710a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
9001710e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90017112:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90017116:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
9001711a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
9001711e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90017122:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90017126:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
9001712a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001712e:	f1be 0f00 	cmp.w	lr, #0
90017132:	d031      	beq.n	90017198 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90017134:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90017136:	4450      	add	r0, sl
90017138:	ee76 6aa4 	vadd.f32	s13, s13, s9
9001713c:	4431      	add	r1, r6
9001713e:	ee37 7a04 	vadd.f32	s14, s14, s8
90017142:	ee77 7aa3 	vadd.f32	s15, s15, s7
90017146:	4549      	cmp	r1, r9
90017148:	db08      	blt.n	9001715c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001714a:	ee77 7a85 	vadd.f32	s15, s15, s10
9001714e:	3001      	adds	r0, #1
90017150:	ee76 6aa5 	vadd.f32	s13, s13, s11
90017154:	eba1 0109 	sub.w	r1, r1, r9
90017158:	ee37 7a06 	vadd.f32	s14, s14, s12
9001715c:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
90017160:	f04f 0801 	mov.w	r8, #1
90017164:	e7e3      	b.n	9001712e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90017166:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90017168:	4450      	add	r0, sl
9001716a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001716e:	4431      	add	r1, r6
90017170:	ee77 7a84 	vadd.f32	s15, s15, s8
90017174:	ee76 6aa3 	vadd.f32	s13, s13, s7
90017178:	4541      	cmp	r1, r8
9001717a:	db08      	blt.n	9001718e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
9001717c:	ee76 6a85 	vadd.f32	s13, s13, s10
90017180:	3001      	adds	r0, #1
90017182:	ee37 7a25 	vadd.f32	s14, s14, s11
90017186:	eba1 0108 	sub.w	r1, r1, r8
9001718a:	ee77 7a86 	vadd.f32	s15, s15, s12
9001718e:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
90017192:	f04f 0901 	mov.w	r9, #1
90017196:	e79b      	b.n	900170d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90017198:	449c      	add	ip, r3
9001719a:	1aff      	subs	r7, r7, r3
9001719c:	f1b8 0f00 	cmp.w	r8, #0
900171a0:	d009      	beq.n	900171b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
900171a2:	9019      	str	r0, [sp, #100]	@ 0x64
900171a4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900171a8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
900171ac:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
900171b0:	911d      	str	r1, [sp, #116]	@ 0x74
900171b2:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900171b6:	1ad2      	subs	r2, r2, r3
900171b8:	e68b      	b.n	90016ed2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900171ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900171bc:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
900171be:	2b00      	cmp	r3, #0
900171c0:	f000 80d1 	beq.w	90017366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
900171c4:	ad19      	add	r5, sp, #100	@ 0x64
900171c6:	ac39      	add	r4, sp, #228	@ 0xe4
900171c8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900171ca:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900171ce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900171d2:	930c      	str	r3, [sp, #48]	@ 0x30
900171d4:	990c      	ldr	r1, [sp, #48]	@ 0x30
900171d6:	6963      	ldr	r3, [r4, #20]
900171d8:	440b      	add	r3, r1
900171da:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900171de:	4408      	add	r0, r1
900171e0:	b200      	sxth	r0, r0
900171e2:	4283      	cmp	r3, r0
900171e4:	900d      	str	r0, [sp, #52]	@ 0x34
900171e6:	f280 80c1 	bge.w	9001736c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900171ea:	428b      	cmp	r3, r1
900171ec:	da08      	bge.n	90017200 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900171ee:	2a00      	cmp	r2, #0
900171f0:	dd06      	ble.n	90017200 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900171f2:	1acb      	subs	r3, r1, r3
900171f4:	429a      	cmp	r2, r3
900171f6:	f2c0 80bb 	blt.w	90017370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900171fa:	2b00      	cmp	r3, #0
900171fc:	f300 80b9 	bgt.w	90017372 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90017200:	6967      	ldr	r7, [r4, #20]
90017202:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90017206:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90017208:	443b      	add	r3, r7
9001720a:	461f      	mov	r7, r3
9001720c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001720e:	1bdf      	subs	r7, r3, r7
90017210:	4297      	cmp	r7, r2
90017212:	bfa8      	it	ge
90017214:	4617      	movge	r7, r2
90017216:	2f00      	cmp	r7, #0
90017218:	f340 813c 	ble.w	90017494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
9001721c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001721e:	6829      	ldr	r1, [r5, #0]
90017220:	f9b3 2000 	ldrsh.w	r2, [r3]
90017224:	f9bb 3000 	ldrsh.w	r3, [fp]
90017228:	4411      	add	r1, r2
9001722a:	6820      	ldr	r0, [r4, #0]
9001722c:	4299      	cmp	r1, r3
9001722e:	dd1a      	ble.n	90017266 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90017230:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90017234:	4402      	add	r2, r0
90017236:	440b      	add	r3, r1
90017238:	b21b      	sxth	r3, r3
9001723a:	429a      	cmp	r2, r3
9001723c:	dc13      	bgt.n	90017266 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001723e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90017240:	a912      	add	r1, sp, #72	@ 0x48
90017242:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017244:	9809      	ldr	r0, [sp, #36]	@ 0x24
90017246:	681b      	ldr	r3, [r3, #0]
90017248:	9206      	str	r2, [sp, #24]
9001724a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001724c:	9500      	str	r5, [sp, #0]
9001724e:	9205      	str	r2, [sp, #20]
90017250:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90017252:	e9cd b203 	strd	fp, r2, [sp, #12]
90017256:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90017258:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001725c:	aa49      	add	r2, sp, #292	@ 0x124
9001725e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90017262:	4623      	mov	r3, r4
90017264:	47c8      	blx	r9
90017266:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
9001726a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
9001726e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90017272:	ee37 7a27 	vadd.f32	s14, s14, s15
90017276:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
9001727a:	68a1      	ldr	r1, [r4, #8]
9001727c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017280:	ed94 6a08 	vldr	s12, [r4, #32]
90017284:	edd4 6a07 	vldr	s13, [r4, #28]
90017288:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001728c:	ee76 6a86 	vadd.f32	s13, s13, s12
90017290:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90017294:	e9d4 2300 	ldrd	r2, r3, [r4]
90017298:	edc4 6a07 	vstr	s13, [r4, #28]
9001729c:	441a      	add	r2, r3
9001729e:	6963      	ldr	r3, [r4, #20]
900172a0:	3301      	adds	r3, #1
900172a2:	6022      	str	r2, [r4, #0]
900172a4:	6163      	str	r3, [r4, #20]
900172a6:	69a3      	ldr	r3, [r4, #24]
900172a8:	3b01      	subs	r3, #1
900172aa:	61a3      	str	r3, [r4, #24]
900172ac:	6923      	ldr	r3, [r4, #16]
900172ae:	440b      	add	r3, r1
900172b0:	68e1      	ldr	r1, [r4, #12]
900172b2:	428b      	cmp	r3, r1
900172b4:	6123      	str	r3, [r4, #16]
900172b6:	db15      	blt.n	900172e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900172b8:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
900172bc:	3201      	adds	r2, #1
900172be:	1a5b      	subs	r3, r3, r1
900172c0:	ee76 6a26 	vadd.f32	s13, s12, s13
900172c4:	6022      	str	r2, [r4, #0]
900172c6:	6123      	str	r3, [r4, #16]
900172c8:	edc4 6a07 	vstr	s13, [r4, #28]
900172cc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900172d0:	ee36 7a87 	vadd.f32	s14, s13, s14
900172d4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900172d8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
900172dc:	ee77 7a27 	vadd.f32	s15, s14, s15
900172e0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900172e4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900172e8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
900172ec:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
900172f0:	ee37 7a27 	vadd.f32	s14, s14, s15
900172f4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900172f8:	68a9      	ldr	r1, [r5, #8]
900172fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
900172fe:	ed95 6a08 	vldr	s12, [r5, #32]
90017302:	edd5 6a07 	vldr	s13, [r5, #28]
90017306:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001730a:	ee76 6a86 	vadd.f32	s13, s13, s12
9001730e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017312:	e9d5 2300 	ldrd	r2, r3, [r5]
90017316:	edc5 6a07 	vstr	s13, [r5, #28]
9001731a:	441a      	add	r2, r3
9001731c:	696b      	ldr	r3, [r5, #20]
9001731e:	3301      	adds	r3, #1
90017320:	602a      	str	r2, [r5, #0]
90017322:	616b      	str	r3, [r5, #20]
90017324:	69ab      	ldr	r3, [r5, #24]
90017326:	3b01      	subs	r3, #1
90017328:	61ab      	str	r3, [r5, #24]
9001732a:	692b      	ldr	r3, [r5, #16]
9001732c:	440b      	add	r3, r1
9001732e:	68e9      	ldr	r1, [r5, #12]
90017330:	428b      	cmp	r3, r1
90017332:	612b      	str	r3, [r5, #16]
90017334:	db15      	blt.n	90017362 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90017336:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
9001733a:	3201      	adds	r2, #1
9001733c:	1a5b      	subs	r3, r3, r1
9001733e:	ee76 6a26 	vadd.f32	s13, s12, s13
90017342:	602a      	str	r2, [r5, #0]
90017344:	612b      	str	r3, [r5, #16]
90017346:	edc5 6a07 	vstr	s13, [r5, #28]
9001734a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001734e:	ee36 7a87 	vadd.f32	s14, s13, s14
90017352:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90017356:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001735a:	ee77 7a27 	vadd.f32	s15, s14, s15
9001735e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017362:	3f01      	subs	r7, #1
90017364:	e757      	b.n	90017216 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90017366:	ad39      	add	r5, sp, #228	@ 0xe4
90017368:	ac19      	add	r4, sp, #100	@ 0x64
9001736a:	e72d      	b.n	900171c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
9001736c:	4613      	mov	r3, r2
9001736e:	e744      	b.n	900171fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90017370:	4613      	mov	r3, r2
90017372:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90017374:	469e      	mov	lr, r3
90017376:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
9001737a:	461f      	mov	r7, r3
9001737c:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90017380:	f04f 0900 	mov.w	r9, #0
90017384:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90017388:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
9001738c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90017390:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90017394:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90017398:	993d      	ldr	r1, [sp, #244]	@ 0xf4
9001739a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
9001739e:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900173a2:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
900173a6:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
900173aa:	960e      	str	r6, [sp, #56]	@ 0x38
900173ac:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
900173b0:	2f00      	cmp	r7, #0
900173b2:	d146      	bne.n	90017442 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900173b4:	449c      	add	ip, r3
900173b6:	1ad7      	subs	r7, r2, r3
900173b8:	f1b9 0f00 	cmp.w	r9, #0
900173bc:	d009      	beq.n	900173d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900173be:	9039      	str	r0, [sp, #228]	@ 0xe4
900173c0:	913d      	str	r1, [sp, #244]	@ 0xf4
900173c2:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
900173c6:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
900173ca:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
900173ce:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
900173d2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900173d4:	f04f 0800 	mov.w	r8, #0
900173d8:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900173dc:	910e      	str	r1, [sp, #56]	@ 0x38
900173de:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900173e2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900173e6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900173ea:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900173ee:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900173f2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900173f6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900173fa:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900173fe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90017402:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90017406:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001740a:	f1be 0f00 	cmp.w	lr, #0
9001740e:	d030      	beq.n	90017472 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90017410:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90017412:	4450      	add	r0, sl
90017414:	ee76 6aa4 	vadd.f32	s13, s13, s9
90017418:	4431      	add	r1, r6
9001741a:	ee37 7a04 	vadd.f32	s14, s14, s8
9001741e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90017422:	4549      	cmp	r1, r9
90017424:	db08      	blt.n	90017438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90017426:	ee77 7a85 	vadd.f32	s15, s15, s10
9001742a:	3001      	adds	r0, #1
9001742c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90017430:	eba1 0109 	sub.w	r1, r1, r9
90017434:	ee37 7a06 	vadd.f32	s14, s14, s12
90017438:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
9001743c:	f04f 0801 	mov.w	r8, #1
90017440:	e7e3      	b.n	9001740a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90017442:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90017444:	4450      	add	r0, sl
90017446:	ee37 7a24 	vadd.f32	s14, s14, s9
9001744a:	4431      	add	r1, r6
9001744c:	ee77 7a84 	vadd.f32	s15, s15, s8
90017450:	ee76 6aa3 	vadd.f32	s13, s13, s7
90017454:	4541      	cmp	r1, r8
90017456:	db08      	blt.n	9001746a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90017458:	ee76 6a85 	vadd.f32	s13, s13, s10
9001745c:	3001      	adds	r0, #1
9001745e:	ee37 7a25 	vadd.f32	s14, s14, s11
90017462:	eba1 0108 	sub.w	r1, r1, r8
90017466:	ee77 7a86 	vadd.f32	s15, s15, s12
9001746a:	3f01      	subs	r7, #1
9001746c:	f04f 0901 	mov.w	r9, #1
90017470:	e79e      	b.n	900173b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90017472:	449c      	add	ip, r3
90017474:	1aff      	subs	r7, r7, r3
90017476:	f1b8 0f00 	cmp.w	r8, #0
9001747a:	d009      	beq.n	90017490 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
9001747c:	9019      	str	r0, [sp, #100]	@ 0x64
9001747e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90017482:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90017486:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001748a:	911d      	str	r1, [sp, #116]	@ 0x74
9001748c:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90017490:	1ad2      	subs	r2, r2, r3
90017492:	e6b5      	b.n	90017200 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90017494:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90017496:	681b      	ldr	r3, [r3, #0]
90017498:	b923      	cbnz	r3, 900174a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001749a:	4b04      	ldr	r3, [pc, #16]	@ (900174ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
9001749c:	6818      	ldr	r0, [r3, #0]
9001749e:	6803      	ldr	r3, [r0, #0]
900174a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900174a2:	4798      	blx	r3
900174a4:	b05b      	add	sp, #364	@ 0x16c
900174a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900174aa:	bf00      	nop
900174ac:	2402340c 	.word	0x2402340c

900174b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900174b0:	b570      	push	{r4, r5, r6, lr}
900174b2:	4604      	mov	r4, r0
900174b4:	2500      	movs	r5, #0
900174b6:	9805      	ldr	r0, [sp, #20]
900174b8:	f89d 601c 	ldrb.w	r6, [sp, #28]
900174bc:	6061      	str	r1, [r4, #4]
900174be:	8263      	strh	r3, [r4, #18]
900174c0:	f89d 1010 	ldrb.w	r1, [sp, #16]
900174c4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900174c8:	8025      	strh	r5, [r4, #0]
900174ca:	7221      	strb	r1, [r4, #8]
900174cc:	7266      	strb	r6, [r4, #9]
900174ce:	60e0      	str	r0, [r4, #12]
900174d0:	8222      	strh	r2, [r4, #16]
900174d2:	82a3      	strh	r3, [r4, #20]
900174d4:	82e5      	strh	r5, [r4, #22]
900174d6:	8325      	strh	r5, [r4, #24]
900174d8:	8365      	strh	r5, [r4, #26]
900174da:	83a5      	strh	r5, [r4, #28]
900174dc:	83e5      	strh	r5, [r4, #30]
900174de:	8425      	strh	r5, [r4, #32]
900174e0:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900174e4:	b32e      	cbz	r6, 90017532 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900174e6:	6803      	ldr	r3, [r0, #0]
900174e8:	695b      	ldr	r3, [r3, #20]
900174ea:	4798      	blx	r3
900174ec:	4606      	mov	r6, r0
900174ee:	b300      	cbz	r0, 90017532 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900174f0:	68e0      	ldr	r0, [r4, #12]
900174f2:	4631      	mov	r1, r6
900174f4:	6803      	ldr	r3, [r0, #0]
900174f6:	68db      	ldr	r3, [r3, #12]
900174f8:	4798      	blx	r3
900174fa:	4605      	mov	r5, r0
900174fc:	b1c8      	cbz	r0, 90017532 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900174fe:	7b43      	ldrb	r3, [r0, #13]
90017500:	7a82      	ldrb	r2, [r0, #10]
90017502:	005b      	lsls	r3, r3, #1
90017504:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017508:	4313      	orrs	r3, r2
9001750a:	8423      	strh	r3, [r4, #32]
9001750c:	7a63      	ldrb	r3, [r4, #9]
9001750e:	2b06      	cmp	r3, #6
90017510:	d10f      	bne.n	90017532 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90017512:	68e0      	ldr	r0, [r4, #12]
90017514:	462a      	mov	r2, r5
90017516:	4631      	mov	r1, r6
90017518:	6803      	ldr	r3, [r0, #0]
9001751a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001751c:	4798      	blx	r3
9001751e:	7b6b      	ldrb	r3, [r5, #13]
90017520:	005b      	lsls	r3, r3, #1
90017522:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017526:	7aab      	ldrb	r3, [r5, #10]
90017528:	4313      	orrs	r3, r2
9001752a:	4418      	add	r0, r3
9001752c:	8c23      	ldrh	r3, [r4, #32]
9001752e:	4418      	add	r0, r3
90017530:	8420      	strh	r0, [r4, #32]
90017532:	4620      	mov	r0, r4
90017534:	bd70      	pop	{r4, r5, r6, pc}

90017536 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90017536:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001753a:	2400      	movs	r4, #0
9001753c:	b085      	sub	sp, #20
9001753e:	4681      	mov	r9, r0
90017540:	4688      	mov	r8, r1
90017542:	4692      	mov	sl, r2
90017544:	469b      	mov	fp, r3
90017546:	4627      	mov	r7, r4
90017548:	4625      	mov	r5, r4
9001754a:	4626      	mov	r6, r4
9001754c:	4554      	cmp	r4, sl
9001754e:	da2a      	bge.n	900175a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017550:	2300      	movs	r3, #0
90017552:	9303      	str	r3, [sp, #12]
90017554:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017558:	429d      	cmp	r5, r3
9001755a:	d004      	beq.n	90017566 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
9001755c:	f242 030b 	movw	r3, #8203	@ 0x200b
90017560:	429d      	cmp	r5, r3
90017562:	bf18      	it	ne
90017564:	462f      	movne	r7, r5
90017566:	ab03      	add	r3, sp, #12
90017568:	4642      	mov	r2, r8
9001756a:	4659      	mov	r1, fp
9001756c:	4648      	mov	r0, r9
9001756e:	f003 fb6b 	bl	9001ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017572:	4605      	mov	r5, r0
90017574:	b1b8      	cbz	r0, 900175a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017576:	280a      	cmp	r0, #10
90017578:	d015      	beq.n	900175a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001757a:	9a03      	ldr	r2, [sp, #12]
9001757c:	b18a      	cbz	r2, 900175a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9001757e:	7b50      	ldrb	r0, [r2, #13]
90017580:	4639      	mov	r1, r7
90017582:	7a93      	ldrb	r3, [r2, #10]
90017584:	0040      	lsls	r0, r0, #1
90017586:	8895      	ldrh	r5, [r2, #4]
90017588:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001758c:	4303      	orrs	r3, r0
9001758e:	4640      	mov	r0, r8
90017590:	9301      	str	r3, [sp, #4]
90017592:	f8d8 3000 	ldr.w	r3, [r8]
90017596:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017598:	4798      	blx	r3
9001759a:	9b01      	ldr	r3, [sp, #4]
9001759c:	4418      	add	r0, r3
9001759e:	4406      	add	r6, r0
900175a0:	b2b6      	uxth	r6, r6
900175a2:	3401      	adds	r4, #1
900175a4:	e7d2      	b.n	9001754c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900175a6:	4630      	mov	r0, r6
900175a8:	b005      	add	sp, #20
900175aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900175ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900175ae:	2a02      	cmp	r2, #2
900175b0:	b530      	push	{r4, r5, lr}
900175b2:	d011      	beq.n	900175d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900175b4:	2a03      	cmp	r2, #3
900175b6:	d01c      	beq.n	900175f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900175b8:	2a01      	cmp	r2, #1
900175ba:	d10c      	bne.n	900175d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900175bc:	888b      	ldrh	r3, [r1, #4]
900175be:	8801      	ldrh	r1, [r0, #0]
900175c0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900175c4:	1a5b      	subs	r3, r3, r1
900175c6:	8844      	ldrh	r4, [r0, #2]
900175c8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900175cc:	1a9b      	subs	r3, r3, r2
900175ce:	8004      	strh	r4, [r0, #0]
900175d0:	8081      	strh	r1, [r0, #4]
900175d2:	8043      	strh	r3, [r0, #2]
900175d4:	80c2      	strh	r2, [r0, #6]
900175d6:	bd30      	pop	{r4, r5, pc}
900175d8:	88cb      	ldrh	r3, [r1, #6]
900175da:	8842      	ldrh	r2, [r0, #2]
900175dc:	1a9b      	subs	r3, r3, r2
900175de:	88c2      	ldrh	r2, [r0, #6]
900175e0:	1a9b      	subs	r3, r3, r2
900175e2:	888a      	ldrh	r2, [r1, #4]
900175e4:	8801      	ldrh	r1, [r0, #0]
900175e6:	8043      	strh	r3, [r0, #2]
900175e8:	1a52      	subs	r2, r2, r1
900175ea:	8881      	ldrh	r1, [r0, #4]
900175ec:	1a52      	subs	r2, r2, r1
900175ee:	8002      	strh	r2, [r0, #0]
900175f0:	e7f1      	b.n	900175d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900175f2:	88cb      	ldrh	r3, [r1, #6]
900175f4:	8841      	ldrh	r1, [r0, #2]
900175f6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900175fa:	1a5b      	subs	r3, r3, r1
900175fc:	f9b0 5000 	ldrsh.w	r5, [r0]
90017600:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90017604:	1a9b      	subs	r3, r3, r2
90017606:	8045      	strh	r5, [r0, #2]
90017608:	8082      	strh	r2, [r0, #4]
9001760a:	8003      	strh	r3, [r0, #0]
9001760c:	80c4      	strh	r4, [r0, #6]
9001760e:	e7e2      	b.n	900175d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90017610 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90017610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017614:	b09f      	sub	sp, #124	@ 0x7c
90017616:	920f      	str	r2, [sp, #60]	@ 0x3c
90017618:	9312      	str	r3, [sp, #72]	@ 0x48
9001761a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9001761c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001761e:	8812      	ldrh	r2, [r2, #0]
90017620:	889b      	ldrh	r3, [r3, #4]
90017622:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90017624:	4413      	add	r3, r2
90017626:	900e      	str	r0, [sp, #56]	@ 0x38
90017628:	6828      	ldr	r0, [r5, #0]
9001762a:	b21b      	sxth	r3, r3
9001762c:	9117      	str	r1, [sp, #92]	@ 0x5c
9001762e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90017632:	9311      	str	r3, [sp, #68]	@ 0x44
90017634:	6803      	ldr	r3, [r0, #0]
90017636:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
9001763a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001763c:	4798      	blx	r3
9001763e:	682b      	ldr	r3, [r5, #0]
90017640:	9013      	str	r0, [sp, #76]	@ 0x4c
90017642:	7b1a      	ldrb	r2, [r3, #12]
90017644:	7adb      	ldrb	r3, [r3, #11]
90017646:	9215      	str	r2, [sp, #84]	@ 0x54
90017648:	9316      	str	r3, [sp, #88]	@ 0x58
9001764a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001764e:	2c00      	cmp	r4, #0
90017650:	d067      	beq.n	90017722 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90017652:	7c2b      	ldrb	r3, [r5, #16]
90017654:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90017656:	2b06      	cmp	r3, #6
90017658:	bf14      	ite	ne
9001765a:	2301      	movne	r3, #1
9001765c:	2302      	moveq	r3, #2
9001765e:	4413      	add	r3, r2
90017660:	f04f 0900 	mov.w	r9, #0
90017664:	9310      	str	r3, [sp, #64]	@ 0x40
90017666:	464c      	mov	r4, r9
90017668:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
9001766c:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90017670:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90017672:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90017674:	4293      	cmp	r3, r2
90017676:	f280 808b 	bge.w	90017790 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001767a:	2300      	movs	r3, #0
9001767c:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90017680:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90017684:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017688:	429c      	cmp	r4, r3
9001768a:	d006      	beq.n	9001769a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
9001768c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001768e:	f242 020b 	movw	r2, #8203	@ 0x200b
90017692:	4294      	cmp	r4, r2
90017694:	bf18      	it	ne
90017696:	4623      	movne	r3, r4
90017698:	930c      	str	r3, [sp, #48]	@ 0x30
9001769a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001769c:	992d      	ldr	r1, [sp, #180]	@ 0xb4
9001769e:	682a      	ldr	r2, [r5, #0]
900176a0:	428b      	cmp	r3, r1
900176a2:	db40      	blt.n	90017726 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900176a4:	6813      	ldr	r3, [r2, #0]
900176a6:	4610      	mov	r0, r2
900176a8:	695b      	ldr	r3, [r3, #20]
900176aa:	4798      	blx	r3
900176ac:	4604      	mov	r4, r0
900176ae:	6828      	ldr	r0, [r5, #0]
900176b0:	aa1d      	add	r2, sp, #116	@ 0x74
900176b2:	4621      	mov	r1, r4
900176b4:	6803      	ldr	r3, [r0, #0]
900176b6:	689f      	ldr	r7, [r3, #8]
900176b8:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900176bc:	47b8      	blx	r7
900176be:	901c      	str	r0, [sp, #112]	@ 0x70
900176c0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900176c4:	429c      	cmp	r4, r3
900176c6:	f000 80eb 	beq.w	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900176ca:	f242 030b 	movw	r3, #8203	@ 0x200b
900176ce:	429c      	cmp	r4, r3
900176d0:	f000 80e6 	beq.w	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900176d4:	2c00      	cmp	r4, #0
900176d6:	f000 810d 	beq.w	900178f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900176da:	2c0a      	cmp	r4, #10
900176dc:	d05e      	beq.n	9001779c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900176de:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900176e0:	b36a      	cbz	r2, 9001773e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900176e2:	8894      	ldrh	r4, [r2, #4]
900176e4:	f1bb 0f00 	cmp.w	fp, #0
900176e8:	d03a      	beq.n	90017760 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900176ea:	f892 900d 	ldrb.w	r9, [r2, #13]
900176ee:	f1bb 0f01 	cmp.w	fp, #1
900176f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900176f6:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900176fa:	f892 900a 	ldrb.w	r9, [r2, #10]
900176fe:	ea49 0903 	orr.w	r9, r9, r3
90017702:	d133      	bne.n	9001776c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90017704:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90017706:	eba6 0609 	sub.w	r6, r6, r9
9001770a:	2b00      	cmp	r3, #0
9001770c:	d14d      	bne.n	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001770e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90017710:	eb09 0306 	add.w	r3, r9, r6
90017714:	4413      	add	r3, r2
90017716:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90017718:	f9b2 2000 	ldrsh.w	r2, [r2]
9001771c:	4293      	cmp	r3, r2
9001771e:	da4e      	bge.n	900177be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90017720:	e036      	b.n	90017790 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90017722:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90017724:	e79c      	b.n	90017660 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90017726:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
9001772a:	4659      	mov	r1, fp
9001772c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001772e:	9301      	str	r3, [sp, #4]
90017730:	ab1d      	add	r3, sp, #116	@ 0x74
90017732:	9300      	str	r3, [sp, #0]
90017734:	ab1c      	add	r3, sp, #112	@ 0x70
90017736:	f003 fad0 	bl	9001acda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001773a:	4604      	mov	r4, r0
9001773c:	e7c0      	b.n	900176c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001773e:	6828      	ldr	r0, [r5, #0]
90017740:	6803      	ldr	r3, [r0, #0]
90017742:	691b      	ldr	r3, [r3, #16]
90017744:	4798      	blx	r3
90017746:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001774a:	4298      	cmp	r0, r3
9001774c:	f000 80a8 	beq.w	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017750:	f242 030b 	movw	r3, #8203	@ 0x200b
90017754:	4298      	cmp	r0, r3
90017756:	f000 80a3 	beq.w	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001775a:	f1bb 0f00 	cmp.w	fp, #0
9001775e:	d100      	bne.n	90017762 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90017760:	444e      	add	r6, r9
90017762:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90017764:	2a00      	cmp	r2, #0
90017766:	d1c0      	bne.n	900176ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90017768:	4691      	mov	r9, r2
9001776a:	e099      	b.n	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001776c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001776e:	2b00      	cmp	r3, #0
90017770:	f000 80c2 	beq.w	900178f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90017774:	f1bb 0f00 	cmp.w	fp, #0
90017778:	d117      	bne.n	900177aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001777a:	6828      	ldr	r0, [r5, #0]
9001777c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001777e:	6803      	ldr	r3, [r0, #0]
90017780:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017782:	4798      	blx	r3
90017784:	4406      	add	r6, r0
90017786:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90017788:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001778a:	1af3      	subs	r3, r6, r3
9001778c:	4293      	cmp	r3, r2
9001778e:	dd16      	ble.n	900177be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90017790:	2c00      	cmp	r4, #0
90017792:	f000 80af 	beq.w	900178f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90017796:	2c0a      	cmp	r4, #10
90017798:	f040 809d 	bne.w	900178d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
9001779c:	240a      	movs	r4, #10
9001779e:	fab4 f084 	clz	r0, r4
900177a2:	0940      	lsrs	r0, r0, #5
900177a4:	b01f      	add	sp, #124	@ 0x7c
900177a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900177aa:	6828      	ldr	r0, [r5, #0]
900177ac:	990c      	ldr	r1, [sp, #48]	@ 0x30
900177ae:	6803      	ldr	r3, [r0, #0]
900177b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900177b2:	4798      	blx	r3
900177b4:	f1bb 0f01 	cmp.w	fp, #1
900177b8:	eba6 0600 	sub.w	r6, r6, r0
900177bc:	d0a7      	beq.n	9001770e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900177be:	981c      	ldr	r0, [sp, #112]	@ 0x70
900177c0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900177c2:	f990 1009 	ldrsb.w	r1, [r0, #9]
900177c6:	f9b3 8000 	ldrsh.w	r8, [r3]
900177ca:	7b43      	ldrb	r3, [r0, #13]
900177cc:	4431      	add	r1, r6
900177ce:	015b      	lsls	r3, r3, #5
900177d0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900177d4:	7983      	ldrb	r3, [r0, #6]
900177d6:	4313      	orrs	r3, r2
900177d8:	440b      	add	r3, r1
900177da:	4543      	cmp	r3, r8
900177dc:	db60      	blt.n	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900177de:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900177e0:	4299      	cmp	r1, r3
900177e2:	da5d      	bge.n	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900177e4:	6828      	ldr	r0, [r5, #0]
900177e6:	45b0      	cmp	r8, r6
900177e8:	6803      	ldr	r3, [r0, #0]
900177ea:	bfcc      	ite	gt
900177ec:	eba8 0806 	subgt.w	r8, r8, r6
900177f0:	f04f 0800 	movle.w	r8, #0
900177f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900177f6:	bfc8      	it	gt
900177f8:	fa1f f888 	uxthgt.w	r8, r8
900177fc:	4798      	blx	r3
900177fe:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90017800:	7b53      	ldrb	r3, [r2, #13]
90017802:	00d9      	lsls	r1, r3, #3
90017804:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90017808:	7a11      	ldrb	r1, [r2, #8]
9001780a:	4339      	orrs	r1, r7
9001780c:	065f      	lsls	r7, r3, #25
9001780e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90017810:	bf48      	it	mi
90017812:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90017816:	4407      	add	r7, r0
90017818:	bf48      	it	mi
9001781a:	b209      	sxthmi	r1, r1
9001781c:	1a7f      	subs	r7, r7, r1
9001781e:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90017820:	b2bf      	uxth	r7, r7
90017822:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90017826:	fa0f fa87 	sxth.w	sl, r7
9001782a:	4551      	cmp	r1, sl
9001782c:	dd3c      	ble.n	900178a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001782e:	011b      	lsls	r3, r3, #4
90017830:	79d0      	ldrb	r0, [r2, #7]
90017832:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017836:	4303      	orrs	r3, r0
90017838:	449a      	add	sl, r3
9001783a:	4551      	cmp	r1, sl
9001783c:	dc30      	bgt.n	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001783e:	1bcf      	subs	r7, r1, r7
90017840:	468a      	mov	sl, r1
90017842:	b23f      	sxth	r7, r7
90017844:	9219      	str	r2, [sp, #100]	@ 0x64
90017846:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90017848:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9001784a:	6828      	ldr	r0, [r5, #0]
9001784c:	2a00      	cmp	r2, #0
9001784e:	d12d      	bne.n	900178ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90017850:	9318      	str	r3, [sp, #96]	@ 0x60
90017852:	b2bf      	uxth	r7, r7
90017854:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90017856:	6819      	ldr	r1, [r3, #0]
90017858:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
9001785a:	6801      	ldr	r1, [r0, #0]
9001785c:	9314      	str	r3, [sp, #80]	@ 0x50
9001785e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90017860:	4788      	blx	r1
90017862:	79a9      	ldrb	r1, [r5, #6]
90017864:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90017866:	910b      	str	r1, [sp, #44]	@ 0x2c
90017868:	7ba9      	ldrb	r1, [r5, #14]
9001786a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
9001786c:	910a      	str	r1, [sp, #40]	@ 0x28
9001786e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90017872:	9109      	str	r1, [sp, #36]	@ 0x24
90017874:	68a9      	ldr	r1, [r5, #8]
90017876:	9306      	str	r3, [sp, #24]
90017878:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001787a:	9205      	str	r2, [sp, #20]
9001787c:	9304      	str	r3, [sp, #16]
9001787e:	f8cd a004 	str.w	sl, [sp, #4]
90017882:	e9cd 8702 	strd	r8, r7, [sp, #8]
90017886:	44b0      	add	r8, r6
90017888:	9f14      	ldr	r7, [sp, #80]	@ 0x50
9001788a:	fa0f f388 	sxth.w	r3, r8
9001788e:	9300      	str	r3, [sp, #0]
90017890:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90017892:	e9cd 0107 	strd	r0, r1, [sp, #28]
90017896:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90017898:	681a      	ldr	r2, [r3, #0]
9001789a:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001789c:	685b      	ldr	r3, [r3, #4]
9001789e:	47b8      	blx	r7
900178a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900178a2:	3301      	adds	r3, #1
900178a4:	930d      	str	r3, [sp, #52]	@ 0x34
900178a6:	e6e3      	b.n	90017670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900178a8:	2700      	movs	r7, #0
900178aa:	e7cb      	b.n	90017844 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900178ac:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900178ae:	f8d2 c008 	ldr.w	ip, [r2, #8]
900178b2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900178b4:	f8dc 1000 	ldr.w	r1, [ip]
900178b8:	e9cd 6204 	strd	r6, r2, [sp, #16]
900178bc:	79aa      	ldrb	r2, [r5, #6]
900178be:	9203      	str	r2, [sp, #12]
900178c0:	7baa      	ldrb	r2, [r5, #14]
900178c2:	9202      	str	r2, [sp, #8]
900178c4:	68aa      	ldr	r2, [r5, #8]
900178c6:	e9cd 0200 	strd	r0, r2, [sp]
900178ca:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900178cc:	4660      	mov	r0, ip
900178ce:	688f      	ldr	r7, [r1, #8]
900178d0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900178d2:	47b8      	blx	r7
900178d4:	e7e4      	b.n	900178a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900178d6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900178d8:	3501      	adds	r5, #1
900178da:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900178dc:	429d      	cmp	r5, r3
900178de:	f6bf af5e 	bge.w	9001779e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900178e2:	4659      	mov	r1, fp
900178e4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900178e6:	f7ee fe33 	bl	90006550 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900178ea:	4604      	mov	r4, r0
900178ec:	b110      	cbz	r0, 900178f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900178ee:	280a      	cmp	r0, #10
900178f0:	d1f2      	bne.n	900178d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
900178f2:	e753      	b.n	9001779c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900178f4:	2400      	movs	r4, #0
900178f6:	e752      	b.n	9001779e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900178f8:	f1bb 0f00 	cmp.w	fp, #0
900178fc:	f43f af43 	beq.w	90017786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90017900:	e75d      	b.n	900177be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90017902 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90017902:	b530      	push	{r4, r5, lr}
90017904:	8ac4      	ldrh	r4, [r0, #22]
90017906:	8b45      	ldrh	r5, [r0, #26]
90017908:	8343      	strh	r3, [r0, #26]
9001790a:	442c      	add	r4, r5
9001790c:	1ae4      	subs	r4, r4, r3
9001790e:	8b83      	ldrh	r3, [r0, #28]
90017910:	82c4      	strh	r4, [r0, #22]
90017912:	8b04      	ldrh	r4, [r0, #24]
90017914:	4422      	add	r2, r4
90017916:	440c      	add	r4, r1
90017918:	1a59      	subs	r1, r3, r1
9001791a:	83c2      	strh	r2, [r0, #30]
9001791c:	8304      	strh	r4, [r0, #24]
9001791e:	8381      	strh	r1, [r0, #28]
90017920:	bd30      	pop	{r4, r5, pc}

90017922 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90017922:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017926:	4604      	mov	r4, r0
90017928:	8a47      	ldrh	r7, [r0, #18]
9001792a:	68c0      	ldr	r0, [r0, #12]
9001792c:	b085      	sub	sp, #20
9001792e:	6803      	ldr	r3, [r0, #0]
90017930:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90017932:	4798      	blx	r3
90017934:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90017938:	7a63      	ldrb	r3, [r4, #9]
9001793a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001793e:	3b01      	subs	r3, #1
90017940:	42b7      	cmp	r7, r6
90017942:	bfac      	ite	ge
90017944:	f04f 0900 	movge.w	r9, #0
90017948:	f04f 0901 	movlt.w	r9, #1
9001794c:	2b05      	cmp	r3, #5
9001794e:	d804      	bhi.n	9001795a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90017950:	e8df f003 	tbb	[pc, r3]
90017954:	470f0854 	.word	0x470f0854
90017958:	4c4c      	.short	0x4c4c
9001795a:	2500      	movs	r5, #0
9001795c:	46a9      	mov	r9, r5
9001795e:	462e      	mov	r6, r5
90017960:	462f      	mov	r7, r5
90017962:	e00e      	b.n	90017982 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90017964:	42b7      	cmp	r7, r6
90017966:	f04f 0500 	mov.w	r5, #0
9001796a:	bfb4      	ite	lt
9001796c:	2600      	movlt	r6, #0
9001796e:	2601      	movge	r6, #1
90017970:	e7f6      	b.n	90017960 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017972:	42b7      	cmp	r7, r6
90017974:	464d      	mov	r5, r9
90017976:	f04f 0900 	mov.w	r9, #0
9001797a:	bfb4      	ite	lt
9001797c:	2600      	movlt	r6, #0
9001797e:	2601      	movge	r6, #1
90017980:	464f      	mov	r7, r9
90017982:	f04f 0800 	mov.w	r8, #0
90017986:	f8a4 8016 	strh.w	r8, [r4, #22]
9001798a:	f8a4 8018 	strh.w	r8, [r4, #24]
9001798e:	f8cd 8004 	str.w	r8, [sp, #4]
90017992:	2300      	movs	r3, #0
90017994:	9303      	str	r3, [sp, #12]
90017996:	8823      	ldrh	r3, [r4, #0]
90017998:	2b20      	cmp	r3, #32
9001799a:	d033      	beq.n	90017a04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001799c:	f242 010b 	movw	r1, #8203	@ 0x200b
900179a0:	1a5a      	subs	r2, r3, r1
900179a2:	f1d2 0a00 	rsbs	sl, r2, #0
900179a6:	eb4a 0a02 	adc.w	sl, sl, r2
900179aa:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
900179ae:	4293      	cmp	r3, r2
900179b0:	d008      	beq.n	900179c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900179b2:	428b      	cmp	r3, r1
900179b4:	9a01      	ldr	r2, [sp, #4]
900179b6:	bf0e      	itee	eq
900179b8:	f04f 0a01 	moveq.w	sl, #1
900179bc:	461a      	movne	r2, r3
900179be:	f04f 0a00 	movne.w	sl, #0
900179c2:	9201      	str	r2, [sp, #4]
900179c4:	ab03      	add	r3, sp, #12
900179c6:	68e2      	ldr	r2, [r4, #12]
900179c8:	7a21      	ldrb	r1, [r4, #8]
900179ca:	6860      	ldr	r0, [r4, #4]
900179cc:	f003 f93c 	bl	9001ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900179d0:	8020      	strh	r0, [r4, #0]
900179d2:	b9d8      	cbnz	r0, 90017a0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900179d4:	8ba2      	ldrh	r2, [r4, #28]
900179d6:	2300      	movs	r3, #0
900179d8:	4611      	mov	r1, r2
900179da:	4620      	mov	r0, r4
900179dc:	f7ff ff91 	bl	90017902 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900179e0:	e06e      	b.n	90017ac0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900179e2:	2500      	movs	r5, #0
900179e4:	2701      	movs	r7, #1
900179e6:	46a9      	mov	r9, r5
900179e8:	462e      	mov	r6, r5
900179ea:	e7ca      	b.n	90017982 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900179ec:	42b7      	cmp	r7, r6
900179ee:	f04f 0500 	mov.w	r5, #0
900179f2:	bfb4      	ite	lt
900179f4:	2700      	movlt	r7, #0
900179f6:	2701      	movge	r7, #1
900179f8:	462e      	mov	r6, r5
900179fa:	e7c2      	b.n	90017982 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900179fc:	2500      	movs	r5, #0
900179fe:	2601      	movs	r6, #1
90017a00:	46a9      	mov	r9, r5
90017a02:	e7ad      	b.n	90017960 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017a04:	9301      	str	r3, [sp, #4]
90017a06:	f04f 0a01 	mov.w	sl, #1
90017a0a:	e7db      	b.n	900179c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90017a0c:	8b63      	ldrh	r3, [r4, #26]
90017a0e:	280a      	cmp	r0, #10
90017a10:	f103 0301 	add.w	r3, r3, #1
90017a14:	8363      	strh	r3, [r4, #26]
90017a16:	d0dd      	beq.n	900179d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90017a18:	9a03      	ldr	r2, [sp, #12]
90017a1a:	bb62      	cbnz	r2, 90017a76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90017a1c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017a20:	4298      	cmp	r0, r3
90017a22:	d003      	beq.n	90017a2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017a24:	f242 030b 	movw	r3, #8203	@ 0x200b
90017a28:	4298      	cmp	r0, r3
90017a2a:	d1b2      	bne.n	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017a2c:	8823      	ldrh	r3, [r4, #0]
90017a2e:	8ba1      	ldrh	r1, [r4, #28]
90017a30:	2b20      	cmp	r3, #32
90017a32:	d003      	beq.n	90017a3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90017a34:	f242 000b 	movw	r0, #8203	@ 0x200b
90017a38:	4283      	cmp	r3, r0
90017a3a:	d131      	bne.n	90017aa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90017a3c:	f1ba 0f00 	cmp.w	sl, #0
90017a40:	bf0a      	itet	eq
90017a42:	4688      	moveq	r8, r1
90017a44:	4650      	movne	r0, sl
90017a46:	2001      	moveq	r0, #1
90017a48:	440a      	add	r2, r1
90017a4a:	8b23      	ldrh	r3, [r4, #24]
90017a4c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90017a50:	b292      	uxth	r2, r2
90017a52:	83a2      	strh	r2, [r4, #28]
90017a54:	4413      	add	r3, r2
90017a56:	f1b9 0f00 	cmp.w	r9, #0
90017a5a:	d102      	bne.n	90017a62 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90017a5c:	2d00      	cmp	r5, #0
90017a5e:	d042      	beq.n	90017ae6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90017a60:	b300      	cbz	r0, 90017aa4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90017a62:	8c21      	ldrh	r1, [r4, #32]
90017a64:	4419      	add	r1, r3
90017a66:	458c      	cmp	ip, r1
90017a68:	da37      	bge.n	90017ada <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90017a6a:	8ae1      	ldrh	r1, [r4, #22]
90017a6c:	2900      	cmp	r1, #0
90017a6e:	d034      	beq.n	90017ada <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90017a70:	4563      	cmp	r3, ip
90017a72:	dd8e      	ble.n	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017a74:	e01d      	b.n	90017ab2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90017a76:	8893      	ldrh	r3, [r2, #4]
90017a78:	9901      	ldr	r1, [sp, #4]
90017a7a:	8023      	strh	r3, [r4, #0]
90017a7c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90017a80:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90017a84:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90017a88:	f892 b00a 	ldrb.w	fp, [r2, #10]
90017a8c:	ea4b 0b00 	orr.w	fp, fp, r0
90017a90:	68e0      	ldr	r0, [r4, #12]
90017a92:	6803      	ldr	r3, [r0, #0]
90017a94:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017a96:	4798      	blx	r3
90017a98:	eb0b 0200 	add.w	r2, fp, r0
90017a9c:	b292      	uxth	r2, r2
90017a9e:	e7c5      	b.n	90017a2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017aa0:	2000      	movs	r0, #0
90017aa2:	e7d1      	b.n	90017a48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90017aa4:	4563      	cmp	r3, ip
90017aa6:	f77f af74 	ble.w	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017aaa:	8ae3      	ldrh	r3, [r4, #22]
90017aac:	2b00      	cmp	r3, #0
90017aae:	f43f af70 	beq.w	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017ab2:	2301      	movs	r3, #1
90017ab4:	8c22      	ldrh	r2, [r4, #32]
90017ab6:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90017aba:	8be3      	ldrh	r3, [r4, #30]
90017abc:	4413      	add	r3, r2
90017abe:	83e3      	strh	r3, [r4, #30]
90017ac0:	68e0      	ldr	r0, [r4, #12]
90017ac2:	6803      	ldr	r3, [r0, #0]
90017ac4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90017ac6:	4798      	blx	r3
90017ac8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90017acc:	4418      	add	r0, r3
90017ace:	8a63      	ldrh	r3, [r4, #18]
90017ad0:	1a18      	subs	r0, r3, r0
90017ad2:	8260      	strh	r0, [r4, #18]
90017ad4:	b005      	add	sp, #20
90017ad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017ada:	2300      	movs	r3, #0
90017adc:	4611      	mov	r1, r2
90017ade:	4620      	mov	r0, r4
90017ae0:	f7ff ff0f 	bl	90017902 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90017ae4:	e755      	b.n	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017ae6:	4563      	cmp	r3, ip
90017ae8:	dd14      	ble.n	90017b14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90017aea:	b117      	cbz	r7, 90017af2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90017aec:	2301      	movs	r3, #1
90017aee:	460a      	mov	r2, r1
90017af0:	e772      	b.n	900179d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90017af2:	2e00      	cmp	r6, #0
90017af4:	f43f af4d 	beq.w	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017af8:	2800      	cmp	r0, #0
90017afa:	f47f af4a 	bne.w	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017afe:	f1ba 0f00 	cmp.w	sl, #0
90017b02:	d002      	beq.n	90017b0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90017b04:	2301      	movs	r3, #1
90017b06:	4642      	mov	r2, r8
90017b08:	e767      	b.n	900179da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90017b0a:	8ae3      	ldrh	r3, [r4, #22]
90017b0c:	2b00      	cmp	r3, #0
90017b0e:	f43f af40 	beq.w	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017b12:	e7d5      	b.n	90017ac0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90017b14:	2800      	cmp	r0, #0
90017b16:	f47f af3c 	bne.w	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017b1a:	f1ba 0f00 	cmp.w	sl, #0
90017b1e:	f43f af38 	beq.w	90017992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017b22:	2301      	movs	r3, #1
90017b24:	4642      	mov	r2, r8
90017b26:	e7da      	b.n	90017ade <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90017b28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90017b28:	b5f0      	push	{r4, r5, r6, r7, lr}
90017b2a:	4605      	mov	r5, r0
90017b2c:	b08f      	sub	sp, #60	@ 0x3c
90017b2e:	4617      	mov	r7, r2
90017b30:	461c      	mov	r4, r3
90017b32:	460e      	mov	r6, r1
90017b34:	b1d1      	cbz	r1, 90017b6c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90017b36:	681b      	ldr	r3, [r3, #0]
90017b38:	4620      	mov	r0, r4
90017b3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90017b3c:	4798      	blx	r3
90017b3e:	4240      	negs	r0, r0
90017b40:	9603      	str	r6, [sp, #12]
90017b42:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90017b46:	b200      	sxth	r0, r0
90017b48:	9700      	str	r7, [sp, #0]
90017b4a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
90017b4e:	4629      	mov	r1, r5
90017b50:	e9cd 4001 	strd	r4, r0, [sp, #4]
90017b54:	2401      	movs	r4, #1
90017b56:	a805      	add	r0, sp, #20
90017b58:	f7ff fcaa 	bl	900174b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90017b5c:	a805      	add	r0, sp, #20
90017b5e:	f7ff fee0 	bl	90017922 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017b62:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90017b66:	b163      	cbz	r3, 90017b82 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90017b68:	3401      	adds	r4, #1
90017b6a:	e7f7      	b.n	90017b5c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90017b6c:	2401      	movs	r4, #1
90017b6e:	f003 f937 	bl	9001ade0 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017b72:	280a      	cmp	r0, #10
90017b74:	4628      	mov	r0, r5
90017b76:	bf08      	it	eq
90017b78:	3401      	addeq	r4, #1
90017b7a:	f003 f931 	bl	9001ade0 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017b7e:	2800      	cmp	r0, #0
90017b80:	d1f7      	bne.n	90017b72 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90017b82:	b2a0      	uxth	r0, r4
90017b84:	b00f      	add	sp, #60	@ 0x3c
90017b86:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017b88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90017b88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017b8c:	b0e3      	sub	sp, #396	@ 0x18c
90017b8e:	461c      	mov	r4, r3
90017b90:	4683      	mov	fp, r0
90017b92:	4688      	mov	r8, r1
90017b94:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90017b96:	2b00      	cmp	r3, #0
90017b98:	f000 8112 	beq.w	90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017b9c:	6823      	ldr	r3, [r4, #0]
90017b9e:	2b00      	cmp	r3, #0
90017ba0:	f000 810e 	beq.w	90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017ba4:	7ba3      	ldrb	r3, [r4, #14]
90017ba6:	2b00      	cmp	r3, #0
90017ba8:	f000 810a 	beq.w	90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017bac:	ad0a      	add	r5, sp, #40	@ 0x28
90017bae:	6810      	ldr	r0, [r2, #0]
90017bb0:	6851      	ldr	r1, [r2, #4]
90017bb2:	462b      	mov	r3, r5
90017bb4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90017bb8:	c303      	stmia	r3!, {r0, r1}
90017bba:	2100      	movs	r1, #0
90017bbc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017bc0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90017bc4:	4628      	mov	r0, r5
90017bc6:	910c      	str	r1, [sp, #48]	@ 0x30
90017bc8:	a90c      	add	r1, sp, #48	@ 0x30
90017bca:	79a2      	ldrb	r2, [r4, #6]
90017bcc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90017bd0:	f7ff fced 	bl	900175ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90017bd4:	a90c      	add	r1, sp, #48	@ 0x30
90017bd6:	79a2      	ldrb	r2, [r4, #6]
90017bd8:	4608      	mov	r0, r1
90017bda:	f7ff fce8 	bl	900175ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90017bde:	a817      	add	r0, sp, #92	@ 0x5c
90017be0:	f002 fceb 	bl	9001a5ba <_ZN8touchgfx12TextProviderC1Ev>
90017be4:	6820      	ldr	r0, [r4, #0]
90017be6:	6803      	ldr	r3, [r0, #0]
90017be8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017bea:	4798      	blx	r3
90017bec:	4606      	mov	r6, r0
90017bee:	6820      	ldr	r0, [r4, #0]
90017bf0:	6803      	ldr	r3, [r0, #0]
90017bf2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017bf4:	4798      	blx	r3
90017bf6:	4633      	mov	r3, r6
90017bf8:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90017bfa:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90017bfc:	9000      	str	r0, [sp, #0]
90017bfe:	a817      	add	r0, sp, #92	@ 0x5c
90017c00:	f002 fd2e 	bl	9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017c04:	6820      	ldr	r0, [r4, #0]
90017c06:	f894 a004 	ldrb.w	sl, [r4, #4]
90017c0a:	6803      	ldr	r3, [r0, #0]
90017c0c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90017c0e:	4798      	blx	r3
90017c10:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90017c14:	6823      	ldr	r3, [r4, #0]
90017c16:	4607      	mov	r7, r0
90017c18:	4406      	add	r6, r0
90017c1a:	a830      	add	r0, sp, #192	@ 0xc0
90017c1c:	f893 9009 	ldrb.w	r9, [r3, #9]
90017c20:	f002 fccb 	bl	9001a5ba <_ZN8touchgfx12TextProviderC1Ev>
90017c24:	7c23      	ldrb	r3, [r4, #16]
90017c26:	b17b      	cbz	r3, 90017c48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90017c28:	6820      	ldr	r0, [r4, #0]
90017c2a:	6803      	ldr	r3, [r0, #0]
90017c2c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017c2e:	4798      	blx	r3
90017c30:	9009      	str	r0, [sp, #36]	@ 0x24
90017c32:	6820      	ldr	r0, [r4, #0]
90017c34:	6802      	ldr	r2, [r0, #0]
90017c36:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90017c38:	4790      	blx	r2
90017c3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017c3c:	9000      	str	r0, [sp, #0]
90017c3e:	a830      	add	r0, sp, #192	@ 0xc0
90017c40:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90017c42:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90017c44:	f002 fd0c 	bl	9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017c48:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90017c4c:	a80e      	add	r0, sp, #56	@ 0x38
90017c4e:	7be2      	ldrb	r2, [r4, #15]
90017c50:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90017c54:	1a8a      	subs	r2, r1, r2
90017c56:	7c21      	ldrb	r1, [r4, #16]
90017c58:	9103      	str	r1, [sp, #12]
90017c5a:	b292      	uxth	r2, r2
90017c5c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90017c60:	9102      	str	r1, [sp, #8]
90017c62:	6821      	ldr	r1, [r4, #0]
90017c64:	9101      	str	r1, [sp, #4]
90017c66:	7961      	ldrb	r1, [r4, #5]
90017c68:	9100      	str	r1, [sp, #0]
90017c6a:	a930      	add	r1, sp, #192	@ 0xc0
90017c6c:	f7ff fc20 	bl	900174b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90017c70:	2e00      	cmp	r6, #0
90017c72:	dc5b      	bgt.n	90017d2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90017c74:	af17      	add	r7, sp, #92	@ 0x5c
90017c76:	f04f 0900 	mov.w	r9, #0
90017c7a:	7c23      	ldrb	r3, [r4, #16]
90017c7c:	2b00      	cmp	r3, #0
90017c7e:	f000 80b1 	beq.w	90017de4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90017c82:	a80e      	add	r0, sp, #56	@ 0x38
90017c84:	f7ff fe4d 	bl	90017922 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017c88:	f1ba 0f00 	cmp.w	sl, #0
90017c8c:	f000 80a5 	beq.w	90017dda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017c90:	7c23      	ldrb	r3, [r4, #16]
90017c92:	2264      	movs	r2, #100	@ 0x64
90017c94:	4639      	mov	r1, r7
90017c96:	a849      	add	r0, sp, #292	@ 0x124
90017c98:	9309      	str	r3, [sp, #36]	@ 0x24
90017c9a:	f013 f943 	bl	9002af24 <memcpy>
90017c9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017ca0:	2b00      	cmp	r3, #0
90017ca2:	f000 80a7 	beq.w	90017df4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90017ca6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90017caa:	7922      	ldrb	r2, [r4, #4]
90017cac:	2a01      	cmp	r2, #1
90017cae:	f040 808a 	bne.w	90017dc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90017cb2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90017cb6:	1ac0      	subs	r0, r0, r3
90017cb8:	2302      	movs	r3, #2
90017cba:	fb90 f0f3 	sdiv	r0, r0, r3
90017cbe:	b200      	sxth	r0, r0
90017cc0:	7c23      	ldrb	r3, [r4, #16]
90017cc2:	2b00      	cmp	r3, #0
90017cc4:	f000 808b 	beq.w	90017dde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90017cc8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90017ccc:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90017cd0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90017cd4:	e9cd 2105 	strd	r2, r1, [sp, #20]
90017cd8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90017cdc:	2100      	movs	r1, #0
90017cde:	4410      	add	r0, r2
90017ce0:	4642      	mov	r2, r8
90017ce2:	b200      	sxth	r0, r0
90017ce4:	e9cd 9703 	strd	r9, r7, [sp, #12]
90017ce8:	9000      	str	r0, [sp, #0]
90017cea:	4658      	mov	r0, fp
90017cec:	e9cd 5401 	strd	r5, r4, [sp, #4]
90017cf0:	f7ff fc8e 	bl	90017610 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90017cf4:	2800      	cmp	r0, #0
90017cf6:	d163      	bne.n	90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017cf8:	b2b2      	uxth	r2, r6
90017cfa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90017cfe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90017d02:	4413      	add	r3, r2
90017d04:	1a8a      	subs	r2, r1, r2
90017d06:	b21b      	sxth	r3, r3
90017d08:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90017d0c:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90017d10:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017d14:	2a00      	cmp	r2, #0
90017d16:	d153      	bne.n	90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017d18:	6822      	ldr	r2, [r4, #0]
90017d1a:	8869      	ldrh	r1, [r5, #2]
90017d1c:	7a12      	ldrb	r2, [r2, #8]
90017d1e:	1a9b      	subs	r3, r3, r2
90017d20:	88ea      	ldrh	r2, [r5, #6]
90017d22:	440a      	add	r2, r1
90017d24:	b212      	sxth	r2, r2
90017d26:	4293      	cmp	r3, r2
90017d28:	dda7      	ble.n	90017c7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90017d2a:	e049      	b.n	90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017d2c:	7c23      	ldrb	r3, [r4, #16]
90017d2e:	444f      	add	r7, r9
90017d30:	b1c3      	cbz	r3, 90017d64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90017d32:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90017d36:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90017d3a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017d3e:	443b      	add	r3, r7
90017d40:	4293      	cmp	r3, r2
90017d42:	da97      	bge.n	90017c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017d44:	a80e      	add	r0, sp, #56	@ 0x38
90017d46:	f7ff fdec 	bl	90017922 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017d4a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90017d4e:	3b01      	subs	r3, #1
90017d50:	b29b      	uxth	r3, r3
90017d52:	454b      	cmp	r3, r9
90017d54:	9309      	str	r3, [sp, #36]	@ 0x24
90017d56:	d021      	beq.n	90017d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90017d58:	7961      	ldrb	r1, [r4, #5]
90017d5a:	a817      	add	r0, sp, #92	@ 0x5c
90017d5c:	f7ee fbf8 	bl	90006550 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017d60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017d62:	e7f4      	b.n	90017d4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90017d64:	fa1f f986 	uxth.w	r9, r6
90017d68:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90017d6c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017d70:	443b      	add	r3, r7
90017d72:	4293      	cmp	r3, r2
90017d74:	f6bf af7e 	bge.w	90017c74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017d78:	a817      	add	r0, sp, #92	@ 0x5c
90017d7a:	f003 f831 	bl	9001ade0 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017d7e:	b1f8      	cbz	r0, 90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017d80:	280a      	cmp	r0, #10
90017d82:	d1f1      	bne.n	90017d68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017d84:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90017d88:	444b      	add	r3, r9
90017d8a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017d8e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90017d92:	eba3 0309 	sub.w	r3, r3, r9
90017d96:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90017d9a:	e7e5      	b.n	90017d68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017d9c:	b2b3      	uxth	r3, r6
90017d9e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90017da2:	441a      	add	r2, r3
90017da4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90017da8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90017dac:	1ad3      	subs	r3, r2, r3
90017dae:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90017db2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90017db6:	b11b      	cbz	r3, 90017dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017db8:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90017dbc:	2b00      	cmp	r3, #0
90017dbe:	d0ba      	beq.n	90017d36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90017dc0:	b063      	add	sp, #396	@ 0x18c
90017dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017dc6:	2a02      	cmp	r2, #2
90017dc8:	d105      	bne.n	90017dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90017dca:	7be2      	ldrb	r2, [r4, #15]
90017dcc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90017dd0:	1a80      	subs	r0, r0, r2
90017dd2:	1ac0      	subs	r0, r0, r3
90017dd4:	e773      	b.n	90017cbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90017dd6:	2000      	movs	r0, #0
90017dd8:	e772      	b.n	90017cc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017dda:	7be0      	ldrb	r0, [r4, #15]
90017ddc:	e770      	b.n	90017cc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017dde:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90017de2:	e773      	b.n	90017ccc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90017de4:	f1ba 0f00 	cmp.w	sl, #0
90017de8:	d0f7      	beq.n	90017dda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017dea:	2264      	movs	r2, #100	@ 0x64
90017dec:	4639      	mov	r1, r7
90017dee:	a849      	add	r0, sp, #292	@ 0x124
90017df0:	f013 f898 	bl	9002af24 <memcpy>
90017df4:	2300      	movs	r3, #0
90017df6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90017dfa:	6821      	ldr	r1, [r4, #0]
90017dfc:	a849      	add	r0, sp, #292	@ 0x124
90017dfe:	f7ff fb9a 	bl	90017536 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90017e02:	b203      	sxth	r3, r0
90017e04:	e751      	b.n	90017caa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90017e06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90017e06:	2b03      	cmp	r3, #3
90017e08:	d818      	bhi.n	90017e3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90017e0a:	e8df f003 	tbb	[pc, r3]
90017e0e:	0602      	.short	0x0602
90017e10:	130d      	.short	0x130d
90017e12:	f9b0 2000 	ldrsh.w	r2, [r0]
90017e16:	1850      	adds	r0, r2, r1
90017e18:	4770      	bx	lr
90017e1a:	8803      	ldrh	r3, [r0, #0]
90017e1c:	8880      	ldrh	r0, [r0, #4]
90017e1e:	4418      	add	r0, r3
90017e20:	b200      	sxth	r0, r0
90017e22:	1a80      	subs	r0, r0, r2
90017e24:	3801      	subs	r0, #1
90017e26:	4770      	bx	lr
90017e28:	8803      	ldrh	r3, [r0, #0]
90017e2a:	8880      	ldrh	r0, [r0, #4]
90017e2c:	4418      	add	r0, r3
90017e2e:	b200      	sxth	r0, r0
90017e30:	1a40      	subs	r0, r0, r1
90017e32:	e7f7      	b.n	90017e24 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90017e34:	f9b0 0000 	ldrsh.w	r0, [r0]
90017e38:	4410      	add	r0, r2
90017e3a:	4770      	bx	lr
90017e3c:	2000      	movs	r0, #0
90017e3e:	4770      	bx	lr

90017e40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90017e40:	2b03      	cmp	r3, #3
90017e42:	d817      	bhi.n	90017e74 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90017e44:	e8df f003 	tbb	[pc, r3]
90017e48:	10090602 	.word	0x10090602
90017e4c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017e50:	1850      	adds	r0, r2, r1
90017e52:	4770      	bx	lr
90017e54:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90017e58:	e7fa      	b.n	90017e50 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90017e5a:	8843      	ldrh	r3, [r0, #2]
90017e5c:	88c0      	ldrh	r0, [r0, #6]
90017e5e:	4418      	add	r0, r3
90017e60:	b200      	sxth	r0, r0
90017e62:	1a80      	subs	r0, r0, r2
90017e64:	3801      	subs	r0, #1
90017e66:	4770      	bx	lr
90017e68:	8843      	ldrh	r3, [r0, #2]
90017e6a:	88c0      	ldrh	r0, [r0, #6]
90017e6c:	4418      	add	r0, r3
90017e6e:	b200      	sxth	r0, r0
90017e70:	1a40      	subs	r0, r0, r1
90017e72:	e7f7      	b.n	90017e64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90017e74:	2000      	movs	r0, #0
90017e76:	4770      	bx	lr

90017e78 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90017e78:	4b01      	ldr	r3, [pc, #4]	@ (90017e80 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90017e7a:	2200      	movs	r2, #0
90017e7c:	601a      	str	r2, [r3, #0]
90017e7e:	4770      	bx	lr
90017e80:	2402341c 	.word	0x2402341c

90017e84 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90017e84:	4603      	mov	r3, r0
90017e86:	b1c8      	cbz	r0, 90017ebc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90017e88:	0c02      	lsrs	r2, r0, #16
90017e8a:	0412      	lsls	r2, r2, #16
90017e8c:	b9a2      	cbnz	r2, 90017eb8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90017e8e:	0403      	lsls	r3, r0, #16
90017e90:	2010      	movs	r0, #16
90017e92:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90017e96:	bf04      	itt	eq
90017e98:	021b      	lsleq	r3, r3, #8
90017e9a:	3008      	addeq	r0, #8
90017e9c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90017ea0:	bf04      	itt	eq
90017ea2:	011b      	lsleq	r3, r3, #4
90017ea4:	3004      	addeq	r0, #4
90017ea6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90017eaa:	bf04      	itt	eq
90017eac:	009b      	lsleq	r3, r3, #2
90017eae:	3002      	addeq	r0, #2
90017eb0:	2b00      	cmp	r3, #0
90017eb2:	db04      	blt.n	90017ebe <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90017eb4:	3001      	adds	r0, #1
90017eb6:	4770      	bx	lr
90017eb8:	2000      	movs	r0, #0
90017eba:	e7ea      	b.n	90017e92 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90017ebc:	2020      	movs	r0, #32
90017ebe:	4770      	bx	lr

90017ec0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90017ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017ec4:	b087      	sub	sp, #28
90017ec6:	460d      	mov	r5, r1
90017ec8:	4616      	mov	r6, r2
90017eca:	4698      	mov	r8, r3
90017ecc:	4601      	mov	r1, r0
90017ece:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90017ed2:	b120      	cbz	r0, 90017ede <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017ed4:	b11a      	cbz	r2, 90017ede <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017ed6:	2d1f      	cmp	r5, #31
90017ed8:	d801      	bhi.n	90017ede <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017eda:	2b1f      	cmp	r3, #31
90017edc:	d904      	bls.n	90017ee8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90017ede:	2000      	movs	r0, #0
90017ee0:	6038      	str	r0, [r7, #0]
90017ee2:	b007      	add	sp, #28
90017ee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017ee8:	b97d      	cbnz	r5, 90017f0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90017eea:	b143      	cbz	r3, 90017efe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90017eec:	4602      	mov	r2, r0
90017eee:	462b      	mov	r3, r5
90017ef0:	4641      	mov	r1, r8
90017ef2:	4630      	mov	r0, r6
90017ef4:	e9cd 4700 	strd	r4, r7, [sp]
90017ef8:	f7ff ffe2 	bl	90017ec0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017efc:	e7f1      	b.n	90017ee2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017efe:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
90017f02:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90017f06:	603b      	str	r3, [r7, #0]
90017f08:	e7eb      	b.n	90017ee2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017f0a:	fa32 fa05 	lsrs.w	sl, r2, r5
90017f0e:	d106      	bne.n	90017f1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90017f10:	4346      	muls	r6, r0
90017f12:	fbb6 f0f4 	udiv	r0, r6, r4
90017f16:	fb04 6610 	mls	r6, r4, r0, r6
90017f1a:	603e      	str	r6, [r7, #0]
90017f1c:	e7e1      	b.n	90017ee2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017f1e:	2201      	movs	r2, #1
90017f20:	fa00 fb05 	lsl.w	fp, r0, r5
90017f24:	40aa      	lsls	r2, r5
90017f26:	fbbb f9f4 	udiv	r9, fp, r4
90017f2a:	3a01      	subs	r2, #1
90017f2c:	fb0a f309 	mul.w	r3, sl, r9
90017f30:	fb04 b919 	mls	r9, r4, r9, fp
90017f34:	4016      	ands	r6, r2
90017f36:	9303      	str	r3, [sp, #12]
90017f38:	4630      	mov	r0, r6
90017f3a:	f7ff ffa3 	bl	90017e84 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017f3e:	462b      	mov	r3, r5
90017f40:	460a      	mov	r2, r1
90017f42:	4601      	mov	r1, r0
90017f44:	4630      	mov	r0, r6
90017f46:	e9cd 4700 	strd	r4, r7, [sp]
90017f4a:	f7ff ffb9 	bl	90017ec0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017f4e:	4606      	mov	r6, r0
90017f50:	4648      	mov	r0, r9
90017f52:	eb05 0108 	add.w	r1, r5, r8
90017f56:	f7ff ff95 	bl	90017e84 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017f5a:	ab05      	add	r3, sp, #20
90017f5c:	464a      	mov	r2, r9
90017f5e:	e9cd 4300 	strd	r4, r3, [sp]
90017f62:	4603      	mov	r3, r0
90017f64:	4650      	mov	r0, sl
90017f66:	f7ff ffab 	bl	90017ec0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017f6a:	6839      	ldr	r1, [r7, #0]
90017f6c:	9a05      	ldr	r2, [sp, #20]
90017f6e:	9b03      	ldr	r3, [sp, #12]
90017f70:	4411      	add	r1, r2
90017f72:	fbb1 f2f4 	udiv	r2, r1, r4
90017f76:	18d3      	adds	r3, r2, r3
90017f78:	fb04 1412 	mls	r4, r4, r2, r1
90017f7c:	441e      	add	r6, r3
90017f7e:	603c      	str	r4, [r7, #0]
90017f80:	4430      	add	r0, r6
90017f82:	e7ae      	b.n	90017ee2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90017f84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90017f84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017f88:	b085      	sub	sp, #20
90017f8a:	f1b0 0900 	subs.w	r9, r0, #0
90017f8e:	461d      	mov	r5, r3
90017f90:	4617      	mov	r7, r2
90017f92:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90017f94:	bfbb      	ittet	lt
90017f96:	f1c9 0900 	rsblt	r9, r9, #0
90017f9a:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
90017f9e:	2601      	movge	r6, #1
90017fa0:	6823      	ldrlt	r3, [r4, #0]
90017fa2:	bfbc      	itt	lt
90017fa4:	425b      	neglt	r3, r3
90017fa6:	6023      	strlt	r3, [r4, #0]
90017fa8:	2a00      	cmp	r2, #0
90017faa:	da04      	bge.n	90017fb6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90017fac:	6823      	ldr	r3, [r4, #0]
90017fae:	4257      	negs	r7, r2
90017fb0:	4276      	negs	r6, r6
90017fb2:	425b      	negs	r3, r3
90017fb4:	6023      	str	r3, [r4, #0]
90017fb6:	2d00      	cmp	r5, #0
90017fb8:	4638      	mov	r0, r7
90017fba:	bfba      	itte	lt
90017fbc:	426d      	neglt	r5, r5
90017fbe:	f04f 38ff 	movlt.w	r8, #4294967295	@ 0xffffffff
90017fc2:	f04f 0801 	movge.w	r8, #1
90017fc6:	f7ff ff5d 	bl	90017e84 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017fca:	ab03      	add	r3, sp, #12
90017fcc:	463a      	mov	r2, r7
90017fce:	e9cd 5300 	strd	r5, r3, [sp]
90017fd2:	4603      	mov	r3, r0
90017fd4:	4648      	mov	r0, r9
90017fd6:	f7ff ff73 	bl	90017ec0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017fda:	6823      	ldr	r3, [r4, #0]
90017fdc:	9a03      	ldr	r2, [sp, #12]
90017fde:	4546      	cmp	r6, r8
90017fe0:	441a      	add	r2, r3
90017fe2:	fb92 f3f5 	sdiv	r3, r2, r5
90017fe6:	4418      	add	r0, r3
90017fe8:	fb05 2313 	mls	r3, r5, r3, r2
90017fec:	bf18      	it	ne
90017fee:	4240      	negne	r0, r0
90017ff0:	1c72      	adds	r2, r6, #1
90017ff2:	6023      	str	r3, [r4, #0]
90017ff4:	d105      	bne.n	90018002 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90017ff6:	2b00      	cmp	r3, #0
90017ff8:	f1c3 0200 	rsb	r2, r3, #0
90017ffc:	db0b      	blt.n	90018016 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90017ffe:	6022      	str	r2, [r4, #0]
90018000:	e006      	b.n	90018010 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90018002:	2e01      	cmp	r6, #1
90018004:	d104      	bne.n	90018010 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90018006:	2b00      	cmp	r3, #0
90018008:	da02      	bge.n	90018010 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001800a:	442b      	add	r3, r5
9001800c:	3801      	subs	r0, #1
9001800e:	6023      	str	r3, [r4, #0]
90018010:	b005      	add	sp, #20
90018012:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018016:	3801      	subs	r0, #1
90018018:	1b52      	subs	r2, r2, r5
9001801a:	e7f0      	b.n	90017ffe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

9001801c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
9001801c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90018020:	4c1c      	ldr	r4, [pc, #112]	@ (90018094 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90018022:	4605      	mov	r5, r0
90018024:	6807      	ldr	r7, [r0, #0]
90018026:	69a3      	ldr	r3, [r4, #24]
90018028:	b92b      	cbnz	r3, 90018036 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001802a:	6840      	ldr	r0, [r0, #4]
9001802c:	e9c5 7000 	strd	r7, r0, [r5]
90018030:	b004      	add	sp, #16
90018032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018036:	f04f 0802 	mov.w	r8, #2
9001803a:	68a2      	ldr	r2, [r4, #8]
9001803c:	ae04      	add	r6, sp, #16
9001803e:	6820      	ldr	r0, [r4, #0]
90018040:	fb93 f1f8 	sdiv	r1, r3, r8
90018044:	440a      	add	r2, r1
90018046:	69e1      	ldr	r1, [r4, #28]
90018048:	f846 2d04 	str.w	r2, [r6, #-4]!
9001804c:	463a      	mov	r2, r7
9001804e:	9600      	str	r6, [sp, #0]
90018050:	f7ff ff98 	bl	90017f84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018054:	69a3      	ldr	r3, [r4, #24]
90018056:	4607      	mov	r7, r0
90018058:	686a      	ldr	r2, [r5, #4]
9001805a:	6a21      	ldr	r1, [r4, #32]
9001805c:	9600      	str	r6, [sp, #0]
9001805e:	6860      	ldr	r0, [r4, #4]
90018060:	f7ff ff90 	bl	90017f84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018064:	69a3      	ldr	r3, [r4, #24]
90018066:	6962      	ldr	r2, [r4, #20]
90018068:	4407      	add	r7, r0
9001806a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9001806c:	9600      	str	r6, [sp, #0]
9001806e:	68e0      	ldr	r0, [r4, #12]
90018070:	fb93 f8f8 	sdiv	r8, r3, r8
90018074:	4442      	add	r2, r8
90018076:	9203      	str	r2, [sp, #12]
90018078:	682a      	ldr	r2, [r5, #0]
9001807a:	f7ff ff83 	bl	90017f84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001807e:	4680      	mov	r8, r0
90018080:	9600      	str	r6, [sp, #0]
90018082:	69a3      	ldr	r3, [r4, #24]
90018084:	686a      	ldr	r2, [r5, #4]
90018086:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90018088:	6920      	ldr	r0, [r4, #16]
9001808a:	f7ff ff7b 	bl	90017f84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001808e:	4440      	add	r0, r8
90018090:	e7cc      	b.n	9001802c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90018092:	bf00      	nop
90018094:	24023420 	.word	0x24023420

90018098 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90018098:	4b07      	ldr	r3, [pc, #28]	@ (900180b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
9001809a:	781b      	ldrb	r3, [r3, #0]
9001809c:	2b01      	cmp	r3, #1
9001809e:	d109      	bne.n	900180b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900180a0:	f9b1 3000 	ldrsh.w	r3, [r1]
900180a4:	f9b0 2000 	ldrsh.w	r2, [r0]
900180a8:	8003      	strh	r3, [r0, #0]
900180aa:	4b04      	ldr	r3, [pc, #16]	@ (900180bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900180ac:	881b      	ldrh	r3, [r3, #0]
900180ae:	3b01      	subs	r3, #1
900180b0:	1a9b      	subs	r3, r3, r2
900180b2:	800b      	strh	r3, [r1, #0]
900180b4:	4770      	bx	lr
900180b6:	bf00      	nop
900180b8:	24023404 	.word	0x24023404
900180bc:	24023400 	.word	0x24023400

900180c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
900180c0:	4b07      	ldr	r3, [pc, #28]	@ (900180e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
900180c2:	b510      	push	{r4, lr}
900180c4:	781b      	ldrb	r3, [r3, #0]
900180c6:	2b01      	cmp	r3, #1
900180c8:	d108      	bne.n	900180dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
900180ca:	4b06      	ldr	r3, [pc, #24]	@ (900180e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
900180cc:	880c      	ldrh	r4, [r1, #0]
900180ce:	881b      	ldrh	r3, [r3, #0]
900180d0:	f9b0 2000 	ldrsh.w	r2, [r0]
900180d4:	3b01      	subs	r3, #1
900180d6:	1b1b      	subs	r3, r3, r4
900180d8:	8003      	strh	r3, [r0, #0]
900180da:	800a      	strh	r2, [r1, #0]
900180dc:	bd10      	pop	{r4, pc}
900180de:	bf00      	nop
900180e0:	24023404 	.word	0x24023404
900180e4:	24023400 	.word	0x24023400

900180e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
900180e8:	4b0a      	ldr	r3, [pc, #40]	@ (90018114 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
900180ea:	b510      	push	{r4, lr}
900180ec:	781b      	ldrb	r3, [r3, #0]
900180ee:	2b01      	cmp	r3, #1
900180f0:	d10e      	bne.n	90018110 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
900180f2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900180f6:	8843      	ldrh	r3, [r0, #2]
900180f8:	f9b0 4000 	ldrsh.w	r4, [r0]
900180fc:	18ca      	adds	r2, r1, r3
900180fe:	4b06      	ldr	r3, [pc, #24]	@ (90018118 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90018100:	8044      	strh	r4, [r0, #2]
90018102:	881b      	ldrh	r3, [r3, #0]
90018104:	1a9b      	subs	r3, r3, r2
90018106:	8003      	strh	r3, [r0, #0]
90018108:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001810c:	8081      	strh	r1, [r0, #4]
9001810e:	80c3      	strh	r3, [r0, #6]
90018110:	bd10      	pop	{r4, pc}
90018112:	bf00      	nop
90018114:	24023404 	.word	0x24023404
90018118:	24023400 	.word	0x24023400

9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
9001811c:	4b08      	ldr	r3, [pc, #32]	@ (90018140 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
9001811e:	781b      	ldrb	r3, [r3, #0]
90018120:	2b01      	cmp	r3, #1
90018122:	d10c      	bne.n	9001813e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90018124:	8803      	ldrh	r3, [r0, #0]
90018126:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
9001812a:	8842      	ldrh	r2, [r0, #2]
9001812c:	8002      	strh	r2, [r0, #0]
9001812e:	185a      	adds	r2, r3, r1
90018130:	4b04      	ldr	r3, [pc, #16]	@ (90018144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90018132:	881b      	ldrh	r3, [r3, #0]
90018134:	1a9b      	subs	r3, r3, r2
90018136:	8043      	strh	r3, [r0, #2]
90018138:	88c3      	ldrh	r3, [r0, #6]
9001813a:	80c1      	strh	r1, [r0, #6]
9001813c:	8083      	strh	r3, [r0, #4]
9001813e:	4770      	bx	lr
90018140:	24023404 	.word	0x24023404
90018144:	24023400 	.word	0x24023400

90018148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90018148:	4b07      	ldr	r3, [pc, #28]	@ (90018168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001814a:	b510      	push	{r4, lr}
9001814c:	781b      	ldrb	r3, [r3, #0]
9001814e:	2b01      	cmp	r3, #1
90018150:	d108      	bne.n	90018164 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90018152:	f9b1 3000 	ldrsh.w	r3, [r1]
90018156:	f9b0 4000 	ldrsh.w	r4, [r0]
9001815a:	8003      	strh	r3, [r0, #0]
9001815c:	8893      	ldrh	r3, [r2, #4]
9001815e:	3b01      	subs	r3, #1
90018160:	1b1b      	subs	r3, r3, r4
90018162:	800b      	strh	r3, [r1, #0]
90018164:	bd10      	pop	{r4, pc}
90018166:	bf00      	nop
90018168:	24023404 	.word	0x24023404

9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
9001816c:	4b0a      	ldr	r3, [pc, #40]	@ (90018198 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
9001816e:	460a      	mov	r2, r1
90018170:	b510      	push	{r4, lr}
90018172:	781b      	ldrb	r3, [r3, #0]
90018174:	2b01      	cmp	r3, #1
90018176:	d10d      	bne.n	90018194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90018178:	8881      	ldrh	r1, [r0, #4]
9001817a:	8803      	ldrh	r3, [r0, #0]
9001817c:	440b      	add	r3, r1
9001817e:	4601      	mov	r1, r0
90018180:	3b01      	subs	r3, #1
90018182:	f821 3b02 	strh.w	r3, [r1], #2
90018186:	f7ff ffdf 	bl	90018148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
9001818a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001818e:	88c2      	ldrh	r2, [r0, #6]
90018190:	80c3      	strh	r3, [r0, #6]
90018192:	8082      	strh	r2, [r0, #4]
90018194:	bd10      	pop	{r4, pc}
90018196:	bf00      	nop
90018198:	24023404 	.word	0x24023404

9001819c <_ZN8touchgfx11Application19changeToStartScreenEv>:
9001819c:	4770      	bx	lr
	...

900181a0 <_ZN8touchgfx11Application13requestRedrawEv>:
900181a0:	4b06      	ldr	r3, [pc, #24]	@ (900181bc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900181a2:	2100      	movs	r1, #0
900181a4:	f9b3 2000 	ldrsh.w	r2, [r3]
900181a8:	4b05      	ldr	r3, [pc, #20]	@ (900181c0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900181aa:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
900181ae:	f9b3 3000 	ldrsh.w	r3, [r3]
900181b2:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
900181b6:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
900181ba:	4770      	bx	lr
900181bc:	24023400 	.word	0x24023400
900181c0:	24023402 	.word	0x24023402

900181c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
900181c4:	4b03      	ldr	r3, [pc, #12]	@ (900181d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
900181c6:	6818      	ldr	r0, [r3, #0]
900181c8:	b110      	cbz	r0, 900181d0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
900181ca:	6803      	ldr	r3, [r0, #0]
900181cc:	699b      	ldr	r3, [r3, #24]
900181ce:	4718      	bx	r3
900181d0:	4770      	bx	lr
900181d2:	bf00      	nop
900181d4:	24023450 	.word	0x24023450

900181d8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
900181d8:	4770      	bx	lr
	...

900181dc <_ZN8touchgfx11Application4drawEv>:
900181dc:	4b09      	ldr	r3, [pc, #36]	@ (90018204 <_ZN8touchgfx11Application4drawEv+0x28>)
900181de:	b507      	push	{r0, r1, r2, lr}
900181e0:	f9b3 2000 	ldrsh.w	r2, [r3]
900181e4:	2100      	movs	r1, #0
900181e6:	4b08      	ldr	r3, [pc, #32]	@ (90018208 <_ZN8touchgfx11Application4drawEv+0x2c>)
900181e8:	9100      	str	r1, [sp, #0]
900181ea:	4669      	mov	r1, sp
900181ec:	f9b3 3000 	ldrsh.w	r3, [r3]
900181f0:	f8ad 2004 	strh.w	r2, [sp, #4]
900181f4:	f8ad 3006 	strh.w	r3, [sp, #6]
900181f8:	6803      	ldr	r3, [r0, #0]
900181fa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900181fc:	4798      	blx	r3
900181fe:	b003      	add	sp, #12
90018200:	f85d fb04 	ldr.w	pc, [sp], #4
90018204:	24023400 	.word	0x24023400
90018208:	24023402 	.word	0x24023402

9001820c <_ZN8touchgfx11Application10invalidateEv>:
9001820c:	4b09      	ldr	r3, [pc, #36]	@ (90018234 <_ZN8touchgfx11Application10invalidateEv+0x28>)
9001820e:	b082      	sub	sp, #8
90018210:	2100      	movs	r1, #0
90018212:	f9b3 2000 	ldrsh.w	r2, [r3]
90018216:	4b08      	ldr	r3, [pc, #32]	@ (90018238 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90018218:	f8ad 2004 	strh.w	r2, [sp, #4]
9001821c:	aa02      	add	r2, sp, #8
9001821e:	f9b3 3000 	ldrsh.w	r3, [r3]
90018222:	9100      	str	r1, [sp, #0]
90018224:	f8ad 3006 	strh.w	r3, [sp, #6]
90018228:	6803      	ldr	r3, [r0, #0]
9001822a:	e912 0006 	ldmdb	r2, {r1, r2}
9001822e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018230:	b002      	add	sp, #8
90018232:	4718      	bx	r3
90018234:	24023400 	.word	0x24023400
90018238:	24023402 	.word	0x24023402

9001823c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
9001823c:	4b03      	ldr	r3, [pc, #12]	@ (9001824c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
9001823e:	6818      	ldr	r0, [r3, #0]
90018240:	b110      	cbz	r0, 90018248 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90018242:	6803      	ldr	r3, [r0, #0]
90018244:	69db      	ldr	r3, [r3, #28]
90018246:	4718      	bx	r3
90018248:	4770      	bx	lr
9001824a:	bf00      	nop
9001824c:	24023450 	.word	0x24023450

90018250 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90018250:	4b03      	ldr	r3, [pc, #12]	@ (90018260 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90018252:	6818      	ldr	r0, [r3, #0]
90018254:	b110      	cbz	r0, 9001825c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90018256:	6803      	ldr	r3, [r0, #0]
90018258:	6a1b      	ldr	r3, [r3, #32]
9001825a:	4718      	bx	r3
9001825c:	4770      	bx	lr
9001825e:	bf00      	nop
90018260:	24023450 	.word	0x24023450

90018264 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90018264:	2300      	movs	r3, #0
90018266:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
9001826a:	4770      	bx	lr

9001826c <_ZN8touchgfx11Application14handleKeyEventEh>:
9001826c:	4b03      	ldr	r3, [pc, #12]	@ (9001827c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
9001826e:	6818      	ldr	r0, [r3, #0]
90018270:	b110      	cbz	r0, 90018278 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90018272:	6803      	ldr	r3, [r0, #0]
90018274:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018276:	4718      	bx	r3
90018278:	4770      	bx	lr
9001827a:	bf00      	nop
9001827c:	24023450 	.word	0x24023450

90018280 <_ZN8touchgfx11ApplicationD1Ev>:
90018280:	4770      	bx	lr

90018282 <_ZN8touchgfx11ApplicationD0Ev>:
90018282:	b510      	push	{r4, lr}
90018284:	4604      	mov	r4, r0
90018286:	f44f 719e 	mov.w	r1, #316	@ 0x13c
9001828a:	f011 febf 	bl	9002a00c <_ZdlPvj>
9001828e:	4620      	mov	r0, r4
90018290:	bd10      	pop	{r4, pc}

90018292 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90018292:	b510      	push	{r4, lr}
90018294:	f9b1 4000 	ldrsh.w	r4, [r1]
90018298:	888a      	ldrh	r2, [r1, #4]
9001829a:	f9b0 3000 	ldrsh.w	r3, [r0]
9001829e:	4422      	add	r2, r4
900182a0:	b212      	sxth	r2, r2
900182a2:	4293      	cmp	r3, r2
900182a4:	da15      	bge.n	900182d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900182a6:	8882      	ldrh	r2, [r0, #4]
900182a8:	4413      	add	r3, r2
900182aa:	b21b      	sxth	r3, r3
900182ac:	429c      	cmp	r4, r3
900182ae:	da10      	bge.n	900182d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900182b0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900182b4:	88c9      	ldrh	r1, [r1, #6]
900182b6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900182ba:	4419      	add	r1, r3
900182bc:	b209      	sxth	r1, r1
900182be:	428a      	cmp	r2, r1
900182c0:	da07      	bge.n	900182d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900182c2:	88c0      	ldrh	r0, [r0, #6]
900182c4:	4410      	add	r0, r2
900182c6:	b200      	sxth	r0, r0
900182c8:	4283      	cmp	r3, r0
900182ca:	bfac      	ite	ge
900182cc:	2000      	movge	r0, #0
900182ce:	2001      	movlt	r0, #1
900182d0:	bd10      	pop	{r4, pc}
900182d2:	2000      	movs	r0, #0
900182d4:	e7fc      	b.n	900182d0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

900182d6 <_ZN8touchgfx4Rect10restrictToEss>:
900182d6:	f9b0 3000 	ldrsh.w	r3, [r0]
900182da:	2b00      	cmp	r3, #0
900182dc:	b510      	push	{r4, lr}
900182de:	da04      	bge.n	900182ea <_ZN8touchgfx4Rect10restrictToEss+0x14>
900182e0:	8884      	ldrh	r4, [r0, #4]
900182e2:	4423      	add	r3, r4
900182e4:	8083      	strh	r3, [r0, #4]
900182e6:	2300      	movs	r3, #0
900182e8:	8003      	strh	r3, [r0, #0]
900182ea:	f9b0 4000 	ldrsh.w	r4, [r0]
900182ee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900182f2:	1b09      	subs	r1, r1, r4
900182f4:	428b      	cmp	r3, r1
900182f6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900182fa:	bfc8      	it	gt
900182fc:	8081      	strhgt	r1, [r0, #4]
900182fe:	2b00      	cmp	r3, #0
90018300:	da04      	bge.n	9001830c <_ZN8touchgfx4Rect10restrictToEss+0x36>
90018302:	88c1      	ldrh	r1, [r0, #6]
90018304:	440b      	add	r3, r1
90018306:	80c3      	strh	r3, [r0, #6]
90018308:	2300      	movs	r3, #0
9001830a:	8043      	strh	r3, [r0, #2]
9001830c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90018310:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90018314:	1a52      	subs	r2, r2, r1
90018316:	4293      	cmp	r3, r2
90018318:	bfc8      	it	gt
9001831a:	80c2      	strhgt	r2, [r0, #6]
9001831c:	bd10      	pop	{r4, pc}
	...

90018320 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90018320:	4b10      	ldr	r3, [pc, #64]	@ (90018364 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90018322:	b510      	push	{r4, lr}
90018324:	460c      	mov	r4, r1
90018326:	f9b3 2000 	ldrsh.w	r2, [r3]
9001832a:	4b0f      	ldr	r3, [pc, #60]	@ (90018368 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
9001832c:	4620      	mov	r0, r4
9001832e:	f9b3 1000 	ldrsh.w	r1, [r3]
90018332:	f7ff ffd0 	bl	900182d6 <_ZN8touchgfx4Rect10restrictToEss>
90018336:	4b0d      	ldr	r3, [pc, #52]	@ (9001836c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90018338:	6818      	ldr	r0, [r3, #0]
9001833a:	b190      	cbz	r0, 90018362 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
9001833c:	6803      	ldr	r3, [r0, #0]
9001833e:	4621      	mov	r1, r4
90018340:	689b      	ldr	r3, [r3, #8]
90018342:	4798      	blx	r3
90018344:	4b0a      	ldr	r3, [pc, #40]	@ (90018370 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90018346:	6818      	ldr	r0, [r3, #0]
90018348:	b118      	cbz	r0, 90018352 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001834a:	6803      	ldr	r3, [r0, #0]
9001834c:	4621      	mov	r1, r4
9001834e:	689b      	ldr	r3, [r3, #8]
90018350:	4798      	blx	r3
90018352:	4b08      	ldr	r3, [pc, #32]	@ (90018374 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90018354:	4621      	mov	r1, r4
90018356:	6818      	ldr	r0, [r3, #0]
90018358:	6803      	ldr	r3, [r0, #0]
9001835a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001835e:	69db      	ldr	r3, [r3, #28]
90018360:	4718      	bx	r3
90018362:	bd10      	pop	{r4, pc}
90018364:	24023402 	.word	0x24023402
90018368:	24023400 	.word	0x24023400
9001836c:	24023450 	.word	0x24023450
90018370:	2402344c 	.word	0x2402344c
90018374:	2402340c 	.word	0x2402340c

90018378 <_ZNK8touchgfx4Rect8includesERKS0_>:
90018378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001837a:	4606      	mov	r6, r0
9001837c:	4608      	mov	r0, r1
9001837e:	460f      	mov	r7, r1
90018380:	f7f9 ff6f 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90018384:	b9e8      	cbnz	r0, 900183c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90018386:	f9b7 5000 	ldrsh.w	r5, [r7]
9001838a:	f9b6 4000 	ldrsh.w	r4, [r6]
9001838e:	42a5      	cmp	r5, r4
90018390:	db17      	blt.n	900183c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90018392:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90018396:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
9001839a:	429a      	cmp	r2, r3
9001839c:	db11      	blt.n	900183c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001839e:	88b9      	ldrh	r1, [r7, #4]
900183a0:	440d      	add	r5, r1
900183a2:	88b1      	ldrh	r1, [r6, #4]
900183a4:	440c      	add	r4, r1
900183a6:	b22d      	sxth	r5, r5
900183a8:	b224      	sxth	r4, r4
900183aa:	42a5      	cmp	r5, r4
900183ac:	dc09      	bgt.n	900183c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900183ae:	88f8      	ldrh	r0, [r7, #6]
900183b0:	4410      	add	r0, r2
900183b2:	88f2      	ldrh	r2, [r6, #6]
900183b4:	4413      	add	r3, r2
900183b6:	b200      	sxth	r0, r0
900183b8:	b21b      	sxth	r3, r3
900183ba:	4298      	cmp	r0, r3
900183bc:	bfcc      	ite	gt
900183be:	2000      	movgt	r0, #0
900183c0:	2001      	movle	r0, #1
900183c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900183c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900183c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900183c6:	4604      	mov	r4, r0
900183c8:	4608      	mov	r0, r1
900183ca:	460d      	mov	r5, r1
900183cc:	f7f9 ff49 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900183d0:	b978      	cbnz	r0, 900183f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900183d2:	4620      	mov	r0, r4
900183d4:	f7f9 ff45 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900183d8:	f9b5 6000 	ldrsh.w	r6, [r5]
900183dc:	b150      	cbz	r0, 900183f4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
900183de:	8026      	strh	r6, [r4, #0]
900183e0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900183e4:	8063      	strh	r3, [r4, #2]
900183e6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900183ea:	80a3      	strh	r3, [r4, #4]
900183ec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900183f0:	80e3      	strh	r3, [r4, #6]
900183f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900183f4:	f9b4 1000 	ldrsh.w	r1, [r4]
900183f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900183fc:	42b1      	cmp	r1, r6
900183fe:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90018402:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90018406:	460f      	mov	r7, r1
90018408:	88ed      	ldrh	r5, [r5, #6]
9001840a:	bfa8      	it	ge
9001840c:	4637      	movge	r7, r6
9001840e:	4293      	cmp	r3, r2
90018410:	4618      	mov	r0, r3
90018412:	4466      	add	r6, ip
90018414:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90018418:	bfa8      	it	ge
9001841a:	4610      	movge	r0, r2
9001841c:	442a      	add	r2, r5
9001841e:	88e5      	ldrh	r5, [r4, #6]
90018420:	4461      	add	r1, ip
90018422:	b236      	sxth	r6, r6
90018424:	8027      	strh	r7, [r4, #0]
90018426:	442b      	add	r3, r5
90018428:	b209      	sxth	r1, r1
9001842a:	b212      	sxth	r2, r2
9001842c:	8060      	strh	r0, [r4, #2]
9001842e:	b21b      	sxth	r3, r3
90018430:	428e      	cmp	r6, r1
90018432:	bfac      	ite	ge
90018434:	ebc7 0106 	rsbge	r1, r7, r6
90018438:	ebc7 0101 	rsblt	r1, r7, r1
9001843c:	429a      	cmp	r2, r3
9001843e:	bfac      	ite	ge
90018440:	ebc0 0202 	rsbge	r2, r0, r2
90018444:	ebc0 0203 	rsblt	r2, r0, r3
90018448:	80a1      	strh	r1, [r4, #4]
9001844a:	80e2      	strh	r2, [r4, #6]
9001844c:	e7d1      	b.n	900183f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90018450 <_ZN8touchgfx11Application11getInstanceEv>:
90018450:	4b01      	ldr	r3, [pc, #4]	@ (90018458 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90018452:	6818      	ldr	r0, [r3, #0]
90018454:	4770      	bx	lr
90018456:	bf00      	nop
90018458:	24023460 	.word	0x24023460

9001845c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
9001845c:	2300      	movs	r3, #0
9001845e:	b510      	push	{r4, lr}
90018460:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90018464:	4604      	mov	r4, r0
90018466:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
9001846a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001846e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90018472:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
90018476:	429a      	cmp	r2, r3
90018478:	d90e      	bls.n	90018498 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001847a:	18e2      	adds	r2, r4, r3
9001847c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
90018480:	b122      	cbz	r2, 9001848c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90018482:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90018486:	6803      	ldr	r3, [r0, #0]
90018488:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001848a:	4798      	blx	r3
9001848c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90018490:	3301      	adds	r3, #1
90018492:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90018496:	e7ea      	b.n	9001846e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90018498:	bd10      	pop	{r4, pc}

9001849a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
9001849a:	2300      	movs	r3, #0
9001849c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
900184a0:	30a4      	adds	r0, #164	@ 0xa4
900184a2:	f820 3c24 	strh.w	r3, [r0, #-36]
900184a6:	f802 3b01 	strb.w	r3, [r2], #1
900184aa:	4282      	cmp	r2, r0
900184ac:	d1fb      	bne.n	900184a6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
900184ae:	4770      	bx	lr

900184b0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900184b0:	b570      	push	{r4, r5, r6, lr}
900184b2:	4c0b      	ldr	r4, [pc, #44]	@ (900184e0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
900184b4:	4605      	mov	r5, r0
900184b6:	460e      	mov	r6, r1
900184b8:	6820      	ldr	r0, [r4, #0]
900184ba:	b110      	cbz	r0, 900184c2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
900184bc:	6803      	ldr	r3, [r0, #0]
900184be:	695b      	ldr	r3, [r3, #20]
900184c0:	4798      	blx	r3
900184c2:	1d28      	adds	r0, r5, #4
900184c4:	f7ff ffe9 	bl	9001849a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900184c8:	6026      	str	r6, [r4, #0]
900184ca:	6833      	ldr	r3, [r6, #0]
900184cc:	4630      	mov	r0, r6
900184ce:	68db      	ldr	r3, [r3, #12]
900184d0:	4798      	blx	r3
900184d2:	682b      	ldr	r3, [r5, #0]
900184d4:	4628      	mov	r0, r5
900184d6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900184d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900184dc:	4718      	bx	r3
900184de:	bf00      	nop
900184e0:	24023450 	.word	0x24023450

900184e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
900184e4:	2300      	movs	r3, #0
900184e6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
900184ea:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
900184ee:	461a      	mov	r2, r3
900184f0:	b5f0      	push	{r4, r5, r6, r7, lr}
900184f2:	461c      	mov	r4, r3
900184f4:	461d      	mov	r5, r3
900184f6:	459c      	cmp	ip, r3
900184f8:	dd1a      	ble.n	90018530 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900184fa:	18c6      	adds	r6, r0, r3
900184fc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90018500:	b16e      	cbz	r6, 9001851e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90018502:	429a      	cmp	r2, r3
90018504:	d008      	beq.n	90018518 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90018506:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001850a:	fa1f fe82 	uxth.w	lr, r2
9001850e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90018512:	1887      	adds	r7, r0, r2
90018514:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90018518:	3201      	adds	r2, #1
9001851a:	3301      	adds	r3, #1
9001851c:	e7eb      	b.n	900184f6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001851e:	4299      	cmp	r1, r3
90018520:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90018524:	bfa8      	it	ge
90018526:	3501      	addge	r5, #1
90018528:	429e      	cmp	r6, r3
9001852a:	bfc8      	it	gt
9001852c:	3401      	addgt	r4, #1
9001852e:	e7f4      	b.n	9001851a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90018530:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90018534:	1b49      	subs	r1, r1, r5
90018536:	1b1b      	subs	r3, r3, r4
90018538:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
9001853c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90018540:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90018544:	4293      	cmp	r3, r2
90018546:	dd03      	ble.n	90018550 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90018548:	3b01      	subs	r3, #1
9001854a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
9001854e:	e7f7      	b.n	90018540 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90018550:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90018554 <_ZN8touchgfx11Application15handleTickEventEv>:
90018554:	b570      	push	{r4, r5, r6, lr}
90018556:	4d16      	ldr	r5, [pc, #88]	@ (900185b0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90018558:	4604      	mov	r4, r0
9001855a:	6828      	ldr	r0, [r5, #0]
9001855c:	b140      	cbz	r0, 90018570 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001855e:	7a03      	ldrb	r3, [r0, #8]
90018560:	b933      	cbnz	r3, 90018570 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90018562:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90018566:	6803      	ldr	r3, [r0, #0]
90018568:	689b      	ldr	r3, [r3, #8]
9001856a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001856e:	4718      	bx	r3
90018570:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
90018574:	4e0f      	ldr	r6, [pc, #60]	@ (900185b4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90018576:	b973      	cbnz	r3, 90018596 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018578:	b168      	cbz	r0, 90018596 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001857a:	7a03      	ldrb	r3, [r0, #8]
9001857c:	b15b      	cbz	r3, 90018596 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001857e:	6830      	ldr	r0, [r6, #0]
90018580:	b110      	cbz	r0, 90018588 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90018582:	6803      	ldr	r3, [r0, #0]
90018584:	691b      	ldr	r3, [r3, #16]
90018586:	4798      	blx	r3
90018588:	6828      	ldr	r0, [r5, #0]
9001858a:	6803      	ldr	r3, [r0, #0]
9001858c:	68db      	ldr	r3, [r3, #12]
9001858e:	4798      	blx	r3
90018590:	2301      	movs	r3, #1
90018592:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90018596:	3404      	adds	r4, #4
90018598:	4620      	mov	r0, r4
9001859a:	f7ff ff5f 	bl	9001845c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001859e:	4620      	mov	r0, r4
900185a0:	f7ff ffa0 	bl	900184e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
900185a4:	6830      	ldr	r0, [r6, #0]
900185a6:	b110      	cbz	r0, 900185ae <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
900185a8:	6803      	ldr	r3, [r0, #0]
900185aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900185ac:	e7dd      	b.n	9001856a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
900185ae:	bd70      	pop	{r4, r5, r6, pc}
900185b0:	24023454 	.word	0x24023454
900185b4:	24023450 	.word	0x24023450

900185b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
900185b8:	4603      	mov	r3, r0
900185ba:	f100 0140 	add.w	r1, r0, #64	@ 0x40
900185be:	2200      	movs	r2, #0
900185c0:	801a      	strh	r2, [r3, #0]
900185c2:	3308      	adds	r3, #8
900185c4:	f823 2c06 	strh.w	r2, [r3, #-6]
900185c8:	f823 2c04 	strh.w	r2, [r3, #-4]
900185cc:	f823 2c02 	strh.w	r2, [r3, #-2]
900185d0:	428b      	cmp	r3, r1
900185d2:	d1f5      	bne.n	900185c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
900185d4:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
900185d8:	4770      	bx	lr
	...

900185dc <_ZN8touchgfx11ApplicationC1Ev>:
900185dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900185de:	4b1d      	ldr	r3, [pc, #116]	@ (90018654 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900185e0:	4606      	mov	r6, r0
900185e2:	4604      	mov	r4, r0
900185e4:	2500      	movs	r5, #0
900185e6:	f846 3b04 	str.w	r3, [r6], #4
900185ea:	22a8      	movs	r2, #168	@ 0xa8
900185ec:	2100      	movs	r1, #0
900185ee:	4630      	mov	r0, r6
900185f0:	f012 fbb0 	bl	9002ad54 <memset>
900185f4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900185f8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900185fc:	4f16      	ldr	r7, [pc, #88]	@ (90018658 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900185fe:	f7ff ffdb 	bl	900185b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018602:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90018606:	f7ff ffd7 	bl	900185b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001860a:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
9001860e:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
90018612:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
90018616:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
9001861a:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
9001861e:	490f      	ldr	r1, [pc, #60]	@ (9001865c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90018620:	480f      	ldr	r0, [pc, #60]	@ (90018660 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90018622:	f010 fe83 	bl	9002932c <CRC_Lock>
90018626:	4b0f      	ldr	r3, [pc, #60]	@ (90018664 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90018628:	b158      	cbz	r0, 90018642 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001862a:	801d      	strh	r5, [r3, #0]
9001862c:	2300      	movs	r3, #0
9001862e:	4a0e      	ldr	r2, [pc, #56]	@ (90018668 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90018630:	4630      	mov	r0, r6
90018632:	6013      	str	r3, [r2, #0]
90018634:	4a0d      	ldr	r2, [pc, #52]	@ (9001866c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90018636:	603b      	str	r3, [r7, #0]
90018638:	6013      	str	r3, [r2, #0]
9001863a:	f7ff ff2e 	bl	9001849a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001863e:	4620      	mov	r0, r4
90018640:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018642:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90018646:	2002      	movs	r0, #2
90018648:	801a      	strh	r2, [r3, #0]
9001864a:	6038      	str	r0, [r7, #0]
9001864c:	f001 fe08 	bl	9001a260 <_ZN8touchgfx6Screen4drawEv>
90018650:	e7ec      	b.n	9001862c <_ZN8touchgfx11ApplicationC1Ev+0x50>
90018652:	bf00      	nop
90018654:	9002e740 	.word	0x9002e740
90018658:	24023450 	.word	0x24023450
9001865c:	b5e8b5cd 	.word	0xb5e8b5cd
90018660:	f407a5c2 	.word	0xf407a5c2
90018664:	24000088 	.word	0x24000088
90018668:	24023460 	.word	0x24023460
9001866c:	24023454 	.word	0x24023454

90018670 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90018670:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90018674:	3b01      	subs	r3, #1
90018676:	b29b      	uxth	r3, r3
90018678:	428b      	cmp	r3, r1
9001867a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001867e:	b510      	push	{r4, lr}
90018680:	d908      	bls.n	90018694 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90018682:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90018686:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001868a:	681a      	ldr	r2, [r3, #0]
9001868c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90018690:	685a      	ldr	r2, [r3, #4]
90018692:	6062      	str	r2, [r4, #4]
90018694:	bd10      	pop	{r4, pc}
	...

90018698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90018698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001869c:	b08f      	sub	sp, #60	@ 0x3c
9001869e:	4b8f      	ldr	r3, [pc, #572]	@ (900188dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
900186a0:	4683      	mov	fp, r0
900186a2:	ac0a      	add	r4, sp, #40	@ 0x28
900186a4:	e884 0006 	stmia.w	r4, {r1, r2}
900186a8:	f9b3 2000 	ldrsh.w	r2, [r3]
900186ac:	4620      	mov	r0, r4
900186ae:	4b8c      	ldr	r3, [pc, #560]	@ (900188e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
900186b0:	f9b3 1000 	ldrsh.w	r1, [r3]
900186b4:	f7ff fe0f 	bl	900182d6 <_ZN8touchgfx4Rect10restrictToEss>
900186b8:	4620      	mov	r0, r4
900186ba:	f7f9 fdd2 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900186be:	2800      	cmp	r0, #0
900186c0:	d16a      	bne.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900186c2:	9403      	str	r4, [sp, #12]
900186c4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
900186c8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900186cc:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
900186d0:	9301      	str	r3, [sp, #4]
900186d2:	35a4      	adds	r5, #164	@ 0xa4
900186d4:	b15c      	cbz	r4, 900186ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
900186d6:	4629      	mov	r1, r5
900186d8:	9803      	ldr	r0, [sp, #12]
900186da:	f7ff fe4d 	bl	90018378 <_ZNK8touchgfx4Rect8includesERKS0_>
900186de:	3c01      	subs	r4, #1
900186e0:	b118      	cbz	r0, 900186ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
900186e2:	b2a1      	uxth	r1, r4
900186e4:	9801      	ldr	r0, [sp, #4]
900186e6:	f7ff ffc3 	bl	90018670 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900186ea:	3d08      	subs	r5, #8
900186ec:	e7f2      	b.n	900186d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900186ee:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900186f2:	f10a 33ff 	add.w	r3, sl, #4294967295	@ 0xffffffff
900186f6:	f8cd a010 	str.w	sl, [sp, #16]
900186fa:	9302      	str	r3, [sp, #8]
900186fc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90018700:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90018704:	9306      	str	r3, [sp, #24]
90018706:	445c      	add	r4, fp
90018708:	2500      	movs	r5, #0
9001870a:	4626      	mov	r6, r4
9001870c:	f8cd a014 	str.w	sl, [sp, #20]
90018710:	462f      	mov	r7, r5
90018712:	9b05      	ldr	r3, [sp, #20]
90018714:	2b00      	cmp	r3, #0
90018716:	d073      	beq.n	90018800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90018718:	9903      	ldr	r1, [sp, #12]
9001871a:	4630      	mov	r0, r6
9001871c:	f7ff fdb9 	bl	90018292 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018720:	b350      	cbz	r0, 90018778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90018722:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90018726:	f9b6 c000 	ldrsh.w	ip, [r6]
9001872a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
9001872e:	45e6      	cmp	lr, ip
90018730:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90018734:	db33      	blt.n	9001879e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90018736:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
9001873a:	88b3      	ldrh	r3, [r6, #4]
9001873c:	4472      	add	r2, lr
9001873e:	4463      	add	r3, ip
90018740:	b212      	sxth	r2, r2
90018742:	b21b      	sxth	r3, r3
90018744:	429a      	cmp	r2, r3
90018746:	dc2a      	bgt.n	9001879e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90018748:	fa1f f289 	uxth.w	r2, r9
9001874c:	88f3      	ldrh	r3, [r6, #6]
9001874e:	45c8      	cmp	r8, r9
90018750:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90018754:	4413      	add	r3, r2
90018756:	fa1f fc88 	uxth.w	ip, r8
9001875a:	b29b      	uxth	r3, r3
9001875c:	fa0f fe83 	sxth.w	lr, r3
90018760:	db0f      	blt.n	90018782 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90018762:	eba3 030c 	sub.w	r3, r3, ip
90018766:	1ac9      	subs	r1, r1, r3
90018768:	b209      	sxth	r1, r1
9001876a:	2900      	cmp	r1, #0
9001876c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90018770:	dd12      	ble.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90018772:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90018776:	4605      	mov	r5, r0
90018778:	9b05      	ldr	r3, [sp, #20]
9001877a:	3e08      	subs	r6, #8
9001877c:	3b01      	subs	r3, #1
9001877e:	9305      	str	r3, [sp, #20]
90018780:	e7c7      	b.n	90018712 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90018782:	4461      	add	r1, ip
90018784:	b209      	sxth	r1, r1
90018786:	4571      	cmp	r1, lr
90018788:	dc38      	bgt.n	900187fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001878a:	eba2 020c 	sub.w	r2, r2, ip
9001878e:	b212      	sxth	r2, r2
90018790:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90018794:	2a00      	cmp	r2, #0
90018796:	dcee      	bgt.n	90018776 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90018798:	b00f      	add	sp, #60	@ 0x3c
9001879a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001879e:	45c8      	cmp	r8, r9
900187a0:	db2c      	blt.n	900187fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900187a2:	88f3      	ldrh	r3, [r6, #6]
900187a4:	4499      	add	r9, r3
900187a6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
900187aa:	4498      	add	r8, r3
900187ac:	fa0f f989 	sxth.w	r9, r9
900187b0:	fa0f f888 	sxth.w	r8, r8
900187b4:	45c1      	cmp	r9, r8
900187b6:	db21      	blt.n	900187fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900187b8:	fa1f f28c 	uxth.w	r2, ip
900187bc:	88b3      	ldrh	r3, [r6, #4]
900187be:	45e6      	cmp	lr, ip
900187c0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900187c4:	4413      	add	r3, r2
900187c6:	fa1f f88e 	uxth.w	r8, lr
900187ca:	b29b      	uxth	r3, r3
900187cc:	fa0f f983 	sxth.w	r9, r3
900187d0:	db0a      	blt.n	900187e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
900187d2:	eba3 0308 	sub.w	r3, r3, r8
900187d6:	1ac9      	subs	r1, r1, r3
900187d8:	b209      	sxth	r1, r1
900187da:	2900      	cmp	r1, #0
900187dc:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
900187e0:	ddda      	ble.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900187e2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900187e6:	e7c6      	b.n	90018776 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900187e8:	4441      	add	r1, r8
900187ea:	b209      	sxth	r1, r1
900187ec:	4549      	cmp	r1, r9
900187ee:	dc05      	bgt.n	900187fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900187f0:	eba2 0208 	sub.w	r2, r2, r8
900187f4:	b212      	sxth	r2, r2
900187f6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900187fa:	e7cb      	b.n	90018794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900187fc:	4607      	mov	r7, r0
900187fe:	e7bb      	b.n	90018778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90018800:	2d00      	cmp	r5, #0
90018802:	d181      	bne.n	90018708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90018804:	2f00      	cmp	r7, #0
90018806:	f000 81dd 	beq.w	90018bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001880a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
9001880e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90018812:	b2b3      	uxth	r3, r6
90018814:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90018818:	9305      	str	r3, [sp, #20]
9001881a:	9a05      	ldr	r2, [sp, #20]
9001881c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90018820:	4413      	add	r3, r2
90018822:	b2ba      	uxth	r2, r7
90018824:	4492      	add	sl, r2
90018826:	b29b      	uxth	r3, r3
90018828:	fa1f fa8a 	uxth.w	sl, sl
9001882c:	fa0f f883 	sxth.w	r8, r3
90018830:	fa0f f98a 	sxth.w	r9, sl
90018834:	e9cd 2307 	strd	r2, r3, [sp, #28]
90018838:	9b04      	ldr	r3, [sp, #16]
9001883a:	2b00      	cmp	r3, #0
9001883c:	d052      	beq.n	900188e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
9001883e:	9903      	ldr	r1, [sp, #12]
90018840:	4620      	mov	r0, r4
90018842:	f7ff fd26 	bl	90018292 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018846:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
9001884a:	b1c0      	cbz	r0, 9001887e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001884c:	f9b4 e000 	ldrsh.w	lr, [r4]
90018850:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90018854:	4576      	cmp	r6, lr
90018856:	dc22      	bgt.n	9001889e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90018858:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001885c:	44f4      	add	ip, lr
9001885e:	fa0f fc8c 	sxth.w	ip, ip
90018862:	45e0      	cmp	r8, ip
90018864:	db1b      	blt.n	9001889e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90018866:	428f      	cmp	r7, r1
90018868:	fa1f fc81 	uxth.w	ip, r1
9001886c:	88e1      	ldrh	r1, [r4, #6]
9001886e:	dc0d      	bgt.n	9001888c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018870:	ebaa 0c0c 	sub.w	ip, sl, ip
90018874:	f8a4 9002 	strh.w	r9, [r4, #2]
90018878:	eba1 010c 	sub.w	r1, r1, ip
9001887c:	80e1      	strh	r1, [r4, #6]
9001887e:	4628      	mov	r0, r5
90018880:	9904      	ldr	r1, [sp, #16]
90018882:	3c08      	subs	r4, #8
90018884:	4605      	mov	r5, r0
90018886:	3901      	subs	r1, #1
90018888:	9104      	str	r1, [sp, #16]
9001888a:	e7d3      	b.n	90018834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
9001888c:	4461      	add	r1, ip
9001888e:	b209      	sxth	r1, r1
90018890:	4549      	cmp	r1, r9
90018892:	dcf5      	bgt.n	90018880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018894:	eba2 0c0c 	sub.w	ip, r2, ip
90018898:	f8a4 c006 	strh.w	ip, [r4, #6]
9001889c:	e7ef      	b.n	9001887e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001889e:	428f      	cmp	r7, r1
900188a0:	dcee      	bgt.n	90018880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900188a2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
900188a6:	4461      	add	r1, ip
900188a8:	b209      	sxth	r1, r1
900188aa:	4589      	cmp	r9, r1
900188ac:	dbe8      	blt.n	90018880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900188ae:	4576      	cmp	r6, lr
900188b0:	fa1f fc8e 	uxth.w	ip, lr
900188b4:	88a1      	ldrh	r1, [r4, #4]
900188b6:	dc07      	bgt.n	900188c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
900188b8:	eba3 0c0c 	sub.w	ip, r3, ip
900188bc:	f8a4 8000 	strh.w	r8, [r4]
900188c0:	eba1 010c 	sub.w	r1, r1, ip
900188c4:	80a1      	strh	r1, [r4, #4]
900188c6:	e7da      	b.n	9001887e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900188c8:	4461      	add	r1, ip
900188ca:	b209      	sxth	r1, r1
900188cc:	4588      	cmp	r8, r1
900188ce:	dbd7      	blt.n	90018880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900188d0:	9905      	ldr	r1, [sp, #20]
900188d2:	eba1 0c0c 	sub.w	ip, r1, ip
900188d6:	f8a4 c004 	strh.w	ip, [r4, #4]
900188da:	e7d0      	b.n	9001887e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900188dc:	24023402 	.word	0x24023402
900188e0:	24023400 	.word	0x24023400
900188e4:	2d00      	cmp	r5, #0
900188e6:	f000 816d 	beq.w	90018bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900188ea:	9b06      	ldr	r3, [sp, #24]
900188ec:	445b      	add	r3, fp
900188ee:	461c      	mov	r4, r3
900188f0:	9b02      	ldr	r3, [sp, #8]
900188f2:	3301      	adds	r3, #1
900188f4:	f000 8166 	beq.w	90018bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900188f8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900188fc:	9803      	ldr	r0, [sp, #12]
900188fe:	4629      	mov	r1, r5
90018900:	f7ff fd3a 	bl	90018378 <_ZNK8touchgfx4Rect8includesERKS0_>
90018904:	b120      	cbz	r0, 90018910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
90018906:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001890a:	9801      	ldr	r0, [sp, #4]
9001890c:	f7ff feb0 	bl	90018670 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018910:	9903      	ldr	r1, [sp, #12]
90018912:	4628      	mov	r0, r5
90018914:	f7ff fcbd 	bl	90018292 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018918:	2800      	cmp	r0, #0
9001891a:	f000 809c 	beq.w	90018a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001891e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90018922:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90018926:	fa1f f189 	uxth.w	r1, r9
9001892a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
9001892e:	9309      	str	r3, [sp, #36]	@ 0x24
90018930:	eb01 0c03 	add.w	ip, r1, r3
90018934:	b283      	uxth	r3, r0
90018936:	4548      	cmp	r0, r9
90018938:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
9001893c:	fa1f fa8c 	uxth.w	sl, ip
90018940:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90018944:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90018948:	eb03 050c 	add.w	r5, r3, ip
9001894c:	b2ad      	uxth	r5, r5
9001894e:	9505      	str	r5, [sp, #20]
90018950:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90018954:	9504      	str	r5, [sp, #16]
90018956:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
9001895a:	f340 8099 	ble.w	90018a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
9001895e:	1a5b      	subs	r3, r3, r1
90018960:	4596      	cmp	lr, r2
90018962:	fa0f f08a 	sxth.w	r0, sl
90018966:	b29b      	uxth	r3, r3
90018968:	b21e      	sxth	r6, r3
9001896a:	dd2e      	ble.n	900189ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
9001896c:	9f02      	ldr	r7, [sp, #8]
9001896e:	fa1f fe8e 	uxth.w	lr, lr
90018972:	b292      	uxth	r2, r2
90018974:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90018978:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
9001897c:	9f04      	ldr	r7, [sp, #16]
9001897e:	ebae 0102 	sub.w	r1, lr, r2
90018982:	44a6      	add	lr, r4
90018984:	1a3f      	subs	r7, r7, r0
90018986:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
9001898a:	b289      	uxth	r1, r1
9001898c:	4402      	add	r2, r0
9001898e:	fa0f fe8e 	sxth.w	lr, lr
90018992:	b20d      	sxth	r5, r1
90018994:	b212      	sxth	r2, r2
90018996:	436f      	muls	r7, r5
90018998:	ebae 0202 	sub.w	r2, lr, r2
9001899c:	4372      	muls	r2, r6
9001899e:	4297      	cmp	r7, r2
900189a0:	db09      	blt.n	900189b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
900189a2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
900189a6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
900189aa:	449c      	add	ip, r3
900189ac:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900189b0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900189b4:	e686      	b.n	900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900189b6:	4421      	add	r1, r4
900189b8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
900189bc:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
900189c0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900189c4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900189c8:	e67c      	b.n	900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900189ca:	9f04      	ldr	r7, [sp, #16]
900189cc:	42b8      	cmp	r0, r7
900189ce:	da27      	bge.n	90018a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
900189d0:	9902      	ldr	r1, [sp, #8]
900189d2:	1a3f      	subs	r7, r7, r0
900189d4:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
900189d8:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900189dc:	eb05 010e 	add.w	r1, r5, lr
900189e0:	fa1f f881 	uxth.w	r8, r1
900189e4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
900189e8:	4411      	add	r1, r2
900189ea:	fa0f f988 	sxth.w	r9, r8
900189ee:	eba2 020e 	sub.w	r2, r2, lr
900189f2:	eba1 0108 	sub.w	r1, r1, r8
900189f6:	4372      	muls	r2, r6
900189f8:	b289      	uxth	r1, r1
900189fa:	fa0f f881 	sxth.w	r8, r1
900189fe:	fb08 f707 	mul.w	r7, r8, r7
90018a02:	42ba      	cmp	r2, r7
90018a04:	dc06      	bgt.n	90018a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90018a06:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
90018a0a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90018a0e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90018a12:	e7ca      	b.n	900189aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90018a14:	4429      	add	r1, r5
90018a16:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
90018a1a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90018a1e:	e651      	b.n	900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018a20:	9805      	ldr	r0, [sp, #20]
90018a22:	2d06      	cmp	r5, #6
90018a24:	ebaa 0000 	sub.w	r0, sl, r0
90018a28:	b280      	uxth	r0, r0
90018a2a:	fa0f fe80 	sxth.w	lr, r0
90018a2e:	d817      	bhi.n	90018a60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90018a30:	9b04      	ldr	r3, [sp, #16]
90018a32:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90018a36:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90018a3a:	1c6b      	adds	r3, r5, #1
90018a3c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90018a40:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90018a44:	9b01      	ldr	r3, [sp, #4]
90018a46:	9801      	ldr	r0, [sp, #4]
90018a48:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018a4c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90018a50:	805a      	strh	r2, [r3, #2]
90018a52:	809e      	strh	r6, [r3, #4]
90018a54:	80d9      	strh	r1, [r3, #6]
90018a56:	9b02      	ldr	r3, [sp, #8]
90018a58:	3c08      	subs	r4, #8
90018a5a:	3b01      	subs	r3, #1
90018a5c:	9302      	str	r3, [sp, #8]
90018a5e:	e747      	b.n	900188f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90018a60:	9a02      	ldr	r2, [sp, #8]
90018a62:	45b6      	cmp	lr, r6
90018a64:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90018a68:	db0d      	blt.n	90018a86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90018a6a:	449c      	add	ip, r3
90018a6c:	445a      	add	r2, fp
90018a6e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90018a72:	fa1f fc8c 	uxth.w	ip, ip
90018a76:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
90018a7a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90018a7e:	448c      	add	ip, r1
90018a80:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90018a84:	e61e      	b.n	900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018a86:	445a      	add	r2, fp
90018a88:	4484      	add	ip, r0
90018a8a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
90018a8e:	e78f      	b.n	900189b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018a90:	fa1f f18e 	uxth.w	r1, lr
90018a94:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90018a98:	b293      	uxth	r3, r2
90018a9a:	4596      	cmp	lr, r2
90018a9c:	eb01 0806 	add.w	r8, r1, r6
90018aa0:	9306      	str	r3, [sp, #24]
90018aa2:	fa1f f888 	uxth.w	r8, r8
90018aa6:	9f06      	ldr	r7, [sp, #24]
90018aa8:	fa0f f388 	sxth.w	r3, r8
90018aac:	9307      	str	r3, [sp, #28]
90018aae:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90018ab2:	443b      	add	r3, r7
90018ab4:	b29b      	uxth	r3, r3
90018ab6:	9308      	str	r3, [sp, #32]
90018ab8:	da24      	bge.n	90018b04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90018aba:	9905      	ldr	r1, [sp, #20]
90018abc:	eba3 0308 	sub.w	r3, r3, r8
90018ac0:	eba2 020e 	sub.w	r2, r2, lr
90018ac4:	eba9 0000 	sub.w	r0, r9, r0
90018ac8:	ebaa 0401 	sub.w	r4, sl, r1
90018acc:	b29b      	uxth	r3, r3
90018ace:	b2a4      	uxth	r4, r4
90018ad0:	b219      	sxth	r1, r3
90018ad2:	b225      	sxth	r5, r4
90018ad4:	4348      	muls	r0, r1
90018ad6:	436a      	muls	r2, r5
90018ad8:	4282      	cmp	r2, r0
90018ada:	9a02      	ldr	r2, [sp, #8]
90018adc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90018ae0:	445a      	add	r2, fp
90018ae2:	dc06      	bgt.n	90018af2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90018ae4:	9b07      	ldr	r3, [sp, #28]
90018ae6:	44a4      	add	ip, r4
90018ae8:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90018aec:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90018af0:	e75e      	b.n	900189b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018af2:	9904      	ldr	r1, [sp, #16]
90018af4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90018af8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90018afc:	4433      	add	r3, r6
90018afe:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90018b02:	e5df      	b.n	900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018b04:	9f06      	ldr	r7, [sp, #24]
90018b06:	9b04      	ldr	r3, [sp, #16]
90018b08:	1bc9      	subs	r1, r1, r7
90018b0a:	fa0f f78a 	sxth.w	r7, sl
90018b0e:	b289      	uxth	r1, r1
90018b10:	429f      	cmp	r7, r3
90018b12:	fa0f fe81 	sxth.w	lr, r1
90018b16:	dd23      	ble.n	90018b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90018b18:	9a05      	ldr	r2, [sp, #20]
90018b1a:	eba9 0000 	sub.w	r0, r9, r0
90018b1e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90018b22:	ebaa 0202 	sub.w	r2, sl, r2
90018b26:	9d07      	ldr	r5, [sp, #28]
90018b28:	fb0e f000 	mul.w	r0, lr, r0
90018b2c:	b292      	uxth	r2, r2
90018b2e:	eba5 0a03 	sub.w	sl, r5, r3
90018b32:	9b02      	ldr	r3, [sp, #8]
90018b34:	b214      	sxth	r4, r2
90018b36:	00db      	lsls	r3, r3, #3
90018b38:	fb04 fa0a 	mul.w	sl, r4, sl
90018b3c:	445b      	add	r3, fp
90018b3e:	4550      	cmp	r0, sl
90018b40:	db03      	blt.n	90018b4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90018b42:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90018b46:	4494      	add	ip, r2
90018b48:	e732      	b.n	900189b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018b4a:	9a04      	ldr	r2, [sp, #16]
90018b4c:	4431      	add	r1, r6
90018b4e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90018b52:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90018b56:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90018b5a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90018b5e:	e75c      	b.n	90018a1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90018b60:	9b08      	ldr	r3, [sp, #32]
90018b62:	2d06      	cmp	r5, #6
90018b64:	eba3 0308 	sub.w	r3, r3, r8
90018b68:	b29b      	uxth	r3, r3
90018b6a:	b218      	sxth	r0, r3
90018b6c:	d813      	bhi.n	90018b96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90018b6e:	9b07      	ldr	r3, [sp, #28]
90018b70:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90018b74:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90018b78:	1c6b      	adds	r3, r5, #1
90018b7a:	9901      	ldr	r1, [sp, #4]
90018b7c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90018b80:	9b01      	ldr	r3, [sp, #4]
90018b82:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90018b86:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018b8a:	805a      	strh	r2, [r3, #2]
90018b8c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90018b8e:	f8a3 e006 	strh.w	lr, [r3, #6]
90018b92:	809a      	strh	r2, [r3, #4]
90018b94:	e75f      	b.n	90018a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90018b96:	9c02      	ldr	r4, [sp, #8]
90018b98:	4570      	cmp	r0, lr
90018b9a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90018b9e:	db0d      	blt.n	90018bbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90018ba0:	4431      	add	r1, r6
90018ba2:	9b06      	ldr	r3, [sp, #24]
90018ba4:	445c      	add	r4, fp
90018ba6:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90018baa:	b289      	uxth	r1, r1
90018bac:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90018bb0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90018bb4:	4419      	add	r1, r3
90018bb6:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90018bba:	e583      	b.n	900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018bbc:	445c      	add	r4, fp
90018bbe:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90018bc2:	e79b      	b.n	90018afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90018bc4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90018bc8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90018bcc:	1e65      	subs	r5, r4, #1
90018bce:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90018bd2:	b2ad      	uxth	r5, r5
90018bd4:	42b5      	cmp	r5, r6
90018bd6:	d044      	beq.n	90018c62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90018bd8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90018bdc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90018be0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90018be4:	4282      	cmp	r2, r0
90018be6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90018bea:	d11f      	bne.n	90018c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90018bec:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90018bf0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90018bf4:	459c      	cmp	ip, r3
90018bf6:	d119      	bne.n	90018c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90018bf8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90018bfc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90018c00:	19d8      	adds	r0, r3, r7
90018c02:	b200      	sxth	r0, r0
90018c04:	4288      	cmp	r0, r1
90018c06:	d109      	bne.n	90018c1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90018c08:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90018c0c:	4413      	add	r3, r2
90018c0e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90018c12:	4629      	mov	r1, r5
90018c14:	9801      	ldr	r0, [sp, #4]
90018c16:	f7ff fd2b 	bl	90018670 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018c1a:	e003      	b.n	90018c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018c1c:	4411      	add	r1, r2
90018c1e:	b209      	sxth	r1, r1
90018c20:	42b9      	cmp	r1, r7
90018c22:	d0f3      	beq.n	90018c0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90018c24:	3d01      	subs	r5, #1
90018c26:	3c08      	subs	r4, #8
90018c28:	b2ad      	uxth	r5, r5
90018c2a:	e7d3      	b.n	90018bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90018c2c:	42b9      	cmp	r1, r7
90018c2e:	d1f9      	bne.n	90018c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018c30:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90018c34:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90018c38:	4299      	cmp	r1, r3
90018c3a:	d1f3      	bne.n	90018c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018c3c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90018c40:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90018c44:	181f      	adds	r7, r3, r0
90018c46:	b23f      	sxth	r7, r7
90018c48:	42ba      	cmp	r2, r7
90018c4a:	d105      	bne.n	90018c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90018c4c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90018c50:	440b      	add	r3, r1
90018c52:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90018c56:	e7dc      	b.n	90018c12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90018c58:	440a      	add	r2, r1
90018c5a:	b212      	sxth	r2, r2
90018c5c:	4290      	cmp	r0, r2
90018c5e:	d1e1      	bne.n	90018c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018c60:	e7f6      	b.n	90018c50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90018c62:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90018c66:	2e07      	cmp	r6, #7
90018c68:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90018c6c:	d812      	bhi.n	90018c94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90018c6e:	1c75      	adds	r5, r6, #1
90018c70:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90018c74:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90018c78:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90018c7c:	9d01      	ldr	r5, [sp, #4]
90018c7e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90018c82:	442c      	add	r4, r5
90018c84:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90018c88:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90018c8c:	8061      	strh	r1, [r4, #2]
90018c8e:	80a2      	strh	r2, [r4, #4]
90018c90:	80e3      	strh	r3, [r4, #6]
90018c92:	e581      	b.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90018c94:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90018c98:	3e01      	subs	r6, #1
90018c9a:	445c      	add	r4, fp
90018c9c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90018ca0:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
90018ca4:	2500      	movs	r5, #0
90018ca6:	9305      	str	r3, [sp, #20]
90018ca8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90018cac:	1e72      	subs	r2, r6, #1
90018cae:	9302      	str	r3, [sp, #8]
90018cb0:	4691      	mov	r9, r2
90018cb2:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90018cb6:	9304      	str	r3, [sp, #16]
90018cb8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90018cbc:	f1b9 3fff 	cmp.w	r9, #4294967295	@ 0xffffffff
90018cc0:	6818      	ldr	r0, [r3, #0]
90018cc2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90018cc6:	9207      	str	r2, [sp, #28]
90018cc8:	bf16      	itet	ne
90018cca:	9905      	ldrne	r1, [sp, #20]
90018ccc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90018cd0:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90018cd4:	9306      	str	r3, [sp, #24]
90018cd6:	f8be 1006 	ldrh.w	r1, [lr, #6]
90018cda:	f8be 8004 	ldrh.w	r8, [lr, #4]
90018cde:	fb18 f801 	smulbb	r8, r8, r1
90018ce2:	6859      	ldr	r1, [r3, #4]
90018ce4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018ce8:	4671      	mov	r1, lr
90018cea:	a80c      	add	r0, sp, #48	@ 0x30
90018cec:	f7ff fb6a 	bl	900183c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018cf0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90018cf4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90018cf8:	f04f 0c08 	mov.w	ip, #8
90018cfc:	9b04      	ldr	r3, [sp, #16]
90018cfe:	9a02      	ldr	r2, [sp, #8]
90018d00:	fb10 f001 	smulbb	r0, r0, r1
90018d04:	fb02 8803 	mla	r8, r2, r3, r8
90018d08:	eba0 0108 	sub.w	r1, r0, r8
90018d0c:	fb90 f0fc 	sdiv	r0, r0, ip
90018d10:	4288      	cmp	r0, r1
90018d12:	dc20      	bgt.n	90018d56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90018d14:	4551      	cmp	r1, sl
90018d16:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90018d1a:	da03      	bge.n	90018d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90018d1c:	b1d9      	cbz	r1, 90018d56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90018d1e:	468a      	mov	sl, r1
90018d20:	464f      	mov	r7, r9
90018d22:	4635      	mov	r5, r6
90018d24:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
90018d28:	f119 0f02 	cmn.w	r9, #2
90018d2c:	d1c6      	bne.n	90018cbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90018d2e:	4616      	mov	r6, r2
90018d30:	3201      	adds	r2, #1
90018d32:	f1a4 0408 	sub.w	r4, r4, #8
90018d36:	d1b7      	bne.n	90018ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90018d38:	9b01      	ldr	r3, [sp, #4]
90018d3a:	b2ac      	uxth	r4, r5
90018d3c:	00ed      	lsls	r5, r5, #3
90018d3e:	1958      	adds	r0, r3, r5
90018d40:	1c7b      	adds	r3, r7, #1
90018d42:	d10b      	bne.n	90018d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90018d44:	4601      	mov	r1, r0
90018d46:	9803      	ldr	r0, [sp, #12]
90018d48:	f7ff fb3c 	bl	900183c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018d4c:	4621      	mov	r1, r4
90018d4e:	9801      	ldr	r0, [sp, #4]
90018d50:	f7ff fc8e 	bl	90018670 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018d54:	e4b6      	b.n	900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018d56:	464f      	mov	r7, r9
90018d58:	4635      	mov	r5, r6
90018d5a:	e7ed      	b.n	90018d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90018d5c:	9b01      	ldr	r3, [sp, #4]
90018d5e:	00ff      	lsls	r7, r7, #3
90018d60:	445d      	add	r5, fp
90018d62:	19d9      	adds	r1, r3, r7
90018d64:	445f      	add	r7, fp
90018d66:	f7ff fb2d 	bl	900183c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018d6a:	9b03      	ldr	r3, [sp, #12]
90018d6c:	cb03      	ldmia	r3!, {r0, r1}
90018d6e:	9b03      	ldr	r3, [sp, #12]
90018d70:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90018d74:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90018d78:	f855 0fac 	ldr.w	r0, [r5, #172]!
90018d7c:	6869      	ldr	r1, [r5, #4]
90018d7e:	c303      	stmia	r3!, {r0, r1}
90018d80:	e7e4      	b.n	90018d4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90018d82:	bf00      	nop

90018d84 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90018d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018d88:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90018d8c:	b09b      	sub	sp, #108	@ 0x6c
90018d8e:	4604      	mov	r4, r0
90018d90:	4630      	mov	r0, r6
90018d92:	f7f9 fa66 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90018d96:	4605      	mov	r5, r0
90018d98:	b948      	cbnz	r0, 90018dae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90018d9a:	6823      	ldr	r3, [r4, #0]
90018d9c:	4620      	mov	r0, r4
90018d9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018da0:	e896 0006 	ldmia.w	r6, {r1, r2}
90018da4:	4798      	blx	r3
90018da6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90018daa:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90018dae:	4bc5      	ldr	r3, [pc, #788]	@ (900190c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90018db0:	681b      	ldr	r3, [r3, #0]
90018db2:	2b00      	cmp	r3, #0
90018db4:	d03f      	beq.n	90018e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018db6:	4dc4      	ldr	r5, [pc, #784]	@ (900190c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90018db8:	4628      	mov	r0, r5
90018dba:	f7f9 fa52 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90018dbe:	4606      	mov	r6, r0
90018dc0:	2800      	cmp	r0, #0
90018dc2:	d138      	bne.n	90018e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018dc4:	4628      	mov	r0, r5
90018dc6:	f7ff f98f 	bl	900180e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018dca:	6823      	ldr	r3, [r4, #0]
90018dcc:	6829      	ldr	r1, [r5, #0]
90018dce:	4620      	mov	r0, r4
90018dd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018dd2:	686a      	ldr	r2, [r5, #4]
90018dd4:	4798      	blx	r3
90018dd6:	802e      	strh	r6, [r5, #0]
90018dd8:	806e      	strh	r6, [r5, #2]
90018dda:	80ae      	strh	r6, [r5, #4]
90018ddc:	80ee      	strh	r6, [r5, #6]
90018dde:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
90018de2:	4dba      	ldr	r5, [pc, #744]	@ (900190cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90018de4:	4640      	mov	r0, r8
90018de6:	f7ff fbe7 	bl	900185b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018dea:	882e      	ldrh	r6, [r5, #0]
90018dec:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90018df0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90018df4:	4633      	mov	r3, r6
90018df6:	42bb      	cmp	r3, r7
90018df8:	d224      	bcs.n	90018e44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018dfa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
90018dfe:	2907      	cmp	r1, #7
90018e00:	d816      	bhi.n	90018e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90018e02:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90018e06:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90018e0a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90018e0e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90018e12:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90018e16:	1c4a      	adds	r2, r1, #1
90018e18:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
90018e1c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90018e20:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90018e24:	f8a2 a002 	strh.w	sl, [r2, #2]
90018e28:	f8a2 e004 	strh.w	lr, [r2, #4]
90018e2c:	f8a2 c006 	strh.w	ip, [r2, #6]
90018e30:	3301      	adds	r3, #1
90018e32:	b29b      	uxth	r3, r3
90018e34:	e7df      	b.n	90018df6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90018e36:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90018e3a:	2b00      	cmp	r3, #0
90018e3c:	d1cf      	bne.n	90018dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90018e3e:	b01b      	add	sp, #108	@ 0x6c
90018e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018e44:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90018e48:	42b3      	cmp	r3, r6
90018e4a:	d90c      	bls.n	90018e66 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90018e4c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90018e50:	6822      	ldr	r2, [r4, #0]
90018e52:	3601      	adds	r6, #1
90018e54:	4620      	mov	r0, r4
90018e56:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90018e58:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90018e5c:	b2b6      	uxth	r6, r6
90018e5e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90018e62:	47b8      	blx	r7
90018e64:	e7ee      	b.n	90018e44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018e66:	4a9a      	ldr	r2, [pc, #616]	@ (900190d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018e68:	6813      	ldr	r3, [r2, #0]
90018e6a:	4691      	mov	r9, r2
90018e6c:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
90018e70:	2b01      	cmp	r3, #1
90018e72:	f040 80e0 	bne.w	90019036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90018e76:	8829      	ldrh	r1, [r5, #0]
90018e78:	2600      	movs	r6, #0
90018e7a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90018e7e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90018e82:	33ae      	adds	r3, #174	@ 0xae
90018e84:	428f      	cmp	r7, r1
90018e86:	f103 0308 	add.w	r3, r3, #8
90018e8a:	dd0a      	ble.n	90018ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90018e8c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90018e90:	3101      	adds	r1, #1
90018e92:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90018e96:	4402      	add	r2, r0
90018e98:	b212      	sxth	r2, r2
90018e9a:	4296      	cmp	r6, r2
90018e9c:	bfb8      	it	lt
90018e9e:	4616      	movlt	r6, r2
90018ea0:	e7f0      	b.n	90018e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90018ea2:	4b8c      	ldr	r3, [pc, #560]	@ (900190d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90018ea4:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 900190d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90018ea8:	881b      	ldrh	r3, [r3, #0]
90018eaa:	2b0f      	cmp	r3, #15
90018eac:	bf8c      	ite	hi
90018eae:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90018eb2:	f04f 0b01 	movls.w	fp, #1
90018eb6:	2300      	movs	r3, #0
90018eb8:	e9cd 3305 	strd	r3, r3, [sp, #20]
90018ebc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90018ec0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90018ec4:	4b82      	ldr	r3, [pc, #520]	@ (900190d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018ec6:	4438      	add	r0, r7
90018ec8:	b207      	sxth	r7, r0
90018eca:	6818      	ldr	r0, [r3, #0]
90018ecc:	42b7      	cmp	r7, r6
90018ece:	6803      	ldr	r3, [r0, #0]
90018ed0:	f280 8083 	bge.w	90018fda <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90018ed4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90018ed8:	4798      	blx	r3
90018eda:	eb07 030b 	add.w	r3, r7, fp
90018ede:	4298      	cmp	r0, r3
90018ee0:	da07      	bge.n	90018ef2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018ee2:	42b0      	cmp	r0, r6
90018ee4:	da05      	bge.n	90018ef2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018ee6:	4287      	cmp	r7, r0
90018ee8:	dd6c      	ble.n	90018fc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018eea:	2f00      	cmp	r7, #0
90018eec:	dd6a      	ble.n	90018fc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018eee:	4630      	mov	r0, r6
90018ef0:	e004      	b.n	90018efc <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90018ef2:	4287      	cmp	r7, r0
90018ef4:	dcfb      	bgt.n	90018eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90018ef6:	42b0      	cmp	r0, r6
90018ef8:	bfa8      	it	ge
90018efa:	4630      	movge	r0, r6
90018efc:	4b76      	ldr	r3, [pc, #472]	@ (900190d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90018efe:	1bc0      	subs	r0, r0, r7
90018f00:	2200      	movs	r2, #0
90018f02:	f8ad 7016 	strh.w	r7, [sp, #22]
90018f06:	f9b3 3000 	ldrsh.w	r3, [r3]
90018f0a:	882f      	ldrh	r7, [r5, #0]
90018f0c:	f8ad 2014 	strh.w	r2, [sp, #20]
90018f10:	f8ad 3018 	strh.w	r3, [sp, #24]
90018f14:	f8ad 001a 	strh.w	r0, [sp, #26]
90018f18:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90018f1c:	42bb      	cmp	r3, r7
90018f1e:	d9cd      	bls.n	90018ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018f20:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90018f24:	ab07      	add	r3, sp, #28
90018f26:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018f2a:	6851      	ldr	r1, [r2, #4]
90018f2c:	c303      	stmia	r3!, {r0, r1}
90018f2e:	a905      	add	r1, sp, #20
90018f30:	a807      	add	r0, sp, #28
90018f32:	f7ff f9ae 	bl	90018292 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018f36:	2800      	cmp	r0, #0
90018f38:	d04c      	beq.n	90018fd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90018f3a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90018f3e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90018f42:	f8bd a020 	ldrh.w	sl, [sp, #32]
90018f46:	4686      	mov	lr, r0
90018f48:	4290      	cmp	r0, r2
90018f4a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90018f4e:	4450      	add	r0, sl
90018f50:	f8bd a018 	ldrh.w	sl, [sp, #24]
90018f54:	bfb8      	it	lt
90018f56:	4696      	movlt	lr, r2
90018f58:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018f5c:	4452      	add	r2, sl
90018f5e:	b280      	uxth	r0, r0
90018f60:	4299      	cmp	r1, r3
90018f62:	468c      	mov	ip, r1
90018f64:	b292      	uxth	r2, r2
90018f66:	9302      	str	r3, [sp, #8]
90018f68:	bfb8      	it	lt
90018f6a:	469c      	movlt	ip, r3
90018f6c:	b203      	sxth	r3, r0
90018f6e:	fa0f fa82 	sxth.w	sl, r2
90018f72:	f8ad e01c 	strh.w	lr, [sp, #28]
90018f76:	f8ad c01e 	strh.w	ip, [sp, #30]
90018f7a:	4553      	cmp	r3, sl
90018f7c:	bfb8      	it	lt
90018f7e:	4602      	movlt	r2, r0
90018f80:	9b02      	ldr	r3, [sp, #8]
90018f82:	eba2 020e 	sub.w	r2, r2, lr
90018f86:	f8ad 2020 	strh.w	r2, [sp, #32]
90018f8a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90018f8e:	4411      	add	r1, r2
90018f90:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90018f94:	4413      	add	r3, r2
90018f96:	b289      	uxth	r1, r1
90018f98:	b29b      	uxth	r3, r3
90018f9a:	b208      	sxth	r0, r1
90018f9c:	b21a      	sxth	r2, r3
90018f9e:	4290      	cmp	r0, r2
90018fa0:	bfb8      	it	lt
90018fa2:	460b      	movlt	r3, r1
90018fa4:	eba3 030c 	sub.w	r3, r3, ip
90018fa8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90018fac:	a807      	add	r0, sp, #28
90018fae:	f7f9 f958 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90018fb2:	b920      	cbnz	r0, 90018fbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90018fb4:	6823      	ldr	r3, [r4, #0]
90018fb6:	a907      	add	r1, sp, #28
90018fb8:	4620      	mov	r0, r4
90018fba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018fbc:	4798      	blx	r3
90018fbe:	3701      	adds	r7, #1
90018fc0:	b2bf      	uxth	r7, r7
90018fc2:	e7a9      	b.n	90018f18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90018fc4:	f8d9 0000 	ldr.w	r0, [r9]
90018fc8:	2101      	movs	r1, #1
90018fca:	6803      	ldr	r3, [r0, #0]
90018fcc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90018fd0:	4798      	blx	r3
90018fd2:	e773      	b.n	90018ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018fd4:	e9cd 0007 	strd	r0, r0, [sp, #28]
90018fd8:	e7e8      	b.n	90018fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90018fda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90018fdc:	4798      	blx	r3
90018fde:	4b3f      	ldr	r3, [pc, #252]	@ (900190dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90018fe0:	781b      	ldrb	r3, [r3, #0]
90018fe2:	2b00      	cmp	r3, #0
90018fe4:	f43f af2b 	beq.w	90018e3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018fe8:	2300      	movs	r3, #0
90018fea:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90018fee:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90018ff2:	882b      	ldrh	r3, [r5, #0]
90018ff4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
90018ff8:	42ab      	cmp	r3, r5
90018ffa:	f4bf af20 	bcs.w	90018e3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018ffe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90019002:	2907      	cmp	r1, #7
90019004:	d814      	bhi.n	90019030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90019006:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
9001900a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
9001900e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90019012:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90019016:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
9001901a:	1c4a      	adds	r2, r1, #1
9001901c:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90019020:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90019024:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90019028:	f8a2 c002 	strh.w	ip, [r2, #2]
9001902c:	8097      	strh	r7, [r2, #4]
9001902e:	80d6      	strh	r6, [r2, #6]
90019030:	3301      	adds	r3, #1
90019032:	b29b      	uxth	r3, r3
90019034:	e7e0      	b.n	90018ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90019036:	2b02      	cmp	r3, #2
90019038:	f040 8133 	bne.w	900192a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
9001903c:	4b28      	ldr	r3, [pc, #160]	@ (900190e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
9001903e:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90019042:	781b      	ldrb	r3, [r3, #0]
90019044:	2b01      	cmp	r3, #1
90019046:	f000 8098 	beq.w	9001917a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001904a:	882a      	ldrh	r2, [r5, #0]
9001904c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90019050:	3201      	adds	r2, #1
90019052:	b292      	uxth	r2, r2
90019054:	2900      	cmp	r1, #0
90019056:	d0c2      	beq.n	90018fde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90019058:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
9001905c:	4694      	mov	ip, r2
9001905e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
90019062:	f04f 0900 	mov.w	r9, #0
90019066:	441e      	add	r6, r3
90019068:	b236      	sxth	r6, r6
9001906a:	fa1f f38c 	uxth.w	r3, ip
9001906e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90019072:	4299      	cmp	r1, r3
90019074:	f240 80be 	bls.w	900191f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90019078:	4427      	add	r7, r4
9001907a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
9001907e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
90019082:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90019086:	4283      	cmp	r3, r0
90019088:	f340 80a0 	ble.w	900191cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
9001908c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
90019090:	46e1      	mov	r9, ip
90019092:	4406      	add	r6, r0
90019094:	b236      	sxth	r6, r6
90019096:	429e      	cmp	r6, r3
90019098:	bfa8      	it	ge
9001909a:	461e      	movge	r6, r3
9001909c:	f10c 0c01 	add.w	ip, ip, #1
900190a0:	e7e3      	b.n	9001906a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
900190a2:	d10a      	bne.n	900190ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
900190a4:	4562      	cmp	r2, ip
900190a6:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
900190aa:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
900190ae:	bfb8      	it	lt
900190b0:	4662      	movlt	r2, ip
900190b2:	4288      	cmp	r0, r1
900190b4:	bfb8      	it	lt
900190b6:	461f      	movlt	r7, r3
900190b8:	e086      	b.n	900191c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900190ba:	428a      	cmp	r2, r1
900190bc:	bfb8      	it	lt
900190be:	460a      	movlt	r2, r1
900190c0:	e082      	b.n	900191c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900190c2:	bf00      	nop
900190c4:	2402344c 	.word	0x2402344c
900190c8:	24023458 	.word	0x24023458
900190cc:	24000088 	.word	0x24000088
900190d0:	2402340c 	.word	0x2402340c
900190d4:	24023402 	.word	0x24023402
900190d8:	24023400 	.word	0x24023400
900190dc:	2402340a 	.word	0x2402340a
900190e0:	24023404 	.word	0x24023404
900190e4:	19a1      	adds	r1, r4, r6
900190e6:	ab07      	add	r3, sp, #28
900190e8:	f851 0fac 	ldr.w	r0, [r1, #172]!
900190ec:	6849      	ldr	r1, [r1, #4]
900190ee:	c303      	stmia	r3!, {r0, r1}
900190f0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900190f4:	a807      	add	r0, sp, #28
900190f6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
900190fa:	2b13      	cmp	r3, #19
900190fc:	440b      	add	r3, r1
900190fe:	bfd8      	it	le
90019100:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90019104:	1a9b      	subs	r3, r3, r2
90019106:	f8ad 201c 	strh.w	r2, [sp, #28]
9001910a:	f8ad 3020 	strh.w	r3, [sp, #32]
9001910e:	f7ff f805 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90019112:	a807      	add	r0, sp, #28
90019114:	f7f9 f8a5 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90019118:	bb78      	cbnz	r0, 9001917a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001911a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
9001911e:	4426      	add	r6, r4
90019120:	f8d9 0000 	ldr.w	r0, [r9]
90019124:	f1bc 0f14 	cmp.w	ip, #20
90019128:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9001912c:	f8d0 e000 	ldr.w	lr, [r0]
90019130:	bfa8      	it	ge
90019132:	f04f 0c14 	movge.w	ip, #20
90019136:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001913a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001913e:	fa1f fc8c 	uxth.w	ip, ip
90019142:	f8cd c000 	str.w	ip, [sp]
90019146:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
9001914a:	47d8      	blx	fp
9001914c:	4683      	mov	fp, r0
9001914e:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
90019152:	a807      	add	r0, sp, #28
90019154:	f7fe ffc8 	bl	900180e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90019158:	6823      	ldr	r3, [r4, #0]
9001915a:	4620      	mov	r0, r4
9001915c:	a907      	add	r1, sp, #28
9001915e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019160:	4798      	blx	r3
90019162:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
90019166:	eba0 000b 	sub.w	r0, r0, fp
9001916a:	b200      	sxth	r0, r0
9001916c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
90019170:	b918      	cbnz	r0, 9001917a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90019172:	b2b9      	uxth	r1, r7
90019174:	4650      	mov	r0, sl
90019176:	f7ff fa7b 	bl	90018670 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001917a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
9001917e:	f1bb 0f00 	cmp.w	fp, #0
90019182:	f43f af2c 	beq.w	90018fde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90019186:	882b      	ldrh	r3, [r5, #0]
90019188:	2700      	movs	r7, #0
9001918a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
9001918e:	3301      	adds	r3, #1
90019190:	b29b      	uxth	r3, r3
90019192:	b299      	uxth	r1, r3
90019194:	00fe      	lsls	r6, r7, #3
90019196:	458b      	cmp	fp, r1
90019198:	d9a4      	bls.n	900190e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
9001919a:	4426      	add	r6, r4
9001919c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900191a0:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
900191a4:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
900191a8:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
900191ac:	4408      	add	r0, r1
900191ae:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
900191b2:	4461      	add	r1, ip
900191b4:	b200      	sxth	r0, r0
900191b6:	b209      	sxth	r1, r1
900191b8:	4288      	cmp	r0, r1
900191ba:	f6bf af72 	bge.w	900190a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
900191be:	4584      	cmp	ip, r0
900191c0:	4662      	mov	r2, ip
900191c2:	461f      	mov	r7, r3
900191c4:	bfb8      	it	lt
900191c6:	4602      	movlt	r2, r0
900191c8:	3301      	adds	r3, #1
900191ca:	e7e2      	b.n	90019192 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
900191cc:	d10e      	bne.n	900191ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
900191ce:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
900191d2:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
900191d6:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
900191da:	4473      	add	r3, lr
900191dc:	b21b      	sxth	r3, r3
900191de:	429e      	cmp	r6, r3
900191e0:	bfa8      	it	ge
900191e2:	461e      	movge	r6, r3
900191e4:	4287      	cmp	r7, r0
900191e6:	bfb8      	it	lt
900191e8:	46e1      	movlt	r9, ip
900191ea:	e757      	b.n	9001909c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
900191ec:	4286      	cmp	r6, r0
900191ee:	bfa8      	it	ge
900191f0:	4606      	movge	r6, r0
900191f2:	e753      	b.n	9001909c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
900191f4:	eb0a 0007 	add.w	r0, sl, r7
900191f8:	4427      	add	r7, r4
900191fa:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
900191fe:	f1bb 0f13 	cmp.w	fp, #19
90019202:	bfdc      	itt	le
90019204:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
90019208:	445e      	addle	r6, fp
9001920a:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001920e:	bfd8      	it	le
90019210:	b236      	sxthle	r6, r6
90019212:	f7f9 f826 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90019216:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001921a:	2800      	cmp	r0, #0
9001921c:	f47f af1a 	bne.w	90019054 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90019220:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
90019224:	fa1f fb8b 	uxth.w	fp, fp
90019228:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001922c:	1ab6      	subs	r6, r6, r2
9001922e:	4829      	ldr	r0, [pc, #164]	@ (900192d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90019230:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
90019234:	2e14      	cmp	r6, #20
90019236:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
9001923a:	6800      	ldr	r0, [r0, #0]
9001923c:	bfa8      	it	ge
9001923e:	2614      	movge	r6, #20
90019240:	f8ad 101c 	strh.w	r1, [sp, #28]
90019244:	f8ad 201e 	strh.w	r2, [sp, #30]
90019248:	b289      	uxth	r1, r1
9001924a:	f8ad 3020 	strh.w	r3, [sp, #32]
9001924e:	b2b6      	uxth	r6, r6
90019250:	f8d0 c000 	ldr.w	ip, [r0]
90019254:	b292      	uxth	r2, r2
90019256:	455e      	cmp	r6, fp
90019258:	bf94      	ite	ls
9001925a:	9600      	strls	r6, [sp, #0]
9001925c:	f8cd b000 	strhi.w	fp, [sp]
90019260:	b29b      	uxth	r3, r3
90019262:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
90019266:	47b0      	blx	r6
90019268:	6823      	ldr	r3, [r4, #0]
9001926a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001926e:	a907      	add	r1, sp, #28
90019270:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019272:	4620      	mov	r0, r4
90019274:	4798      	blx	r3
90019276:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
9001927a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
9001927e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
90019282:	1a5b      	subs	r3, r3, r1
90019284:	440a      	add	r2, r1
90019286:	b21b      	sxth	r3, r3
90019288:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001928c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
90019290:	2b00      	cmp	r3, #0
90019292:	f47f aeda 	bne.w	9001904a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90019296:	fa1f f189 	uxth.w	r1, r9
9001929a:	4650      	mov	r0, sl
9001929c:	f7ff f9e8 	bl	90018670 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900192a0:	e6d3      	b.n	9001904a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900192a2:	882e      	ldrh	r6, [r5, #0]
900192a4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
900192a8:	42b3      	cmp	r3, r6
900192aa:	f67f ae98 	bls.w	90018fde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900192ae:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
900192b2:	ab07      	add	r3, sp, #28
900192b4:	f852 0fac 	ldr.w	r0, [r2, #172]!
900192b8:	6851      	ldr	r1, [r2, #4]
900192ba:	c303      	stmia	r3!, {r0, r1}
900192bc:	a807      	add	r0, sp, #28
900192be:	f7f8 ffd0 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900192c2:	b920      	cbnz	r0, 900192ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
900192c4:	6823      	ldr	r3, [r4, #0]
900192c6:	a907      	add	r1, sp, #28
900192c8:	4620      	mov	r0, r4
900192ca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900192cc:	4798      	blx	r3
900192ce:	3601      	adds	r6, #1
900192d0:	b2b6      	uxth	r6, r6
900192d2:	e7e7      	b.n	900192a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
900192d4:	2402340c 	.word	0x2402340c

900192d8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
900192d8:	4b03      	ldr	r3, [pc, #12]	@ (900192e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
900192da:	2200      	movs	r2, #0
900192dc:	801a      	strh	r2, [r3, #0]
900192de:	805a      	strh	r2, [r3, #2]
900192e0:	809a      	strh	r2, [r3, #4]
900192e2:	80da      	strh	r2, [r3, #6]
900192e4:	4770      	bx	lr
900192e6:	bf00      	nop
900192e8:	24023458 	.word	0x24023458

900192ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900192ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900192f0:	b09d      	sub	sp, #116	@ 0x74
900192f2:	4606      	mov	r6, r0
900192f4:	4614      	mov	r4, r2
900192f6:	468a      	mov	sl, r1
900192f8:	a803      	add	r0, sp, #12
900192fa:	461d      	mov	r5, r3
900192fc:	f001 f95d 	bl	9001a5ba <_ZN8touchgfx12TextProviderC1Ev>
90019300:	6833      	ldr	r3, [r6, #0]
90019302:	4630      	mov	r0, r6
90019304:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90019308:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001930a:	4798      	blx	r3
9001930c:	6833      	ldr	r3, [r6, #0]
9001930e:	4607      	mov	r7, r0
90019310:	4630      	mov	r0, r6
90019312:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90019314:	4798      	blx	r3
90019316:	462a      	mov	r2, r5
90019318:	2500      	movs	r5, #0
9001931a:	4621      	mov	r1, r4
9001931c:	9000      	str	r0, [sp, #0]
9001931e:	463b      	mov	r3, r7
90019320:	462c      	mov	r4, r5
90019322:	46a9      	mov	r9, r5
90019324:	46a8      	mov	r8, r5
90019326:	a803      	add	r0, sp, #12
90019328:	f001 f99a 	bl	9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001932c:	2300      	movs	r3, #0
9001932e:	9302      	str	r3, [sp, #8]
90019330:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90019334:	429c      	cmp	r4, r3
90019336:	d002      	beq.n	9001933e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90019338:	455c      	cmp	r4, fp
9001933a:	bf18      	it	ne
9001933c:	4625      	movne	r5, r4
9001933e:	ab02      	add	r3, sp, #8
90019340:	4632      	mov	r2, r6
90019342:	4651      	mov	r1, sl
90019344:	a803      	add	r0, sp, #12
90019346:	f001 fc7f 	bl	9001ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001934a:	4604      	mov	r4, r0
9001934c:	b108      	cbz	r0, 90019352 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001934e:	280a      	cmp	r0, #10
90019350:	d10a      	bne.n	90019368 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90019352:	45c1      	cmp	r9, r8
90019354:	bf38      	it	cc
90019356:	46c1      	movcc	r9, r8
90019358:	f04f 0800 	mov.w	r8, #0
9001935c:	2c00      	cmp	r4, #0
9001935e:	d1e5      	bne.n	9001932c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019360:	4648      	mov	r0, r9
90019362:	b01d      	add	sp, #116	@ 0x74
90019364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019368:	9a02      	ldr	r2, [sp, #8]
9001936a:	2a00      	cmp	r2, #0
9001936c:	d0de      	beq.n	9001932c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001936e:	7b57      	ldrb	r7, [r2, #13]
90019370:	4629      	mov	r1, r5
90019372:	6833      	ldr	r3, [r6, #0]
90019374:	007f      	lsls	r7, r7, #1
90019376:	8894      	ldrh	r4, [r2, #4]
90019378:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001937a:	f407 7080 	and.w	r0, r7, #256	@ 0x100
9001937e:	7a97      	ldrb	r7, [r2, #10]
90019380:	4307      	orrs	r7, r0
90019382:	4630      	mov	r0, r6
90019384:	4798      	blx	r3
90019386:	4438      	add	r0, r7
90019388:	4480      	add	r8, r0
9001938a:	fa1f f888 	uxth.w	r8, r8
9001938e:	e7e5      	b.n	9001935c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90019390 <_ZNK8touchgfx4Font12getCharWidthEt>:
90019390:	b508      	push	{r3, lr}
90019392:	6803      	ldr	r3, [r0, #0]
90019394:	68db      	ldr	r3, [r3, #12]
90019396:	4798      	blx	r3
90019398:	b128      	cbz	r0, 900193a6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001939a:	7b43      	ldrb	r3, [r0, #13]
9001939c:	7a80      	ldrb	r0, [r0, #10]
9001939e:	005b      	lsls	r3, r3, #1
900193a0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900193a4:	4318      	orrs	r0, r3
900193a6:	bd08      	pop	{r3, pc}

900193a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
900193a8:	b40e      	push	{r1, r2, r3}
900193aa:	b5f0      	push	{r4, r5, r6, r7, lr}
900193ac:	b09e      	sub	sp, #120	@ 0x78
900193ae:	4605      	mov	r5, r0
900193b0:	ab23      	add	r3, sp, #140	@ 0x8c
900193b2:	a805      	add	r0, sp, #20
900193b4:	f853 4b04 	ldr.w	r4, [r3], #4
900193b8:	9303      	str	r3, [sp, #12]
900193ba:	f001 f8fe 	bl	9001a5ba <_ZN8touchgfx12TextProviderC1Ev>
900193be:	682b      	ldr	r3, [r5, #0]
900193c0:	4628      	mov	r0, r5
900193c2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900193c4:	4798      	blx	r3
900193c6:	682b      	ldr	r3, [r5, #0]
900193c8:	4606      	mov	r6, r0
900193ca:	4628      	mov	r0, r5
900193cc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900193ce:	4798      	blx	r3
900193d0:	4633      	mov	r3, r6
900193d2:	4621      	mov	r1, r4
900193d4:	ae1e      	add	r6, sp, #120	@ 0x78
900193d6:	2400      	movs	r4, #0
900193d8:	9000      	str	r0, [sp, #0]
900193da:	9a03      	ldr	r2, [sp, #12]
900193dc:	a805      	add	r0, sp, #20
900193de:	f001 f93f 	bl	9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900193e2:	f846 4d68 	str.w	r4, [r6, #-104]!
900193e6:	462a      	mov	r2, r5
900193e8:	4633      	mov	r3, r6
900193ea:	4621      	mov	r1, r4
900193ec:	a805      	add	r0, sp, #20
900193ee:	f001 fc2b 	bl	9001ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900193f2:	b300      	cbz	r0, 90019436 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900193f4:	280a      	cmp	r0, #10
900193f6:	d01a      	beq.n	9001942e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900193f8:	9f04      	ldr	r7, [sp, #16]
900193fa:	b1c7      	cbz	r7, 9001942e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900193fc:	7b78      	ldrb	r0, [r7, #13]
900193fe:	7a3b      	ldrb	r3, [r7, #8]
90019400:	00c1      	lsls	r1, r0, #3
90019402:	88ea      	ldrh	r2, [r5, #6]
90019404:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019408:	4319      	orrs	r1, r3
9001940a:	0643      	lsls	r3, r0, #25
9001940c:	ea4f 1000 	mov.w	r0, r0, lsl #4
90019410:	bf48      	it	mi
90019412:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
90019416:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001941a:	bf48      	it	mi
9001941c:	b219      	sxthmi	r1, r3
9001941e:	79fb      	ldrb	r3, [r7, #7]
90019420:	4303      	orrs	r3, r0
90019422:	4413      	add	r3, r2
90019424:	1a5b      	subs	r3, r3, r1
90019426:	b21b      	sxth	r3, r3
90019428:	429c      	cmp	r4, r3
9001942a:	bfb8      	it	lt
9001942c:	461c      	movlt	r4, r3
9001942e:	4633      	mov	r3, r6
90019430:	462a      	mov	r2, r5
90019432:	2100      	movs	r1, #0
90019434:	e7da      	b.n	900193ec <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90019436:	b2a0      	uxth	r0, r4
90019438:	b01e      	add	sp, #120	@ 0x78
9001943a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001943e:	b003      	add	sp, #12
90019440:	4770      	bx	lr

90019442 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90019442:	7a43      	ldrb	r3, [r0, #9]
90019444:	8880      	ldrh	r0, [r0, #4]
90019446:	4418      	add	r0, r3
90019448:	b280      	uxth	r0, r0
9001944a:	4770      	bx	lr

9001944c <_ZNK8touchgfx4Font13getFontHeightEv>:
9001944c:	6803      	ldr	r3, [r0, #0]
9001944e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90019450:	4718      	bx	r3

90019452 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90019452:	b40e      	push	{r1, r2, r3}
90019454:	b570      	push	{r4, r5, r6, lr}
90019456:	b09d      	sub	sp, #116	@ 0x74
90019458:	4604      	mov	r4, r0
9001945a:	ab21      	add	r3, sp, #132	@ 0x84
9001945c:	a803      	add	r0, sp, #12
9001945e:	f853 5b04 	ldr.w	r5, [r3], #4
90019462:	9302      	str	r3, [sp, #8]
90019464:	f001 f8a9 	bl	9001a5ba <_ZN8touchgfx12TextProviderC1Ev>
90019468:	6823      	ldr	r3, [r4, #0]
9001946a:	4620      	mov	r0, r4
9001946c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001946e:	4798      	blx	r3
90019470:	6823      	ldr	r3, [r4, #0]
90019472:	4606      	mov	r6, r0
90019474:	4620      	mov	r0, r4
90019476:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90019478:	2401      	movs	r4, #1
9001947a:	4798      	blx	r3
9001947c:	4633      	mov	r3, r6
9001947e:	9000      	str	r0, [sp, #0]
90019480:	4629      	mov	r1, r5
90019482:	9a02      	ldr	r2, [sp, #8]
90019484:	a803      	add	r0, sp, #12
90019486:	f001 f8eb 	bl	9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001948a:	a803      	add	r0, sp, #12
9001948c:	f001 fca8 	bl	9001ade0 <_ZN8touchgfx12TextProvider11getNextCharEv>
90019490:	b2a3      	uxth	r3, r4
90019492:	b138      	cbz	r0, 900194a4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90019494:	280a      	cmp	r0, #10
90019496:	a803      	add	r0, sp, #12
90019498:	bf04      	itt	eq
9001949a:	3301      	addeq	r3, #1
9001949c:	b21c      	sxtheq	r4, r3
9001949e:	f001 fc9f 	bl	9001ade0 <_ZN8touchgfx12TextProvider11getNextCharEv>
900194a2:	e7f5      	b.n	90019490 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
900194a4:	4618      	mov	r0, r3
900194a6:	b01d      	add	sp, #116	@ 0x74
900194a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900194ac:	b003      	add	sp, #12
900194ae:	4770      	bx	lr

900194b0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
900194b0:	b40e      	push	{r1, r2, r3}
900194b2:	b5f0      	push	{r4, r5, r6, r7, lr}
900194b4:	b09e      	sub	sp, #120	@ 0x78
900194b6:	4604      	mov	r4, r0
900194b8:	ab23      	add	r3, sp, #140	@ 0x8c
900194ba:	a805      	add	r0, sp, #20
900194bc:	f853 5b04 	ldr.w	r5, [r3], #4
900194c0:	9303      	str	r3, [sp, #12]
900194c2:	f001 f87a 	bl	9001a5ba <_ZN8touchgfx12TextProviderC1Ev>
900194c6:	6823      	ldr	r3, [r4, #0]
900194c8:	4620      	mov	r0, r4
900194ca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900194cc:	4798      	blx	r3
900194ce:	6823      	ldr	r3, [r4, #0]
900194d0:	4606      	mov	r6, r0
900194d2:	4620      	mov	r0, r4
900194d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900194d6:	4798      	blx	r3
900194d8:	4633      	mov	r3, r6
900194da:	4629      	mov	r1, r5
900194dc:	9000      	str	r0, [sp, #0]
900194de:	9a03      	ldr	r2, [sp, #12]
900194e0:	a805      	add	r0, sp, #20
900194e2:	f001 f8bd 	bl	9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900194e6:	ad1e      	add	r5, sp, #120	@ 0x78
900194e8:	2100      	movs	r1, #0
900194ea:	f647 76ff 	movw	r6, #32767	@ 0x7fff
900194ee:	4622      	mov	r2, r4
900194f0:	a805      	add	r0, sp, #20
900194f2:	f845 1d68 	str.w	r1, [r5, #-104]!
900194f6:	462b      	mov	r3, r5
900194f8:	f001 fba6 	bl	9001ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900194fc:	b1d8      	cbz	r0, 90019536 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900194fe:	280a      	cmp	r0, #10
90019500:	d012      	beq.n	90019528 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90019502:	9804      	ldr	r0, [sp, #16]
90019504:	b180      	cbz	r0, 90019528 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90019506:	7b47      	ldrb	r7, [r0, #13]
90019508:	88e2      	ldrh	r2, [r4, #6]
9001950a:	00fb      	lsls	r3, r7, #3
9001950c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90019510:	7a03      	ldrb	r3, [r0, #8]
90019512:	430b      	orrs	r3, r1
90019514:	0679      	lsls	r1, r7, #25
90019516:	bf44      	itt	mi
90019518:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001951c:	b21b      	sxthmi	r3, r3
9001951e:	1ad3      	subs	r3, r2, r3
90019520:	b21b      	sxth	r3, r3
90019522:	429e      	cmp	r6, r3
90019524:	bfa8      	it	ge
90019526:	461e      	movge	r6, r3
90019528:	462b      	mov	r3, r5
9001952a:	4622      	mov	r2, r4
9001952c:	2100      	movs	r1, #0
9001952e:	a805      	add	r0, sp, #20
90019530:	f001 fb8a 	bl	9001ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019534:	e7e2      	b.n	900194fc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90019536:	4630      	mov	r0, r6
90019538:	b01e      	add	sp, #120	@ 0x78
9001953a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001953e:	b003      	add	sp, #12
90019540:	4770      	bx	lr

90019542 <_ZNK8touchgfx8Drawable10invalidateEv>:
90019542:	b513      	push	{r0, r1, r4, lr}
90019544:	6803      	ldr	r3, [r0, #0]
90019546:	2400      	movs	r4, #0
90019548:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001954c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019550:	f8ad 1004 	strh.w	r1, [sp, #4]
90019554:	4669      	mov	r1, sp
90019556:	691b      	ldr	r3, [r3, #16]
90019558:	9400      	str	r4, [sp, #0]
9001955a:	f8ad 2006 	strh.w	r2, [sp, #6]
9001955e:	4798      	blx	r3
90019560:	b002      	add	sp, #8
90019562:	bd10      	pop	{r4, pc}

90019564 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90019564:	b538      	push	{r3, r4, r5, lr}
90019566:	680b      	ldr	r3, [r1, #0]
90019568:	460c      	mov	r4, r1
9001956a:	4605      	mov	r5, r0
9001956c:	68db      	ldr	r3, [r3, #12]
9001956e:	4798      	blx	r3
90019570:	6823      	ldr	r3, [r4, #0]
90019572:	4620      	mov	r0, r4
90019574:	4629      	mov	r1, r5
90019576:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90019578:	4798      	blx	r3
9001957a:	4628      	mov	r0, r5
9001957c:	bd38      	pop	{r3, r4, r5, pc}

9001957e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001957e:	b410      	push	{r4}
90019580:	880a      	ldrh	r2, [r1, #0]
90019582:	8884      	ldrh	r4, [r0, #4]
90019584:	4422      	add	r2, r4
90019586:	800a      	strh	r2, [r1, #0]
90019588:	884a      	ldrh	r2, [r1, #2]
9001958a:	88c4      	ldrh	r4, [r0, #6]
9001958c:	4422      	add	r2, r4
9001958e:	804a      	strh	r2, [r1, #2]
90019590:	6940      	ldr	r0, [r0, #20]
90019592:	b120      	cbz	r0, 9001959e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90019594:	6803      	ldr	r3, [r0, #0]
90019596:	f85d 4b04 	ldr.w	r4, [sp], #4
9001959a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001959c:	4718      	bx	r3
9001959e:	f85d 4b04 	ldr.w	r4, [sp], #4
900195a2:	4770      	bx	lr

900195a4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
900195a4:	b570      	push	{r4, r5, r6, lr}
900195a6:	8882      	ldrh	r2, [r0, #4]
900195a8:	460c      	mov	r4, r1
900195aa:	880b      	ldrh	r3, [r1, #0]
900195ac:	4605      	mov	r5, r0
900195ae:	4413      	add	r3, r2
900195b0:	800b      	strh	r3, [r1, #0]
900195b2:	884b      	ldrh	r3, [r1, #2]
900195b4:	88c2      	ldrh	r2, [r0, #6]
900195b6:	4413      	add	r3, r2
900195b8:	804b      	strh	r3, [r1, #2]
900195ba:	1d01      	adds	r1, r0, #4
900195bc:	4620      	mov	r0, r4
900195be:	f7f8 fe0d 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
900195c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900195c6:	2b00      	cmp	r3, #0
900195c8:	dd0b      	ble.n	900195e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900195ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900195ce:	2b00      	cmp	r3, #0
900195d0:	dd07      	ble.n	900195e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900195d2:	6968      	ldr	r0, [r5, #20]
900195d4:	b128      	cbz	r0, 900195e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900195d6:	6803      	ldr	r3, [r0, #0]
900195d8:	4621      	mov	r1, r4
900195da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900195dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900195e0:	4718      	bx	r3
900195e2:	bd70      	pop	{r4, r5, r6, pc}

900195e4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900195e4:	b570      	push	{r4, r5, r6, lr}
900195e6:	8882      	ldrh	r2, [r0, #4]
900195e8:	460c      	mov	r4, r1
900195ea:	880b      	ldrh	r3, [r1, #0]
900195ec:	4605      	mov	r5, r0
900195ee:	4413      	add	r3, r2
900195f0:	800b      	strh	r3, [r1, #0]
900195f2:	884b      	ldrh	r3, [r1, #2]
900195f4:	88c2      	ldrh	r2, [r0, #6]
900195f6:	4413      	add	r3, r2
900195f8:	804b      	strh	r3, [r1, #2]
900195fa:	1d01      	adds	r1, r0, #4
900195fc:	4620      	mov	r0, r4
900195fe:	f7f8 fded 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
90019602:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90019606:	2b00      	cmp	r3, #0
90019608:	dd19      	ble.n	9001963e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001960a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001960e:	2b00      	cmp	r3, #0
90019610:	dd15      	ble.n	9001963e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019612:	6968      	ldr	r0, [r5, #20]
90019614:	b128      	cbz	r0, 90019622 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90019616:	6803      	ldr	r3, [r0, #0]
90019618:	4621      	mov	r1, r4
9001961a:	691b      	ldr	r3, [r3, #16]
9001961c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019620:	4718      	bx	r3
90019622:	4b07      	ldr	r3, [pc, #28]	@ (90019640 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90019624:	681b      	ldr	r3, [r3, #0]
90019626:	3304      	adds	r3, #4
90019628:	429d      	cmp	r5, r3
9001962a:	d108      	bne.n	9001963e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001962c:	f7fe ff10 	bl	90018450 <_ZN8touchgfx11Application11getInstanceEv>
90019630:	6803      	ldr	r3, [r0, #0]
90019632:	6821      	ldr	r1, [r4, #0]
90019634:	6862      	ldr	r2, [r4, #4]
90019636:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90019638:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001963c:	4718      	bx	r3
9001963e:	bd70      	pop	{r4, r5, r6, pc}
90019640:	24023450 	.word	0x24023450

90019644 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90019644:	b570      	push	{r4, r5, r6, lr}
90019646:	4604      	mov	r4, r0
90019648:	4616      	mov	r6, r2
9001964a:	460d      	mov	r5, r1
9001964c:	b901      	cbnz	r1, 90019650 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001964e:	b192      	cbz	r2, 90019676 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90019650:	6823      	ldr	r3, [r4, #0]
90019652:	4620      	mov	r0, r4
90019654:	699b      	ldr	r3, [r3, #24]
90019656:	4798      	blx	r3
90019658:	88e2      	ldrh	r2, [r4, #6]
9001965a:	88a1      	ldrh	r1, [r4, #4]
9001965c:	4620      	mov	r0, r4
9001965e:	4432      	add	r2, r6
90019660:	4429      	add	r1, r5
90019662:	b212      	sxth	r2, r2
90019664:	b209      	sxth	r1, r1
90019666:	f7f9 f88f 	bl	90012788 <_ZN8touchgfx8Drawable5setXYEss>
9001966a:	6823      	ldr	r3, [r4, #0]
9001966c:	4620      	mov	r0, r4
9001966e:	699b      	ldr	r3, [r3, #24]
90019670:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019674:	4718      	bx	r3
90019676:	bd70      	pop	{r4, r5, r6, pc}

90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90019678:	b510      	push	{r4, lr}
9001967a:	2300      	movs	r3, #0
9001967c:	4604      	mov	r4, r0
9001967e:	4608      	mov	r0, r1
90019680:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90019684:	8023      	strh	r3, [r4, #0]
90019686:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001968a:	8063      	strh	r3, [r4, #2]
9001968c:	6803      	ldr	r3, [r0, #0]
9001968e:	80a1      	strh	r1, [r4, #4]
90019690:	4621      	mov	r1, r4
90019692:	80e2      	strh	r2, [r4, #6]
90019694:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90019696:	4798      	blx	r3
90019698:	4620      	mov	r0, r4
9001969a:	bd10      	pop	{r4, pc}

9001969c <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
9001969c:	4770      	bx	lr

9001969e <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
9001969e:	b510      	push	{r4, lr}
900196a0:	4604      	mov	r4, r0
900196a2:	211c      	movs	r1, #28
900196a4:	f010 fcb2 	bl	9002a00c <_ZdlPvj>
900196a8:	4620      	mov	r0, r4
900196aa:	bd10      	pop	{r4, pc}

900196ac <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
900196ac:	4a04      	ldr	r2, [pc, #16]	@ (900196c0 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
900196ae:	6002      	str	r2, [r0, #0]
900196b0:	2200      	movs	r2, #0
900196b2:	e9c0 2201 	strd	r2, r2, [r0, #4]
900196b6:	e9c0 2203 	strd	r2, r2, [r0, #12]
900196ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
900196be:	4770      	bx	lr
900196c0:	9002e794 	.word	0x9002e794

900196c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
900196c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900196c8:	4604      	mov	r4, r0
900196ca:	b087      	sub	sp, #28
900196cc:	4696      	mov	lr, r2
900196ce:	6880      	ldr	r0, [r0, #8]
900196d0:	8b22      	ldrh	r2, [r4, #24]
900196d2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
900196d6:	9105      	str	r1, [sp, #20]
900196d8:	1c51      	adds	r1, r2, #1
900196da:	8321      	strh	r1, [r4, #24]
900196dc:	2101      	movs	r1, #1
900196de:	5481      	strb	r1, [r0, r2]
900196e0:	4689      	mov	r9, r1
900196e2:	f9b3 2000 	ldrsh.w	r2, [r3]
900196e6:	8b60      	ldrh	r0, [r4, #26]
900196e8:	ee06 2a90 	vmov	s13, r2
900196ec:	68e2      	ldr	r2, [r4, #12]
900196ee:	1845      	adds	r5, r0, r1
900196f0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900196f4:	eb02 0280 	add.w	r2, r2, r0, lsl #2
900196f8:	8365      	strh	r5, [r4, #26]
900196fa:	edc2 6a00 	vstr	s13, [r2]
900196fe:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90019702:	8b60      	ldrh	r0, [r4, #26]
90019704:	ee07 2a10 	vmov	s14, r2
90019708:	68e2      	ldr	r2, [r4, #12]
9001970a:	1845      	adds	r5, r0, r1
9001970c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019710:	eb02 0280 	add.w	r2, r2, r0, lsl #2
90019714:	8365      	strh	r5, [r4, #26]
90019716:	1d18      	adds	r0, r3, #4
90019718:	460d      	mov	r5, r1
9001971a:	ed82 7a00 	vstr	s14, [r2]
9001971e:	f8be 2000 	ldrh.w	r2, [lr]
90019722:	9203      	str	r2, [sp, #12]
90019724:	2200      	movs	r2, #0
90019726:	4613      	mov	r3, r2
90019728:	4694      	mov	ip, r2
9001972a:	9201      	str	r2, [sp, #4]
9001972c:	9202      	str	r2, [sp, #8]
9001972e:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90019732:	9e05      	ldr	r6, [sp, #20]
90019734:	f108 0701 	add.w	r7, r8, #1
90019738:	f8d4 a008 	ldr.w	sl, [r4, #8]
9001973c:	428e      	cmp	r6, r1
9001973e:	b2bf      	uxth	r7, r7
90019740:	eb0a 0b08 	add.w	fp, sl, r8
90019744:	f340 80b6 	ble.w	900198b4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
90019748:	9b03      	ldr	r3, [sp, #12]
9001974a:	f9b0 c000 	ldrsh.w	ip, [r0]
9001974e:	fa43 fb05 	asr.w	fp, r3, r5
90019752:	f00b 0b01 	and.w	fp, fp, #1
90019756:	fa5f f38b 	uxtb.w	r3, fp
9001975a:	9304      	str	r3, [sp, #16]
9001975c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90019760:	f1bb 0f00 	cmp.w	fp, #0
90019764:	d057      	beq.n	90019816 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
90019766:	ee07 ca90 	vmov	s15, ip
9001976a:	8327      	strh	r7, [r4, #24]
9001976c:	eef8 5ae7 	vcvt.f32.s32	s11, s15
90019770:	ee07 3a90 	vmov	s15, r3
90019774:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019778:	f1b9 0f00 	cmp.w	r9, #0
9001977c:	d028      	beq.n	900197d0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
9001977e:	f04f 0602 	mov.w	r6, #2
90019782:	f80a 6008 	strb.w	r6, [sl, r8]
90019786:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001978a:	68e7      	ldr	r7, [r4, #12]
9001978c:	f108 0901 	add.w	r9, r8, #1
90019790:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90019794:	f8a4 901a 	strh.w	r9, [r4, #26]
90019798:	edc7 5a00 	vstr	s11, [r7]
9001979c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900197a0:	68e7      	ldr	r7, [r4, #12]
900197a2:	f108 0901 	add.w	r9, r8, #1
900197a6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900197aa:	f8a4 901a 	strh.w	r9, [r4, #26]
900197ae:	edc7 7a00 	vstr	s15, [r7]
900197b2:	3501      	adds	r5, #1
900197b4:	2d10      	cmp	r5, #16
900197b6:	d106      	bne.n	900197c6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
900197b8:	9d02      	ldr	r5, [sp, #8]
900197ba:	3501      	adds	r5, #1
900197bc:	9502      	str	r5, [sp, #8]
900197be:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
900197c2:	9503      	str	r5, [sp, #12]
900197c4:	2500      	movs	r5, #0
900197c6:	3101      	adds	r1, #1
900197c8:	3004      	adds	r0, #4
900197ca:	f8dd 9010 	ldr.w	r9, [sp, #16]
900197ce:	e7ae      	b.n	9001972e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
900197d0:	f04f 0605 	mov.w	r6, #5
900197d4:	ed9d 5a01 	vldr	s10, [sp, #4]
900197d8:	f80a 6008 	strb.w	r6, [sl, r8]
900197dc:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900197e0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900197e4:	68e7      	ldr	r7, [r4, #12]
900197e6:	f108 0901 	add.w	r9, r8, #1
900197ea:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900197ee:	f8a4 901a 	strh.w	r9, [r4, #26]
900197f2:	ed87 5a00 	vstr	s10, [r7]
900197f6:	ee05 2a10 	vmov	s10, r2
900197fa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900197fe:	68e7      	ldr	r7, [r4, #12]
90019800:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90019804:	f108 0901 	add.w	r9, r8, #1
90019808:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001980c:	f8a4 901a 	strh.w	r9, [r4, #26]
90019810:	ed87 5a00 	vstr	s10, [r7]
90019814:	e7b7      	b.n	90019786 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
90019816:	f1b9 0f00 	cmp.w	r9, #0
9001981a:	d147      	bne.n	900198ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
9001981c:	f04f 0605 	mov.w	r6, #5
90019820:	eddd 7a01 	vldr	s15, [sp, #4]
90019824:	8327      	strh	r7, [r4, #24]
90019826:	f80a 6008 	strb.w	r6, [sl, r8]
9001982a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001982e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90019832:	68e7      	ldr	r7, [r4, #12]
90019834:	f108 0901 	add.w	r9, r8, #1
90019838:	9e01      	ldr	r6, [sp, #4]
9001983a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001983e:	f8a4 901a 	strh.w	r9, [r4, #26]
90019842:	4466      	add	r6, ip
90019844:	edc7 7a00 	vstr	s15, [r7]
90019848:	ee07 2a90 	vmov	s15, r2
9001984c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90019850:	441a      	add	r2, r3
90019852:	68e7      	ldr	r7, [r4, #12]
90019854:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019858:	f108 0901 	add.w	r9, r8, #1
9001985c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90019860:	f8a4 901a 	strh.w	r9, [r4, #26]
90019864:	edc7 7a00 	vstr	s15, [r7]
90019868:	ee07 6a90 	vmov	s15, r6
9001986c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90019870:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019874:	68e7      	ldr	r7, [r4, #12]
90019876:	f108 0901 	add.w	r9, r8, #1
9001987a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001987e:	ee67 7a86 	vmul.f32	s15, s15, s12
90019882:	f8a4 901a 	strh.w	r9, [r4, #26]
90019886:	edc7 7a00 	vstr	s15, [r7]
9001988a:	ee07 2a90 	vmov	s15, r2
9001988e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90019892:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019896:	68e7      	ldr	r7, [r4, #12]
90019898:	f108 0901 	add.w	r9, r8, #1
9001989c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900198a0:	ee67 7a86 	vmul.f32	s15, s15, s12
900198a4:	f8a4 901a 	strh.w	r9, [r4, #26]
900198a8:	edc7 7a00 	vstr	s15, [r7]
900198ac:	461a      	mov	r2, r3
900198ae:	f8cd c004 	str.w	ip, [sp, #4]
900198b2:	e77e      	b.n	900197b2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
900198b4:	f1b9 0f00 	cmp.w	r9, #0
900198b8:	d028      	beq.n	9001990c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
900198ba:	ee07 ca90 	vmov	s15, ip
900198be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900198c2:	eef4 6a67 	vcmp.f32	s13, s15
900198c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900198ca:	d108      	bne.n	900198de <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
900198cc:	ee07 3a90 	vmov	s15, r3
900198d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900198d4:	eeb4 7a67 	vcmp.f32	s14, s15
900198d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900198dc:	d016      	beq.n	9001990c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
900198de:	2302      	movs	r3, #2
900198e0:	8327      	strh	r7, [r4, #24]
900198e2:	f88b 3000 	strb.w	r3, [fp]
900198e6:	8b62      	ldrh	r2, [r4, #26]
900198e8:	68e3      	ldr	r3, [r4, #12]
900198ea:	1c51      	adds	r1, r2, #1
900198ec:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900198f0:	8361      	strh	r1, [r4, #26]
900198f2:	edc3 6a00 	vstr	s13, [r3]
900198f6:	8b62      	ldrh	r2, [r4, #26]
900198f8:	68e3      	ldr	r3, [r4, #12]
900198fa:	1c51      	adds	r1, r2, #1
900198fc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90019900:	8361      	strh	r1, [r4, #26]
90019902:	ed83 7a00 	vstr	s14, [r3]
90019906:	b007      	add	sp, #28
90019908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001990c:	2305      	movs	r3, #5
9001990e:	eddd 7a01 	vldr	s15, [sp, #4]
90019912:	8327      	strh	r7, [r4, #24]
90019914:	f88b 3000 	strb.w	r3, [fp]
90019918:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001991c:	8b61      	ldrh	r1, [r4, #26]
9001991e:	68e3      	ldr	r3, [r4, #12]
90019920:	1c4d      	adds	r5, r1, #1
90019922:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90019926:	8365      	strh	r5, [r4, #26]
90019928:	edc3 7a00 	vstr	s15, [r3]
9001992c:	ee07 2a90 	vmov	s15, r2
90019930:	8b61      	ldrh	r1, [r4, #26]
90019932:	68e3      	ldr	r3, [r4, #12]
90019934:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019938:	1c4d      	adds	r5, r1, #1
9001993a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001993e:	8365      	strh	r5, [r4, #26]
90019940:	edc3 7a00 	vstr	s15, [r3]
90019944:	e7cf      	b.n	900198e6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

90019948 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90019948:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001994c:	4604      	mov	r4, r0
9001994e:	b08e      	sub	sp, #56	@ 0x38
90019950:	4699      	mov	r9, r3
90019952:	4688      	mov	r8, r1
90019954:	4615      	mov	r5, r2
90019956:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90019958:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
9001995c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
9001995e:	f7e9 fd75 	bl	9000344c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90019962:	6060      	str	r0, [r4, #4]
90019964:	f1b9 0f00 	cmp.w	r9, #0
90019968:	f000 80e8 	beq.w	90019b3c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001996c:	2800      	cmp	r0, #0
9001996e:	f000 80e5 	beq.w	90019b3c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90019972:	a805      	add	r0, sp, #20
90019974:	f000 f8f9 	bl	90019b6a <_ZN8touchgfx9Matrix3x3C1Ev>
90019978:	6833      	ldr	r3, [r6, #0]
9001997a:	4630      	mov	r0, r6
9001997c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
9001997e:	4798      	blx	r3
90019980:	a805      	add	r0, sp, #20
90019982:	eef0 0a40 	vmov.f32	s1, s0
90019986:	f000 f8f4 	bl	90019b72 <_ZN8touchgfx9Matrix3x35scaleEff>
9001998a:	6860      	ldr	r0, [r4, #4]
9001998c:	f1ba 0f03 	cmp.w	sl, #3
90019990:	d83b      	bhi.n	90019a0a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90019992:	e8df f00a 	tbb	[pc, sl]
90019996:	1002      	.short	0x1002
90019998:	9f71      	.short	0x9f71
9001999a:	6803      	ldr	r3, [r0, #0]
9001999c:	462a      	mov	r2, r5
9001999e:	4641      	mov	r1, r8
900199a0:	689b      	ldr	r3, [r3, #8]
900199a2:	4798      	blx	r3
900199a4:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
900199a8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900199ac:	ee07 7a90 	vmov	s15, r7
900199b0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
900199b4:	e026      	b.n	90019a04 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
900199b6:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
900199ba:	f8b8 3004 	ldrh.w	r3, [r8, #4]
900199be:	8869      	ldrh	r1, [r5, #2]
900199c0:	1a9b      	subs	r3, r3, r2
900199c2:	f8ad 2010 	strh.w	r2, [sp, #16]
900199c6:	aa03      	add	r2, sp, #12
900199c8:	1a5b      	subs	r3, r3, r1
900199ca:	4641      	mov	r1, r8
900199cc:	f8ad 300c 	strh.w	r3, [sp, #12]
900199d0:	882b      	ldrh	r3, [r5, #0]
900199d2:	f8ad 300e 	strh.w	r3, [sp, #14]
900199d6:	88ab      	ldrh	r3, [r5, #4]
900199d8:	f8ad 3012 	strh.w	r3, [sp, #18]
900199dc:	6803      	ldr	r3, [r0, #0]
900199de:	689b      	ldr	r3, [r3, #8]
900199e0:	4798      	blx	r3
900199e2:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90019b44 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
900199e6:	a805      	add	r0, sp, #20
900199e8:	f000 f8e8 	bl	90019bbc <_ZN8touchgfx9Matrix3x36rotateEf>
900199ec:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
900199f0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900199f2:	ee07 7a90 	vmov	s15, r7
900199f6:	1a9b      	subs	r3, r3, r2
900199f8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900199fc:	ee00 3a10 	vmov	s0, r3
90019a00:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90019a04:	a805      	add	r0, sp, #20
90019a06:	f000 f927 	bl	90019c58 <_ZN8touchgfx9Matrix3x39translateEff>
90019a0a:	6860      	ldr	r0, [r4, #4]
90019a0c:	a905      	add	r1, sp, #20
90019a0e:	2500      	movs	r5, #0
90019a10:	f109 0602 	add.w	r6, r9, #2
90019a14:	6803      	ldr	r3, [r0, #0]
90019a16:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90019a18:	4798      	blx	r3
90019a1a:	6860      	ldr	r0, [r4, #4]
90019a1c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90019a1e:	6803      	ldr	r3, [r0, #0]
90019a20:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90019a24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019a26:	4798      	blx	r3
90019a28:	6860      	ldr	r0, [r4, #4]
90019a2a:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90019a2e:	6803      	ldr	r3, [r0, #0]
90019a30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90019a32:	4798      	blx	r3
90019a34:	6860      	ldr	r0, [r4, #4]
90019a36:	2102      	movs	r1, #2
90019a38:	6803      	ldr	r3, [r0, #0]
90019a3a:	68db      	ldr	r3, [r3, #12]
90019a3c:	4798      	blx	r3
90019a3e:	f8b9 7000 	ldrh.w	r7, [r9]
90019a42:	f104 0310 	add.w	r3, r4, #16
90019a46:	61a5      	str	r5, [r4, #24]
90019a48:	f104 0208 	add.w	r2, r4, #8
90019a4c:	f104 0114 	add.w	r1, r4, #20
90019a50:	f104 000c 	add.w	r0, r4, #12
90019a54:	f7ec fe40 	bl	900066d8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90019a58:	42af      	cmp	r7, r5
90019a5a:	dd60      	ble.n	90019b1e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90019a5c:	8831      	ldrh	r1, [r6, #0]
90019a5e:	1cb2      	adds	r2, r6, #2
90019a60:	4620      	mov	r0, r4
90019a62:	3501      	adds	r5, #1
90019a64:	f101 030f 	add.w	r3, r1, #15
90019a68:	f3c3 1307 	ubfx	r3, r3, #4, #8
90019a6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90019a70:	f7ff fe28 	bl	900196c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90019a74:	4606      	mov	r6, r0
90019a76:	e7ef      	b.n	90019a58 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90019a78:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90019a7c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90019a80:	8829      	ldrh	r1, [r5, #0]
90019a82:	1a9b      	subs	r3, r3, r2
90019a84:	f8ad 2010 	strh.w	r2, [sp, #16]
90019a88:	aa03      	add	r2, sp, #12
90019a8a:	1a5b      	subs	r3, r3, r1
90019a8c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90019a90:	886d      	ldrh	r5, [r5, #2]
90019a92:	f8ad 300c 	strh.w	r3, [sp, #12]
90019a96:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90019a9a:	f8ad 1012 	strh.w	r1, [sp, #18]
90019a9e:	1a5b      	subs	r3, r3, r1
90019aa0:	4641      	mov	r1, r8
90019aa2:	1b5b      	subs	r3, r3, r5
90019aa4:	f8ad 300e 	strh.w	r3, [sp, #14]
90019aa8:	6803      	ldr	r3, [r0, #0]
90019aaa:	689b      	ldr	r3, [r3, #8]
90019aac:	4798      	blx	r3
90019aae:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90019b48 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90019ab2:	a805      	add	r0, sp, #20
90019ab4:	f000 f882 	bl	90019bbc <_ZN8touchgfx9Matrix3x36rotateEf>
90019ab8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90019abc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90019abe:	1a9b      	subs	r3, r3, r2
90019ac0:	ee00 3a90 	vmov	s1, r3
90019ac4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90019ac8:	1bdb      	subs	r3, r3, r7
90019aca:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90019ace:	ee00 3a10 	vmov	s0, r3
90019ad2:	e795      	b.n	90019a00 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90019ad4:	886b      	ldrh	r3, [r5, #2]
90019ad6:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90019ada:	f8ad 300c 	strh.w	r3, [sp, #12]
90019ade:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90019ae2:	8829      	ldrh	r1, [r5, #0]
90019ae4:	1a9b      	subs	r3, r3, r2
90019ae6:	f8ad 2012 	strh.w	r2, [sp, #18]
90019aea:	aa03      	add	r2, sp, #12
90019aec:	1a5b      	subs	r3, r3, r1
90019aee:	4641      	mov	r1, r8
90019af0:	f8ad 300e 	strh.w	r3, [sp, #14]
90019af4:	88eb      	ldrh	r3, [r5, #6]
90019af6:	f8ad 3010 	strh.w	r3, [sp, #16]
90019afa:	6803      	ldr	r3, [r0, #0]
90019afc:	689b      	ldr	r3, [r3, #8]
90019afe:	4798      	blx	r3
90019b00:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90019b4c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90019b04:	a805      	add	r0, sp, #20
90019b06:	f000 f859 	bl	90019bbc <_ZN8touchgfx9Matrix3x36rotateEf>
90019b0a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90019b0e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90019b12:	1bdb      	subs	r3, r3, r7
90019b14:	ee00 3a90 	vmov	s1, r3
90019b18:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90019b1c:	e748      	b.n	900199b0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90019b1e:	6860      	ldr	r0, [r4, #4]
90019b20:	2100      	movs	r1, #0
90019b22:	8b22      	ldrh	r2, [r4, #24]
90019b24:	6803      	ldr	r3, [r0, #0]
90019b26:	9101      	str	r1, [sp, #4]
90019b28:	8b61      	ldrh	r1, [r4, #26]
90019b2a:	9100      	str	r1, [sp, #0]
90019b2c:	6a1d      	ldr	r5, [r3, #32]
90019b2e:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90019b32:	47a8      	blx	r5
90019b34:	6860      	ldr	r0, [r4, #4]
90019b36:	6803      	ldr	r3, [r0, #0]
90019b38:	69db      	ldr	r3, [r3, #28]
90019b3a:	4798      	blx	r3
90019b3c:	b00e      	add	sp, #56	@ 0x38
90019b3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019b42:	bf00      	nop
90019b44:	42b40000 	.word	0x42b40000
90019b48:	43340000 	.word	0x43340000
90019b4c:	43870000 	.word	0x43870000

90019b50 <_ZN8touchgfx9Matrix3x35resetEv>:
90019b50:	2300      	movs	r3, #0
90019b52:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90019b56:	6043      	str	r3, [r0, #4]
90019b58:	6002      	str	r2, [r0, #0]
90019b5a:	6083      	str	r3, [r0, #8]
90019b5c:	60c3      	str	r3, [r0, #12]
90019b5e:	6102      	str	r2, [r0, #16]
90019b60:	6143      	str	r3, [r0, #20]
90019b62:	6183      	str	r3, [r0, #24]
90019b64:	61c3      	str	r3, [r0, #28]
90019b66:	6202      	str	r2, [r0, #32]
90019b68:	4770      	bx	lr

90019b6a <_ZN8touchgfx9Matrix3x3C1Ev>:
90019b6a:	b508      	push	{r3, lr}
90019b6c:	f7ff fff0 	bl	90019b50 <_ZN8touchgfx9Matrix3x35resetEv>
90019b70:	bd08      	pop	{r3, pc}

90019b72 <_ZN8touchgfx9Matrix3x35scaleEff>:
90019b72:	edd0 7a00 	vldr	s15, [r0]
90019b76:	ee67 7a80 	vmul.f32	s15, s15, s0
90019b7a:	edc0 7a00 	vstr	s15, [r0]
90019b7e:	edd0 7a01 	vldr	s15, [r0, #4]
90019b82:	ee67 7a80 	vmul.f32	s15, s15, s0
90019b86:	edc0 7a01 	vstr	s15, [r0, #4]
90019b8a:	edd0 7a02 	vldr	s15, [r0, #8]
90019b8e:	ee27 0a80 	vmul.f32	s0, s15, s0
90019b92:	edd0 7a03 	vldr	s15, [r0, #12]
90019b96:	ee67 7aa0 	vmul.f32	s15, s15, s1
90019b9a:	ed80 0a02 	vstr	s0, [r0, #8]
90019b9e:	edc0 7a03 	vstr	s15, [r0, #12]
90019ba2:	edd0 7a04 	vldr	s15, [r0, #16]
90019ba6:	ee67 7aa0 	vmul.f32	s15, s15, s1
90019baa:	edc0 7a04 	vstr	s15, [r0, #16]
90019bae:	edd0 7a05 	vldr	s15, [r0, #20]
90019bb2:	ee67 0aa0 	vmul.f32	s1, s15, s1
90019bb6:	edc0 0a05 	vstr	s1, [r0, #20]
90019bba:	4770      	bx	lr

90019bbc <_ZN8touchgfx9Matrix3x36rotateEf>:
90019bbc:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90019c50 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90019bc0:	ee20 0a27 	vmul.f32	s0, s0, s15
90019bc4:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90019c54 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90019bc8:	b510      	push	{r4, lr}
90019bca:	ed2d 8b02 	vpush	{d8}
90019bce:	eec0 8a27 	vdiv.f32	s17, s0, s15
90019bd2:	4604      	mov	r4, r0
90019bd4:	eeb0 0a68 	vmov.f32	s0, s17
90019bd8:	f010 fb32 	bl	9002a240 <cosf>
90019bdc:	eeb0 8a40 	vmov.f32	s16, s0
90019be0:	eeb0 0a68 	vmov.f32	s0, s17
90019be4:	f010 fa68 	bl	9002a0b8 <sinf>
90019be8:	edd4 6a03 	vldr	s13, [r4, #12]
90019bec:	edd4 4a00 	vldr	s9, [r4]
90019bf0:	ee60 7a66 	vnmul.f32	s15, s0, s13
90019bf4:	ed94 7a04 	vldr	s14, [r4, #16]
90019bf8:	ed94 5a01 	vldr	s10, [r4, #4]
90019bfc:	ee66 6a88 	vmul.f32	s13, s13, s16
90019c00:	edd4 5a02 	vldr	s11, [r4, #8]
90019c04:	eee8 7a24 	vfma.f32	s15, s16, s9
90019c08:	eee0 6a24 	vfma.f32	s13, s0, s9
90019c0c:	edc4 7a00 	vstr	s15, [r4]
90019c10:	ee60 7a47 	vnmul.f32	s15, s0, s14
90019c14:	ee27 7a08 	vmul.f32	s14, s14, s16
90019c18:	edc4 6a03 	vstr	s13, [r4, #12]
90019c1c:	eee8 7a05 	vfma.f32	s15, s16, s10
90019c20:	eea0 7a05 	vfma.f32	s14, s0, s10
90019c24:	edc4 7a01 	vstr	s15, [r4, #4]
90019c28:	edd4 7a05 	vldr	s15, [r4, #20]
90019c2c:	ed84 7a04 	vstr	s14, [r4, #16]
90019c30:	ee20 6a67 	vnmul.f32	s12, s0, s15
90019c34:	ee67 7a88 	vmul.f32	s15, s15, s16
90019c38:	eea8 6a25 	vfma.f32	s12, s16, s11
90019c3c:	eee0 7a25 	vfma.f32	s15, s0, s11
90019c40:	ecbd 8b02 	vpop	{d8}
90019c44:	ed84 6a02 	vstr	s12, [r4, #8]
90019c48:	edc4 7a05 	vstr	s15, [r4, #20]
90019c4c:	bd10      	pop	{r4, pc}
90019c4e:	bf00      	nop
90019c50:	40490fdb 	.word	0x40490fdb
90019c54:	43340000 	.word	0x43340000

90019c58 <_ZN8touchgfx9Matrix3x39translateEff>:
90019c58:	ed90 6a06 	vldr	s12, [r0, #24]
90019c5c:	edd0 7a00 	vldr	s15, [r0]
90019c60:	edd0 6a07 	vldr	s13, [r0, #28]
90019c64:	eee6 7a00 	vfma.f32	s15, s12, s0
90019c68:	ed90 7a08 	vldr	s14, [r0, #32]
90019c6c:	edc0 7a00 	vstr	s15, [r0]
90019c70:	edd0 7a01 	vldr	s15, [r0, #4]
90019c74:	eee6 7a80 	vfma.f32	s15, s13, s0
90019c78:	edc0 7a01 	vstr	s15, [r0, #4]
90019c7c:	edd0 7a02 	vldr	s15, [r0, #8]
90019c80:	eee7 7a00 	vfma.f32	s15, s14, s0
90019c84:	edc0 7a02 	vstr	s15, [r0, #8]
90019c88:	edd0 7a03 	vldr	s15, [r0, #12]
90019c8c:	eee6 7a20 	vfma.f32	s15, s12, s1
90019c90:	edc0 7a03 	vstr	s15, [r0, #12]
90019c94:	edd0 7a04 	vldr	s15, [r0, #16]
90019c98:	eee6 7aa0 	vfma.f32	s15, s13, s1
90019c9c:	edc0 7a04 	vstr	s15, [r0, #16]
90019ca0:	edd0 7a05 	vldr	s15, [r0, #20]
90019ca4:	eee7 7a20 	vfma.f32	s15, s14, s1
90019ca8:	edc0 7a05 	vstr	s15, [r0, #20]
90019cac:	4770      	bx	lr

90019cae <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90019cae:	edd0 6a01 	vldr	s13, [r0, #4]
90019cb2:	b084      	sub	sp, #16
90019cb4:	edd0 7a04 	vldr	s15, [r0, #16]
90019cb8:	ed90 7a03 	vldr	s14, [r0, #12]
90019cbc:	ee60 7aa7 	vmul.f32	s15, s1, s15
90019cc0:	ee60 0aa6 	vmul.f32	s1, s1, s13
90019cc4:	edd0 6a00 	vldr	s13, [r0]
90019cc8:	eee7 7a00 	vfma.f32	s15, s14, s0
90019ccc:	ed90 7a05 	vldr	s14, [r0, #20]
90019cd0:	eee6 0a80 	vfma.f32	s1, s13, s0
90019cd4:	ed90 0a02 	vldr	s0, [r0, #8]
90019cd8:	ee30 0a80 	vadd.f32	s0, s1, s0
90019cdc:	ee77 0a87 	vadd.f32	s1, s15, s14
90019ce0:	b004      	add	sp, #16
90019ce2:	4770      	bx	lr

90019ce4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90019ce4:	b530      	push	{r4, r5, lr}
90019ce6:	8083      	strh	r3, [r0, #4]
90019ce8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90019cec:	f89d 5018 	ldrb.w	r5, [sp, #24]
90019cf0:	80c3      	strh	r3, [r0, #6]
90019cf2:	f89d 3010 	ldrb.w	r3, [sp, #16]
90019cf6:	6141      	str	r1, [r0, #20]
90019cf8:	7203      	strb	r3, [r0, #8]
90019cfa:	f89d 3014 	ldrb.w	r3, [sp, #20]
90019cfe:	8302      	strh	r2, [r0, #24]
90019d00:	7243      	strb	r3, [r0, #9]
90019d02:	7a83      	ldrb	r3, [r0, #10]
90019d04:	f365 0306 	bfi	r3, r5, #0, #7
90019d08:	f89d 501c 	ldrb.w	r5, [sp, #28]
90019d0c:	f365 13c7 	bfi	r3, r5, #7, #1
90019d10:	7283      	strb	r3, [r0, #10]
90019d12:	f89d 3020 	ldrb.w	r3, [sp, #32]
90019d16:	72c3      	strb	r3, [r0, #11]
90019d18:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90019d1c:	7303      	strb	r3, [r0, #12]
90019d1e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90019d22:	81c3      	strh	r3, [r0, #14]
90019d24:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90019d28:	8203      	strh	r3, [r0, #16]
90019d2a:	4b01      	ldr	r3, [pc, #4]	@ (90019d30 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90019d2c:	6003      	str	r3, [r0, #0]
90019d2e:	bd30      	pop	{r4, r5, pc}
90019d30:	9002e7a8 	.word	0x9002e7a8

90019d34 <_ZNK8touchgfx9ConstFont4findEt>:
90019d34:	b5f0      	push	{r4, r5, r6, r7, lr}
90019d36:	6944      	ldr	r4, [r0, #20]
90019d38:	b3bc      	cbz	r4, 90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019d3a:	88a3      	ldrh	r3, [r4, #4]
90019d3c:	8b02      	ldrh	r2, [r0, #24]
90019d3e:	1acb      	subs	r3, r1, r3
90019d40:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
90019d44:	d431      	bmi.n	90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019d46:	4293      	cmp	r3, r2
90019d48:	dd0c      	ble.n	90019d64 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90019d4a:	230e      	movs	r3, #14
90019d4c:	fb03 4302 	mla	r3, r3, r2, r4
90019d50:	889b      	ldrh	r3, [r3, #4]
90019d52:	1a5b      	subs	r3, r3, r1
90019d54:	1ad3      	subs	r3, r2, r3
90019d56:	429a      	cmp	r2, r3
90019d58:	db27      	blt.n	90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019d5a:	2b00      	cmp	r3, #0
90019d5c:	bfbc      	itt	lt
90019d5e:	2302      	movlt	r3, #2
90019d60:	fb92 f3f3 	sdivlt	r3, r2, r3
90019d64:	2500      	movs	r5, #0
90019d66:	260e      	movs	r6, #14
90019d68:	4295      	cmp	r5, r2
90019d6a:	dc1e      	bgt.n	90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019d6c:	fb06 4003 	mla	r0, r6, r3, r4
90019d70:	8887      	ldrh	r7, [r0, #4]
90019d72:	42b9      	cmp	r1, r7
90019d74:	d01a      	beq.n	90019dac <_ZNK8touchgfx9ConstFont4findEt+0x78>
90019d76:	d20d      	bcs.n	90019d94 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90019d78:	1e5a      	subs	r2, r3, #1
90019d7a:	4295      	cmp	r5, r2
90019d7c:	dc15      	bgt.n	90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019d7e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90019d82:	1a5b      	subs	r3, r3, r1
90019d84:	1ad3      	subs	r3, r2, r3
90019d86:	429a      	cmp	r2, r3
90019d88:	db0f      	blt.n	90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019d8a:	429d      	cmp	r5, r3
90019d8c:	ddec      	ble.n	90019d68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019d8e:	1953      	adds	r3, r2, r5
90019d90:	105b      	asrs	r3, r3, #1
90019d92:	e7e9      	b.n	90019d68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019d94:	1c5d      	adds	r5, r3, #1
90019d96:	42aa      	cmp	r2, r5
90019d98:	db07      	blt.n	90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019d9a:	8a43      	ldrh	r3, [r0, #18]
90019d9c:	1acb      	subs	r3, r1, r3
90019d9e:	442b      	add	r3, r5
90019da0:	429d      	cmp	r5, r3
90019da2:	dc02      	bgt.n	90019daa <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019da4:	429a      	cmp	r2, r3
90019da6:	dadf      	bge.n	90019d68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019da8:	e7f1      	b.n	90019d8e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90019daa:	2000      	movs	r0, #0
90019dac:	bdf0      	pop	{r4, r5, r6, r7, pc}

90019dae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90019dae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019db0:	4604      	mov	r4, r0
90019db2:	4617      	mov	r7, r2
90019db4:	461e      	mov	r6, r3
90019db6:	b911      	cbnz	r1, 90019dbe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90019db8:	2500      	movs	r5, #0
90019dba:	4628      	mov	r0, r5
90019dbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019dbe:	290a      	cmp	r1, #10
90019dc0:	d0fa      	beq.n	90019db8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019dc2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90019dc6:	4291      	cmp	r1, r2
90019dc8:	d0f6      	beq.n	90019db8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019dca:	f242 020b 	movw	r2, #8203	@ 0x200b
90019dce:	4291      	cmp	r1, r2
90019dd0:	d0f2      	beq.n	90019db8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019dd2:	f7ff ffaf 	bl	90019d34 <_ZNK8touchgfx9ConstFont4findEt>
90019dd6:	4605      	mov	r5, r0
90019dd8:	b950      	cbnz	r0, 90019df0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90019dda:	6823      	ldr	r3, [r4, #0]
90019ddc:	4620      	mov	r0, r4
90019dde:	691b      	ldr	r3, [r3, #16]
90019de0:	4798      	blx	r3
90019de2:	4601      	mov	r1, r0
90019de4:	4620      	mov	r0, r4
90019de6:	f7ff ffa5 	bl	90019d34 <_ZNK8touchgfx9ConstFont4findEt>
90019dea:	4605      	mov	r5, r0
90019dec:	2800      	cmp	r0, #0
90019dee:	d0e3      	beq.n	90019db8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019df0:	6823      	ldr	r3, [r4, #0]
90019df2:	4629      	mov	r1, r5
90019df4:	4620      	mov	r0, r4
90019df6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90019df8:	4798      	blx	r3
90019dfa:	6038      	str	r0, [r7, #0]
90019dfc:	6823      	ldr	r3, [r4, #0]
90019dfe:	4620      	mov	r0, r4
90019e00:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90019e02:	4798      	blx	r3
90019e04:	7030      	strb	r0, [r6, #0]
90019e06:	e7d8      	b.n	90019dba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90019e08 <_ZN8touchgfx4clzuEm>:
90019e08:	4603      	mov	r3, r0
90019e0a:	b1c8      	cbz	r0, 90019e40 <_ZN8touchgfx4clzuEm+0x38>
90019e0c:	0c02      	lsrs	r2, r0, #16
90019e0e:	0412      	lsls	r2, r2, #16
90019e10:	b9a2      	cbnz	r2, 90019e3c <_ZN8touchgfx4clzuEm+0x34>
90019e12:	0403      	lsls	r3, r0, #16
90019e14:	2010      	movs	r0, #16
90019e16:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90019e1a:	bf04      	itt	eq
90019e1c:	021b      	lsleq	r3, r3, #8
90019e1e:	3008      	addeq	r0, #8
90019e20:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90019e24:	bf04      	itt	eq
90019e26:	011b      	lsleq	r3, r3, #4
90019e28:	3004      	addeq	r0, #4
90019e2a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90019e2e:	bf04      	itt	eq
90019e30:	009b      	lsleq	r3, r3, #2
90019e32:	3002      	addeq	r0, #2
90019e34:	2b00      	cmp	r3, #0
90019e36:	db04      	blt.n	90019e42 <_ZN8touchgfx4clzuEm+0x3a>
90019e38:	3001      	adds	r0, #1
90019e3a:	4770      	bx	lr
90019e3c:	2000      	movs	r0, #0
90019e3e:	e7ea      	b.n	90019e16 <_ZN8touchgfx4clzuEm+0xe>
90019e40:	2020      	movs	r0, #32
90019e42:	4770      	bx	lr

90019e44 <_ZN8touchgfx7muldivuEmmmRm>:
90019e44:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90019e48:	460f      	mov	r7, r1
90019e4a:	4615      	mov	r5, r2
90019e4c:	461e      	mov	r6, r3
90019e4e:	4601      	mov	r1, r0
90019e50:	b100      	cbz	r0, 90019e54 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90019e52:	b927      	cbnz	r7, 90019e5e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90019e54:	2000      	movs	r0, #0
90019e56:	6030      	str	r0, [r6, #0]
90019e58:	b002      	add	sp, #8
90019e5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019e5e:	f7ff ffd3 	bl	90019e08 <_ZN8touchgfx4clzuEm>
90019e62:	b980      	cbnz	r0, 90019e86 <_ZN8touchgfx7muldivuEmmmRm+0x42>
90019e64:	4638      	mov	r0, r7
90019e66:	f7ff ffcf 	bl	90019e08 <_ZN8touchgfx4clzuEm>
90019e6a:	2800      	cmp	r0, #0
90019e6c:	dd05      	ble.n	90019e7a <_ZN8touchgfx7muldivuEmmmRm+0x36>
90019e6e:	4633      	mov	r3, r6
90019e70:	462a      	mov	r2, r5
90019e72:	4638      	mov	r0, r7
90019e74:	f7ff ffe6 	bl	90019e44 <_ZN8touchgfx7muldivuEmmmRm>
90019e78:	e7ee      	b.n	90019e58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019e7a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
90019e7e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90019e82:	6033      	str	r3, [r6, #0]
90019e84:	e7e8      	b.n	90019e58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019e86:	fa37 f800 	lsrs.w	r8, r7, r0
90019e8a:	fb07 f301 	mul.w	r3, r7, r1
90019e8e:	d105      	bne.n	90019e9c <_ZN8touchgfx7muldivuEmmmRm+0x58>
90019e90:	fbb3 f0f5 	udiv	r0, r3, r5
90019e94:	fb05 3510 	mls	r5, r5, r0, r3
90019e98:	6035      	str	r5, [r6, #0]
90019e9a:	e7dd      	b.n	90019e58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019e9c:	2301      	movs	r3, #1
90019e9e:	fa01 fa00 	lsl.w	sl, r1, r0
90019ea2:	462a      	mov	r2, r5
90019ea4:	fa03 f000 	lsl.w	r0, r3, r0
90019ea8:	4633      	mov	r3, r6
90019eaa:	fbba f9f5 	udiv	r9, sl, r5
90019eae:	3801      	subs	r0, #1
90019eb0:	fb08 f409 	mul.w	r4, r8, r9
90019eb4:	4038      	ands	r0, r7
90019eb6:	f7ff ffc5 	bl	90019e44 <_ZN8touchgfx7muldivuEmmmRm>
90019eba:	462a      	mov	r2, r5
90019ebc:	4607      	mov	r7, r0
90019ebe:	ab01      	add	r3, sp, #4
90019ec0:	fb05 a119 	mls	r1, r5, r9, sl
90019ec4:	4640      	mov	r0, r8
90019ec6:	f7ff ffbd 	bl	90019e44 <_ZN8touchgfx7muldivuEmmmRm>
90019eca:	9b01      	ldr	r3, [sp, #4]
90019ecc:	6832      	ldr	r2, [r6, #0]
90019ece:	441a      	add	r2, r3
90019ed0:	fbb2 f3f5 	udiv	r3, r2, r5
90019ed4:	441c      	add	r4, r3
90019ed6:	fb05 2513 	mls	r5, r5, r3, r2
90019eda:	443c      	add	r4, r7
90019edc:	4420      	add	r0, r4
90019ede:	e7db      	b.n	90019e98 <_ZN8touchgfx7muldivuEmmmRm+0x54>

90019ee0 <_ZN8touchgfx6muldivElllRl>:
90019ee0:	b573      	push	{r0, r1, r4, r5, r6, lr}
90019ee2:	2800      	cmp	r0, #0
90019ee4:	461e      	mov	r6, r3
90019ee6:	bfba      	itte	lt
90019ee8:	4240      	neglt	r0, r0
90019eea:	f04f 34ff 	movlt.w	r4, #4294967295	@ 0xffffffff
90019eee:	2401      	movge	r4, #1
90019ef0:	2900      	cmp	r1, #0
90019ef2:	bfbc      	itt	lt
90019ef4:	4249      	neglt	r1, r1
90019ef6:	4264      	neglt	r4, r4
90019ef8:	2a00      	cmp	r2, #0
90019efa:	bfb6      	itet	lt
90019efc:	4265      	neglt	r5, r4
90019efe:	4625      	movge	r5, r4
90019f00:	4252      	neglt	r2, r2
90019f02:	4288      	cmp	r0, r1
90019f04:	bfc2      	ittt	gt
90019f06:	4603      	movgt	r3, r0
90019f08:	4608      	movgt	r0, r1
90019f0a:	4619      	movgt	r1, r3
90019f0c:	ab01      	add	r3, sp, #4
90019f0e:	f7ff ff99 	bl	90019e44 <_ZN8touchgfx7muldivuEmmmRm>
90019f12:	9b01      	ldr	r3, [sp, #4]
90019f14:	4368      	muls	r0, r5
90019f16:	435c      	muls	r4, r3
90019f18:	6034      	str	r4, [r6, #0]
90019f1a:	b002      	add	sp, #8
90019f1c:	bd70      	pop	{r4, r5, r6, pc}

90019f1e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90019f1e:	2000      	movs	r0, #0
90019f20:	4770      	bx	lr

90019f22 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90019f22:	2001      	movs	r0, #1
90019f24:	4770      	bx	lr

90019f26 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90019f26:	2002      	movs	r0, #2
90019f28:	4770      	bx	lr

90019f2a <_ZN8touchgfx6ScreenD1Ev>:
90019f2a:	4770      	bx	lr

90019f2c <_ZN8touchgfx6Screen11setupScreenEv>:
90019f2c:	4770      	bx	lr

90019f2e <_ZN8touchgfx12GestureEventD1Ev>:
90019f2e:	4770      	bx	lr

90019f30 <_ZN8touchgfx9DragEventD1Ev>:
90019f30:	4770      	bx	lr

90019f32 <_ZN8touchgfx10ClickEventD1Ev>:
90019f32:	4770      	bx	lr

90019f34 <_ZN8touchgfx10ClickEventD0Ev>:
90019f34:	b510      	push	{r4, lr}
90019f36:	4604      	mov	r4, r0
90019f38:	210c      	movs	r1, #12
90019f3a:	f010 f867 	bl	9002a00c <_ZdlPvj>
90019f3e:	4620      	mov	r0, r4
90019f40:	bd10      	pop	{r4, pc}

90019f42 <_ZN8touchgfx9DragEventD0Ev>:
90019f42:	b510      	push	{r4, lr}
90019f44:	4604      	mov	r4, r0
90019f46:	2110      	movs	r1, #16
90019f48:	f010 f860 	bl	9002a00c <_ZdlPvj>
90019f4c:	4620      	mov	r0, r4
90019f4e:	bd10      	pop	{r4, pc}

90019f50 <_ZN8touchgfx12GestureEventD0Ev>:
90019f50:	b510      	push	{r4, lr}
90019f52:	4604      	mov	r4, r0
90019f54:	210c      	movs	r1, #12
90019f56:	f010 f859 	bl	9002a00c <_ZdlPvj>
90019f5a:	4620      	mov	r0, r4
90019f5c:	bd10      	pop	{r4, pc}

90019f5e <_ZN8touchgfx6ScreenD0Ev>:
90019f5e:	b510      	push	{r4, lr}
90019f60:	4604      	mov	r4, r0
90019f62:	213c      	movs	r1, #60	@ 0x3c
90019f64:	f010 f852 	bl	9002a00c <_ZdlPvj>
90019f68:	4620      	mov	r0, r4
90019f6a:	bd10      	pop	{r4, pc}

90019f6c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90019f6c:	b530      	push	{r4, r5, lr}
90019f6e:	460d      	mov	r5, r1
90019f70:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90019f72:	b087      	sub	sp, #28
90019f74:	4604      	mov	r4, r0
90019f76:	b301      	cbz	r1, 90019fba <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90019f78:	a801      	add	r0, sp, #4
90019f7a:	f7ff fb7d 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019f7e:	892a      	ldrh	r2, [r5, #8]
90019f80:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90019f84:	7928      	ldrb	r0, [r5, #4]
90019f86:	1ad2      	subs	r2, r2, r3
90019f88:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90019f8a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90019f8e:	441a      	add	r2, r3
90019f90:	896b      	ldrh	r3, [r5, #10]
90019f92:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90019f96:	f88d 0010 	strb.w	r0, [sp, #16]
90019f9a:	1b5b      	subs	r3, r3, r5
90019f9c:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90019f9e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90019fa0:	442b      	add	r3, r5
90019fa2:	4d07      	ldr	r5, [pc, #28]	@ (90019fc0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90019fa4:	f8ad 1012 	strh.w	r1, [sp, #18]
90019fa8:	a903      	add	r1, sp, #12
90019faa:	9503      	str	r5, [sp, #12]
90019fac:	f8ad 2014 	strh.w	r2, [sp, #20]
90019fb0:	f8ad 3016 	strh.w	r3, [sp, #22]
90019fb4:	6803      	ldr	r3, [r0, #0]
90019fb6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019fb8:	4798      	blx	r3
90019fba:	b007      	add	sp, #28
90019fbc:	bd30      	pop	{r4, r5, pc}
90019fbe:	bf00      	nop
90019fc0:	9002e838 	.word	0x9002e838

90019fc4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90019fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019fc8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90019fca:	b08a      	sub	sp, #40	@ 0x28
90019fcc:	4604      	mov	r4, r0
90019fce:	460d      	mov	r5, r1
90019fd0:	b113      	cbz	r3, 90019fd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90019fd2:	790b      	ldrb	r3, [r1, #4]
90019fd4:	2b00      	cmp	r3, #0
90019fd6:	d044      	beq.n	9001a062 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019fd8:	f104 0804 	add.w	r8, r4, #4
90019fdc:	a803      	add	r0, sp, #12
90019fde:	4641      	mov	r1, r8
90019fe0:	f7ff fb4a 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019fe4:	792b      	ldrb	r3, [r5, #4]
90019fe6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90019fea:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90019fee:	b983      	cbnz	r3, 9001a012 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90019ff0:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90019ff4:	892a      	ldrh	r2, [r5, #8]
90019ff6:	88e9      	ldrh	r1, [r5, #6]
90019ff8:	4640      	mov	r0, r8
90019ffa:	1b92      	subs	r2, r2, r6
90019ffc:	9301      	str	r3, [sp, #4]
90019ffe:	1bc9      	subs	r1, r1, r7
9001a000:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001a004:	b212      	sxth	r2, r2
9001a006:	9300      	str	r3, [sp, #0]
9001a008:	b209      	sxth	r1, r1
9001a00a:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001a00e:	f7f8 f803 	bl	90012018 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001a012:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001a014:	b329      	cbz	r1, 9001a062 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001a016:	a805      	add	r0, sp, #20
9001a018:	f7ff fb2e 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a01c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001a020:	792b      	ldrb	r3, [r5, #4]
9001a022:	a907      	add	r1, sp, #28
9001a024:	1abf      	subs	r7, r7, r2
9001a026:	88ea      	ldrh	r2, [r5, #6]
9001a028:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001a02a:	4417      	add	r7, r2
9001a02c:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001a02e:	f88d 3020 	strb.w	r3, [sp, #32]
9001a032:	4417      	add	r7, r2
9001a034:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001a038:	1ab6      	subs	r6, r6, r2
9001a03a:	892a      	ldrh	r2, [r5, #8]
9001a03c:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
9001a040:	4416      	add	r6, r2
9001a042:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001a044:	4416      	add	r6, r2
9001a046:	4a08      	ldr	r2, [pc, #32]	@ (9001a068 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001a048:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001a04c:	2600      	movs	r6, #0
9001a04e:	9207      	str	r2, [sp, #28]
9001a050:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001a054:	6803      	ldr	r3, [r0, #0]
9001a056:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a058:	4798      	blx	r3
9001a05a:	792b      	ldrb	r3, [r5, #4]
9001a05c:	b10b      	cbz	r3, 9001a062 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001a05e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
9001a062:	b00a      	add	sp, #40	@ 0x28
9001a064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a068:	9002e810 	.word	0x9002e810

9001a06c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001a06c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a070:	460c      	mov	r4, r1
9001a072:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001a074:	b088      	sub	sp, #32
9001a076:	4605      	mov	r5, r0
9001a078:	2900      	cmp	r1, #0
9001a07a:	d06d      	beq.n	9001a158 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001a07c:	4668      	mov	r0, sp
9001a07e:	f7ff fafb 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a082:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
9001a084:	88e3      	ldrh	r3, [r4, #6]
9001a086:	f9bd 8000 	ldrsh.w	r8, [sp]
9001a08a:	440b      	add	r3, r1
9001a08c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
9001a090:	b21b      	sxth	r3, r3
9001a092:	4543      	cmp	r3, r8
9001a094:	db31      	blt.n	9001a0fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a096:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001a09a:	44c4      	add	ip, r8
9001a09c:	fa0f fc8c 	sxth.w	ip, ip
9001a0a0:	4563      	cmp	r3, ip
9001a0a2:	da2a      	bge.n	9001a0fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0a4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
9001a0a6:	8926      	ldrh	r6, [r4, #8]
9001a0a8:	4416      	add	r6, r2
9001a0aa:	b236      	sxth	r6, r6
9001a0ac:	42be      	cmp	r6, r7
9001a0ae:	db24      	blt.n	9001a0fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0b0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001a0b4:	4438      	add	r0, r7
9001a0b6:	b200      	sxth	r0, r0
9001a0b8:	4286      	cmp	r6, r0
9001a0ba:	da1e      	bge.n	9001a0fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0bc:	8963      	ldrh	r3, [r4, #10]
9001a0be:	4419      	add	r1, r3
9001a0c0:	b209      	sxth	r1, r1
9001a0c2:	4541      	cmp	r1, r8
9001a0c4:	db08      	blt.n	9001a0d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001a0c6:	4561      	cmp	r1, ip
9001a0c8:	da06      	bge.n	9001a0d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001a0ca:	89a3      	ldrh	r3, [r4, #12]
9001a0cc:	441a      	add	r2, r3
9001a0ce:	b212      	sxth	r2, r2
9001a0d0:	42ba      	cmp	r2, r7
9001a0d2:	db01      	blt.n	9001a0d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001a0d4:	4282      	cmp	r2, r0
9001a0d6:	db10      	blt.n	9001a0fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0d8:	4b21      	ldr	r3, [pc, #132]	@ (9001a160 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001a0da:	a904      	add	r1, sp, #16
9001a0dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001a0de:	9304      	str	r3, [sp, #16]
9001a0e0:	2302      	movs	r3, #2
9001a0e2:	f88d 3014 	strb.w	r3, [sp, #20]
9001a0e6:	2300      	movs	r3, #0
9001a0e8:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a0ec:	f8ad 3018 	strh.w	r3, [sp, #24]
9001a0f0:	f8ad 301a 	strh.w	r3, [sp, #26]
9001a0f4:	6803      	ldr	r3, [r0, #0]
9001a0f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a0f8:	4798      	blx	r3
9001a0fa:	1d29      	adds	r1, r5, #4
9001a0fc:	a802      	add	r0, sp, #8
9001a0fe:	f7ff fabb 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a102:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a106:	88e0      	ldrh	r0, [r4, #6]
9001a108:	eba3 0808 	sub.w	r8, r3, r8
9001a10c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a110:	7921      	ldrb	r1, [r4, #4]
9001a112:	fa1f f888 	uxth.w	r8, r8
9001a116:	1bdf      	subs	r7, r3, r7
9001a118:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001a11c:	b2bb      	uxth	r3, r7
9001a11e:	4440      	add	r0, r8
9001a120:	8922      	ldrh	r2, [r4, #8]
9001a122:	8967      	ldrh	r7, [r4, #10]
9001a124:	4460      	add	r0, ip
9001a126:	89a4      	ldrh	r4, [r4, #12]
9001a128:	441a      	add	r2, r3
9001a12a:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001a12c:	44b8      	add	r8, r7
9001a12e:	4423      	add	r3, r4
9001a130:	f8ad 0016 	strh.w	r0, [sp, #22]
9001a134:	4432      	add	r2, r6
9001a136:	44e0      	add	r8, ip
9001a138:	4433      	add	r3, r6
9001a13a:	4c0a      	ldr	r4, [pc, #40]	@ (9001a164 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001a13c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001a13e:	f88d 1014 	strb.w	r1, [sp, #20]
9001a142:	a904      	add	r1, sp, #16
9001a144:	9404      	str	r4, [sp, #16]
9001a146:	f8ad 2018 	strh.w	r2, [sp, #24]
9001a14a:	f8ad 801a 	strh.w	r8, [sp, #26]
9001a14e:	f8ad 301c 	strh.w	r3, [sp, #28]
9001a152:	6803      	ldr	r3, [r0, #0]
9001a154:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a156:	4798      	blx	r3
9001a158:	b008      	add	sp, #32
9001a15a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a15e:	bf00      	nop
9001a160:	9002e810 	.word	0x9002e810
9001a164:	9002e824 	.word	0x9002e824

9001a168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001a168:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001a16a:	4604      	mov	r4, r0
9001a16c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001a170:	3201      	adds	r2, #1
9001a172:	d112      	bne.n	9001a19a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001a174:	2500      	movs	r5, #0
9001a176:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001a17a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a17e:	6803      	ldr	r3, [r0, #0]
9001a180:	9500      	str	r5, [sp, #0]
9001a182:	466d      	mov	r5, sp
9001a184:	f8ad 1004 	strh.w	r1, [sp, #4]
9001a188:	f8ad 2006 	strh.w	r2, [sp, #6]
9001a18c:	4629      	mov	r1, r5
9001a18e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001a190:	4798      	blx	r3
9001a192:	e895 0003 	ldmia.w	r5, {r0, r1}
9001a196:	e884 0003 	stmia.w	r4, {r0, r1}
9001a19a:	4620      	mov	r0, r4
9001a19c:	b003      	add	sp, #12
9001a19e:	bd30      	pop	{r4, r5, pc}

9001a1a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001a1a0:	b513      	push	{r0, r1, r4, lr}
9001a1a2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001a1a6:	4604      	mov	r4, r0
9001a1a8:	3301      	adds	r3, #1
9001a1aa:	d109      	bne.n	9001a1c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001a1ac:	4601      	mov	r1, r0
9001a1ae:	4668      	mov	r0, sp
9001a1b0:	f7ff fa62 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a1b4:	f8bd 3000 	ldrh.w	r3, [sp]
9001a1b8:	8423      	strh	r3, [r4, #32]
9001a1ba:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a1be:	8463      	strh	r3, [r4, #34]	@ 0x22
9001a1c0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001a1c4:	b002      	add	sp, #8
9001a1c6:	bd10      	pop	{r4, pc}

9001a1c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001a1c8:	b513      	push	{r0, r1, r4, lr}
9001a1ca:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
9001a1ce:	4604      	mov	r4, r0
9001a1d0:	3301      	adds	r3, #1
9001a1d2:	d109      	bne.n	9001a1e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001a1d4:	4601      	mov	r1, r0
9001a1d6:	4668      	mov	r0, sp
9001a1d8:	f7ff fa4e 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a1dc:	f8bd 3000 	ldrh.w	r3, [sp]
9001a1e0:	8423      	strh	r3, [r4, #32]
9001a1e2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a1e6:	8463      	strh	r3, [r4, #34]	@ 0x22
9001a1e8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
9001a1ec:	b002      	add	sp, #8
9001a1ee:	bd10      	pop	{r4, pc}

9001a1f0 <_ZN8touchgfx6ScreenC1Ev>:
9001a1f0:	b570      	push	{r4, r5, r6, lr}
9001a1f2:	4b17      	ldr	r3, [pc, #92]	@ (9001a250 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001a1f4:	4605      	mov	r5, r0
9001a1f6:	4a17      	ldr	r2, [pc, #92]	@ (9001a254 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001a1f8:	2101      	movs	r1, #1
9001a1fa:	f845 3b04 	str.w	r3, [r5], #4
9001a1fe:	2300      	movs	r3, #0
9001a200:	6042      	str	r2, [r0, #4]
9001a202:	4604      	mov	r4, r0
9001a204:	8103      	strh	r3, [r0, #8]
9001a206:	8143      	strh	r3, [r0, #10]
9001a208:	8183      	strh	r3, [r0, #12]
9001a20a:	81c3      	strh	r3, [r0, #14]
9001a20c:	8203      	strh	r3, [r0, #16]
9001a20e:	8243      	strh	r3, [r0, #18]
9001a210:	8283      	strh	r3, [r0, #20]
9001a212:	82c3      	strh	r3, [r0, #22]
9001a214:	6203      	str	r3, [r0, #32]
9001a216:	8483      	strh	r3, [r0, #36]	@ 0x24
9001a218:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001a21a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001a21e:	6343      	str	r3, [r0, #52]	@ 0x34
9001a220:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001a224:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001a228:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001a22c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
9001a230:	4b09      	ldr	r3, [pc, #36]	@ (9001a258 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001a232:	4628      	mov	r0, r5
9001a234:	f9b3 6000 	ldrsh.w	r6, [r3]
9001a238:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001a23a:	4a08      	ldr	r2, [pc, #32]	@ (9001a25c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001a23c:	f9b2 1000 	ldrsh.w	r1, [r2]
9001a240:	4798      	blx	r3
9001a242:	6863      	ldr	r3, [r4, #4]
9001a244:	4628      	mov	r0, r5
9001a246:	4631      	mov	r1, r6
9001a248:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001a24a:	4798      	blx	r3
9001a24c:	4620      	mov	r0, r4
9001a24e:	bd70      	pop	{r4, r5, r6, pc}
9001a250:	9002e84c 	.word	0x9002e84c
9001a254:	9002e258 	.word	0x9002e258
9001a258:	24023402 	.word	0x24023402
9001a25c:	24023400 	.word	0x24023400

9001a260 <_ZN8touchgfx6Screen4drawEv>:
9001a260:	4b09      	ldr	r3, [pc, #36]	@ (9001a288 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001a262:	b507      	push	{r0, r1, r2, lr}
9001a264:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a268:	2100      	movs	r1, #0
9001a26a:	4b08      	ldr	r3, [pc, #32]	@ (9001a28c <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001a26c:	9100      	str	r1, [sp, #0]
9001a26e:	4669      	mov	r1, sp
9001a270:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a274:	f8ad 2004 	strh.w	r2, [sp, #4]
9001a278:	f8ad 3006 	strh.w	r3, [sp, #6]
9001a27c:	6803      	ldr	r3, [r0, #0]
9001a27e:	689b      	ldr	r3, [r3, #8]
9001a280:	4798      	blx	r3
9001a282:	b003      	add	sp, #12
9001a284:	f85d fb04 	ldr.w	pc, [sp], #4
9001a288:	24023400 	.word	0x24023400
9001a28c:	24023402 	.word	0x24023402

9001a290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001a290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a294:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001a298:	b089      	sub	sp, #36	@ 0x24
9001a29a:	4680      	mov	r8, r0
9001a29c:	460c      	mov	r4, r1
9001a29e:	2b00      	cmp	r3, #0
9001a2a0:	4615      	mov	r5, r2
9001a2a2:	dd0e      	ble.n	9001a2c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a2a4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001a2a8:	2b00      	cmp	r3, #0
9001a2aa:	dd0a      	ble.n	9001a2c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a2ac:	4628      	mov	r0, r5
9001a2ae:	f7ff ff5b 	bl	9001a168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a2b2:	4621      	mov	r1, r4
9001a2b4:	f7fd ffed 	bl	90018292 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001a2b8:	69eb      	ldr	r3, [r5, #28]
9001a2ba:	b928      	cbnz	r0, 9001a2c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001a2bc:	461d      	mov	r5, r3
9001a2be:	2b00      	cmp	r3, #0
9001a2c0:	d1f4      	bne.n	9001a2ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001a2c2:	b009      	add	sp, #36	@ 0x24
9001a2c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a2c8:	ae04      	add	r6, sp, #16
9001a2ca:	2b00      	cmp	r3, #0
9001a2cc:	f000 80b5 	beq.w	9001a43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a2d0:	682b      	ldr	r3, [r5, #0]
9001a2d2:	4629      	mov	r1, r5
9001a2d4:	a802      	add	r0, sp, #8
9001a2d6:	68db      	ldr	r3, [r3, #12]
9001a2d8:	4798      	blx	r3
9001a2da:	4628      	mov	r0, r5
9001a2dc:	f7ff ff60 	bl	9001a1a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001a2e0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001a2e4:	4407      	add	r7, r0
9001a2e6:	4628      	mov	r0, r5
9001a2e8:	f7ff ff6e 	bl	9001a1c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001a2ec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a2f0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001a2f4:	b23f      	sxth	r7, r7
9001a2f6:	4418      	add	r0, r3
9001a2f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001a2fc:	4621      	mov	r1, r4
9001a2fe:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a302:	f8ad 0012 	strh.w	r0, [sp, #18]
9001a306:	4630      	mov	r0, r6
9001a308:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a30c:	f8ad 7010 	strh.w	r7, [sp, #16]
9001a310:	f7f7 ff64 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
9001a314:	4628      	mov	r0, r5
9001a316:	f7ff ff27 	bl	9001a168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a31a:	ab06      	add	r3, sp, #24
9001a31c:	4602      	mov	r2, r0
9001a31e:	e896 0003 	ldmia.w	r6, {r0, r1}
9001a322:	e883 0003 	stmia.w	r3, {r0, r1}
9001a326:	4611      	mov	r1, r2
9001a328:	4618      	mov	r0, r3
9001a32a:	f7f7 ff57 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
9001a32e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001a332:	f9b4 1000 	ldrsh.w	r1, [r4]
9001a336:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001a33a:	4299      	cmp	r1, r3
9001a33c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001a340:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001a344:	d10b      	bne.n	9001a35e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a346:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a34a:	4552      	cmp	r2, sl
9001a34c:	d107      	bne.n	9001a35e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a34e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001a352:	455a      	cmp	r2, fp
9001a354:	d103      	bne.n	9001a35e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a356:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001a35a:	454a      	cmp	r2, r9
9001a35c:	d06d      	beq.n	9001a43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a35e:	f1bb 0f00 	cmp.w	fp, #0
9001a362:	dd65      	ble.n	9001a430 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001a364:	f1b9 0f00 	cmp.w	r9, #0
9001a368:	dd62      	ble.n	9001a430 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001a36a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a36e:	fa1f f08a 	uxth.w	r0, sl
9001a372:	4552      	cmp	r2, sl
9001a374:	9000      	str	r0, [sp, #0]
9001a376:	da12      	bge.n	9001a39e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001a378:	9301      	str	r3, [sp, #4]
9001a37a:	9b00      	ldr	r3, [sp, #0]
9001a37c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001a380:	f8ad 2012 	strh.w	r2, [sp, #18]
9001a384:	1a9a      	subs	r2, r3, r2
9001a386:	f8ad 1010 	strh.w	r1, [sp, #16]
9001a38a:	4631      	mov	r1, r6
9001a38c:	f8ad 0014 	strh.w	r0, [sp, #20]
9001a390:	4640      	mov	r0, r8
9001a392:	f8ad 2016 	strh.w	r2, [sp, #22]
9001a396:	69ea      	ldr	r2, [r5, #28]
9001a398:	f7ff ff7a 	bl	9001a290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a39c:	9b01      	ldr	r3, [sp, #4]
9001a39e:	f9b4 2000 	ldrsh.w	r2, [r4]
9001a3a2:	b29f      	uxth	r7, r3
9001a3a4:	429a      	cmp	r2, r3
9001a3a6:	da0d      	bge.n	9001a3c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001a3a8:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a3ac:	1aba      	subs	r2, r7, r2
9001a3ae:	f8ad a012 	strh.w	sl, [sp, #18]
9001a3b2:	4631      	mov	r1, r6
9001a3b4:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a3b8:	4640      	mov	r0, r8
9001a3ba:	f8ad 9016 	strh.w	r9, [sp, #22]
9001a3be:	69ea      	ldr	r2, [r5, #28]
9001a3c0:	f7ff ff66 	bl	9001a290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a3c4:	8822      	ldrh	r2, [r4, #0]
9001a3c6:	445f      	add	r7, fp
9001a3c8:	88a3      	ldrh	r3, [r4, #4]
9001a3ca:	b2bf      	uxth	r7, r7
9001a3cc:	4413      	add	r3, r2
9001a3ce:	b23a      	sxth	r2, r7
9001a3d0:	b29b      	uxth	r3, r3
9001a3d2:	b219      	sxth	r1, r3
9001a3d4:	4291      	cmp	r1, r2
9001a3d6:	dd0d      	ble.n	9001a3f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001a3d8:	1bdb      	subs	r3, r3, r7
9001a3da:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a3de:	f8ad a012 	strh.w	sl, [sp, #18]
9001a3e2:	4631      	mov	r1, r6
9001a3e4:	f8ad 3014 	strh.w	r3, [sp, #20]
9001a3e8:	4640      	mov	r0, r8
9001a3ea:	f8ad 9016 	strh.w	r9, [sp, #22]
9001a3ee:	69ea      	ldr	r2, [r5, #28]
9001a3f0:	f7ff ff4e 	bl	9001a290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a3f4:	88e2      	ldrh	r2, [r4, #6]
9001a3f6:	8863      	ldrh	r3, [r4, #2]
9001a3f8:	4413      	add	r3, r2
9001a3fa:	9a00      	ldr	r2, [sp, #0]
9001a3fc:	444a      	add	r2, r9
9001a3fe:	b29b      	uxth	r3, r3
9001a400:	fa1f f982 	uxth.w	r9, r2
9001a404:	b219      	sxth	r1, r3
9001a406:	fa0f f289 	sxth.w	r2, r9
9001a40a:	428a      	cmp	r2, r1
9001a40c:	da15      	bge.n	9001a43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a40e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001a412:	eba3 0309 	sub.w	r3, r3, r9
9001a416:	f9b4 0000 	ldrsh.w	r0, [r4]
9001a41a:	f8ad 1014 	strh.w	r1, [sp, #20]
9001a41e:	4631      	mov	r1, r6
9001a420:	f8ad 0010 	strh.w	r0, [sp, #16]
9001a424:	f8ad 2012 	strh.w	r2, [sp, #18]
9001a428:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a42c:	69ea      	ldr	r2, [r5, #28]
9001a42e:	e001      	b.n	9001a434 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001a430:	69ea      	ldr	r2, [r5, #28]
9001a432:	4621      	mov	r1, r4
9001a434:	4640      	mov	r0, r8
9001a436:	f7ff ff2b 	bl	9001a290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a43a:	4628      	mov	r0, r5
9001a43c:	f7ff fe94 	bl	9001a168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a440:	6861      	ldr	r1, [r4, #4]
9001a442:	4602      	mov	r2, r0
9001a444:	4633      	mov	r3, r6
9001a446:	6820      	ldr	r0, [r4, #0]
9001a448:	c303      	stmia	r3!, {r0, r1}
9001a44a:	4611      	mov	r1, r2
9001a44c:	4630      	mov	r0, r6
9001a44e:	f7f7 fec5 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
9001a452:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001a456:	2b00      	cmp	r3, #0
9001a458:	f77f af33 	ble.w	9001a2c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a45c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001a460:	2b00      	cmp	r3, #0
9001a462:	f77f af2e 	ble.w	9001a2c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a466:	4628      	mov	r0, r5
9001a468:	f7ff fe9a 	bl	9001a1a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001a46c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001a470:	1a18      	subs	r0, r3, r0
9001a472:	f8ad 0010 	strh.w	r0, [sp, #16]
9001a476:	4628      	mov	r0, r5
9001a478:	f7ff fea6 	bl	9001a1c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001a47c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001a480:	4631      	mov	r1, r6
9001a482:	1a18      	subs	r0, r3, r0
9001a484:	f8ad 0012 	strh.w	r0, [sp, #18]
9001a488:	4628      	mov	r0, r5
9001a48a:	682b      	ldr	r3, [r5, #0]
9001a48c:	689b      	ldr	r3, [r3, #8]
9001a48e:	4798      	blx	r3
9001a490:	e717      	b.n	9001a2c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001a492 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001a492:	b570      	push	{r4, r5, r6, lr}
9001a494:	1d06      	adds	r6, r0, #4
9001a496:	b086      	sub	sp, #24
9001a498:	460c      	mov	r4, r1
9001a49a:	2300      	movs	r3, #0
9001a49c:	4631      	mov	r1, r6
9001a49e:	4605      	mov	r5, r0
9001a4a0:	a802      	add	r0, sp, #8
9001a4a2:	9301      	str	r3, [sp, #4]
9001a4a4:	f7ff f8e8 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a4a8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a4ac:	8822      	ldrh	r2, [r4, #0]
9001a4ae:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001a4b2:	1ad2      	subs	r2, r2, r3
9001a4b4:	8863      	ldrh	r3, [r4, #2]
9001a4b6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001a4ba:	1a5b      	subs	r3, r3, r1
9001a4bc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001a4c0:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a4c4:	aa01      	add	r2, sp, #4
9001a4c6:	f8ad 0014 	strh.w	r0, [sp, #20]
9001a4ca:	4630      	mov	r0, r6
9001a4cc:	f8ad 1016 	strh.w	r1, [sp, #22]
9001a4d0:	a904      	add	r1, sp, #16
9001a4d2:	f8ad 3012 	strh.w	r3, [sp, #18]
9001a4d6:	f7f7 ff59 	bl	9001238c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001a4da:	9a01      	ldr	r2, [sp, #4]
9001a4dc:	b11a      	cbz	r2, 9001a4e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001a4de:	4621      	mov	r1, r4
9001a4e0:	4628      	mov	r0, r5
9001a4e2:	f7ff fed5 	bl	9001a290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a4e6:	b006      	add	sp, #24
9001a4e8:	bd70      	pop	{r4, r5, r6, pc}

9001a4ea <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001a4ea:	4602      	mov	r2, r0
9001a4ec:	b530      	push	{r4, r5, lr}
9001a4ee:	4604      	mov	r4, r0
9001a4f0:	b085      	sub	sp, #20
9001a4f2:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001a4f6:	460d      	mov	r5, r1
9001a4f8:	466b      	mov	r3, sp
9001a4fa:	6851      	ldr	r1, [r2, #4]
9001a4fc:	c303      	stmia	r3!, {r0, r1}
9001a4fe:	4629      	mov	r1, r5
9001a500:	4668      	mov	r0, sp
9001a502:	f7f7 fe6b 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
9001a506:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001a50a:	b12b      	cbz	r3, 9001a518 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001a50c:	4669      	mov	r1, sp
9001a50e:	4620      	mov	r0, r4
9001a510:	f7ff ffbf 	bl	9001a492 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001a514:	b005      	add	sp, #20
9001a516:	bd30      	pop	{r4, r5, pc}
9001a518:	3404      	adds	r4, #4
9001a51a:	a802      	add	r0, sp, #8
9001a51c:	4621      	mov	r1, r4
9001a51e:	f7ff f8ab 	bl	90019678 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a522:	f8bd 3000 	ldrh.w	r3, [sp]
9001a526:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001a52a:	4669      	mov	r1, sp
9001a52c:	4620      	mov	r0, r4
9001a52e:	1a9b      	subs	r3, r3, r2
9001a530:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001a534:	f8ad 3000 	strh.w	r3, [sp]
9001a538:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a53c:	1a9b      	subs	r3, r3, r2
9001a53e:	f8ad 3002 	strh.w	r3, [sp, #2]
9001a542:	f7f7 feea 	bl	9001231a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001a546:	e7e5      	b.n	9001a514 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001a548 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001a548:	460b      	mov	r3, r1
9001a54a:	680a      	ldr	r2, [r1, #0]
9001a54c:	1d01      	adds	r1, r0, #4
9001a54e:	6992      	ldr	r2, [r2, #24]
9001a550:	4618      	mov	r0, r3
9001a552:	4710      	bx	r2

9001a554 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
9001a554:	4298      	cmp	r0, r3
9001a556:	d200      	bcs.n	9001a55a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001a558:	b913      	cbnz	r3, 9001a560 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001a55a:	440a      	add	r2, r1
9001a55c:	b210      	sxth	r0, r2
9001a55e:	4770      	bx	lr
9001a560:	ee07 0a90 	vmov	s15, r0
9001a564:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001a568:	ee07 3a90 	vmov	s15, r3
9001a56c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a570:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9001a574:	ee07 2a90 	vmov	s15, r2
9001a578:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a57c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9001a580:	ee07 1a90 	vmov	s15, r1
9001a584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a588:	ee37 7a66 	vsub.f32	s14, s14, s13
9001a58c:	ee67 5a07 	vmul.f32	s11, s14, s14
9001a590:	eee5 6a87 	vfma.f32	s13, s11, s14
9001a594:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
9001a598:	eee6 7a26 	vfma.f32	s15, s12, s13
9001a59c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a5a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a5a4:	bfcc      	ite	gt
9001a5a6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001a5aa:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001a5ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001a5b2:	ee17 3a90 	vmov	r3, s15
9001a5b6:	b218      	sxth	r0, r3
9001a5b8:	4770      	bx	lr

9001a5ba <_ZN8touchgfx12TextProviderC1Ev>:
9001a5ba:	b538      	push	{r3, r4, r5, lr}
9001a5bc:	2500      	movs	r5, #0
9001a5be:	2302      	movs	r3, #2
9001a5c0:	4604      	mov	r4, r0
9001a5c2:	220e      	movs	r2, #14
9001a5c4:	7403      	strb	r3, [r0, #16]
9001a5c6:	4629      	mov	r1, r5
9001a5c8:	6145      	str	r5, [r0, #20]
9001a5ca:	7605      	strb	r5, [r0, #24]
9001a5cc:	83c5      	strh	r5, [r0, #30]
9001a5ce:	8405      	strh	r5, [r0, #32]
9001a5d0:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001a5d2:	8705      	strh	r5, [r0, #56]	@ 0x38
9001a5d4:	87c5      	strh	r5, [r0, #62]	@ 0x3e
9001a5d6:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
9001a5da:	e9c0 5500 	strd	r5, r5, [r0]
9001a5de:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001a5e2:	304c      	adds	r0, #76	@ 0x4c
9001a5e4:	f010 fbb6 	bl	9002ad54 <memset>
9001a5e8:	2301      	movs	r3, #1
9001a5ea:	4620      	mov	r0, r4
9001a5ec:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001a5f0:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001a5f4:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
9001a5f8:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001a5fc:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001a600:	f7eb fff6 	bl	900065f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001a604:	4620      	mov	r0, r4
9001a606:	bd38      	pop	{r3, r4, r5, pc}

9001a608 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001a608:	b530      	push	{r4, r5, lr}
9001a60a:	2500      	movs	r5, #0
9001a60c:	2401      	movs	r4, #1
9001a60e:	6843      	ldr	r3, [r0, #4]
9001a610:	b913      	cbnz	r3, 9001a618 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001a612:	6803      	ldr	r3, [r0, #0]
9001a614:	b313      	cbz	r3, 9001a65c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a616:	6043      	str	r3, [r0, #4]
9001a618:	7e03      	ldrb	r3, [r0, #24]
9001a61a:	b143      	cbz	r3, 9001a62e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001a61c:	6943      	ldr	r3, [r0, #20]
9001a61e:	b12b      	cbz	r3, 9001a62c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a620:	881a      	ldrh	r2, [r3, #0]
9001a622:	b11a      	cbz	r2, 9001a62c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a624:	1c9a      	adds	r2, r3, #2
9001a626:	6142      	str	r2, [r0, #20]
9001a628:	8818      	ldrh	r0, [r3, #0]
9001a62a:	bd30      	pop	{r4, r5, pc}
9001a62c:	7605      	strb	r5, [r0, #24]
9001a62e:	6843      	ldr	r3, [r0, #4]
9001a630:	8819      	ldrh	r1, [r3, #0]
9001a632:	b199      	cbz	r1, 9001a65c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a634:	1c9a      	adds	r2, r3, #2
9001a636:	2902      	cmp	r1, #2
9001a638:	6042      	str	r2, [r0, #4]
9001a63a:	d1f5      	bne.n	9001a628 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001a63c:	7c03      	ldrb	r3, [r0, #16]
9001a63e:	2b01      	cmp	r3, #1
9001a640:	d8e5      	bhi.n	9001a60e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a642:	1c5a      	adds	r2, r3, #1
9001a644:	3302      	adds	r3, #2
9001a646:	7402      	strb	r2, [r0, #16]
9001a648:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001a64c:	6143      	str	r3, [r0, #20]
9001a64e:	2b00      	cmp	r3, #0
9001a650:	d0dd      	beq.n	9001a60e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a652:	881b      	ldrh	r3, [r3, #0]
9001a654:	2b00      	cmp	r3, #0
9001a656:	d0da      	beq.n	9001a60e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a658:	7604      	strb	r4, [r0, #24]
9001a65a:	e7d8      	b.n	9001a60e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a65c:	2000      	movs	r0, #0
9001a65e:	e7e4      	b.n	9001a62a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001a660 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001a660:	6001      	str	r1, [r0, #0]
9001a662:	2100      	movs	r1, #0
9001a664:	b430      	push	{r4, r5}
9001a666:	6041      	str	r1, [r0, #4]
9001a668:	6815      	ldr	r5, [r2, #0]
9001a66a:	6085      	str	r5, [r0, #8]
9001a66c:	6852      	ldr	r2, [r2, #4]
9001a66e:	6443      	str	r3, [r0, #68]	@ 0x44
9001a670:	9b02      	ldr	r3, [sp, #8]
9001a672:	60c2      	str	r2, [r0, #12]
9001a674:	7401      	strb	r1, [r0, #16]
9001a676:	6141      	str	r1, [r0, #20]
9001a678:	7601      	strb	r1, [r0, #24]
9001a67a:	8701      	strh	r1, [r0, #56]	@ 0x38
9001a67c:	8401      	strh	r1, [r0, #32]
9001a67e:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001a682:	6483      	str	r3, [r0, #72]	@ 0x48
9001a684:	bc30      	pop	{r4, r5}
9001a686:	f7eb bfb3 	b.w	900065f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001a68a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001a68a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a68c:	4605      	mov	r5, r0
9001a68e:	4608      	mov	r0, r1
9001a690:	b1f1      	cbz	r1, 9001a6d0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001a692:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
9001a696:	460b      	mov	r3, r1
9001a698:	f101 0708 	add.w	r7, r1, #8
9001a69c:	4622      	mov	r2, r4
9001a69e:	6818      	ldr	r0, [r3, #0]
9001a6a0:	3308      	adds	r3, #8
9001a6a2:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a6a6:	4626      	mov	r6, r4
9001a6a8:	42bb      	cmp	r3, r7
9001a6aa:	c603      	stmia	r6!, {r0, r1}
9001a6ac:	4634      	mov	r4, r6
9001a6ae:	d1f6      	bne.n	9001a69e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001a6b0:	6818      	ldr	r0, [r3, #0]
9001a6b2:	6030      	str	r0, [r6, #0]
9001a6b4:	4610      	mov	r0, r2
9001a6b6:	889b      	ldrh	r3, [r3, #4]
9001a6b8:	80b3      	strh	r3, [r6, #4]
9001a6ba:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001a6be:	015b      	lsls	r3, r3, #5
9001a6c0:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001a6c4:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
9001a6c8:	430b      	orrs	r3, r1
9001a6ca:	425b      	negs	r3, r3
9001a6cc:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001a6d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001a6d2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001a6d2:	b538      	push	{r3, r4, r5, lr}
9001a6d4:	460c      	mov	r4, r1
9001a6d6:	6811      	ldr	r1, [r2, #0]
9001a6d8:	4610      	mov	r0, r2
9001a6da:	68cd      	ldr	r5, [r1, #12]
9001a6dc:	4619      	mov	r1, r3
9001a6de:	47a8      	blx	r5
9001a6e0:	2800      	cmp	r0, #0
9001a6e2:	bf08      	it	eq
9001a6e4:	4620      	moveq	r0, r4
9001a6e6:	bd38      	pop	{r3, r4, r5, pc}

9001a6e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001a6e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001a6ea:	4604      	mov	r4, r0
9001a6ec:	4615      	mov	r5, r2
9001a6ee:	4608      	mov	r0, r1
9001a6f0:	b93a      	cbnz	r2, 9001a702 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001a6f2:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001a6f6:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
9001a6fa:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
9001a6fe:	4628      	mov	r0, r5
9001a700:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001a702:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001a706:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
9001a70a:	8893      	ldrh	r3, [r2, #4]
9001a70c:	ea4f 160c 	mov.w	r6, ip, lsl #4
9001a710:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001a714:	79ee      	ldrb	r6, [r5, #7]
9001a716:	4316      	orrs	r6, r2
9001a718:	19da      	adds	r2, r3, r7
9001a71a:	b291      	uxth	r1, r2
9001a71c:	b2b7      	uxth	r7, r6
9001a71e:	291d      	cmp	r1, #29
9001a720:	d87b      	bhi.n	9001a81a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001a722:	2201      	movs	r2, #1
9001a724:	10f6      	asrs	r6, r6, #3
9001a726:	408a      	lsls	r2, r1
9001a728:	4974      	ldr	r1, [pc, #464]	@ (9001a8fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001a72a:	420a      	tst	r2, r1
9001a72c:	d12e      	bne.n	9001a78c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001a72e:	f412 7f60 	tst.w	r2, #896	@ 0x380
9001a732:	d072      	beq.n	9001a81a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001a734:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
9001a738:	462b      	mov	r3, r5
9001a73a:	f105 0e08 	add.w	lr, r5, #8
9001a73e:	4615      	mov	r5, r2
9001a740:	6818      	ldr	r0, [r3, #0]
9001a742:	3308      	adds	r3, #8
9001a744:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a748:	4694      	mov	ip, r2
9001a74a:	4573      	cmp	r3, lr
9001a74c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001a750:	4662      	mov	r2, ip
9001a752:	d1f5      	bne.n	9001a740 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001a754:	6818      	ldr	r0, [r3, #0]
9001a756:	f8cc 0000 	str.w	r0, [ip]
9001a75a:	889b      	ldrh	r3, [r3, #4]
9001a75c:	f8ac 3004 	strh.w	r3, [ip, #4]
9001a760:	b2b3      	uxth	r3, r6
9001a762:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9001a766:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
9001a76a:	1aca      	subs	r2, r1, r3
9001a76c:	1bcf      	subs	r7, r1, r7
9001a76e:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
9001a772:	b292      	uxth	r2, r2
9001a774:	1afb      	subs	r3, r7, r3
9001a776:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
9001a77a:	10d2      	asrs	r2, r2, #3
9001a77c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
9001a780:	4302      	orrs	r2, r0
9001a782:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
9001a786:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001a78a:	e7b8      	b.n	9001a6fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a78c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001a78e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a792:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
9001a794:	f640 6333 	movw	r3, #3635	@ 0xe33
9001a798:	4299      	cmp	r1, r3
9001a79a:	d110      	bne.n	9001a7be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
9001a79c:	6803      	ldr	r3, [r0, #0]
9001a79e:	68db      	ldr	r3, [r3, #12]
9001a7a0:	4798      	blx	r3
9001a7a2:	7b41      	ldrb	r1, [r0, #13]
9001a7a4:	00cb      	lsls	r3, r1, #3
9001a7a6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001a7aa:	7a03      	ldrb	r3, [r0, #8]
9001a7ac:	0648      	lsls	r0, r1, #25
9001a7ae:	ea43 0302 	orr.w	r3, r3, r2
9001a7b2:	bf44      	itt	mi
9001a7b4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a7b8:	b21b      	sxthmi	r3, r3
9001a7ba:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001a7be:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
9001a7c2:	462a      	mov	r2, r5
9001a7c4:	f105 0c08 	add.w	ip, r5, #8
9001a7c8:	443b      	add	r3, r7
9001a7ca:	4433      	add	r3, r6
9001a7cc:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
9001a7d0:	b29b      	uxth	r3, r3
9001a7d2:	4635      	mov	r5, r6
9001a7d4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001a7d8:	6810      	ldr	r0, [r2, #0]
9001a7da:	3208      	adds	r2, #8
9001a7dc:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001a7e0:	4637      	mov	r7, r6
9001a7e2:	4562      	cmp	r2, ip
9001a7e4:	c703      	stmia	r7!, {r0, r1}
9001a7e6:	463e      	mov	r6, r7
9001a7e8:	d1f6      	bne.n	9001a7d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
9001a7ea:	6810      	ldr	r0, [r2, #0]
9001a7ec:	6038      	str	r0, [r7, #0]
9001a7ee:	8892      	ldrh	r2, [r2, #4]
9001a7f0:	80ba      	strh	r2, [r7, #4]
9001a7f2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001a7f6:	10db      	asrs	r3, r3, #3
9001a7f8:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001a7fc:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001a800:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001a804:	4313      	orrs	r3, r2
9001a806:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
9001a80a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001a80e:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
9001a812:	1a9b      	subs	r3, r3, r2
9001a814:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
9001a818:	e771      	b.n	9001a6fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a81a:	f023 0204 	bic.w	r2, r3, #4
9001a81e:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001a822:	428a      	cmp	r2, r1
9001a824:	d003      	beq.n	9001a82e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001a826:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001a82a:	4293      	cmp	r3, r2
9001a82c:	d120      	bne.n	9001a870 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
9001a82e:	3b01      	subs	r3, #1
9001a830:	4602      	mov	r2, r0
9001a832:	4629      	mov	r1, r5
9001a834:	4620      	mov	r0, r4
9001a836:	b29b      	uxth	r3, r3
9001a838:	f7ff ff4b 	bl	9001a6d2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a83c:	7b41      	ldrb	r1, [r0, #13]
9001a83e:	00cb      	lsls	r3, r1, #3
9001a840:	0649      	lsls	r1, r1, #25
9001a842:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001a846:	7a03      	ldrb	r3, [r0, #8]
9001a848:	ea43 0302 	orr.w	r3, r3, r2
9001a84c:	bf44      	itt	mi
9001a84e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a852:	b21b      	sxthmi	r3, r3
9001a854:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001a858:	7b6b      	ldrb	r3, [r5, #13]
9001a85a:	7aaa      	ldrb	r2, [r5, #10]
9001a85c:	005b      	lsls	r3, r3, #1
9001a85e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001a862:	4313      	orrs	r3, r2
9001a864:	115a      	asrs	r2, r3, #5
9001a866:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001a86a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001a86e:	e035      	b.n	9001a8dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
9001a870:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001a874:	f01c 0f40 	tst.w	ip, #64	@ 0x40
9001a878:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001a87c:	7a2a      	ldrb	r2, [r5, #8]
9001a87e:	ea42 0201 	orr.w	r2, r2, r1
9001a882:	f640 6109 	movw	r1, #3593	@ 0xe09
9001a886:	bf1c      	itt	ne
9001a888:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
9001a88c:	b212      	sxthne	r2, r2
9001a88e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001a892:	f023 0210 	bic.w	r2, r3, #16
9001a896:	428a      	cmp	r2, r1
9001a898:	d003      	beq.n	9001a8a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001a89a:	f640 6213 	movw	r2, #3603	@ 0xe13
9001a89e:	4293      	cmp	r3, r2
9001a8a0:	d129      	bne.n	9001a8f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001a8a2:	7b6e      	ldrb	r6, [r5, #13]
9001a8a4:	4629      	mov	r1, r5
9001a8a6:	0076      	lsls	r6, r6, #1
9001a8a8:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001a8ac:	7aae      	ldrb	r6, [r5, #10]
9001a8ae:	4316      	orrs	r6, r2
9001a8b0:	f640 6213 	movw	r2, #3603	@ 0xe13
9001a8b4:	4293      	cmp	r3, r2
9001a8b6:	4602      	mov	r2, r0
9001a8b8:	4620      	mov	r0, r4
9001a8ba:	bf16      	itet	ne
9001a8bc:	f103 33ff 	addne.w	r3, r3, #4294967295	@ 0xffffffff
9001a8c0:	f640 630c 	movweq	r3, #3596	@ 0xe0c
9001a8c4:	b29b      	uxthne	r3, r3
9001a8c6:	f7ff ff04 	bl	9001a6d2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a8ca:	7b43      	ldrb	r3, [r0, #13]
9001a8cc:	7a82      	ldrb	r2, [r0, #10]
9001a8ce:	005b      	lsls	r3, r3, #1
9001a8d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001a8d4:	4313      	orrs	r3, r2
9001a8d6:	1af6      	subs	r6, r6, r3
9001a8d8:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
9001a8dc:	7b69      	ldrb	r1, [r5, #13]
9001a8de:	00cb      	lsls	r3, r1, #3
9001a8e0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001a8e4:	7a2b      	ldrb	r3, [r5, #8]
9001a8e6:	4313      	orrs	r3, r2
9001a8e8:	064a      	lsls	r2, r1, #25
9001a8ea:	bf44      	itt	mi
9001a8ec:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a8f0:	b21b      	sxthmi	r3, r3
9001a8f2:	1bdb      	subs	r3, r3, r7
9001a8f4:	e747      	b.n	9001a786 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001a8f6:	2300      	movs	r3, #0
9001a8f8:	e7b7      	b.n	9001a86a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
9001a8fa:	bf00      	nop
9001a8fc:	3fc00079 	.word	0x3fc00079

9001a900 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001a900:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a904:	4604      	mov	r4, r0
9001a906:	b942      	cbnz	r2, 9001a91a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001a908:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a90c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
9001a910:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9001a914:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001a918:	e047      	b.n	9001a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a91a:	7b51      	ldrb	r1, [r2, #13]
9001a91c:	8893      	ldrh	r3, [r2, #4]
9001a91e:	010d      	lsls	r5, r1, #4
9001a920:	f405 7080 	and.w	r0, r5, #256	@ 0x100
9001a924:	79d5      	ldrb	r5, [r2, #7]
9001a926:	4305      	orrs	r5, r0
9001a928:	2d04      	cmp	r5, #4
9001a92a:	bfcc      	ite	gt
9001a92c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001a930:	f04f 0e01 	movle.w	lr, #1
9001a934:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
9001a938:	f200 80ab 	bhi.w	9001aa92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001a93c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
9001a940:	4283      	cmp	r3, r0
9001a942:	d216      	bcs.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a944:	f240 605b 	movw	r0, #1627	@ 0x65b
9001a948:	4283      	cmp	r3, r0
9001a94a:	d859      	bhi.n	9001aa00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001a94c:	f240 6057 	movw	r0, #1623	@ 0x657
9001a950:	4283      	cmp	r3, r0
9001a952:	d20e      	bcs.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a954:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001a958:	d24a      	bcs.n	9001a9f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001a95a:	f240 604e 	movw	r0, #1614	@ 0x64e
9001a95e:	4283      	cmp	r3, r0
9001a960:	d207      	bcs.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a962:	f240 601a 	movw	r0, #1562	@ 0x61a
9001a966:	4283      	cmp	r3, r0
9001a968:	d02a      	beq.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a96a:	d821      	bhi.n	9001a9b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001a96c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
9001a970:	d35b      	bcc.n	9001aa2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a972:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
9001a976:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001a97a:	f040 80d0 	bne.w	9001ab1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a97e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
9001a982:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001a986:	f040 80ca 	bne.w	9001ab1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a98a:	00cb      	lsls	r3, r1, #3
9001a98c:	0649      	lsls	r1, r1, #25
9001a98e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001a992:	7a13      	ldrb	r3, [r2, #8]
9001a994:	ea43 0300 	orr.w	r3, r3, r0
9001a998:	bf44      	itt	mi
9001a99a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a99e:	b21b      	sxthmi	r3, r3
9001a9a0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001a9a4:	1b5d      	subs	r5, r3, r5
9001a9a6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001a9aa:	4610      	mov	r0, r2
9001a9ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a9b0:	f240 604b 	movw	r0, #1611	@ 0x64b
9001a9b4:	4283      	cmp	r3, r0
9001a9b6:	d338      	bcc.n	9001aa2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a9b8:	f240 604c 	movw	r0, #1612	@ 0x64c
9001a9bc:	4283      	cmp	r3, r0
9001a9be:	d9d8      	bls.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a9c0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
9001a9c4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
9001a9c8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001a9cc:	f040 80f3 	bne.w	9001abb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a9d0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001a9d4:	f040 80ef 	bne.w	9001abb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a9d8:	00cb      	lsls	r3, r1, #3
9001a9da:	064e      	lsls	r6, r1, #25
9001a9dc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001a9e0:	7a13      	ldrb	r3, [r2, #8]
9001a9e2:	ea43 0300 	orr.w	r3, r3, r0
9001a9e6:	bf44      	itt	mi
9001a9e8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a9ec:	b21b      	sxthmi	r3, r3
9001a9ee:	e7d9      	b.n	9001a9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001a9f0:	f240 6054 	movw	r0, #1620	@ 0x654
9001a9f4:	4283      	cmp	r3, r0
9001a9f6:	d8e3      	bhi.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a9f8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001a9fc:	d9e0      	bls.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a9fe:	e7b8      	b.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa00:	f240 6074 	movw	r0, #1652	@ 0x674
9001aa04:	4283      	cmp	r3, r0
9001aa06:	d0b4      	beq.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa08:	d82d      	bhi.n	9001aa66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001aa0a:	f240 605e 	movw	r0, #1630	@ 0x65e
9001aa0e:	4283      	cmp	r3, r0
9001aa10:	d804      	bhi.n	9001aa1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001aa12:	f240 605d 	movw	r0, #1629	@ 0x65d
9001aa16:	4283      	cmp	r3, r0
9001aa18:	d3d2      	bcc.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa1a:	e7aa      	b.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa1c:	f240 605f 	movw	r0, #1631	@ 0x65f
9001aa20:	4283      	cmp	r3, r0
9001aa22:	d0cd      	beq.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa24:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
9001aa28:	d0a3      	beq.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa2a:	00cb      	lsls	r3, r1, #3
9001aa2c:	0649      	lsls	r1, r1, #25
9001aa2e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001aa32:	7a13      	ldrb	r3, [r2, #8]
9001aa34:	ea43 0300 	orr.w	r3, r3, r0
9001aa38:	bf44      	itt	mi
9001aa3a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001aa3e:	b21b      	sxthmi	r3, r3
9001aa40:	1b5d      	subs	r5, r3, r5
9001aa42:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001aa46:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001aa4a:	7b53      	ldrb	r3, [r2, #13]
9001aa4c:	015b      	lsls	r3, r3, #5
9001aa4e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001aa52:	7993      	ldrb	r3, [r2, #6]
9001aa54:	430b      	orrs	r3, r1
9001aa56:	2105      	movs	r1, #5
9001aa58:	005b      	lsls	r3, r3, #1
9001aa5a:	fb93 f3f1 	sdiv	r3, r3, r1
9001aa5e:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001aa62:	440b      	add	r3, r1
9001aa64:	e756      	b.n	9001a914 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001aa66:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001aa6a:	4283      	cmp	r3, r0
9001aa6c:	d809      	bhi.n	9001aa82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001aa6e:	f240 60df 	movw	r0, #1759	@ 0x6df
9001aa72:	4283      	cmp	r3, r0
9001aa74:	f4bf af7d 	bcs.w	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa78:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001aa7c:	2b05      	cmp	r3, #5
9001aa7e:	d8d4      	bhi.n	9001aa2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001aa80:	e777      	b.n	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa82:	f240 60e3 	movw	r0, #1763	@ 0x6e3
9001aa86:	4283      	cmp	r3, r0
9001aa88:	d09a      	beq.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa8a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001aa8e:	4283      	cmp	r3, r0
9001aa90:	e7ca      	b.n	9001aa28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001aa92:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
9001aa96:	d22b      	bcs.n	9001aaf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001aa98:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001aa9c:	4283      	cmp	r3, r0
9001aa9e:	d28f      	bcs.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aaa0:	f640 00e5 	movw	r0, #2277	@ 0x8e5
9001aaa4:	4283      	cmp	r3, r0
9001aaa6:	d816      	bhi.n	9001aad6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001aaa8:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001aaac:	4283      	cmp	r3, r0
9001aaae:	f4bf af60 	bcs.w	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aab2:	f240 60ec 	movw	r0, #1772	@ 0x6ec
9001aab6:	4283      	cmp	r3, r0
9001aab8:	d80a      	bhi.n	9001aad0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001aaba:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001aabe:	4283      	cmp	r3, r0
9001aac0:	f4bf af57 	bcs.w	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aac4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
9001aac8:	4283      	cmp	r3, r0
9001aaca:	f43f af79 	beq.w	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aace:	e7ac      	b.n	9001aa2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001aad0:	f240 60ed 	movw	r0, #1773	@ 0x6ed
9001aad4:	e7f8      	b.n	9001aac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001aad6:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001aada:	4283      	cmp	r3, r0
9001aadc:	d802      	bhi.n	9001aae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001aade:	f640 00e7 	movw	r0, #2279	@ 0x8e7
9001aae2:	e798      	b.n	9001aa16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001aae4:	f640 00e9 	movw	r0, #2281	@ 0x8e9
9001aae8:	4283      	cmp	r3, r0
9001aaea:	f47f af42 	bne.w	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aaee:	e767      	b.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aaf0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
9001aaf4:	4283      	cmp	r3, r0
9001aaf6:	f43f af63 	beq.w	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aafa:	d802      	bhi.n	9001ab02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001aafc:	f640 00f2 	movw	r0, #2290	@ 0x8f2
9001ab00:	e7f2      	b.n	9001aae8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001ab02:	f640 00fa 	movw	r0, #2298	@ 0x8fa
9001ab06:	4283      	cmp	r3, r0
9001ab08:	d805      	bhi.n	9001ab16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001ab0a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001ab0e:	4283      	cmp	r3, r0
9001ab10:	f4ff af2f 	bcc.w	9001a972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ab14:	e754      	b.n	9001a9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ab16:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001ab1a:	4283      	cmp	r3, r0
9001ab1c:	e7af      	b.n	9001aa7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001ab1e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001ab22:	4617      	mov	r7, r2
9001ab24:	f102 0808 	add.w	r8, r2, #8
9001ab28:	4666      	mov	r6, ip
9001ab2a:	6838      	ldr	r0, [r7, #0]
9001ab2c:	3708      	adds	r7, #8
9001ab2e:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001ab32:	46e6      	mov	lr, ip
9001ab34:	4547      	cmp	r7, r8
9001ab36:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001ab3a:	46f4      	mov	ip, lr
9001ab3c:	d1f5      	bne.n	9001ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001ab3e:	6838      	ldr	r0, [r7, #0]
9001ab40:	f8ce 0000 	str.w	r0, [lr]
9001ab44:	88b9      	ldrh	r1, [r7, #4]
9001ab46:	f8ae 1004 	strh.w	r1, [lr, #4]
9001ab4a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001ab4e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001ab52:	d009      	beq.n	9001ab68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001ab54:	7b51      	ldrb	r1, [r2, #13]
9001ab56:	7992      	ldrb	r2, [r2, #6]
9001ab58:	0149      	lsls	r1, r1, #5
9001ab5a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001ab5e:	4311      	orrs	r1, r2
9001ab60:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001ab64:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001ab68:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001ab6c:	b2ad      	uxth	r5, r5
9001ab6e:	d00d      	beq.n	9001ab8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001ab70:	442b      	add	r3, r5
9001ab72:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001ab76:	b29b      	uxth	r3, r3
9001ab78:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001ab7c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001ab80:	10db      	asrs	r3, r3, #3
9001ab82:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001ab86:	4313      	orrs	r3, r2
9001ab88:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001ab8c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001ab90:	00cb      	lsls	r3, r1, #3
9001ab92:	064f      	lsls	r7, r1, #25
9001ab94:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001ab98:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001ab9c:	ea43 0302 	orr.w	r3, r3, r2
9001aba0:	bf44      	itt	mi
9001aba2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001aba6:	b21b      	sxthmi	r3, r3
9001aba8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001abac:	1b5b      	subs	r3, r3, r5
9001abae:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001abb2:	4632      	mov	r2, r6
9001abb4:	e6f9      	b.n	9001a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001abb6:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001abba:	4617      	mov	r7, r2
9001abbc:	f102 0908 	add.w	r9, r2, #8
9001abc0:	4666      	mov	r6, ip
9001abc2:	6838      	ldr	r0, [r7, #0]
9001abc4:	3708      	adds	r7, #8
9001abc6:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001abca:	46e0      	mov	r8, ip
9001abcc:	454f      	cmp	r7, r9
9001abce:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001abd2:	46c4      	mov	ip, r8
9001abd4:	d1f5      	bne.n	9001abc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001abd6:	6838      	ldr	r0, [r7, #0]
9001abd8:	f8c8 0000 	str.w	r0, [r8]
9001abdc:	88b9      	ldrh	r1, [r7, #4]
9001abde:	f8a8 1004 	strh.w	r1, [r8, #4]
9001abe2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001abe6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001abea:	d009      	beq.n	9001ac00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001abec:	7b51      	ldrb	r1, [r2, #13]
9001abee:	7992      	ldrb	r2, [r2, #6]
9001abf0:	0149      	lsls	r1, r1, #5
9001abf2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001abf6:	4311      	orrs	r1, r2
9001abf8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001abfc:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001ac00:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001ac04:	d00e      	beq.n	9001ac24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001ac06:	eba3 030e 	sub.w	r3, r3, lr
9001ac0a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001ac0e:	b29b      	uxth	r3, r3
9001ac10:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001ac14:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001ac18:	10db      	asrs	r3, r3, #3
9001ac1a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001ac1e:	4313      	orrs	r3, r2
9001ac20:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001ac24:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001ac28:	00cb      	lsls	r3, r1, #3
9001ac2a:	0648      	lsls	r0, r1, #25
9001ac2c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001ac30:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001ac34:	ea43 0302 	orr.w	r3, r3, r2
9001ac38:	bf44      	itt	mi
9001ac3a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ac3e:	b21b      	sxthmi	r3, r3
9001ac40:	1b5d      	subs	r5, r3, r5
9001ac42:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001ac46:	e7b4      	b.n	9001abb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001ac48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001ac4c:	461e      	mov	r6, r3
9001ac4e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001ac50:	4604      	mov	r4, r0
9001ac52:	4617      	mov	r7, r2
9001ac54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ac58:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001ac5c:	f7eb fc78 	bl	90006550 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001ac60:	4605      	mov	r5, r0
9001ac62:	b918      	cbnz	r0, 9001ac6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001ac64:	6030      	str	r0, [r6, #0]
9001ac66:	4628      	mov	r0, r5
9001ac68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001ac6c:	683b      	ldr	r3, [r7, #0]
9001ac6e:	4601      	mov	r1, r0
9001ac70:	4638      	mov	r0, r7
9001ac72:	68db      	ldr	r3, [r3, #12]
9001ac74:	4798      	blx	r3
9001ac76:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001ac7a:	4602      	mov	r2, r0
9001ac7c:	6030      	str	r0, [r6, #0]
9001ac7e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001ac82:	d213      	bcs.n	9001acac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001ac84:	4643      	mov	r3, r8
9001ac86:	4639      	mov	r1, r7
9001ac88:	4620      	mov	r0, r4
9001ac8a:	f7ff fe39 	bl	9001a900 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001ac8e:	6030      	str	r0, [r6, #0]
9001ac90:	6833      	ldr	r3, [r6, #0]
9001ac92:	b143      	cbz	r3, 9001aca6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001ac94:	7b5a      	ldrb	r2, [r3, #13]
9001ac96:	7a9b      	ldrb	r3, [r3, #10]
9001ac98:	0052      	lsls	r2, r2, #1
9001ac9a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001ac9e:	4313      	orrs	r3, r2
9001aca0:	bf0c      	ite	eq
9001aca2:	2301      	moveq	r3, #1
9001aca4:	2300      	movne	r3, #0
9001aca6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001acaa:	e7dc      	b.n	9001ac66 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001acac:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001acb0:	b29b      	uxth	r3, r3
9001acb2:	2b7f      	cmp	r3, #127	@ 0x7f
9001acb4:	d804      	bhi.n	9001acc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001acb6:	4639      	mov	r1, r7
9001acb8:	4620      	mov	r0, r4
9001acba:	f7ff fd15 	bl	9001a6e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001acbe:	e7e6      	b.n	9001ac8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001acc0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001acc4:	2b00      	cmp	r3, #0
9001acc6:	d0e3      	beq.n	9001ac90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001acc8:	f640 1302 	movw	r3, #2306	@ 0x902
9001accc:	429d      	cmp	r5, r3
9001acce:	d1df      	bne.n	9001ac90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001acd0:	4601      	mov	r1, r0
9001acd2:	4620      	mov	r0, r4
9001acd4:	f7ff fcd9 	bl	9001a68a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001acd8:	e7d9      	b.n	9001ac8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001acda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001acda:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001acde:	461e      	mov	r6, r3
9001ace0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001ace2:	4604      	mov	r4, r0
9001ace4:	4617      	mov	r7, r2
9001ace6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001acea:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001acee:	f7eb fc2f 	bl	90006550 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001acf2:	4605      	mov	r5, r0
9001acf4:	b918      	cbnz	r0, 9001acfe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001acf6:	6030      	str	r0, [r6, #0]
9001acf8:	4628      	mov	r0, r5
9001acfa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001acfe:	683b      	ldr	r3, [r7, #0]
9001ad00:	4601      	mov	r1, r0
9001ad02:	4638      	mov	r0, r7
9001ad04:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001ad08:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001ad0c:	47c8      	blx	r9
9001ad0e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001ad12:	4602      	mov	r2, r0
9001ad14:	6030      	str	r0, [r6, #0]
9001ad16:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001ad1a:	d213      	bcs.n	9001ad44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001ad1c:	4643      	mov	r3, r8
9001ad1e:	4639      	mov	r1, r7
9001ad20:	4620      	mov	r0, r4
9001ad22:	f7ff fded 	bl	9001a900 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001ad26:	6030      	str	r0, [r6, #0]
9001ad28:	6833      	ldr	r3, [r6, #0]
9001ad2a:	b143      	cbz	r3, 9001ad3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001ad2c:	7b5a      	ldrb	r2, [r3, #13]
9001ad2e:	7a9b      	ldrb	r3, [r3, #10]
9001ad30:	0052      	lsls	r2, r2, #1
9001ad32:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001ad36:	4313      	orrs	r3, r2
9001ad38:	bf0c      	ite	eq
9001ad3a:	2301      	moveq	r3, #1
9001ad3c:	2300      	movne	r3, #0
9001ad3e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001ad42:	e7d9      	b.n	9001acf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001ad44:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001ad48:	b29b      	uxth	r3, r3
9001ad4a:	2b7f      	cmp	r3, #127	@ 0x7f
9001ad4c:	d804      	bhi.n	9001ad58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001ad4e:	4639      	mov	r1, r7
9001ad50:	4620      	mov	r0, r4
9001ad52:	f7ff fcc9 	bl	9001a6e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001ad56:	e7e6      	b.n	9001ad26 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001ad58:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001ad5c:	2b00      	cmp	r3, #0
9001ad5e:	d0e3      	beq.n	9001ad28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001ad60:	f640 1302 	movw	r3, #2306	@ 0x902
9001ad64:	429d      	cmp	r5, r3
9001ad66:	d1df      	bne.n	9001ad28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001ad68:	4601      	mov	r1, r0
9001ad6a:	4620      	mov	r0, r4
9001ad6c:	f7ff fc8d 	bl	9001a68a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001ad70:	e7d9      	b.n	9001ad26 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001ad72 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001ad72:	b510      	push	{r4, lr}
9001ad74:	4604      	mov	r4, r0
9001ad76:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001ad7a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001ad7c:	b1e1      	cbz	r1, 9001adb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001ad7e:	2b0a      	cmp	r3, #10
9001ad80:	d02d      	beq.n	9001adde <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001ad82:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9001ad84:	3901      	subs	r1, #1
9001ad86:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001ad8a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
9001ad8c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
9001ad90:	1c51      	adds	r1, r2, #1
9001ad92:	b289      	uxth	r1, r1
9001ad94:	2901      	cmp	r1, #1
9001ad96:	bf8a      	itet	hi
9001ad98:	f102 32ff 	addhi.w	r2, r2, #4294967295	@ 0xffffffff
9001ad9c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
9001ad9e:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
9001ada0:	1c5a      	adds	r2, r3, #1
9001ada2:	8722      	strh	r2, [r4, #56]	@ 0x38
9001ada4:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001ada6:	4413      	add	r3, r2
9001ada8:	b29b      	uxth	r3, r3
9001adaa:	2b09      	cmp	r3, #9
9001adac:	bf88      	it	hi
9001adae:	3b0a      	subhi	r3, #10
9001adb0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001adb4:	8458      	strh	r0, [r3, #34]	@ 0x22
9001adb6:	e7de      	b.n	9001ad76 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001adb8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001adba:	2b0a      	cmp	r3, #10
9001adbc:	d00f      	beq.n	9001adde <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001adbe:	4620      	mov	r0, r4
9001adc0:	f7ff fc22 	bl	9001a608 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001adc4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001adc6:	1c5a      	adds	r2, r3, #1
9001adc8:	8722      	strh	r2, [r4, #56]	@ 0x38
9001adca:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001adcc:	4413      	add	r3, r2
9001adce:	b29b      	uxth	r3, r3
9001add0:	2b09      	cmp	r3, #9
9001add2:	bf88      	it	hi
9001add4:	3b0a      	subhi	r3, #10
9001add6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001adda:	8458      	strh	r0, [r3, #34]	@ 0x22
9001addc:	e7ec      	b.n	9001adb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001adde:	bd10      	pop	{r4, pc}

9001ade0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001ade0:	b538      	push	{r3, r4, r5, lr}
9001ade2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001ade4:	4604      	mov	r4, r0
9001ade6:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001adea:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001adec:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001adee:	3a01      	subs	r2, #1
9001adf0:	8702      	strh	r2, [r0, #56]	@ 0x38
9001adf2:	1c5a      	adds	r2, r3, #1
9001adf4:	b292      	uxth	r2, r2
9001adf6:	2a09      	cmp	r2, #9
9001adf8:	bf8a      	itet	hi
9001adfa:	3b09      	subhi	r3, #9
9001adfc:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001adfe:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
9001ae00:	f7ff ffb7 	bl	9001ad72 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001ae04:	8c23      	ldrh	r3, [r4, #32]
9001ae06:	2b01      	cmp	r3, #1
9001ae08:	bf9c      	itt	ls
9001ae0a:	3301      	addls	r3, #1
9001ae0c:	8423      	strhls	r3, [r4, #32]
9001ae0e:	8be3      	ldrh	r3, [r4, #30]
9001ae10:	b90b      	cbnz	r3, 9001ae16 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001ae12:	2302      	movs	r3, #2
9001ae14:	83e3      	strh	r3, [r4, #30]
9001ae16:	8be3      	ldrh	r3, [r4, #30]
9001ae18:	4628      	mov	r0, r5
9001ae1a:	3b01      	subs	r3, #1
9001ae1c:	b29b      	uxth	r3, r3
9001ae1e:	83e3      	strh	r3, [r4, #30]
9001ae20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ae24:	8365      	strh	r5, [r4, #26]
9001ae26:	bd38      	pop	{r3, r4, r5, pc}

9001ae28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001ae28:	428a      	cmp	r2, r1
9001ae2a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ae2e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
9001ae30:	d932      	bls.n	9001ae98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001ae32:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
9001ae34:	1a54      	subs	r4, r2, r1
9001ae36:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001ae3a:	19ee      	adds	r6, r5, r7
9001ae3c:	fa1f fe84 	uxth.w	lr, r4
9001ae40:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
9001ae44:	3e01      	subs	r6, #1
9001ae46:	b2b4      	uxth	r4, r6
9001ae48:	eba4 090e 	sub.w	r9, r4, lr
9001ae4c:	fa1f f989 	uxth.w	r9, r9
9001ae50:	2c09      	cmp	r4, #9
9001ae52:	4626      	mov	r6, r4
9001ae54:	bf88      	it	hi
9001ae56:	f1a4 060a 	subhi.w	r6, r4, #10
9001ae5a:	f1bc 0f00 	cmp.w	ip, #0
9001ae5e:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
9001ae62:	bf08      	it	eq
9001ae64:	f04f 0c02 	moveq.w	ip, #2
9001ae68:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001ae6c:	b2a4      	uxth	r4, r4
9001ae6e:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
9001ae72:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001ae76:	454c      	cmp	r4, r9
9001ae78:	fa1f fc8c 	uxth.w	ip, ip
9001ae7c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001ae80:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
9001ae84:	d1e4      	bne.n	9001ae50 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001ae86:	eba5 050e 	sub.w	r5, r5, lr
9001ae8a:	eb0e 0408 	add.w	r4, lr, r8
9001ae8e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
9001ae92:	8705      	strh	r5, [r0, #56]	@ 0x38
9001ae94:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001ae98:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001ae9a:	250a      	movs	r5, #10
9001ae9c:	1a64      	subs	r4, r4, r1
9001ae9e:	4439      	add	r1, r7
9001aea0:	b289      	uxth	r1, r1
9001aea2:	8704      	strh	r4, [r0, #56]	@ 0x38
9001aea4:	2909      	cmp	r1, #9
9001aea6:	bf88      	it	hi
9001aea8:	390a      	subhi	r1, #10
9001aeaa:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001aeac:	b18a      	cbz	r2, 9001aed2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001aeae:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
9001aeb0:	3a01      	subs	r2, #1
9001aeb2:	3101      	adds	r1, #1
9001aeb4:	b292      	uxth	r2, r2
9001aeb6:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001aeba:	8701      	strh	r1, [r0, #56]	@ 0x38
9001aebc:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001aebe:	b901      	cbnz	r1, 9001aec2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001aec0:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001aec2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001aec4:	3901      	subs	r1, #1
9001aec6:	b289      	uxth	r1, r1
9001aec8:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001aeca:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001aece:	844c      	strh	r4, [r1, #34]	@ 0x22
9001aed0:	e7ec      	b.n	9001aeac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001aed2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001aed6:	f7ff bf4c 	b.w	9001ad72 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001aeda <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001aeda:	b570      	push	{r4, r5, r6, lr}
9001aedc:	2500      	movs	r5, #0
9001aede:	4295      	cmp	r5, r2
9001aee0:	d011      	beq.n	9001af06 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001aee2:	8bc4      	ldrh	r4, [r0, #30]
9001aee4:	f831 6b02 	ldrh.w	r6, [r1], #2
9001aee8:	4414      	add	r4, r2
9001aeea:	3c01      	subs	r4, #1
9001aeec:	1b64      	subs	r4, r4, r5
9001aeee:	b2a4      	uxth	r4, r4
9001aef0:	2c01      	cmp	r4, #1
9001aef2:	bf88      	it	hi
9001aef4:	3c02      	subhi	r4, #2
9001aef6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001aefa:	8b64      	ldrh	r4, [r4, #26]
9001aefc:	42b4      	cmp	r4, r6
9001aefe:	d117      	bne.n	9001af30 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001af00:	3501      	adds	r5, #1
9001af02:	b2ad      	uxth	r5, r5
9001af04:	e7eb      	b.n	9001aede <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001af06:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001af0a:	2400      	movs	r4, #0
9001af0c:	4413      	add	r3, r2
9001af0e:	b2a2      	uxth	r2, r4
9001af10:	429a      	cmp	r2, r3
9001af12:	da0f      	bge.n	9001af34 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001af14:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
9001af16:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001af1a:	3401      	adds	r4, #1
9001af1c:	4432      	add	r2, r6
9001af1e:	b292      	uxth	r2, r2
9001af20:	2a09      	cmp	r2, #9
9001af22:	bf88      	it	hi
9001af24:	3a0a      	subhi	r2, #10
9001af26:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001af2a:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001af2c:	42aa      	cmp	r2, r5
9001af2e:	d0ee      	beq.n	9001af0e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001af30:	2000      	movs	r0, #0
9001af32:	bd70      	pop	{r4, r5, r6, pc}
9001af34:	2001      	movs	r0, #1
9001af36:	e7fc      	b.n	9001af32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001af38 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001af38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af3c:	4605      	mov	r5, r0
9001af3e:	4616      	mov	r6, r2
9001af40:	1c8c      	adds	r4, r1, #2
9001af42:	8809      	ldrh	r1, [r1, #0]
9001af44:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001af48:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001af4c:	42b3      	cmp	r3, r6
9001af4e:	d124      	bne.n	9001af9a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001af50:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001af54:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001af58:	f001 070f 	and.w	r7, r1, #15
9001af5c:	4652      	mov	r2, sl
9001af5e:	f8cd 8000 	str.w	r8, [sp]
9001af62:	464b      	mov	r3, r9
9001af64:	4621      	mov	r1, r4
9001af66:	4628      	mov	r0, r5
9001af68:	f7ff ffb7 	bl	9001aeda <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001af6c:	4683      	mov	fp, r0
9001af6e:	b168      	cbz	r0, 9001af8c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001af70:	eb0a 0109 	add.w	r1, sl, r9
9001af74:	463a      	mov	r2, r7
9001af76:	4628      	mov	r0, r5
9001af78:	4441      	add	r1, r8
9001af7a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001af7e:	4649      	mov	r1, r9
9001af80:	f7ff ff52 	bl	9001ae28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001af84:	4658      	mov	r0, fp
9001af86:	b003      	add	sp, #12
9001af88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001af8c:	eb07 010a 	add.w	r1, r7, sl
9001af90:	4449      	add	r1, r9
9001af92:	4441      	add	r1, r8
9001af94:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001af98:	e7d2      	b.n	9001af40 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001af9a:	f04f 0b00 	mov.w	fp, #0
9001af9e:	e7f1      	b.n	9001af84 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001afa0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001afa0:	b570      	push	{r4, r5, r6, lr}
9001afa2:	8810      	ldrh	r0, [r2, #0]
9001afa4:	4298      	cmp	r0, r3
9001afa6:	d817      	bhi.n	9001afd8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001afa8:	1e48      	subs	r0, r1, #1
9001afaa:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001afae:	4298      	cmp	r0, r3
9001afb0:	d312      	bcc.n	9001afd8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001afb2:	2400      	movs	r4, #0
9001afb4:	428c      	cmp	r4, r1
9001afb6:	d20f      	bcs.n	9001afd8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001afb8:	1860      	adds	r0, r4, r1
9001afba:	1040      	asrs	r0, r0, #1
9001afbc:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001afc0:	0085      	lsls	r5, r0, #2
9001afc2:	42b3      	cmp	r3, r6
9001afc4:	d902      	bls.n	9001afcc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001afc6:	3001      	adds	r0, #1
9001afc8:	b284      	uxth	r4, r0
9001afca:	e7f3      	b.n	9001afb4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001afcc:	d201      	bcs.n	9001afd2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001afce:	b281      	uxth	r1, r0
9001afd0:	e7f0      	b.n	9001afb4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001afd2:	442a      	add	r2, r5
9001afd4:	8850      	ldrh	r0, [r2, #2]
9001afd6:	bd70      	pop	{r4, r5, r6, pc}
9001afd8:	2000      	movs	r0, #0
9001afda:	e7fc      	b.n	9001afd6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001afdc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001afdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001afe0:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001afe2:	4604      	mov	r4, r0
9001afe4:	260b      	movs	r6, #11
9001afe6:	886f      	ldrh	r7, [r5, #2]
9001afe8:	087f      	lsrs	r7, r7, #1
9001afea:	3e01      	subs	r6, #1
9001afec:	d013      	beq.n	9001b016 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001afee:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001aff0:	462a      	mov	r2, r5
9001aff2:	4639      	mov	r1, r7
9001aff4:	4620      	mov	r0, r4
9001aff6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001affa:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001affe:	4643      	mov	r3, r8
9001b000:	f7ff ffce 	bl	9001afa0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001b004:	b138      	cbz	r0, 9001b016 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001b006:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001b00a:	4642      	mov	r2, r8
9001b00c:	4620      	mov	r0, r4
9001b00e:	f7ff ff93 	bl	9001af38 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001b012:	2800      	cmp	r0, #0
9001b014:	d1e9      	bne.n	9001afea <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001b016:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001b01c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001b01c:	b570      	push	{r4, r5, r6, lr}
9001b01e:	694a      	ldr	r2, [r1, #20]
9001b020:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001b022:	684b      	ldr	r3, [r1, #4]
9001b024:	1b54      	subs	r4, r2, r5
9001b026:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001b028:	f000 8106 	beq.w	9001b238 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001b02c:	1b9b      	subs	r3, r3, r6
9001b02e:	d003      	beq.n	9001b038 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001b030:	4363      	muls	r3, r4
9001b032:	2210      	movs	r2, #16
9001b034:	fb93 f3f2 	sdiv	r3, r3, r2
9001b038:	680c      	ldr	r4, [r1, #0]
9001b03a:	698a      	ldr	r2, [r1, #24]
9001b03c:	1b65      	subs	r5, r4, r5
9001b03e:	f000 80fd 	beq.w	9001b23c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001b042:	1b92      	subs	r2, r2, r6
9001b044:	d003      	beq.n	9001b04e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001b046:	436a      	muls	r2, r5
9001b048:	2410      	movs	r4, #16
9001b04a:	fb92 f2f4 	sdiv	r2, r2, r4
9001b04e:	1a9b      	subs	r3, r3, r2
9001b050:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001b278 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001b054:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b058:	460a      	mov	r2, r1
9001b05a:	ee07 3a90 	vmov	s15, r3
9001b05e:	f100 040c 	add.w	r4, r0, #12
9001b062:	4603      	mov	r3, r0
9001b064:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b068:	ee67 7a84 	vmul.f32	s15, s15, s8
9001b06c:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001b070:	eeb1 6a43 	vneg.f32	s12, s6
9001b074:	edd2 7a02 	vldr	s15, [r2, #8]
9001b078:	3214      	adds	r2, #20
9001b07a:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001b07e:	ece3 6a01 	vstmia	r3!, {s13}
9001b082:	429c      	cmp	r4, r3
9001b084:	ed52 7a02 	vldr	s15, [r2, #-8]
9001b088:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001b08c:	edc3 7a02 	vstr	s15, [r3, #8]
9001b090:	ed52 7a01 	vldr	s15, [r2, #-4]
9001b094:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001b098:	edc3 7a05 	vstr	s15, [r3, #20]
9001b09c:	d1ea      	bne.n	9001b074 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001b09e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b0a0:	698b      	ldr	r3, [r1, #24]
9001b0a2:	edd0 4a02 	vldr	s9, [r0, #8]
9001b0a6:	1a9b      	subs	r3, r3, r2
9001b0a8:	edd0 3a00 	vldr	s7, [r0]
9001b0ac:	edd0 6a01 	vldr	s13, [r0, #4]
9001b0b0:	ee07 3a90 	vmov	s15, r3
9001b0b4:	684b      	ldr	r3, [r1, #4]
9001b0b6:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001b0ba:	ed90 5a05 	vldr	s10, [r0, #20]
9001b0be:	1a9b      	subs	r3, r3, r2
9001b0c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b0c4:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001b0c8:	ed90 2a03 	vldr	s4, [r0, #12]
9001b0cc:	ee07 3a10 	vmov	s14, r3
9001b0d0:	edd0 5a04 	vldr	s11, [r0, #16]
9001b0d4:	ee67 7a84 	vmul.f32	s15, s15, s8
9001b0d8:	ed90 1a07 	vldr	s2, [r0, #28]
9001b0dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b0e0:	edd0 2a06 	vldr	s5, [r0, #24]
9001b0e4:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001b0e8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001b0ec:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b0f0:	ee32 5a45 	vsub.f32	s10, s4, s10
9001b0f4:	eee6 7a87 	vfma.f32	s15, s13, s14
9001b0f8:	ee67 7a83 	vmul.f32	s15, s15, s6
9001b0fc:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001b100:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001b102:	694a      	ldr	r2, [r1, #20]
9001b104:	1b13      	subs	r3, r2, r4
9001b106:	ee07 3a10 	vmov	s14, r3
9001b10a:	680b      	ldr	r3, [r1, #0]
9001b10c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b110:	1b1b      	subs	r3, r3, r4
9001b112:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b116:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001b11a:	ee07 3a10 	vmov	s14, r3
9001b11e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b122:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b126:	eee6 4a87 	vfma.f32	s9, s13, s14
9001b12a:	ee64 4a86 	vmul.f32	s9, s9, s12
9001b12e:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001b132:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b134:	698b      	ldr	r3, [r1, #24]
9001b136:	1a9b      	subs	r3, r3, r2
9001b138:	ee06 3a90 	vmov	s13, r3
9001b13c:	684b      	ldr	r3, [r1, #4]
9001b13e:	1a9b      	subs	r3, r3, r2
9001b140:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001b144:	ee07 3a10 	vmov	s14, r3
9001b148:	ee66 6a84 	vmul.f32	s13, s13, s8
9001b14c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b150:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001b154:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b158:	eee5 6a87 	vfma.f32	s13, s11, s14
9001b15c:	ee66 6a83 	vmul.f32	s13, s13, s6
9001b160:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001b164:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001b166:	694a      	ldr	r2, [r1, #20]
9001b168:	1b13      	subs	r3, r2, r4
9001b16a:	ee07 3a10 	vmov	s14, r3
9001b16e:	680b      	ldr	r3, [r1, #0]
9001b170:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b174:	1b1b      	subs	r3, r3, r4
9001b176:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b17a:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001b17e:	ee07 3a10 	vmov	s14, r3
9001b182:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b186:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b18a:	eea5 5a87 	vfma.f32	s10, s11, s14
9001b18e:	edd0 5a08 	vldr	s11, [r0, #32]
9001b192:	ee31 1a65 	vsub.f32	s2, s2, s11
9001b196:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001b19a:	ee25 5a06 	vmul.f32	s10, s10, s12
9001b19e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001b1a2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b1a4:	698b      	ldr	r3, [r1, #24]
9001b1a6:	1a9b      	subs	r3, r3, r2
9001b1a8:	ee07 3a10 	vmov	s14, r3
9001b1ac:	684b      	ldr	r3, [r1, #4]
9001b1ae:	1a9b      	subs	r3, r3, r2
9001b1b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b1b4:	ee01 3a90 	vmov	s3, r3
9001b1b8:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b1bc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001b1c0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001b1c4:	ee61 1a84 	vmul.f32	s3, s3, s8
9001b1c8:	eea1 7a21 	vfma.f32	s14, s2, s3
9001b1cc:	ee27 7a03 	vmul.f32	s14, s14, s6
9001b1d0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001b1d4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001b1d6:	694a      	ldr	r2, [r1, #20]
9001b1d8:	1b13      	subs	r3, r2, r4
9001b1da:	ee03 3a10 	vmov	s6, r3
9001b1de:	680b      	ldr	r3, [r1, #0]
9001b1e0:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001b1e4:	1b1b      	subs	r3, r3, r4
9001b1e6:	ee23 3a04 	vmul.f32	s6, s6, s8
9001b1ea:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001b1ee:	ee03 3a10 	vmov	s6, r3
9001b1f2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001b1f6:	ee23 4a04 	vmul.f32	s8, s6, s8
9001b1fa:	eee1 5a04 	vfma.f32	s11, s2, s8
9001b1fe:	ee25 6a86 	vmul.f32	s12, s11, s12
9001b202:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001b206:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001b20a:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001b20e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001b212:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b216:	dd13      	ble.n	9001b240 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001b218:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001b21c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001b220:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001b222:	eee3 7a87 	vfma.f32	s15, s7, s14
9001b226:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001b22a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b22e:	dd15      	ble.n	9001b25c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001b230:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001b234:	6403      	str	r3, [r0, #64]	@ 0x40
9001b236:	bd70      	pop	{r4, r5, r6, pc}
9001b238:	4623      	mov	r3, r4
9001b23a:	e6fd      	b.n	9001b038 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001b23c:	462a      	mov	r2, r5
9001b23e:	e706      	b.n	9001b04e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001b240:	d502      	bpl.n	9001b248 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001b242:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001b246:	e7e9      	b.n	9001b21c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001b248:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001b24c:	eea3 2a85 	vfma.f32	s4, s7, s10
9001b250:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001b254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b258:	dade      	bge.n	9001b218 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001b25a:	e7f2      	b.n	9001b242 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001b25c:	d502      	bpl.n	9001b264 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001b25e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001b262:	e7e7      	b.n	9001b234 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001b264:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001b268:	eee3 4a86 	vfma.f32	s9, s7, s12
9001b26c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001b270:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b274:	dadc      	bge.n	9001b230 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001b276:	e7f2      	b.n	9001b25e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001b278:	3d800000 	.word	0x3d800000

9001b27c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001b27c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001b280:	2714      	movs	r7, #20
9001b282:	435f      	muls	r7, r3
9001b284:	eb02 0c07 	add.w	ip, r2, r7
9001b288:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001b28c:	f115 0e0f 	adds.w	lr, r5, #15
9001b290:	f100 80a2 	bmi.w	9001b3d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001b294:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001b298:	9c08      	ldr	r4, [sp, #32]
9001b29a:	2614      	movs	r6, #20
9001b29c:	f8c0 e014 	str.w	lr, [r0, #20]
9001b2a0:	4366      	muls	r6, r4
9001b2a2:	eb02 0806 	add.w	r8, r2, r6
9001b2a6:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001b2aa:	f115 040f 	adds.w	r4, r5, #15
9001b2ae:	f100 809f 	bmi.w	9001b3f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001b2b2:	1124      	asrs	r4, r4, #4
9001b2b4:	eba4 040e 	sub.w	r4, r4, lr
9001b2b8:	6184      	str	r4, [r0, #24]
9001b2ba:	2c00      	cmp	r4, #0
9001b2bc:	f000 808a 	beq.w	9001b3d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001b2c0:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001b2c4:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001b2c8:	5995      	ldr	r5, [r2, r6]
9001b2ca:	eba4 0809 	sub.w	r8, r4, r9
9001b2ce:	59d4      	ldr	r4, [r2, r7]
9001b2d0:	eba5 0a04 	sub.w	sl, r5, r4
9001b2d4:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001b2d8:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001b2dc:	fb0e fe05 	mul.w	lr, lr, r5
9001b2e0:	fb0a ee19 	mls	lr, sl, r9, lr
9001b2e4:	fb08 e404 	mla	r4, r8, r4, lr
9001b2e8:	3c01      	subs	r4, #1
9001b2ea:	19a4      	adds	r4, r4, r6
9001b2ec:	f100 808c 	bmi.w	9001b408 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001b2f0:	fb94 fef6 	sdiv	lr, r4, r6
9001b2f4:	fb06 441e 	mls	r4, r6, lr, r4
9001b2f8:	f8c0 e000 	str.w	lr, [r0]
9001b2fc:	6104      	str	r4, [r0, #16]
9001b2fe:	2d00      	cmp	r5, #0
9001b300:	f2c0 8095 	blt.w	9001b42e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001b304:	fb95 f4f6 	sdiv	r4, r5, r6
9001b308:	fb06 5514 	mls	r5, r6, r4, r5
9001b30c:	6044      	str	r4, [r0, #4]
9001b30e:	6085      	str	r5, [r0, #8]
9001b310:	60c6      	str	r6, [r0, #12]
9001b312:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b316:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001b31a:	6945      	ldr	r5, [r0, #20]
9001b31c:	59d2      	ldr	r2, [r2, r7]
9001b31e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001b322:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001b450 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001b326:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001b32a:	ee07 4a10 	vmov	s14, r4
9001b32e:	6804      	ldr	r4, [r0, #0]
9001b330:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001b334:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b338:	ee07 2a90 	vmov	s15, r2
9001b33c:	ee27 7a26 	vmul.f32	s14, s14, s13
9001b340:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b344:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001b348:	edd3 6a00 	vldr	s13, [r3]
9001b34c:	eee6 6a07 	vfma.f32	s13, s12, s14
9001b350:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001b354:	eee6 6a27 	vfma.f32	s13, s12, s15
9001b358:	edc0 6a07 	vstr	s13, [r0, #28]
9001b35c:	edd0 6a01 	vldr	s13, [r0, #4]
9001b360:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001b364:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001b368:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001b36c:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001b370:	ed80 6a08 	vstr	s12, [r0, #32]
9001b374:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001b376:	6242      	str	r2, [r0, #36]	@ 0x24
9001b378:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001b37c:	ed93 6a03 	vldr	s12, [r3, #12]
9001b380:	eea5 6a87 	vfma.f32	s12, s11, s14
9001b384:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001b388:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001b38c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001b390:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001b394:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001b398:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001b39c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001b3a0:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b3a2:	6302      	str	r2, [r0, #48]	@ 0x30
9001b3a4:	ed93 6a06 	vldr	s12, [r3, #24]
9001b3a8:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001b3ac:	eea5 6a87 	vfma.f32	s12, s11, s14
9001b3b0:	eeb0 7a46 	vmov.f32	s14, s12
9001b3b4:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001b3b8:	eea6 7a27 	vfma.f32	s14, s12, s15
9001b3bc:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001b3c0:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001b3c4:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001b3c8:	eee6 7a87 	vfma.f32	s15, s13, s14
9001b3cc:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001b3d0:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001b3d2:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001b3d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001b3d8:	2410      	movs	r4, #16
9001b3da:	f1c5 0501 	rsb	r5, r5, #1
9001b3de:	fb9e fef4 	sdiv	lr, lr, r4
9001b3e2:	f015 050f 	ands.w	r5, r5, #15
9001b3e6:	bf18      	it	ne
9001b3e8:	2501      	movne	r5, #1
9001b3ea:	ebae 0e05 	sub.w	lr, lr, r5
9001b3ee:	e753      	b.n	9001b298 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001b3f0:	f04f 0910 	mov.w	r9, #16
9001b3f4:	f1c5 0501 	rsb	r5, r5, #1
9001b3f8:	fb94 f4f9 	sdiv	r4, r4, r9
9001b3fc:	f015 050f 	ands.w	r5, r5, #15
9001b400:	bf18      	it	ne
9001b402:	2501      	movne	r5, #1
9001b404:	1b64      	subs	r4, r4, r5
9001b406:	e755      	b.n	9001b2b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001b408:	4264      	negs	r4, r4
9001b40a:	fb94 fef6 	sdiv	lr, r4, r6
9001b40e:	f1ce 0800 	rsb	r8, lr, #0
9001b412:	fb06 441e 	mls	r4, r6, lr, r4
9001b416:	f8c0 8000 	str.w	r8, [r0]
9001b41a:	6104      	str	r4, [r0, #16]
9001b41c:	2c00      	cmp	r4, #0
9001b41e:	f43f af6e 	beq.w	9001b2fe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001b422:	ea6f 0e0e 	mvn.w	lr, lr
9001b426:	1b34      	subs	r4, r6, r4
9001b428:	f8c0 e000 	str.w	lr, [r0]
9001b42c:	e766      	b.n	9001b2fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001b42e:	426d      	negs	r5, r5
9001b430:	fb95 f4f6 	sdiv	r4, r5, r6
9001b434:	f1c4 0e00 	rsb	lr, r4, #0
9001b438:	fb06 5514 	mls	r5, r6, r4, r5
9001b43c:	f8c0 e004 	str.w	lr, [r0, #4]
9001b440:	6085      	str	r5, [r0, #8]
9001b442:	2d00      	cmp	r5, #0
9001b444:	f43f af64 	beq.w	9001b310 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001b448:	43e4      	mvns	r4, r4
9001b44a:	1b75      	subs	r5, r6, r5
9001b44c:	6044      	str	r4, [r0, #4]
9001b44e:	e75e      	b.n	9001b30e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001b450:	3d800000 	.word	0x3d800000

9001b454 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001b454:	4602      	mov	r2, r0
9001b456:	b148      	cbz	r0, 9001b46c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001b458:	2300      	movs	r3, #0
9001b45a:	b298      	uxth	r0, r3
9001b45c:	3301      	adds	r3, #1
9001b45e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001b462:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001b466:	2900      	cmp	r1, #0
9001b468:	d1f7      	bne.n	9001b45a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001b46a:	4770      	bx	lr
9001b46c:	4770      	bx	lr

9001b46e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001b46e:	b530      	push	{r4, r5, lr}
9001b470:	4604      	mov	r4, r0
9001b472:	b159      	cbz	r1, 9001b48c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001b474:	b148      	cbz	r0, 9001b48a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001b476:	2300      	movs	r3, #0
9001b478:	b298      	uxth	r0, r3
9001b47a:	4282      	cmp	r2, r0
9001b47c:	d905      	bls.n	9001b48a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001b47e:	5ccd      	ldrb	r5, [r1, r3]
9001b480:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001b484:	3301      	adds	r3, #1
9001b486:	2d00      	cmp	r5, #0
9001b488:	d1f6      	bne.n	9001b478 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001b48a:	bd30      	pop	{r4, r5, pc}
9001b48c:	4608      	mov	r0, r1
9001b48e:	e7fc      	b.n	9001b48a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001b490 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001b490:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b492:	b08b      	sub	sp, #44	@ 0x2c
9001b494:	468c      	mov	ip, r1
9001b496:	4604      	mov	r4, r0
9001b498:	2100      	movs	r1, #0
9001b49a:	261f      	movs	r6, #31
9001b49c:	af01      	add	r7, sp, #4
9001b49e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001b4a2:	1e71      	subs	r1, r6, #1
9001b4a4:	fb94 fef3 	sdiv	lr, r4, r3
9001b4a8:	fb03 441e 	mls	r4, r3, lr, r4
9001b4ac:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001b4b0:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001b4b4:	b2ec      	uxtb	r4, r5
9001b4b6:	2d09      	cmp	r5, #9
9001b4b8:	bfd4      	ite	le
9001b4ba:	3430      	addle	r4, #48	@ 0x30
9001b4bc:	3457      	addgt	r4, #87	@ 0x57
9001b4be:	b2e4      	uxtb	r4, r4
9001b4c0:	55bc      	strb	r4, [r7, r6]
9001b4c2:	4674      	mov	r4, lr
9001b4c4:	b974      	cbnz	r4, 9001b4e4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001b4c6:	2800      	cmp	r0, #0
9001b4c8:	da05      	bge.n	9001b4d6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001b4ca:	ab0a      	add	r3, sp, #40	@ 0x28
9001b4cc:	4419      	add	r1, r3
9001b4ce:	232d      	movs	r3, #45	@ 0x2d
9001b4d0:	f801 3c24 	strb.w	r3, [r1, #-36]
9001b4d4:	1eb1      	subs	r1, r6, #2
9001b4d6:	3101      	adds	r1, #1
9001b4d8:	4660      	mov	r0, ip
9001b4da:	4439      	add	r1, r7
9001b4dc:	f7ff ffc7 	bl	9001b46e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001b4e0:	b00b      	add	sp, #44	@ 0x2c
9001b4e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b4e4:	460e      	mov	r6, r1
9001b4e6:	e7dc      	b.n	9001b4a2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001b4e8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001b4e8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b4ea:	468c      	mov	ip, r1
9001b4ec:	b08b      	sub	sp, #44	@ 0x2c
9001b4ee:	2100      	movs	r1, #0
9001b4f0:	ae01      	add	r6, sp, #4
9001b4f2:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001b4f6:	211f      	movs	r1, #31
9001b4f8:	fbb0 f7f3 	udiv	r7, r0, r3
9001b4fc:	fb03 0517 	mls	r5, r3, r7, r0
9001b500:	4638      	mov	r0, r7
9001b502:	b2ec      	uxtb	r4, r5
9001b504:	2d09      	cmp	r5, #9
9001b506:	bfd4      	ite	le
9001b508:	3430      	addle	r4, #48	@ 0x30
9001b50a:	3457      	addgt	r4, #87	@ 0x57
9001b50c:	b2e4      	uxtb	r4, r4
9001b50e:	558c      	strb	r4, [r1, r6]
9001b510:	1e4c      	subs	r4, r1, #1
9001b512:	b92f      	cbnz	r7, 9001b520 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001b514:	4431      	add	r1, r6
9001b516:	4660      	mov	r0, ip
9001b518:	f7ff ffa9 	bl	9001b46e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001b51c:	b00b      	add	sp, #44	@ 0x2c
9001b51e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b520:	4621      	mov	r1, r4
9001b522:	e7e9      	b.n	9001b4f8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001b524 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001b524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b528:	b085      	sub	sp, #20
9001b52a:	4691      	mov	r9, r2
9001b52c:	6802      	ldr	r2, [r0, #0]
9001b52e:	4688      	mov	r8, r1
9001b530:	461c      	mov	r4, r3
9001b532:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001b536:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001b53a:	4683      	mov	fp, r0
9001b53c:	4610      	mov	r0, r2
9001b53e:	9103      	str	r1, [sp, #12]
9001b540:	9302      	str	r3, [sp, #8]
9001b542:	9201      	str	r2, [sp, #4]
9001b544:	f7ff ff86 	bl	9001b454 <_ZN8touchgfx7Unicode6strlenEPKt>
9001b548:	f1b8 0f00 	cmp.w	r8, #0
9001b54c:	bf0c      	ite	eq
9001b54e:	4684      	moveq	ip, r0
9001b550:	f100 0c01 	addne.w	ip, r0, #1
9001b554:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001b558:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
9001b55c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001b55e:	fa1f fc8c 	uxth.w	ip, ip
9001b562:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b564:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001b568:	9903      	ldr	r1, [sp, #12]
9001b56a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001b56e:	d041      	beq.n	9001b5f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001b570:	d834      	bhi.n	9001b5dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001b572:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001b576:	d059      	beq.n	9001b62c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001b578:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
9001b57c:	d03a      	beq.n	9001b5f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001b57e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
9001b582:	d034      	beq.n	9001b5ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001b584:	2400      	movs	r4, #0
9001b586:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001b58a:	3a01      	subs	r2, #1
9001b58c:	b169      	cbz	r1, 9001b5aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b58e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001b590:	458c      	cmp	ip, r1
9001b592:	da09      	bge.n	9001b5a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001b594:	eba1 010c 	sub.w	r1, r1, ip
9001b598:	b289      	uxth	r1, r1
9001b59a:	b933      	cbnz	r3, 9001b5aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b59c:	2e00      	cmp	r6, #0
9001b59e:	d051      	beq.n	9001b644 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001b5a0:	2800      	cmp	r0, #0
9001b5a2:	d04f      	beq.n	9001b644 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001b5a4:	440c      	add	r4, r1
9001b5a6:	b2a4      	uxth	r4, r4
9001b5a8:	2100      	movs	r1, #0
9001b5aa:	682b      	ldr	r3, [r5, #0]
9001b5ac:	4293      	cmp	r3, r2
9001b5ae:	da07      	bge.n	9001b5c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001b5b0:	f1b8 0f00 	cmp.w	r8, #0
9001b5b4:	d004      	beq.n	9001b5c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001b5b6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001b5ba:	682b      	ldr	r3, [r5, #0]
9001b5bc:	3301      	adds	r3, #1
9001b5be:	602b      	str	r3, [r5, #0]
9001b5c0:	2730      	movs	r7, #48	@ 0x30
9001b5c2:	2c00      	cmp	r4, #0
9001b5c4:	d04e      	beq.n	9001b664 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b5c6:	682e      	ldr	r6, [r5, #0]
9001b5c8:	3c01      	subs	r4, #1
9001b5ca:	42b2      	cmp	r2, r6
9001b5cc:	b2a4      	uxth	r4, r4
9001b5ce:	dd49      	ble.n	9001b664 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b5d0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001b5d4:	682b      	ldr	r3, [r5, #0]
9001b5d6:	3301      	adds	r3, #1
9001b5d8:	602b      	str	r3, [r5, #0]
9001b5da:	e7f2      	b.n	9001b5c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001b5dc:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001b5e0:	d01d      	beq.n	9001b61e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001b5e2:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
9001b5e6:	d002      	beq.n	9001b5ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001b5e8:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001b5ec:	e7c9      	b.n	9001b582 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001b5ee:	4684      	mov	ip, r0
9001b5f0:	f04f 0800 	mov.w	r8, #0
9001b5f4:	2c00      	cmp	r4, #0
9001b5f6:	d0c6      	beq.n	9001b586 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b5f8:	b947      	cbnz	r7, 9001b60c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b5fa:	2801      	cmp	r0, #1
9001b5fc:	d106      	bne.n	9001b60c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b5fe:	8814      	ldrh	r4, [r2, #0]
9001b600:	2c30      	cmp	r4, #48	@ 0x30
9001b602:	bf02      	ittt	eq
9001b604:	3202      	addeq	r2, #2
9001b606:	4638      	moveq	r0, r7
9001b608:	f8cb 2000 	streq.w	r2, [fp]
9001b60c:	45bc      	cmp	ip, r7
9001b60e:	da14      	bge.n	9001b63a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001b610:	b2bf      	uxth	r7, r7
9001b612:	eba7 040c 	sub.w	r4, r7, ip
9001b616:	46bc      	mov	ip, r7
9001b618:	b2a4      	uxth	r4, r4
9001b61a:	2600      	movs	r6, #0
9001b61c:	e7b3      	b.n	9001b586 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b61e:	4684      	mov	ip, r0
9001b620:	b16c      	cbz	r4, 9001b63e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001b622:	42b8      	cmp	r0, r7
9001b624:	dd00      	ble.n	9001b628 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001b626:	b2b8      	uxth	r0, r7
9001b628:	2400      	movs	r4, #0
9001b62a:	e003      	b.n	9001b634 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001b62c:	f04f 0c01 	mov.w	ip, #1
9001b630:	2400      	movs	r4, #0
9001b632:	4660      	mov	r0, ip
9001b634:	4626      	mov	r6, r4
9001b636:	46a0      	mov	r8, r4
9001b638:	e7a5      	b.n	9001b586 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b63a:	2400      	movs	r4, #0
9001b63c:	e7ed      	b.n	9001b61a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001b63e:	4626      	mov	r6, r4
9001b640:	46a0      	mov	r8, r4
9001b642:	e7a0      	b.n	9001b586 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b644:	2900      	cmp	r1, #0
9001b646:	d0b0      	beq.n	9001b5aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b648:	2720      	movs	r7, #32
9001b64a:	682e      	ldr	r6, [r5, #0]
9001b64c:	2900      	cmp	r1, #0
9001b64e:	d0ac      	beq.n	9001b5aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b650:	3901      	subs	r1, #1
9001b652:	4296      	cmp	r6, r2
9001b654:	b289      	uxth	r1, r1
9001b656:	daa7      	bge.n	9001b5a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001b658:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001b65c:	682b      	ldr	r3, [r5, #0]
9001b65e:	3301      	adds	r3, #1
9001b660:	602b      	str	r3, [r5, #0]
9001b662:	e7f2      	b.n	9001b64a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001b664:	b188      	cbz	r0, 9001b68a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b666:	682b      	ldr	r3, [r5, #0]
9001b668:	3801      	subs	r0, #1
9001b66a:	429a      	cmp	r2, r3
9001b66c:	b280      	uxth	r0, r0
9001b66e:	dd0c      	ble.n	9001b68a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b670:	f8db 3000 	ldr.w	r3, [fp]
9001b674:	1c9c      	adds	r4, r3, #2
9001b676:	f8cb 4000 	str.w	r4, [fp]
9001b67a:	881c      	ldrh	r4, [r3, #0]
9001b67c:	682b      	ldr	r3, [r5, #0]
9001b67e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001b682:	682b      	ldr	r3, [r5, #0]
9001b684:	3301      	adds	r3, #1
9001b686:	602b      	str	r3, [r5, #0]
9001b688:	e7ec      	b.n	9001b664 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b68a:	2620      	movs	r6, #32
9001b68c:	b151      	cbz	r1, 9001b6a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b68e:	6828      	ldr	r0, [r5, #0]
9001b690:	3901      	subs	r1, #1
9001b692:	4282      	cmp	r2, r0
9001b694:	b289      	uxth	r1, r1
9001b696:	dd05      	ble.n	9001b6a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b698:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001b69c:	682b      	ldr	r3, [r5, #0]
9001b69e:	3301      	adds	r3, #1
9001b6a0:	602b      	str	r3, [r5, #0]
9001b6a2:	e7f3      	b.n	9001b68c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001b6a4:	b005      	add	sp, #20
9001b6a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b6aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001b6aa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001b6ae:	2400      	movs	r4, #0
9001b6b0:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001b6b4:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001b6b8:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001b6bc:	8014      	strh	r4, [r2, #0]
9001b6be:	701c      	strb	r4, [r3, #0]
9001b6c0:	f888 4000 	strb.w	r4, [r8]
9001b6c4:	f88c 4000 	strb.w	r4, [ip]
9001b6c8:	f88e 4000 	strb.w	r4, [lr]
9001b6cc:	703c      	strb	r4, [r7, #0]
9001b6ce:	6804      	ldr	r4, [r0, #0]
9001b6d0:	b1a4      	cbz	r4, 9001b6fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001b6d2:	8824      	ldrh	r4, [r4, #0]
9001b6d4:	f04f 0901 	mov.w	r9, #1
9001b6d8:	b314      	cbz	r4, 9001b720 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b6da:	2c2b      	cmp	r4, #43	@ 0x2b
9001b6dc:	d001      	beq.n	9001b6e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001b6de:	2c20      	cmp	r4, #32
9001b6e0:	d110      	bne.n	9001b704 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001b6e2:	8014      	strh	r4, [r2, #0]
9001b6e4:	6804      	ldr	r4, [r0, #0]
9001b6e6:	b10c      	cbz	r4, 9001b6ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001b6e8:	3402      	adds	r4, #2
9001b6ea:	6004      	str	r4, [r0, #0]
9001b6ec:	680c      	ldr	r4, [r1, #0]
9001b6ee:	b10c      	cbz	r4, 9001b6f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001b6f0:	3401      	adds	r4, #1
9001b6f2:	600c      	str	r4, [r1, #0]
9001b6f4:	6804      	ldr	r4, [r0, #0]
9001b6f6:	b17c      	cbz	r4, 9001b718 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001b6f8:	8824      	ldrh	r4, [r4, #0]
9001b6fa:	e7ed      	b.n	9001b6d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b6fc:	680c      	ldr	r4, [r1, #0]
9001b6fe:	b17c      	cbz	r4, 9001b720 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b700:	7824      	ldrb	r4, [r4, #0]
9001b702:	e7e7      	b.n	9001b6d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001b704:	2c2d      	cmp	r4, #45	@ 0x2d
9001b706:	d102      	bne.n	9001b70e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001b708:	f883 9000 	strb.w	r9, [r3]
9001b70c:	e7ea      	b.n	9001b6e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b70e:	2c23      	cmp	r4, #35	@ 0x23
9001b710:	d107      	bne.n	9001b722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001b712:	f888 9000 	strb.w	r9, [r8]
9001b716:	e7e5      	b.n	9001b6e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b718:	680c      	ldr	r4, [r1, #0]
9001b71a:	b10c      	cbz	r4, 9001b720 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b71c:	7824      	ldrb	r4, [r4, #0]
9001b71e:	e7db      	b.n	9001b6d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b720:	2400      	movs	r4, #0
9001b722:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
9001b726:	2b09      	cmp	r3, #9
9001b728:	d901      	bls.n	9001b72e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001b72a:	2c2a      	cmp	r4, #42	@ 0x2a
9001b72c:	d122      	bne.n	9001b774 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b72e:	2301      	movs	r3, #1
9001b730:	2c30      	cmp	r4, #48	@ 0x30
9001b732:	f88e 3000 	strb.w	r3, [lr]
9001b736:	d10d      	bne.n	9001b754 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b738:	f88c 3000 	strb.w	r3, [ip]
9001b73c:	6803      	ldr	r3, [r0, #0]
9001b73e:	b10b      	cbz	r3, 9001b744 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001b740:	3302      	adds	r3, #2
9001b742:	6003      	str	r3, [r0, #0]
9001b744:	680b      	ldr	r3, [r1, #0]
9001b746:	b10b      	cbz	r3, 9001b74c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001b748:	3301      	adds	r3, #1
9001b74a:	600b      	str	r3, [r1, #0]
9001b74c:	6803      	ldr	r3, [r0, #0]
9001b74e:	2b00      	cmp	r3, #0
9001b750:	d02f      	beq.n	9001b7b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001b752:	881c      	ldrh	r4, [r3, #0]
9001b754:	2c2a      	cmp	r4, #42	@ 0x2a
9001b756:	d135      	bne.n	9001b7c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b758:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
9001b75c:	6033      	str	r3, [r6, #0]
9001b75e:	6803      	ldr	r3, [r0, #0]
9001b760:	b10b      	cbz	r3, 9001b766 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001b762:	3302      	adds	r3, #2
9001b764:	6003      	str	r3, [r0, #0]
9001b766:	680b      	ldr	r3, [r1, #0]
9001b768:	b10b      	cbz	r3, 9001b76e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001b76a:	3301      	adds	r3, #1
9001b76c:	600b      	str	r3, [r1, #0]
9001b76e:	6803      	ldr	r3, [r0, #0]
9001b770:	b31b      	cbz	r3, 9001b7ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001b772:	881c      	ldrh	r4, [r3, #0]
9001b774:	2c2e      	cmp	r4, #46	@ 0x2e
9001b776:	d11a      	bne.n	9001b7ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b778:	2301      	movs	r3, #1
9001b77a:	703b      	strb	r3, [r7, #0]
9001b77c:	6803      	ldr	r3, [r0, #0]
9001b77e:	b10b      	cbz	r3, 9001b784 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001b780:	3302      	adds	r3, #2
9001b782:	6003      	str	r3, [r0, #0]
9001b784:	680b      	ldr	r3, [r1, #0]
9001b786:	b10b      	cbz	r3, 9001b78c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001b788:	3301      	adds	r3, #1
9001b78a:	600b      	str	r3, [r1, #0]
9001b78c:	6803      	ldr	r3, [r0, #0]
9001b78e:	2b00      	cmp	r3, #0
9001b790:	d036      	beq.n	9001b800 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001b792:	881b      	ldrh	r3, [r3, #0]
9001b794:	2b2a      	cmp	r3, #42	@ 0x2a
9001b796:	d137      	bne.n	9001b808 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b798:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
9001b79c:	602b      	str	r3, [r5, #0]
9001b79e:	6803      	ldr	r3, [r0, #0]
9001b7a0:	b10b      	cbz	r3, 9001b7a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001b7a2:	3302      	adds	r3, #2
9001b7a4:	6003      	str	r3, [r0, #0]
9001b7a6:	680b      	ldr	r3, [r1, #0]
9001b7a8:	b10b      	cbz	r3, 9001b7ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b7aa:	3301      	adds	r3, #1
9001b7ac:	600b      	str	r3, [r1, #0]
9001b7ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001b7b2:	680c      	ldr	r4, [r1, #0]
9001b7b4:	b134      	cbz	r4, 9001b7c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b7b6:	7824      	ldrb	r4, [r4, #0]
9001b7b8:	e7cc      	b.n	9001b754 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b7ba:	680b      	ldr	r3, [r1, #0]
9001b7bc:	2b00      	cmp	r3, #0
9001b7be:	d0f6      	beq.n	9001b7ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b7c0:	781c      	ldrb	r4, [r3, #0]
9001b7c2:	e7d7      	b.n	9001b774 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b7c4:	2300      	movs	r3, #0
9001b7c6:	220a      	movs	r2, #10
9001b7c8:	6033      	str	r3, [r6, #0]
9001b7ca:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001b7ce:	fa1f f38c 	uxth.w	r3, ip
9001b7d2:	2b09      	cmp	r3, #9
9001b7d4:	d8ce      	bhi.n	9001b774 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b7d6:	6833      	ldr	r3, [r6, #0]
9001b7d8:	fb02 c303 	mla	r3, r2, r3, ip
9001b7dc:	6033      	str	r3, [r6, #0]
9001b7de:	6803      	ldr	r3, [r0, #0]
9001b7e0:	b10b      	cbz	r3, 9001b7e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001b7e2:	3302      	adds	r3, #2
9001b7e4:	6003      	str	r3, [r0, #0]
9001b7e6:	680b      	ldr	r3, [r1, #0]
9001b7e8:	b10b      	cbz	r3, 9001b7ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001b7ea:	3301      	adds	r3, #1
9001b7ec:	600b      	str	r3, [r1, #0]
9001b7ee:	6803      	ldr	r3, [r0, #0]
9001b7f0:	b10b      	cbz	r3, 9001b7f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001b7f2:	881c      	ldrh	r4, [r3, #0]
9001b7f4:	e7e9      	b.n	9001b7ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b7f6:	680c      	ldr	r4, [r1, #0]
9001b7f8:	2c00      	cmp	r4, #0
9001b7fa:	d0e6      	beq.n	9001b7ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b7fc:	7824      	ldrb	r4, [r4, #0]
9001b7fe:	e7e4      	b.n	9001b7ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b800:	680b      	ldr	r3, [r1, #0]
9001b802:	b10b      	cbz	r3, 9001b808 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b804:	781b      	ldrb	r3, [r3, #0]
9001b806:	e7c5      	b.n	9001b794 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001b808:	2200      	movs	r2, #0
9001b80a:	240a      	movs	r4, #10
9001b80c:	602a      	str	r2, [r5, #0]
9001b80e:	3b30      	subs	r3, #48	@ 0x30
9001b810:	682a      	ldr	r2, [r5, #0]
9001b812:	b29e      	uxth	r6, r3
9001b814:	2e09      	cmp	r6, #9
9001b816:	d813      	bhi.n	9001b840 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001b818:	fb04 3302 	mla	r3, r4, r2, r3
9001b81c:	602b      	str	r3, [r5, #0]
9001b81e:	6803      	ldr	r3, [r0, #0]
9001b820:	b10b      	cbz	r3, 9001b826 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001b822:	3302      	adds	r3, #2
9001b824:	6003      	str	r3, [r0, #0]
9001b826:	680b      	ldr	r3, [r1, #0]
9001b828:	b10b      	cbz	r3, 9001b82e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001b82a:	3301      	adds	r3, #1
9001b82c:	600b      	str	r3, [r1, #0]
9001b82e:	6803      	ldr	r3, [r0, #0]
9001b830:	b10b      	cbz	r3, 9001b836 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001b832:	881b      	ldrh	r3, [r3, #0]
9001b834:	e7eb      	b.n	9001b80e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b836:	680b      	ldr	r3, [r1, #0]
9001b838:	2b00      	cmp	r3, #0
9001b83a:	d0e8      	beq.n	9001b80e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b83c:	781b      	ldrb	r3, [r3, #0]
9001b83e:	e7e6      	b.n	9001b80e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b840:	2a06      	cmp	r2, #6
9001b842:	bfa8      	it	ge
9001b844:	2206      	movge	r2, #6
9001b846:	602a      	str	r2, [r5, #0]
9001b848:	e7b1      	b.n	9001b7ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001b84a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001b84a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b84e:	b0a3      	sub	sp, #140	@ 0x8c
9001b850:	2600      	movs	r6, #0
9001b852:	4607      	mov	r7, r0
9001b854:	4688      	mov	r8, r1
9001b856:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
9001b85a:	4631      	mov	r1, r6
9001b85c:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001b85e:	4648      	mov	r0, r9
9001b860:	960d      	str	r6, [sp, #52]	@ 0x34
9001b862:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001b866:	2242      	movs	r2, #66	@ 0x42
9001b868:	f00f fa74 	bl	9002ad54 <memset>
9001b86c:	b15f      	cbz	r7, 9001b886 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001b86e:	f108 3aff 	add.w	sl, r8, #4294967295	@ 0xffffffff
9001b872:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001b874:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001b876:	b152      	cbz	r2, 9001b88e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001b878:	8812      	ldrh	r2, [r2, #0]
9001b87a:	b10a      	cbz	r2, 9001b880 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b87c:	459a      	cmp	sl, r3
9001b87e:	dc2e      	bgt.n	9001b8de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001b880:	2200      	movs	r2, #0
9001b882:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b886:	4638      	mov	r0, r7
9001b888:	b023      	add	sp, #140	@ 0x8c
9001b88a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b88e:	9a08      	ldr	r2, [sp, #32]
9001b890:	2a00      	cmp	r2, #0
9001b892:	d0f5      	beq.n	9001b880 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b894:	7812      	ldrb	r2, [r2, #0]
9001b896:	e7f0      	b.n	9001b87a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001b898:	2d00      	cmp	r5, #0
9001b89a:	d0ea      	beq.n	9001b872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b89c:	782a      	ldrb	r2, [r5, #0]
9001b89e:	b142      	cbz	r2, 9001b8b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001b8a0:	2a25      	cmp	r2, #37	@ 0x25
9001b8a2:	d001      	beq.n	9001b8a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001b8a4:	459a      	cmp	sl, r3
9001b8a6:	dc08      	bgt.n	9001b8ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001b8a8:	f1bb 0f00 	cmp.w	fp, #0
9001b8ac:	d121      	bne.n	9001b8f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001b8ae:	2d00      	cmp	r5, #0
9001b8b0:	d0df      	beq.n	9001b872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b8b2:	782a      	ldrb	r2, [r5, #0]
9001b8b4:	f04f 0b00 	mov.w	fp, #0
9001b8b8:	e01d      	b.n	9001b8f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001b8ba:	f1bb 0f00 	cmp.w	fp, #0
9001b8be:	d077      	beq.n	9001b9b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001b8c0:	f8bb 2000 	ldrh.w	r2, [fp]
9001b8c4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b8c8:	f1bb 0f00 	cmp.w	fp, #0
9001b8cc:	d002      	beq.n	9001b8d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001b8ce:	f10b 0202 	add.w	r2, fp, #2
9001b8d2:	9209      	str	r2, [sp, #36]	@ 0x24
9001b8d4:	b10d      	cbz	r5, 9001b8da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001b8d6:	3501      	adds	r5, #1
9001b8d8:	9508      	str	r5, [sp, #32]
9001b8da:	3301      	adds	r3, #1
9001b8dc:	930d      	str	r3, [sp, #52]	@ 0x34
9001b8de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001b8e0:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001b8e4:	f1bb 0f00 	cmp.w	fp, #0
9001b8e8:	d0d6      	beq.n	9001b898 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001b8ea:	f8bb 2000 	ldrh.w	r2, [fp]
9001b8ee:	2a00      	cmp	r2, #0
9001b8f0:	d1d6      	bne.n	9001b8a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001b8f2:	f8bb 2000 	ldrh.w	r2, [fp]
9001b8f6:	2a00      	cmp	r2, #0
9001b8f8:	d0bb      	beq.n	9001b872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b8fa:	459a      	cmp	sl, r3
9001b8fc:	ddb9      	ble.n	9001b872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b8fe:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001b902:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001b906:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001b90a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001b90e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001b912:	960e      	str	r6, [sp, #56]	@ 0x38
9001b914:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001b918:	960f      	str	r6, [sp, #60]	@ 0x3c
9001b91a:	f1bb 0f00 	cmp.w	fp, #0
9001b91e:	d002      	beq.n	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001b920:	f10b 0302 	add.w	r3, fp, #2
9001b924:	9309      	str	r3, [sp, #36]	@ 0x24
9001b926:	b10d      	cbz	r5, 9001b92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001b928:	1c6b      	adds	r3, r5, #1
9001b92a:	9308      	str	r3, [sp, #32]
9001b92c:	ab0f      	add	r3, sp, #60	@ 0x3c
9001b92e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001b932:	a908      	add	r1, sp, #32
9001b934:	a809      	add	r0, sp, #36	@ 0x24
9001b936:	9305      	str	r3, [sp, #20]
9001b938:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001b93c:	9304      	str	r3, [sp, #16]
9001b93e:	ab0e      	add	r3, sp, #56	@ 0x38
9001b940:	9303      	str	r3, [sp, #12]
9001b942:	ab0c      	add	r3, sp, #48	@ 0x30
9001b944:	9302      	str	r3, [sp, #8]
9001b946:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001b94a:	9301      	str	r3, [sp, #4]
9001b94c:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001b950:	9300      	str	r3, [sp, #0]
9001b952:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001b956:	f7ff fea8 	bl	9001b6aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001b95a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b95c:	2b00      	cmp	r3, #0
9001b95e:	bfbf      	itttt	lt
9001b960:	6823      	ldrlt	r3, [r4, #0]
9001b962:	3404      	addlt	r4, #4
9001b964:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b968:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001b96a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001b96c:	2b00      	cmp	r3, #0
9001b96e:	bfbe      	ittt	lt
9001b970:	6823      	ldrlt	r3, [r4, #0]
9001b972:	3404      	addlt	r4, #4
9001b974:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b978:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001b97c:	bfb8      	it	lt
9001b97e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001b980:	b1d9      	cbz	r1, 9001b9ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001b982:	880b      	ldrh	r3, [r1, #0]
9001b984:	2b69      	cmp	r3, #105	@ 0x69
9001b986:	d01f      	beq.n	9001b9c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b988:	d82f      	bhi.n	9001b9ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001b98a:	2b58      	cmp	r3, #88	@ 0x58
9001b98c:	d01c      	beq.n	9001b9c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b98e:	d818      	bhi.n	9001b9c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001b990:	2b25      	cmp	r3, #37	@ 0x25
9001b992:	d034      	beq.n	9001b9fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001b994:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001b996:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001b99a:	f1bb 0f00 	cmp.w	fp, #0
9001b99e:	f000 80b7 	beq.w	9001bb10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001b9a2:	f8bb 5000 	ldrh.w	r5, [fp]
9001b9a6:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001b9aa:	3301      	adds	r3, #1
9001b9ac:	930d      	str	r3, [sp, #52]	@ 0x34
9001b9ae:	e029      	b.n	9001ba04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b9b0:	b10d      	cbz	r5, 9001b9b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001b9b2:	782a      	ldrb	r2, [r5, #0]
9001b9b4:	e786      	b.n	9001b8c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b9b6:	462a      	mov	r2, r5
9001b9b8:	e784      	b.n	9001b8c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b9ba:	2a00      	cmp	r2, #0
9001b9bc:	d0ea      	beq.n	9001b994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b9be:	7813      	ldrb	r3, [r2, #0]
9001b9c0:	e7e0      	b.n	9001b984 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001b9c2:	3b63      	subs	r3, #99	@ 0x63
9001b9c4:	2b01      	cmp	r3, #1
9001b9c6:	d8e5      	bhi.n	9001b994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b9c8:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001b9cc:	b329      	cbz	r1, 9001ba1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001b9ce:	880b      	ldrh	r3, [r1, #0]
9001b9d0:	2b69      	cmp	r3, #105	@ 0x69
9001b9d2:	d063      	beq.n	9001ba9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b9d4:	d825      	bhi.n	9001ba22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001b9d6:	2b63      	cmp	r3, #99	@ 0x63
9001b9d8:	d038      	beq.n	9001ba4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001b9da:	2b64      	cmp	r3, #100	@ 0x64
9001b9dc:	d05e      	beq.n	9001ba9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b9de:	2b58      	cmp	r3, #88	@ 0x58
9001b9e0:	d07a      	beq.n	9001bad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001b9e2:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001b9e6:	4625      	mov	r5, r4
9001b9e8:	e036      	b.n	9001ba58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b9ea:	2b73      	cmp	r3, #115	@ 0x73
9001b9ec:	d0ec      	beq.n	9001b9c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b9ee:	d802      	bhi.n	9001b9f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001b9f0:	2b6f      	cmp	r3, #111	@ 0x6f
9001b9f2:	d1cf      	bne.n	9001b994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b9f4:	e7e8      	b.n	9001b9c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b9f6:	2b75      	cmp	r3, #117	@ 0x75
9001b9f8:	d0e6      	beq.n	9001b9c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b9fa:	2b78      	cmp	r3, #120	@ 0x78
9001b9fc:	e7f9      	b.n	9001b9f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001b9fe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ba00:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001ba04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ba06:	b10b      	cbz	r3, 9001ba0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001ba08:	3302      	adds	r3, #2
9001ba0a:	9309      	str	r3, [sp, #36]	@ 0x24
9001ba0c:	9b08      	ldr	r3, [sp, #32]
9001ba0e:	2b00      	cmp	r3, #0
9001ba10:	f43f af2f 	beq.w	9001b872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ba14:	3301      	adds	r3, #1
9001ba16:	9308      	str	r3, [sp, #32]
9001ba18:	e72b      	b.n	9001b872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ba1a:	2a00      	cmp	r2, #0
9001ba1c:	d0e1      	beq.n	9001b9e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ba1e:	7813      	ldrb	r3, [r2, #0]
9001ba20:	e7d6      	b.n	9001b9d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001ba22:	2b73      	cmp	r3, #115	@ 0x73
9001ba24:	d036      	beq.n	9001ba94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001ba26:	d807      	bhi.n	9001ba38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001ba28:	2b6f      	cmp	r3, #111	@ 0x6f
9001ba2a:	d1da      	bne.n	9001b9e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ba2c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ba2e:	1d25      	adds	r5, r4, #4
9001ba30:	2308      	movs	r3, #8
9001ba32:	eba8 0202 	sub.w	r2, r8, r2
9001ba36:	e049      	b.n	9001bacc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001ba38:	2b75      	cmp	r3, #117	@ 0x75
9001ba3a:	d042      	beq.n	9001bac2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001ba3c:	2b78      	cmp	r3, #120	@ 0x78
9001ba3e:	d1d0      	bne.n	9001b9e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ba40:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ba42:	1d25      	adds	r5, r4, #4
9001ba44:	2310      	movs	r3, #16
9001ba46:	eba8 0202 	sub.w	r2, r8, r2
9001ba4a:	e03f      	b.n	9001bacc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001ba4c:	6823      	ldr	r3, [r4, #0]
9001ba4e:	1d25      	adds	r5, r4, #4
9001ba50:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001ba54:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001ba58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ba5a:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001ba5e:	2b00      	cmp	r3, #0
9001ba60:	d051      	beq.n	9001bb06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001ba62:	881a      	ldrh	r2, [r3, #0]
9001ba64:	a80d      	add	r0, sp, #52	@ 0x34
9001ba66:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001ba6a:	462c      	mov	r4, r5
9001ba6c:	9005      	str	r0, [sp, #20]
9001ba6e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001ba72:	9004      	str	r0, [sp, #16]
9001ba74:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001ba76:	9003      	str	r0, [sp, #12]
9001ba78:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001ba7c:	9002      	str	r0, [sp, #8]
9001ba7e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001ba80:	9001      	str	r0, [sp, #4]
9001ba82:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001ba86:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001ba8a:	9000      	str	r0, [sp, #0]
9001ba8c:	a810      	add	r0, sp, #64	@ 0x40
9001ba8e:	f7ff fd49 	bl	9001b524 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001ba92:	e7b7      	b.n	9001ba04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001ba94:	1d25      	adds	r5, r4, #4
9001ba96:	6823      	ldr	r3, [r4, #0]
9001ba98:	9310      	str	r3, [sp, #64]	@ 0x40
9001ba9a:	e7dd      	b.n	9001ba58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ba9c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ba9e:	230a      	movs	r3, #10
9001baa0:	4649      	mov	r1, r9
9001baa2:	6820      	ldr	r0, [r4, #0]
9001baa4:	eba8 0202 	sub.w	r2, r8, r2
9001baa8:	1d25      	adds	r5, r4, #4
9001baaa:	b292      	uxth	r2, r2
9001baac:	f7ff fcf0 	bl	9001b490 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001bab0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001bab4:	2b2d      	cmp	r3, #45	@ 0x2d
9001bab6:	d1cf      	bne.n	9001ba58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001bab8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001babc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001babe:	3302      	adds	r3, #2
9001bac0:	e7ea      	b.n	9001ba98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001bac2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001bac4:	1d25      	adds	r5, r4, #4
9001bac6:	230a      	movs	r3, #10
9001bac8:	eba8 0202 	sub.w	r2, r8, r2
9001bacc:	b292      	uxth	r2, r2
9001bace:	4649      	mov	r1, r9
9001bad0:	6820      	ldr	r0, [r4, #0]
9001bad2:	f7ff fd09 	bl	9001b4e8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001bad6:	e7bf      	b.n	9001ba58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001bad8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001bada:	2310      	movs	r3, #16
9001badc:	4649      	mov	r1, r9
9001bade:	6820      	ldr	r0, [r4, #0]
9001bae0:	eba8 0202 	sub.w	r2, r8, r2
9001bae4:	1d25      	adds	r5, r4, #4
9001bae6:	b292      	uxth	r2, r2
9001bae8:	f7ff fcfe 	bl	9001b4e8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001baec:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001baf0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001baf4:	2b00      	cmp	r3, #0
9001baf6:	d0af      	beq.n	9001ba58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001baf8:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001bafc:	2919      	cmp	r1, #25
9001bafe:	d8f7      	bhi.n	9001baf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001bb00:	3b20      	subs	r3, #32
9001bb02:	8013      	strh	r3, [r2, #0]
9001bb04:	e7f4      	b.n	9001baf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001bb06:	9a08      	ldr	r2, [sp, #32]
9001bb08:	2a00      	cmp	r2, #0
9001bb0a:	d0ab      	beq.n	9001ba64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001bb0c:	7812      	ldrb	r2, [r2, #0]
9001bb0e:	e7a9      	b.n	9001ba64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001bb10:	2d00      	cmp	r5, #0
9001bb12:	f43f af48 	beq.w	9001b9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001bb16:	782d      	ldrb	r5, [r5, #0]
9001bb18:	e745      	b.n	9001b9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001bb1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001bb1a:	b507      	push	{r0, r1, r2, lr}
9001bb1c:	9300      	str	r3, [sp, #0]
9001bb1e:	4613      	mov	r3, r2
9001bb20:	2200      	movs	r2, #0
9001bb22:	f7ff fe92 	bl	9001b84a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001bb26:	b003      	add	sp, #12
9001bb28:	f85d fb04 	ldr.w	pc, [sp], #4

9001bb2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001bb2c:	b40c      	push	{r2, r3}
9001bb2e:	b507      	push	{r0, r1, r2, lr}
9001bb30:	ab04      	add	r3, sp, #16
9001bb32:	f853 2b04 	ldr.w	r2, [r3], #4
9001bb36:	9301      	str	r3, [sp, #4]
9001bb38:	f7ff ffef 	bl	9001bb1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001bb3c:	b003      	add	sp, #12
9001bb3e:	f85d eb04 	ldr.w	lr, [sp], #4
9001bb42:	b002      	add	sp, #8
9001bb44:	4770      	bx	lr
	...

9001bb48 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001bb48:	4b01      	ldr	r3, [pc, #4]	@ (9001bb50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001bb4a:	6018      	str	r0, [r3, #0]
9001bb4c:	4770      	bx	lr
9001bb4e:	bf00      	nop
9001bb50:	24023474 	.word	0x24023474

9001bb54 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001bb54:	4b06      	ldr	r3, [pc, #24]	@ (9001bb70 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001bb56:	881a      	ldrh	r2, [r3, #0]
9001bb58:	4282      	cmp	r2, r0
9001bb5a:	d807      	bhi.n	9001bb6c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001bb5c:	4b05      	ldr	r3, [pc, #20]	@ (9001bb74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001bb5e:	881b      	ldrh	r3, [r3, #0]
9001bb60:	4413      	add	r3, r2
9001bb62:	4298      	cmp	r0, r3
9001bb64:	bfac      	ite	ge
9001bb66:	2000      	movge	r0, #0
9001bb68:	2001      	movlt	r0, #1
9001bb6a:	4770      	bx	lr
9001bb6c:	2000      	movs	r0, #0
9001bb6e:	4770      	bx	lr
9001bb70:	24023494 	.word	0x24023494
9001bb74:	24023498 	.word	0x24023498

9001bb78 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001bb78:	b508      	push	{r3, lr}
9001bb7a:	4601      	mov	r1, r0
9001bb7c:	f7ff ffea 	bl	9001bb54 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001bb80:	b118      	cbz	r0, 9001bb8a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001bb82:	4b02      	ldr	r3, [pc, #8]	@ (9001bb8c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001bb84:	681b      	ldr	r3, [r3, #0]
9001bb86:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001bb8a:	bd08      	pop	{r3, pc}
9001bb8c:	24023478 	.word	0x24023478

9001bb90 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001bb90:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bb92:	4c24      	ldr	r4, [pc, #144]	@ (9001bc24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001bb94:	6823      	ldr	r3, [r4, #0]
9001bb96:	2b00      	cmp	r3, #0
9001bb98:	d042      	beq.n	9001bc20 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001bb9a:	4a23      	ldr	r2, [pc, #140]	@ (9001bc28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001bb9c:	4d23      	ldr	r5, [pc, #140]	@ (9001bc2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001bb9e:	8811      	ldrh	r1, [r2, #0]
9001bba0:	f8b5 c000 	ldrh.w	ip, [r5]
9001bba4:	4822      	ldr	r0, [pc, #136]	@ (9001bc30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001bba6:	4461      	add	r1, ip
9001bba8:	1c4a      	adds	r2, r1, #1
9001bbaa:	008f      	lsls	r7, r1, #2
9001bbac:	f022 0201 	bic.w	r2, r2, #1
9001bbb0:	19de      	adds	r6, r3, r7
9001bbb2:	0412      	lsls	r2, r2, #16
9001bbb4:	6006      	str	r6, [r0, #0]
9001bbb6:	4e1f      	ldr	r6, [pc, #124]	@ (9001bc34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001bbb8:	0c12      	lsrs	r2, r2, #16
9001bbba:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001bbbe:	19da      	adds	r2, r3, r7
9001bbc0:	6032      	str	r2, [r6, #0]
9001bbc2:	220e      	movs	r2, #14
9001bbc4:	fb02 f20c 	mul.w	r2, r2, ip
9001bbc8:	3203      	adds	r2, #3
9001bbca:	f022 0203 	bic.w	r2, r2, #3
9001bbce:	443a      	add	r2, r7
9001bbd0:	4f19      	ldr	r7, [pc, #100]	@ (9001bc38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001bbd2:	4413      	add	r3, r2
9001bbd4:	603b      	str	r3, [r7, #0]
9001bbd6:	2300      	movs	r3, #0
9001bbd8:	4f18      	ldr	r7, [pc, #96]	@ (9001bc3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001bbda:	469c      	mov	ip, r3
9001bbdc:	803b      	strh	r3, [r7, #0]
9001bbde:	4f18      	ldr	r7, [pc, #96]	@ (9001bc40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001bbe0:	683f      	ldr	r7, [r7, #0]
9001bbe2:	1aba      	subs	r2, r7, r2
9001bbe4:	4f17      	ldr	r7, [pc, #92]	@ (9001bc44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001bbe6:	603a      	str	r2, [r7, #0]
9001bbe8:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001bbec:	4a16      	ldr	r2, [pc, #88]	@ (9001bc48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001bbee:	8013      	strh	r3, [r2, #0]
9001bbf0:	428b      	cmp	r3, r1
9001bbf2:	d10d      	bne.n	9001bc10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001bbf4:	882d      	ldrh	r5, [r5, #0]
9001bbf6:	2300      	movs	r3, #0
9001bbf8:	6830      	ldr	r0, [r6, #0]
9001bbfa:	240e      	movs	r4, #14
9001bbfc:	429d      	cmp	r5, r3
9001bbfe:	d90f      	bls.n	9001bc20 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001bc00:	fb04 0203 	mla	r2, r4, r3, r0
9001bc04:	3301      	adds	r3, #1
9001bc06:	7b11      	ldrb	r1, [r2, #12]
9001bc08:	f36f 1145 	bfc	r1, #5, #1
9001bc0c:	7311      	strb	r1, [r2, #12]
9001bc0e:	e7f5      	b.n	9001bbfc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001bc10:	6822      	ldr	r2, [r4, #0]
9001bc12:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001bc16:	6802      	ldr	r2, [r0, #0]
9001bc18:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001bc1c:	3301      	adds	r3, #1
9001bc1e:	e7e7      	b.n	9001bbf0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001bc20:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001bc22:	bf00      	nop
9001bc24:	24023478 	.word	0x24023478
9001bc28:	24023494 	.word	0x24023494
9001bc2c:	24023498 	.word	0x24023498
9001bc30:	2402348c 	.word	0x2402348c
9001bc34:	2402347c 	.word	0x2402347c
9001bc38:	24023484 	.word	0x24023484
9001bc3c:	24023496 	.word	0x24023496
9001bc40:	24023480 	.word	0x24023480
9001bc44:	24023490 	.word	0x24023490
9001bc48:	24023488 	.word	0x24023488

9001bc4c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001bc4c:	4b06      	ldr	r3, [pc, #24]	@ (9001bc68 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001bc4e:	681b      	ldr	r3, [r3, #0]
9001bc50:	b943      	cbnz	r3, 9001bc64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001bc52:	b139      	cbz	r1, 9001bc64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001bc54:	4b05      	ldr	r3, [pc, #20]	@ (9001bc6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001bc56:	801a      	strh	r2, [r3, #0]
9001bc58:	4b05      	ldr	r3, [pc, #20]	@ (9001bc70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001bc5a:	6019      	str	r1, [r3, #0]
9001bc5c:	4b05      	ldr	r3, [pc, #20]	@ (9001bc74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001bc5e:	6018      	str	r0, [r3, #0]
9001bc60:	f7ff bf96 	b.w	9001bb90 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001bc64:	4770      	bx	lr
9001bc66:	bf00      	nop
9001bc68:	24023484 	.word	0x24023484
9001bc6c:	24023498 	.word	0x24023498
9001bc70:	24023480 	.word	0x24023480
9001bc74:	24023478 	.word	0x24023478

9001bc78 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001bc78:	b470      	push	{r4, r5, r6}
9001bc7a:	4c07      	ldr	r4, [pc, #28]	@ (9001bc98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001bc7c:	4605      	mov	r5, r0
9001bc7e:	4610      	mov	r0, r2
9001bc80:	9a03      	ldr	r2, [sp, #12]
9001bc82:	6826      	ldr	r6, [r4, #0]
9001bc84:	b936      	cbnz	r6, 9001bc94 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001bc86:	6025      	str	r5, [r4, #0]
9001bc88:	4c04      	ldr	r4, [pc, #16]	@ (9001bc9c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001bc8a:	8021      	strh	r1, [r4, #0]
9001bc8c:	4619      	mov	r1, r3
9001bc8e:	bc70      	pop	{r4, r5, r6}
9001bc90:	f7ff bfdc 	b.w	9001bc4c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001bc94:	bc70      	pop	{r4, r5, r6}
9001bc96:	4770      	bx	lr
9001bc98:	2402349c 	.word	0x2402349c
9001bc9c:	24023494 	.word	0x24023494

9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001bca0:	4a12      	ldr	r2, [pc, #72]	@ (9001bcec <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001bca2:	8803      	ldrh	r3, [r0, #0]
9001bca4:	8812      	ldrh	r2, [r2, #0]
9001bca6:	4293      	cmp	r3, r2
9001bca8:	d207      	bcs.n	9001bcba <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001bcaa:	4a11      	ldr	r2, [pc, #68]	@ (9001bcf0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001bcac:	2114      	movs	r1, #20
9001bcae:	6812      	ldr	r2, [r2, #0]
9001bcb0:	fb01 2303 	mla	r3, r1, r3, r2
9001bcb4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001bcb8:	4770      	bx	lr
9001bcba:	490e      	ldr	r1, [pc, #56]	@ (9001bcf4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001bcbc:	8809      	ldrh	r1, [r1, #0]
9001bcbe:	4411      	add	r1, r2
9001bcc0:	428b      	cmp	r3, r1
9001bcc2:	da04      	bge.n	9001bcce <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001bcc4:	1a9b      	subs	r3, r3, r2
9001bcc6:	4a0c      	ldr	r2, [pc, #48]	@ (9001bcf8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001bcc8:	210e      	movs	r1, #14
9001bcca:	6812      	ldr	r2, [r2, #0]
9001bccc:	e7f0      	b.n	9001bcb0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001bcce:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001bcd2:	4293      	cmp	r3, r2
9001bcd4:	d108      	bne.n	9001bce8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001bcd6:	4b09      	ldr	r3, [pc, #36]	@ (9001bcfc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001bcd8:	781b      	ldrb	r3, [r3, #0]
9001bcda:	b91b      	cbnz	r3, 9001bce4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001bcdc:	4b08      	ldr	r3, [pc, #32]	@ (9001bd00 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001bcde:	f9b3 0000 	ldrsh.w	r0, [r3]
9001bce2:	4770      	bx	lr
9001bce4:	4b07      	ldr	r3, [pc, #28]	@ (9001bd04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001bce6:	e7fa      	b.n	9001bcde <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001bce8:	2000      	movs	r0, #0
9001bcea:	4770      	bx	lr
9001bcec:	24023494 	.word	0x24023494
9001bcf0:	2402349c 	.word	0x2402349c
9001bcf4:	24023498 	.word	0x24023498
9001bcf8:	2402347c 	.word	0x2402347c
9001bcfc:	24023404 	.word	0x24023404
9001bd00:	24023406 	.word	0x24023406
9001bd04:	24023408 	.word	0x24023408

9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001bd08:	4a12      	ldr	r2, [pc, #72]	@ (9001bd54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001bd0a:	8803      	ldrh	r3, [r0, #0]
9001bd0c:	8812      	ldrh	r2, [r2, #0]
9001bd0e:	4293      	cmp	r3, r2
9001bd10:	d207      	bcs.n	9001bd22 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001bd12:	4a11      	ldr	r2, [pc, #68]	@ (9001bd58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001bd14:	2114      	movs	r1, #20
9001bd16:	6812      	ldr	r2, [r2, #0]
9001bd18:	fb01 2303 	mla	r3, r1, r3, r2
9001bd1c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001bd20:	4770      	bx	lr
9001bd22:	490e      	ldr	r1, [pc, #56]	@ (9001bd5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001bd24:	8809      	ldrh	r1, [r1, #0]
9001bd26:	4411      	add	r1, r2
9001bd28:	428b      	cmp	r3, r1
9001bd2a:	da04      	bge.n	9001bd36 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001bd2c:	1a9b      	subs	r3, r3, r2
9001bd2e:	4a0c      	ldr	r2, [pc, #48]	@ (9001bd60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001bd30:	210e      	movs	r1, #14
9001bd32:	6812      	ldr	r2, [r2, #0]
9001bd34:	e7f0      	b.n	9001bd18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001bd36:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001bd3a:	4293      	cmp	r3, r2
9001bd3c:	d108      	bne.n	9001bd50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001bd3e:	4b09      	ldr	r3, [pc, #36]	@ (9001bd64 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001bd40:	781b      	ldrb	r3, [r3, #0]
9001bd42:	b91b      	cbnz	r3, 9001bd4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001bd44:	4b08      	ldr	r3, [pc, #32]	@ (9001bd68 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001bd46:	f9b3 0000 	ldrsh.w	r0, [r3]
9001bd4a:	4770      	bx	lr
9001bd4c:	4b07      	ldr	r3, [pc, #28]	@ (9001bd6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001bd4e:	e7fa      	b.n	9001bd46 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001bd50:	2000      	movs	r0, #0
9001bd52:	4770      	bx	lr
9001bd54:	24023494 	.word	0x24023494
9001bd58:	2402349c 	.word	0x2402349c
9001bd5c:	24023498 	.word	0x24023498
9001bd60:	2402347c 	.word	0x2402347c
9001bd64:	24023404 	.word	0x24023404
9001bd68:	24023408 	.word	0x24023408
9001bd6c:	24023406 	.word	0x24023406

9001bd70 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001bd70:	4a1f      	ldr	r2, [pc, #124]	@ (9001bdf0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001bd72:	b510      	push	{r4, lr}
9001bd74:	880b      	ldrh	r3, [r1, #0]
9001bd76:	8812      	ldrh	r2, [r2, #0]
9001bd78:	4293      	cmp	r3, r2
9001bd7a:	d213      	bcs.n	9001bda4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001bd7c:	4a1d      	ldr	r2, [pc, #116]	@ (9001bdf4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001bd7e:	2114      	movs	r1, #20
9001bd80:	6812      	ldr	r2, [r2, #0]
9001bd82:	fb01 2303 	mla	r3, r1, r3, r2
9001bd86:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001bd8a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001bd8e:	8a1a      	ldrh	r2, [r3, #16]
9001bd90:	8a5b      	ldrh	r3, [r3, #18]
9001bd92:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001bd96:	8004      	strh	r4, [r0, #0]
9001bd98:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001bd9c:	8041      	strh	r1, [r0, #2]
9001bd9e:	8082      	strh	r2, [r0, #4]
9001bda0:	80c3      	strh	r3, [r0, #6]
9001bda2:	e00e      	b.n	9001bdc2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001bda4:	4914      	ldr	r1, [pc, #80]	@ (9001bdf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001bda6:	8809      	ldrh	r1, [r1, #0]
9001bda8:	4411      	add	r1, r2
9001bdaa:	428b      	cmp	r3, r1
9001bdac:	da0a      	bge.n	9001bdc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001bdae:	1a9b      	subs	r3, r3, r2
9001bdb0:	4a12      	ldr	r2, [pc, #72]	@ (9001bdfc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001bdb2:	210e      	movs	r1, #14
9001bdb4:	6812      	ldr	r2, [r2, #0]
9001bdb6:	fb01 2303 	mla	r3, r1, r3, r2
9001bdba:	681a      	ldr	r2, [r3, #0]
9001bdbc:	6002      	str	r2, [r0, #0]
9001bdbe:	685a      	ldr	r2, [r3, #4]
9001bdc0:	6042      	str	r2, [r0, #4]
9001bdc2:	bd10      	pop	{r4, pc}
9001bdc4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001bdc8:	4293      	cmp	r3, r2
9001bdca:	d10b      	bne.n	9001bde4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001bdcc:	4b0c      	ldr	r3, [pc, #48]	@ (9001be00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001bdce:	f9b3 1000 	ldrsh.w	r1, [r3]
9001bdd2:	4b0c      	ldr	r3, [pc, #48]	@ (9001be04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001bdd4:	8081      	strh	r1, [r0, #4]
9001bdd6:	f9b3 2000 	ldrsh.w	r2, [r3]
9001bdda:	2300      	movs	r3, #0
9001bddc:	80c2      	strh	r2, [r0, #6]
9001bdde:	8003      	strh	r3, [r0, #0]
9001bde0:	8043      	strh	r3, [r0, #2]
9001bde2:	e7ee      	b.n	9001bdc2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001bde4:	2300      	movs	r3, #0
9001bde6:	8003      	strh	r3, [r0, #0]
9001bde8:	8043      	strh	r3, [r0, #2]
9001bdea:	8083      	strh	r3, [r0, #4]
9001bdec:	e7d8      	b.n	9001bda0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001bdee:	bf00      	nop
9001bdf0:	24023494 	.word	0x24023494
9001bdf4:	2402349c 	.word	0x2402349c
9001bdf8:	24023498 	.word	0x24023498
9001bdfc:	2402347c 	.word	0x2402347c
9001be00:	24023400 	.word	0x24023400
9001be04:	24023402 	.word	0x24023402

9001be08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001be08:	4a17      	ldr	r2, [pc, #92]	@ (9001be68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001be0a:	8803      	ldrh	r3, [r0, #0]
9001be0c:	8812      	ldrh	r2, [r2, #0]
9001be0e:	4293      	cmp	r3, r2
9001be10:	d213      	bcs.n	9001be3a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001be12:	4a16      	ldr	r2, [pc, #88]	@ (9001be6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001be14:	2114      	movs	r1, #20
9001be16:	6812      	ldr	r2, [r2, #0]
9001be18:	fb01 2303 	mla	r3, r1, r3, r2
9001be1c:	8a1a      	ldrh	r2, [r3, #16]
9001be1e:	8919      	ldrh	r1, [r3, #8]
9001be20:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001be24:	428a      	cmp	r2, r1
9001be26:	db1d      	blt.n	9001be64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001be28:	8a58      	ldrh	r0, [r3, #18]
9001be2a:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001be2e:	895b      	ldrh	r3, [r3, #10]
9001be30:	4298      	cmp	r0, r3
9001be32:	bfac      	ite	ge
9001be34:	2000      	movge	r0, #0
9001be36:	2001      	movlt	r0, #1
9001be38:	4770      	bx	lr
9001be3a:	490d      	ldr	r1, [pc, #52]	@ (9001be70 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001be3c:	8809      	ldrh	r1, [r1, #0]
9001be3e:	4411      	add	r1, r2
9001be40:	428b      	cmp	r3, r1
9001be42:	da0d      	bge.n	9001be60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001be44:	1a9b      	subs	r3, r3, r2
9001be46:	4a0b      	ldr	r2, [pc, #44]	@ (9001be74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001be48:	210e      	movs	r1, #14
9001be4a:	6812      	ldr	r2, [r2, #0]
9001be4c:	fb01 2303 	mla	r3, r1, r3, r2
9001be50:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001be54:	891a      	ldrh	r2, [r3, #8]
9001be56:	4291      	cmp	r1, r2
9001be58:	db04      	blt.n	9001be64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001be5a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001be5e:	e7e6      	b.n	9001be2e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001be60:	2000      	movs	r0, #0
9001be62:	4770      	bx	lr
9001be64:	2001      	movs	r0, #1
9001be66:	4770      	bx	lr
9001be68:	24023494 	.word	0x24023494
9001be6c:	2402349c 	.word	0x2402349c
9001be70:	24023498 	.word	0x24023498
9001be74:	2402347c 	.word	0x2402347c

9001be78 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001be78:	4a12      	ldr	r2, [pc, #72]	@ (9001bec4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001be7a:	8803      	ldrh	r3, [r0, #0]
9001be7c:	8811      	ldrh	r1, [r2, #0]
9001be7e:	428b      	cmp	r3, r1
9001be80:	d20b      	bcs.n	9001be9a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001be82:	4a11      	ldr	r2, [pc, #68]	@ (9001bec8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001be84:	6812      	ldr	r2, [r2, #0]
9001be86:	b112      	cbz	r2, 9001be8e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001be88:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001be8c:	b9c0      	cbnz	r0, 9001bec0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001be8e:	4a0f      	ldr	r2, [pc, #60]	@ (9001becc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001be90:	6811      	ldr	r1, [r2, #0]
9001be92:	2214      	movs	r2, #20
9001be94:	4353      	muls	r3, r2
9001be96:	58c8      	ldr	r0, [r1, r3]
9001be98:	4770      	bx	lr
9001be9a:	4a0d      	ldr	r2, [pc, #52]	@ (9001bed0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001be9c:	8812      	ldrh	r2, [r2, #0]
9001be9e:	440a      	add	r2, r1
9001bea0:	4293      	cmp	r3, r2
9001bea2:	da04      	bge.n	9001beae <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001bea4:	4a08      	ldr	r2, [pc, #32]	@ (9001bec8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001bea6:	6812      	ldr	r2, [r2, #0]
9001bea8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001beac:	4770      	bx	lr
9001beae:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001beb2:	4293      	cmp	r3, r2
9001beb4:	d103      	bne.n	9001bebe <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001beb6:	4b07      	ldr	r3, [pc, #28]	@ (9001bed4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001beb8:	681b      	ldr	r3, [r3, #0]
9001beba:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001bebc:	4770      	bx	lr
9001bebe:	2000      	movs	r0, #0
9001bec0:	4770      	bx	lr
9001bec2:	bf00      	nop
9001bec4:	24023494 	.word	0x24023494
9001bec8:	24023478 	.word	0x24023478
9001becc:	2402349c 	.word	0x2402349c
9001bed0:	24023498 	.word	0x24023498
9001bed4:	2402340c 	.word	0x2402340c

9001bed8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001bed8:	4b24      	ldr	r3, [pc, #144]	@ (9001bf6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001beda:	8802      	ldrh	r2, [r0, #0]
9001bedc:	8818      	ldrh	r0, [r3, #0]
9001bede:	4282      	cmp	r2, r0
9001bee0:	d221      	bcs.n	9001bf26 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001bee2:	4b23      	ldr	r3, [pc, #140]	@ (9001bf70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001bee4:	6819      	ldr	r1, [r3, #0]
9001bee6:	2314      	movs	r3, #20
9001bee8:	fb03 1302 	mla	r3, r3, r2, r1
9001beec:	6858      	ldr	r0, [r3, #4]
9001beee:	2800      	cmp	r0, #0
9001bef0:	d03a      	beq.n	9001bf68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001bef2:	4920      	ldr	r1, [pc, #128]	@ (9001bf74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001bef4:	6809      	ldr	r1, [r1, #0]
9001bef6:	2900      	cmp	r1, #0
9001bef8:	d036      	beq.n	9001bf68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001befa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001befe:	2900      	cmp	r1, #0
9001bf00:	d032      	beq.n	9001bf68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001bf02:	891a      	ldrh	r2, [r3, #8]
9001bf04:	8958      	ldrh	r0, [r3, #10]
9001bf06:	4350      	muls	r0, r2
9001bf08:	7c5a      	ldrb	r2, [r3, #17]
9001bf0a:	7cdb      	ldrb	r3, [r3, #19]
9001bf0c:	0952      	lsrs	r2, r2, #5
9001bf0e:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001bf12:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001bf16:	2b0b      	cmp	r3, #11
9001bf18:	bf18      	it	ne
9001bf1a:	0040      	lslne	r0, r0, #1
9001bf1c:	3003      	adds	r0, #3
9001bf1e:	f020 0003 	bic.w	r0, r0, #3
9001bf22:	4408      	add	r0, r1
9001bf24:	4770      	bx	lr
9001bf26:	4b14      	ldr	r3, [pc, #80]	@ (9001bf78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001bf28:	881b      	ldrh	r3, [r3, #0]
9001bf2a:	4403      	add	r3, r0
9001bf2c:	429a      	cmp	r2, r3
9001bf2e:	da1a      	bge.n	9001bf66 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001bf30:	4b12      	ldr	r3, [pc, #72]	@ (9001bf7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001bf32:	1a10      	subs	r0, r2, r0
9001bf34:	210e      	movs	r1, #14
9001bf36:	681b      	ldr	r3, [r3, #0]
9001bf38:	fb01 3000 	mla	r0, r1, r0, r3
9001bf3c:	7b03      	ldrb	r3, [r0, #12]
9001bf3e:	f003 031f 	and.w	r3, r3, #31
9001bf42:	2b0b      	cmp	r3, #11
9001bf44:	d10b      	bne.n	9001bf5e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001bf46:	8903      	ldrh	r3, [r0, #8]
9001bf48:	8940      	ldrh	r0, [r0, #10]
9001bf4a:	4358      	muls	r0, r3
9001bf4c:	4b09      	ldr	r3, [pc, #36]	@ (9001bf74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001bf4e:	3003      	adds	r0, #3
9001bf50:	6819      	ldr	r1, [r3, #0]
9001bf52:	f020 0303 	bic.w	r3, r0, #3
9001bf56:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001bf5a:	4418      	add	r0, r3
9001bf5c:	4770      	bx	lr
9001bf5e:	2b0d      	cmp	r3, #13
9001bf60:	d101      	bne.n	9001bf66 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001bf62:	300d      	adds	r0, #13
9001bf64:	4770      	bx	lr
9001bf66:	2000      	movs	r0, #0
9001bf68:	4770      	bx	lr
9001bf6a:	bf00      	nop
9001bf6c:	24023494 	.word	0x24023494
9001bf70:	2402349c 	.word	0x2402349c
9001bf74:	24023478 	.word	0x24023478
9001bf78:	24023498 	.word	0x24023498
9001bf7c:	2402347c 	.word	0x2402347c

9001bf80 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001bf80:	4a17      	ldr	r2, [pc, #92]	@ (9001bfe0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001bf82:	b510      	push	{r4, lr}
9001bf84:	8803      	ldrh	r3, [r0, #0]
9001bf86:	8812      	ldrh	r2, [r2, #0]
9001bf88:	4293      	cmp	r3, r2
9001bf8a:	d20c      	bcs.n	9001bfa6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001bf8c:	4a15      	ldr	r2, [pc, #84]	@ (9001bfe4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001bf8e:	2114      	movs	r1, #20
9001bf90:	6812      	ldr	r2, [r2, #0]
9001bf92:	fb01 2303 	mla	r3, r1, r3, r2
9001bf96:	7c58      	ldrb	r0, [r3, #17]
9001bf98:	0942      	lsrs	r2, r0, #5
9001bf9a:	7cd8      	ldrb	r0, [r3, #19]
9001bf9c:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001bfa0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001bfa4:	bd10      	pop	{r4, pc}
9001bfa6:	4910      	ldr	r1, [pc, #64]	@ (9001bfe8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001bfa8:	8809      	ldrh	r1, [r1, #0]
9001bfaa:	4411      	add	r1, r2
9001bfac:	428b      	cmp	r3, r1
9001bfae:	da09      	bge.n	9001bfc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001bfb0:	1a9b      	subs	r3, r3, r2
9001bfb2:	4a0e      	ldr	r2, [pc, #56]	@ (9001bfec <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001bfb4:	210e      	movs	r1, #14
9001bfb6:	6812      	ldr	r2, [r2, #0]
9001bfb8:	fb01 2303 	mla	r3, r1, r3, r2
9001bfbc:	7b18      	ldrb	r0, [r3, #12]
9001bfbe:	f000 001f 	and.w	r0, r0, #31
9001bfc2:	e7ef      	b.n	9001bfa4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001bfc4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001bfc8:	4293      	cmp	r3, r2
9001bfca:	d106      	bne.n	9001bfda <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001bfcc:	f7f6 fbea 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
9001bfd0:	6803      	ldr	r3, [r0, #0]
9001bfd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001bfd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bfd8:	4718      	bx	r3
9001bfda:	2000      	movs	r0, #0
9001bfdc:	e7e2      	b.n	9001bfa4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001bfde:	bf00      	nop
9001bfe0:	24023494 	.word	0x24023494
9001bfe4:	2402349c 	.word	0x2402349c
9001bfe8:	24023498 	.word	0x24023498
9001bfec:	2402347c 	.word	0x2402347c

9001bff0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001bff0:	2010      	movs	r0, #16
9001bff2:	4770      	bx	lr

9001bff4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001bff4:	4b02      	ldr	r3, [pc, #8]	@ (9001c000 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001bff6:	8818      	ldrh	r0, [r3, #0]
9001bff8:	0040      	lsls	r0, r0, #1
9001bffa:	b280      	uxth	r0, r0
9001bffc:	4770      	bx	lr
9001bffe:	bf00      	nop
9001c000:	24023406 	.word	0x24023406

9001c004 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001c004:	2bff      	cmp	r3, #255	@ 0xff
9001c006:	d050      	beq.n	9001c0aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001c008:	2a0b      	cmp	r2, #11
9001c00a:	d04a      	beq.n	9001c0a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001c00c:	d80e      	bhi.n	9001c02c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001c00e:	2a03      	cmp	r2, #3
9001c010:	d03f      	beq.n	9001c092 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001c012:	d804      	bhi.n	9001c01e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001c014:	2a01      	cmp	r2, #1
9001c016:	d03e      	beq.n	9001c096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001c018:	d93f      	bls.n	9001c09a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001c01a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9001c01c:	4770      	bx	lr
9001c01e:	2a09      	cmp	r2, #9
9001c020:	d03f      	beq.n	9001c0a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001c022:	d83c      	bhi.n	9001c09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001c024:	2a08      	cmp	r2, #8
9001c026:	d03a      	beq.n	9001c09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001c028:	2000      	movs	r0, #0
9001c02a:	4770      	bx	lr
9001c02c:	2a2f      	cmp	r2, #47	@ 0x2f
9001c02e:	d024      	beq.n	9001c07a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001c030:	d80d      	bhi.n	9001c04e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001c032:	2a2d      	cmp	r2, #45	@ 0x2d
9001c034:	d014      	beq.n	9001c060 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001c036:	d826      	bhi.n	9001c086 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001c038:	2a2c      	cmp	r2, #44	@ 0x2c
9001c03a:	d1f5      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c03c:	684b      	ldr	r3, [r1, #4]
9001c03e:	781b      	ldrb	r3, [r3, #0]
9001c040:	2b01      	cmp	r3, #1
9001c042:	d018      	beq.n	9001c076 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001c044:	d323      	bcc.n	9001c08e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001c046:	2b02      	cmp	r3, #2
9001c048:	d1ee      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c04a:	68c0      	ldr	r0, [r0, #12]
9001c04c:	4770      	bx	lr
9001c04e:	2a31      	cmp	r2, #49	@ 0x31
9001c050:	d004      	beq.n	9001c05c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001c052:	d328      	bcc.n	9001c0a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001c054:	2a32      	cmp	r2, #50	@ 0x32
9001c056:	d026      	beq.n	9001c0a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001c058:	2a33      	cmp	r2, #51	@ 0x33
9001c05a:	d1e5      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c05c:	6f40      	ldr	r0, [r0, #116]	@ 0x74
9001c05e:	4770      	bx	lr
9001c060:	684b      	ldr	r3, [r1, #4]
9001c062:	781b      	ldrb	r3, [r3, #0]
9001c064:	2b01      	cmp	r3, #1
9001c066:	d004      	beq.n	9001c072 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001c068:	d30b      	bcc.n	9001c082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c06a:	2b02      	cmp	r3, #2
9001c06c:	d1dc      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c06e:	6940      	ldr	r0, [r0, #20]
9001c070:	4770      	bx	lr
9001c072:	6a40      	ldr	r0, [r0, #36]	@ 0x24
9001c074:	4770      	bx	lr
9001c076:	69c0      	ldr	r0, [r0, #28]
9001c078:	4770      	bx	lr
9001c07a:	684b      	ldr	r3, [r1, #4]
9001c07c:	781b      	ldrb	r3, [r3, #0]
9001c07e:	2b00      	cmp	r3, #0
9001c080:	d1d2      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c082:	6b40      	ldr	r0, [r0, #52]	@ 0x34
9001c084:	4770      	bx	lr
9001c086:	684b      	ldr	r3, [r1, #4]
9001c088:	781b      	ldrb	r3, [r3, #0]
9001c08a:	2b00      	cmp	r3, #0
9001c08c:	d1cc      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c08e:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
9001c090:	4770      	bx	lr
9001c092:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9001c094:	4770      	bx	lr
9001c096:	6d40      	ldr	r0, [r0, #84]	@ 0x54
9001c098:	4770      	bx	lr
9001c09a:	6c40      	ldr	r0, [r0, #68]	@ 0x44
9001c09c:	4770      	bx	lr
9001c09e:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
9001c0a0:	4770      	bx	lr
9001c0a2:	6e40      	ldr	r0, [r0, #100]	@ 0x64
9001c0a4:	4770      	bx	lr
9001c0a6:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
9001c0a8:	4770      	bx	lr
9001c0aa:	2a0b      	cmp	r2, #11
9001c0ac:	d049      	beq.n	9001c142 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001c0ae:	d80e      	bhi.n	9001c0ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001c0b0:	2a03      	cmp	r2, #3
9001c0b2:	d040      	beq.n	9001c136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001c0b4:	d804      	bhi.n	9001c0c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001c0b6:	2a01      	cmp	r2, #1
9001c0b8:	d03f      	beq.n	9001c13a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001c0ba:	d940      	bls.n	9001c13e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001c0bc:	6c00      	ldr	r0, [r0, #64]	@ 0x40
9001c0be:	4770      	bx	lr
9001c0c0:	2a09      	cmp	r2, #9
9001c0c2:	d03e      	beq.n	9001c142 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001c0c4:	d801      	bhi.n	9001c0ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001c0c6:	2a08      	cmp	r2, #8
9001c0c8:	d1ae      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c0ca:	6e00      	ldr	r0, [r0, #96]	@ 0x60
9001c0cc:	4770      	bx	lr
9001c0ce:	2a2f      	cmp	r2, #47	@ 0x2f
9001c0d0:	d024      	beq.n	9001c11c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001c0d2:	d80d      	bhi.n	9001c0f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001c0d4:	2a2d      	cmp	r2, #45	@ 0x2d
9001c0d6:	d014      	beq.n	9001c102 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001c0d8:	d826      	bhi.n	9001c128 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001c0da:	2a2c      	cmp	r2, #44	@ 0x2c
9001c0dc:	d1a4      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c0de:	684b      	ldr	r3, [r1, #4]
9001c0e0:	781b      	ldrb	r3, [r3, #0]
9001c0e2:	2b01      	cmp	r3, #1
9001c0e4:	d018      	beq.n	9001c118 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001c0e6:	d324      	bcc.n	9001c132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001c0e8:	2b02      	cmp	r3, #2
9001c0ea:	d19d      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c0ec:	6900      	ldr	r0, [r0, #16]
9001c0ee:	4770      	bx	lr
9001c0f0:	2a31      	cmp	r2, #49	@ 0x31
9001c0f2:	d004      	beq.n	9001c0fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001c0f4:	d327      	bcc.n	9001c146 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001c0f6:	2a32      	cmp	r2, #50	@ 0x32
9001c0f8:	d025      	beq.n	9001c146 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001c0fa:	2a33      	cmp	r2, #51	@ 0x33
9001c0fc:	d194      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c0fe:	6f80      	ldr	r0, [r0, #120]	@ 0x78
9001c100:	4770      	bx	lr
9001c102:	684b      	ldr	r3, [r1, #4]
9001c104:	781b      	ldrb	r3, [r3, #0]
9001c106:	2b01      	cmp	r3, #1
9001c108:	d004      	beq.n	9001c114 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001c10a:	d30b      	bcc.n	9001c124 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001c10c:	2b02      	cmp	r3, #2
9001c10e:	d18b      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c110:	6980      	ldr	r0, [r0, #24]
9001c112:	4770      	bx	lr
9001c114:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9001c116:	4770      	bx	lr
9001c118:	6a00      	ldr	r0, [r0, #32]
9001c11a:	4770      	bx	lr
9001c11c:	684b      	ldr	r3, [r1, #4]
9001c11e:	781b      	ldrb	r3, [r3, #0]
9001c120:	2b00      	cmp	r3, #0
9001c122:	d181      	bne.n	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c124:	6b80      	ldr	r0, [r0, #56]	@ 0x38
9001c126:	4770      	bx	lr
9001c128:	684b      	ldr	r3, [r1, #4]
9001c12a:	781b      	ldrb	r3, [r3, #0]
9001c12c:	2b00      	cmp	r3, #0
9001c12e:	f47f af7b 	bne.w	9001c028 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c132:	6b00      	ldr	r0, [r0, #48]	@ 0x30
9001c134:	4770      	bx	lr
9001c136:	6d00      	ldr	r0, [r0, #80]	@ 0x50
9001c138:	4770      	bx	lr
9001c13a:	6d80      	ldr	r0, [r0, #88]	@ 0x58
9001c13c:	4770      	bx	lr
9001c13e:	6c80      	ldr	r0, [r0, #72]	@ 0x48
9001c140:	4770      	bx	lr
9001c142:	6e80      	ldr	r0, [r0, #104]	@ 0x68
9001c144:	4770      	bx	lr
9001c146:	6f00      	ldr	r0, [r0, #112]	@ 0x70
9001c148:	4770      	bx	lr

9001c14a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c14a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c14e:	b087      	sub	sp, #28
9001c150:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c152:	9205      	str	r2, [sp, #20]
9001c154:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c158:	9101      	str	r1, [sp, #4]
9001c15a:	9202      	str	r2, [sp, #8]
9001c15c:	6841      	ldr	r1, [r0, #4]
9001c15e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001c162:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c166:	fb01 2404 	mla	r4, r1, r4, r2
9001c16a:	6802      	ldr	r2, [r0, #0]
9001c16c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c170:	f8de 2000 	ldr.w	r2, [lr]
9001c174:	9203      	str	r2, [sp, #12]
9001c176:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c17a:	3204      	adds	r2, #4
9001c17c:	9204      	str	r2, [sp, #16]
9001c17e:	9a02      	ldr	r2, [sp, #8]
9001c180:	43d6      	mvns	r6, r2
9001c182:	b2f6      	uxtb	r6, r6
9001c184:	9a01      	ldr	r2, [sp, #4]
9001c186:	2a00      	cmp	r2, #0
9001c188:	dc03      	bgt.n	9001c192 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001c18a:	9a05      	ldr	r2, [sp, #20]
9001c18c:	2a00      	cmp	r2, #0
9001c18e:	f340 8129 	ble.w	9001c3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001c192:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c194:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001c198:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c19c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c19e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001c1a2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c1a6:	2b00      	cmp	r3, #0
9001c1a8:	dd0e      	ble.n	9001c1c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c1aa:	1408      	asrs	r0, r1, #16
9001c1ac:	d405      	bmi.n	9001c1ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c1ae:	4560      	cmp	r0, ip
9001c1b0:	da03      	bge.n	9001c1ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c1b2:	1410      	asrs	r0, r2, #16
9001c1b4:	d401      	bmi.n	9001c1ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c1b6:	42b8      	cmp	r0, r7
9001c1b8:	db07      	blt.n	9001c1ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c1ba:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c1bc:	3b01      	subs	r3, #1
9001c1be:	3402      	adds	r4, #2
9001c1c0:	4401      	add	r1, r0
9001c1c2:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c1c4:	4402      	add	r2, r0
9001c1c6:	e7ee      	b.n	9001c1a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001c1c8:	d071      	beq.n	9001c2ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c1ca:	1e58      	subs	r0, r3, #1
9001c1cc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c1ce:	fb05 1500 	mla	r5, r5, r0, r1
9001c1d2:	142d      	asrs	r5, r5, #16
9001c1d4:	d45f      	bmi.n	9001c296 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c1d6:	4565      	cmp	r5, ip
9001c1d8:	da5d      	bge.n	9001c296 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c1da:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c1dc:	fb05 2000 	mla	r0, r5, r0, r2
9001c1e0:	1400      	asrs	r0, r0, #16
9001c1e2:	d458      	bmi.n	9001c296 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c1e4:	42b8      	cmp	r0, r7
9001c1e6:	da56      	bge.n	9001c296 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c1e8:	4699      	mov	r9, r3
9001c1ea:	46a2      	mov	sl, r4
9001c1ec:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001c1f0:	f1b9 0f00 	cmp.w	r9, #0
9001c1f4:	dd57      	ble.n	9001c2a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001c1f6:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001c1fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c1fe:	9803      	ldr	r0, [sp, #12]
9001c200:	140d      	asrs	r5, r1, #16
9001c202:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
9001c206:	fb07 000c 	mla	r0, r7, ip, r0
9001c20a:	5d40      	ldrb	r0, [r0, r5]
9001c20c:	9d04      	ldr	r5, [sp, #16]
9001c20e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c212:	f8ba 5000 	ldrh.w	r5, [sl]
9001c216:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c21a:	122f      	asrs	r7, r5, #8
9001c21c:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001c220:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c224:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c228:	00ed      	lsls	r5, r5, #3
9001c22a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001c22e:	fb17 f706 	smulbb	r7, r7, r6
9001c232:	b2ed      	uxtb	r5, r5
9001c234:	fb18 f806 	smulbb	r8, r8, r6
9001c238:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001c23c:	10c7      	asrs	r7, r0, #3
9001c23e:	fb15 f506 	smulbb	r5, r5, r6
9001c242:	00c0      	lsls	r0, r0, #3
9001c244:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c248:	fa1f fc8c 	uxth.w	ip, ip
9001c24c:	b2c0      	uxtb	r0, r0
9001c24e:	fb07 870b 	mla	r7, r7, fp, r8
9001c252:	fb00 500b 	mla	r0, r0, fp, r5
9001c256:	f10c 0501 	add.w	r5, ip, #1
9001c25a:	b2bf      	uxth	r7, r7
9001c25c:	b280      	uxth	r0, r0
9001c25e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c262:	f107 0801 	add.w	r8, r7, #1
9001c266:	1c45      	adds	r5, r0, #1
9001c268:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001c26c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c270:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c274:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c276:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001c27a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c27e:	4401      	add	r1, r0
9001c280:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001c284:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c286:	ea45 0c0c 	orr.w	ip, r5, ip
9001c28a:	4402      	add	r2, r0
9001c28c:	ea4c 0c08 	orr.w	ip, ip, r8
9001c290:	f82a cb02 	strh.w	ip, [sl], #2
9001c294:	e7ac      	b.n	9001c1f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c296:	f04f 0800 	mov.w	r8, #0
9001c29a:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001c29e:	eb03 0008 	add.w	r0, r3, r8
9001c2a2:	2800      	cmp	r0, #0
9001c2a4:	dc41      	bgt.n	9001c32a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001c2a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c2aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c2ae:	9b01      	ldr	r3, [sp, #4]
9001c2b0:	2b00      	cmp	r3, #0
9001c2b2:	f340 8097 	ble.w	9001c3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001c2b6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c2ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c2bc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c2c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c2c4:	eef0 6a62 	vmov.f32	s13, s5
9001c2c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c2cc:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c2d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c2d4:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001c2d8:	eef0 6a43 	vmov.f32	s13, s6
9001c2dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c2e0:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001c2e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c2e8:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c2ec:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c2f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c2f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c2f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c2fc:	ee12 2a90 	vmov	r2, s5
9001c300:	eef0 2a47 	vmov.f32	s5, s14
9001c304:	fb92 f3f3 	sdiv	r3, r2, r3
9001c308:	ee13 2a10 	vmov	r2, s6
9001c30c:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c30e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c310:	eeb0 3a67 	vmov.f32	s6, s15
9001c314:	fb92 f3f3 	sdiv	r3, r2, r3
9001c318:	9314      	str	r3, [sp, #80]	@ 0x50
9001c31a:	9b01      	ldr	r3, [sp, #4]
9001c31c:	9a05      	ldr	r2, [sp, #20]
9001c31e:	3b01      	subs	r3, #1
9001c320:	9301      	str	r3, [sp, #4]
9001c322:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c324:	bf08      	it	eq
9001c326:	4613      	moveq	r3, r2
9001c328:	e72c      	b.n	9001c184 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001c32a:	140f      	asrs	r7, r1, #16
9001c32c:	d453      	bmi.n	9001c3d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c32e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c332:	42bd      	cmp	r5, r7
9001c334:	dd4f      	ble.n	9001c3d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c336:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c33a:	d44c      	bmi.n	9001c3d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c33c:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c340:	4560      	cmp	r0, ip
9001c342:	dd48      	ble.n	9001c3d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c344:	9803      	ldr	r0, [sp, #12]
9001c346:	b22d      	sxth	r5, r5
9001c348:	fb0c 0505 	mla	r5, ip, r5, r0
9001c34c:	5de8      	ldrb	r0, [r5, r7]
9001c34e:	9d04      	ldr	r5, [sp, #16]
9001c350:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c354:	f06f 0501 	mvn.w	r5, #1
9001c358:	fb05 fb08 	mul.w	fp, r5, r8
9001c35c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c360:	f834 500b 	ldrh.w	r5, [r4, fp]
9001c364:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c368:	122f      	asrs	r7, r5, #8
9001c36a:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001c36e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c372:	00ed      	lsls	r5, r5, #3
9001c374:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001c378:	fb17 f706 	smulbb	r7, r7, r6
9001c37c:	b2ed      	uxtb	r5, r5
9001c37e:	fb19 f906 	smulbb	r9, r9, r6
9001c382:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001c386:	10c7      	asrs	r7, r0, #3
9001c388:	fb15 f506 	smulbb	r5, r5, r6
9001c38c:	00c0      	lsls	r0, r0, #3
9001c38e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c392:	fa1f fc8c 	uxth.w	ip, ip
9001c396:	b2c0      	uxtb	r0, r0
9001c398:	fb07 970a 	mla	r7, r7, sl, r9
9001c39c:	fb00 500a 	mla	r0, r0, sl, r5
9001c3a0:	f10c 0501 	add.w	r5, ip, #1
9001c3a4:	b2bf      	uxth	r7, r7
9001c3a6:	b280      	uxth	r0, r0
9001c3a8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c3ac:	f107 0901 	add.w	r9, r7, #1
9001c3b0:	1c45      	adds	r5, r0, #1
9001c3b2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001c3b6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c3ba:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c3be:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c3c2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c3c6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001c3ca:	ea45 0c0c 	orr.w	ip, r5, ip
9001c3ce:	ea4c 0c09 	orr.w	ip, ip, r9
9001c3d2:	f824 c00b 	strh.w	ip, [r4, fp]
9001c3d6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c3d8:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001c3dc:	4401      	add	r1, r0
9001c3de:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c3e0:	4402      	add	r2, r0
9001c3e2:	e75c      	b.n	9001c29e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001c3e4:	b007      	add	sp, #28
9001c3e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c3ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c3ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c3ee:	b085      	sub	sp, #20
9001c3f0:	4693      	mov	fp, r2
9001c3f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c3f6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c3f8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001c3fa:	6870      	ldr	r0, [r6, #4]
9001c3fc:	9100      	str	r1, [sp, #0]
9001c3fe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c402:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001c406:	fb00 2404 	mla	r4, r0, r4, r2
9001c40a:	6832      	ldr	r2, [r6, #0]
9001c40c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c410:	682a      	ldr	r2, [r5, #0]
9001c412:	9201      	str	r2, [sp, #4]
9001c414:	686a      	ldr	r2, [r5, #4]
9001c416:	3204      	adds	r2, #4
9001c418:	9202      	str	r2, [sp, #8]
9001c41a:	9a00      	ldr	r2, [sp, #0]
9001c41c:	2a00      	cmp	r2, #0
9001c41e:	dc03      	bgt.n	9001c428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c420:	f1bb 0f00 	cmp.w	fp, #0
9001c424:	f340 80a0 	ble.w	9001c568 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001c428:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c42a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c42e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c432:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c434:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c438:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c43c:	2b00      	cmp	r3, #0
9001c43e:	dd0c      	ble.n	9001c45a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c440:	1406      	asrs	r6, r0, #16
9001c442:	d405      	bmi.n	9001c450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c444:	454e      	cmp	r6, r9
9001c446:	da03      	bge.n	9001c450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c448:	1416      	asrs	r6, r2, #16
9001c44a:	d401      	bmi.n	9001c450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c44c:	4546      	cmp	r6, r8
9001c44e:	db05      	blt.n	9001c45c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c450:	4470      	add	r0, lr
9001c452:	4462      	add	r2, ip
9001c454:	3b01      	subs	r3, #1
9001c456:	3402      	adds	r4, #2
9001c458:	e7f0      	b.n	9001c43c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c45a:	d00f      	beq.n	9001c47c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c45c:	1e5e      	subs	r6, r3, #1
9001c45e:	fb0e 0706 	mla	r7, lr, r6, r0
9001c462:	143f      	asrs	r7, r7, #16
9001c464:	d541      	bpl.n	9001c4ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001c466:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001c46a:	4698      	mov	r8, r3
9001c46c:	9603      	str	r6, [sp, #12]
9001c46e:	f1b8 0f00 	cmp.w	r8, #0
9001c472:	dc59      	bgt.n	9001c528 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c474:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c478:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c47c:	9b00      	ldr	r3, [sp, #0]
9001c47e:	2b00      	cmp	r3, #0
9001c480:	dd72      	ble.n	9001c568 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001c482:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c486:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c488:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c48c:	eeb0 6a62 	vmov.f32	s12, s5
9001c490:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c494:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c498:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c49c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c4a0:	eeb0 6a43 	vmov.f32	s12, s6
9001c4a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c4a8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c4ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c4b0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c4b4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c4b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c4bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c4c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c4c4:	ee12 2a90 	vmov	r2, s5
9001c4c8:	eef0 2a47 	vmov.f32	s5, s14
9001c4cc:	fb92 fef3 	sdiv	lr, r2, r3
9001c4d0:	ee13 2a10 	vmov	r2, s6
9001c4d4:	eeb0 3a67 	vmov.f32	s6, s15
9001c4d8:	fb92 fcf3 	sdiv	ip, r2, r3
9001c4dc:	9b00      	ldr	r3, [sp, #0]
9001c4de:	3b01      	subs	r3, #1
9001c4e0:	9300      	str	r3, [sp, #0]
9001c4e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c4e4:	bf08      	it	eq
9001c4e6:	465b      	moveq	r3, fp
9001c4e8:	e797      	b.n	9001c41a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c4ea:	454f      	cmp	r7, r9
9001c4ec:	dabb      	bge.n	9001c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c4ee:	fb0c 2606 	mla	r6, ip, r6, r2
9001c4f2:	1436      	asrs	r6, r6, #16
9001c4f4:	d4b7      	bmi.n	9001c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c4f6:	4546      	cmp	r6, r8
9001c4f8:	dab5      	bge.n	9001c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c4fa:	461e      	mov	r6, r3
9001c4fc:	46a0      	mov	r8, r4
9001c4fe:	2e00      	cmp	r6, #0
9001c500:	ddb8      	ble.n	9001c474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c502:	1417      	asrs	r7, r2, #16
9001c504:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001c508:	9901      	ldr	r1, [sp, #4]
9001c50a:	ea4f 4920 	mov.w	r9, r0, asr #16
9001c50e:	4462      	add	r2, ip
9001c510:	4470      	add	r0, lr
9001c512:	fb0a 1707 	mla	r7, sl, r7, r1
9001c516:	9902      	ldr	r1, [sp, #8]
9001c518:	3e01      	subs	r6, #1
9001c51a:	f817 7009 	ldrb.w	r7, [r7, r9]
9001c51e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001c522:	f828 7b02 	strh.w	r7, [r8], #2
9001c526:	e7ea      	b.n	9001c4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001c528:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c52c:	d417      	bmi.n	9001c55e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c52e:	68ae      	ldr	r6, [r5, #8]
9001c530:	454e      	cmp	r6, r9
9001c532:	dd14      	ble.n	9001c55e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c534:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001c538:	d411      	bmi.n	9001c55e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c53a:	68ef      	ldr	r7, [r5, #12]
9001c53c:	4557      	cmp	r7, sl
9001c53e:	dd0e      	ble.n	9001c55e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c540:	9f01      	ldr	r7, [sp, #4]
9001c542:	b236      	sxth	r6, r6
9001c544:	f06f 0101 	mvn.w	r1, #1
9001c548:	fb0a 7606 	mla	r6, sl, r6, r7
9001c54c:	9f02      	ldr	r7, [sp, #8]
9001c54e:	f816 6009 	ldrb.w	r6, [r6, r9]
9001c552:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001c556:	fb01 f608 	mul.w	r6, r1, r8
9001c55a:	9903      	ldr	r1, [sp, #12]
9001c55c:	538f      	strh	r7, [r1, r6]
9001c55e:	4470      	add	r0, lr
9001c560:	4462      	add	r2, ip
9001c562:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001c566:	e782      	b.n	9001c46e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c568:	b005      	add	sp, #20
9001c56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c56e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c56e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c572:	b087      	sub	sp, #28
9001c574:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001c576:	9205      	str	r2, [sp, #20]
9001c578:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c57c:	9102      	str	r1, [sp, #8]
9001c57e:	9203      	str	r2, [sp, #12]
9001c580:	6861      	ldr	r1, [r4, #4]
9001c582:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001c586:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001c58a:	fb01 2000 	mla	r0, r1, r0, r2
9001c58e:	6822      	ldr	r2, [r4, #0]
9001c590:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001c594:	9200      	str	r2, [sp, #0]
9001c596:	f8dc 2000 	ldr.w	r2, [ip]
9001c59a:	9204      	str	r2, [sp, #16]
9001c59c:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001c5a0:	3204      	adds	r2, #4
9001c5a2:	9201      	str	r2, [sp, #4]
9001c5a4:	9a03      	ldr	r2, [sp, #12]
9001c5a6:	43d5      	mvns	r5, r2
9001c5a8:	b2ed      	uxtb	r5, r5
9001c5aa:	9a02      	ldr	r2, [sp, #8]
9001c5ac:	2a00      	cmp	r2, #0
9001c5ae:	dc03      	bgt.n	9001c5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c5b0:	9a05      	ldr	r2, [sp, #20]
9001c5b2:	2a00      	cmp	r2, #0
9001c5b4:	f340 812c 	ble.w	9001c810 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c5b8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c5ba:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001c5be:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c5c2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c5c4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001c5c8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c5cc:	2b00      	cmp	r3, #0
9001c5ce:	dd10      	ble.n	9001c5f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c5d0:	140c      	asrs	r4, r1, #16
9001c5d2:	d405      	bmi.n	9001c5e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c5d4:	4574      	cmp	r4, lr
9001c5d6:	da03      	bge.n	9001c5e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c5d8:	1414      	asrs	r4, r2, #16
9001c5da:	d401      	bmi.n	9001c5e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c5dc:	42bc      	cmp	r4, r7
9001c5de:	db09      	blt.n	9001c5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001c5e0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c5e2:	3b01      	subs	r3, #1
9001c5e4:	9800      	ldr	r0, [sp, #0]
9001c5e6:	4421      	add	r1, r4
9001c5e8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c5ea:	3002      	adds	r0, #2
9001c5ec:	4422      	add	r2, r4
9001c5ee:	9000      	str	r0, [sp, #0]
9001c5f0:	e7ec      	b.n	9001c5cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c5f2:	d071      	beq.n	9001c6d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001c5f4:	1e5c      	subs	r4, r3, #1
9001c5f6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c5f8:	fb06 1604 	mla	r6, r6, r4, r1
9001c5fc:	1436      	asrs	r6, r6, #16
9001c5fe:	d45d      	bmi.n	9001c6bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c600:	4576      	cmp	r6, lr
9001c602:	da5b      	bge.n	9001c6bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c604:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001c606:	fb06 2404 	mla	r4, r6, r4, r2
9001c60a:	1424      	asrs	r4, r4, #16
9001c60c:	d456      	bmi.n	9001c6bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c60e:	42bc      	cmp	r4, r7
9001c610:	da54      	bge.n	9001c6bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c612:	4698      	mov	r8, r3
9001c614:	f8dd 9000 	ldr.w	r9, [sp]
9001c618:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001c61c:	f1b8 0f00 	cmp.w	r8, #0
9001c620:	dd54      	ble.n	9001c6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001c622:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c626:	1414      	asrs	r4, r2, #16
9001c628:	9804      	ldr	r0, [sp, #16]
9001c62a:	140e      	asrs	r6, r1, #16
9001c62c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001c630:	fb07 0404 	mla	r4, r7, r4, r0
9001c634:	9801      	ldr	r0, [sp, #4]
9001c636:	f814 e006 	ldrb.w	lr, [r4, r6]
9001c63a:	f8b9 4000 	ldrh.w	r4, [r9]
9001c63e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c642:	1227      	asrs	r7, r4, #8
9001c644:	eb00 0b0e 	add.w	fp, r0, lr
9001c648:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001c64c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c650:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c652:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c656:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c65a:	4401      	add	r1, r0
9001c65c:	fb16 f60a 	smulbb	r6, r6, sl
9001c660:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c662:	fb1b fb0a 	smulbb	fp, fp, sl
9001c666:	fb07 6705 	mla	r7, r7, r5, r6
9001c66a:	10e6      	asrs	r6, r4, #3
9001c66c:	00e4      	lsls	r4, r4, #3
9001c66e:	4402      	add	r2, r0
9001c670:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c674:	b2bf      	uxth	r7, r7
9001c676:	b2e4      	uxtb	r4, r4
9001c678:	fb06 b605 	mla	r6, r6, r5, fp
9001c67c:	fb14 f405 	smulbb	r4, r4, r5
9001c680:	b2b6      	uxth	r6, r6
9001c682:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001c686:	1c7c      	adds	r4, r7, #1
9001c688:	f106 0b01 	add.w	fp, r6, #1
9001c68c:	fa1f fe8e 	uxth.w	lr, lr
9001c690:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c694:	f10e 0401 	add.w	r4, lr, #1
9001c698:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c69c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c6a0:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001c6a4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c6a8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c6ac:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001c6b0:	4327      	orrs	r7, r4
9001c6b2:	ea47 070b 	orr.w	r7, r7, fp
9001c6b6:	f829 7b02 	strh.w	r7, [r9], #2
9001c6ba:	e7af      	b.n	9001c61c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001c6bc:	f04f 0e00 	mov.w	lr, #0
9001c6c0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001c6c4:	eb03 040e 	add.w	r4, r3, lr
9001c6c8:	2c00      	cmp	r4, #0
9001c6ca:	dc43      	bgt.n	9001c754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001c6cc:	9a00      	ldr	r2, [sp, #0]
9001c6ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c6d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c6d6:	9300      	str	r3, [sp, #0]
9001c6d8:	9b02      	ldr	r3, [sp, #8]
9001c6da:	2b00      	cmp	r3, #0
9001c6dc:	f340 8098 	ble.w	9001c810 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c6e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c6e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c6e6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c6ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c6ee:	eef0 6a62 	vmov.f32	s13, s5
9001c6f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c6f6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c6fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c6fe:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001c702:	eef0 6a43 	vmov.f32	s13, s6
9001c706:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c70a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001c70e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c712:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c716:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c71a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c71e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c722:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c726:	ee12 2a90 	vmov	r2, s5
9001c72a:	eef0 2a47 	vmov.f32	s5, s14
9001c72e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c732:	ee13 2a10 	vmov	r2, s6
9001c736:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c738:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c73a:	eeb0 3a67 	vmov.f32	s6, s15
9001c73e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c742:	9314      	str	r3, [sp, #80]	@ 0x50
9001c744:	9b02      	ldr	r3, [sp, #8]
9001c746:	9a05      	ldr	r2, [sp, #20]
9001c748:	3b01      	subs	r3, #1
9001c74a:	9302      	str	r3, [sp, #8]
9001c74c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c74e:	bf08      	it	eq
9001c750:	4613      	moveq	r3, r2
9001c752:	e72a      	b.n	9001c5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c754:	140f      	asrs	r7, r1, #16
9001c756:	d454      	bmi.n	9001c802 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c758:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001c75c:	42be      	cmp	r6, r7
9001c75e:	dd50      	ble.n	9001c802 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c760:	ea5f 4822 	movs.w	r8, r2, asr #16
9001c764:	d44d      	bmi.n	9001c802 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c766:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001c76a:	4544      	cmp	r4, r8
9001c76c:	dd49      	ble.n	9001c802 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c76e:	9c04      	ldr	r4, [sp, #16]
9001c770:	b236      	sxth	r6, r6
9001c772:	f06f 0001 	mvn.w	r0, #1
9001c776:	fb08 4606 	mla	r6, r8, r6, r4
9001c77a:	9c01      	ldr	r4, [sp, #4]
9001c77c:	fb00 fa0e 	mul.w	sl, r0, lr
9001c780:	9800      	ldr	r0, [sp, #0]
9001c782:	f816 8007 	ldrb.w	r8, [r6, r7]
9001c786:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001c78a:	eb04 0b08 	add.w	fp, r4, r8
9001c78e:	f830 400a 	ldrh.w	r4, [r0, sl]
9001c792:	9801      	ldr	r0, [sp, #4]
9001c794:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c798:	1227      	asrs	r7, r4, #8
9001c79a:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c79e:	fb16 f609 	smulbb	r6, r6, r9
9001c7a2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c7a6:	f810 8008 	ldrb.w	r8, [r0, r8]
9001c7aa:	fb1b fb09 	smulbb	fp, fp, r9
9001c7ae:	fb07 6705 	mla	r7, r7, r5, r6
9001c7b2:	10e6      	asrs	r6, r4, #3
9001c7b4:	00e4      	lsls	r4, r4, #3
9001c7b6:	9800      	ldr	r0, [sp, #0]
9001c7b8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c7bc:	b2bf      	uxth	r7, r7
9001c7be:	b2e4      	uxtb	r4, r4
9001c7c0:	fb06 b605 	mla	r6, r6, r5, fp
9001c7c4:	fb14 f405 	smulbb	r4, r4, r5
9001c7c8:	b2b6      	uxth	r6, r6
9001c7ca:	fb08 4809 	mla	r8, r8, r9, r4
9001c7ce:	1c7c      	adds	r4, r7, #1
9001c7d0:	f106 0b01 	add.w	fp, r6, #1
9001c7d4:	fa1f f888 	uxth.w	r8, r8
9001c7d8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c7dc:	f108 0401 	add.w	r4, r8, #1
9001c7e0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c7e4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c7e8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001c7ec:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c7f0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c7f4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001c7f8:	4327      	orrs	r7, r4
9001c7fa:	ea47 070b 	orr.w	r7, r7, fp
9001c7fe:	f820 700a 	strh.w	r7, [r0, sl]
9001c802:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c804:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
9001c808:	4401      	add	r1, r0
9001c80a:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c80c:	4402      	add	r2, r0
9001c80e:	e759      	b.n	9001c6c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c810:	b007      	add	sp, #28
9001c812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c818 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c81c:	b085      	sub	sp, #20
9001c81e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c822:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c824:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001c826:	9203      	str	r2, [sp, #12]
9001c828:	6870      	ldr	r0, [r6, #4]
9001c82a:	686f      	ldr	r7, [r5, #4]
9001c82c:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001c830:	3704      	adds	r7, #4
9001c832:	9101      	str	r1, [sp, #4]
9001c834:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c838:	fb00 2404 	mla	r4, r0, r4, r2
9001c83c:	6832      	ldr	r2, [r6, #0]
9001c83e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c842:	682a      	ldr	r2, [r5, #0]
9001c844:	9202      	str	r2, [sp, #8]
9001c846:	9a01      	ldr	r2, [sp, #4]
9001c848:	2a00      	cmp	r2, #0
9001c84a:	dc03      	bgt.n	9001c854 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c84c:	9a03      	ldr	r2, [sp, #12]
9001c84e:	2a00      	cmp	r2, #0
9001c850:	f340 80cc 	ble.w	9001c9ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c854:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c856:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c85a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c85e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c860:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c864:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c868:	2b00      	cmp	r3, #0
9001c86a:	dd0d      	ble.n	9001c888 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c86c:	1406      	asrs	r6, r0, #16
9001c86e:	d405      	bmi.n	9001c87c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c870:	454e      	cmp	r6, r9
9001c872:	da03      	bge.n	9001c87c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c874:	1416      	asrs	r6, r2, #16
9001c876:	d401      	bmi.n	9001c87c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c878:	4546      	cmp	r6, r8
9001c87a:	db06      	blt.n	9001c88a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c87c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001c87e:	4460      	add	r0, ip
9001c880:	3b01      	subs	r3, #1
9001c882:	3402      	adds	r4, #2
9001c884:	4432      	add	r2, r6
9001c886:	e7ef      	b.n	9001c868 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001c888:	d00f      	beq.n	9001c8aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c88a:	1e5e      	subs	r6, r3, #1
9001c88c:	fb0c 0e06 	mla	lr, ip, r6, r0
9001c890:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001c894:	d543      	bpl.n	9001c91e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001c896:	4698      	mov	r8, r3
9001c898:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001c89c:	f1b8 0f00 	cmp.w	r8, #0
9001c8a0:	dc71      	bgt.n	9001c986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001c8a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c8a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c8aa:	9b01      	ldr	r3, [sp, #4]
9001c8ac:	2b00      	cmp	r3, #0
9001c8ae:	f340 809d 	ble.w	9001c9ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c8b2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c8b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c8b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c8bc:	eeb0 6a62 	vmov.f32	s12, s5
9001c8c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c8c4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c8c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c8cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c8d0:	eeb0 6a43 	vmov.f32	s12, s6
9001c8d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c8d8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c8dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c8e0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c8e4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c8e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c8ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c8f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c8f4:	ee12 2a90 	vmov	r2, s5
9001c8f8:	eef0 2a47 	vmov.f32	s5, s14
9001c8fc:	fb92 fcf3 	sdiv	ip, r2, r3
9001c900:	ee13 2a10 	vmov	r2, s6
9001c904:	eeb0 3a67 	vmov.f32	s6, s15
9001c908:	fb92 f3f3 	sdiv	r3, r2, r3
9001c90c:	9312      	str	r3, [sp, #72]	@ 0x48
9001c90e:	9b01      	ldr	r3, [sp, #4]
9001c910:	9a03      	ldr	r2, [sp, #12]
9001c912:	3b01      	subs	r3, #1
9001c914:	9301      	str	r3, [sp, #4]
9001c916:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c918:	bf08      	it	eq
9001c91a:	4613      	moveq	r3, r2
9001c91c:	e793      	b.n	9001c846 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001c91e:	45ce      	cmp	lr, r9
9001c920:	dab9      	bge.n	9001c896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c922:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001c924:	fb01 2606 	mla	r6, r1, r6, r2
9001c928:	1436      	asrs	r6, r6, #16
9001c92a:	d4b4      	bmi.n	9001c896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c92c:	4546      	cmp	r6, r8
9001c92e:	dab2      	bge.n	9001c896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c930:	4698      	mov	r8, r3
9001c932:	46a2      	mov	sl, r4
9001c934:	f1b8 0f00 	cmp.w	r8, #0
9001c938:	ddb3      	ble.n	9001c8a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c93a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c93e:	1416      	asrs	r6, r2, #16
9001c940:	9902      	ldr	r1, [sp, #8]
9001c942:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001c946:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001c94a:	4460      	add	r0, ip
9001c94c:	fb09 1606 	mla	r6, r9, r6, r1
9001c950:	4928      	ldr	r1, [pc, #160]	@ (9001c9f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001c952:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001c956:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c95a:	eb07 0b0e 	add.w	fp, r7, lr
9001c95e:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001c962:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001c966:	00f6      	lsls	r6, r6, #3
9001c968:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001c96c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001c96e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c972:	440a      	add	r2, r1
9001c974:	ea49 0606 	orr.w	r6, r9, r6
9001c978:	f817 900e 	ldrb.w	r9, [r7, lr]
9001c97c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001c980:	f82a 6b02 	strh.w	r6, [sl], #2
9001c984:	e7d6      	b.n	9001c934 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c986:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c98a:	d429      	bmi.n	9001c9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c98c:	68ae      	ldr	r6, [r5, #8]
9001c98e:	454e      	cmp	r6, r9
9001c990:	dd26      	ble.n	9001c9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c992:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001c996:	d423      	bmi.n	9001c9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c998:	68e9      	ldr	r1, [r5, #12]
9001c99a:	4559      	cmp	r1, fp
9001c99c:	dd20      	ble.n	9001c9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c99e:	fa0f fe86 	sxth.w	lr, r6
9001c9a2:	9902      	ldr	r1, [sp, #8]
9001c9a4:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001c9a8:	f06f 0101 	mvn.w	r1, #1
9001c9ac:	f81e e009 	ldrb.w	lr, [lr, r9]
9001c9b0:	fb01 f908 	mul.w	r9, r1, r8
9001c9b4:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001c9b8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c9bc:	eb07 060e 	add.w	r6, r7, lr
9001c9c0:	f896 b002 	ldrb.w	fp, [r6, #2]
9001c9c4:	7876      	ldrb	r6, [r6, #1]
9001c9c6:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001c9ca:	00f6      	lsls	r6, r6, #3
9001c9cc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c9d0:	ea4b 0606 	orr.w	r6, fp, r6
9001c9d4:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001c9d8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001c9dc:	f82a 6009 	strh.w	r6, [sl, r9]
9001c9e0:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001c9e2:	4460      	add	r0, ip
9001c9e4:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001c9e8:	440a      	add	r2, r1
9001c9ea:	e757      	b.n	9001c89c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c9ec:	b005      	add	sp, #20
9001c9ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c9f2:	bf00      	nop
9001c9f4:	fffff800 	.word	0xfffff800

9001c9f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c9fc:	b087      	sub	sp, #28
9001c9fe:	468b      	mov	fp, r1
9001ca00:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ca04:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001ca06:	9204      	str	r2, [sp, #16]
9001ca08:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ca0c:	6841      	ldr	r1, [r0, #4]
9001ca0e:	9205      	str	r2, [sp, #20]
9001ca10:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001ca14:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001ca18:	fb01 2404 	mla	r4, r1, r4, r2
9001ca1c:	6802      	ldr	r2, [r0, #0]
9001ca1e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ca22:	f8dc 2000 	ldr.w	r2, [ip]
9001ca26:	9201      	str	r2, [sp, #4]
9001ca28:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001ca2c:	3204      	adds	r2, #4
9001ca2e:	9202      	str	r2, [sp, #8]
9001ca30:	f1bb 0f00 	cmp.w	fp, #0
9001ca34:	dc03      	bgt.n	9001ca3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001ca36:	9a04      	ldr	r2, [sp, #16]
9001ca38:	2a00      	cmp	r2, #0
9001ca3a:	f340 8138 	ble.w	9001ccae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ca3e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ca40:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001ca44:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ca48:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ca4a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001ca4e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ca52:	2b00      	cmp	r3, #0
9001ca54:	dd0e      	ble.n	9001ca74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ca56:	1402      	asrs	r2, r0, #16
9001ca58:	d405      	bmi.n	9001ca66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ca5a:	42ba      	cmp	r2, r7
9001ca5c:	da03      	bge.n	9001ca66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ca5e:	140a      	asrs	r2, r1, #16
9001ca60:	d401      	bmi.n	9001ca66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ca62:	42b2      	cmp	r2, r6
9001ca64:	db07      	blt.n	9001ca76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ca66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ca68:	3b01      	subs	r3, #1
9001ca6a:	3402      	adds	r4, #2
9001ca6c:	4410      	add	r0, r2
9001ca6e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ca70:	4411      	add	r1, r2
9001ca72:	e7ee      	b.n	9001ca52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001ca74:	d019      	beq.n	9001caaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001ca76:	1e5a      	subs	r2, r3, #1
9001ca78:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ca7a:	fb05 0502 	mla	r5, r5, r2, r0
9001ca7e:	142d      	asrs	r5, r5, #16
9001ca80:	d409      	bmi.n	9001ca96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ca82:	42bd      	cmp	r5, r7
9001ca84:	da07      	bge.n	9001ca96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ca86:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001ca88:	fb05 1202 	mla	r2, r5, r2, r1
9001ca8c:	1412      	asrs	r2, r2, #16
9001ca8e:	d402      	bmi.n	9001ca96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ca90:	42b2      	cmp	r2, r6
9001ca92:	f2c0 80ac 	blt.w	9001cbee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001ca96:	f04f 0e00 	mov.w	lr, #0
9001ca9a:	eb03 020e 	add.w	r2, r3, lr
9001ca9e:	2a00      	cmp	r2, #0
9001caa0:	dc3e      	bgt.n	9001cb20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001caa2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001caa6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001caaa:	f1bb 0f00 	cmp.w	fp, #0
9001caae:	f340 80fe 	ble.w	9001ccae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001cab2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cab6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cab8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cabc:	f1bb 0b01 	subs.w	fp, fp, #1
9001cac0:	eeb0 6a62 	vmov.f32	s12, s5
9001cac4:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cac8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cacc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cad0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001cad4:	eeb0 6a43 	vmov.f32	s12, s6
9001cad8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cadc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001cae0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cae4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cae8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001caec:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001caf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001caf4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001caf8:	ee12 2a90 	vmov	r2, s5
9001cafc:	eef0 2a47 	vmov.f32	s5, s14
9001cb00:	fb92 f3f3 	sdiv	r3, r2, r3
9001cb04:	ee13 2a10 	vmov	r2, s6
9001cb08:	9313      	str	r3, [sp, #76]	@ 0x4c
9001cb0a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cb0c:	eeb0 3a67 	vmov.f32	s6, s15
9001cb10:	fb92 f3f3 	sdiv	r3, r2, r3
9001cb14:	9a04      	ldr	r2, [sp, #16]
9001cb16:	9314      	str	r3, [sp, #80]	@ 0x50
9001cb18:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cb1a:	bf08      	it	eq
9001cb1c:	4613      	moveq	r3, r2
9001cb1e:	e787      	b.n	9001ca30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001cb20:	1406      	asrs	r6, r0, #16
9001cb22:	d45d      	bmi.n	9001cbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cb24:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001cb28:	42b5      	cmp	r5, r6
9001cb2a:	dd59      	ble.n	9001cbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cb2c:	140f      	asrs	r7, r1, #16
9001cb2e:	d457      	bmi.n	9001cbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cb30:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001cb34:	42ba      	cmp	r2, r7
9001cb36:	dd53      	ble.n	9001cbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cb38:	9a01      	ldr	r2, [sp, #4]
9001cb3a:	b22d      	sxth	r5, r5
9001cb3c:	fb07 2505 	mla	r5, r7, r5, r2
9001cb40:	5daa      	ldrb	r2, [r5, r6]
9001cb42:	9d02      	ldr	r5, [sp, #8]
9001cb44:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001cb48:	0e2e      	lsrs	r6, r5, #24
9001cb4a:	d049      	beq.n	9001cbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cb4c:	f06f 0201 	mvn.w	r2, #1
9001cb50:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cb54:	fb02 f20e 	mul.w	r2, r2, lr
9001cb58:	f834 8002 	ldrh.w	r8, [r4, r2]
9001cb5c:	9203      	str	r2, [sp, #12]
9001cb5e:	9a05      	ldr	r2, [sp, #20]
9001cb60:	ea4f 2728 	mov.w	r7, r8, asr #8
9001cb64:	4356      	muls	r6, r2
9001cb66:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cb6a:	1c72      	adds	r2, r6, #1
9001cb6c:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001cb70:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cb74:	b2ed      	uxtb	r5, r5
9001cb76:	1212      	asrs	r2, r2, #8
9001cb78:	fa1f f982 	uxth.w	r9, r2
9001cb7c:	43d2      	mvns	r2, r2
9001cb7e:	fb16 f609 	smulbb	r6, r6, r9
9001cb82:	b2d2      	uxtb	r2, r2
9001cb84:	fb15 f509 	smulbb	r5, r5, r9
9001cb88:	fb07 6702 	mla	r7, r7, r2, r6
9001cb8c:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001cb90:	fb1a fa09 	smulbb	sl, sl, r9
9001cb94:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cb98:	b2bf      	uxth	r7, r7
9001cb9a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cb9e:	fa5f f888 	uxtb.w	r8, r8
9001cba2:	fb06 a602 	mla	r6, r6, r2, sl
9001cba6:	fb08 5502 	mla	r5, r8, r2, r5
9001cbaa:	1c7a      	adds	r2, r7, #1
9001cbac:	b2b6      	uxth	r6, r6
9001cbae:	b2ad      	uxth	r5, r5
9001cbb0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001cbb4:	9a03      	ldr	r2, [sp, #12]
9001cbb6:	f105 0a01 	add.w	sl, r5, #1
9001cbba:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cbbe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cbc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cbc6:	ea4a 0707 	orr.w	r7, sl, r7
9001cbca:	f106 0a01 	add.w	sl, r6, #1
9001cbce:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cbd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cbd6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cbda:	ea47 070a 	orr.w	r7, r7, sl
9001cbde:	52a7      	strh	r7, [r4, r2]
9001cbe0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cbe2:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
9001cbe6:	4410      	add	r0, r2
9001cbe8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cbea:	4411      	add	r1, r2
9001cbec:	e755      	b.n	9001ca9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001cbee:	f04f 0800 	mov.w	r8, #0
9001cbf2:	eba3 0208 	sub.w	r2, r3, r8
9001cbf6:	2a00      	cmp	r2, #0
9001cbf8:	f77f af53 	ble.w	9001caa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001cbfc:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001cc00:	140a      	asrs	r2, r1, #16
9001cc02:	9f01      	ldr	r7, [sp, #4]
9001cc04:	1405      	asrs	r5, r0, #16
9001cc06:	fb06 7202 	mla	r2, r6, r2, r7
9001cc0a:	5d52      	ldrb	r2, [r2, r5]
9001cc0c:	9d02      	ldr	r5, [sp, #8]
9001cc0e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001cc12:	0e2e      	lsrs	r6, r5, #24
9001cc14:	d044      	beq.n	9001cca0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001cc16:	9a05      	ldr	r2, [sp, #20]
9001cc18:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cc1c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001cc20:	4356      	muls	r6, r2
9001cc22:	ea4f 272e 	mov.w	r7, lr, asr #8
9001cc26:	1c72      	adds	r2, r6, #1
9001cc28:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cc2c:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001cc30:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cc34:	b2ed      	uxtb	r5, r5
9001cc36:	1212      	asrs	r2, r2, #8
9001cc38:	fa1f f982 	uxth.w	r9, r2
9001cc3c:	43d2      	mvns	r2, r2
9001cc3e:	fb16 f609 	smulbb	r6, r6, r9
9001cc42:	b2d2      	uxtb	r2, r2
9001cc44:	fb15 f509 	smulbb	r5, r5, r9
9001cc48:	fb07 6702 	mla	r7, r7, r2, r6
9001cc4c:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cc50:	fb1a fa09 	smulbb	sl, sl, r9
9001cc54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cc58:	b2bf      	uxth	r7, r7
9001cc5a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cc5e:	fa5f fe8e 	uxtb.w	lr, lr
9001cc62:	fb06 a602 	mla	r6, r6, r2, sl
9001cc66:	fb0e 5502 	mla	r5, lr, r2, r5
9001cc6a:	1c7a      	adds	r2, r7, #1
9001cc6c:	b2b6      	uxth	r6, r6
9001cc6e:	b2ad      	uxth	r5, r5
9001cc70:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001cc74:	f105 0a01 	add.w	sl, r5, #1
9001cc78:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cc7c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cc80:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cc84:	ea4a 0707 	orr.w	r7, sl, r7
9001cc88:	f106 0a01 	add.w	sl, r6, #1
9001cc8c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cc90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cc94:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cc98:	ea47 070a 	orr.w	r7, r7, sl
9001cc9c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001cca0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cca2:	f108 0801 	add.w	r8, r8, #1
9001cca6:	4410      	add	r0, r2
9001cca8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ccaa:	4411      	add	r1, r2
9001ccac:	e7a1      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001ccae:	b007      	add	sp, #28
9001ccb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ccb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ccb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ccb8:	b085      	sub	sp, #20
9001ccba:	468b      	mov	fp, r1
9001ccbc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ccc0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ccc2:	9203      	str	r2, [sp, #12]
9001ccc4:	6841      	ldr	r1, [r0, #4]
9001ccc6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001ccca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ccce:	fb01 2404 	mla	r4, r1, r4, r2
9001ccd2:	6802      	ldr	r2, [r0, #0]
9001ccd4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ccd8:	f8de 2000 	ldr.w	r2, [lr]
9001ccdc:	9200      	str	r2, [sp, #0]
9001ccde:	f8de 2004 	ldr.w	r2, [lr, #4]
9001cce2:	3204      	adds	r2, #4
9001cce4:	9201      	str	r2, [sp, #4]
9001cce6:	f1bb 0f00 	cmp.w	fp, #0
9001ccea:	dc03      	bgt.n	9001ccf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001ccec:	9a03      	ldr	r2, [sp, #12]
9001ccee:	2a00      	cmp	r2, #0
9001ccf0:	f340 8153 	ble.w	9001cf9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ccf4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ccf6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ccfa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ccfe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001cd00:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001cd04:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cd08:	2b00      	cmp	r3, #0
9001cd0a:	dd0e      	ble.n	9001cd2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cd0c:	1408      	asrs	r0, r1, #16
9001cd0e:	d405      	bmi.n	9001cd1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cd10:	42b8      	cmp	r0, r7
9001cd12:	da03      	bge.n	9001cd1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cd14:	1410      	asrs	r0, r2, #16
9001cd16:	d401      	bmi.n	9001cd1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cd18:	42b0      	cmp	r0, r6
9001cd1a:	db07      	blt.n	9001cd2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001cd1c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cd1e:	3b01      	subs	r3, #1
9001cd20:	3402      	adds	r4, #2
9001cd22:	4401      	add	r1, r0
9001cd24:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cd26:	4402      	add	r2, r0
9001cd28:	e7ee      	b.n	9001cd08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001cd2a:	d017      	beq.n	9001cd5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001cd2c:	1e58      	subs	r0, r3, #1
9001cd2e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001cd30:	fb05 1500 	mla	r5, r5, r0, r1
9001cd34:	142d      	asrs	r5, r5, #16
9001cd36:	d409      	bmi.n	9001cd4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cd38:	42bd      	cmp	r5, r7
9001cd3a:	da07      	bge.n	9001cd4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cd3c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001cd3e:	fb05 2000 	mla	r0, r5, r0, r2
9001cd42:	1400      	asrs	r0, r0, #16
9001cd44:	d402      	bmi.n	9001cd4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cd46:	42b0      	cmp	r0, r6
9001cd48:	f2c0 80bc 	blt.w	9001cec4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001cd4c:	2600      	movs	r6, #0
9001cd4e:	1998      	adds	r0, r3, r6
9001cd50:	2800      	cmp	r0, #0
9001cd52:	dc3e      	bgt.n	9001cdd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001cd54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cd58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cd5c:	f1bb 0f00 	cmp.w	fp, #0
9001cd60:	f340 811b 	ble.w	9001cf9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001cd64:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cd68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cd6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cd6e:	f1bb 0b01 	subs.w	fp, fp, #1
9001cd72:	eeb0 6a62 	vmov.f32	s12, s5
9001cd76:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cd7a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cd7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cd82:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001cd86:	eeb0 6a43 	vmov.f32	s12, s6
9001cd8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cd8e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001cd92:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cd96:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cd9a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cd9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cda2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cda6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cdaa:	ee12 2a90 	vmov	r2, s5
9001cdae:	eef0 2a47 	vmov.f32	s5, s14
9001cdb2:	fb92 f3f3 	sdiv	r3, r2, r3
9001cdb6:	ee13 2a10 	vmov	r2, s6
9001cdba:	9311      	str	r3, [sp, #68]	@ 0x44
9001cdbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cdbe:	eeb0 3a67 	vmov.f32	s6, s15
9001cdc2:	fb92 f3f3 	sdiv	r3, r2, r3
9001cdc6:	9a03      	ldr	r2, [sp, #12]
9001cdc8:	9312      	str	r3, [sp, #72]	@ 0x48
9001cdca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cdcc:	bf08      	it	eq
9001cdce:	4613      	moveq	r3, r2
9001cdd0:	e789      	b.n	9001cce6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001cdd2:	140f      	asrs	r7, r1, #16
9001cdd4:	d426      	bmi.n	9001ce24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cdd6:	f8de 5008 	ldr.w	r5, [lr, #8]
9001cdda:	42bd      	cmp	r5, r7
9001cddc:	dd22      	ble.n	9001ce24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cdde:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cde2:	d41f      	bmi.n	9001ce24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cde4:	f8de 000c 	ldr.w	r0, [lr, #12]
9001cde8:	4560      	cmp	r0, ip
9001cdea:	dd1b      	ble.n	9001ce24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cdec:	9800      	ldr	r0, [sp, #0]
9001cdee:	b22d      	sxth	r5, r5
9001cdf0:	fb0c 0505 	mla	r5, ip, r5, r0
9001cdf4:	5de8      	ldrb	r0, [r5, r7]
9001cdf6:	9d01      	ldr	r5, [sp, #4]
9001cdf8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001cdfc:	0e07      	lsrs	r7, r0, #24
9001cdfe:	2fff      	cmp	r7, #255	@ 0xff
9001ce00:	d116      	bne.n	9001ce30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ce02:	f06f 0501 	mvn.w	r5, #1
9001ce06:	fb05 f706 	mul.w	r7, r5, r6
9001ce0a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001ce0e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001ce12:	0945      	lsrs	r5, r0, #5
9001ce14:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001ce18:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ce1c:	ea4c 0505 	orr.w	r5, ip, r5
9001ce20:	4305      	orrs	r5, r0
9001ce22:	53e5      	strh	r5, [r4, r7]
9001ce24:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ce26:	3e01      	subs	r6, #1
9001ce28:	4401      	add	r1, r0
9001ce2a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ce2c:	4402      	add	r2, r0
9001ce2e:	e78e      	b.n	9001cd4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001ce30:	b2fd      	uxtb	r5, r7
9001ce32:	2f00      	cmp	r7, #0
9001ce34:	d0f6      	beq.n	9001ce24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ce36:	f06f 0701 	mvn.w	r7, #1
9001ce3a:	fa1f f985 	uxth.w	r9, r5
9001ce3e:	43ed      	mvns	r5, r5
9001ce40:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001ce44:	4377      	muls	r7, r6
9001ce46:	fb1a fa09 	smulbb	sl, sl, r9
9001ce4a:	b2ed      	uxtb	r5, r5
9001ce4c:	f834 8007 	ldrh.w	r8, [r4, r7]
9001ce50:	9702      	str	r7, [sp, #8]
9001ce52:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001ce56:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001ce5a:	fb17 f709 	smulbb	r7, r7, r9
9001ce5e:	b2c0      	uxtb	r0, r0
9001ce60:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ce64:	fb10 f009 	smulbb	r0, r0, r9
9001ce68:	fb0c 7c05 	mla	ip, ip, r5, r7
9001ce6c:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001ce70:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ce74:	fa1f fc8c 	uxth.w	ip, ip
9001ce78:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ce7c:	fa5f f888 	uxtb.w	r8, r8
9001ce80:	fb07 a705 	mla	r7, r7, r5, sl
9001ce84:	fb08 0005 	mla	r0, r8, r5, r0
9001ce88:	f10c 0501 	add.w	r5, ip, #1
9001ce8c:	b2bf      	uxth	r7, r7
9001ce8e:	b280      	uxth	r0, r0
9001ce90:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ce94:	f100 0a01 	add.w	sl, r0, #1
9001ce98:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ce9c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001cea0:	9802      	ldr	r0, [sp, #8]
9001cea2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cea6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ceaa:	f107 0a01 	add.w	sl, r7, #1
9001ceae:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ceb2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ceb6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ceba:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cebe:	f824 c000 	strh.w	ip, [r4, r0]
9001cec2:	e7af      	b.n	9001ce24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cec4:	f04f 0800 	mov.w	r8, #0
9001cec8:	eba3 0008 	sub.w	r0, r3, r8
9001cecc:	2800      	cmp	r0, #0
9001cece:	f77f af41 	ble.w	9001cd54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ced2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001ced6:	1410      	asrs	r0, r2, #16
9001ced8:	9f00      	ldr	r7, [sp, #0]
9001ceda:	140d      	asrs	r5, r1, #16
9001cedc:	fb06 7000 	mla	r0, r6, r0, r7
9001cee0:	5d40      	ldrb	r0, [r0, r5]
9001cee2:	9d01      	ldr	r5, [sp, #4]
9001cee4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001cee8:	0e2e      	lsrs	r6, r5, #24
9001ceea:	2eff      	cmp	r6, #255	@ 0xff
9001ceec:	d112      	bne.n	9001cf14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001ceee:	482c      	ldr	r0, [pc, #176]	@ (9001cfa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001cef0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001cef4:	0968      	lsrs	r0, r5, #5
9001cef6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001cefa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001cefe:	4330      	orrs	r0, r6
9001cf00:	4328      	orrs	r0, r5
9001cf02:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001cf06:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cf08:	f108 0801 	add.w	r8, r8, #1
9001cf0c:	4401      	add	r1, r0
9001cf0e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cf10:	4402      	add	r2, r0
9001cf12:	e7d9      	b.n	9001cec8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001cf14:	b2f0      	uxtb	r0, r6
9001cf16:	2e00      	cmp	r6, #0
9001cf18:	d0f5      	beq.n	9001cf06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001cf1a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001cf1e:	fa1f f980 	uxth.w	r9, r0
9001cf22:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cf26:	43c0      	mvns	r0, r0
9001cf28:	ea4f 272c 	mov.w	r7, ip, asr #8
9001cf2c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cf30:	fb16 f609 	smulbb	r6, r6, r9
9001cf34:	b2c0      	uxtb	r0, r0
9001cf36:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cf3a:	b2ed      	uxtb	r5, r5
9001cf3c:	fb1a fa09 	smulbb	sl, sl, r9
9001cf40:	fb07 6700 	mla	r7, r7, r0, r6
9001cf44:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001cf48:	fb15 f509 	smulbb	r5, r5, r9
9001cf4c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cf50:	b2bf      	uxth	r7, r7
9001cf52:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cf56:	fa5f fc8c 	uxtb.w	ip, ip
9001cf5a:	fb06 a600 	mla	r6, r6, r0, sl
9001cf5e:	fb0c 5500 	mla	r5, ip, r0, r5
9001cf62:	1c78      	adds	r0, r7, #1
9001cf64:	b2b6      	uxth	r6, r6
9001cf66:	b2ad      	uxth	r5, r5
9001cf68:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001cf6c:	f105 0a01 	add.w	sl, r5, #1
9001cf70:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cf74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cf78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cf7c:	ea4a 0707 	orr.w	r7, sl, r7
9001cf80:	f106 0a01 	add.w	sl, r6, #1
9001cf84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cf88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cf8c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cf90:	ea47 070a 	orr.w	r7, r7, sl
9001cf94:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001cf98:	e7b5      	b.n	9001cf06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001cf9a:	b005      	add	sp, #20
9001cf9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cfa0:	fffff800 	.word	0xfffff800

9001cfa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cfa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cfa8:	b087      	sub	sp, #28
9001cfaa:	468b      	mov	fp, r1
9001cfac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cfb0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001cfb2:	9204      	str	r2, [sp, #16]
9001cfb4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001cfb8:	6861      	ldr	r1, [r4, #4]
9001cfba:	9205      	str	r2, [sp, #20]
9001cfbc:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001cfc0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001cfc4:	fb01 2000 	mla	r0, r1, r0, r2
9001cfc8:	6822      	ldr	r2, [r4, #0]
9001cfca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001cfce:	f8de 2000 	ldr.w	r2, [lr]
9001cfd2:	9201      	str	r2, [sp, #4]
9001cfd4:	f8de 2004 	ldr.w	r2, [lr, #4]
9001cfd8:	9202      	str	r2, [sp, #8]
9001cfda:	f1bb 0f00 	cmp.w	fp, #0
9001cfde:	dc03      	bgt.n	9001cfe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001cfe0:	9a04      	ldr	r2, [sp, #16]
9001cfe2:	2a00      	cmp	r2, #0
9001cfe4:	f340 8142 	ble.w	9001d26c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001cfe8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001cfea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001cfee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cff2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001cff4:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001cff8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cffc:	2b00      	cmp	r3, #0
9001cffe:	dd0e      	ble.n	9001d01e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001d000:	140c      	asrs	r4, r1, #16
9001d002:	d405      	bmi.n	9001d010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d004:	42bc      	cmp	r4, r7
9001d006:	da03      	bge.n	9001d010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d008:	1414      	asrs	r4, r2, #16
9001d00a:	d401      	bmi.n	9001d010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d00c:	42b4      	cmp	r4, r6
9001d00e:	db07      	blt.n	9001d020 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d010:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d012:	3b01      	subs	r3, #1
9001d014:	3002      	adds	r0, #2
9001d016:	4421      	add	r1, r4
9001d018:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d01a:	4422      	add	r2, r4
9001d01c:	e7ee      	b.n	9001cffc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001d01e:	d019      	beq.n	9001d054 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001d020:	1e5c      	subs	r4, r3, #1
9001d022:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d024:	fb05 1504 	mla	r5, r5, r4, r1
9001d028:	142d      	asrs	r5, r5, #16
9001d02a:	d409      	bmi.n	9001d040 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001d02c:	42bd      	cmp	r5, r7
9001d02e:	da07      	bge.n	9001d040 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001d030:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d032:	fb05 2404 	mla	r4, r5, r4, r2
9001d036:	1424      	asrs	r4, r4, #16
9001d038:	d402      	bmi.n	9001d040 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001d03a:	42b4      	cmp	r4, r6
9001d03c:	f2c0 80b1 	blt.w	9001d1a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001d040:	f04f 0800 	mov.w	r8, #0
9001d044:	eb03 0408 	add.w	r4, r3, r8
9001d048:	2c00      	cmp	r4, #0
9001d04a:	dc3e      	bgt.n	9001d0ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001d04c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d050:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d054:	f1bb 0f00 	cmp.w	fp, #0
9001d058:	f340 8108 	ble.w	9001d26c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001d05c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d060:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d062:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d066:	f1bb 0b01 	subs.w	fp, fp, #1
9001d06a:	eeb0 6a62 	vmov.f32	s12, s5
9001d06e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d072:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d076:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d07a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d07e:	eeb0 6a43 	vmov.f32	s12, s6
9001d082:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d086:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d08a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d08e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d092:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d096:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d09a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d09e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d0a2:	ee12 2a90 	vmov	r2, s5
9001d0a6:	eef0 2a47 	vmov.f32	s5, s14
9001d0aa:	fb92 f3f3 	sdiv	r3, r2, r3
9001d0ae:	ee13 2a10 	vmov	r2, s6
9001d0b2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d0b4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d0b6:	eeb0 3a67 	vmov.f32	s6, s15
9001d0ba:	fb92 f3f3 	sdiv	r3, r2, r3
9001d0be:	9a04      	ldr	r2, [sp, #16]
9001d0c0:	9314      	str	r3, [sp, #80]	@ 0x50
9001d0c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d0c4:	bf08      	it	eq
9001d0c6:	4613      	moveq	r3, r2
9001d0c8:	e787      	b.n	9001cfda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001d0ca:	140e      	asrs	r6, r1, #16
9001d0cc:	d462      	bmi.n	9001d194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d0ce:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d0d2:	42b5      	cmp	r5, r6
9001d0d4:	dd5e      	ble.n	9001d194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d0d6:	1417      	asrs	r7, r2, #16
9001d0d8:	d45c      	bmi.n	9001d194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d0da:	f8de 400c 	ldr.w	r4, [lr, #12]
9001d0de:	42bc      	cmp	r4, r7
9001d0e0:	dd58      	ble.n	9001d194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d0e2:	b22d      	sxth	r5, r5
9001d0e4:	9c02      	ldr	r4, [sp, #8]
9001d0e6:	fb07 6505 	mla	r5, r7, r5, r6
9001d0ea:	5d66      	ldrb	r6, [r4, r5]
9001d0ec:	2e00      	cmp	r6, #0
9001d0ee:	d051      	beq.n	9001d194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d0f0:	9c01      	ldr	r4, [sp, #4]
9001d0f2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001d0f6:	f06f 0401 	mvn.w	r4, #1
9001d0fa:	fb04 f408 	mul.w	r4, r4, r8
9001d0fe:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001d102:	5b05      	ldrh	r5, [r0, r4]
9001d104:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d108:	9403      	str	r4, [sp, #12]
9001d10a:	9c05      	ldr	r4, [sp, #20]
9001d10c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d110:	4366      	muls	r6, r4
9001d112:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d116:	1c74      	adds	r4, r6, #1
9001d118:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001d11c:	122e      	asrs	r6, r5, #8
9001d11e:	1224      	asrs	r4, r4, #8
9001d120:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d124:	00ed      	lsls	r5, r5, #3
9001d126:	b2a7      	uxth	r7, r4
9001d128:	43e4      	mvns	r4, r4
9001d12a:	b2ed      	uxtb	r5, r5
9001d12c:	b2e4      	uxtb	r4, r4
9001d12e:	fb16 f604 	smulbb	r6, r6, r4
9001d132:	fb15 f504 	smulbb	r5, r5, r4
9001d136:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d13a:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001d13e:	fb1a fa04 	smulbb	sl, sl, r4
9001d142:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001d146:	fa1f fc8c 	uxth.w	ip, ip
9001d14a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d14e:	fa5f f989 	uxtb.w	r9, r9
9001d152:	fb06 a607 	mla	r6, r6, r7, sl
9001d156:	f10c 0401 	add.w	r4, ip, #1
9001d15a:	fb09 5507 	mla	r5, r9, r7, r5
9001d15e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d162:	9c03      	ldr	r4, [sp, #12]
9001d164:	b2ad      	uxth	r5, r5
9001d166:	b2b6      	uxth	r6, r6
9001d168:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d16c:	f105 0a01 	add.w	sl, r5, #1
9001d170:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d174:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d178:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d17c:	f106 0a01 	add.w	sl, r6, #1
9001d180:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d184:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d188:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d18c:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d190:	f820 c004 	strh.w	ip, [r0, r4]
9001d194:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d196:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001d19a:	4421      	add	r1, r4
9001d19c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d19e:	4422      	add	r2, r4
9001d1a0:	e750      	b.n	9001d044 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d1a2:	f04f 0900 	mov.w	r9, #0
9001d1a6:	eba3 0409 	sub.w	r4, r3, r9
9001d1aa:	2c00      	cmp	r4, #0
9001d1ac:	f77f af4e 	ble.w	9001d04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d1b0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001d1b4:	140d      	asrs	r5, r1, #16
9001d1b6:	1414      	asrs	r4, r2, #16
9001d1b8:	fb06 5404 	mla	r4, r6, r4, r5
9001d1bc:	9d02      	ldr	r5, [sp, #8]
9001d1be:	5d2e      	ldrb	r6, [r5, r4]
9001d1c0:	2e00      	cmp	r6, #0
9001d1c2:	d04c      	beq.n	9001d25e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001d1c4:	9d01      	ldr	r5, [sp, #4]
9001d1c6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001d1ca:	9c05      	ldr	r4, [sp, #20]
9001d1cc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001d1d0:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001d1d4:	4366      	muls	r6, r4
9001d1d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d1da:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d1de:	1c74      	adds	r4, r6, #1
9001d1e0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d1e4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001d1e8:	122e      	asrs	r6, r5, #8
9001d1ea:	1224      	asrs	r4, r4, #8
9001d1ec:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d1f0:	00ed      	lsls	r5, r5, #3
9001d1f2:	b2a7      	uxth	r7, r4
9001d1f4:	43e4      	mvns	r4, r4
9001d1f6:	b2ed      	uxtb	r5, r5
9001d1f8:	b2e4      	uxtb	r4, r4
9001d1fa:	fb16 f604 	smulbb	r6, r6, r4
9001d1fe:	fb15 f504 	smulbb	r5, r5, r4
9001d202:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d206:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001d20a:	fb1a fa04 	smulbb	sl, sl, r4
9001d20e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d212:	fa1f fc8c 	uxth.w	ip, ip
9001d216:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d21a:	fa5f f888 	uxtb.w	r8, r8
9001d21e:	fb06 a607 	mla	r6, r6, r7, sl
9001d222:	f10c 0401 	add.w	r4, ip, #1
9001d226:	fb08 5507 	mla	r5, r8, r7, r5
9001d22a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d22e:	b2ad      	uxth	r5, r5
9001d230:	b2b6      	uxth	r6, r6
9001d232:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d236:	f105 0a01 	add.w	sl, r5, #1
9001d23a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d23e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d242:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d246:	f106 0a01 	add.w	sl, r6, #1
9001d24a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d24e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d252:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d256:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d25a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001d25e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d260:	f109 0901 	add.w	r9, r9, #1
9001d264:	4421      	add	r1, r4
9001d266:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d268:	4422      	add	r2, r4
9001d26a:	e79c      	b.n	9001d1a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001d26c:	b007      	add	sp, #28
9001d26e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d272 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d272:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d276:	b085      	sub	sp, #20
9001d278:	468b      	mov	fp, r1
9001d27a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d27e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d280:	9203      	str	r2, [sp, #12]
9001d282:	6861      	ldr	r1, [r4, #4]
9001d284:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001d288:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001d28c:	fb01 2000 	mla	r0, r1, r0, r2
9001d290:	6822      	ldr	r2, [r4, #0]
9001d292:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001d296:	f8d8 2000 	ldr.w	r2, [r8]
9001d29a:	9200      	str	r2, [sp, #0]
9001d29c:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001d2a0:	9201      	str	r2, [sp, #4]
9001d2a2:	f1bb 0f00 	cmp.w	fp, #0
9001d2a6:	dc03      	bgt.n	9001d2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d2a8:	9a03      	ldr	r2, [sp, #12]
9001d2aa:	2a00      	cmp	r2, #0
9001d2ac:	f340 8146 	ble.w	9001d53c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001d2b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d2b2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001d2b6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d2ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d2bc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001d2c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d2c4:	2b00      	cmp	r3, #0
9001d2c6:	dd0e      	ble.n	9001d2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d2c8:	140c      	asrs	r4, r1, #16
9001d2ca:	d405      	bmi.n	9001d2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d2cc:	42bc      	cmp	r4, r7
9001d2ce:	da03      	bge.n	9001d2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d2d0:	1414      	asrs	r4, r2, #16
9001d2d2:	d401      	bmi.n	9001d2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d2d4:	42b4      	cmp	r4, r6
9001d2d6:	db07      	blt.n	9001d2e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d2d8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001d2da:	3b01      	subs	r3, #1
9001d2dc:	3002      	adds	r0, #2
9001d2de:	4421      	add	r1, r4
9001d2e0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001d2e2:	4422      	add	r2, r4
9001d2e4:	e7ee      	b.n	9001d2c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d2e6:	d017      	beq.n	9001d318 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d2e8:	1e5c      	subs	r4, r3, #1
9001d2ea:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001d2ec:	fb05 1504 	mla	r5, r5, r4, r1
9001d2f0:	142d      	asrs	r5, r5, #16
9001d2f2:	d409      	bmi.n	9001d308 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d2f4:	42bd      	cmp	r5, r7
9001d2f6:	da07      	bge.n	9001d308 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d2f8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001d2fa:	fb05 2404 	mla	r4, r5, r4, r2
9001d2fe:	1424      	asrs	r4, r4, #16
9001d300:	d402      	bmi.n	9001d308 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d302:	42b4      	cmp	r4, r6
9001d304:	f2c0 80b3 	blt.w	9001d46e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001d308:	2600      	movs	r6, #0
9001d30a:	199c      	adds	r4, r3, r6
9001d30c:	2c00      	cmp	r4, #0
9001d30e:	dc3e      	bgt.n	9001d38e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d310:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d314:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d318:	f1bb 0f00 	cmp.w	fp, #0
9001d31c:	f340 810e 	ble.w	9001d53c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001d320:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d324:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d326:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d32a:	f1bb 0b01 	subs.w	fp, fp, #1
9001d32e:	eeb0 6a62 	vmov.f32	s12, s5
9001d332:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d336:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d33a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d33e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d342:	eeb0 6a43 	vmov.f32	s12, s6
9001d346:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d34a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d34e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d352:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d356:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d35a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d35e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d362:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d366:	ee12 2a90 	vmov	r2, s5
9001d36a:	eef0 2a47 	vmov.f32	s5, s14
9001d36e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d372:	ee13 2a10 	vmov	r2, s6
9001d376:	9311      	str	r3, [sp, #68]	@ 0x44
9001d378:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d37a:	eeb0 3a67 	vmov.f32	s6, s15
9001d37e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d382:	9a03      	ldr	r2, [sp, #12]
9001d384:	9312      	str	r3, [sp, #72]	@ 0x48
9001d386:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d388:	bf08      	it	eq
9001d38a:	4613      	moveq	r3, r2
9001d38c:	e789      	b.n	9001d2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d38e:	140f      	asrs	r7, r1, #16
9001d390:	d418      	bmi.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d392:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001d396:	42bd      	cmp	r5, r7
9001d398:	dd14      	ble.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d39a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d39e:	d411      	bmi.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d3a0:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001d3a4:	4564      	cmp	r4, ip
9001d3a6:	dd0d      	ble.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d3a8:	b22d      	sxth	r5, r5
9001d3aa:	9c01      	ldr	r4, [sp, #4]
9001d3ac:	fb0c 7505 	mla	r5, ip, r5, r7
9001d3b0:	5d64      	ldrb	r4, [r4, r5]
9001d3b2:	2cff      	cmp	r4, #255	@ 0xff
9001d3b4:	d10c      	bne.n	9001d3d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001d3b6:	9c00      	ldr	r4, [sp, #0]
9001d3b8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001d3bc:	f06f 0401 	mvn.w	r4, #1
9001d3c0:	4374      	muls	r4, r6
9001d3c2:	5305      	strh	r5, [r0, r4]
9001d3c4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001d3c6:	3e01      	subs	r6, #1
9001d3c8:	4421      	add	r1, r4
9001d3ca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001d3cc:	4422      	add	r2, r4
9001d3ce:	e79c      	b.n	9001d30a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d3d0:	2c00      	cmp	r4, #0
9001d3d2:	d0f7      	beq.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d3d4:	9f00      	ldr	r7, [sp, #0]
9001d3d6:	fa1f fc84 	uxth.w	ip, r4
9001d3da:	43e4      	mvns	r4, r4
9001d3dc:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001d3e0:	f06f 0501 	mvn.w	r5, #1
9001d3e4:	b2e4      	uxtb	r4, r4
9001d3e6:	4375      	muls	r5, r6
9001d3e8:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001d3ec:	9502      	str	r5, [sp, #8]
9001d3ee:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001d3f2:	5b45      	ldrh	r5, [r0, r5]
9001d3f4:	122f      	asrs	r7, r5, #8
9001d3f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d3fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d3fe:	00ed      	lsls	r5, r5, #3
9001d400:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d404:	fb17 f704 	smulbb	r7, r7, r4
9001d408:	b2ed      	uxtb	r5, r5
9001d40a:	fb1a fa04 	smulbb	sl, sl, r4
9001d40e:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001d412:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001d416:	fb15 f504 	smulbb	r5, r5, r4
9001d41a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001d41e:	fa1f fe8e 	uxth.w	lr, lr
9001d422:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d426:	fa5f f989 	uxtb.w	r9, r9
9001d42a:	fb07 a70c 	mla	r7, r7, ip, sl
9001d42e:	f10e 0401 	add.w	r4, lr, #1
9001d432:	fb09 550c 	mla	r5, r9, ip, r5
9001d436:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001d43a:	9c02      	ldr	r4, [sp, #8]
9001d43c:	b2ad      	uxth	r5, r5
9001d43e:	b2bf      	uxth	r7, r7
9001d440:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001d444:	f105 0a01 	add.w	sl, r5, #1
9001d448:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d44c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d450:	ea4a 0e0e 	orr.w	lr, sl, lr
9001d454:	f107 0a01 	add.w	sl, r7, #1
9001d458:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d45c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d460:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d464:	ea4e 0e0a 	orr.w	lr, lr, sl
9001d468:	f820 e004 	strh.w	lr, [r0, r4]
9001d46c:	e7aa      	b.n	9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d46e:	f04f 0900 	mov.w	r9, #0
9001d472:	eba3 0409 	sub.w	r4, r3, r9
9001d476:	2c00      	cmp	r4, #0
9001d478:	f77f af4a 	ble.w	9001d310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d47c:	1414      	asrs	r4, r2, #16
9001d47e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001d482:	140d      	asrs	r5, r1, #16
9001d484:	fb06 5504 	mla	r5, r6, r4, r5
9001d488:	9c01      	ldr	r4, [sp, #4]
9001d48a:	5d64      	ldrb	r4, [r4, r5]
9001d48c:	2cff      	cmp	r4, #255	@ 0xff
9001d48e:	d10b      	bne.n	9001d4a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001d490:	9c00      	ldr	r4, [sp, #0]
9001d492:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001d496:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001d49a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001d49c:	f109 0901 	add.w	r9, r9, #1
9001d4a0:	4421      	add	r1, r4
9001d4a2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001d4a4:	4422      	add	r2, r4
9001d4a6:	e7e4      	b.n	9001d472 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001d4a8:	2c00      	cmp	r4, #0
9001d4aa:	d0f6      	beq.n	9001d49a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001d4ac:	9e00      	ldr	r6, [sp, #0]
9001d4ae:	b2a7      	uxth	r7, r4
9001d4b0:	43e4      	mvns	r4, r4
9001d4b2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001d4b6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001d4ba:	b2e4      	uxtb	r4, r4
9001d4bc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d4c0:	122e      	asrs	r6, r5, #8
9001d4c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d4c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d4ca:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d4ce:	00ed      	lsls	r5, r5, #3
9001d4d0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d4d4:	fb16 f604 	smulbb	r6, r6, r4
9001d4d8:	b2ed      	uxtb	r5, r5
9001d4da:	fb1a fa04 	smulbb	sl, sl, r4
9001d4de:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d4e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d4e6:	fb15 f504 	smulbb	r5, r5, r4
9001d4ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d4ee:	fa1f fc8c 	uxth.w	ip, ip
9001d4f2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d4f6:	fa5f fe8e 	uxtb.w	lr, lr
9001d4fa:	fb06 a607 	mla	r6, r6, r7, sl
9001d4fe:	f10c 0401 	add.w	r4, ip, #1
9001d502:	fb0e 5507 	mla	r5, lr, r7, r5
9001d506:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d50a:	b2ad      	uxth	r5, r5
9001d50c:	b2b6      	uxth	r6, r6
9001d50e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d512:	f105 0a01 	add.w	sl, r5, #1
9001d516:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d51a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d51e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d522:	f106 0a01 	add.w	sl, r6, #1
9001d526:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d52a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d52e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d532:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d536:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001d53a:	e7ae      	b.n	9001d49a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001d53c:	b005      	add	sp, #20
9001d53e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d542 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d542:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d546:	b085      	sub	sp, #20
9001d548:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d54a:	9203      	str	r2, [sp, #12]
9001d54c:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001d550:	9100      	str	r1, [sp, #0]
9001d552:	9201      	str	r2, [sp, #4]
9001d554:	6841      	ldr	r1, [r0, #4]
9001d556:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001d55a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d55e:	fb01 2404 	mla	r4, r1, r4, r2
9001d562:	6802      	ldr	r2, [r0, #0]
9001d564:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d568:	f8de 2000 	ldr.w	r2, [lr]
9001d56c:	9202      	str	r2, [sp, #8]
9001d56e:	9a01      	ldr	r2, [sp, #4]
9001d570:	43d6      	mvns	r6, r2
9001d572:	b2f6      	uxtb	r6, r6
9001d574:	9a00      	ldr	r2, [sp, #0]
9001d576:	2a00      	cmp	r2, #0
9001d578:	dc03      	bgt.n	9001d582 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001d57a:	9a03      	ldr	r2, [sp, #12]
9001d57c:	2a00      	cmp	r2, #0
9001d57e:	f340 8124 	ble.w	9001d7ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001d582:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d584:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001d588:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d58c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d58e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001d592:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d596:	2b00      	cmp	r3, #0
9001d598:	dd0e      	ble.n	9001d5b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d59a:	1408      	asrs	r0, r1, #16
9001d59c:	d405      	bmi.n	9001d5aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d59e:	4560      	cmp	r0, ip
9001d5a0:	da03      	bge.n	9001d5aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d5a2:	1410      	asrs	r0, r2, #16
9001d5a4:	d401      	bmi.n	9001d5aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d5a6:	42b8      	cmp	r0, r7
9001d5a8:	db07      	blt.n	9001d5ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001d5aa:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d5ac:	3b01      	subs	r3, #1
9001d5ae:	3402      	adds	r4, #2
9001d5b0:	4401      	add	r1, r0
9001d5b2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d5b4:	4402      	add	r2, r0
9001d5b6:	e7ee      	b.n	9001d596 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001d5b8:	d06e      	beq.n	9001d698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001d5ba:	1e58      	subs	r0, r3, #1
9001d5bc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001d5be:	fb05 1500 	mla	r5, r5, r0, r1
9001d5c2:	142d      	asrs	r5, r5, #16
9001d5c4:	d45c      	bmi.n	9001d680 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d5c6:	4565      	cmp	r5, ip
9001d5c8:	da5a      	bge.n	9001d680 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d5ca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001d5cc:	fb05 2000 	mla	r0, r5, r0, r2
9001d5d0:	1400      	asrs	r0, r0, #16
9001d5d2:	d455      	bmi.n	9001d680 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d5d4:	42b8      	cmp	r0, r7
9001d5d6:	da53      	bge.n	9001d680 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d5d8:	4699      	mov	r9, r3
9001d5da:	46a2      	mov	sl, r4
9001d5dc:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001d5e0:	f1b9 0f00 	cmp.w	r9, #0
9001d5e4:	dd54      	ble.n	9001d690 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d5e6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d5ea:	140d      	asrs	r5, r1, #16
9001d5ec:	1410      	asrs	r0, r2, #16
9001d5ee:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
9001d5f2:	fb07 5000 	mla	r0, r7, r0, r5
9001d5f6:	9d02      	ldr	r5, [sp, #8]
9001d5f8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001d5fc:	f8ba 5000 	ldrh.w	r5, [sl]
9001d600:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d604:	122f      	asrs	r7, r5, #8
9001d606:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001d60a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d60e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d612:	00ed      	lsls	r5, r5, #3
9001d614:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001d618:	fb17 f706 	smulbb	r7, r7, r6
9001d61c:	b2ed      	uxtb	r5, r5
9001d61e:	fb18 f806 	smulbb	r8, r8, r6
9001d622:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001d626:	10c7      	asrs	r7, r0, #3
9001d628:	fb15 f506 	smulbb	r5, r5, r6
9001d62c:	00c0      	lsls	r0, r0, #3
9001d62e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d632:	fa1f fc8c 	uxth.w	ip, ip
9001d636:	b2c0      	uxtb	r0, r0
9001d638:	fb07 870b 	mla	r7, r7, fp, r8
9001d63c:	fb00 500b 	mla	r0, r0, fp, r5
9001d640:	f10c 0501 	add.w	r5, ip, #1
9001d644:	b2bf      	uxth	r7, r7
9001d646:	b280      	uxth	r0, r0
9001d648:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d64c:	f107 0801 	add.w	r8, r7, #1
9001d650:	1c45      	adds	r5, r0, #1
9001d652:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001d656:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d65a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d65e:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d660:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d664:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d668:	4401      	add	r1, r0
9001d66a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001d66e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d670:	ea45 0c0c 	orr.w	ip, r5, ip
9001d674:	4402      	add	r2, r0
9001d676:	ea4c 0c08 	orr.w	ip, ip, r8
9001d67a:	f82a cb02 	strh.w	ip, [sl], #2
9001d67e:	e7af      	b.n	9001d5e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d680:	f04f 0800 	mov.w	r8, #0
9001d684:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001d688:	eb03 0008 	add.w	r0, r3, r8
9001d68c:	2800      	cmp	r0, #0
9001d68e:	dc41      	bgt.n	9001d714 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001d690:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d694:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d698:	9b00      	ldr	r3, [sp, #0]
9001d69a:	2b00      	cmp	r3, #0
9001d69c:	f340 8095 	ble.w	9001d7ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001d6a0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001d6a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d6a6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d6aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d6ae:	eef0 6a62 	vmov.f32	s13, s5
9001d6b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d6b6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d6ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d6be:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001d6c2:	eef0 6a43 	vmov.f32	s13, s6
9001d6c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d6ca:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001d6ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d6d2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d6d6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d6da:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d6de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d6e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d6e6:	ee12 2a90 	vmov	r2, s5
9001d6ea:	eef0 2a47 	vmov.f32	s5, s14
9001d6ee:	fb92 f3f3 	sdiv	r3, r2, r3
9001d6f2:	ee13 2a10 	vmov	r2, s6
9001d6f6:	9311      	str	r3, [sp, #68]	@ 0x44
9001d6f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d6fa:	eeb0 3a67 	vmov.f32	s6, s15
9001d6fe:	fb92 f3f3 	sdiv	r3, r2, r3
9001d702:	9312      	str	r3, [sp, #72]	@ 0x48
9001d704:	9b00      	ldr	r3, [sp, #0]
9001d706:	9a03      	ldr	r2, [sp, #12]
9001d708:	3b01      	subs	r3, #1
9001d70a:	9300      	str	r3, [sp, #0]
9001d70c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d70e:	bf08      	it	eq
9001d710:	4613      	moveq	r3, r2
9001d712:	e72f      	b.n	9001d574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001d714:	140f      	asrs	r7, r1, #16
9001d716:	d451      	bmi.n	9001d7bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d718:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d71c:	42bd      	cmp	r5, r7
9001d71e:	dd4d      	ble.n	9001d7bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d720:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d724:	d44a      	bmi.n	9001d7bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d726:	f8de 000c 	ldr.w	r0, [lr, #12]
9001d72a:	4560      	cmp	r0, ip
9001d72c:	dd46      	ble.n	9001d7bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d72e:	b22d      	sxth	r5, r5
9001d730:	9802      	ldr	r0, [sp, #8]
9001d732:	fb0c 7505 	mla	r5, ip, r5, r7
9001d736:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001d73a:	f06f 0501 	mvn.w	r5, #1
9001d73e:	fb05 fb08 	mul.w	fp, r5, r8
9001d742:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d746:	f834 500b 	ldrh.w	r5, [r4, fp]
9001d74a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d74e:	122f      	asrs	r7, r5, #8
9001d750:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001d754:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d758:	00ed      	lsls	r5, r5, #3
9001d75a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001d75e:	fb17 f706 	smulbb	r7, r7, r6
9001d762:	b2ed      	uxtb	r5, r5
9001d764:	fb19 f906 	smulbb	r9, r9, r6
9001d768:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001d76c:	10c7      	asrs	r7, r0, #3
9001d76e:	fb15 f506 	smulbb	r5, r5, r6
9001d772:	00c0      	lsls	r0, r0, #3
9001d774:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d778:	fa1f fc8c 	uxth.w	ip, ip
9001d77c:	b2c0      	uxtb	r0, r0
9001d77e:	fb07 970a 	mla	r7, r7, sl, r9
9001d782:	fb00 500a 	mla	r0, r0, sl, r5
9001d786:	f10c 0501 	add.w	r5, ip, #1
9001d78a:	b2bf      	uxth	r7, r7
9001d78c:	b280      	uxth	r0, r0
9001d78e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d792:	f107 0901 	add.w	r9, r7, #1
9001d796:	1c45      	adds	r5, r0, #1
9001d798:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001d79c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d7a0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d7a4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d7a8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d7ac:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001d7b0:	ea45 0c0c 	orr.w	ip, r5, ip
9001d7b4:	ea4c 0c09 	orr.w	ip, ip, r9
9001d7b8:	f824 c00b 	strh.w	ip, [r4, fp]
9001d7bc:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d7be:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001d7c2:	4401      	add	r1, r0
9001d7c4:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d7c6:	4402      	add	r2, r0
9001d7c8:	e75e      	b.n	9001d688 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001d7ca:	b005      	add	sp, #20
9001d7cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d7d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d7d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d7d4:	b085      	sub	sp, #20
9001d7d6:	4693      	mov	fp, r2
9001d7d8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d7dc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d7de:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001d7e0:	6870      	ldr	r0, [r6, #4]
9001d7e2:	9101      	str	r1, [sp, #4]
9001d7e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d7e8:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001d7ec:	fb00 2404 	mla	r4, r0, r4, r2
9001d7f0:	6832      	ldr	r2, [r6, #0]
9001d7f2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d7f6:	682a      	ldr	r2, [r5, #0]
9001d7f8:	9202      	str	r2, [sp, #8]
9001d7fa:	9a01      	ldr	r2, [sp, #4]
9001d7fc:	2a00      	cmp	r2, #0
9001d7fe:	dc03      	bgt.n	9001d808 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d800:	f1bb 0f00 	cmp.w	fp, #0
9001d804:	f340 809a 	ble.w	9001d93c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d808:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d80a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d80e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d812:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d814:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d818:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d81c:	2b00      	cmp	r3, #0
9001d81e:	dd0c      	ble.n	9001d83a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001d820:	1406      	asrs	r6, r0, #16
9001d822:	d405      	bmi.n	9001d830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d824:	454e      	cmp	r6, r9
9001d826:	da03      	bge.n	9001d830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d828:	1416      	asrs	r6, r2, #16
9001d82a:	d401      	bmi.n	9001d830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d82c:	4546      	cmp	r6, r8
9001d82e:	db05      	blt.n	9001d83c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d830:	4470      	add	r0, lr
9001d832:	4462      	add	r2, ip
9001d834:	3b01      	subs	r3, #1
9001d836:	3402      	adds	r4, #2
9001d838:	e7f0      	b.n	9001d81c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d83a:	d00f      	beq.n	9001d85c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001d83c:	1e5e      	subs	r6, r3, #1
9001d83e:	fb0e 0706 	mla	r7, lr, r6, r0
9001d842:	143f      	asrs	r7, r7, #16
9001d844:	d541      	bpl.n	9001d8ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001d846:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d84a:	4698      	mov	r8, r3
9001d84c:	9603      	str	r6, [sp, #12]
9001d84e:	f1b8 0f00 	cmp.w	r8, #0
9001d852:	dc56      	bgt.n	9001d902 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001d854:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d858:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d85c:	9b01      	ldr	r3, [sp, #4]
9001d85e:	2b00      	cmp	r3, #0
9001d860:	dd6c      	ble.n	9001d93c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d862:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d866:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d868:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d86c:	eeb0 6a62 	vmov.f32	s12, s5
9001d870:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d874:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d878:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d87c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d880:	eeb0 6a43 	vmov.f32	s12, s6
9001d884:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d888:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d88c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d890:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d894:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d898:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d89c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d8a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d8a4:	ee12 2a90 	vmov	r2, s5
9001d8a8:	eef0 2a47 	vmov.f32	s5, s14
9001d8ac:	fb92 fef3 	sdiv	lr, r2, r3
9001d8b0:	ee13 2a10 	vmov	r2, s6
9001d8b4:	eeb0 3a67 	vmov.f32	s6, s15
9001d8b8:	fb92 fcf3 	sdiv	ip, r2, r3
9001d8bc:	9b01      	ldr	r3, [sp, #4]
9001d8be:	3b01      	subs	r3, #1
9001d8c0:	9301      	str	r3, [sp, #4]
9001d8c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d8c4:	bf08      	it	eq
9001d8c6:	465b      	moveq	r3, fp
9001d8c8:	e797      	b.n	9001d7fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d8ca:	454f      	cmp	r7, r9
9001d8cc:	dabb      	bge.n	9001d846 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d8ce:	fb0c 2606 	mla	r6, ip, r6, r2
9001d8d2:	1436      	asrs	r6, r6, #16
9001d8d4:	d4b7      	bmi.n	9001d846 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d8d6:	4546      	cmp	r6, r8
9001d8d8:	dab5      	bge.n	9001d846 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d8da:	461e      	mov	r6, r3
9001d8dc:	46a0      	mov	r8, r4
9001d8de:	2e00      	cmp	r6, #0
9001d8e0:	ddb8      	ble.n	9001d854 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d8e2:	1417      	asrs	r7, r2, #16
9001d8e4:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d8e8:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d8ec:	9902      	ldr	r1, [sp, #8]
9001d8ee:	4470      	add	r0, lr
9001d8f0:	4462      	add	r2, ip
9001d8f2:	fb0a 9707 	mla	r7, sl, r7, r9
9001d8f6:	3e01      	subs	r6, #1
9001d8f8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d8fc:	f828 7b02 	strh.w	r7, [r8], #2
9001d900:	e7ed      	b.n	9001d8de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001d902:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d906:	d414      	bmi.n	9001d932 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d908:	68ae      	ldr	r6, [r5, #8]
9001d90a:	454e      	cmp	r6, r9
9001d90c:	dd11      	ble.n	9001d932 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d90e:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d912:	d40e      	bmi.n	9001d932 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d914:	68ef      	ldr	r7, [r5, #12]
9001d916:	4557      	cmp	r7, sl
9001d918:	dd0b      	ble.n	9001d932 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d91a:	b236      	sxth	r6, r6
9001d91c:	f06f 0101 	mvn.w	r1, #1
9001d920:	9f02      	ldr	r7, [sp, #8]
9001d922:	fb0a 9606 	mla	r6, sl, r6, r9
9001d926:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d92a:	fb01 f608 	mul.w	r6, r1, r8
9001d92e:	9903      	ldr	r1, [sp, #12]
9001d930:	538f      	strh	r7, [r1, r6]
9001d932:	4470      	add	r0, lr
9001d934:	4462      	add	r2, ip
9001d936:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001d93a:	e788      	b.n	9001d84e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d93c:	b005      	add	sp, #20
9001d93e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d942 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d942:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d946:	b087      	sub	sp, #28
9001d948:	468b      	mov	fp, r1
9001d94a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d94e:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d950:	9203      	str	r2, [sp, #12]
9001d952:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d956:	6841      	ldr	r1, [r0, #4]
9001d958:	9204      	str	r2, [sp, #16]
9001d95a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001d95e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001d962:	fb01 2505 	mla	r5, r1, r5, r2
9001d966:	6802      	ldr	r2, [r0, #0]
9001d968:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001d96c:	f8d9 2000 	ldr.w	r2, [r9]
9001d970:	9201      	str	r2, [sp, #4]
9001d972:	f1bb 0f00 	cmp.w	fp, #0
9001d976:	dc03      	bgt.n	9001d980 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d978:	9a03      	ldr	r2, [sp, #12]
9001d97a:	2a00      	cmp	r2, #0
9001d97c:	f340 8158 	ble.w	9001dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d980:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d982:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d986:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d98a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d98c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d990:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d994:	2b00      	cmp	r3, #0
9001d996:	dd0e      	ble.n	9001d9b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d998:	1402      	asrs	r2, r0, #16
9001d99a:	d405      	bmi.n	9001d9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d99c:	42ba      	cmp	r2, r7
9001d99e:	da03      	bge.n	9001d9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d9a0:	140a      	asrs	r2, r1, #16
9001d9a2:	d401      	bmi.n	9001d9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d9a4:	42b2      	cmp	r2, r6
9001d9a6:	db07      	blt.n	9001d9b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d9a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d9aa:	3b01      	subs	r3, #1
9001d9ac:	3502      	adds	r5, #2
9001d9ae:	4410      	add	r0, r2
9001d9b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d9b2:	4411      	add	r1, r2
9001d9b4:	e7ee      	b.n	9001d994 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d9b6:	d017      	beq.n	9001d9e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d9b8:	1e5a      	subs	r2, r3, #1
9001d9ba:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d9bc:	fb04 0402 	mla	r4, r4, r2, r0
9001d9c0:	1424      	asrs	r4, r4, #16
9001d9c2:	d409      	bmi.n	9001d9d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d9c4:	42bc      	cmp	r4, r7
9001d9c6:	da07      	bge.n	9001d9d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d9c8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d9ca:	fb04 1202 	mla	r2, r4, r2, r1
9001d9ce:	1412      	asrs	r2, r2, #16
9001d9d0:	d402      	bmi.n	9001d9d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d9d2:	42b2      	cmp	r2, r6
9001d9d4:	f2c0 80bf 	blt.w	9001db56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001d9d8:	2700      	movs	r7, #0
9001d9da:	19da      	adds	r2, r3, r7
9001d9dc:	2a00      	cmp	r2, #0
9001d9de:	dc3e      	bgt.n	9001da5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d9e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d9e4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001d9e8:	f1bb 0f00 	cmp.w	fp, #0
9001d9ec:	f340 8120 	ble.w	9001dc30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d9f0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d9f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d9f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d9fa:	f1bb 0b01 	subs.w	fp, fp, #1
9001d9fe:	eeb0 6a62 	vmov.f32	s12, s5
9001da02:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001da06:	ee31 1a05 	vadd.f32	s2, s2, s10
9001da0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001da0e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001da12:	eeb0 6a43 	vmov.f32	s12, s6
9001da16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001da1a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001da1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001da22:	ee61 7a27 	vmul.f32	s15, s2, s15
9001da26:	ee77 2a62 	vsub.f32	s5, s14, s5
9001da2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001da2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001da32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001da36:	ee12 2a90 	vmov	r2, s5
9001da3a:	eef0 2a47 	vmov.f32	s5, s14
9001da3e:	fb92 f3f3 	sdiv	r3, r2, r3
9001da42:	ee13 2a10 	vmov	r2, s6
9001da46:	9313      	str	r3, [sp, #76]	@ 0x4c
9001da48:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001da4a:	eeb0 3a67 	vmov.f32	s6, s15
9001da4e:	fb92 f3f3 	sdiv	r3, r2, r3
9001da52:	9a03      	ldr	r2, [sp, #12]
9001da54:	9314      	str	r3, [sp, #80]	@ 0x50
9001da56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001da58:	bf08      	it	eq
9001da5a:	4613      	moveq	r3, r2
9001da5c:	e789      	b.n	9001d972 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001da5e:	1406      	asrs	r6, r0, #16
9001da60:	d42d      	bmi.n	9001dabe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001da62:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001da66:	42b4      	cmp	r4, r6
9001da68:	dd29      	ble.n	9001dabe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001da6a:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001da6e:	d426      	bmi.n	9001dabe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001da70:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001da74:	4562      	cmp	r2, ip
9001da76:	dd22      	ble.n	9001dabe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001da78:	b224      	sxth	r4, r4
9001da7a:	9a01      	ldr	r2, [sp, #4]
9001da7c:	fb0c 6404 	mla	r4, ip, r4, r6
9001da80:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001da84:	0e22      	lsrs	r2, r4, #24
9001da86:	d01a      	beq.n	9001dabe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001da88:	9e04      	ldr	r6, [sp, #16]
9001da8a:	4372      	muls	r2, r6
9001da8c:	1c56      	adds	r6, r2, #1
9001da8e:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001da92:	0a26      	lsrs	r6, r4, #8
9001da94:	1212      	asrs	r2, r2, #8
9001da96:	9605      	str	r6, [sp, #20]
9001da98:	2aff      	cmp	r2, #255	@ 0xff
9001da9a:	d116      	bne.n	9001daca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001da9c:	f06f 0201 	mvn.w	r2, #1
9001daa0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001daa4:	fb02 fc07 	mul.w	ip, r2, r7
9001daa8:	0962      	lsrs	r2, r4, #5
9001daaa:	f026 0607 	bic.w	r6, r6, #7
9001daae:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001dab2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001dab6:	4316      	orrs	r6, r2
9001dab8:	4326      	orrs	r6, r4
9001daba:	f825 600c 	strh.w	r6, [r5, ip]
9001dabe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001dac0:	3f01      	subs	r7, #1
9001dac2:	4410      	add	r0, r2
9001dac4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dac6:	4411      	add	r1, r2
9001dac8:	e787      	b.n	9001d9da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001daca:	f06f 0601 	mvn.w	r6, #1
9001dace:	fa1f fa82 	uxth.w	sl, r2
9001dad2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001dad6:	43d2      	mvns	r2, r2
9001dad8:	437e      	muls	r6, r7
9001dada:	b2e4      	uxtb	r4, r4
9001dadc:	fb1c fc0a 	smulbb	ip, ip, sl
9001dae0:	b2d2      	uxtb	r2, r2
9001dae2:	f835 8006 	ldrh.w	r8, [r5, r6]
9001dae6:	fb14 f40a 	smulbb	r4, r4, sl
9001daea:	9602      	str	r6, [sp, #8]
9001daec:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001daf0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001daf4:	fb16 f60a 	smulbb	r6, r6, sl
9001daf8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001dafc:	fb0e ce02 	mla	lr, lr, r2, ip
9001db00:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001db04:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001db08:	fa1f fe8e 	uxth.w	lr, lr
9001db0c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001db10:	fa5f f888 	uxtb.w	r8, r8
9001db14:	fb0c 6c02 	mla	ip, ip, r2, r6
9001db18:	fb08 4402 	mla	r4, r8, r2, r4
9001db1c:	f10e 0201 	add.w	r2, lr, #1
9001db20:	fa1f fc8c 	uxth.w	ip, ip
9001db24:	b2a4      	uxth	r4, r4
9001db26:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001db2a:	9a02      	ldr	r2, [sp, #8]
9001db2c:	1c66      	adds	r6, r4, #1
9001db2e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001db32:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001db36:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001db3a:	ea46 0e0e 	orr.w	lr, r6, lr
9001db3e:	f10c 0601 	add.w	r6, ip, #1
9001db42:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001db46:	0976      	lsrs	r6, r6, #5
9001db48:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001db4c:	ea4e 0e06 	orr.w	lr, lr, r6
9001db50:	f825 e002 	strh.w	lr, [r5, r2]
9001db54:	e7b3      	b.n	9001dabe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001db56:	f04f 0800 	mov.w	r8, #0
9001db5a:	eba3 0208 	sub.w	r2, r3, r8
9001db5e:	2a00      	cmp	r2, #0
9001db60:	f77f af3e 	ble.w	9001d9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001db64:	1404      	asrs	r4, r0, #16
9001db66:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001db6a:	140a      	asrs	r2, r1, #16
9001db6c:	fb06 4202 	mla	r2, r6, r2, r4
9001db70:	9c01      	ldr	r4, [sp, #4]
9001db72:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001db76:	0e22      	lsrs	r2, r4, #24
9001db78:	d015      	beq.n	9001dba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001db7a:	9e04      	ldr	r6, [sp, #16]
9001db7c:	4372      	muls	r2, r6
9001db7e:	1c56      	adds	r6, r2, #1
9001db80:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001db84:	0a26      	lsrs	r6, r4, #8
9001db86:	1212      	asrs	r2, r2, #8
9001db88:	2aff      	cmp	r2, #255	@ 0xff
9001db8a:	d113      	bne.n	9001dbb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001db8c:	0962      	lsrs	r2, r4, #5
9001db8e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001db92:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001db96:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001db9a:	f026 0607 	bic.w	r6, r6, #7
9001db9e:	4316      	orrs	r6, r2
9001dba0:	4326      	orrs	r6, r4
9001dba2:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001dba6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001dba8:	f108 0801 	add.w	r8, r8, #1
9001dbac:	4410      	add	r0, r2
9001dbae:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dbb0:	4411      	add	r1, r2
9001dbb2:	e7d2      	b.n	9001db5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001dbb4:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001dbb8:	fa1f fa82 	uxth.w	sl, r2
9001dbbc:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001dbc0:	43d2      	mvns	r2, r2
9001dbc2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001dbc6:	fb17 f70a 	smulbb	r7, r7, sl
9001dbca:	b2d2      	uxtb	r2, r2
9001dbcc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dbd0:	b2e4      	uxtb	r4, r4
9001dbd2:	b2f6      	uxtb	r6, r6
9001dbd4:	fb0c 7c02 	mla	ip, ip, r2, r7
9001dbd8:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001dbdc:	fb14 f40a 	smulbb	r4, r4, sl
9001dbe0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001dbe4:	fa1f fc8c 	uxth.w	ip, ip
9001dbe8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001dbec:	fb16 f60a 	smulbb	r6, r6, sl
9001dbf0:	fa5f fe8e 	uxtb.w	lr, lr
9001dbf4:	fb0e 4402 	mla	r4, lr, r2, r4
9001dbf8:	fb07 6702 	mla	r7, r7, r2, r6
9001dbfc:	f10c 0201 	add.w	r2, ip, #1
9001dc00:	b2a4      	uxth	r4, r4
9001dc02:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001dc06:	1c66      	adds	r6, r4, #1
9001dc08:	b2bf      	uxth	r7, r7
9001dc0a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001dc0e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001dc12:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001dc16:	ea46 0c0c 	orr.w	ip, r6, ip
9001dc1a:	1c7e      	adds	r6, r7, #1
9001dc1c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001dc20:	0976      	lsrs	r6, r6, #5
9001dc22:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001dc26:	ea4c 0c06 	orr.w	ip, ip, r6
9001dc2a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001dc2e:	e7ba      	b.n	9001dba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001dc30:	b007      	add	sp, #28
9001dc32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001dc38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001dc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dc3c:	b085      	sub	sp, #20
9001dc3e:	468b      	mov	fp, r1
9001dc40:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001dc44:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001dc46:	9203      	str	r2, [sp, #12]
9001dc48:	6841      	ldr	r1, [r0, #4]
9001dc4a:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001dc4e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001dc52:	fb01 2404 	mla	r4, r1, r4, r2
9001dc56:	6802      	ldr	r2, [r0, #0]
9001dc58:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001dc5c:	f8d8 2000 	ldr.w	r2, [r8]
9001dc60:	9201      	str	r2, [sp, #4]
9001dc62:	f1bb 0f00 	cmp.w	fp, #0
9001dc66:	dc03      	bgt.n	9001dc70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001dc68:	9a03      	ldr	r2, [sp, #12]
9001dc6a:	2a00      	cmp	r2, #0
9001dc6c:	f340 814f 	ble.w	9001df0e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001dc70:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001dc72:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001dc76:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001dc7a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001dc7c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001dc80:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001dc84:	2b00      	cmp	r3, #0
9001dc86:	dd0e      	ble.n	9001dca6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001dc88:	1408      	asrs	r0, r1, #16
9001dc8a:	d405      	bmi.n	9001dc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001dc8c:	42b8      	cmp	r0, r7
9001dc8e:	da03      	bge.n	9001dc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001dc90:	1410      	asrs	r0, r2, #16
9001dc92:	d401      	bmi.n	9001dc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001dc94:	42b0      	cmp	r0, r6
9001dc96:	db07      	blt.n	9001dca8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dc98:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001dc9a:	3b01      	subs	r3, #1
9001dc9c:	3402      	adds	r4, #2
9001dc9e:	4401      	add	r1, r0
9001dca0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dca2:	4402      	add	r2, r0
9001dca4:	e7ee      	b.n	9001dc84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001dca6:	d017      	beq.n	9001dcd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dca8:	1e58      	subs	r0, r3, #1
9001dcaa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001dcac:	fb05 1500 	mla	r5, r5, r0, r1
9001dcb0:	142d      	asrs	r5, r5, #16
9001dcb2:	d409      	bmi.n	9001dcc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001dcb4:	42bd      	cmp	r5, r7
9001dcb6:	da07      	bge.n	9001dcc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001dcb8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001dcba:	fb05 2000 	mla	r0, r5, r0, r2
9001dcbe:	1400      	asrs	r0, r0, #16
9001dcc0:	d402      	bmi.n	9001dcc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001dcc2:	42b0      	cmp	r0, r6
9001dcc4:	f2c0 80ba 	blt.w	9001de3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001dcc8:	2600      	movs	r6, #0
9001dcca:	1998      	adds	r0, r3, r6
9001dccc:	2800      	cmp	r0, #0
9001dcce:	dc3e      	bgt.n	9001dd4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001dcd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001dcd4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001dcd8:	f1bb 0f00 	cmp.w	fp, #0
9001dcdc:	f340 8117 	ble.w	9001df0e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001dce0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001dce4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001dce6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001dcea:	f1bb 0b01 	subs.w	fp, fp, #1
9001dcee:	eeb0 6a62 	vmov.f32	s12, s5
9001dcf2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dcf6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dcfa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dcfe:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001dd02:	eeb0 6a43 	vmov.f32	s12, s6
9001dd06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dd0a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001dd0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001dd12:	ee61 7a27 	vmul.f32	s15, s2, s15
9001dd16:	ee77 2a62 	vsub.f32	s5, s14, s5
9001dd1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001dd1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001dd22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001dd26:	ee12 2a90 	vmov	r2, s5
9001dd2a:	eef0 2a47 	vmov.f32	s5, s14
9001dd2e:	fb92 f3f3 	sdiv	r3, r2, r3
9001dd32:	ee13 2a10 	vmov	r2, s6
9001dd36:	9311      	str	r3, [sp, #68]	@ 0x44
9001dd38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001dd3a:	eeb0 3a67 	vmov.f32	s6, s15
9001dd3e:	fb92 f3f3 	sdiv	r3, r2, r3
9001dd42:	9a03      	ldr	r2, [sp, #12]
9001dd44:	9312      	str	r3, [sp, #72]	@ 0x48
9001dd46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001dd48:	bf08      	it	eq
9001dd4a:	4613      	moveq	r3, r2
9001dd4c:	e789      	b.n	9001dc62 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001dd4e:	140f      	asrs	r7, r1, #16
9001dd50:	d424      	bmi.n	9001dd9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dd52:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001dd56:	42bd      	cmp	r5, r7
9001dd58:	dd20      	ble.n	9001dd9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dd5a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001dd5e:	d41d      	bmi.n	9001dd9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dd60:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001dd64:	4560      	cmp	r0, ip
9001dd66:	dd19      	ble.n	9001dd9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dd68:	b22d      	sxth	r5, r5
9001dd6a:	9801      	ldr	r0, [sp, #4]
9001dd6c:	fb0c 7505 	mla	r5, ip, r5, r7
9001dd70:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001dd74:	0e07      	lsrs	r7, r0, #24
9001dd76:	2fff      	cmp	r7, #255	@ 0xff
9001dd78:	d116      	bne.n	9001dda8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001dd7a:	f06f 0501 	mvn.w	r5, #1
9001dd7e:	fb05 f706 	mul.w	r7, r5, r6
9001dd82:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001dd86:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001dd8a:	0945      	lsrs	r5, r0, #5
9001dd8c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001dd90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001dd94:	ea4c 0505 	orr.w	r5, ip, r5
9001dd98:	4305      	orrs	r5, r0
9001dd9a:	53e5      	strh	r5, [r4, r7]
9001dd9c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001dd9e:	3e01      	subs	r6, #1
9001dda0:	4401      	add	r1, r0
9001dda2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dda4:	4402      	add	r2, r0
9001dda6:	e790      	b.n	9001dcca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001dda8:	b2fd      	uxtb	r5, r7
9001ddaa:	2f00      	cmp	r7, #0
9001ddac:	d0f6      	beq.n	9001dd9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ddae:	f06f 0701 	mvn.w	r7, #1
9001ddb2:	fa1f f985 	uxth.w	r9, r5
9001ddb6:	43ed      	mvns	r5, r5
9001ddb8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001ddbc:	4377      	muls	r7, r6
9001ddbe:	fb1a fa09 	smulbb	sl, sl, r9
9001ddc2:	b2ed      	uxtb	r5, r5
9001ddc4:	f834 e007 	ldrh.w	lr, [r4, r7]
9001ddc8:	9702      	str	r7, [sp, #8]
9001ddca:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001ddce:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ddd2:	fb17 f709 	smulbb	r7, r7, r9
9001ddd6:	b2c0      	uxtb	r0, r0
9001ddd8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dddc:	fb10 f009 	smulbb	r0, r0, r9
9001dde0:	fb0c 7c05 	mla	ip, ip, r5, r7
9001dde4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001dde8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ddec:	fa1f fc8c 	uxth.w	ip, ip
9001ddf0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ddf4:	fa5f fe8e 	uxtb.w	lr, lr
9001ddf8:	fb07 a705 	mla	r7, r7, r5, sl
9001ddfc:	fb0e 0005 	mla	r0, lr, r5, r0
9001de00:	f10c 0501 	add.w	r5, ip, #1
9001de04:	b2bf      	uxth	r7, r7
9001de06:	b280      	uxth	r0, r0
9001de08:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001de0c:	f100 0a01 	add.w	sl, r0, #1
9001de10:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001de14:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001de18:	9802      	ldr	r0, [sp, #8]
9001de1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001de1e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001de22:	f107 0a01 	add.w	sl, r7, #1
9001de26:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001de2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001de2e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001de32:	ea4c 0c0a 	orr.w	ip, ip, sl
9001de36:	f824 c000 	strh.w	ip, [r4, r0]
9001de3a:	e7af      	b.n	9001dd9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001de3c:	f04f 0e00 	mov.w	lr, #0
9001de40:	eba3 000e 	sub.w	r0, r3, lr
9001de44:	2800      	cmp	r0, #0
9001de46:	f77f af43 	ble.w	9001dcd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001de4a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001de4e:	140d      	asrs	r5, r1, #16
9001de50:	1410      	asrs	r0, r2, #16
9001de52:	fb06 5000 	mla	r0, r6, r0, r5
9001de56:	9d01      	ldr	r5, [sp, #4]
9001de58:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001de5c:	0e2e      	lsrs	r6, r5, #24
9001de5e:	2eff      	cmp	r6, #255	@ 0xff
9001de60:	d112      	bne.n	9001de88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001de62:	482c      	ldr	r0, [pc, #176]	@ (9001df14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001de64:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001de68:	0968      	lsrs	r0, r5, #5
9001de6a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001de6e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001de72:	4330      	orrs	r0, r6
9001de74:	4328      	orrs	r0, r5
9001de76:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001de7a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001de7c:	f10e 0e01 	add.w	lr, lr, #1
9001de80:	4401      	add	r1, r0
9001de82:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001de84:	4402      	add	r2, r0
9001de86:	e7db      	b.n	9001de40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001de88:	b2f0      	uxtb	r0, r6
9001de8a:	2e00      	cmp	r6, #0
9001de8c:	d0f5      	beq.n	9001de7a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001de8e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001de92:	fa1f f980 	uxth.w	r9, r0
9001de96:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001de9a:	43c0      	mvns	r0, r0
9001de9c:	ea4f 272c 	mov.w	r7, ip, asr #8
9001dea0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001dea4:	fb16 f609 	smulbb	r6, r6, r9
9001dea8:	b2c0      	uxtb	r0, r0
9001deaa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001deae:	b2ed      	uxtb	r5, r5
9001deb0:	fb1a fa09 	smulbb	sl, sl, r9
9001deb4:	fb07 6700 	mla	r7, r7, r0, r6
9001deb8:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001debc:	fb15 f509 	smulbb	r5, r5, r9
9001dec0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dec4:	b2bf      	uxth	r7, r7
9001dec6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001deca:	fa5f fc8c 	uxtb.w	ip, ip
9001dece:	fb06 a600 	mla	r6, r6, r0, sl
9001ded2:	fb0c 5500 	mla	r5, ip, r0, r5
9001ded6:	1c78      	adds	r0, r7, #1
9001ded8:	b2b6      	uxth	r6, r6
9001deda:	b2ad      	uxth	r5, r5
9001dedc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001dee0:	f105 0a01 	add.w	sl, r5, #1
9001dee4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001dee8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001deec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001def0:	ea4a 0707 	orr.w	r7, sl, r7
9001def4:	f106 0a01 	add.w	sl, r6, #1
9001def8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001defc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001df00:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001df04:	ea47 070a 	orr.w	r7, r7, sl
9001df08:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001df0c:	e7b5      	b.n	9001de7a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001df0e:	b005      	add	sp, #20
9001df10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001df14:	fffff800 	.word	0xfffff800

9001df18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001df18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001df1c:	b087      	sub	sp, #28
9001df1e:	468b      	mov	fp, r1
9001df20:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001df24:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001df26:	9203      	str	r2, [sp, #12]
9001df28:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001df2c:	6841      	ldr	r1, [r0, #4]
9001df2e:	9204      	str	r2, [sp, #16]
9001df30:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001df34:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001df38:	fb01 2404 	mla	r4, r1, r4, r2
9001df3c:	6802      	ldr	r2, [r0, #0]
9001df3e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001df42:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001df46:	3201      	adds	r2, #1
9001df48:	f022 0201 	bic.w	r2, r2, #1
9001df4c:	9200      	str	r2, [sp, #0]
9001df4e:	f8d9 2000 	ldr.w	r2, [r9]
9001df52:	9201      	str	r2, [sp, #4]
9001df54:	f1bb 0f00 	cmp.w	fp, #0
9001df58:	dc03      	bgt.n	9001df62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001df5a:	9a03      	ldr	r2, [sp, #12]
9001df5c:	2a00      	cmp	r2, #0
9001df5e:	f340 816a 	ble.w	9001e236 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001df62:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001df64:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001df68:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001df6c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001df6e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001df72:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001df76:	2b00      	cmp	r3, #0
9001df78:	dd0e      	ble.n	9001df98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001df7a:	1402      	asrs	r2, r0, #16
9001df7c:	d405      	bmi.n	9001df8a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001df7e:	42ba      	cmp	r2, r7
9001df80:	da03      	bge.n	9001df8a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001df82:	140a      	asrs	r2, r1, #16
9001df84:	d401      	bmi.n	9001df8a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001df86:	42b2      	cmp	r2, r6
9001df88:	db07      	blt.n	9001df9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001df8a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001df8c:	3b01      	subs	r3, #1
9001df8e:	3402      	adds	r4, #2
9001df90:	4410      	add	r0, r2
9001df92:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001df94:	4411      	add	r1, r2
9001df96:	e7ee      	b.n	9001df76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001df98:	d017      	beq.n	9001dfca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001df9a:	1e5a      	subs	r2, r3, #1
9001df9c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001df9e:	fb05 0502 	mla	r5, r5, r2, r0
9001dfa2:	142d      	asrs	r5, r5, #16
9001dfa4:	d409      	bmi.n	9001dfba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001dfa6:	42bd      	cmp	r5, r7
9001dfa8:	da07      	bge.n	9001dfba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001dfaa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001dfac:	fb05 1202 	mla	r2, r5, r2, r1
9001dfb0:	1412      	asrs	r2, r2, #16
9001dfb2:	d402      	bmi.n	9001dfba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001dfb4:	42b2      	cmp	r2, r6
9001dfb6:	f2c0 80c8 	blt.w	9001e14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001dfba:	2700      	movs	r7, #0
9001dfbc:	19da      	adds	r2, r3, r7
9001dfbe:	2a00      	cmp	r2, #0
9001dfc0:	dc3e      	bgt.n	9001e040 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001dfc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001dfc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001dfca:	f1bb 0f00 	cmp.w	fp, #0
9001dfce:	f340 8132 	ble.w	9001e236 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001dfd2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001dfd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dfd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001dfdc:	f1bb 0b01 	subs.w	fp, fp, #1
9001dfe0:	eeb0 6a62 	vmov.f32	s12, s5
9001dfe4:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dfe8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dfec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dff0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001dff4:	eeb0 6a43 	vmov.f32	s12, s6
9001dff8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dffc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001e000:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e004:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e008:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e00c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e010:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e014:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e018:	ee12 2a90 	vmov	r2, s5
9001e01c:	eef0 2a47 	vmov.f32	s5, s14
9001e020:	fb92 f3f3 	sdiv	r3, r2, r3
9001e024:	ee13 2a10 	vmov	r2, s6
9001e028:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e02a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e02c:	eeb0 3a67 	vmov.f32	s6, s15
9001e030:	fb92 f3f3 	sdiv	r3, r2, r3
9001e034:	9a03      	ldr	r2, [sp, #12]
9001e036:	9314      	str	r3, [sp, #80]	@ 0x50
9001e038:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e03a:	bf08      	it	eq
9001e03c:	4613      	moveq	r3, r2
9001e03e:	e789      	b.n	9001df54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001e040:	1405      	asrs	r5, r0, #16
9001e042:	d436      	bmi.n	9001e0b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e044:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001e048:	42aa      	cmp	r2, r5
9001e04a:	dd32      	ble.n	9001e0b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e04c:	140e      	asrs	r6, r1, #16
9001e04e:	d430      	bmi.n	9001e0b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e050:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001e054:	42b2      	cmp	r2, r6
9001e056:	dd2c      	ble.n	9001e0b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e058:	9a00      	ldr	r2, [sp, #0]
9001e05a:	fb06 5502 	mla	r5, r6, r2, r5
9001e05e:	9e01      	ldr	r6, [sp, #4]
9001e060:	086a      	lsrs	r2, r5, #1
9001e062:	5cb2      	ldrb	r2, [r6, r2]
9001e064:	07ee      	lsls	r6, r5, #31
9001e066:	bf54      	ite	pl
9001e068:	f002 020f 	andpl.w	r2, r2, #15
9001e06c:	1112      	asrmi	r2, r2, #4
9001e06e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e072:	b2d2      	uxtb	r2, r2
9001e074:	b1ea      	cbz	r2, 9001e0b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e076:	9d04      	ldr	r5, [sp, #16]
9001e078:	436a      	muls	r2, r5
9001e07a:	1c55      	adds	r5, r2, #1
9001e07c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001e080:	4d6e      	ldr	r5, [pc, #440]	@ (9001e23c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001e082:	1212      	asrs	r2, r2, #8
9001e084:	682d      	ldr	r5, [r5, #0]
9001e086:	2aff      	cmp	r2, #255	@ 0xff
9001e088:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001e08c:	9605      	str	r6, [sp, #20]
9001e08e:	d116      	bne.n	9001e0be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001e090:	f06f 0201 	mvn.w	r2, #1
9001e094:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e098:	fb02 fc07 	mul.w	ip, r2, r7
9001e09c:	096a      	lsrs	r2, r5, #5
9001e09e:	f026 0607 	bic.w	r6, r6, #7
9001e0a2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001e0a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e0aa:	4316      	orrs	r6, r2
9001e0ac:	432e      	orrs	r6, r5
9001e0ae:	f824 600c 	strh.w	r6, [r4, ip]
9001e0b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e0b4:	3f01      	subs	r7, #1
9001e0b6:	4410      	add	r0, r2
9001e0b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e0ba:	4411      	add	r1, r2
9001e0bc:	e77e      	b.n	9001dfbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001e0be:	f06f 0601 	mvn.w	r6, #1
9001e0c2:	fa1f fa82 	uxth.w	sl, r2
9001e0c6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001e0ca:	43d2      	mvns	r2, r2
9001e0cc:	437e      	muls	r6, r7
9001e0ce:	b2ed      	uxtb	r5, r5
9001e0d0:	fb1c fc0a 	smulbb	ip, ip, sl
9001e0d4:	b2d2      	uxtb	r2, r2
9001e0d6:	f834 8006 	ldrh.w	r8, [r4, r6]
9001e0da:	fb15 f50a 	smulbb	r5, r5, sl
9001e0de:	9602      	str	r6, [sp, #8]
9001e0e0:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001e0e4:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001e0e8:	fb16 f60a 	smulbb	r6, r6, sl
9001e0ec:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e0f0:	fb0e ce02 	mla	lr, lr, r2, ip
9001e0f4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001e0f8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001e0fc:	fa1f fe8e 	uxth.w	lr, lr
9001e100:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e104:	fa5f f888 	uxtb.w	r8, r8
9001e108:	fb0c 6c02 	mla	ip, ip, r2, r6
9001e10c:	fb08 5502 	mla	r5, r8, r2, r5
9001e110:	f10e 0201 	add.w	r2, lr, #1
9001e114:	fa1f fc8c 	uxth.w	ip, ip
9001e118:	b2ad      	uxth	r5, r5
9001e11a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001e11e:	9a02      	ldr	r2, [sp, #8]
9001e120:	1c6e      	adds	r6, r5, #1
9001e122:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001e126:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001e12a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e12e:	ea46 0e0e 	orr.w	lr, r6, lr
9001e132:	f10c 0601 	add.w	r6, ip, #1
9001e136:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001e13a:	0976      	lsrs	r6, r6, #5
9001e13c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e140:	ea4e 0e06 	orr.w	lr, lr, r6
9001e144:	f824 e002 	strh.w	lr, [r4, r2]
9001e148:	e7b3      	b.n	9001e0b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e14a:	f04f 0800 	mov.w	r8, #0
9001e14e:	eba3 0208 	sub.w	r2, r3, r8
9001e152:	2a00      	cmp	r2, #0
9001e154:	f77f af35 	ble.w	9001dfc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001e158:	1402      	asrs	r2, r0, #16
9001e15a:	9e00      	ldr	r6, [sp, #0]
9001e15c:	140d      	asrs	r5, r1, #16
9001e15e:	fb06 2505 	mla	r5, r6, r5, r2
9001e162:	9e01      	ldr	r6, [sp, #4]
9001e164:	086a      	lsrs	r2, r5, #1
9001e166:	07ed      	lsls	r5, r5, #31
9001e168:	5cb2      	ldrb	r2, [r6, r2]
9001e16a:	bf54      	ite	pl
9001e16c:	f002 020f 	andpl.w	r2, r2, #15
9001e170:	1112      	asrmi	r2, r2, #4
9001e172:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e176:	b2d2      	uxtb	r2, r2
9001e178:	b1c2      	cbz	r2, 9001e1ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e17a:	9d04      	ldr	r5, [sp, #16]
9001e17c:	436a      	muls	r2, r5
9001e17e:	1c55      	adds	r5, r2, #1
9001e180:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001e184:	4d2d      	ldr	r5, [pc, #180]	@ (9001e23c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001e186:	1212      	asrs	r2, r2, #8
9001e188:	682e      	ldr	r6, [r5, #0]
9001e18a:	2aff      	cmp	r2, #255	@ 0xff
9001e18c:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001e190:	d113      	bne.n	9001e1ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001e192:	0972      	lsrs	r2, r6, #5
9001e194:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001e198:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001e19c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e1a0:	f025 0507 	bic.w	r5, r5, #7
9001e1a4:	4315      	orrs	r5, r2
9001e1a6:	4335      	orrs	r5, r6
9001e1a8:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001e1ac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e1ae:	f108 0801 	add.w	r8, r8, #1
9001e1b2:	4410      	add	r0, r2
9001e1b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e1b6:	4411      	add	r1, r2
9001e1b8:	e7c9      	b.n	9001e14e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001e1ba:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001e1be:	fa1f fa82 	uxth.w	sl, r2
9001e1c2:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001e1c6:	43d2      	mvns	r2, r2
9001e1c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e1cc:	fb17 f70a 	smulbb	r7, r7, sl
9001e1d0:	b2d2      	uxtb	r2, r2
9001e1d2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e1d6:	b2f6      	uxtb	r6, r6
9001e1d8:	b2ed      	uxtb	r5, r5
9001e1da:	fb0c 7c02 	mla	ip, ip, r2, r7
9001e1de:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001e1e2:	fb16 f60a 	smulbb	r6, r6, sl
9001e1e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e1ea:	fa1f fc8c 	uxth.w	ip, ip
9001e1ee:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e1f2:	fb15 f50a 	smulbb	r5, r5, sl
9001e1f6:	fa5f fe8e 	uxtb.w	lr, lr
9001e1fa:	fb0e 6602 	mla	r6, lr, r2, r6
9001e1fe:	fb07 5702 	mla	r7, r7, r2, r5
9001e202:	f10c 0201 	add.w	r2, ip, #1
9001e206:	b2b6      	uxth	r6, r6
9001e208:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e20c:	1c75      	adds	r5, r6, #1
9001e20e:	b2bf      	uxth	r7, r7
9001e210:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e214:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001e218:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e21c:	ea45 0c0c 	orr.w	ip, r5, ip
9001e220:	1c7d      	adds	r5, r7, #1
9001e222:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001e226:	096d      	lsrs	r5, r5, #5
9001e228:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e22c:	ea4c 0c05 	orr.w	ip, ip, r5
9001e230:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001e234:	e7ba      	b.n	9001e1ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e236:	b007      	add	sp, #28
9001e238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e23c:	2402341c 	.word	0x2402341c

9001e240 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e244:	b087      	sub	sp, #28
9001e246:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e24a:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001e554 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001e24e:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001e250:	9101      	str	r1, [sp, #4]
9001e252:	9205      	str	r2, [sp, #20]
9001e254:	6841      	ldr	r1, [r0, #4]
9001e256:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001e25a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001e25e:	fb01 2404 	mla	r4, r1, r4, r2
9001e262:	6802      	ldr	r2, [r0, #0]
9001e264:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e268:	f8db 2008 	ldr.w	r2, [fp, #8]
9001e26c:	3201      	adds	r2, #1
9001e26e:	f022 0201 	bic.w	r2, r2, #1
9001e272:	9202      	str	r2, [sp, #8]
9001e274:	f8db 2000 	ldr.w	r2, [fp]
9001e278:	9203      	str	r2, [sp, #12]
9001e27a:	9a01      	ldr	r2, [sp, #4]
9001e27c:	2a00      	cmp	r2, #0
9001e27e:	dc03      	bgt.n	9001e288 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001e280:	9a05      	ldr	r2, [sp, #20]
9001e282:	2a00      	cmp	r2, #0
9001e284:	f340 8162 	ble.w	9001e54c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001e288:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e28a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001e28e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e292:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e294:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001e298:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e29c:	2b00      	cmp	r3, #0
9001e29e:	dd0e      	ble.n	9001e2be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e2a0:	1402      	asrs	r2, r0, #16
9001e2a2:	d405      	bmi.n	9001e2b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e2a4:	42ba      	cmp	r2, r7
9001e2a6:	da03      	bge.n	9001e2b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e2a8:	140a      	asrs	r2, r1, #16
9001e2aa:	d401      	bmi.n	9001e2b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e2ac:	42b2      	cmp	r2, r6
9001e2ae:	db07      	blt.n	9001e2c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001e2b0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e2b2:	3b01      	subs	r3, #1
9001e2b4:	3402      	adds	r4, #2
9001e2b6:	4410      	add	r0, r2
9001e2b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e2ba:	4411      	add	r1, r2
9001e2bc:	e7ee      	b.n	9001e29c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001e2be:	d017      	beq.n	9001e2f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001e2c0:	1e5a      	subs	r2, r3, #1
9001e2c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001e2c4:	fb05 0502 	mla	r5, r5, r2, r0
9001e2c8:	142d      	asrs	r5, r5, #16
9001e2ca:	d409      	bmi.n	9001e2e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e2cc:	42bd      	cmp	r5, r7
9001e2ce:	da07      	bge.n	9001e2e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e2d0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001e2d2:	fb05 1202 	mla	r2, r5, r2, r1
9001e2d6:	1412      	asrs	r2, r2, #16
9001e2d8:	d402      	bmi.n	9001e2e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e2da:	42b2      	cmp	r2, r6
9001e2dc:	f2c0 80c3 	blt.w	9001e466 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001e2e0:	2500      	movs	r5, #0
9001e2e2:	195a      	adds	r2, r3, r5
9001e2e4:	2a00      	cmp	r2, #0
9001e2e6:	dc3f      	bgt.n	9001e368 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001e2e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e2ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e2f0:	9b01      	ldr	r3, [sp, #4]
9001e2f2:	2b00      	cmp	r3, #0
9001e2f4:	f340 812a 	ble.w	9001e54c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001e2f8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e2fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e2fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e302:	eeb0 6a62 	vmov.f32	s12, s5
9001e306:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e30a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e30e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e312:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001e316:	eeb0 6a43 	vmov.f32	s12, s6
9001e31a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e31e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001e322:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e326:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e32a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e32e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e332:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e336:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e33a:	ee12 2a90 	vmov	r2, s5
9001e33e:	eef0 2a47 	vmov.f32	s5, s14
9001e342:	fb92 f3f3 	sdiv	r3, r2, r3
9001e346:	ee13 2a10 	vmov	r2, s6
9001e34a:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e34c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e34e:	eeb0 3a67 	vmov.f32	s6, s15
9001e352:	fb92 f3f3 	sdiv	r3, r2, r3
9001e356:	9314      	str	r3, [sp, #80]	@ 0x50
9001e358:	9b01      	ldr	r3, [sp, #4]
9001e35a:	9a05      	ldr	r2, [sp, #20]
9001e35c:	3b01      	subs	r3, #1
9001e35e:	9301      	str	r3, [sp, #4]
9001e360:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e362:	bf08      	it	eq
9001e364:	4613      	moveq	r3, r2
9001e366:	e788      	b.n	9001e27a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001e368:	1406      	asrs	r6, r0, #16
9001e36a:	d42c      	bmi.n	9001e3c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e36c:	f8db 2008 	ldr.w	r2, [fp, #8]
9001e370:	42b2      	cmp	r2, r6
9001e372:	dd28      	ble.n	9001e3c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e374:	140f      	asrs	r7, r1, #16
9001e376:	d426      	bmi.n	9001e3c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e378:	f8db 200c 	ldr.w	r2, [fp, #12]
9001e37c:	42ba      	cmp	r2, r7
9001e37e:	dd22      	ble.n	9001e3c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e380:	9a02      	ldr	r2, [sp, #8]
9001e382:	fb07 6602 	mla	r6, r7, r2, r6
9001e386:	9f03      	ldr	r7, [sp, #12]
9001e388:	0872      	lsrs	r2, r6, #1
9001e38a:	07f6      	lsls	r6, r6, #31
9001e38c:	5cba      	ldrb	r2, [r7, r2]
9001e38e:	bf54      	ite	pl
9001e390:	f002 020f 	andpl.w	r2, r2, #15
9001e394:	1112      	asrmi	r2, r2, #4
9001e396:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e39a:	b2d2      	uxtb	r2, r2
9001e39c:	2aff      	cmp	r2, #255	@ 0xff
9001e39e:	d118      	bne.n	9001e3d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001e3a0:	f06f 0601 	mvn.w	r6, #1
9001e3a4:	f8d8 2000 	ldr.w	r2, [r8]
9001e3a8:	fb06 f705 	mul.w	r7, r6, r5
9001e3ac:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001e3b0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001e3b4:	0956      	lsrs	r6, r2, #5
9001e3b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e3ba:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e3be:	ea4c 0606 	orr.w	r6, ip, r6
9001e3c2:	4316      	orrs	r6, r2
9001e3c4:	53e6      	strh	r6, [r4, r7]
9001e3c6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e3c8:	3d01      	subs	r5, #1
9001e3ca:	4410      	add	r0, r2
9001e3cc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e3ce:	4411      	add	r1, r2
9001e3d0:	e787      	b.n	9001e2e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001e3d2:	2a00      	cmp	r2, #0
9001e3d4:	d0f7      	beq.n	9001e3c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e3d6:	f06f 0601 	mvn.w	r6, #1
9001e3da:	f8d8 c000 	ldr.w	ip, [r8]
9001e3de:	fa1f f982 	uxth.w	r9, r2
9001e3e2:	43d2      	mvns	r2, r2
9001e3e4:	436e      	muls	r6, r5
9001e3e6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001e3ea:	b2d2      	uxtb	r2, r2
9001e3ec:	f834 e006 	ldrh.w	lr, [r4, r6]
9001e3f0:	fb1a fa09 	smulbb	sl, sl, r9
9001e3f4:	9604      	str	r6, [sp, #16]
9001e3f6:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001e3fa:	ea4f 272e 	mov.w	r7, lr, asr #8
9001e3fe:	fb16 f609 	smulbb	r6, r6, r9
9001e402:	fa5f fc8c 	uxtb.w	ip, ip
9001e406:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e40a:	fb1c fc09 	smulbb	ip, ip, r9
9001e40e:	fb07 6702 	mla	r7, r7, r2, r6
9001e412:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e416:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e41a:	b2bf      	uxth	r7, r7
9001e41c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e420:	fa5f fe8e 	uxtb.w	lr, lr
9001e424:	fb06 a602 	mla	r6, r6, r2, sl
9001e428:	fb0e cc02 	mla	ip, lr, r2, ip
9001e42c:	1c7a      	adds	r2, r7, #1
9001e42e:	b2b6      	uxth	r6, r6
9001e430:	fa1f fc8c 	uxth.w	ip, ip
9001e434:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001e438:	9a04      	ldr	r2, [sp, #16]
9001e43a:	f10c 0a01 	add.w	sl, ip, #1
9001e43e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e442:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001e446:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e44a:	ea4a 0707 	orr.w	r7, sl, r7
9001e44e:	f106 0a01 	add.w	sl, r6, #1
9001e452:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e456:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e45a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e45e:	ea47 070a 	orr.w	r7, r7, sl
9001e462:	52a7      	strh	r7, [r4, r2]
9001e464:	e7af      	b.n	9001e3c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e466:	f04f 0e00 	mov.w	lr, #0
9001e46a:	eba3 020e 	sub.w	r2, r3, lr
9001e46e:	2a00      	cmp	r2, #0
9001e470:	f77f af3a 	ble.w	9001e2e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001e474:	1402      	asrs	r2, r0, #16
9001e476:	9e02      	ldr	r6, [sp, #8]
9001e478:	140d      	asrs	r5, r1, #16
9001e47a:	fb06 2505 	mla	r5, r6, r5, r2
9001e47e:	9e03      	ldr	r6, [sp, #12]
9001e480:	086a      	lsrs	r2, r5, #1
9001e482:	07ed      	lsls	r5, r5, #31
9001e484:	5cb2      	ldrb	r2, [r6, r2]
9001e486:	bf54      	ite	pl
9001e488:	f002 020f 	andpl.w	r2, r2, #15
9001e48c:	1112      	asrmi	r2, r2, #4
9001e48e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e492:	b2d2      	uxtb	r2, r2
9001e494:	2aff      	cmp	r2, #255	@ 0xff
9001e496:	d115      	bne.n	9001e4c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001e498:	f8d8 5000 	ldr.w	r5, [r8]
9001e49c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001e4a0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001e4a4:	096a      	lsrs	r2, r5, #5
9001e4a6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001e4aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e4ae:	4332      	orrs	r2, r6
9001e4b0:	432a      	orrs	r2, r5
9001e4b2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001e4b6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e4b8:	f10e 0e01 	add.w	lr, lr, #1
9001e4bc:	4410      	add	r0, r2
9001e4be:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e4c0:	4411      	add	r1, r2
9001e4c2:	e7d2      	b.n	9001e46a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e4c4:	2a00      	cmp	r2, #0
9001e4c6:	d0f6      	beq.n	9001e4b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001e4c8:	f8d8 7000 	ldr.w	r7, [r8]
9001e4cc:	fa1f f982 	uxth.w	r9, r2
9001e4d0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001e4d4:	43d2      	mvns	r2, r2
9001e4d6:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001e4da:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001e4de:	ea4f 262c 	mov.w	r6, ip, asr #8
9001e4e2:	fb15 f509 	smulbb	r5, r5, r9
9001e4e6:	b2d2      	uxtb	r2, r2
9001e4e8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e4ec:	b2ff      	uxtb	r7, r7
9001e4ee:	fb1a fa09 	smulbb	sl, sl, r9
9001e4f2:	fb06 5602 	mla	r6, r6, r2, r5
9001e4f6:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001e4fa:	fb17 f709 	smulbb	r7, r7, r9
9001e4fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e502:	b2b6      	uxth	r6, r6
9001e504:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e508:	fa5f fc8c 	uxtb.w	ip, ip
9001e50c:	fb05 a502 	mla	r5, r5, r2, sl
9001e510:	fb0c 7702 	mla	r7, ip, r2, r7
9001e514:	1c72      	adds	r2, r6, #1
9001e516:	b2ad      	uxth	r5, r5
9001e518:	b2bf      	uxth	r7, r7
9001e51a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001e51e:	f107 0a01 	add.w	sl, r7, #1
9001e522:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e526:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001e52a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e52e:	ea4a 0606 	orr.w	r6, sl, r6
9001e532:	f105 0a01 	add.w	sl, r5, #1
9001e536:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e53a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e53e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e542:	ea46 060a 	orr.w	r6, r6, sl
9001e546:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001e54a:	e7b4      	b.n	9001e4b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001e54c:	b007      	add	sp, #28
9001e54e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e552:	bf00      	nop
9001e554:	2402341c 	.word	0x2402341c

9001e558 <_ZN8touchgfx8LCD16bppD1Ev>:
9001e558:	4770      	bx	lr

9001e55a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001e55a:	4770      	bx	lr

9001e55c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001e55c:	4770      	bx	lr

9001e55e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001e55e:	4770      	bx	lr

9001e560 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001e560:	4770      	bx	lr

9001e562 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001e562:	4770      	bx	lr

9001e564 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001e564:	4770      	bx	lr

9001e566 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001e566:	4770      	bx	lr

9001e568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e568:	4770      	bx	lr

9001e56a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e56a:	4770      	bx	lr

9001e56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e56c:	4770      	bx	lr

9001e56e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e56e:	4770      	bx	lr

9001e570 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e570:	4770      	bx	lr

9001e572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001e572:	4770      	bx	lr

9001e574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e574:	4770      	bx	lr

9001e576 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e576:	4770      	bx	lr

9001e578 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e578:	4770      	bx	lr

9001e57a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001e57a:	4770      	bx	lr

9001e57c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e57c:	4770      	bx	lr

9001e57e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e57e:	4770      	bx	lr

9001e580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e580:	4770      	bx	lr

9001e582 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e582:	4770      	bx	lr

9001e584 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e584:	4770      	bx	lr

9001e586 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e586:	4770      	bx	lr

9001e588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e588:	4770      	bx	lr

9001e58a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001e58a:	4770      	bx	lr

9001e58c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e58c:	4770      	bx	lr

9001e58e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001e58e:	4770      	bx	lr

9001e590 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e590:	4770      	bx	lr

9001e592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001e592:	4770      	bx	lr

9001e594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e594:	4770      	bx	lr

9001e596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001e596:	4770      	bx	lr

9001e598 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001e598:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e59c:	b088      	sub	sp, #32
9001e59e:	4606      	mov	r6, r0
9001e5a0:	4688      	mov	r8, r1
9001e5a2:	4691      	mov	r9, r2
9001e5a4:	ac08      	add	r4, sp, #32
9001e5a6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001e5aa:	4620      	mov	r0, r4
9001e5ac:	f7fd fc64 	bl	9001be78 <_ZNK8touchgfx6Bitmap7getDataEv>
9001e5b0:	6833      	ldr	r3, [r6, #0]
9001e5b2:	4605      	mov	r5, r0
9001e5b4:	4620      	mov	r0, r4
9001e5b6:	699f      	ldr	r7, [r3, #24]
9001e5b8:	f7fd fb72 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001e5bc:	4682      	mov	sl, r0
9001e5be:	4620      	mov	r0, r4
9001e5c0:	f7fd fba2 	bl	9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001e5c4:	9500      	str	r5, [sp, #0]
9001e5c6:	464b      	mov	r3, r9
9001e5c8:	4642      	mov	r2, r8
9001e5ca:	4631      	mov	r1, r6
9001e5cc:	e9cd a001 	strd	sl, r0, [sp, #4]
9001e5d0:	a806      	add	r0, sp, #24
9001e5d2:	47b8      	blx	r7
9001e5d4:	4628      	mov	r0, r5
9001e5d6:	b008      	add	sp, #32
9001e5d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001e5dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001e5dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001e5e0:	2300      	movs	r3, #0
9001e5e2:	9300      	str	r3, [sp, #0]
9001e5e4:	4b3d      	ldr	r3, [pc, #244]	@ (9001e6dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001e5e6:	781b      	ldrb	r3, [r3, #0]
9001e5e8:	2b00      	cmp	r3, #0
9001e5ea:	d137      	bne.n	9001e65c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001e5ec:	4a3c      	ldr	r2, [pc, #240]	@ (9001e6e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e5ee:	f9b2 2000 	ldrsh.w	r2, [r2]
9001e5f2:	f8ad 2004 	strh.w	r2, [sp, #4]
9001e5f6:	2b00      	cmp	r3, #0
9001e5f8:	d132      	bne.n	9001e660 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001e5fa:	4b3a      	ldr	r3, [pc, #232]	@ (9001e6e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e5fc:	f9b3 3000 	ldrsh.w	r3, [r3]
9001e600:	ac02      	add	r4, sp, #8
9001e602:	6808      	ldr	r0, [r1, #0]
9001e604:	f8ad 3006 	strh.w	r3, [sp, #6]
9001e608:	ab02      	add	r3, sp, #8
9001e60a:	6849      	ldr	r1, [r1, #4]
9001e60c:	4d36      	ldr	r5, [pc, #216]	@ (9001e6e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001e60e:	c303      	stmia	r3!, {r0, r1}
9001e610:	4669      	mov	r1, sp
9001e612:	4620      	mov	r0, r4
9001e614:	f7f9 fdaa 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e618:	4668      	mov	r0, sp
9001e61a:	f7f9 fd7f 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e61e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001e622:	f8bd 2000 	ldrh.w	r2, [sp]
9001e626:	462f      	mov	r7, r5
9001e628:	6828      	ldr	r0, [r5, #0]
9001e62a:	4413      	add	r3, r2
9001e62c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e630:	f8ad 3008 	strh.w	r3, [sp, #8]
9001e634:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001e638:	4413      	add	r3, r2
9001e63a:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e63e:	6803      	ldr	r3, [r0, #0]
9001e640:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e642:	4798      	blx	r3
9001e644:	f010 0f01 	tst.w	r0, #1
9001e648:	d00c      	beq.n	9001e664 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001e64a:	6828      	ldr	r0, [r5, #0]
9001e64c:	6803      	ldr	r3, [r0, #0]
9001e64e:	e894 0006 	ldmia.w	r4, {r1, r2}
9001e652:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001e654:	4798      	blx	r3
9001e656:	b004      	add	sp, #16
9001e658:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e65c:	4a21      	ldr	r2, [pc, #132]	@ (9001e6e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e65e:	e7c6      	b.n	9001e5ee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001e660:	4b1f      	ldr	r3, [pc, #124]	@ (9001e6e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e662:	e7cb      	b.n	9001e5fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001e664:	6838      	ldr	r0, [r7, #0]
9001e666:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001e66a:	6803      	ldr	r3, [r0, #0]
9001e66c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001e670:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001e674:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e676:	4798      	blx	r3
9001e678:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001e67c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e680:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001e684:	fb16 3602 	smlabb	r6, r6, r2, r3
9001e688:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e68c:	6838      	ldr	r0, [r7, #0]
9001e68e:	6803      	ldr	r3, [r0, #0]
9001e690:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e692:	4798      	blx	r3
9001e694:	4a12      	ldr	r2, [pc, #72]	@ (9001e6e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e696:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001e69a:	8813      	ldrh	r3, [r2, #0]
9001e69c:	4691      	mov	r9, r2
9001e69e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e6a2:	435d      	muls	r5, r3
9001e6a4:	fb03 1404 	mla	r4, r3, r4, r1
9001e6a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e6ac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e6b0:	6838      	ldr	r0, [r7, #0]
9001e6b2:	42ac      	cmp	r4, r5
9001e6b4:	6803      	ldr	r3, [r0, #0]
9001e6b6:	d20e      	bcs.n	9001e6d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001e6b8:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001e6bc:	4632      	mov	r2, r6
9001e6be:	4643      	mov	r3, r8
9001e6c0:	4621      	mov	r1, r4
9001e6c2:	47d0      	blx	sl
9001e6c4:	f8b9 3000 	ldrh.w	r3, [r9]
9001e6c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e6cc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001e6d0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e6d4:	e7ec      	b.n	9001e6b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001e6d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e6d8:	4798      	blx	r3
9001e6da:	e7bc      	b.n	9001e656 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001e6dc:	24023404 	.word	0x24023404
9001e6e0:	24023406 	.word	0x24023406
9001e6e4:	24023408 	.word	0x24023408
9001e6e8:	2402340c 	.word	0x2402340c

9001e6ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001e6ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6f0:	b08b      	sub	sp, #44	@ 0x2c
9001e6f2:	460f      	mov	r7, r1
9001e6f4:	4616      	mov	r6, r2
9001e6f6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001e6fa:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001e6fe:	f1bb 0f00 	cmp.w	fp, #0
9001e702:	d04a      	beq.n	9001e79a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e704:	6810      	ldr	r0, [r2, #0]
9001e706:	ad06      	add	r5, sp, #24
9001e708:	6851      	ldr	r1, [r2, #4]
9001e70a:	c503      	stmia	r5!, {r0, r1}
9001e70c:	6818      	ldr	r0, [r3, #0]
9001e70e:	ad08      	add	r5, sp, #32
9001e710:	6859      	ldr	r1, [r3, #4]
9001e712:	c503      	stmia	r5!, {r0, r1}
9001e714:	a806      	add	r0, sp, #24
9001e716:	f7f9 fd01 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e71a:	4631      	mov	r1, r6
9001e71c:	a808      	add	r0, sp, #32
9001e71e:	f7f9 fd25 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e722:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001e726:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001e72a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001e72e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001e732:	fb16 2103 	smlabb	r1, r6, r3, r2
9001e736:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001e73a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001e73e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001e742:	4f5f      	ldr	r7, [pc, #380]	@ (9001e8c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e744:	440a      	add	r2, r1
9001e746:	6838      	ldr	r0, [r7, #0]
9001e748:	46b9      	mov	r9, r7
9001e74a:	f8ad 2020 	strh.w	r2, [sp, #32]
9001e74e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001e752:	4413      	add	r3, r2
9001e754:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001e758:	6803      	ldr	r3, [r0, #0]
9001e75a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e75c:	4798      	blx	r3
9001e75e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001e762:	d11d      	bne.n	9001e7a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001e764:	b9fc      	cbnz	r4, 9001e7a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e766:	f010 0f01 	tst.w	r0, #1
9001e76a:	d01c      	beq.n	9001e7a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e76c:	f8d9 0000 	ldr.w	r0, [r9]
9001e770:	2700      	movs	r7, #0
9001e772:	b2ad      	uxth	r5, r5
9001e774:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001e778:	6801      	ldr	r1, [r0, #0]
9001e77a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001e77e:	f8cd b00c 	str.w	fp, [sp, #12]
9001e782:	9501      	str	r5, [sp, #4]
9001e784:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001e788:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001e78c:	9402      	str	r4, [sp, #8]
9001e78e:	fa1f f488 	uxth.w	r4, r8
9001e792:	9400      	str	r4, [sp, #0]
9001e794:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001e796:	4631      	mov	r1, r6
9001e798:	47a0      	blx	r4
9001e79a:	b00b      	add	sp, #44	@ 0x2c
9001e79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e7a0:	f010 0f04 	tst.w	r0, #4
9001e7a4:	e7e1      	b.n	9001e76a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001e7a6:	f8d9 0000 	ldr.w	r0, [r9]
9001e7aa:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001e7ae:	6803      	ldr	r3, [r0, #0]
9001e7b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e7b2:	4798      	blx	r3
9001e7b4:	4b43      	ldr	r3, [pc, #268]	@ (9001e8c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001e7b6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001e7ba:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001e7be:	881a      	ldrh	r2, [r3, #0]
9001e7c0:	469a      	mov	sl, r3
9001e7c2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001e7c6:	fb05 f502 	mul.w	r5, r5, r2
9001e7ca:	fb02 1404 	mla	r4, r2, r4, r1
9001e7ce:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e7d2:	d059      	beq.n	9001e888 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001e7d4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001e7d8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e7dc:	fa1f f28b 	uxth.w	r2, fp
9001e7e0:	469e      	mov	lr, r3
9001e7e2:	fa1f f989 	uxth.w	r9, r9
9001e7e6:	42ac      	cmp	r4, r5
9001e7e8:	d264      	bcs.n	9001e8b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e7ea:	eb04 0a07 	add.w	sl, r4, r7
9001e7ee:	4554      	cmp	r4, sl
9001e7f0:	d23d      	bcs.n	9001e86e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001e7f2:	8821      	ldrh	r1, [r4, #0]
9001e7f4:	f836 3b02 	ldrh.w	r3, [r6], #2
9001e7f8:	1208      	asrs	r0, r1, #8
9001e7fa:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e7fe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001e802:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001e806:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e80a:	00c9      	lsls	r1, r1, #3
9001e80c:	fb10 f009 	smulbb	r0, r0, r9
9001e810:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001e814:	b2c9      	uxtb	r1, r1
9001e816:	fb0c 0c02 	mla	ip, ip, r2, r0
9001e81a:	10d8      	asrs	r0, r3, #3
9001e81c:	fb1b fb09 	smulbb	fp, fp, r9
9001e820:	00db      	lsls	r3, r3, #3
9001e822:	fa1f fc8c 	uxth.w	ip, ip
9001e826:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001e82a:	fb11 f109 	smulbb	r1, r1, r9
9001e82e:	b2db      	uxtb	r3, r3
9001e830:	fb00 b002 	mla	r0, r0, r2, fp
9001e834:	f10c 0b01 	add.w	fp, ip, #1
9001e838:	fb03 1302 	mla	r3, r3, r2, r1
9001e83c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001e840:	b29b      	uxth	r3, r3
9001e842:	b280      	uxth	r0, r0
9001e844:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001e848:	f103 0c01 	add.w	ip, r3, #1
9001e84c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e850:	1c43      	adds	r3, r0, #1
9001e852:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001e856:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e85a:	0940      	lsrs	r0, r0, #5
9001e85c:	ea4c 0c0b 	orr.w	ip, ip, fp
9001e860:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001e864:	ea4c 0c00 	orr.w	ip, ip, r0
9001e868:	f824 cb02 	strh.w	ip, [r4], #2
9001e86c:	e7bf      	b.n	9001e7ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001e86e:	f8be 3000 	ldrh.w	r3, [lr]
9001e872:	eba3 0308 	sub.w	r3, r3, r8
9001e876:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e87a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e87e:	eba3 0308 	sub.w	r3, r3, r8
9001e882:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e886:	e7ae      	b.n	9001e7e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001e888:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e88c:	f8d9 0000 	ldr.w	r0, [r9]
9001e890:	42ac      	cmp	r4, r5
9001e892:	6803      	ldr	r3, [r0, #0]
9001e894:	d20e      	bcs.n	9001e8b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e896:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001e89a:	4632      	mov	r2, r6
9001e89c:	463b      	mov	r3, r7
9001e89e:	4621      	mov	r1, r4
9001e8a0:	47c0      	blx	r8
9001e8a2:	f8ba 3000 	ldrh.w	r3, [sl]
9001e8a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e8aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e8ae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e8b2:	e7eb      	b.n	9001e88c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001e8b4:	4b02      	ldr	r3, [pc, #8]	@ (9001e8c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e8b6:	6818      	ldr	r0, [r3, #0]
9001e8b8:	6803      	ldr	r3, [r0, #0]
9001e8ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e8bc:	4798      	blx	r3
9001e8be:	e76c      	b.n	9001e79a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e8c0:	2402340c 	.word	0x2402340c
9001e8c4:	24023406 	.word	0x24023406

9001e8c8 <_ZN8touchgfx8LCD16bppD0Ev>:
9001e8c8:	b510      	push	{r4, lr}
9001e8ca:	4604      	mov	r4, r0
9001e8cc:	2188      	movs	r1, #136	@ 0x88
9001e8ce:	f00b fb9d 	bl	9002a00c <_ZdlPvj>
9001e8d2:	4620      	mov	r0, r4
9001e8d4:	bd10      	pop	{r4, pc}

9001e8d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001e8d6:	b510      	push	{r4, lr}
9001e8d8:	4604      	mov	r4, r0
9001e8da:	2104      	movs	r1, #4
9001e8dc:	f00b fb96 	bl	9002a00c <_ZdlPvj>
9001e8e0:	4620      	mov	r0, r4
9001e8e2:	bd10      	pop	{r4, pc}

9001e8e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001e8e4:	b510      	push	{r4, lr}
9001e8e6:	4604      	mov	r4, r0
9001e8e8:	2104      	movs	r1, #4
9001e8ea:	f00b fb8f 	bl	9002a00c <_ZdlPvj>
9001e8ee:	4620      	mov	r0, r4
9001e8f0:	bd10      	pop	{r4, pc}

9001e8f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001e8f2:	b510      	push	{r4, lr}
9001e8f4:	4604      	mov	r4, r0
9001e8f6:	f640 0144 	movw	r1, #2116	@ 0x844
9001e8fa:	f00b fb87 	bl	9002a00c <_ZdlPvj>
9001e8fe:	4620      	mov	r0, r4
9001e900:	bd10      	pop	{r4, pc}

9001e902 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e902:	b510      	push	{r4, lr}
9001e904:	4604      	mov	r4, r0
9001e906:	2104      	movs	r1, #4
9001e908:	f00b fb80 	bl	9002a00c <_ZdlPvj>
9001e90c:	4620      	mov	r0, r4
9001e90e:	bd10      	pop	{r4, pc}

9001e910 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e910:	b510      	push	{r4, lr}
9001e912:	4604      	mov	r4, r0
9001e914:	2104      	movs	r1, #4
9001e916:	f00b fb79 	bl	9002a00c <_ZdlPvj>
9001e91a:	4620      	mov	r0, r4
9001e91c:	bd10      	pop	{r4, pc}

9001e91e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e91e:	b510      	push	{r4, lr}
9001e920:	4604      	mov	r4, r0
9001e922:	2104      	movs	r1, #4
9001e924:	f00b fb72 	bl	9002a00c <_ZdlPvj>
9001e928:	4620      	mov	r0, r4
9001e92a:	bd10      	pop	{r4, pc}

9001e92c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e92c:	b510      	push	{r4, lr}
9001e92e:	4604      	mov	r4, r0
9001e930:	2104      	movs	r1, #4
9001e932:	f00b fb6b 	bl	9002a00c <_ZdlPvj>
9001e936:	4620      	mov	r0, r4
9001e938:	bd10      	pop	{r4, pc}

9001e93a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e93a:	b510      	push	{r4, lr}
9001e93c:	4604      	mov	r4, r0
9001e93e:	2104      	movs	r1, #4
9001e940:	f00b fb64 	bl	9002a00c <_ZdlPvj>
9001e944:	4620      	mov	r0, r4
9001e946:	bd10      	pop	{r4, pc}

9001e948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001e948:	b510      	push	{r4, lr}
9001e94a:	4604      	mov	r4, r0
9001e94c:	2104      	movs	r1, #4
9001e94e:	f00b fb5d 	bl	9002a00c <_ZdlPvj>
9001e952:	4620      	mov	r0, r4
9001e954:	bd10      	pop	{r4, pc}

9001e956 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e956:	b510      	push	{r4, lr}
9001e958:	4604      	mov	r4, r0
9001e95a:	2104      	movs	r1, #4
9001e95c:	f00b fb56 	bl	9002a00c <_ZdlPvj>
9001e960:	4620      	mov	r0, r4
9001e962:	bd10      	pop	{r4, pc}

9001e964 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001e964:	b510      	push	{r4, lr}
9001e966:	4604      	mov	r4, r0
9001e968:	2104      	movs	r1, #4
9001e96a:	f00b fb4f 	bl	9002a00c <_ZdlPvj>
9001e96e:	4620      	mov	r0, r4
9001e970:	bd10      	pop	{r4, pc}

9001e972 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e972:	b510      	push	{r4, lr}
9001e974:	4604      	mov	r4, r0
9001e976:	2104      	movs	r1, #4
9001e978:	f00b fb48 	bl	9002a00c <_ZdlPvj>
9001e97c:	4620      	mov	r0, r4
9001e97e:	bd10      	pop	{r4, pc}

9001e980 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e980:	b510      	push	{r4, lr}
9001e982:	4604      	mov	r4, r0
9001e984:	2104      	movs	r1, #4
9001e986:	f00b fb41 	bl	9002a00c <_ZdlPvj>
9001e98a:	4620      	mov	r0, r4
9001e98c:	bd10      	pop	{r4, pc}

9001e98e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e98e:	b510      	push	{r4, lr}
9001e990:	4604      	mov	r4, r0
9001e992:	2104      	movs	r1, #4
9001e994:	f00b fb3a 	bl	9002a00c <_ZdlPvj>
9001e998:	4620      	mov	r0, r4
9001e99a:	bd10      	pop	{r4, pc}

9001e99c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e99c:	b510      	push	{r4, lr}
9001e99e:	4604      	mov	r4, r0
9001e9a0:	2104      	movs	r1, #4
9001e9a2:	f00b fb33 	bl	9002a00c <_ZdlPvj>
9001e9a6:	4620      	mov	r0, r4
9001e9a8:	bd10      	pop	{r4, pc}

9001e9aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e9aa:	b510      	push	{r4, lr}
9001e9ac:	4604      	mov	r4, r0
9001e9ae:	2104      	movs	r1, #4
9001e9b0:	f00b fb2c 	bl	9002a00c <_ZdlPvj>
9001e9b4:	4620      	mov	r0, r4
9001e9b6:	bd10      	pop	{r4, pc}

9001e9b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e9b8:	b510      	push	{r4, lr}
9001e9ba:	4604      	mov	r4, r0
9001e9bc:	2104      	movs	r1, #4
9001e9be:	f00b fb25 	bl	9002a00c <_ZdlPvj>
9001e9c2:	4620      	mov	r0, r4
9001e9c4:	bd10      	pop	{r4, pc}

9001e9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e9c6:	b510      	push	{r4, lr}
9001e9c8:	4604      	mov	r4, r0
9001e9ca:	2104      	movs	r1, #4
9001e9cc:	f00b fb1e 	bl	9002a00c <_ZdlPvj>
9001e9d0:	4620      	mov	r0, r4
9001e9d2:	bd10      	pop	{r4, pc}

9001e9d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e9d4:	b510      	push	{r4, lr}
9001e9d6:	4604      	mov	r4, r0
9001e9d8:	2104      	movs	r1, #4
9001e9da:	f00b fb17 	bl	9002a00c <_ZdlPvj>
9001e9de:	4620      	mov	r0, r4
9001e9e0:	bd10      	pop	{r4, pc}

9001e9e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e9e2:	b510      	push	{r4, lr}
9001e9e4:	4604      	mov	r4, r0
9001e9e6:	2104      	movs	r1, #4
9001e9e8:	f00b fb10 	bl	9002a00c <_ZdlPvj>
9001e9ec:	4620      	mov	r0, r4
9001e9ee:	bd10      	pop	{r4, pc}

9001e9f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e9f0:	b510      	push	{r4, lr}
9001e9f2:	4604      	mov	r4, r0
9001e9f4:	2104      	movs	r1, #4
9001e9f6:	f00b fb09 	bl	9002a00c <_ZdlPvj>
9001e9fa:	4620      	mov	r0, r4
9001e9fc:	bd10      	pop	{r4, pc}

9001e9fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e9fe:	b510      	push	{r4, lr}
9001ea00:	4604      	mov	r4, r0
9001ea02:	2104      	movs	r1, #4
9001ea04:	f00b fb02 	bl	9002a00c <_ZdlPvj>
9001ea08:	4620      	mov	r0, r4
9001ea0a:	bd10      	pop	{r4, pc}

9001ea0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ea0c:	b510      	push	{r4, lr}
9001ea0e:	4604      	mov	r4, r0
9001ea10:	2104      	movs	r1, #4
9001ea12:	f00b fafb 	bl	9002a00c <_ZdlPvj>
9001ea16:	4620      	mov	r0, r4
9001ea18:	bd10      	pop	{r4, pc}

9001ea1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ea1a:	b510      	push	{r4, lr}
9001ea1c:	4604      	mov	r4, r0
9001ea1e:	2104      	movs	r1, #4
9001ea20:	f00b faf4 	bl	9002a00c <_ZdlPvj>
9001ea24:	4620      	mov	r0, r4
9001ea26:	bd10      	pop	{r4, pc}

9001ea28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ea28:	b510      	push	{r4, lr}
9001ea2a:	4604      	mov	r4, r0
9001ea2c:	2104      	movs	r1, #4
9001ea2e:	f00b faed 	bl	9002a00c <_ZdlPvj>
9001ea32:	4620      	mov	r0, r4
9001ea34:	bd10      	pop	{r4, pc}

9001ea36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ea36:	b510      	push	{r4, lr}
9001ea38:	4604      	mov	r4, r0
9001ea3a:	2104      	movs	r1, #4
9001ea3c:	f00b fae6 	bl	9002a00c <_ZdlPvj>
9001ea40:	4620      	mov	r0, r4
9001ea42:	bd10      	pop	{r4, pc}

9001ea44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ea44:	b510      	push	{r4, lr}
9001ea46:	4604      	mov	r4, r0
9001ea48:	2104      	movs	r1, #4
9001ea4a:	f00b fadf 	bl	9002a00c <_ZdlPvj>
9001ea4e:	4620      	mov	r0, r4
9001ea50:	bd10      	pop	{r4, pc}

9001ea52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001ea52:	b510      	push	{r4, lr}
9001ea54:	4604      	mov	r4, r0
9001ea56:	2104      	movs	r1, #4
9001ea58:	f00b fad8 	bl	9002a00c <_ZdlPvj>
9001ea5c:	4620      	mov	r0, r4
9001ea5e:	bd10      	pop	{r4, pc}

9001ea60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001ea60:	b510      	push	{r4, lr}
9001ea62:	4604      	mov	r4, r0
9001ea64:	2104      	movs	r1, #4
9001ea66:	f00b fad1 	bl	9002a00c <_ZdlPvj>
9001ea6a:	4620      	mov	r0, r4
9001ea6c:	bd10      	pop	{r4, pc}

9001ea6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001ea6e:	b510      	push	{r4, lr}
9001ea70:	4604      	mov	r4, r0
9001ea72:	2104      	movs	r1, #4
9001ea74:	f00b faca 	bl	9002a00c <_ZdlPvj>
9001ea78:	4620      	mov	r0, r4
9001ea7a:	bd10      	pop	{r4, pc}

9001ea7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001ea7c:	b510      	push	{r4, lr}
9001ea7e:	4604      	mov	r4, r0
9001ea80:	2104      	movs	r1, #4
9001ea82:	f00b fac3 	bl	9002a00c <_ZdlPvj>
9001ea86:	4620      	mov	r0, r4
9001ea88:	bd10      	pop	{r4, pc}
	...

9001ea8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001ea8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ea90:	b08f      	sub	sp, #60	@ 0x3c
9001ea92:	461c      	mov	r4, r3
9001ea94:	9205      	str	r2, [sp, #20]
9001ea96:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ea9a:	9100      	str	r1, [sp, #0]
9001ea9c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001ea9e:	9201      	str	r2, [sp, #4]
9001eaa0:	2a00      	cmp	r2, #0
9001eaa2:	f000 8116 	beq.w	9001ecd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001eaa6:	6820      	ldr	r0, [r4, #0]
9001eaa8:	aa0a      	add	r2, sp, #40	@ 0x28
9001eaaa:	6861      	ldr	r1, [r4, #4]
9001eaac:	c203      	stmia	r2!, {r0, r1}
9001eaae:	6818      	ldr	r0, [r3, #0]
9001eab0:	aa0c      	add	r2, sp, #48	@ 0x30
9001eab2:	6859      	ldr	r1, [r3, #4]
9001eab4:	c203      	stmia	r2!, {r0, r1}
9001eab6:	a80a      	add	r0, sp, #40	@ 0x28
9001eab8:	f7f9 fb30 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001eabc:	4621      	mov	r1, r4
9001eabe:	a80c      	add	r0, sp, #48	@ 0x30
9001eac0:	f7f9 fb54 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001eac4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001eac8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001eacc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001ead0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001ead4:	bfdb      	ittet	le
9001ead6:	b2b3      	uxthle	r3, r6
9001ead8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001eadc:	2301      	movgt	r3, #1
9001eade:	fb92 f3f3 	sdivle	r3, r2, r3
9001eae2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001eae6:	441d      	add	r5, r3
9001eae8:	fb92 f1f3 	sdiv	r1, r2, r3
9001eaec:	fa1f fc81 	uxth.w	ip, r1
9001eaf0:	3d01      	subs	r5, #1
9001eaf2:	fb0c 2413 	mls	r4, ip, r3, r2
9001eaf6:	4661      	mov	r1, ip
9001eaf8:	fb14 f406 	smulbb	r4, r4, r6
9001eafc:	4404      	add	r4, r0
9001eafe:	fb95 f5f3 	sdiv	r5, r5, r3
9001eb02:	b2a4      	uxth	r4, r4
9001eb04:	b131      	cbz	r1, 9001eb14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001eb06:	9b05      	ldr	r3, [sp, #20]
9001eb08:	9900      	ldr	r1, [sp, #0]
9001eb0a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001eb0e:	ba1b      	rev	r3, r3
9001eb10:	4419      	add	r1, r3
9001eb12:	9100      	str	r1, [sp, #0]
9001eb14:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001eb18:	b2ad      	uxth	r5, r5
9001eb1a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001eb1e:	4418      	add	r0, r3
9001eb20:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001eb24:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001eb28:	00ad      	lsls	r5, r5, #2
9001eb2a:	441a      	add	r2, r3
9001eb2c:	4b6a      	ldr	r3, [pc, #424]	@ (9001ecd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001eb2e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001eb32:	6818      	ldr	r0, [r3, #0]
9001eb34:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001eb38:	6803      	ldr	r3, [r0, #0]
9001eb3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001eb3c:	4798      	blx	r3
9001eb3e:	4967      	ldr	r1, [pc, #412]	@ (9001ecdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001eb40:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001eb44:	2c00      	cmp	r4, #0
9001eb46:	880b      	ldrh	r3, [r1, #0]
9001eb48:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001eb4c:	bf0c      	ite	eq
9001eb4e:	46c6      	moveq	lr, r8
9001eb50:	f04f 0e00 	movne.w	lr, #0
9001eb54:	9109      	str	r1, [sp, #36]	@ 0x24
9001eb56:	fb03 c202 	mla	r2, r3, r2, ip
9001eb5a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001eb5e:	4373      	muls	r3, r6
9001eb60:	fa1f fe8e 	uxth.w	lr, lr
9001eb64:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001eb68:	9103      	str	r1, [sp, #12]
9001eb6a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001eb6e:	9306      	str	r3, [sp, #24]
9001eb70:	1d2b      	adds	r3, r5, #4
9001eb72:	9307      	str	r3, [sp, #28]
9001eb74:	9b01      	ldr	r3, [sp, #4]
9001eb76:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001eb7a:	2300      	movs	r3, #0
9001eb7c:	b292      	uxth	r2, r2
9001eb7e:	9302      	str	r3, [sp, #8]
9001eb80:	9204      	str	r2, [sp, #16]
9001eb82:	9a06      	ldr	r2, [sp, #24]
9001eb84:	4282      	cmp	r2, r0
9001eb86:	f240 809f 	bls.w	9001ecc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001eb8a:	b963      	cbnz	r3, 9001eba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001eb8c:	9b00      	ldr	r3, [sp, #0]
9001eb8e:	781a      	ldrb	r2, [r3, #0]
9001eb90:	0993      	lsrs	r3, r2, #6
9001eb92:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001eb96:	9202      	str	r2, [sp, #8]
9001eb98:	1e5a      	subs	r2, r3, #1
9001eb9a:	2a02      	cmp	r2, #2
9001eb9c:	d815      	bhi.n	9001ebca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001eb9e:	9a00      	ldr	r2, [sp, #0]
9001eba0:	b29b      	uxth	r3, r3
9001eba2:	3201      	adds	r2, #1
9001eba4:	9200      	str	r2, [sp, #0]
9001eba6:	b1b4      	cbz	r4, 9001ebd6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001eba8:	429c      	cmp	r4, r3
9001ebaa:	bf91      	iteee	ls
9001ebac:	1b1c      	subls	r4, r3, r4
9001ebae:	1ae4      	subhi	r4, r4, r3
9001ebb0:	4671      	movhi	r1, lr
9001ebb2:	f04f 0a00 	movhi.w	sl, #0
9001ebb6:	bf9b      	ittet	ls
9001ebb8:	fa1f fa84 	uxthls.w	sl, r4
9001ebbc:	2400      	movls	r4, #0
9001ebbe:	b2a4      	uxthhi	r4, r4
9001ebc0:	fa1f f188 	uxthls.w	r1, r8
9001ebc4:	4653      	mov	r3, sl
9001ebc6:	468e      	mov	lr, r1
9001ebc8:	e7db      	b.n	9001eb82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001ebca:	9a00      	ldr	r2, [sp, #0]
9001ebcc:	9b00      	ldr	r3, [sp, #0]
9001ebce:	3202      	adds	r2, #2
9001ebd0:	785b      	ldrb	r3, [r3, #1]
9001ebd2:	9200      	str	r2, [sp, #0]
9001ebd4:	e7e7      	b.n	9001eba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001ebd6:	2202      	movs	r2, #2
9001ebd8:	9907      	ldr	r1, [sp, #28]
9001ebda:	4573      	cmp	r3, lr
9001ebdc:	4615      	mov	r5, r2
9001ebde:	9a02      	ldr	r2, [sp, #8]
9001ebe0:	bf24      	itt	cs
9001ebe2:	eba3 0a0e 	subcs.w	sl, r3, lr
9001ebe6:	46f1      	movcs	r9, lr
9001ebe8:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ebec:	9905      	ldr	r1, [sp, #20]
9001ebee:	bf34      	ite	cc
9001ebf0:	4699      	movcc	r9, r3
9001ebf2:	fa1f fa8a 	uxthcs.w	sl, sl
9001ebf6:	f831 c002 	ldrh.w	ip, [r1, r2]
9001ebfa:	bf38      	it	cc
9001ebfc:	ebae 0103 	subcc.w	r1, lr, r3
9001ec00:	9a01      	ldr	r2, [sp, #4]
9001ec02:	bf2e      	itee	cs
9001ec04:	4621      	movcs	r1, r4
9001ec06:	b289      	uxthcc	r1, r1
9001ec08:	46a2      	movcc	sl, r4
9001ec0a:	2aff      	cmp	r2, #255	@ 0xff
9001ec0c:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001ec10:	d105      	bne.n	9001ec1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001ec12:	4481      	add	r9, r0
9001ec14:	4581      	cmp	r9, r0
9001ec16:	d045      	beq.n	9001eca4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001ec18:	f820 cb02 	strh.w	ip, [r0], #2
9001ec1c:	e7fa      	b.n	9001ec14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001ec1e:	ea4f 222c 	mov.w	r2, ip, asr #8
9001ec22:	9d03      	ldr	r5, [sp, #12]
9001ec24:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001ec28:	4481      	add	r9, r0
9001ec2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ec2e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001ec32:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001ec36:	fa5f fc8c 	uxtb.w	ip, ip
9001ec3a:	436a      	muls	r2, r5
9001ec3c:	fb0b fb05 	mul.w	fp, fp, r5
9001ec40:	fb0c fc05 	mul.w	ip, ip, r5
9001ec44:	9208      	str	r2, [sp, #32]
9001ec46:	4581      	cmp	r9, r0
9001ec48:	d02c      	beq.n	9001eca4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001ec4a:	8802      	ldrh	r2, [r0, #0]
9001ec4c:	9d04      	ldr	r5, [sp, #16]
9001ec4e:	1216      	asrs	r6, r2, #8
9001ec50:	9f04      	ldr	r7, [sp, #16]
9001ec52:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001ec56:	fb16 f605 	smulbb	r6, r6, r5
9001ec5a:	9d08      	ldr	r5, [sp, #32]
9001ec5c:	442e      	add	r6, r5
9001ec5e:	10d5      	asrs	r5, r2, #3
9001ec60:	00d2      	lsls	r2, r2, #3
9001ec62:	b2b6      	uxth	r6, r6
9001ec64:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001ec68:	b2d2      	uxtb	r2, r2
9001ec6a:	fb15 f507 	smulbb	r5, r5, r7
9001ec6e:	fb12 f207 	smulbb	r2, r2, r7
9001ec72:	1c77      	adds	r7, r6, #1
9001ec74:	445d      	add	r5, fp
9001ec76:	4462      	add	r2, ip
9001ec78:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001ec7c:	b2ad      	uxth	r5, r5
9001ec7e:	b292      	uxth	r2, r2
9001ec80:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001ec84:	1c57      	adds	r7, r2, #1
9001ec86:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001ec8a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ec8e:	4316      	orrs	r6, r2
9001ec90:	1c6a      	adds	r2, r5, #1
9001ec92:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001ec96:	096d      	lsrs	r5, r5, #5
9001ec98:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ec9c:	432e      	orrs	r6, r5
9001ec9e:	f820 6b02 	strh.w	r6, [r0], #2
9001eca2:	e7d0      	b.n	9001ec46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001eca4:	4573      	cmp	r3, lr
9001eca6:	d38d      	bcc.n	9001ebc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001eca8:	fa1f f188 	uxth.w	r1, r8
9001ecac:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001ecb0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ecb2:	1a64      	subs	r4, r4, r1
9001ecb4:	881b      	ldrh	r3, [r3, #0]
9001ecb6:	b2a4      	uxth	r4, r4
9001ecb8:	eba3 0308 	sub.w	r3, r3, r8
9001ecbc:	2c00      	cmp	r4, #0
9001ecbe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ecc2:	bf18      	it	ne
9001ecc4:	2100      	movne	r1, #0
9001ecc6:	e77d      	b.n	9001ebc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001ecc8:	4b03      	ldr	r3, [pc, #12]	@ (9001ecd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001ecca:	6818      	ldr	r0, [r3, #0]
9001eccc:	6803      	ldr	r3, [r0, #0]
9001ecce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ecd0:	4798      	blx	r3
9001ecd2:	b00f      	add	sp, #60	@ 0x3c
9001ecd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ecd8:	2402340c 	.word	0x2402340c
9001ecdc:	24023406 	.word	0x24023406

9001ece0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001ece0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ece4:	b09f      	sub	sp, #124	@ 0x7c
9001ece6:	461d      	mov	r5, r3
9001ece8:	4604      	mov	r4, r0
9001ecea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001ecec:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001ecf0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001ecf4:	9209      	str	r2, [sp, #36]	@ 0x24
9001ecf6:	2a00      	cmp	r2, #0
9001ecf8:	f000 81ed 	beq.w	9001f0d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001ecfc:	6828      	ldr	r0, [r5, #0]
9001ecfe:	aa1a      	add	r2, sp, #104	@ 0x68
9001ed00:	6869      	ldr	r1, [r5, #4]
9001ed02:	c203      	stmia	r2!, {r0, r1}
9001ed04:	6818      	ldr	r0, [r3, #0]
9001ed06:	aa1c      	add	r2, sp, #112	@ 0x70
9001ed08:	6859      	ldr	r1, [r3, #4]
9001ed0a:	c203      	stmia	r2!, {r0, r1}
9001ed0c:	a81a      	add	r0, sp, #104	@ 0x68
9001ed0e:	f7f9 fa05 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ed12:	4629      	mov	r1, r5
9001ed14:	a81c      	add	r0, sp, #112	@ 0x70
9001ed16:	f7f9 fa29 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ed1a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001ed1e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001ed22:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001ed26:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001ed2a:	bfdb      	ittet	le
9001ed2c:	b29a      	uxthle	r2, r3
9001ed2e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ed32:	2201      	movgt	r2, #1
9001ed34:	fb91 f2f2 	sdivle	r2, r1, r2
9001ed38:	9202      	str	r2, [sp, #8]
9001ed3a:	9802      	ldr	r0, [sp, #8]
9001ed3c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001ed40:	9902      	ldr	r1, [sp, #8]
9001ed42:	fb92 f0f0 	sdiv	r0, r2, r0
9001ed46:	b280      	uxth	r0, r0
9001ed48:	4488      	add	r8, r1
9001ed4a:	9010      	str	r0, [sp, #64]	@ 0x40
9001ed4c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
9001ed50:	9802      	ldr	r0, [sp, #8]
9001ed52:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001ed54:	fb05 2510 	mls	r5, r5, r0, r2
9001ed58:	fb98 f8f1 	sdiv	r8, r8, r1
9001ed5c:	fb15 f503 	smulbb	r5, r5, r3
9001ed60:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001ed64:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001ed68:	f108 0801 	add.w	r8, r8, #1
9001ed6c:	440d      	add	r5, r1
9001ed6e:	4419      	add	r1, r3
9001ed70:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001ed74:	fa1f f888 	uxth.w	r8, r8
9001ed78:	441a      	add	r2, r3
9001ed7a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001ed7e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001ed82:	b2ad      	uxth	r5, r5
9001ed84:	9304      	str	r3, [sp, #16]
9001ed86:	4b94      	ldr	r3, [pc, #592]	@ (9001efd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001ed88:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001ed8c:	6818      	ldr	r0, [r3, #0]
9001ed8e:	6803      	ldr	r3, [r0, #0]
9001ed90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ed92:	4798      	blx	r3
9001ed94:	4b91      	ldr	r3, [pc, #580]	@ (9001efdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001ed96:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001ed9a:	2d00      	cmp	r5, #0
9001ed9c:	881a      	ldrh	r2, [r3, #0]
9001ed9e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001eda2:	fb02 f606 	mul.w	r6, r2, r6
9001eda6:	fb02 7101 	mla	r1, r2, r1, r7
9001edaa:	9318      	str	r3, [sp, #96]	@ 0x60
9001edac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001edb0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001edb4:	f04f 0100 	mov.w	r1, #0
9001edb8:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001edbc:	930f      	str	r3, [sp, #60]	@ 0x3c
9001edbe:	4b88      	ldr	r3, [pc, #544]	@ (9001efe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001edc0:	920a      	str	r2, [sp, #40]	@ 0x28
9001edc2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001edc4:	eba3 0304 	sub.w	r3, r3, r4
9001edc8:	910d      	str	r1, [sp, #52]	@ 0x34
9001edca:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001edce:	9319      	str	r3, [sp, #100]	@ 0x64
9001edd0:	f108 0204 	add.w	r2, r8, #4
9001edd4:	9211      	str	r2, [sp, #68]	@ 0x44
9001edd6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001edd8:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001eddc:	9215      	str	r2, [sp, #84]	@ 0x54
9001edde:	9a04      	ldr	r2, [sp, #16]
9001ede0:	bf18      	it	ne
9001ede2:	2200      	movne	r2, #0
9001ede4:	b292      	uxth	r2, r2
9001ede6:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001ede8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001edea:	fa11 f383 	uxtah	r3, r1, r3
9001edee:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001edf0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001edf4:	3304      	adds	r3, #4
9001edf6:	9306      	str	r3, [sp, #24]
9001edf8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001edfa:	4283      	cmp	r3, r0
9001edfc:	f240 8166 	bls.w	9001f0cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001ee00:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001ee04:	f04f 0a01 	mov.w	sl, #1
9001ee08:	9902      	ldr	r1, [sp, #8]
9001ee0a:	9e06      	ldr	r6, [sp, #24]
9001ee0c:	46d3      	mov	fp, sl
9001ee0e:	4657      	mov	r7, sl
9001ee10:	7836      	ldrb	r6, [r6, #0]
9001ee12:	fbb5 f3f3 	udiv	r3, r5, r3
9001ee16:	1acb      	subs	r3, r1, r3
9001ee18:	9612      	str	r6, [sp, #72]	@ 0x48
9001ee1a:	3601      	adds	r6, #1
9001ee1c:	b29b      	uxth	r3, r3
9001ee1e:	9605      	str	r6, [sp, #20]
9001ee20:	9316      	str	r3, [sp, #88]	@ 0x58
9001ee22:	9b06      	ldr	r3, [sp, #24]
9001ee24:	7859      	ldrb	r1, [r3, #1]
9001ee26:	789b      	ldrb	r3, [r3, #2]
9001ee28:	021b      	lsls	r3, r3, #8
9001ee2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001ee2e:	9906      	ldr	r1, [sp, #24]
9001ee30:	78c9      	ldrb	r1, [r1, #3]
9001ee32:	430b      	orrs	r3, r1
9001ee34:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001ee36:	4419      	add	r1, r3
9001ee38:	1c4e      	adds	r6, r1, #1
9001ee3a:	7849      	ldrb	r1, [r1, #1]
9001ee3c:	9603      	str	r6, [sp, #12]
9001ee3e:	0209      	lsls	r1, r1, #8
9001ee40:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ee42:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001ee46:	5cf3      	ldrb	r3, [r6, r3]
9001ee48:	4319      	orrs	r1, r3
9001ee4a:	b28b      	uxth	r3, r1
9001ee4c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001ee50:	930c      	str	r3, [sp, #48]	@ 0x30
9001ee52:	2300      	movs	r3, #0
9001ee54:	9307      	str	r3, [sp, #28]
9001ee56:	469c      	mov	ip, r3
9001ee58:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001ee5c:	930e      	str	r3, [sp, #56]	@ 0x38
9001ee5e:	2d00      	cmp	r5, #0
9001ee60:	d07e      	beq.n	9001ef60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001ee62:	42af      	cmp	r7, r5
9001ee64:	d26e      	bcs.n	9001ef44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001ee66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ee68:	1bed      	subs	r5, r5, r7
9001ee6a:	9201      	str	r2, [sp, #4]
9001ee6c:	4283      	cmp	r3, r0
9001ee6e:	b2ad      	uxth	r5, r5
9001ee70:	d802      	bhi.n	9001ee78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001ee72:	e073      	b.n	9001ef5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001ee74:	2b00      	cmp	r3, #0
9001ee76:	d15f      	bne.n	9001ef38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001ee78:	9b03      	ldr	r3, [sp, #12]
9001ee7a:	f1cb 0207 	rsb	r2, fp, #7
9001ee7e:	785b      	ldrb	r3, [r3, #1]
9001ee80:	4093      	lsls	r3, r2
9001ee82:	005b      	lsls	r3, r3, #1
9001ee84:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001ee88:	9b03      	ldr	r3, [sp, #12]
9001ee8a:	781b      	ldrb	r3, [r3, #0]
9001ee8c:	fa43 f30b 	asr.w	r3, r3, fp
9001ee90:	b2db      	uxtb	r3, r3
9001ee92:	4313      	orrs	r3, r2
9001ee94:	f10b 0201 	add.w	r2, fp, #1
9001ee98:	fa5f fb82 	uxtb.w	fp, r2
9001ee9c:	9a03      	ldr	r2, [sp, #12]
9001ee9e:	b29f      	uxth	r7, r3
9001eea0:	f1bb 0f08 	cmp.w	fp, #8
9001eea4:	bf13      	iteet	ne
9001eea6:	3201      	addne	r2, #1
9001eea8:	3202      	addeq	r2, #2
9001eeaa:	f04f 0b00 	moveq.w	fp, #0
9001eeae:	9203      	strne	r2, [sp, #12]
9001eeb0:	bf08      	it	eq
9001eeb2:	9203      	streq	r2, [sp, #12]
9001eeb4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001eeb6:	42ba      	cmp	r2, r7
9001eeb8:	d309      	bcc.n	9001eece <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001eeba:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001eebe:	2301      	movs	r3, #1
9001eec0:	9a05      	ldr	r2, [sp, #20]
9001eec2:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001eec6:	d30e      	bcc.n	9001eee6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001eec8:	469a      	mov	sl, r3
9001eeca:	2600      	movs	r6, #0
9001eecc:	e035      	b.n	9001ef3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001eece:	9b05      	ldr	r3, [sp, #20]
9001eed0:	429f      	cmp	r7, r3
9001eed2:	d318      	bcc.n	9001ef06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001eed4:	eb04 030a 	add.w	r3, r4, sl
9001eed8:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001eedc:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001eee0:	f10a 0301 	add.w	r3, sl, #1
9001eee4:	b29b      	uxth	r3, r3
9001eee6:	9a05      	ldr	r2, [sp, #20]
9001eee8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001eeec:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001eef0:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001eef2:	7116      	strb	r6, [r2, #4]
9001eef4:	f10a 0601 	add.w	r6, sl, #1
9001eef8:	80d1      	strh	r1, [r2, #6]
9001eefa:	7156      	strb	r6, [r2, #5]
9001eefc:	9a05      	ldr	r2, [sp, #20]
9001eefe:	3201      	adds	r2, #1
9001ef00:	b292      	uxth	r2, r2
9001ef02:	9205      	str	r2, [sp, #20]
9001ef04:	e7e0      	b.n	9001eec8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001ef06:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001ef0a:	463a      	mov	r2, r7
9001ef0c:	795b      	ldrb	r3, [r3, #5]
9001ef0e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001ef12:	4426      	add	r6, r4
9001ef14:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001ef16:	eb01 0c06 	add.w	ip, r1, r6
9001ef1a:	f1bc 0f00 	cmp.w	ip, #0
9001ef1e:	dd07      	ble.n	9001ef30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001ef20:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001ef24:	f892 c004 	ldrb.w	ip, [r2, #4]
9001ef28:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001ef2c:	88d2      	ldrh	r2, [r2, #6]
9001ef2e:	e7f1      	b.n	9001ef14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001ef30:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001ef34:	b29b      	uxth	r3, r3
9001ef36:	e7c3      	b.n	9001eec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001ef38:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001ef3a:	970c      	str	r7, [sp, #48]	@ 0x30
9001ef3c:	46b4      	mov	ip, r6
9001ef3e:	9a01      	ldr	r2, [sp, #4]
9001ef40:	461f      	mov	r7, r3
9001ef42:	e78c      	b.n	9001ee5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001ef44:	1b7b      	subs	r3, r7, r5
9001ef46:	eb0c 0605 	add.w	r6, ip, r5
9001ef4a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ef4e:	b29b      	uxth	r3, r3
9001ef50:	b2b6      	uxth	r6, r6
9001ef52:	9201      	str	r2, [sp, #4]
9001ef54:	2500      	movs	r5, #0
9001ef56:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001ef58:	4282      	cmp	r2, r0
9001ef5a:	d88b      	bhi.n	9001ee74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001ef5c:	9a01      	ldr	r2, [sp, #4]
9001ef5e:	e74b      	b.n	9001edf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001ef60:	4297      	cmp	r7, r2
9001ef62:	d332      	bcc.n	9001efca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001ef64:	1abb      	subs	r3, r7, r2
9001ef66:	9208      	str	r2, [sp, #32]
9001ef68:	9501      	str	r5, [sp, #4]
9001ef6a:	b29b      	uxth	r3, r3
9001ef6c:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001ef6e:	29ff      	cmp	r1, #255	@ 0xff
9001ef70:	9908      	ldr	r1, [sp, #32]
9001ef72:	eb0c 0601 	add.w	r6, ip, r1
9001ef76:	d135      	bne.n	9001efe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001ef78:	f1a0 0e02 	sub.w	lr, r0, #2
9001ef7c:	b2b6      	uxth	r6, r6
9001ef7e:	45b4      	cmp	ip, r6
9001ef80:	f040 808c 	bne.w	9001f09c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001ef84:	9908      	ldr	r1, [sp, #32]
9001ef86:	4297      	cmp	r7, r2
9001ef88:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ef8c:	d3e2      	bcc.n	9001ef54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001ef8e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001ef90:	9904      	ldr	r1, [sp, #16]
9001ef92:	8812      	ldrh	r2, [r2, #0]
9001ef94:	1a52      	subs	r2, r2, r1
9001ef96:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001ef98:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ef9c:	9a07      	ldr	r2, [sp, #28]
9001ef9e:	3201      	adds	r2, #1
9001efa0:	428a      	cmp	r2, r1
9001efa2:	9207      	str	r2, [sp, #28]
9001efa4:	f040 8087 	bne.w	9001f0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001efa8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001efac:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001efb0:	9b04      	ldr	r3, [sp, #16]
9001efb2:	1bed      	subs	r5, r5, r7
9001efb4:	b2ad      	uxth	r5, r5
9001efb6:	2d00      	cmp	r5, #0
9001efb8:	bf08      	it	eq
9001efba:	461a      	moveq	r2, r3
9001efbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001efbe:	bf18      	it	ne
9001efc0:	2200      	movne	r2, #0
9001efc2:	3301      	adds	r3, #1
9001efc4:	b292      	uxth	r2, r2
9001efc6:	930d      	str	r3, [sp, #52]	@ 0x34
9001efc8:	e70d      	b.n	9001ede6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001efca:	1bd1      	subs	r1, r2, r7
9001efcc:	9708      	str	r7, [sp, #32]
9001efce:	b28b      	uxth	r3, r1
9001efd0:	9301      	str	r3, [sp, #4]
9001efd2:	462b      	mov	r3, r5
9001efd4:	e7ca      	b.n	9001ef6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001efd6:	bf00      	nop
9001efd8:	2402340c 	.word	0x2402340c
9001efdc:	24023406 	.word	0x24023406
9001efe0:	fffff7fb 	.word	0xfffff7fb
9001efe4:	b2b6      	uxth	r6, r6
9001efe6:	900b      	str	r0, [sp, #44]	@ 0x2c
9001efe8:	45b4      	cmp	ip, r6
9001efea:	d0cb      	beq.n	9001ef84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001efec:	f10c 0101 	add.w	r1, ip, #1
9001eff0:	44a4      	add	ip, r4
9001eff2:	9117      	str	r1, [sp, #92]	@ 0x5c
9001eff4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001eff8:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001effa:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001effe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001f000:	ea4f 2825 	mov.w	r8, r5, asr #8
9001f004:	f8b1 c000 	ldrh.w	ip, [r1]
9001f008:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f00a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001f00e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001f012:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001f016:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001f01a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f01e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001f022:	fb1e fe01 	smulbb	lr, lr, r1
9001f026:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001f028:	fa5f fc8c 	uxtb.w	ip, ip
9001f02c:	fb08 e801 	mla	r8, r8, r1, lr
9001f030:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001f034:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f036:	00ed      	lsls	r5, r5, #3
9001f038:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001f03c:	fa1f f888 	uxth.w	r8, r8
9001f040:	fb19 f901 	smulbb	r9, r9, r1
9001f044:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001f046:	b2ed      	uxtb	r5, r5
9001f048:	fb0e 9e01 	mla	lr, lr, r1, r9
9001f04c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f04e:	fb1c fc01 	smulbb	ip, ip, r1
9001f052:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001f054:	fa1f fe8e 	uxth.w	lr, lr
9001f058:	fb05 c501 	mla	r5, r5, r1, ip
9001f05c:	f108 0c01 	add.w	ip, r8, #1
9001f060:	f10e 0901 	add.w	r9, lr, #1
9001f064:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001f066:	b2ad      	uxth	r5, r5
9001f068:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001f06c:	f105 0c01 	add.w	ip, r5, #1
9001f070:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001f074:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001f078:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001f07c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001f080:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f084:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001f088:	ea4c 0808 	orr.w	r8, ip, r8
9001f08c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001f090:	ea48 0809 	orr.w	r8, r8, r9
9001f094:	f821 8b02 	strh.w	r8, [r1], #2
9001f098:	910b      	str	r1, [sp, #44]	@ 0x2c
9001f09a:	e7a5      	b.n	9001efe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001f09c:	f10c 0801 	add.w	r8, ip, #1
9001f0a0:	44a4      	add	ip, r4
9001f0a2:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001f0a4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001f0a8:	fa1f fc88 	uxth.w	ip, r8
9001f0ac:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001f0b0:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001f0b4:	e763      	b.n	9001ef7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001f0b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f0ba:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001f0be:	1aad      	subs	r5, r5, r2
9001f0c0:	b2ad      	uxth	r5, r5
9001f0c2:	2d00      	cmp	r5, #0
9001f0c4:	bf18      	it	ne
9001f0c6:	2200      	movne	r2, #0
9001f0c8:	9201      	str	r2, [sp, #4]
9001f0ca:	e744      	b.n	9001ef56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001f0cc:	4b03      	ldr	r3, [pc, #12]	@ (9001f0dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001f0ce:	6818      	ldr	r0, [r3, #0]
9001f0d0:	6803      	ldr	r3, [r0, #0]
9001f0d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f0d4:	4798      	blx	r3
9001f0d6:	b01f      	add	sp, #124	@ 0x7c
9001f0d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f0dc:	2402340c 	.word	0x2402340c

9001f0e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f0e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f0e4:	b08f      	sub	sp, #60	@ 0x3c
9001f0e6:	461c      	mov	r4, r3
9001f0e8:	460f      	mov	r7, r1
9001f0ea:	9203      	str	r2, [sp, #12]
9001f0ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001f0f0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001f0f2:	9202      	str	r2, [sp, #8]
9001f0f4:	2a00      	cmp	r2, #0
9001f0f6:	f000 8128 	beq.w	9001f34a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001f0fa:	6820      	ldr	r0, [r4, #0]
9001f0fc:	aa0a      	add	r2, sp, #40	@ 0x28
9001f0fe:	6861      	ldr	r1, [r4, #4]
9001f100:	c203      	stmia	r2!, {r0, r1}
9001f102:	6818      	ldr	r0, [r3, #0]
9001f104:	aa0c      	add	r2, sp, #48	@ 0x30
9001f106:	6859      	ldr	r1, [r3, #4]
9001f108:	c203      	stmia	r2!, {r0, r1}
9001f10a:	a80a      	add	r0, sp, #40	@ 0x28
9001f10c:	f7f9 f806 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f110:	4621      	mov	r1, r4
9001f112:	a80c      	add	r0, sp, #48	@ 0x30
9001f114:	f7f9 f82a 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f118:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001f11c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001f120:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001f124:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001f128:	bfdb      	ittet	le
9001f12a:	b2b3      	uxthle	r3, r6
9001f12c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001f130:	2301      	movgt	r3, #1
9001f132:	fb92 f3f3 	sdivle	r3, r2, r3
9001f136:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001f13a:	441d      	add	r5, r3
9001f13c:	fb92 f1f3 	sdiv	r1, r2, r3
9001f140:	fa1f fc81 	uxth.w	ip, r1
9001f144:	3d01      	subs	r5, #1
9001f146:	fb0c 2413 	mls	r4, ip, r3, r2
9001f14a:	4661      	mov	r1, ip
9001f14c:	fb14 f406 	smulbb	r4, r4, r6
9001f150:	4404      	add	r4, r0
9001f152:	fb95 f5f3 	sdiv	r5, r5, r3
9001f156:	b2a4      	uxth	r4, r4
9001f158:	b121      	cbz	r1, 9001f164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001f15a:	9b03      	ldr	r3, [sp, #12]
9001f15c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001f160:	ba1b      	rev	r3, r3
9001f162:	441f      	add	r7, r3
9001f164:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001f168:	b2ad      	uxth	r5, r5
9001f16a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001f16e:	4418      	add	r0, r3
9001f170:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001f174:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001f178:	00ad      	lsls	r5, r5, #2
9001f17a:	441a      	add	r2, r3
9001f17c:	4b74      	ldr	r3, [pc, #464]	@ (9001f350 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001f17e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001f182:	6818      	ldr	r0, [r3, #0]
9001f184:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001f188:	6803      	ldr	r3, [r0, #0]
9001f18a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f18c:	4798      	blx	r3
9001f18e:	4a71      	ldr	r2, [pc, #452]	@ (9001f354 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001f190:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001f194:	2c00      	cmp	r4, #0
9001f196:	8813      	ldrh	r3, [r2, #0]
9001f198:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001f19c:	bf0c      	ite	eq
9001f19e:	46c8      	moveq	r8, r9
9001f1a0:	f04f 0800 	movne.w	r8, #0
9001f1a4:	9209      	str	r2, [sp, #36]	@ 0x24
9001f1a6:	fb03 c101 	mla	r1, r3, r1, ip
9001f1aa:	4373      	muls	r3, r6
9001f1ac:	fa1f f888 	uxth.w	r8, r8
9001f1b0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001f1b4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f1b8:	9304      	str	r3, [sp, #16]
9001f1ba:	1d2b      	adds	r3, r5, #4
9001f1bc:	9305      	str	r3, [sp, #20]
9001f1be:	2300      	movs	r3, #0
9001f1c0:	9301      	str	r3, [sp, #4]
9001f1c2:	9a04      	ldr	r2, [sp, #16]
9001f1c4:	4282      	cmp	r2, r0
9001f1c6:	f240 80bb 	bls.w	9001f340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001f1ca:	b95b      	cbnz	r3, 9001f1e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001f1cc:	783a      	ldrb	r2, [r7, #0]
9001f1ce:	0993      	lsrs	r3, r2, #6
9001f1d0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001f1d4:	9201      	str	r2, [sp, #4]
9001f1d6:	1e5a      	subs	r2, r3, #1
9001f1d8:	2a02      	cmp	r2, #2
9001f1da:	bf8d      	iteet	hi
9001f1dc:	787b      	ldrbhi	r3, [r7, #1]
9001f1de:	3701      	addls	r7, #1
9001f1e0:	b29b      	uxthls	r3, r3
9001f1e2:	3702      	addhi	r7, #2
9001f1e4:	b184      	cbz	r4, 9001f208 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001f1e6:	429c      	cmp	r4, r3
9001f1e8:	bf91      	iteee	ls
9001f1ea:	1b1c      	subls	r4, r3, r4
9001f1ec:	1ae4      	subhi	r4, r4, r3
9001f1ee:	46c4      	movhi	ip, r8
9001f1f0:	f04f 0a00 	movhi.w	sl, #0
9001f1f4:	bf9b      	ittet	ls
9001f1f6:	fa1f fa84 	uxthls.w	sl, r4
9001f1fa:	2400      	movls	r4, #0
9001f1fc:	b2a4      	uxthhi	r4, r4
9001f1fe:	fa1f fc89 	uxthls.w	ip, r9
9001f202:	4653      	mov	r3, sl
9001f204:	46e0      	mov	r8, ip
9001f206:	e7dc      	b.n	9001f1c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001f208:	2204      	movs	r2, #4
9001f20a:	9905      	ldr	r1, [sp, #20]
9001f20c:	4543      	cmp	r3, r8
9001f20e:	4615      	mov	r5, r2
9001f210:	9a01      	ldr	r2, [sp, #4]
9001f212:	bf24      	itt	cs
9001f214:	eba3 0a08 	subcs.w	sl, r3, r8
9001f218:	46c6      	movcs	lr, r8
9001f21a:	fb15 1202 	smlabb	r2, r5, r2, r1
9001f21e:	9903      	ldr	r1, [sp, #12]
9001f220:	bf3c      	itt	cc
9001f222:	eba8 0c03 	subcc.w	ip, r8, r3
9001f226:	469e      	movcc	lr, r3
9001f228:	588a      	ldr	r2, [r1, r2]
9001f22a:	bf26      	itte	cs
9001f22c:	fa1f fa8a 	uxthcs.w	sl, sl
9001f230:	46a4      	movcs	ip, r4
9001f232:	fa1f fc8c 	uxthcc.w	ip, ip
9001f236:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001f23a:	bf38      	it	cc
9001f23c:	46a2      	movcc	sl, r4
9001f23e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001f242:	2900      	cmp	r1, #0
9001f244:	d066      	beq.n	9001f314 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001f246:	29ff      	cmp	r1, #255	@ 0xff
9001f248:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001f24c:	d114      	bne.n	9001f278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001f24e:	9d02      	ldr	r5, [sp, #8]
9001f250:	2dff      	cmp	r5, #255	@ 0xff
9001f252:	d111      	bne.n	9001f278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001f254:	0951      	lsrs	r1, r2, #5
9001f256:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001f25a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f25e:	4486      	add	lr, r0
9001f260:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001f264:	f026 0607 	bic.w	r6, r6, #7
9001f268:	430e      	orrs	r6, r1
9001f26a:	4316      	orrs	r6, r2
9001f26c:	b2b6      	uxth	r6, r6
9001f26e:	4586      	cmp	lr, r0
9001f270:	d051      	beq.n	9001f316 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f272:	f820 6b02 	strh.w	r6, [r0], #2
9001f276:	e7fa      	b.n	9001f26e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001f278:	9d02      	ldr	r5, [sp, #8]
9001f27a:	b2f6      	uxtb	r6, r6
9001f27c:	4486      	add	lr, r0
9001f27e:	4369      	muls	r1, r5
9001f280:	1c4d      	adds	r5, r1, #1
9001f282:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001f286:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001f28a:	b2d2      	uxtb	r2, r2
9001f28c:	122d      	asrs	r5, r5, #8
9001f28e:	ea6f 0b05 	mvn.w	fp, r5
9001f292:	b2ad      	uxth	r5, r5
9001f294:	fb11 f105 	smulbb	r1, r1, r5
9001f298:	fa5f fb8b 	uxtb.w	fp, fp
9001f29c:	fb16 f605 	smulbb	r6, r6, r5
9001f2a0:	fb12 f205 	smulbb	r2, r2, r5
9001f2a4:	b289      	uxth	r1, r1
9001f2a6:	b2b6      	uxth	r6, r6
9001f2a8:	b292      	uxth	r2, r2
9001f2aa:	9106      	str	r1, [sp, #24]
9001f2ac:	9607      	str	r6, [sp, #28]
9001f2ae:	9208      	str	r2, [sp, #32]
9001f2b0:	4586      	cmp	lr, r0
9001f2b2:	d030      	beq.n	9001f316 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f2b4:	8802      	ldrh	r2, [r0, #0]
9001f2b6:	9906      	ldr	r1, [sp, #24]
9001f2b8:	1216      	asrs	r6, r2, #8
9001f2ba:	10d5      	asrs	r5, r2, #3
9001f2bc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f2c0:	00d2      	lsls	r2, r2, #3
9001f2c2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f2c6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f2ca:	b2d2      	uxtb	r2, r2
9001f2cc:	fb06 160b 	mla	r6, r6, fp, r1
9001f2d0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f2d4:	9907      	ldr	r1, [sp, #28]
9001f2d6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f2da:	b2b6      	uxth	r6, r6
9001f2dc:	fb05 150b 	mla	r5, r5, fp, r1
9001f2e0:	9908      	ldr	r1, [sp, #32]
9001f2e2:	fb02 120b 	mla	r2, r2, fp, r1
9001f2e6:	1c71      	adds	r1, r6, #1
9001f2e8:	b2ad      	uxth	r5, r5
9001f2ea:	b292      	uxth	r2, r2
9001f2ec:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001f2f0:	1c51      	adds	r1, r2, #1
9001f2f2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f2f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001f2fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f2fe:	4316      	orrs	r6, r2
9001f300:	1c6a      	adds	r2, r5, #1
9001f302:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001f306:	096d      	lsrs	r5, r5, #5
9001f308:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f30c:	432e      	orrs	r6, r5
9001f30e:	f820 6b02 	strh.w	r6, [r0], #2
9001f312:	e7cd      	b.n	9001f2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001f314:	4470      	add	r0, lr
9001f316:	4543      	cmp	r3, r8
9001f318:	f4ff af73 	bcc.w	9001f202 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001f31c:	fa1f fc89 	uxth.w	ip, r9
9001f320:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001f324:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f326:	eba4 040c 	sub.w	r4, r4, ip
9001f32a:	881b      	ldrh	r3, [r3, #0]
9001f32c:	b2a4      	uxth	r4, r4
9001f32e:	eba3 0309 	sub.w	r3, r3, r9
9001f332:	2c00      	cmp	r4, #0
9001f334:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f338:	bf18      	it	ne
9001f33a:	f04f 0c00 	movne.w	ip, #0
9001f33e:	e760      	b.n	9001f202 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001f340:	4b03      	ldr	r3, [pc, #12]	@ (9001f350 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001f342:	6818      	ldr	r0, [r3, #0]
9001f344:	6803      	ldr	r3, [r0, #0]
9001f346:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f348:	4798      	blx	r3
9001f34a:	b00f      	add	sp, #60	@ 0x3c
9001f34c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f350:	2402340c 	.word	0x2402340c
9001f354:	24023406 	.word	0x24023406

9001f358 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f35c:	b093      	sub	sp, #76	@ 0x4c
9001f35e:	461c      	mov	r4, r3
9001f360:	9205      	str	r2, [sp, #20]
9001f362:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001f366:	9101      	str	r1, [sp, #4]
9001f368:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001f36a:	9202      	str	r2, [sp, #8]
9001f36c:	2a00      	cmp	r2, #0
9001f36e:	f000 812e 	beq.w	9001f5ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001f372:	6820      	ldr	r0, [r4, #0]
9001f374:	aa0e      	add	r2, sp, #56	@ 0x38
9001f376:	6861      	ldr	r1, [r4, #4]
9001f378:	c203      	stmia	r2!, {r0, r1}
9001f37a:	6818      	ldr	r0, [r3, #0]
9001f37c:	aa10      	add	r2, sp, #64	@ 0x40
9001f37e:	6859      	ldr	r1, [r3, #4]
9001f380:	c203      	stmia	r2!, {r0, r1}
9001f382:	a80e      	add	r0, sp, #56	@ 0x38
9001f384:	f7f8 feca 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f388:	4621      	mov	r1, r4
9001f38a:	a810      	add	r0, sp, #64	@ 0x40
9001f38c:	f7f8 feee 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f390:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001f394:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001f398:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001f39c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001f3a0:	bfdb      	ittet	le
9001f3a2:	b2b3      	uxthle	r3, r6
9001f3a4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001f3a8:	2301      	movgt	r3, #1
9001f3aa:	fb92 f3f3 	sdivle	r3, r2, r3
9001f3ae:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001f3b2:	441d      	add	r5, r3
9001f3b4:	fb92 f1f3 	sdiv	r1, r2, r3
9001f3b8:	fa1f fc81 	uxth.w	ip, r1
9001f3bc:	3d01      	subs	r5, #1
9001f3be:	fb0c 2413 	mls	r4, ip, r3, r2
9001f3c2:	4661      	mov	r1, ip
9001f3c4:	fb14 f406 	smulbb	r4, r4, r6
9001f3c8:	4404      	add	r4, r0
9001f3ca:	fb95 f5f3 	sdiv	r5, r5, r3
9001f3ce:	b2a4      	uxth	r4, r4
9001f3d0:	b131      	cbz	r1, 9001f3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001f3d2:	9b05      	ldr	r3, [sp, #20]
9001f3d4:	9901      	ldr	r1, [sp, #4]
9001f3d6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001f3da:	ba1b      	rev	r3, r3
9001f3dc:	4419      	add	r1, r3
9001f3de:	9101      	str	r1, [sp, #4]
9001f3e0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001f3e4:	b2ad      	uxth	r5, r5
9001f3e6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001f3ea:	4418      	add	r0, r3
9001f3ec:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001f3f0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001f3f4:	00ad      	lsls	r5, r5, #2
9001f3f6:	441a      	add	r2, r3
9001f3f8:	4b76      	ldr	r3, [pc, #472]	@ (9001f5d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f3fa:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001f3fe:	6818      	ldr	r0, [r3, #0]
9001f400:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001f404:	6803      	ldr	r3, [r0, #0]
9001f406:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f408:	4798      	blx	r3
9001f40a:	4973      	ldr	r1, [pc, #460]	@ (9001f5d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001f40c:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001f410:	2c00      	cmp	r4, #0
9001f412:	880b      	ldrh	r3, [r1, #0]
9001f414:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001f418:	910d      	str	r1, [sp, #52]	@ 0x34
9001f41a:	fb03 c202 	mla	r2, r3, r2, ip
9001f41e:	bf08      	it	eq
9001f420:	46dc      	moveq	ip, fp
9001f422:	fb03 f306 	mul.w	r3, r3, r6
9001f426:	bf18      	it	ne
9001f428:	f04f 0c00 	movne.w	ip, #0
9001f42c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f430:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001f434:	fa1f fc8c 	uxth.w	ip, ip
9001f438:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f43c:	9106      	str	r1, [sp, #24]
9001f43e:	9308      	str	r3, [sp, #32]
9001f440:	1d2b      	adds	r3, r5, #4
9001f442:	9309      	str	r3, [sp, #36]	@ 0x24
9001f444:	9b02      	ldr	r3, [sp, #8]
9001f446:	43da      	mvns	r2, r3
9001f448:	2300      	movs	r3, #0
9001f44a:	b2d2      	uxtb	r2, r2
9001f44c:	9303      	str	r3, [sp, #12]
9001f44e:	9207      	str	r2, [sp, #28]
9001f450:	9a08      	ldr	r2, [sp, #32]
9001f452:	4282      	cmp	r2, r0
9001f454:	f240 80b6 	bls.w	9001f5c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001f458:	b963      	cbnz	r3, 9001f474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001f45a:	9b01      	ldr	r3, [sp, #4]
9001f45c:	781a      	ldrb	r2, [r3, #0]
9001f45e:	0993      	lsrs	r3, r2, #6
9001f460:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001f464:	9203      	str	r2, [sp, #12]
9001f466:	1e5a      	subs	r2, r3, #1
9001f468:	2a02      	cmp	r2, #2
9001f46a:	d815      	bhi.n	9001f498 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001f46c:	9a01      	ldr	r2, [sp, #4]
9001f46e:	b29b      	uxth	r3, r3
9001f470:	3201      	adds	r2, #1
9001f472:	9201      	str	r2, [sp, #4]
9001f474:	b1b4      	cbz	r4, 9001f4a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001f476:	429c      	cmp	r4, r3
9001f478:	bf91      	iteee	ls
9001f47a:	1b1c      	subls	r4, r3, r4
9001f47c:	1ae4      	subhi	r4, r4, r3
9001f47e:	4666      	movhi	r6, ip
9001f480:	f04f 0800 	movhi.w	r8, #0
9001f484:	bf9b      	ittet	ls
9001f486:	fa1f f884 	uxthls.w	r8, r4
9001f48a:	2400      	movls	r4, #0
9001f48c:	b2a4      	uxthhi	r4, r4
9001f48e:	fa1f f68b 	uxthls.w	r6, fp
9001f492:	4643      	mov	r3, r8
9001f494:	46b4      	mov	ip, r6
9001f496:	e7db      	b.n	9001f450 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001f498:	9a01      	ldr	r2, [sp, #4]
9001f49a:	9b01      	ldr	r3, [sp, #4]
9001f49c:	3202      	adds	r2, #2
9001f49e:	785b      	ldrb	r3, [r3, #1]
9001f4a0:	9201      	str	r2, [sp, #4]
9001f4a2:	e7e7      	b.n	9001f474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001f4a4:	2203      	movs	r2, #3
9001f4a6:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001f4a8:	4563      	cmp	r3, ip
9001f4aa:	4615      	mov	r5, r2
9001f4ac:	9a03      	ldr	r2, [sp, #12]
9001f4ae:	bf2c      	ite	cs
9001f4b0:	eba3 080c 	subcs.w	r8, r3, ip
9001f4b4:	ebac 0603 	subcc.w	r6, ip, r3
9001f4b8:	fb15 1202 	smlabb	r2, r5, r2, r1
9001f4bc:	9905      	ldr	r1, [sp, #20]
9001f4be:	bf24      	itt	cs
9001f4c0:	fa1f f888 	uxthcs.w	r8, r8
9001f4c4:	46e1      	movcs	r9, ip
9001f4c6:	eb01 0502 	add.w	r5, r1, r2
9001f4ca:	9902      	ldr	r1, [sp, #8]
9001f4cc:	bf2f      	iteee	cs
9001f4ce:	4626      	movcs	r6, r4
9001f4d0:	b2b6      	uxthcc	r6, r6
9001f4d2:	4699      	movcc	r9, r3
9001f4d4:	46a0      	movcc	r8, r4
9001f4d6:	29ff      	cmp	r1, #255	@ 0xff
9001f4d8:	d04a      	beq.n	9001f570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001f4da:	9f06      	ldr	r7, [sp, #24]
9001f4dc:	46ca      	mov	sl, r9
9001f4de:	78a9      	ldrb	r1, [r5, #2]
9001f4e0:	9004      	str	r0, [sp, #16]
9001f4e2:	4379      	muls	r1, r7
9001f4e4:	910a      	str	r1, [sp, #40]	@ 0x28
9001f4e6:	7869      	ldrb	r1, [r5, #1]
9001f4e8:	4379      	muls	r1, r7
9001f4ea:	910b      	str	r1, [sp, #44]	@ 0x2c
9001f4ec:	9905      	ldr	r1, [sp, #20]
9001f4ee:	5c8a      	ldrb	r2, [r1, r2]
9001f4f0:	437a      	muls	r2, r7
9001f4f2:	920c      	str	r2, [sp, #48]	@ 0x30
9001f4f4:	f1ba 0f00 	cmp.w	sl, #0
9001f4f8:	d03d      	beq.n	9001f576 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001f4fa:	9a04      	ldr	r2, [sp, #16]
9001f4fc:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
9001f500:	9f07      	ldr	r7, [sp, #28]
9001f502:	8812      	ldrh	r2, [r2, #0]
9001f504:	fa1f fa8a 	uxth.w	sl, sl
9001f508:	46be      	mov	lr, r7
9001f50a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001f50c:	1215      	asrs	r5, r2, #8
9001f50e:	10d1      	asrs	r1, r2, #3
9001f510:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001f514:	00d2      	lsls	r2, r2, #3
9001f516:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001f51a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001f51e:	b2d2      	uxtb	r2, r2
9001f520:	fb05 750e 	mla	r5, r5, lr, r7
9001f524:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f528:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001f52a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f52e:	b2ad      	uxth	r5, r5
9001f530:	fb01 710e 	mla	r1, r1, lr, r7
9001f534:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001f536:	fb02 720e 	mla	r2, r2, lr, r7
9001f53a:	f105 0e01 	add.w	lr, r5, #1
9001f53e:	b289      	uxth	r1, r1
9001f540:	b292      	uxth	r2, r2
9001f542:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001f546:	f102 0e01 	add.w	lr, r2, #1
9001f54a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001f54e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001f552:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f556:	4315      	orrs	r5, r2
9001f558:	1c4a      	adds	r2, r1, #1
9001f55a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001f55e:	9a04      	ldr	r2, [sp, #16]
9001f560:	0949      	lsrs	r1, r1, #5
9001f562:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001f566:	430d      	orrs	r5, r1
9001f568:	f822 5b02 	strh.w	r5, [r2], #2
9001f56c:	9204      	str	r2, [sp, #16]
9001f56e:	e7c1      	b.n	9001f4f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001f570:	4649      	mov	r1, r9
9001f572:	4686      	mov	lr, r0
9001f574:	b999      	cbnz	r1, 9001f59e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001f576:	4563      	cmp	r3, ip
9001f578:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001f57c:	d389      	bcc.n	9001f492 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f57e:	fa1f f68b 	uxth.w	r6, fp
9001f582:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001f586:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f588:	1ba4      	subs	r4, r4, r6
9001f58a:	881b      	ldrh	r3, [r3, #0]
9001f58c:	b2a4      	uxth	r4, r4
9001f58e:	eba3 030b 	sub.w	r3, r3, fp
9001f592:	2c00      	cmp	r4, #0
9001f594:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f598:	bf18      	it	ne
9001f59a:	2600      	movne	r6, #0
9001f59c:	e779      	b.n	9001f492 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f59e:	78aa      	ldrb	r2, [r5, #2]
9001f5a0:	3901      	subs	r1, #1
9001f5a2:	4f0e      	ldr	r7, [pc, #56]	@ (9001f5dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001f5a4:	b289      	uxth	r1, r1
9001f5a6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001f5aa:	786a      	ldrb	r2, [r5, #1]
9001f5ac:	00d2      	lsls	r2, r2, #3
9001f5ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f5b2:	ea4a 0202 	orr.w	r2, sl, r2
9001f5b6:	f895 a000 	ldrb.w	sl, [r5]
9001f5ba:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001f5be:	f82e 2b02 	strh.w	r2, [lr], #2
9001f5c2:	e7d7      	b.n	9001f574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001f5c4:	4b03      	ldr	r3, [pc, #12]	@ (9001f5d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f5c6:	6818      	ldr	r0, [r3, #0]
9001f5c8:	6803      	ldr	r3, [r0, #0]
9001f5ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f5cc:	4798      	blx	r3
9001f5ce:	b013      	add	sp, #76	@ 0x4c
9001f5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f5d4:	2402340c 	.word	0x2402340c
9001f5d8:	24023406 	.word	0x24023406
9001f5dc:	fffff800 	.word	0xfffff800

9001f5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f5e4:	b09d      	sub	sp, #116	@ 0x74
9001f5e6:	461c      	mov	r4, r3
9001f5e8:	4683      	mov	fp, r0
9001f5ea:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f5ec:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001f5f0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001f5f4:	920e      	str	r2, [sp, #56]	@ 0x38
9001f5f6:	2a00      	cmp	r2, #0
9001f5f8:	f000 81e4 	beq.w	9001f9c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001f5fc:	6820      	ldr	r0, [r4, #0]
9001f5fe:	aa18      	add	r2, sp, #96	@ 0x60
9001f600:	6861      	ldr	r1, [r4, #4]
9001f602:	c203      	stmia	r2!, {r0, r1}
9001f604:	6818      	ldr	r0, [r3, #0]
9001f606:	aa1a      	add	r2, sp, #104	@ 0x68
9001f608:	6859      	ldr	r1, [r3, #4]
9001f60a:	c203      	stmia	r2!, {r0, r1}
9001f60c:	a818      	add	r0, sp, #96	@ 0x60
9001f60e:	f7f8 fd85 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f612:	4621      	mov	r1, r4
9001f614:	a81a      	add	r0, sp, #104	@ 0x68
9001f616:	f7f8 fda9 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f61a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001f61e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001f622:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f626:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001f62a:	bfdb      	ittet	le
9001f62c:	b29a      	uxthle	r2, r3
9001f62e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f632:	2201      	movgt	r2, #1
9001f634:	fb91 f2f2 	sdivle	r2, r1, r2
9001f638:	9202      	str	r2, [sp, #8]
9001f63a:	9802      	ldr	r0, [sp, #8]
9001f63c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001f640:	9902      	ldr	r1, [sp, #8]
9001f642:	fb92 f0f0 	sdiv	r0, r2, r0
9001f646:	b280      	uxth	r0, r0
9001f648:	440c      	add	r4, r1
9001f64a:	900f      	str	r0, [sp, #60]	@ 0x3c
9001f64c:	3c01      	subs	r4, #1
9001f64e:	9802      	ldr	r0, [sp, #8]
9001f650:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001f652:	fb05 2510 	mls	r5, r5, r0, r2
9001f656:	fb94 f4f1 	sdiv	r4, r4, r1
9001f65a:	fb15 f503 	smulbb	r5, r5, r3
9001f65e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001f662:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001f666:	3401      	adds	r4, #1
9001f668:	440d      	add	r5, r1
9001f66a:	4419      	add	r1, r3
9001f66c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001f670:	b2a4      	uxth	r4, r4
9001f672:	441a      	add	r2, r3
9001f674:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f678:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001f67c:	00a4      	lsls	r4, r4, #2
9001f67e:	9306      	str	r3, [sp, #24]
9001f680:	b2ad      	uxth	r5, r5
9001f682:	4bb3      	ldr	r3, [pc, #716]	@ (9001f950 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001f684:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001f688:	6818      	ldr	r0, [r3, #0]
9001f68a:	6803      	ldr	r3, [r0, #0]
9001f68c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f68e:	4798      	blx	r3
9001f690:	4bb0      	ldr	r3, [pc, #704]	@ (9001f954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001f692:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001f696:	2d00      	cmp	r5, #0
9001f698:	881a      	ldrh	r2, [r3, #0]
9001f69a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001f69e:	fb02 f606 	mul.w	r6, r2, r6
9001f6a2:	fb02 7101 	mla	r1, r2, r1, r7
9001f6a6:	9316      	str	r3, [sp, #88]	@ 0x58
9001f6a8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001f6ac:	4baa      	ldr	r3, [pc, #680]	@ (9001f958 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001f6ae:	bf18      	it	ne
9001f6b0:	2100      	movne	r1, #0
9001f6b2:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001f6b6:	eba3 030b 	sub.w	r3, r3, fp
9001f6ba:	920a      	str	r2, [sp, #40]	@ 0x28
9001f6bc:	f104 0204 	add.w	r2, r4, #4
9001f6c0:	9317      	str	r3, [sp, #92]	@ 0x5c
9001f6c2:	9213      	str	r2, [sp, #76]	@ 0x4c
9001f6c4:	9a06      	ldr	r2, [sp, #24]
9001f6c6:	bf08      	it	eq
9001f6c8:	4611      	moveq	r1, r2
9001f6ca:	2200      	movs	r2, #0
9001f6cc:	b289      	uxth	r1, r1
9001f6ce:	920d      	str	r2, [sp, #52]	@ 0x34
9001f6d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001f6d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f6d4:	fa12 f383 	uxtah	r3, r2, r3
9001f6d8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f6da:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f6de:	3304      	adds	r3, #4
9001f6e0:	9308      	str	r3, [sp, #32]
9001f6e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f6e4:	4543      	cmp	r3, r8
9001f6e6:	f240 8168 	bls.w	9001f9ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001f6ea:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001f6ee:	f04f 0e01 	mov.w	lr, #1
9001f6f2:	9a02      	ldr	r2, [sp, #8]
9001f6f4:	9808      	ldr	r0, [sp, #32]
9001f6f6:	fbb5 f3f3 	udiv	r3, r5, r3
9001f6fa:	1ad3      	subs	r3, r2, r3
9001f6fc:	7800      	ldrb	r0, [r0, #0]
9001f6fe:	b29b      	uxth	r3, r3
9001f700:	9010      	str	r0, [sp, #64]	@ 0x40
9001f702:	3001      	adds	r0, #1
9001f704:	9314      	str	r3, [sp, #80]	@ 0x50
9001f706:	9b08      	ldr	r3, [sp, #32]
9001f708:	9007      	str	r0, [sp, #28]
9001f70a:	785a      	ldrb	r2, [r3, #1]
9001f70c:	789b      	ldrb	r3, [r3, #2]
9001f70e:	021b      	lsls	r3, r3, #8
9001f710:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f714:	9a08      	ldr	r2, [sp, #32]
9001f716:	78d2      	ldrb	r2, [r2, #3]
9001f718:	4313      	orrs	r3, r2
9001f71a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001f71c:	441a      	add	r2, r3
9001f71e:	1c50      	adds	r0, r2, #1
9001f720:	7852      	ldrb	r2, [r2, #1]
9001f722:	9005      	str	r0, [sp, #20]
9001f724:	0212      	lsls	r2, r2, #8
9001f726:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001f728:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001f72c:	5cc3      	ldrb	r3, [r0, r3]
9001f72e:	431a      	orrs	r2, r3
9001f730:	b293      	uxth	r3, r2
9001f732:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001f736:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f738:	2300      	movs	r3, #0
9001f73a:	9309      	str	r3, [sp, #36]	@ 0x24
9001f73c:	2301      	movs	r3, #1
9001f73e:	9301      	str	r3, [sp, #4]
9001f740:	9304      	str	r3, [sp, #16]
9001f742:	2300      	movs	r3, #0
9001f744:	9303      	str	r3, [sp, #12]
9001f746:	2d00      	cmp	r5, #0
9001f748:	d07d      	beq.n	9001f846 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001f74a:	45ae      	cmp	lr, r5
9001f74c:	d26c      	bcs.n	9001f828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001f74e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f750:	eba5 050e 	sub.w	r5, r5, lr
9001f754:	460c      	mov	r4, r1
9001f756:	4543      	cmp	r3, r8
9001f758:	b2ad      	uxth	r5, r5
9001f75a:	d802      	bhi.n	9001f762 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001f75c:	e071      	b.n	9001f842 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001f75e:	2b00      	cmp	r3, #0
9001f760:	d15d      	bne.n	9001f81e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001f762:	9b05      	ldr	r3, [sp, #20]
9001f764:	9a04      	ldr	r2, [sp, #16]
9001f766:	785b      	ldrb	r3, [r3, #1]
9001f768:	f1c2 0207 	rsb	r2, r2, #7
9001f76c:	9904      	ldr	r1, [sp, #16]
9001f76e:	4093      	lsls	r3, r2
9001f770:	005b      	lsls	r3, r3, #1
9001f772:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f776:	9b05      	ldr	r3, [sp, #20]
9001f778:	781b      	ldrb	r3, [r3, #0]
9001f77a:	410b      	asrs	r3, r1
9001f77c:	3101      	adds	r1, #1
9001f77e:	b2c9      	uxtb	r1, r1
9001f780:	b2db      	uxtb	r3, r3
9001f782:	2908      	cmp	r1, #8
9001f784:	9104      	str	r1, [sp, #16]
9001f786:	9905      	ldr	r1, [sp, #20]
9001f788:	ea43 0302 	orr.w	r3, r3, r2
9001f78c:	bf0c      	ite	eq
9001f78e:	3102      	addeq	r1, #2
9001f790:	3101      	addne	r1, #1
9001f792:	b29a      	uxth	r2, r3
9001f794:	bf05      	ittet	eq
9001f796:	9105      	streq	r1, [sp, #20]
9001f798:	2100      	moveq	r1, #0
9001f79a:	9105      	strne	r1, [sp, #20]
9001f79c:	9104      	streq	r1, [sp, #16]
9001f79e:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001f7a0:	4291      	cmp	r1, r2
9001f7a2:	d30a      	bcc.n	9001f7ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001f7a4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001f7a8:	2301      	movs	r3, #1
9001f7aa:	9907      	ldr	r1, [sp, #28]
9001f7ac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001f7b0:	d30f      	bcc.n	9001f7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f7b2:	2100      	movs	r1, #0
9001f7b4:	9301      	str	r3, [sp, #4]
9001f7b6:	9103      	str	r1, [sp, #12]
9001f7b8:	e032      	b.n	9001f820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001f7ba:	9b07      	ldr	r3, [sp, #28]
9001f7bc:	429a      	cmp	r2, r3
9001f7be:	d318      	bcc.n	9001f7f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001f7c0:	9b01      	ldr	r3, [sp, #4]
9001f7c2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001f7c6:	445b      	add	r3, fp
9001f7c8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001f7cc:	9b01      	ldr	r3, [sp, #4]
9001f7ce:	3301      	adds	r3, #1
9001f7d0:	b29b      	uxth	r3, r3
9001f7d2:	9907      	ldr	r1, [sp, #28]
9001f7d4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001f7d8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f7dc:	7108      	strb	r0, [r1, #4]
9001f7de:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001f7e0:	80c8      	strh	r0, [r1, #6]
9001f7e2:	9801      	ldr	r0, [sp, #4]
9001f7e4:	3001      	adds	r0, #1
9001f7e6:	7148      	strb	r0, [r1, #5]
9001f7e8:	9907      	ldr	r1, [sp, #28]
9001f7ea:	3101      	adds	r1, #1
9001f7ec:	b289      	uxth	r1, r1
9001f7ee:	9107      	str	r1, [sp, #28]
9001f7f0:	e7df      	b.n	9001f7b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001f7f2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001f7f6:	4611      	mov	r1, r2
9001f7f8:	795b      	ldrb	r3, [r3, #5]
9001f7fa:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001f7fe:	4458      	add	r0, fp
9001f800:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001f802:	4406      	add	r6, r0
9001f804:	2e00      	cmp	r6, #0
9001f806:	dd06      	ble.n	9001f816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f808:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f80c:	790e      	ldrb	r6, [r1, #4]
9001f80e:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001f812:	88c9      	ldrh	r1, [r1, #6]
9001f814:	e7f4      	b.n	9001f800 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001f816:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001f81a:	b29b      	uxth	r3, r3
9001f81c:	e7c5      	b.n	9001f7aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001f81e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f820:	4621      	mov	r1, r4
9001f822:	920b      	str	r2, [sp, #44]	@ 0x2c
9001f824:	469e      	mov	lr, r3
9001f826:	e78e      	b.n	9001f746 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001f828:	9a03      	ldr	r2, [sp, #12]
9001f82a:	ebae 0305 	sub.w	r3, lr, r5
9001f82e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f832:	442a      	add	r2, r5
9001f834:	b29b      	uxth	r3, r3
9001f836:	b292      	uxth	r2, r2
9001f838:	9203      	str	r2, [sp, #12]
9001f83a:	2500      	movs	r5, #0
9001f83c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f83e:	4542      	cmp	r2, r8
9001f840:	d88d      	bhi.n	9001f75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f842:	4621      	mov	r1, r4
9001f844:	e74d      	b.n	9001f6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001f846:	458e      	cmp	lr, r1
9001f848:	f04f 0900 	mov.w	r9, #0
9001f84c:	bf2b      	itete	cs
9001f84e:	ebae 0301 	subcs.w	r3, lr, r1
9001f852:	eba1 040e 	subcc.w	r4, r1, lr
9001f856:	462c      	movcs	r4, r5
9001f858:	462b      	movcc	r3, r5
9001f85a:	bf27      	ittee	cs
9001f85c:	b29b      	uxthcs	r3, r3
9001f85e:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001f860:	b2a4      	uxthcc	r4, r4
9001f862:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001f866:	9a03      	ldr	r2, [sp, #12]
9001f868:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001f86a:	444a      	add	r2, r9
9001f86c:	4548      	cmp	r0, r9
9001f86e:	b292      	uxth	r2, r2
9001f870:	d074      	beq.n	9001f95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f872:	2004      	movs	r0, #4
9001f874:	445a      	add	r2, fp
9001f876:	4605      	mov	r5, r0
9001f878:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001f87c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f87e:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f882:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001f884:	5880      	ldr	r0, [r0, r2]
9001f886:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f88a:	d014      	beq.n	9001f8b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f88c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001f890:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f894:	d112      	bne.n	9001f8bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f896:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f898:	2aff      	cmp	r2, #255	@ 0xff
9001f89a:	d10f      	bne.n	9001f8bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f89c:	0942      	lsrs	r2, r0, #5
9001f89e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001f8a2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f8a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f8aa:	f025 0507 	bic.w	r5, r5, #7
9001f8ae:	4315      	orrs	r5, r2
9001f8b0:	4305      	orrs	r5, r0
9001f8b2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f8b6:	f109 0901 	add.w	r9, r9, #1
9001f8ba:	e7d4      	b.n	9001f866 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f8bc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f8c0:	b2ed      	uxtb	r5, r5
9001f8c2:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f8c6:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f8ca:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001f8ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f8d2:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f8d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f8da:	9215      	str	r2, [sp, #84]	@ 0x54
9001f8dc:	fa5f fc8c 	uxtb.w	ip, ip
9001f8e0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f8e2:	b2c0      	uxtb	r0, r0
9001f8e4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f8e8:	fb02 fa0a 	mul.w	sl, r2, sl
9001f8ec:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f8f0:	f10a 0201 	add.w	r2, sl, #1
9001f8f4:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f8f8:	1212      	asrs	r2, r2, #8
9001f8fa:	fa1f fa82 	uxth.w	sl, r2
9001f8fe:	43d2      	mvns	r2, r2
9001f900:	fb16 f60a 	smulbb	r6, r6, sl
9001f904:	b2d2      	uxtb	r2, r2
9001f906:	fb10 f00a 	smulbb	r0, r0, sl
9001f90a:	fb07 6702 	mla	r7, r7, r2, r6
9001f90e:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001f910:	fb0c 0002 	mla	r0, ip, r2, r0
9001f914:	fb15 f50a 	smulbb	r5, r5, sl
9001f918:	b2bf      	uxth	r7, r7
9001f91a:	b280      	uxth	r0, r0
9001f91c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f920:	fb06 5602 	mla	r6, r6, r2, r5
9001f924:	1c7a      	adds	r2, r7, #1
9001f926:	1c45      	adds	r5, r0, #1
9001f928:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f92c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f930:	b2b6      	uxth	r6, r6
9001f932:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f936:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f93a:	432f      	orrs	r7, r5
9001f93c:	1c75      	adds	r5, r6, #1
9001f93e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f942:	096d      	lsrs	r5, r5, #5
9001f944:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f948:	432f      	orrs	r7, r5
9001f94a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f94e:	e7b2      	b.n	9001f8b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f950:	2402340c 	.word	0x2402340c
9001f954:	24023406 	.word	0x24023406
9001f958:	fffff7fb 	.word	0xfffff7fb
9001f95c:	9203      	str	r2, [sp, #12]
9001f95e:	458e      	cmp	lr, r1
9001f960:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001f962:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f966:	f4ff af68 	bcc.w	9001f83a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f96a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001f96c:	9906      	ldr	r1, [sp, #24]
9001f96e:	8812      	ldrh	r2, [r2, #0]
9001f970:	1a52      	subs	r2, r2, r1
9001f972:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001f974:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f978:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f97a:	3201      	adds	r2, #1
9001f97c:	428a      	cmp	r2, r1
9001f97e:	9209      	str	r2, [sp, #36]	@ 0x24
9001f980:	d111      	bne.n	9001f9a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f982:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001f986:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001f98a:	9b06      	ldr	r3, [sp, #24]
9001f98c:	eba5 0509 	sub.w	r5, r5, r9
9001f990:	b2ad      	uxth	r5, r5
9001f992:	2d00      	cmp	r5, #0
9001f994:	bf08      	it	eq
9001f996:	4619      	moveq	r1, r3
9001f998:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f99a:	bf18      	it	ne
9001f99c:	2100      	movne	r1, #0
9001f99e:	3301      	adds	r3, #1
9001f9a0:	b289      	uxth	r1, r1
9001f9a2:	930d      	str	r3, [sp, #52]	@ 0x34
9001f9a4:	e694      	b.n	9001f6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f9a6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f9aa:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001f9ae:	1b2d      	subs	r5, r5, r4
9001f9b0:	b2ad      	uxth	r5, r5
9001f9b2:	2d00      	cmp	r5, #0
9001f9b4:	bf18      	it	ne
9001f9b6:	2400      	movne	r4, #0
9001f9b8:	e740      	b.n	9001f83c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f9ba:	4b04      	ldr	r3, [pc, #16]	@ (9001f9cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f9bc:	6818      	ldr	r0, [r3, #0]
9001f9be:	6803      	ldr	r3, [r0, #0]
9001f9c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f9c2:	4798      	blx	r3
9001f9c4:	b01d      	add	sp, #116	@ 0x74
9001f9c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f9ca:	bf00      	nop
9001f9cc:	2402340c 	.word	0x2402340c

9001f9d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f9d4:	b09f      	sub	sp, #124	@ 0x7c
9001f9d6:	461d      	mov	r5, r3
9001f9d8:	4604      	mov	r4, r0
9001f9da:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f9dc:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001f9e0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001f9e4:	920a      	str	r2, [sp, #40]	@ 0x28
9001f9e6:	2a00      	cmp	r2, #0
9001f9e8:	f000 81fe 	beq.w	9001fde8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f9ec:	6828      	ldr	r0, [r5, #0]
9001f9ee:	aa1a      	add	r2, sp, #104	@ 0x68
9001f9f0:	6869      	ldr	r1, [r5, #4]
9001f9f2:	c203      	stmia	r2!, {r0, r1}
9001f9f4:	6818      	ldr	r0, [r3, #0]
9001f9f6:	aa1c      	add	r2, sp, #112	@ 0x70
9001f9f8:	6859      	ldr	r1, [r3, #4]
9001f9fa:	c203      	stmia	r2!, {r0, r1}
9001f9fc:	a81a      	add	r0, sp, #104	@ 0x68
9001f9fe:	f7f8 fb8d 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa02:	4629      	mov	r1, r5
9001fa04:	a81c      	add	r0, sp, #112	@ 0x70
9001fa06:	f7f8 fbb1 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fa0a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001fa0e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001fa12:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001fa16:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001fa1a:	bfdb      	ittet	le
9001fa1c:	b29a      	uxthle	r2, r3
9001fa1e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001fa22:	2201      	movgt	r2, #1
9001fa24:	fb91 f2f2 	sdivle	r2, r1, r2
9001fa28:	9201      	str	r2, [sp, #4]
9001fa2a:	9801      	ldr	r0, [sp, #4]
9001fa2c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001fa30:	9901      	ldr	r1, [sp, #4]
9001fa32:	fb92 f0f0 	sdiv	r0, r2, r0
9001fa36:	b280      	uxth	r0, r0
9001fa38:	440e      	add	r6, r1
9001fa3a:	9010      	str	r0, [sp, #64]	@ 0x40
9001fa3c:	3e01      	subs	r6, #1
9001fa3e:	9801      	ldr	r0, [sp, #4]
9001fa40:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001fa42:	fb05 2510 	mls	r5, r5, r0, r2
9001fa46:	fb96 f6f1 	sdiv	r6, r6, r1
9001fa4a:	fb15 f503 	smulbb	r5, r5, r3
9001fa4e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001fa52:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001fa56:	3601      	adds	r6, #1
9001fa58:	440d      	add	r5, r1
9001fa5a:	4419      	add	r1, r3
9001fa5c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001fa60:	b2b6      	uxth	r6, r6
9001fa62:	441a      	add	r2, r3
9001fa64:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001fa68:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001fa6c:	b2ad      	uxth	r5, r5
9001fa6e:	9304      	str	r3, [sp, #16]
9001fa70:	4b96      	ldr	r3, [pc, #600]	@ (9001fccc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001fa72:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001fa76:	6818      	ldr	r0, [r3, #0]
9001fa78:	6803      	ldr	r3, [r0, #0]
9001fa7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001fa7c:	4798      	blx	r3
9001fa7e:	4b94      	ldr	r3, [pc, #592]	@ (9001fcd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001fa80:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001fa84:	2d00      	cmp	r5, #0
9001fa86:	881a      	ldrh	r2, [r3, #0]
9001fa88:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001fa8c:	fb02 f707 	mul.w	r7, r2, r7
9001fa90:	fb02 c101 	mla	r1, r2, r1, ip
9001fa94:	9318      	str	r3, [sp, #96]	@ 0x60
9001fa96:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001fa9a:	4b8e      	ldr	r3, [pc, #568]	@ (9001fcd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001fa9c:	bf18      	it	ne
9001fa9e:	2100      	movne	r1, #0
9001faa0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001faa4:	eba3 0304 	sub.w	r3, r3, r4
9001faa8:	920b      	str	r2, [sp, #44]	@ 0x2c
9001faaa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001faac:	9319      	str	r3, [sp, #100]	@ 0x64
9001faae:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001fab2:	f106 0204 	add.w	r2, r6, #4
9001fab6:	9206      	str	r2, [sp, #24]
9001fab8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001faba:	ea6f 0202 	mvn.w	r2, r2
9001fabe:	b2d2      	uxtb	r2, r2
9001fac0:	9215      	str	r2, [sp, #84]	@ 0x54
9001fac2:	9a04      	ldr	r2, [sp, #16]
9001fac4:	bf08      	it	eq
9001fac6:	4611      	moveq	r1, r2
9001fac8:	2200      	movs	r2, #0
9001faca:	b289      	uxth	r1, r1
9001facc:	920d      	str	r2, [sp, #52]	@ 0x34
9001face:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001fad0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001fad2:	fa12 f383 	uxtah	r3, r2, r3
9001fad6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001fad8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001fadc:	3304      	adds	r3, #4
9001fade:	9307      	str	r3, [sp, #28]
9001fae0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fae2:	455b      	cmp	r3, fp
9001fae4:	f240 817b 	bls.w	9001fdde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001fae8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001faec:	f04f 0801 	mov.w	r8, #1
9001faf0:	9a01      	ldr	r2, [sp, #4]
9001faf2:	9807      	ldr	r0, [sp, #28]
9001faf4:	46c4      	mov	ip, r8
9001faf6:	f8cd 8008 	str.w	r8, [sp, #8]
9001fafa:	7800      	ldrb	r0, [r0, #0]
9001fafc:	fbb5 f3f3 	udiv	r3, r5, r3
9001fb00:	1ad3      	subs	r3, r2, r3
9001fb02:	9011      	str	r0, [sp, #68]	@ 0x44
9001fb04:	3001      	adds	r0, #1
9001fb06:	b29b      	uxth	r3, r3
9001fb08:	9005      	str	r0, [sp, #20]
9001fb0a:	9316      	str	r3, [sp, #88]	@ 0x58
9001fb0c:	9b07      	ldr	r3, [sp, #28]
9001fb0e:	785a      	ldrb	r2, [r3, #1]
9001fb10:	789b      	ldrb	r3, [r3, #2]
9001fb12:	021b      	lsls	r3, r3, #8
9001fb14:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001fb18:	9a07      	ldr	r2, [sp, #28]
9001fb1a:	78d2      	ldrb	r2, [r2, #3]
9001fb1c:	4313      	orrs	r3, r2
9001fb1e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001fb20:	441a      	add	r2, r3
9001fb22:	1c50      	adds	r0, r2, #1
9001fb24:	7852      	ldrb	r2, [r2, #1]
9001fb26:	9003      	str	r0, [sp, #12]
9001fb28:	0212      	lsls	r2, r2, #8
9001fb2a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001fb2c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001fb30:	5cc3      	ldrb	r3, [r0, r3]
9001fb32:	431a      	orrs	r2, r3
9001fb34:	b293      	uxth	r3, r2
9001fb36:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001fb3a:	930c      	str	r3, [sp, #48]	@ 0x30
9001fb3c:	2300      	movs	r3, #0
9001fb3e:	9308      	str	r3, [sp, #32]
9001fb40:	461a      	mov	r2, r3
9001fb42:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001fb46:	930e      	str	r3, [sp, #56]	@ 0x38
9001fb48:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001fb4c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001fb4e:	2d00      	cmp	r5, #0
9001fb50:	d07d      	beq.n	9001fc4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001fb52:	45ac      	cmp	ip, r5
9001fb54:	d26d      	bcs.n	9001fc32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001fb56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fb58:	eba5 050c 	sub.w	r5, r5, ip
9001fb5c:	4608      	mov	r0, r1
9001fb5e:	455b      	cmp	r3, fp
9001fb60:	b2ad      	uxth	r5, r5
9001fb62:	d802      	bhi.n	9001fb6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001fb64:	e071      	b.n	9001fc4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001fb66:	2b00      	cmp	r3, #0
9001fb68:	d15d      	bne.n	9001fc26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001fb6a:	9b03      	ldr	r3, [sp, #12]
9001fb6c:	9a02      	ldr	r2, [sp, #8]
9001fb6e:	785b      	ldrb	r3, [r3, #1]
9001fb70:	f1c2 0207 	rsb	r2, r2, #7
9001fb74:	9902      	ldr	r1, [sp, #8]
9001fb76:	4093      	lsls	r3, r2
9001fb78:	005b      	lsls	r3, r3, #1
9001fb7a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001fb7e:	9b03      	ldr	r3, [sp, #12]
9001fb80:	781b      	ldrb	r3, [r3, #0]
9001fb82:	410b      	asrs	r3, r1
9001fb84:	3101      	adds	r1, #1
9001fb86:	b2c9      	uxtb	r1, r1
9001fb88:	b2db      	uxtb	r3, r3
9001fb8a:	2908      	cmp	r1, #8
9001fb8c:	9102      	str	r1, [sp, #8]
9001fb8e:	9903      	ldr	r1, [sp, #12]
9001fb90:	ea43 0302 	orr.w	r3, r3, r2
9001fb94:	bf0c      	ite	eq
9001fb96:	3102      	addeq	r1, #2
9001fb98:	3101      	addne	r1, #1
9001fb9a:	b29a      	uxth	r2, r3
9001fb9c:	bf05      	ittet	eq
9001fb9e:	9103      	streq	r1, [sp, #12]
9001fba0:	2100      	moveq	r1, #0
9001fba2:	9103      	strne	r1, [sp, #12]
9001fba4:	9102      	streq	r1, [sp, #8]
9001fba6:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001fba8:	4291      	cmp	r1, r2
9001fbaa:	d30a      	bcc.n	9001fbc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001fbac:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001fbb0:	2301      	movs	r3, #1
9001fbb2:	9905      	ldr	r1, [sp, #20]
9001fbb4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001fbb8:	d30f      	bcc.n	9001fbda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001fbba:	2100      	movs	r1, #0
9001fbbc:	4698      	mov	r8, r3
9001fbbe:	9100      	str	r1, [sp, #0]
9001fbc0:	e032      	b.n	9001fc28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001fbc2:	9b05      	ldr	r3, [sp, #20]
9001fbc4:	429a      	cmp	r2, r3
9001fbc6:	d318      	bcc.n	9001fbfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001fbc8:	eb04 0308 	add.w	r3, r4, r8
9001fbcc:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001fbd0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001fbd4:	f108 0301 	add.w	r3, r8, #1
9001fbd8:	b29b      	uxth	r3, r3
9001fbda:	9905      	ldr	r1, [sp, #20]
9001fbdc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001fbe0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001fbe4:	710e      	strb	r6, [r1, #4]
9001fbe6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001fbe8:	80ce      	strh	r6, [r1, #6]
9001fbea:	f108 0601 	add.w	r6, r8, #1
9001fbee:	714e      	strb	r6, [r1, #5]
9001fbf0:	9905      	ldr	r1, [sp, #20]
9001fbf2:	3101      	adds	r1, #1
9001fbf4:	b289      	uxth	r1, r1
9001fbf6:	9105      	str	r1, [sp, #20]
9001fbf8:	e7df      	b.n	9001fbba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001fbfa:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001fbfe:	4611      	mov	r1, r2
9001fc00:	795b      	ldrb	r3, [r3, #5]
9001fc02:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001fc06:	4426      	add	r6, r4
9001fc08:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001fc0a:	4437      	add	r7, r6
9001fc0c:	2f00      	cmp	r7, #0
9001fc0e:	dd06      	ble.n	9001fc1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001fc10:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001fc14:	790f      	ldrb	r7, [r1, #4]
9001fc16:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001fc1a:	88c9      	ldrh	r1, [r1, #6]
9001fc1c:	e7f4      	b.n	9001fc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001fc1e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001fc22:	b29b      	uxth	r3, r3
9001fc24:	e7c5      	b.n	9001fbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001fc26:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001fc28:	920c      	str	r2, [sp, #48]	@ 0x30
9001fc2a:	4601      	mov	r1, r0
9001fc2c:	9a00      	ldr	r2, [sp, #0]
9001fc2e:	469c      	mov	ip, r3
9001fc30:	e78d      	b.n	9001fb4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001fc32:	ebac 0305 	sub.w	r3, ip, r5
9001fc36:	1957      	adds	r7, r2, r5
9001fc38:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001fc3c:	b2ba      	uxth	r2, r7
9001fc3e:	b29b      	uxth	r3, r3
9001fc40:	9200      	str	r2, [sp, #0]
9001fc42:	2500      	movs	r5, #0
9001fc44:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001fc46:	455a      	cmp	r2, fp
9001fc48:	d88d      	bhi.n	9001fb66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001fc4a:	4601      	mov	r1, r0
9001fc4c:	e748      	b.n	9001fae0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001fc4e:	458c      	cmp	ip, r1
9001fc50:	bf27      	ittee	cs
9001fc52:	ebac 0301 	subcs.w	r3, ip, r1
9001fc56:	4628      	movcs	r0, r5
9001fc58:	eba1 000c 	subcc.w	r0, r1, ip
9001fc5c:	462b      	movcc	r3, r5
9001fc5e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001fc60:	bf27      	ittee	cs
9001fc62:	b29b      	uxthcs	r3, r3
9001fc64:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001fc66:	b280      	uxthcc	r0, r0
9001fc68:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001fc6c:	2dff      	cmp	r5, #255	@ 0xff
9001fc6e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001fc70:	eb02 0705 	add.w	r7, r2, r5
9001fc74:	b2bd      	uxth	r5, r7
9001fc76:	9500      	str	r5, [sp, #0]
9001fc78:	d12e      	bne.n	9001fcd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001fc7a:	465e      	mov	r6, fp
9001fc7c:	9d00      	ldr	r5, [sp, #0]
9001fc7e:	42aa      	cmp	r2, r5
9001fc80:	f040 8083 	bne.w	9001fd8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001fc84:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001fc86:	458c      	cmp	ip, r1
9001fc88:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001fc8c:	d3d9      	bcc.n	9001fc42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001fc8e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001fc90:	9904      	ldr	r1, [sp, #16]
9001fc92:	8812      	ldrh	r2, [r2, #0]
9001fc94:	1a52      	subs	r2, r2, r1
9001fc96:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001fc98:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001fc9c:	9a08      	ldr	r2, [sp, #32]
9001fc9e:	3201      	adds	r2, #1
9001fca0:	428a      	cmp	r2, r1
9001fca2:	9208      	str	r2, [sp, #32]
9001fca4:	f040 8091 	bne.w	9001fdca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001fca8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001fcac:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001fcb0:	9b04      	ldr	r3, [sp, #16]
9001fcb2:	eba5 050c 	sub.w	r5, r5, ip
9001fcb6:	b2ad      	uxth	r5, r5
9001fcb8:	2d00      	cmp	r5, #0
9001fcba:	bf08      	it	eq
9001fcbc:	4619      	moveq	r1, r3
9001fcbe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001fcc0:	bf18      	it	ne
9001fcc2:	2100      	movne	r1, #0
9001fcc4:	3301      	adds	r3, #1
9001fcc6:	b289      	uxth	r1, r1
9001fcc8:	930d      	str	r3, [sp, #52]	@ 0x34
9001fcca:	e700      	b.n	9001face <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001fccc:	2402340c 	.word	0x2402340c
9001fcd0:	24023406 	.word	0x24023406
9001fcd4:	fffff7fb 	.word	0xfffff7fb
9001fcd8:	46d9      	mov	r9, fp
9001fcda:	9d00      	ldr	r5, [sp, #0]
9001fcdc:	42aa      	cmp	r2, r5
9001fcde:	d0d1      	beq.n	9001fc84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001fce0:	1c55      	adds	r5, r2, #1
9001fce2:	4422      	add	r2, r4
9001fce4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001fce8:	9a06      	ldr	r2, [sp, #24]
9001fcea:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001fcee:	9517      	str	r5, [sp, #92]	@ 0x5c
9001fcf0:	4472      	add	r2, lr
9001fcf2:	9212      	str	r2, [sp, #72]	@ 0x48
9001fcf4:	f8b9 2000 	ldrh.w	r2, [r9]
9001fcf8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001fcfa:	1216      	asrs	r6, r2, #8
9001fcfc:	f897 a002 	ldrb.w	sl, [r7, #2]
9001fd00:	10d5      	asrs	r5, r2, #3
9001fd02:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001fd04:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fd08:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fd0c:	00d2      	lsls	r2, r2, #3
9001fd0e:	fb1a fa07 	smulbb	sl, sl, r7
9001fd12:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fd16:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001fd18:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fd1c:	b2d2      	uxtb	r2, r2
9001fd1e:	fb06 a607 	mla	r6, r6, r7, sl
9001fd22:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001fd24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fd28:	f897 a001 	ldrb.w	sl, [r7, #1]
9001fd2c:	b2b6      	uxth	r6, r6
9001fd2e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001fd30:	fb1a fa07 	smulbb	sl, sl, r7
9001fd34:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001fd36:	fb05 a507 	mla	r5, r5, r7, sl
9001fd3a:	9f06      	ldr	r7, [sp, #24]
9001fd3c:	f106 0a01 	add.w	sl, r6, #1
9001fd40:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001fd44:	b2ad      	uxth	r5, r5
9001fd46:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001fd48:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001fd4c:	f105 0a01 	add.w	sl, r5, #1
9001fd50:	fb1e fe07 	smulbb	lr, lr, r7
9001fd54:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001fd56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001fd5a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001fd5e:	fb02 e207 	mla	r2, r2, r7, lr
9001fd62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fd66:	b292      	uxth	r2, r2
9001fd68:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001fd6c:	f102 0e01 	add.w	lr, r2, #1
9001fd70:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001fd74:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001fd78:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001fd7c:	ea4e 0606 	orr.w	r6, lr, r6
9001fd80:	ea46 060a 	orr.w	r6, r6, sl
9001fd84:	f829 6b02 	strh.w	r6, [r9], #2
9001fd88:	e7a7      	b.n	9001fcda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001fd8a:	f102 0e01 	add.w	lr, r2, #1
9001fd8e:	4422      	add	r2, r4
9001fd90:	9f06      	ldr	r7, [sp, #24]
9001fd92:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001fd96:	9a06      	ldr	r2, [sp, #24]
9001fd98:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001fd9c:	eb02 0a05 	add.w	sl, r2, r5
9001fda0:	4a13      	ldr	r2, [pc, #76]	@ (9001fdf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001fda2:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001fda6:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001fdaa:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001fdae:	00d2      	lsls	r2, r2, #3
9001fdb0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001fdb4:	ea49 0202 	orr.w	r2, r9, r2
9001fdb8:	f817 9005 	ldrb.w	r9, [r7, r5]
9001fdbc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001fdc0:	f826 2b02 	strh.w	r2, [r6], #2
9001fdc4:	fa1f f28e 	uxth.w	r2, lr
9001fdc8:	e758      	b.n	9001fc7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001fdca:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001fdce:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001fdd2:	1a2d      	subs	r5, r5, r0
9001fdd4:	b2ad      	uxth	r5, r5
9001fdd6:	2d00      	cmp	r5, #0
9001fdd8:	bf18      	it	ne
9001fdda:	2000      	movne	r0, #0
9001fddc:	e732      	b.n	9001fc44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001fdde:	4b05      	ldr	r3, [pc, #20]	@ (9001fdf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001fde0:	6818      	ldr	r0, [r3, #0]
9001fde2:	6803      	ldr	r3, [r0, #0]
9001fde4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fde6:	4798      	blx	r3
9001fde8:	b01f      	add	sp, #124	@ 0x7c
9001fdea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fdee:	bf00      	nop
9001fdf0:	fffff800 	.word	0xfffff800
9001fdf4:	2402340c 	.word	0x2402340c

9001fdf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001fdf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fdfc:	b091      	sub	sp, #68	@ 0x44
9001fdfe:	469b      	mov	fp, r3
9001fe00:	4616      	mov	r6, r2
9001fe02:	f9b3 2000 	ldrsh.w	r2, [r3]
9001fe06:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001fe0a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001fe0e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001fe12:	4604      	mov	r4, r0
9001fe14:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001fe18:	4640      	mov	r0, r8
9001fe1a:	460d      	mov	r5, r1
9001fe1c:	4659      	mov	r1, fp
9001fe1e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001fe22:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001fe26:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001fe2a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001fe2e:	f7f2 f9d5 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
9001fe32:	4631      	mov	r1, r6
9001fe34:	4640      	mov	r0, r8
9001fe36:	f7f2 f9d1 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
9001fe3a:	4b74      	ldr	r3, [pc, #464]	@ (9002000c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001fe3c:	8818      	ldrh	r0, [r3, #0]
9001fe3e:	4b74      	ldr	r3, [pc, #464]	@ (90020010 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001fe40:	b202      	sxth	r2, r0
9001fe42:	8819      	ldrh	r1, [r3, #0]
9001fe44:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001fe48:	b20e      	sxth	r6, r1
9001fe4a:	2b00      	cmp	r3, #0
9001fe4c:	da07      	bge.n	9001fe5e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001fe4e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001fe52:	4463      	add	r3, ip
9001fe54:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001fe58:	2300      	movs	r3, #0
9001fe5a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001fe5e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001fe62:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001fe66:	1ad2      	subs	r2, r2, r3
9001fe68:	4594      	cmp	ip, r2
9001fe6a:	bfc4      	itt	gt
9001fe6c:	1ac2      	subgt	r2, r0, r3
9001fe6e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001fe72:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001fe76:	2a00      	cmp	r2, #0
9001fe78:	da07      	bge.n	9001fe8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001fe7a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001fe7e:	4462      	add	r2, ip
9001fe80:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001fe84:	2200      	movs	r2, #0
9001fe86:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001fe8a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001fe8e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001fe92:	eba6 060a 	sub.w	r6, r6, sl
9001fe96:	42b2      	cmp	r2, r6
9001fe98:	bfc4      	itt	gt
9001fe9a:	eba1 020a 	subgt.w	r2, r1, sl
9001fe9e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001fea2:	4a5c      	ldr	r2, [pc, #368]	@ (90020014 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001fea4:	7812      	ldrb	r2, [r2, #0]
9001fea6:	b9a2      	cbnz	r2, 9001fed2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001fea8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001feac:	4286      	cmp	r6, r0
9001feae:	4640      	mov	r0, r8
9001feb0:	9303      	str	r3, [sp, #12]
9001feb2:	bf14      	ite	ne
9001feb4:	2600      	movne	r6, #0
9001feb6:	2601      	moveq	r6, #1
9001feb8:	f7f2 f9d3 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
9001febc:	9b03      	ldr	r3, [sp, #12]
9001febe:	b160      	cbz	r0, 9001feda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001fec0:	2300      	movs	r3, #0
9001fec2:	8023      	strh	r3, [r4, #0]
9001fec4:	8063      	strh	r3, [r4, #2]
9001fec6:	80a3      	strh	r3, [r4, #4]
9001fec8:	4620      	mov	r0, r4
9001feca:	80e3      	strh	r3, [r4, #6]
9001fecc:	b011      	add	sp, #68	@ 0x44
9001fece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fed2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001fed6:	428e      	cmp	r6, r1
9001fed8:	e7e9      	b.n	9001feae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001feda:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001fede:	a90e      	add	r1, sp, #56	@ 0x38
9001fee0:	900e      	str	r0, [sp, #56]	@ 0x38
9001fee2:	a80c      	add	r0, sp, #48	@ 0x30
9001fee4:	9205      	str	r2, [sp, #20]
9001fee6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001feea:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001feee:	9206      	str	r2, [sp, #24]
9001fef0:	f8bb 2000 	ldrh.w	r2, [fp]
9001fef4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001fef8:	1a9b      	subs	r3, r3, r2
9001fefa:	b21b      	sxth	r3, r3
9001fefc:	9303      	str	r3, [sp, #12]
9001fefe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001ff02:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9002001c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001ff06:	ebaa 0a03 	sub.w	sl, sl, r3
9001ff0a:	fa0f f38a 	sxth.w	r3, sl
9001ff0e:	9304      	str	r3, [sp, #16]
9001ff10:	9b03      	ldr	r3, [sp, #12]
9001ff12:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001ff16:	9b04      	ldr	r3, [sp, #16]
9001ff18:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001ff1c:	9b05      	ldr	r3, [sp, #20]
9001ff1e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001ff22:	9b06      	ldr	r3, [sp, #24]
9001ff24:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001ff28:	f7f8 f920 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ff2c:	4640      	mov	r0, r8
9001ff2e:	f7f8 f8f5 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ff32:	a80e      	add	r0, sp, #56	@ 0x38
9001ff34:	f7f8 f8f2 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ff38:	4b37      	ldr	r3, [pc, #220]	@ (90020018 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001ff3a:	4628      	mov	r0, r5
9001ff3c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001ff40:	881b      	ldrh	r3, [r3, #0]
9001ff42:	9307      	str	r3, [sp, #28]
9001ff44:	682b      	ldr	r3, [r5, #0]
9001ff46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ff48:	4798      	blx	r3
9001ff4a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001ff4e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001ff52:	4681      	mov	r9, r0
9001ff54:	f8db 0000 	ldr.w	r0, [fp]
9001ff58:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001ff5c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001ff5e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001ff62:	6803      	ldr	r3, [r0, #0]
9001ff64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ff66:	4798      	blx	r3
9001ff68:	4607      	mov	r7, r0
9001ff6a:	f8db 0000 	ldr.w	r0, [fp]
9001ff6e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001ff72:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ff76:	6803      	ldr	r3, [r0, #0]
9001ff78:	9109      	str	r1, [sp, #36]	@ 0x24
9001ff7a:	9208      	str	r2, [sp, #32]
9001ff7c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001ff7e:	4798      	blx	r3
9001ff80:	f010 0f01 	tst.w	r0, #1
9001ff84:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001ff88:	d012      	beq.n	9001ffb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001ff8a:	f8db 0000 	ldr.w	r0, [fp]
9001ff8e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001ff92:	6803      	ldr	r3, [r0, #0]
9001ff94:	9200      	str	r2, [sp, #0]
9001ff96:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001ff98:	462b      	mov	r3, r5
9001ff9a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001ff9e:	47b0      	blx	r6
9001ffa0:	9b03      	ldr	r3, [sp, #12]
9001ffa2:	8023      	strh	r3, [r4, #0]
9001ffa4:	9b04      	ldr	r3, [sp, #16]
9001ffa6:	8063      	strh	r3, [r4, #2]
9001ffa8:	9b05      	ldr	r3, [sp, #20]
9001ffaa:	80a3      	strh	r3, [r4, #4]
9001ffac:	9b06      	ldr	r3, [sp, #24]
9001ffae:	e78b      	b.n	9001fec8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001ffb0:	fb09 f202 	mul.w	r2, r9, r2
9001ffb4:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001ffb8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001ffbc:	440f      	add	r7, r1
9001ffbe:	b166      	cbz	r6, 9001ffda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ffc0:	9a07      	ldr	r2, [sp, #28]
9001ffc2:	4592      	cmp	sl, r2
9001ffc4:	d109      	bne.n	9001ffda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ffc6:	f8db 0000 	ldr.w	r0, [fp]
9001ffca:	fb09 f303 	mul.w	r3, r9, r3
9001ffce:	4629      	mov	r1, r5
9001ffd0:	6802      	ldr	r2, [r0, #0]
9001ffd2:	6b56      	ldr	r6, [r2, #52]	@ 0x34
9001ffd4:	463a      	mov	r2, r7
9001ffd6:	47b0      	blx	r6
9001ffd8:	e7e2      	b.n	9001ffa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ffda:	fb0a f303 	mul.w	r3, sl, r3
9001ffde:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001ffe2:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9002001c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001ffe6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001ffea:	4545      	cmp	r5, r8
9001ffec:	d2d8      	bcs.n	9001ffa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ffee:	f8db 0000 	ldr.w	r0, [fp]
9001fff2:	4629      	mov	r1, r5
9001fff4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001fff8:	4435      	add	r5, r6
9001fffa:	6802      	ldr	r2, [r0, #0]
9001fffc:	005b      	lsls	r3, r3, #1
9001fffe:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
90020002:	463a      	mov	r2, r7
90020004:	47d0      	blx	sl
90020006:	444f      	add	r7, r9
90020008:	e7ef      	b.n	9001ffea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9002000a:	bf00      	nop
9002000c:	24023400 	.word	0x24023400
90020010:	24023402 	.word	0x24023402
90020014:	24023404 	.word	0x24023404
90020018:	24023406 	.word	0x24023406
9002001c:	2402340c 	.word	0x2402340c

90020020 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
90020020:	b5f0      	push	{r4, r5, r6, r7, lr}
90020022:	4606      	mov	r6, r0
90020024:	b087      	sub	sp, #28
90020026:	460c      	mov	r4, r1
90020028:	4617      	mov	r7, r2
9002002a:	461d      	mov	r5, r3
9002002c:	b333      	cbz	r3, 9002007c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9002002e:	4608      	mov	r0, r1
90020030:	f7f2 f917 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
90020034:	bb10      	cbnz	r0, 9002007c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020036:	6820      	ldr	r0, [r4, #0]
90020038:	ab04      	add	r3, sp, #16
9002003a:	6861      	ldr	r1, [r4, #4]
9002003c:	4c1b      	ldr	r4, [pc, #108]	@ (900200ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9002003e:	c303      	stmia	r3!, {r0, r1}
90020040:	a804      	add	r0, sp, #16
90020042:	f7f8 f86b 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020046:	6820      	ldr	r0, [r4, #0]
90020048:	6803      	ldr	r3, [r0, #0]
9002004a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002004c:	4798      	blx	r3
9002004e:	2dff      	cmp	r5, #255	@ 0xff
90020050:	d016      	beq.n	90020080 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
90020052:	f010 0f08 	tst.w	r0, #8
90020056:	6820      	ldr	r0, [r4, #0]
90020058:	d015      	beq.n	90020086 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9002005a:	2400      	movs	r4, #0
9002005c:	6801      	ldr	r1, [r0, #0]
9002005e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90020062:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020066:	e9cd 5402 	strd	r5, r4, [sp, #8]
9002006a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9002006e:	9401      	str	r4, [sp, #4]
90020070:	f8bd 4014 	ldrh.w	r4, [sp, #20]
90020074:	9400      	str	r4, [sp, #0]
90020076:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
90020078:	4639      	mov	r1, r7
9002007a:	47a0      	blx	r4
9002007c:	b007      	add	sp, #28
9002007e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90020080:	f010 0f02 	tst.w	r0, #2
90020084:	e7e7      	b.n	90020056 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
90020086:	6803      	ldr	r3, [r0, #0]
90020088:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002008a:	4798      	blx	r3
9002008c:	4b08      	ldr	r3, [pc, #32]	@ (900200b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9002008e:	4601      	mov	r1, r0
90020090:	4630      	mov	r0, r6
90020092:	881a      	ldrh	r2, [r3, #0]
90020094:	6833      	ldr	r3, [r6, #0]
90020096:	e9cd 7500 	strd	r7, r5, [sp]
9002009a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9002009c:	ab04      	add	r3, sp, #16
9002009e:	47a8      	blx	r5
900200a0:	6820      	ldr	r0, [r4, #0]
900200a2:	6803      	ldr	r3, [r0, #0]
900200a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900200a6:	4798      	blx	r3
900200a8:	e7e8      	b.n	9002007c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
900200aa:	bf00      	nop
900200ac:	2402340c 	.word	0x2402340c
900200b0:	24023406 	.word	0x24023406

900200b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
900200b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900200b8:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
900200bc:	4688      	mov	r8, r1
900200be:	4614      	mov	r4, r2
900200c0:	461d      	mov	r5, r3
900200c2:	9e08      	ldr	r6, [sp, #32]
900200c4:	2f00      	cmp	r7, #0
900200c6:	f000 80ab 	beq.w	90020220 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900200ca:	4618      	mov	r0, r3
900200cc:	f7f2 f8c9 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900200d0:	2800      	cmp	r0, #0
900200d2:	f040 80a5 	bne.w	90020220 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900200d6:	f9b5 1000 	ldrsh.w	r1, [r5]
900200da:	2fff      	cmp	r7, #255	@ 0xff
900200dc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900200e0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
900200e4:	fb04 1303 	mla	r3, r4, r3, r1
900200e8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
900200ec:	eba4 0200 	sub.w	r2, r4, r0
900200f0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
900200f4:	fb04 f505 	mul.w	r5, r4, r5
900200f8:	ea4f 2816 	mov.w	r8, r6, lsr #8
900200fc:	eb01 0545 	add.w	r5, r1, r5, lsl #1
90020100:	d04a      	beq.n	90020198 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
90020102:	b2bc      	uxth	r4, r7
90020104:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
90020108:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9002010c:	fa5f f788 	uxtb.w	r7, r8
90020110:	b2f3      	uxtb	r3, r6
90020112:	0040      	lsls	r0, r0, #1
90020114:	fb0e fe04 	mul.w	lr, lr, r4
90020118:	4367      	muls	r7, r4
9002011a:	ea4f 0842 	mov.w	r8, r2, lsl #1
9002011e:	4363      	muls	r3, r4
90020120:	fa1f fc8c 	uxth.w	ip, ip
90020124:	42a9      	cmp	r1, r5
90020126:	d27b      	bcs.n	90020220 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020128:	eb01 0900 	add.w	r9, r1, r0
9002012c:	4549      	cmp	r1, r9
9002012e:	d231      	bcs.n	90020194 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
90020130:	880a      	ldrh	r2, [r1, #0]
90020132:	1214      	asrs	r4, r2, #8
90020134:	10d6      	asrs	r6, r2, #3
90020136:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002013a:	00d2      	lsls	r2, r2, #3
9002013c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020140:	b2d2      	uxtb	r2, r2
90020142:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90020146:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002014a:	fb14 f40c 	smulbb	r4, r4, ip
9002014e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90020152:	fb12 f20c 	smulbb	r2, r2, ip
90020156:	fb16 f60c 	smulbb	r6, r6, ip
9002015a:	4474      	add	r4, lr
9002015c:	441a      	add	r2, r3
9002015e:	b2a4      	uxth	r4, r4
90020160:	443e      	add	r6, r7
90020162:	b292      	uxth	r2, r2
90020164:	f104 0a01 	add.w	sl, r4, #1
90020168:	b2b6      	uxth	r6, r6
9002016a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9002016e:	f102 0a01 	add.w	sl, r2, #1
90020172:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
90020176:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002017a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002017e:	4322      	orrs	r2, r4
90020180:	1c74      	adds	r4, r6, #1
90020182:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90020186:	0976      	lsrs	r6, r6, #5
90020188:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002018c:	4332      	orrs	r2, r6
9002018e:	f821 2b02 	strh.w	r2, [r1], #2
90020192:	e7cb      	b.n	9002012c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
90020194:	4441      	add	r1, r8
90020196:	e7c5      	b.n	90020124 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90020198:	0973      	lsrs	r3, r6, #5
9002019a:	4f22      	ldr	r7, [pc, #136]	@ (90020224 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9002019c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
900201a0:	ea08 0707 	and.w	r7, r8, r7
900201a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900201a8:	433b      	orrs	r3, r7
900201aa:	07e7      	lsls	r7, r4, #31
900201ac:	ea43 0306 	orr.w	r3, r3, r6
900201b0:	b29b      	uxth	r3, r3
900201b2:	d50b      	bpl.n	900201cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
900201b4:	0040      	lsls	r0, r0, #1
900201b6:	0052      	lsls	r2, r2, #1
900201b8:	42a9      	cmp	r1, r5
900201ba:	d231      	bcs.n	90020220 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900201bc:	180c      	adds	r4, r1, r0
900201be:	42a1      	cmp	r1, r4
900201c0:	d202      	bcs.n	900201c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
900201c2:	f821 3b02 	strh.w	r3, [r1], #2
900201c6:	e7fa      	b.n	900201be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
900201c8:	4411      	add	r1, r2
900201ca:	e7f5      	b.n	900201b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
900201cc:	078e      	lsls	r6, r1, #30
900201ce:	d008      	beq.n	900201e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
900201d0:	0066      	lsls	r6, r4, #1
900201d2:	460a      	mov	r2, r1
900201d4:	42aa      	cmp	r2, r5
900201d6:	d202      	bcs.n	900201de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
900201d8:	8013      	strh	r3, [r2, #0]
900201da:	4432      	add	r2, r6
900201dc:	e7fa      	b.n	900201d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
900201de:	3102      	adds	r1, #2
900201e0:	3801      	subs	r0, #1
900201e2:	07c2      	lsls	r2, r0, #31
900201e4:	d50b      	bpl.n	900201fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
900201e6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
900201ea:	0066      	lsls	r6, r4, #1
900201ec:	3a01      	subs	r2, #1
900201ee:	eb01 0242 	add.w	r2, r1, r2, lsl #1
900201f2:	42aa      	cmp	r2, r5
900201f4:	d202      	bcs.n	900201fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
900201f6:	8013      	strh	r3, [r2, #0]
900201f8:	4432      	add	r2, r6
900201fa:	e7fa      	b.n	900201f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
900201fc:	3801      	subs	r0, #1
900201fe:	b178      	cbz	r0, 90020220 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020200:	1040      	asrs	r0, r0, #1
90020202:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
90020206:	0080      	lsls	r0, r0, #2
90020208:	0064      	lsls	r4, r4, #1
9002020a:	42a9      	cmp	r1, r5
9002020c:	d208      	bcs.n	90020220 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002020e:	180e      	adds	r6, r1, r0
90020210:	460a      	mov	r2, r1
90020212:	42b2      	cmp	r2, r6
90020214:	d202      	bcs.n	9002021c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
90020216:	f842 3b04 	str.w	r3, [r2], #4
9002021a:	e7fa      	b.n	90020212 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9002021c:	4421      	add	r1, r4
9002021e:	e7f4      	b.n	9002020a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
90020220:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020224:	00fff800 	.word	0x00fff800

90020228 <_ZN8touchgfx8LCD16bppC1Ev>:
90020228:	2200      	movs	r2, #0
9002022a:	4912      	ldr	r1, [pc, #72]	@ (90020274 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9002022c:	e9c0 2201 	strd	r2, r2, [r0, #4]
90020230:	6001      	str	r1, [r0, #0]
90020232:	e9c0 2203 	strd	r2, r2, [r0, #12]
90020236:	e9c0 2205 	strd	r2, r2, [r0, #20]
9002023a:	e9c0 2207 	strd	r2, r2, [r0, #28]
9002023e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
90020242:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
90020246:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9002024a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9002024e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
90020252:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
90020256:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9002025a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9002025e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
90020262:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
90020266:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9002026a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9002026e:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
90020272:	4770      	bx	lr
90020274:	9002eb04 	.word	0x9002eb04

90020278 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90020278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002027c:	b08d      	sub	sp, #52	@ 0x34
9002027e:	460d      	mov	r5, r1
90020280:	4604      	mov	r4, r0
90020282:	4699      	mov	r9, r3
90020284:	6808      	ldr	r0, [r1, #0]
90020286:	ab08      	add	r3, sp, #32
90020288:	6849      	ldr	r1, [r1, #4]
9002028a:	c303      	stmia	r3!, {r0, r1}
9002028c:	6810      	ldr	r0, [r2, #0]
9002028e:	ab0a      	add	r3, sp, #40	@ 0x28
90020290:	6851      	ldr	r1, [r2, #4]
90020292:	c303      	stmia	r3!, {r0, r1}
90020294:	a808      	add	r0, sp, #32
90020296:	f7f7 ff41 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002029a:	4629      	mov	r1, r5
9002029c:	a80a      	add	r0, sp, #40	@ 0x28
9002029e:	4d67      	ldr	r5, [pc, #412]	@ (9002043c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
900202a0:	f7f7 ff64 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900202a4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
900202a8:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
900202ac:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
900202b0:	6828      	ldr	r0, [r5, #0]
900202b2:	fb11 2103 	smlabb	r1, r1, r3, r2
900202b6:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
900202ba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
900202be:	eb04 0481 	add.w	r4, r4, r1, lsl #2
900202c2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
900202c6:	440a      	add	r2, r1
900202c8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900202cc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
900202d0:	4413      	add	r3, r2
900202d2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900202d6:	6803      	ldr	r3, [r0, #0]
900202d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900202da:	4798      	blx	r3
900202dc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900202e0:	d119      	bne.n	90020316 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
900202e2:	f010 0f20 	tst.w	r0, #32
900202e6:	6828      	ldr	r0, [r5, #0]
900202e8:	d018      	beq.n	9002031c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
900202ea:	2500      	movs	r5, #0
900202ec:	6801      	ldr	r1, [r0, #0]
900202ee:	b2b6      	uxth	r6, r6
900202f0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900202f4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
900202f8:	9601      	str	r6, [sp, #4]
900202fa:	e9cd 9503 	strd	r9, r5, [sp, #12]
900202fe:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
90020302:	9502      	str	r5, [sp, #8]
90020304:	fa1f f588 	uxth.w	r5, r8
90020308:	9500      	str	r5, [sp, #0]
9002030a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
9002030c:	4621      	mov	r1, r4
9002030e:	47a8      	blx	r5
90020310:	b00d      	add	sp, #52	@ 0x34
90020312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020316:	f010 0f40 	tst.w	r0, #64	@ 0x40
9002031a:	e7e4      	b.n	900202e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9002031c:	6803      	ldr	r3, [r0, #0]
9002031e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020320:	4798      	blx	r3
90020322:	4947      	ldr	r1, [pc, #284]	@ (90020440 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
90020324:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90020328:	880b      	ldrh	r3, [r1, #0]
9002032a:	468a      	mov	sl, r1
9002032c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
90020330:	fb03 5202 	mla	r2, r3, r2, r5
90020334:	4373      	muls	r3, r6
90020336:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9002033a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9002033e:	9307      	str	r3, [sp, #28]
90020340:	ea4f 0348 	mov.w	r3, r8, lsl #1
90020344:	9306      	str	r3, [sp, #24]
90020346:	9b07      	ldr	r3, [sp, #28]
90020348:	4298      	cmp	r0, r3
9002034a:	d270      	bcs.n	9002042e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9002034c:	9b06      	ldr	r3, [sp, #24]
9002034e:	4621      	mov	r1, r4
90020350:	eb00 0b03 	add.w	fp, r0, r3
90020354:	4558      	cmp	r0, fp
90020356:	d25d      	bcs.n	90020414 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
90020358:	f851 4b04 	ldr.w	r4, [r1], #4
9002035c:	0e23      	lsrs	r3, r4, #24
9002035e:	d014      	beq.n	9002038a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90020360:	2bff      	cmp	r3, #255	@ 0xff
90020362:	ea4f 2c14 	mov.w	ip, r4, lsr #8
90020366:	d112      	bne.n	9002038e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90020368:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9002036c:	d10f      	bne.n	9002038e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9002036e:	0963      	lsrs	r3, r4, #5
90020370:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90020374:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90020378:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002037c:	f02c 0c07 	bic.w	ip, ip, #7
90020380:	ea43 0c0c 	orr.w	ip, r3, ip
90020384:	ea4c 0404 	orr.w	r4, ip, r4
90020388:	8004      	strh	r4, [r0, #0]
9002038a:	3002      	adds	r0, #2
9002038c:	e7e2      	b.n	90020354 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9002038e:	fb09 f303 	mul.w	r3, r9, r3
90020392:	8807      	ldrh	r7, [r0, #0]
90020394:	f3c4 4e07 	ubfx	lr, r4, #16, #8
90020398:	fa5f fc8c 	uxtb.w	ip, ip
9002039c:	1c5a      	adds	r2, r3, #1
9002039e:	123e      	asrs	r6, r7, #8
900203a0:	10fd      	asrs	r5, r7, #3
900203a2:	eb02 2223 	add.w	r2, r2, r3, asr #8
900203a6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900203aa:	00ff      	lsls	r7, r7, #3
900203ac:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900203b0:	1212      	asrs	r2, r2, #8
900203b2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900203b6:	b293      	uxth	r3, r2
900203b8:	43d2      	mvns	r2, r2
900203ba:	b2ff      	uxtb	r7, r7
900203bc:	fb1e fe03 	smulbb	lr, lr, r3
900203c0:	b2d2      	uxtb	r2, r2
900203c2:	fb1c fc03 	smulbb	ip, ip, r3
900203c6:	b2e4      	uxtb	r4, r4
900203c8:	fb06 e602 	mla	r6, r6, r2, lr
900203cc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900203d0:	fb14 f403 	smulbb	r4, r4, r3
900203d4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
900203d8:	b2b6      	uxth	r6, r6
900203da:	fb05 c502 	mla	r5, r5, r2, ip
900203de:	fb07 4702 	mla	r7, r7, r2, r4
900203e2:	f106 0e01 	add.w	lr, r6, #1
900203e6:	b2ad      	uxth	r5, r5
900203e8:	b2bf      	uxth	r7, r7
900203ea:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
900203ee:	f105 0c01 	add.w	ip, r5, #1
900203f2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
900203f6:	1c7e      	adds	r6, r7, #1
900203f8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900203fc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90020400:	096d      	lsrs	r5, r5, #5
90020402:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90020406:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002040a:	ea46 060e 	orr.w	r6, r6, lr
9002040e:	432e      	orrs	r6, r5
90020410:	8006      	strh	r6, [r0, #0]
90020412:	e7ba      	b.n	9002038a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90020414:	f8ba 3000 	ldrh.w	r3, [sl]
90020418:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9002041c:	eba3 0308 	sub.w	r3, r3, r8
90020420:	eba4 0408 	sub.w	r4, r4, r8
90020424:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020428:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9002042c:	e78b      	b.n	90020346 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9002042e:	4b03      	ldr	r3, [pc, #12]	@ (9002043c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90020430:	6818      	ldr	r0, [r3, #0]
90020432:	6803      	ldr	r3, [r0, #0]
90020434:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020436:	4798      	blx	r3
90020438:	e76a      	b.n	90020310 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9002043a:	bf00      	nop
9002043c:	2402340c 	.word	0x2402340c
90020440:	24023406 	.word	0x24023406

90020444 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
90020444:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90020448:	b085      	sub	sp, #20
9002044a:	6810      	ldr	r0, [r2, #0]
9002044c:	460c      	mov	r4, r1
9002044e:	6851      	ldr	r1, [r2, #4]
90020450:	466d      	mov	r5, sp
90020452:	4616      	mov	r6, r2
90020454:	c503      	stmia	r5!, {r0, r1}
90020456:	6818      	ldr	r0, [r3, #0]
90020458:	6859      	ldr	r1, [r3, #4]
9002045a:	c503      	stmia	r5!, {r0, r1}
9002045c:	4668      	mov	r0, sp
9002045e:	4d2e      	ldr	r5, [pc, #184]	@ (90020518 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
90020460:	f7f7 fe5c 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020464:	4631      	mov	r1, r6
90020466:	a802      	add	r0, sp, #8
90020468:	4e2c      	ldr	r6, [pc, #176]	@ (9002051c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9002046a:	f7f7 fe7f 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002046e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
90020472:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90020476:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9002047a:	6828      	ldr	r0, [r5, #0]
9002047c:	fb11 2103 	smlabb	r1, r1, r3, r2
90020480:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90020484:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
90020488:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9002048c:	f8bd 1000 	ldrh.w	r1, [sp]
90020490:	440a      	add	r2, r1
90020492:	f8ad 2008 	strh.w	r2, [sp, #8]
90020496:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9002049a:	4413      	add	r3, r2
9002049c:	f8ad 300a 	strh.w	r3, [sp, #10]
900204a0:	6803      	ldr	r3, [r0, #0]
900204a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900204a4:	4798      	blx	r3
900204a6:	8833      	ldrh	r3, [r6, #0]
900204a8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
900204ac:	ea4f 0c47 	mov.w	ip, r7, lsl #1
900204b0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
900204b4:	f8df e068 	ldr.w	lr, [pc, #104]	@ 90020520 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
900204b8:	fb03 1202 	mla	r2, r3, r2, r1
900204bc:	fb08 f303 	mul.w	r3, r8, r3
900204c0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900204c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900204c8:	4298      	cmp	r0, r3
900204ca:	d21d      	bcs.n	90020508 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
900204cc:	eb00 080c 	add.w	r8, r0, ip
900204d0:	4540      	cmp	r0, r8
900204d2:	d20f      	bcs.n	900204f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
900204d4:	f854 1b04 	ldr.w	r1, [r4], #4
900204d8:	ea4f 1951 	mov.w	r9, r1, lsr #5
900204dc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
900204e0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900204e4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900204e8:	ea42 0209 	orr.w	r2, r2, r9
900204ec:	430a      	orrs	r2, r1
900204ee:	f820 2b02 	strh.w	r2, [r0], #2
900204f2:	e7ed      	b.n	900204d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
900204f4:	8832      	ldrh	r2, [r6, #0]
900204f6:	1bd2      	subs	r2, r2, r7
900204f8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900204fc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90020500:	1bd2      	subs	r2, r2, r7
90020502:	eb04 0482 	add.w	r4, r4, r2, lsl #2
90020506:	e7df      	b.n	900204c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
90020508:	6828      	ldr	r0, [r5, #0]
9002050a:	6803      	ldr	r3, [r0, #0]
9002050c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002050e:	4798      	blx	r3
90020510:	b005      	add	sp, #20
90020512:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90020516:	bf00      	nop
90020518:	2402340c 	.word	0x2402340c
9002051c:	24023406 	.word	0x24023406
90020520:	fffff800 	.word	0xfffff800

90020524 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90020524:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020528:	b08e      	sub	sp, #56	@ 0x38
9002052a:	460e      	mov	r6, r1
9002052c:	4604      	mov	r4, r0
9002052e:	461d      	mov	r5, r3
90020530:	6808      	ldr	r0, [r1, #0]
90020532:	ab0a      	add	r3, sp, #40	@ 0x28
90020534:	6849      	ldr	r1, [r1, #4]
90020536:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9002070c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9002053a:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 90020710 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9002053e:	c303      	stmia	r3!, {r0, r1}
90020540:	6810      	ldr	r0, [r2, #0]
90020542:	ab0c      	add	r3, sp, #48	@ 0x30
90020544:	6851      	ldr	r1, [r2, #4]
90020546:	c303      	stmia	r3!, {r0, r1}
90020548:	a80a      	add	r0, sp, #40	@ 0x28
9002054a:	f7f7 fde7 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002054e:	4631      	mov	r1, r6
90020550:	a80c      	add	r0, sp, #48	@ 0x30
90020552:	f7f7 fe0b 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020556:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002055a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9002055e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90020562:	f8d8 0000 	ldr.w	r0, [r8]
90020566:	fb11 2103 	smlabb	r1, r1, r3, r2
9002056a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9002056e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90020572:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90020576:	440c      	add	r4, r1
90020578:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9002057c:	440a      	add	r2, r1
9002057e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90020582:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
90020586:	4413      	add	r3, r2
90020588:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9002058c:	6803      	ldr	r3, [r0, #0]
9002058e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020590:	4798      	blx	r3
90020592:	2dff      	cmp	r5, #255	@ 0xff
90020594:	d124      	bne.n	900205e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
90020596:	f010 0f01 	tst.w	r0, #1
9002059a:	f8d8 0000 	ldr.w	r0, [r8]
9002059e:	d022      	beq.n	900205e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
900205a0:	2100      	movs	r1, #0
900205a2:	f04f 0e01 	mov.w	lr, #1
900205a6:	f8d0 c000 	ldr.w	ip, [r0]
900205aa:	b2b6      	uxth	r6, r6
900205ac:	f8cd e018 	str.w	lr, [sp, #24]
900205b0:	b2bf      	uxth	r7, r7
900205b2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900205b6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
900205ba:	e9cd 1107 	strd	r1, r1, [sp, #28]
900205be:	f8b9 e000 	ldrh.w	lr, [r9]
900205c2:	9503      	str	r5, [sp, #12]
900205c4:	9601      	str	r6, [sp, #4]
900205c6:	9700      	str	r7, [sp, #0]
900205c8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
900205cc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900205d0:	9102      	str	r1, [sp, #8]
900205d2:	4621      	mov	r1, r4
900205d4:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
900205d8:	47a8      	blx	r5
900205da:	b00e      	add	sp, #56	@ 0x38
900205dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900205e0:	f010 0f04 	tst.w	r0, #4
900205e4:	e7d9      	b.n	9002059a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
900205e6:	6803      	ldr	r3, [r0, #0]
900205e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900205ea:	4798      	blx	r3
900205ec:	f8b9 3000 	ldrh.w	r3, [r9]
900205f0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
900205f4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
900205f8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
900205fc:	435e      	muls	r6, r3
900205fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90020602:	2dff      	cmp	r5, #255	@ 0xff
90020604:	fb03 1202 	mla	r2, r3, r2, r1
90020608:	ebac 0c07 	sub.w	ip, ip, r7
9002060c:	eba3 0707 	sub.w	r7, r3, r7
90020610:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020614:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90020618:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9002061c:	ea4f 0747 	mov.w	r7, r7, lsl #1
90020620:	d049      	beq.n	900206b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
90020622:	43eb      	mvns	r3, r5
90020624:	fa1f f985 	uxth.w	r9, r5
90020628:	b2db      	uxtb	r3, r3
9002062a:	42b0      	cmp	r0, r6
9002062c:	d266      	bcs.n	900206fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9002062e:	eb00 0a0e 	add.w	sl, r0, lr
90020632:	4550      	cmp	r0, sl
90020634:	4621      	mov	r1, r4
90020636:	f104 0403 	add.w	r4, r4, #3
9002063a:	d25b      	bcs.n	900206f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9002063c:	8802      	ldrh	r2, [r0, #0]
9002063e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90020642:	ea4f 2822 	mov.w	r8, r2, asr #8
90020646:	fb11 f109 	smulbb	r1, r1, r9
9002064a:	10d5      	asrs	r5, r2, #3
9002064c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90020650:	00d2      	lsls	r2, r2, #3
90020652:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020656:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9002065a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9002065e:	fb08 1803 	mla	r8, r8, r3, r1
90020662:	f814 1c02 	ldrb.w	r1, [r4, #-2]
90020666:	b2d2      	uxtb	r2, r2
90020668:	fb11 f109 	smulbb	r1, r1, r9
9002066c:	fa1f f888 	uxth.w	r8, r8
90020670:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020674:	fb05 1503 	mla	r5, r5, r3, r1
90020678:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9002067c:	fb11 f109 	smulbb	r1, r1, r9
90020680:	b2ad      	uxth	r5, r5
90020682:	fb02 1203 	mla	r2, r2, r3, r1
90020686:	f108 0101 	add.w	r1, r8, #1
9002068a:	b292      	uxth	r2, r2
9002068c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
90020690:	1c51      	adds	r1, r2, #1
90020692:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90020696:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002069a:	1c69      	adds	r1, r5, #1
9002069c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900206a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900206a4:	096d      	lsrs	r5, r5, #5
900206a6:	ea42 0208 	orr.w	r2, r2, r8
900206aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900206ae:	432a      	orrs	r2, r5
900206b0:	f820 2b02 	strh.w	r2, [r0], #2
900206b4:	e7bd      	b.n	90020632 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
900206b6:	4a14      	ldr	r2, [pc, #80]	@ (90020708 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
900206b8:	42b0      	cmp	r0, r6
900206ba:	d21f      	bcs.n	900206fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900206bc:	eb00 050e 	add.w	r5, r0, lr
900206c0:	42a8      	cmp	r0, r5
900206c2:	4621      	mov	r1, r4
900206c4:	f104 0403 	add.w	r4, r4, #3
900206c8:	d210      	bcs.n	900206ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
900206ca:	f814 3c02 	ldrb.w	r3, [r4, #-2]
900206ce:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900206d2:	00db      	lsls	r3, r3, #3
900206d4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
900206d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900206dc:	430b      	orrs	r3, r1
900206de:	f814 1c03 	ldrb.w	r1, [r4, #-3]
900206e2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
900206e6:	f820 3b02 	strh.w	r3, [r0], #2
900206ea:	e7e9      	b.n	900206c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
900206ec:	4438      	add	r0, r7
900206ee:	eb01 040c 	add.w	r4, r1, ip
900206f2:	e7e1      	b.n	900206b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
900206f4:	4438      	add	r0, r7
900206f6:	eb01 040c 	add.w	r4, r1, ip
900206fa:	e796      	b.n	9002062a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
900206fc:	4b03      	ldr	r3, [pc, #12]	@ (9002070c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
900206fe:	6818      	ldr	r0, [r3, #0]
90020700:	6803      	ldr	r3, [r0, #0]
90020702:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020704:	4798      	blx	r3
90020706:	e768      	b.n	900205da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
90020708:	fffff800 	.word	0xfffff800
9002070c:	2402340c 	.word	0x2402340c
90020710:	24023406 	.word	0x24023406

90020714 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90020714:	b4f0      	push	{r4, r5, r6, r7}
90020716:	4616      	mov	r6, r2
90020718:	461c      	mov	r4, r3
9002071a:	460d      	mov	r5, r1
9002071c:	9a04      	ldr	r2, [sp, #16]
9002071e:	2e01      	cmp	r6, #1
90020720:	f89d 3014 	ldrb.w	r3, [sp, #20]
90020724:	f89d 7018 	ldrb.w	r7, [sp, #24]
90020728:	d012      	beq.n	90020750 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9002072a:	d303      	bcc.n	90020734 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9002072c:	2e02      	cmp	r6, #2
9002072e:	d00a      	beq.n	90020746 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90020730:	bcf0      	pop	{r4, r5, r6, r7}
90020732:	4770      	bx	lr
90020734:	6805      	ldr	r5, [r0, #0]
90020736:	e9cd 3704 	strd	r3, r7, [sp, #16]
9002073a:	68ed      	ldr	r5, [r5, #12]
9002073c:	4613      	mov	r3, r2
9002073e:	4622      	mov	r2, r4
90020740:	46ac      	mov	ip, r5
90020742:	bcf0      	pop	{r4, r5, r6, r7}
90020744:	4760      	bx	ip
90020746:	4621      	mov	r1, r4
90020748:	4628      	mov	r0, r5
9002074a:	bcf0      	pop	{r4, r5, r6, r7}
9002074c:	f7ff bd94 	b.w	90020278 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020750:	4621      	mov	r1, r4
90020752:	4628      	mov	r0, r5
90020754:	bcf0      	pop	{r4, r5, r6, r7}
90020756:	f7ff bee5 	b.w	90020524 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9002075c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9002075c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020760:	b093      	sub	sp, #76	@ 0x4c
90020762:	4681      	mov	r9, r0
90020764:	4688      	mov	r8, r1
90020766:	6810      	ldr	r0, [r2, #0]
90020768:	6851      	ldr	r1, [r2, #4]
9002076a:	ac0e      	add	r4, sp, #56	@ 0x38
9002076c:	4616      	mov	r6, r2
9002076e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
90020772:	4f6b      	ldr	r7, [pc, #428]	@ (90020920 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90020774:	c403      	stmia	r4!, {r0, r1}
90020776:	6818      	ldr	r0, [r3, #0]
90020778:	ac10      	add	r4, sp, #64	@ 0x40
9002077a:	6859      	ldr	r1, [r3, #4]
9002077c:	c403      	stmia	r4!, {r0, r1}
9002077e:	a80e      	add	r0, sp, #56	@ 0x38
90020780:	f7f7 fccc 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020784:	4631      	mov	r1, r6
90020786:	a810      	add	r0, sp, #64	@ 0x40
90020788:	4e66      	ldr	r6, [pc, #408]	@ (90020924 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9002078a:	f7f7 fcef 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002078e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90020792:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
90020796:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9002079a:	6830      	ldr	r0, [r6, #0]
9002079c:	fb11 2103 	smlabb	r1, r1, r3, r2
900207a0:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
900207a4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
900207a8:	4489      	add	r9, r1
900207aa:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
900207ae:	440a      	add	r2, r1
900207b0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
900207b4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
900207b8:	4413      	add	r3, r2
900207ba:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
900207be:	6803      	ldr	r3, [r0, #0]
900207c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900207c2:	4798      	blx	r3
900207c4:	f010 0f80 	tst.w	r0, #128	@ 0x80
900207c8:	6830      	ldr	r0, [r6, #0]
900207ca:	d01d      	beq.n	90020808 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
900207cc:	2200      	movs	r2, #0
900207ce:	6801      	ldr	r1, [r0, #0]
900207d0:	b2a4      	uxth	r4, r4
900207d2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900207d6:	b2ad      	uxth	r5, r5
900207d8:	e9cd 2208 	strd	r2, r2, [sp, #32]
900207dc:	220b      	movs	r2, #11
900207de:	9207      	str	r2, [sp, #28]
900207e0:	883a      	ldrh	r2, [r7, #0]
900207e2:	9502      	str	r5, [sp, #8]
900207e4:	9206      	str	r2, [sp, #24]
900207e6:	2201      	movs	r2, #1
900207e8:	9401      	str	r4, [sp, #4]
900207ea:	e9cd a204 	strd	sl, r2, [sp, #16]
900207ee:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
900207f2:	9203      	str	r2, [sp, #12]
900207f4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
900207f8:	9200      	str	r2, [sp, #0]
900207fa:	4642      	mov	r2, r8
900207fc:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
900207fe:	4649      	mov	r1, r9
90020800:	47a0      	blx	r4
90020802:	b013      	add	sp, #76	@ 0x4c
90020804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020808:	6803      	ldr	r3, [r0, #0]
9002080a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002080c:	4798      	blx	r3
9002080e:	883b      	ldrh	r3, [r7, #0]
90020810:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90020814:	f04f 0e04 	mov.w	lr, #4
90020818:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9002081c:	435d      	muls	r5, r3
9002081e:	fb03 1202 	mla	r2, r3, r2, r1
90020822:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020826:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9002082a:	920c      	str	r2, [sp, #48]	@ 0x30
9002082c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90020830:	1b12      	subs	r2, r2, r4
90020832:	920d      	str	r2, [sp, #52]	@ 0x34
90020834:	0062      	lsls	r2, r4, #1
90020836:	1b1c      	subs	r4, r3, r4
90020838:	920a      	str	r2, [sp, #40]	@ 0x28
9002083a:	0063      	lsls	r3, r4, #1
9002083c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002083e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020840:	4298      	cmp	r0, r3
90020842:	d266      	bcs.n	90020912 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90020844:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020846:	eb00 0b03 	add.w	fp, r0, r3
9002084a:	4558      	cmp	r0, fp
9002084c:	d25c      	bcs.n	90020908 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9002084e:	f819 3b01 	ldrb.w	r3, [r9], #1
90020852:	fb1e e303 	smlabb	r3, lr, r3, lr
90020856:	f858 2003 	ldr.w	r2, [r8, r3]
9002085a:	0e11      	lsrs	r1, r2, #24
9002085c:	d012      	beq.n	90020884 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002085e:	29ff      	cmp	r1, #255	@ 0xff
90020860:	ea4f 2712 	mov.w	r7, r2, lsr #8
90020864:	d110      	bne.n	90020888 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020866:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002086a:	d10d      	bne.n	90020888 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9002086c:	0953      	lsrs	r3, r2, #5
9002086e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
90020872:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020876:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002087a:	f027 0707 	bic.w	r7, r7, #7
9002087e:	431f      	orrs	r7, r3
90020880:	433a      	orrs	r2, r7
90020882:	8002      	strh	r2, [r0, #0]
90020884:	3002      	adds	r0, #2
90020886:	e7e0      	b.n	9002084a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90020888:	fb0a f101 	mul.w	r1, sl, r1
9002088c:	8806      	ldrh	r6, [r0, #0]
9002088e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
90020892:	b2d2      	uxtb	r2, r2
90020894:	1c4b      	adds	r3, r1, #1
90020896:	1235      	asrs	r5, r6, #8
90020898:	10f4      	asrs	r4, r6, #3
9002089a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002089e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900208a2:	00f6      	lsls	r6, r6, #3
900208a4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900208a8:	121b      	asrs	r3, r3, #8
900208aa:	b2f6      	uxtb	r6, r6
900208ac:	b299      	uxth	r1, r3
900208ae:	43db      	mvns	r3, r3
900208b0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
900208b4:	fb1c fc01 	smulbb	ip, ip, r1
900208b8:	b2db      	uxtb	r3, r3
900208ba:	fb12 f201 	smulbb	r2, r2, r1
900208be:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900208c2:	fb05 c503 	mla	r5, r5, r3, ip
900208c6:	b2ff      	uxtb	r7, r7
900208c8:	fb06 2203 	mla	r2, r6, r3, r2
900208cc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
900208d0:	fb17 f701 	smulbb	r7, r7, r1
900208d4:	b2ad      	uxth	r5, r5
900208d6:	b292      	uxth	r2, r2
900208d8:	fb04 7403 	mla	r4, r4, r3, r7
900208dc:	f105 0c01 	add.w	ip, r5, #1
900208e0:	1c57      	adds	r7, r2, #1
900208e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900208e6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900208ea:	b2a4      	uxth	r4, r4
900208ec:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900208f0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900208f4:	433d      	orrs	r5, r7
900208f6:	1c67      	adds	r7, r4, #1
900208f8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
900208fc:	0964      	lsrs	r4, r4, #5
900208fe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90020902:	4325      	orrs	r5, r4
90020904:	8005      	strh	r5, [r0, #0]
90020906:	e7bd      	b.n	90020884 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90020908:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002090a:	4418      	add	r0, r3
9002090c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002090e:	4499      	add	r9, r3
90020910:	e795      	b.n	9002083e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
90020912:	4b04      	ldr	r3, [pc, #16]	@ (90020924 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90020914:	6818      	ldr	r0, [r3, #0]
90020916:	6803      	ldr	r3, [r0, #0]
90020918:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002091a:	4798      	blx	r3
9002091c:	e771      	b.n	90020802 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9002091e:	bf00      	nop
90020920:	24023406 	.word	0x24023406
90020924:	2402340c 	.word	0x2402340c

90020928 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
90020928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002092c:	b087      	sub	sp, #28
9002092e:	4680      	mov	r8, r0
90020930:	460d      	mov	r5, r1
90020932:	4614      	mov	r4, r2
90020934:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
90020938:	2e00      	cmp	r6, #0
9002093a:	f000 80b9 	beq.w	90020ab0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9002093e:	6810      	ldr	r0, [r2, #0]
90020940:	af02      	add	r7, sp, #8
90020942:	6851      	ldr	r1, [r2, #4]
90020944:	c703      	stmia	r7!, {r0, r1}
90020946:	6818      	ldr	r0, [r3, #0]
90020948:	af04      	add	r7, sp, #16
9002094a:	6859      	ldr	r1, [r3, #4]
9002094c:	c703      	stmia	r7!, {r0, r1}
9002094e:	a802      	add	r0, sp, #8
90020950:	f7f7 fbe4 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020954:	4621      	mov	r1, r4
90020956:	a804      	add	r0, sp, #16
90020958:	f7f7 fc08 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002095c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020960:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020964:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90020968:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9002096c:	fb14 2103 	smlabb	r1, r4, r3, r2
90020970:	eb08 0401 	add.w	r4, r8, r1
90020974:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020978:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9002097c:	440a      	add	r2, r1
9002097e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
90020982:	f8ad 2010 	strh.w	r2, [sp, #16]
90020986:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9002098a:	4413      	add	r3, r2
9002098c:	f8ad 3012 	strh.w	r3, [sp, #18]
90020990:	4b49      	ldr	r3, [pc, #292]	@ (90020ab8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020992:	6818      	ldr	r0, [r3, #0]
90020994:	6803      	ldr	r3, [r0, #0]
90020996:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020998:	4798      	blx	r3
9002099a:	4b48      	ldr	r3, [pc, #288]	@ (90020abc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9002099c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
900209a0:	2eff      	cmp	r6, #255	@ 0xff
900209a2:	881a      	ldrh	r2, [r3, #0]
900209a4:	f9bd c010 	ldrsh.w	ip, [sp, #16]
900209a8:	fb02 c101 	mla	r1, r2, r1, ip
900209ac:	fb02 f207 	mul.w	r2, r2, r7
900209b0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900209b4:	f105 0104 	add.w	r1, r5, #4
900209b8:	461d      	mov	r5, r3
900209ba:	d05a      	beq.n	90020a72 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
900209bc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
900209c0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900209c4:	b2b6      	uxth	r6, r6
900209c6:	9301      	str	r3, [sp, #4]
900209c8:	fa1f fe8e 	uxth.w	lr, lr
900209cc:	4282      	cmp	r2, r0
900209ce:	d96a      	bls.n	90020aa6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
900209d0:	eb00 0b0a 	add.w	fp, r0, sl
900209d4:	4583      	cmp	fp, r0
900209d6:	d940      	bls.n	90020a5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
900209d8:	8805      	ldrh	r5, [r0, #0]
900209da:	f814 3b01 	ldrb.w	r3, [r4], #1
900209de:	122f      	asrs	r7, r5, #8
900209e0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
900209e4:	ea4f 09e5 	mov.w	r9, r5, asr #3
900209e8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900209ec:	00ed      	lsls	r5, r5, #3
900209ee:	ea4f 2c23 	mov.w	ip, r3, asr #8
900209f2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900209f6:	fb17 f70e 	smulbb	r7, r7, lr
900209fa:	b2ed      	uxtb	r5, r5
900209fc:	fb19 f90e 	smulbb	r9, r9, lr
90020a00:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020a04:	fb15 f50e 	smulbb	r5, r5, lr
90020a08:	fb0c 7c06 	mla	ip, ip, r6, r7
90020a0c:	10df      	asrs	r7, r3, #3
90020a0e:	00db      	lsls	r3, r3, #3
90020a10:	fa1f fc8c 	uxth.w	ip, ip
90020a14:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020a18:	b2db      	uxtb	r3, r3
90020a1a:	fb07 9706 	mla	r7, r7, r6, r9
90020a1e:	f10c 0901 	add.w	r9, ip, #1
90020a22:	fb03 5306 	mla	r3, r3, r6, r5
90020a26:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
90020a2a:	b29b      	uxth	r3, r3
90020a2c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
90020a30:	b2bf      	uxth	r7, r7
90020a32:	f103 0c01 	add.w	ip, r3, #1
90020a36:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020a3a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020a3e:	ea4c 0c09 	orr.w	ip, ip, r9
90020a42:	f107 0901 	add.w	r9, r7, #1
90020a46:	eb09 2717 	add.w	r7, r9, r7, lsr #8
90020a4a:	097f      	lsrs	r7, r7, #5
90020a4c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90020a50:	ea4c 0c07 	orr.w	ip, ip, r7
90020a54:	f820 cb02 	strh.w	ip, [r0], #2
90020a58:	e7bc      	b.n	900209d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
90020a5a:	9b01      	ldr	r3, [sp, #4]
90020a5c:	881b      	ldrh	r3, [r3, #0]
90020a5e:	eba3 0308 	sub.w	r3, r3, r8
90020a62:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020a66:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020a6a:	eba3 0308 	sub.w	r3, r3, r8
90020a6e:	441c      	add	r4, r3
90020a70:	e7ac      	b.n	900209cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90020a72:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020a76:	4282      	cmp	r2, r0
90020a78:	d915      	bls.n	90020aa6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90020a7a:	eb00 060a 	add.w	r6, r0, sl
90020a7e:	4286      	cmp	r6, r0
90020a80:	d906      	bls.n	90020a90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90020a82:	f814 3b01 	ldrb.w	r3, [r4], #1
90020a86:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020a8a:	f820 3b02 	strh.w	r3, [r0], #2
90020a8e:	e7f6      	b.n	90020a7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90020a90:	882b      	ldrh	r3, [r5, #0]
90020a92:	eba3 0308 	sub.w	r3, r3, r8
90020a96:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020a9a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020a9e:	eba3 0308 	sub.w	r3, r3, r8
90020aa2:	441c      	add	r4, r3
90020aa4:	e7e7      	b.n	90020a76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90020aa6:	4b04      	ldr	r3, [pc, #16]	@ (90020ab8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020aa8:	6818      	ldr	r0, [r3, #0]
90020aaa:	6803      	ldr	r3, [r0, #0]
90020aac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020aae:	4798      	blx	r3
90020ab0:	b007      	add	sp, #28
90020ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020ab6:	bf00      	nop
90020ab8:	2402340c 	.word	0x2402340c
90020abc:	24023406 	.word	0x24023406

90020ac0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
90020ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ac4:	b091      	sub	sp, #68	@ 0x44
90020ac6:	4680      	mov	r8, r0
90020ac8:	460f      	mov	r7, r1
90020aca:	4614      	mov	r4, r2
90020acc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
90020ad0:	2d00      	cmp	r5, #0
90020ad2:	d051      	beq.n	90020b78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020ad4:	6810      	ldr	r0, [r2, #0]
90020ad6:	ae0c      	add	r6, sp, #48	@ 0x30
90020ad8:	6851      	ldr	r1, [r2, #4]
90020ada:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 90020cdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
90020ade:	c603      	stmia	r6!, {r0, r1}
90020ae0:	6818      	ldr	r0, [r3, #0]
90020ae2:	ae0e      	add	r6, sp, #56	@ 0x38
90020ae4:	6859      	ldr	r1, [r3, #4]
90020ae6:	c603      	stmia	r6!, {r0, r1}
90020ae8:	a80c      	add	r0, sp, #48	@ 0x30
90020aea:	f7f7 fb17 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020aee:	4621      	mov	r1, r4
90020af0:	a80e      	add	r0, sp, #56	@ 0x38
90020af2:	f7f7 fb3b 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020af6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
90020afa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90020afe:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90020b02:	f8d9 0000 	ldr.w	r0, [r9]
90020b06:	fb11 2103 	smlabb	r1, r1, r3, r2
90020b0a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
90020b0e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
90020b12:	eb08 0401 	add.w	r4, r8, r1
90020b16:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
90020b1a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 90020ce0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
90020b1e:	440a      	add	r2, r1
90020b20:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90020b24:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90020b28:	4413      	add	r3, r2
90020b2a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
90020b2e:	6803      	ldr	r3, [r0, #0]
90020b30:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020b32:	4798      	blx	r3
90020b34:	f010 0f80 	tst.w	r0, #128	@ 0x80
90020b38:	f8d9 0000 	ldr.w	r0, [r9]
90020b3c:	d01f      	beq.n	90020b7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
90020b3e:	2200      	movs	r2, #0
90020b40:	6801      	ldr	r1, [r0, #0]
90020b42:	b2b6      	uxth	r6, r6
90020b44:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90020b48:	e9cd 2208 	strd	r2, r2, [sp, #32]
90020b4c:	220b      	movs	r2, #11
90020b4e:	9207      	str	r2, [sp, #28]
90020b50:	f8b8 2000 	ldrh.w	r2, [r8]
90020b54:	9601      	str	r6, [sp, #4]
90020b56:	9206      	str	r2, [sp, #24]
90020b58:	2201      	movs	r2, #1
90020b5a:	e9cd 5204 	strd	r5, r2, [sp, #16]
90020b5e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90020b62:	9203      	str	r2, [sp, #12]
90020b64:	fa1f f28a 	uxth.w	r2, sl
90020b68:	9202      	str	r2, [sp, #8]
90020b6a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90020b6e:	9200      	str	r2, [sp, #0]
90020b70:	463a      	mov	r2, r7
90020b72:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
90020b74:	4621      	mov	r1, r4
90020b76:	47a8      	blx	r5
90020b78:	b011      	add	sp, #68	@ 0x44
90020b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b7e:	6803      	ldr	r3, [r0, #0]
90020b80:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020b84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020b86:	4798      	blx	r3
90020b88:	f8b8 2000 	ldrh.w	r2, [r8]
90020b8c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90020b90:	2dff      	cmp	r5, #255	@ 0xff
90020b92:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90020b96:	fb0a fa02 	mul.w	sl, sl, r2
90020b9a:	fb02 1303 	mla	r3, r2, r3, r1
90020b9e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020ba2:	d062      	beq.n	90020c6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90020ba4:	ea6f 0c05 	mvn.w	ip, r5
90020ba8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90020bac:	b2ad      	uxth	r5, r5
90020bae:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
90020bb2:	fa5f fc8c 	uxtb.w	ip, ip
90020bb6:	930a      	str	r3, [sp, #40]	@ 0x28
90020bb8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020bba:	4298      	cmp	r0, r3
90020bbc:	f080 8085 	bcs.w	90020cca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020bc0:	eb00 0b09 	add.w	fp, r0, r9
90020bc4:	4558      	cmp	r0, fp
90020bc6:	d246      	bcs.n	90020c56 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90020bc8:	f814 eb01 	ldrb.w	lr, [r4], #1
90020bcc:	2303      	movs	r3, #3
90020bce:	2204      	movs	r2, #4
90020bd0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90020bd4:	8803      	ldrh	r3, [r0, #0]
90020bd6:	eb07 0a0e 	add.w	sl, r7, lr
90020bda:	1219      	asrs	r1, r3, #8
90020bdc:	10da      	asrs	r2, r3, #3
90020bde:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020be2:	f89a 8002 	ldrb.w	r8, [sl, #2]
90020be6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020bea:	00db      	lsls	r3, r3, #3
90020bec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90020bf0:	fb18 f805 	smulbb	r8, r8, r5
90020bf4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020bf8:	fb1e fe05 	smulbb	lr, lr, r5
90020bfc:	b2db      	uxtb	r3, r3
90020bfe:	fb01 810c 	mla	r1, r1, ip, r8
90020c02:	f89a 8001 	ldrb.w	r8, [sl, #1]
90020c06:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
90020c0a:	fb18 f805 	smulbb	r8, r8, r5
90020c0e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
90020c12:	b289      	uxth	r1, r1
90020c14:	fb02 820c 	mla	r2, r2, ip, r8
90020c18:	fb03 e30c 	mla	r3, r3, ip, lr
90020c1c:	f101 0801 	add.w	r8, r1, #1
90020c20:	b292      	uxth	r2, r2
90020c22:	b29b      	uxth	r3, r3
90020c24:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90020c28:	f102 0801 	add.w	r8, r2, #1
90020c2c:	f103 0e01 	add.w	lr, r3, #1
90020c30:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90020c34:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90020c38:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
90020c3c:	ea4f 1858 	mov.w	r8, r8, lsr #5
90020c40:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020c44:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90020c48:	ea4e 0101 	orr.w	r1, lr, r1
90020c4c:	ea41 0108 	orr.w	r1, r1, r8
90020c50:	f820 1b02 	strh.w	r1, [r0], #2
90020c54:	e7b6      	b.n	90020bc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90020c56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020c58:	881b      	ldrh	r3, [r3, #0]
90020c5a:	1b9b      	subs	r3, r3, r6
90020c5c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020c60:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020c64:	1b9b      	subs	r3, r3, r6
90020c66:	441c      	add	r4, r3
90020c68:	e7a6      	b.n	90020bb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90020c6a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
90020c6e:	2203      	movs	r2, #3
90020c70:	2504      	movs	r5, #4
90020c72:	4919      	ldr	r1, [pc, #100]	@ (90020cd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020c74:	4550      	cmp	r0, sl
90020c76:	d228      	bcs.n	90020cca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020c78:	eb00 0c09 	add.w	ip, r0, r9
90020c7c:	4560      	cmp	r0, ip
90020c7e:	4623      	mov	r3, r4
90020c80:	d219      	bcs.n	90020cb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90020c82:	f893 e000 	ldrb.w	lr, [r3]
90020c86:	3401      	adds	r4, #1
90020c88:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90020c8c:	eb07 0b0e 	add.w	fp, r7, lr
90020c90:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020c94:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020c98:	f89b b001 	ldrb.w	fp, [fp, #1]
90020c9c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90020ca0:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020ca4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90020ca8:	ea43 030b 	orr.w	r3, r3, fp
90020cac:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90020cb0:	f820 3b02 	strh.w	r3, [r0], #2
90020cb4:	e7e2      	b.n	90020c7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90020cb6:	f8b8 3000 	ldrh.w	r3, [r8]
90020cba:	1b9b      	subs	r3, r3, r6
90020cbc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020cc0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020cc4:	1b9b      	subs	r3, r3, r6
90020cc6:	441c      	add	r4, r3
90020cc8:	e7d4      	b.n	90020c74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
90020cca:	4b04      	ldr	r3, [pc, #16]	@ (90020cdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90020ccc:	6818      	ldr	r0, [r3, #0]
90020cce:	6803      	ldr	r3, [r0, #0]
90020cd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020cd2:	4798      	blx	r3
90020cd4:	e750      	b.n	90020b78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020cd6:	bf00      	nop
90020cd8:	fffff800 	.word	0xfffff800
90020cdc:	2402340c 	.word	0x2402340c
90020ce0:	24023406 	.word	0x24023406

90020ce4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020ce4:	b4f0      	push	{r4, r5, r6, r7}
90020ce6:	460c      	mov	r4, r1
90020ce8:	4611      	mov	r1, r2
90020cea:	f89d 5014 	ldrb.w	r5, [sp, #20]
90020cee:	461a      	mov	r2, r3
90020cf0:	780f      	ldrb	r7, [r1, #0]
90020cf2:	9b04      	ldr	r3, [sp, #16]
90020cf4:	2f01      	cmp	r7, #1
90020cf6:	784e      	ldrb	r6, [r1, #1]
90020cf8:	d038      	beq.n	90020d6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
90020cfa:	d31f      	bcc.n	90020d3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
90020cfc:	2f02      	cmp	r7, #2
90020cfe:	d14d      	bne.n	90020d9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d00:	2e03      	cmp	r6, #3
90020d02:	d84b      	bhi.n	90020d9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d04:	e8df f006 	tbb	[pc, r6]
90020d08:	17140702 	.word	0x17140702
90020d0c:	9504      	str	r5, [sp, #16]
90020d0e:	4620      	mov	r0, r4
90020d10:	bcf0      	pop	{r4, r5, r6, r7}
90020d12:	f7ff be09 	b.w	90020928 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90020d16:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020d18:	2800      	cmp	r0, #0
90020d1a:	d03f      	beq.n	90020d9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d1c:	6806      	ldr	r6, [r0, #0]
90020d1e:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020d22:	68b5      	ldr	r5, [r6, #8]
90020d24:	4613      	mov	r3, r2
90020d26:	46ac      	mov	ip, r5
90020d28:	460a      	mov	r2, r1
90020d2a:	4621      	mov	r1, r4
90020d2c:	bcf0      	pop	{r4, r5, r6, r7}
90020d2e:	4760      	bx	ip
90020d30:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020d34:	e7f0      	b.n	90020d18 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020d36:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90020d3a:	e7ed      	b.n	90020d18 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020d3c:	2e03      	cmp	r6, #3
90020d3e:	d82d      	bhi.n	90020d9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d40:	e8df f006 	tbb	[pc, r6]
90020d44:	110e0702 	.word	0x110e0702
90020d48:	9504      	str	r5, [sp, #16]
90020d4a:	4620      	mov	r0, r4
90020d4c:	bcf0      	pop	{r4, r5, r6, r7}
90020d4e:	f7ff bd05 	b.w	9002075c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90020d52:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020d54:	b310      	cbz	r0, 90020d9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d56:	6806      	ldr	r6, [r0, #0]
90020d58:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020d5c:	68f5      	ldr	r5, [r6, #12]
90020d5e:	e7e1      	b.n	90020d24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020d60:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020d64:	e7f6      	b.n	90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020d66:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90020d6a:	e7f3      	b.n	90020d54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020d6c:	2e03      	cmp	r6, #3
90020d6e:	d815      	bhi.n	90020d9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d70:	e8df f006 	tbb	[pc, r6]
90020d74:	110e0702 	.word	0x110e0702
90020d78:	9504      	str	r5, [sp, #16]
90020d7a:	4620      	mov	r0, r4
90020d7c:	bcf0      	pop	{r4, r5, r6, r7}
90020d7e:	f7ff be9f 	b.w	90020ac0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90020d82:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020d84:	b150      	cbz	r0, 90020d9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020d86:	6806      	ldr	r6, [r0, #0]
90020d88:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020d8c:	6935      	ldr	r5, [r6, #16]
90020d8e:	e7c9      	b.n	90020d24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020d90:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020d94:	e7f6      	b.n	90020d84 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020d96:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90020d9a:	e7f3      	b.n	90020d84 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020d9c:	bcf0      	pop	{r4, r5, r6, r7}
90020d9e:	4770      	bx	lr

90020da0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020da4:	b087      	sub	sp, #28
90020da6:	4604      	mov	r4, r0
90020da8:	460e      	mov	r6, r1
90020daa:	6810      	ldr	r0, [r2, #0]
90020dac:	6851      	ldr	r1, [r2, #4]
90020dae:	ad02      	add	r5, sp, #8
90020db0:	4617      	mov	r7, r2
90020db2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
90020db6:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90020fe8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90020dba:	c503      	stmia	r5!, {r0, r1}
90020dbc:	6818      	ldr	r0, [r3, #0]
90020dbe:	ad04      	add	r5, sp, #16
90020dc0:	6859      	ldr	r1, [r3, #4]
90020dc2:	c503      	stmia	r5!, {r0, r1}
90020dc4:	a802      	add	r0, sp, #8
90020dc6:	f7f7 f9a9 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020dca:	4639      	mov	r1, r7
90020dcc:	a804      	add	r0, sp, #16
90020dce:	f7f7 f9cd 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020dd2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020dd6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020dda:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90020dde:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020de2:	fb11 2103 	smlabb	r1, r1, r3, r2
90020de6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90020dea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90020dee:	440e      	add	r6, r1
90020df0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020df4:	440a      	add	r2, r1
90020df6:	f8ad 2010 	strh.w	r2, [sp, #16]
90020dfa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020dfe:	4413      	add	r3, r2
90020e00:	f8ad 3012 	strh.w	r3, [sp, #18]
90020e04:	4b77      	ldr	r3, [pc, #476]	@ (90020fe4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020e06:	6818      	ldr	r0, [r3, #0]
90020e08:	6803      	ldr	r3, [r0, #0]
90020e0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020e0c:	4798      	blx	r3
90020e0e:	f8b9 b000 	ldrh.w	fp, [r9]
90020e12:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020e16:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90020e1a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020e1e:	fb05 f50b 	mul.w	r5, r5, fp
90020e22:	fb0b 2303 	mla	r3, fp, r3, r2
90020e26:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020e2a:	ea4f 0348 	mov.w	r3, r8, lsl #1
90020e2e:	9300      	str	r3, [sp, #0]
90020e30:	d069      	beq.n	90020f06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90020e32:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90020e36:	4558      	cmp	r0, fp
90020e38:	f080 80cc 	bcs.w	90020fd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020e3c:	9b00      	ldr	r3, [sp, #0]
90020e3e:	4631      	mov	r1, r6
90020e40:	18c3      	adds	r3, r0, r3
90020e42:	9301      	str	r3, [sp, #4]
90020e44:	9b01      	ldr	r3, [sp, #4]
90020e46:	4298      	cmp	r0, r3
90020e48:	d24f      	bcs.n	90020eea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
90020e4a:	f811 2b01 	ldrb.w	r2, [r1], #1
90020e4e:	2a00      	cmp	r2, #0
90020e50:	d048      	beq.n	90020ee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020e52:	fb0a f202 	mul.w	r2, sl, r2
90020e56:	1c53      	adds	r3, r2, #1
90020e58:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020e5c:	121b      	asrs	r3, r3, #8
90020e5e:	d041      	beq.n	90020ee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020e60:	8802      	ldrh	r2, [r0, #0]
90020e62:	b29e      	uxth	r6, r3
90020e64:	f8b4 c000 	ldrh.w	ip, [r4]
90020e68:	43db      	mvns	r3, r3
90020e6a:	1215      	asrs	r5, r2, #8
90020e6c:	b2db      	uxtb	r3, r3
90020e6e:	ea4f 272c 	mov.w	r7, ip, asr #8
90020e72:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020e76:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020e7a:	fb15 f503 	smulbb	r5, r5, r3
90020e7e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020e82:	00d2      	lsls	r2, r2, #3
90020e84:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020e88:	fb07 5706 	mla	r7, r7, r6, r5
90020e8c:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020e90:	b2d2      	uxtb	r2, r2
90020e92:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020e96:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020e9a:	fb1e fe03 	smulbb	lr, lr, r3
90020e9e:	b2bf      	uxth	r7, r7
90020ea0:	fb12 f203 	smulbb	r2, r2, r3
90020ea4:	fa5f fc8c 	uxtb.w	ip, ip
90020ea8:	fb05 e506 	mla	r5, r5, r6, lr
90020eac:	f107 0e01 	add.w	lr, r7, #1
90020eb0:	fb0c 2c06 	mla	ip, ip, r6, r2
90020eb4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90020eb8:	fa1f fc8c 	uxth.w	ip, ip
90020ebc:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
90020ec0:	b2ad      	uxth	r5, r5
90020ec2:	f10c 0701 	add.w	r7, ip, #1
90020ec6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020eca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020ece:	ea47 070e 	orr.w	r7, r7, lr
90020ed2:	f105 0e01 	add.w	lr, r5, #1
90020ed6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90020eda:	096d      	lsrs	r5, r5, #5
90020edc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020ee0:	432f      	orrs	r7, r5
90020ee2:	8007      	strh	r7, [r0, #0]
90020ee4:	3002      	adds	r0, #2
90020ee6:	3402      	adds	r4, #2
90020ee8:	e7ac      	b.n	90020e44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90020eea:	f8b9 3000 	ldrh.w	r3, [r9]
90020eee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020ef2:	eba3 0308 	sub.w	r3, r3, r8
90020ef6:	eba6 0608 	sub.w	r6, r6, r8
90020efa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020efe:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020f02:	440e      	add	r6, r1
90020f04:	e797      	b.n	90020e36 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90020f06:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90020f0a:	42a8      	cmp	r0, r5
90020f0c:	d262      	bcs.n	90020fd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020f0e:	9b00      	ldr	r3, [sp, #0]
90020f10:	4631      	mov	r1, r6
90020f12:	eb00 0b03 	add.w	fp, r0, r3
90020f16:	4558      	cmp	r0, fp
90020f18:	d24e      	bcs.n	90020fb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90020f1a:	f811 3b01 	ldrb.w	r3, [r1], #1
90020f1e:	b12b      	cbz	r3, 90020f2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020f20:	2bff      	cmp	r3, #255	@ 0xff
90020f22:	f8b4 e000 	ldrh.w	lr, [r4]
90020f26:	d104      	bne.n	90020f32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90020f28:	f8a0 e000 	strh.w	lr, [r0]
90020f2c:	3002      	adds	r0, #2
90020f2e:	3402      	adds	r4, #2
90020f30:	e7f1      	b.n	90020f16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90020f32:	8802      	ldrh	r2, [r0, #0]
90020f34:	b29f      	uxth	r7, r3
90020f36:	43db      	mvns	r3, r3
90020f38:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90020f3c:	1216      	asrs	r6, r2, #8
90020f3e:	b2db      	uxtb	r3, r3
90020f40:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020f44:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020f48:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90020f4c:	00d2      	lsls	r2, r2, #3
90020f4e:	fb16 f603 	smulbb	r6, r6, r3
90020f52:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90020f56:	b2d2      	uxtb	r2, r2
90020f58:	fb0c 6c07 	mla	ip, ip, r7, r6
90020f5c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020f60:	fb1a fa03 	smulbb	sl, sl, r3
90020f64:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020f68:	fa1f fc8c 	uxth.w	ip, ip
90020f6c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020f70:	fb12 f303 	smulbb	r3, r2, r3
90020f74:	fa5f fe8e 	uxtb.w	lr, lr
90020f78:	fb06 a607 	mla	r6, r6, r7, sl
90020f7c:	f10c 0201 	add.w	r2, ip, #1
90020f80:	fb0e 3307 	mla	r3, lr, r7, r3
90020f84:	b2b6      	uxth	r6, r6
90020f86:	b29b      	uxth	r3, r3
90020f88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020f8c:	f106 0a01 	add.w	sl, r6, #1
90020f90:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90020f94:	f103 0c01 	add.w	ip, r3, #1
90020f98:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020f9c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020fa0:	0976      	lsrs	r6, r6, #5
90020fa2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020fa6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020faa:	ea4c 0c02 	orr.w	ip, ip, r2
90020fae:	ea4c 0c06 	orr.w	ip, ip, r6
90020fb2:	f8a0 c000 	strh.w	ip, [r0]
90020fb6:	e7b9      	b.n	90020f2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020fb8:	f8b9 3000 	ldrh.w	r3, [r9]
90020fbc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020fc0:	eba3 0308 	sub.w	r3, r3, r8
90020fc4:	eba6 0608 	sub.w	r6, r6, r8
90020fc8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020fcc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020fd0:	440e      	add	r6, r1
90020fd2:	e79a      	b.n	90020f0a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90020fd4:	4b03      	ldr	r3, [pc, #12]	@ (90020fe4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020fd6:	6818      	ldr	r0, [r3, #0]
90020fd8:	6803      	ldr	r3, [r0, #0]
90020fda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020fdc:	4798      	blx	r3
90020fde:	b007      	add	sp, #28
90020fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020fe4:	2402340c 	.word	0x2402340c
90020fe8:	24023406 	.word	0x24023406

90020fec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ff0:	b089      	sub	sp, #36	@ 0x24
90020ff2:	4682      	mov	sl, r0
90020ff4:	460f      	mov	r7, r1
90020ff6:	4691      	mov	r9, r2
90020ff8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
90020ffc:	4698      	mov	r8, r3
90020ffe:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021000:	2e00      	cmp	r6, #0
90021002:	d03d      	beq.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90021004:	4608      	mov	r0, r1
90021006:	f7fa fe4b 	bl	9001bca0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002100a:	4605      	mov	r5, r0
9002100c:	4638      	mov	r0, r7
9002100e:	f7fa fe7b 	bl	9001bd08 <_ZNK8touchgfx6Bitmap9getHeightEv>
90021012:	f8ad 000e 	strh.w	r0, [sp, #14]
90021016:	4638      	mov	r0, r7
90021018:	f8ad 9008 	strh.w	r9, [sp, #8]
9002101c:	f8ad 500c 	strh.w	r5, [sp, #12]
90021020:	f8ad 800a 	strh.w	r8, [sp, #10]
90021024:	f7fa ff28 	bl	9001be78 <_ZNK8touchgfx6Bitmap7getDataEv>
90021028:	4605      	mov	r5, r0
9002102a:	4638      	mov	r0, r7
9002102c:	f7fa ff54 	bl	9001bed8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90021030:	4681      	mov	r9, r0
90021032:	4638      	mov	r0, r7
90021034:	f7fa ffa4 	bl	9001bf80 <_ZNK8touchgfx6Bitmap9getFormatEv>
90021038:	280b      	cmp	r0, #11
9002103a:	d821      	bhi.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9002103c:	e8df f000 	tbb	[pc, r0]
90021040:	2006aebe 	.word	0x2006aebe
90021044:	20202020 	.word	0x20202020
90021048:	b5202020 	.word	0xb5202020
9002104c:	4bb0      	ldr	r3, [pc, #704]	@ (90021310 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9002104e:	6818      	ldr	r0, [r3, #0]
90021050:	6803      	ldr	r3, [r0, #0]
90021052:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021054:	4798      	blx	r3
90021056:	2eff      	cmp	r6, #255	@ 0xff
90021058:	d101      	bne.n	9002105e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9002105a:	0683      	lsls	r3, r0, #26
9002105c:	d506      	bpl.n	9002106c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9002105e:	4633      	mov	r3, r6
90021060:	4622      	mov	r2, r4
90021062:	a902      	add	r1, sp, #8
90021064:	4628      	mov	r0, r5
90021066:	f7ff f907 	bl	90020278 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9002106a:	e009      	b.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9002106c:	4638      	mov	r0, r7
9002106e:	f7fa fecb 	bl	9001be08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021072:	b940      	cbnz	r0, 90021086 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
90021074:	4623      	mov	r3, r4
90021076:	aa02      	add	r2, sp, #8
90021078:	4629      	mov	r1, r5
9002107a:	4650      	mov	r0, sl
9002107c:	f7ff f9e2 	bl	90020444 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90021080:	b009      	add	sp, #36	@ 0x24
90021082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021086:	f10d 0818 	add.w	r8, sp, #24
9002108a:	4639      	mov	r1, r7
9002108c:	af04      	add	r7, sp, #16
9002108e:	4640      	mov	r0, r8
90021090:	f7fa fe6e 	bl	9001bd70 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90021094:	e898 0003 	ldmia.w	r8, {r0, r1}
90021098:	e887 0003 	stmia.w	r7, {r0, r1}
9002109c:	4638      	mov	r0, r7
9002109e:	4621      	mov	r1, r4
900210a0:	f7f1 f89c 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
900210a4:	4638      	mov	r0, r7
900210a6:	f7f1 f8dc 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900210aa:	2800      	cmp	r0, #0
900210ac:	d1d7      	bne.n	9002105e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
900210ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900210b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900210b6:	4293      	cmp	r3, r2
900210b8:	dd12      	ble.n	900210e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
900210ba:	1a9b      	subs	r3, r3, r2
900210bc:	f9b4 0000 	ldrsh.w	r0, [r4]
900210c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900210c4:	f8ad 0018 	strh.w	r0, [sp, #24]
900210c8:	4628      	mov	r0, r5
900210ca:	f8ad 201a 	strh.w	r2, [sp, #26]
900210ce:	4642      	mov	r2, r8
900210d0:	f8ad 101c 	strh.w	r1, [sp, #28]
900210d4:	a902      	add	r1, sp, #8
900210d6:	f8ad 301e 	strh.w	r3, [sp, #30]
900210da:	4633      	mov	r3, r6
900210dc:	f7ff f8cc 	bl	90020278 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900210e0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900210e4:	f9b4 2000 	ldrsh.w	r2, [r4]
900210e8:	4293      	cmp	r3, r2
900210ea:	dd12      	ble.n	90021112 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
900210ec:	1a9b      	subs	r3, r3, r2
900210ee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
900210f2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
900210f6:	f8ad 2018 	strh.w	r2, [sp, #24]
900210fa:	4642      	mov	r2, r8
900210fc:	f8ad 001a 	strh.w	r0, [sp, #26]
90021100:	4628      	mov	r0, r5
90021102:	f8ad 301c 	strh.w	r3, [sp, #28]
90021106:	23ff      	movs	r3, #255	@ 0xff
90021108:	f8ad 101e 	strh.w	r1, [sp, #30]
9002110c:	a902      	add	r1, sp, #8
9002110e:	f7ff f8b3 	bl	90020278 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021112:	463b      	mov	r3, r7
90021114:	aa02      	add	r2, sp, #8
90021116:	4629      	mov	r1, r5
90021118:	4650      	mov	r0, sl
9002111a:	f7ff f993 	bl	90020444 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9002111e:	88a2      	ldrh	r2, [r4, #4]
90021120:	8823      	ldrh	r3, [r4, #0]
90021122:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90021126:	4413      	add	r3, r2
90021128:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9002112c:	440a      	add	r2, r1
9002112e:	b29b      	uxth	r3, r3
90021130:	b292      	uxth	r2, r2
90021132:	b218      	sxth	r0, r3
90021134:	b211      	sxth	r1, r2
90021136:	4288      	cmp	r0, r1
90021138:	dd12      	ble.n	90021160 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9002113a:	1a9b      	subs	r3, r3, r2
9002113c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90021140:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90021144:	4642      	mov	r2, r8
90021146:	f8ad 1018 	strh.w	r1, [sp, #24]
9002114a:	a902      	add	r1, sp, #8
9002114c:	f8ad 301c 	strh.w	r3, [sp, #28]
90021150:	23ff      	movs	r3, #255	@ 0xff
90021152:	f8ad 001e 	strh.w	r0, [sp, #30]
90021156:	4628      	mov	r0, r5
90021158:	f8ad 601a 	strh.w	r6, [sp, #26]
9002115c:	f7ff f88c 	bl	90020278 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021160:	88e2      	ldrh	r2, [r4, #6]
90021162:	8863      	ldrh	r3, [r4, #2]
90021164:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90021168:	4413      	add	r3, r2
9002116a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9002116e:	440a      	add	r2, r1
90021170:	b29b      	uxth	r3, r3
90021172:	b292      	uxth	r2, r2
90021174:	b218      	sxth	r0, r3
90021176:	b211      	sxth	r1, r2
90021178:	4288      	cmp	r0, r1
9002117a:	dd81      	ble.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9002117c:	1a9b      	subs	r3, r3, r2
9002117e:	f9b4 6000 	ldrsh.w	r6, [r4]
90021182:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90021186:	4642      	mov	r2, r8
90021188:	f8ad 301e 	strh.w	r3, [sp, #30]
9002118c:	23ff      	movs	r3, #255	@ 0xff
9002118e:	f8ad 6018 	strh.w	r6, [sp, #24]
90021192:	f8ad 101a 	strh.w	r1, [sp, #26]
90021196:	f8ad 001c 	strh.w	r0, [sp, #28]
9002119a:	e762      	b.n	90021062 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9002119c:	4633      	mov	r3, r6
9002119e:	4622      	mov	r2, r4
900211a0:	a902      	add	r1, sp, #8
900211a2:	4628      	mov	r0, r5
900211a4:	f7ff f9be 	bl	90020524 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
900211a8:	e76a      	b.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900211aa:	e9cd 4600 	strd	r4, r6, [sp]
900211ae:	ab02      	add	r3, sp, #8
900211b0:	464a      	mov	r2, r9
900211b2:	4629      	mov	r1, r5
900211b4:	4650      	mov	r0, sl
900211b6:	f7ff fd95 	bl	90020ce4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
900211ba:	e761      	b.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900211bc:	4638      	mov	r0, r7
900211be:	f7fa fe23 	bl	9001be08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900211c2:	b950      	cbnz	r0, 900211da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
900211c4:	f8da 3000 	ldr.w	r3, [sl]
900211c8:	aa02      	add	r2, sp, #8
900211ca:	4629      	mov	r1, r5
900211cc:	e9cd 6000 	strd	r6, r0, [sp]
900211d0:	4650      	mov	r0, sl
900211d2:	68de      	ldr	r6, [r3, #12]
900211d4:	4623      	mov	r3, r4
900211d6:	47b0      	blx	r6
900211d8:	e752      	b.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900211da:	f10d 0818 	add.w	r8, sp, #24
900211de:	4639      	mov	r1, r7
900211e0:	af04      	add	r7, sp, #16
900211e2:	4640      	mov	r0, r8
900211e4:	f7fa fdc4 	bl	9001bd70 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900211e8:	e898 0003 	ldmia.w	r8, {r0, r1}
900211ec:	e887 0003 	stmia.w	r7, {r0, r1}
900211f0:	4638      	mov	r0, r7
900211f2:	4621      	mov	r1, r4
900211f4:	f7f0 fff2 	bl	900121dc <_ZN8touchgfx4RectaNERKS0_>
900211f8:	4638      	mov	r0, r7
900211fa:	f7f1 f832 	bl	90012262 <_ZNK8touchgfx4Rect7isEmptyEv>
900211fe:	b138      	cbz	r0, 90021210 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
90021200:	4623      	mov	r3, r4
90021202:	9600      	str	r6, [sp, #0]
90021204:	aa02      	add	r2, sp, #8
90021206:	4649      	mov	r1, r9
90021208:	4628      	mov	r0, r5
9002120a:	f7ff fdc9 	bl	90020da0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9002120e:	e737      	b.n	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90021210:	f8da 3000 	ldr.w	r3, [sl]
90021214:	aa02      	add	r2, sp, #8
90021216:	4629      	mov	r1, r5
90021218:	e9cd 6000 	strd	r6, r0, [sp]
9002121c:	4650      	mov	r0, sl
9002121e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90021222:	463b      	mov	r3, r7
90021224:	47d8      	blx	fp
90021226:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002122a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9002122e:	4293      	cmp	r3, r2
90021230:	dd13      	ble.n	9002125a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
90021232:	f9b4 0000 	ldrsh.w	r0, [r4]
90021236:	1a9b      	subs	r3, r3, r2
90021238:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002123c:	f8ad 0018 	strh.w	r0, [sp, #24]
90021240:	4628      	mov	r0, r5
90021242:	f8ad 201a 	strh.w	r2, [sp, #26]
90021246:	aa02      	add	r2, sp, #8
90021248:	f8ad 101c 	strh.w	r1, [sp, #28]
9002124c:	4649      	mov	r1, r9
9002124e:	f8ad 301e 	strh.w	r3, [sp, #30]
90021252:	4643      	mov	r3, r8
90021254:	9600      	str	r6, [sp, #0]
90021256:	f7ff fda3 	bl	90020da0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9002125a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9002125e:	f9b4 2000 	ldrsh.w	r2, [r4]
90021262:	4293      	cmp	r3, r2
90021264:	dd13      	ble.n	9002128e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
90021266:	1a9b      	subs	r3, r3, r2
90021268:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9002126c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90021270:	f8ad 2018 	strh.w	r2, [sp, #24]
90021274:	aa02      	add	r2, sp, #8
90021276:	f8ad 001a 	strh.w	r0, [sp, #26]
9002127a:	4628      	mov	r0, r5
9002127c:	f8ad 301c 	strh.w	r3, [sp, #28]
90021280:	4643      	mov	r3, r8
90021282:	f8ad 101e 	strh.w	r1, [sp, #30]
90021286:	4649      	mov	r1, r9
90021288:	9600      	str	r6, [sp, #0]
9002128a:	f7ff fd89 	bl	90020da0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9002128e:	88a2      	ldrh	r2, [r4, #4]
90021290:	8823      	ldrh	r3, [r4, #0]
90021292:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90021296:	4413      	add	r3, r2
90021298:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9002129c:	440a      	add	r2, r1
9002129e:	b29b      	uxth	r3, r3
900212a0:	b292      	uxth	r2, r2
900212a2:	b218      	sxth	r0, r3
900212a4:	b211      	sxth	r1, r2
900212a6:	4288      	cmp	r0, r1
900212a8:	dd13      	ble.n	900212d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
900212aa:	1a9b      	subs	r3, r3, r2
900212ac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900212b0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
900212b4:	aa02      	add	r2, sp, #8
900212b6:	f8ad 1018 	strh.w	r1, [sp, #24]
900212ba:	4649      	mov	r1, r9
900212bc:	f8ad 301c 	strh.w	r3, [sp, #28]
900212c0:	4643      	mov	r3, r8
900212c2:	f8ad 001e 	strh.w	r0, [sp, #30]
900212c6:	4628      	mov	r0, r5
900212c8:	9600      	str	r6, [sp, #0]
900212ca:	f8ad 701a 	strh.w	r7, [sp, #26]
900212ce:	f7ff fd67 	bl	90020da0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900212d2:	88e2      	ldrh	r2, [r4, #6]
900212d4:	8863      	ldrh	r3, [r4, #2]
900212d6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
900212da:	4413      	add	r3, r2
900212dc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
900212e0:	440a      	add	r2, r1
900212e2:	b29b      	uxth	r3, r3
900212e4:	b292      	uxth	r2, r2
900212e6:	b218      	sxth	r0, r3
900212e8:	b211      	sxth	r1, r2
900212ea:	4288      	cmp	r0, r1
900212ec:	f77f aec8 	ble.w	90021080 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900212f0:	f9b4 7000 	ldrsh.w	r7, [r4]
900212f4:	1a9b      	subs	r3, r3, r2
900212f6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900212fa:	f8ad 301e 	strh.w	r3, [sp, #30]
900212fe:	4643      	mov	r3, r8
90021300:	f8ad 7018 	strh.w	r7, [sp, #24]
90021304:	f8ad 101a 	strh.w	r1, [sp, #26]
90021308:	f8ad 001c 	strh.w	r0, [sp, #28]
9002130c:	9600      	str	r6, [sp, #0]
9002130e:	e779      	b.n	90021204 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
90021310:	2402340c 	.word	0x2402340c

90021314 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90021314:	b180      	cbz	r0, 90021338 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90021316:	2903      	cmp	r1, #3
90021318:	d81c      	bhi.n	90021354 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9002131a:	e8df f001 	tbb	[pc, r1]
9002131e:	1d02      	.short	0x1d02
90021320:	1f08      	.short	0x1f08
90021322:	4b10      	ldr	r3, [pc, #64]	@ (90021364 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90021324:	8818      	ldrh	r0, [r3, #0]
90021326:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002132a:	4240      	negs	r0, r0
9002132c:	4770      	bx	lr
9002132e:	4b0d      	ldr	r3, [pc, #52]	@ (90021364 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90021330:	8818      	ldrh	r0, [r3, #0]
90021332:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021336:	4770      	bx	lr
90021338:	2903      	cmp	r1, #3
9002133a:	d80b      	bhi.n	90021354 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9002133c:	a301      	add	r3, pc, #4	@ (adr r3, 90021344 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9002133e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90021342:	bf00      	nop
90021344:	90021359 	.word	0x90021359
90021348:	9002132f 	.word	0x9002132f
9002134c:	9002135d 	.word	0x9002135d
90021350:	90021323 	.word	0x90021323
90021354:	2000      	movs	r0, #0
90021356:	4770      	bx	lr
90021358:	2001      	movs	r0, #1
9002135a:	4770      	bx	lr
9002135c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
90021360:	4770      	bx	lr
90021362:	bf00      	nop
90021364:	24023406 	.word	0x24023406

90021368 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90021368:	b180      	cbz	r0, 9002138c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9002136a:	2903      	cmp	r1, #3
9002136c:	d81c      	bhi.n	900213a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9002136e:	e8df f001 	tbb	[pc, r1]
90021372:	021d      	.short	0x021d
90021374:	071f      	.short	0x071f
90021376:	4b10      	ldr	r3, [pc, #64]	@ (900213b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90021378:	8818      	ldrh	r0, [r3, #0]
9002137a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002137e:	4770      	bx	lr
90021380:	4b0d      	ldr	r3, [pc, #52]	@ (900213b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90021382:	8818      	ldrh	r0, [r3, #0]
90021384:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021388:	4240      	negs	r0, r0
9002138a:	4770      	bx	lr
9002138c:	2903      	cmp	r1, #3
9002138e:	d80b      	bhi.n	900213a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90021390:	a301      	add	r3, pc, #4	@ (adr r3, 90021398 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90021392:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90021396:	bf00      	nop
90021398:	90021377 	.word	0x90021377
9002139c:	900213b1 	.word	0x900213b1
900213a0:	90021381 	.word	0x90021381
900213a4:	900213ad 	.word	0x900213ad
900213a8:	2000      	movs	r0, #0
900213aa:	4770      	bx	lr
900213ac:	2001      	movs	r0, #1
900213ae:	4770      	bx	lr
900213b0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
900213b4:	4770      	bx	lr
900213b6:	bf00      	nop
900213b8:	24023406 	.word	0x24023406

900213bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
900213bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900213c0:	b099      	sub	sp, #100	@ 0x64
900213c2:	910b      	str	r1, [sp, #44]	@ 0x2c
900213c4:	a914      	add	r1, sp, #80	@ 0x50
900213c6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
900213ca:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
900213ce:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
900213d2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
900213d6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
900213da:	e881 000c 	stmia.w	r1, {r2, r3}
900213de:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
900213e2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
900213e6:	9309      	str	r3, [sp, #36]	@ 0x24
900213e8:	f891 900d 	ldrb.w	r9, [r1, #13]
900213ec:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900213f0:	ea4f 1749 	mov.w	r7, r9, lsl #5
900213f4:	9310      	str	r3, [sp, #64]	@ 0x40
900213f6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
900213fa:	930c      	str	r3, [sp, #48]	@ 0x30
900213fc:	f407 7380 	and.w	r3, r7, #256	@ 0x100
90021400:	798f      	ldrb	r7, [r1, #6]
90021402:	431f      	orrs	r7, r3
90021404:	f000 8195 	beq.w	90021732 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021408:	ea4f 1909 	mov.w	r9, r9, lsl #4
9002140c:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90021410:	f891 9007 	ldrb.w	r9, [r1, #7]
90021414:	ea59 0903 	orrs.w	r9, r9, r3
90021418:	f000 818b 	beq.w	90021732 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9002141c:	f991 3009 	ldrsb.w	r3, [r1, #9]
90021420:	b29b      	uxth	r3, r3
90021422:	2d00      	cmp	r5, #0
90021424:	f000 812e 	beq.w	90021684 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90021428:	1aed      	subs	r5, r5, r3
9002142a:	b2ad      	uxth	r5, r5
9002142c:	042b      	lsls	r3, r5, #16
9002142e:	d502      	bpl.n	90021436 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90021430:	1b64      	subs	r4, r4, r5
90021432:	2500      	movs	r5, #0
90021434:	b224      	sxth	r4, r4
90021436:	f9b2 1000 	ldrsh.w	r1, [r2]
9002143a:	a814      	add	r0, sp, #80	@ 0x50
9002143c:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
90021440:	428c      	cmp	r4, r1
90021442:	b28b      	uxth	r3, r1
90021444:	bfbf      	itttt	lt
90021446:	18ed      	addlt	r5, r5, r3
90021448:	1b2c      	sublt	r4, r5, r4
9002144a:	b2a5      	uxthlt	r5, r4
9002144c:	460c      	movlt	r4, r1
9002144e:	8891      	ldrh	r1, [r2, #4]
90021450:	440b      	add	r3, r1
90021452:	4621      	mov	r1, r4
90021454:	b21b      	sxth	r3, r3
90021456:	930f      	str	r3, [sp, #60]	@ 0x3c
90021458:	88d3      	ldrh	r3, [r2, #6]
9002145a:	8852      	ldrh	r2, [r2, #2]
9002145c:	4413      	add	r3, r2
9002145e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90021460:	b21b      	sxth	r3, r3
90021462:	930d      	str	r3, [sp, #52]	@ 0x34
90021464:	4bbd      	ldr	r3, [pc, #756]	@ (9002175c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90021466:	f893 b000 	ldrb.w	fp, [r3]
9002146a:	f10b 3cff 	add.w	ip, fp, #4294967295	@ 0xffffffff
9002146e:	f1dc 0300 	rsbs	r3, ip, #0
90021472:	eb43 030c 	adc.w	r3, r3, ip
90021476:	930e      	str	r3, [sp, #56]	@ 0x38
90021478:	4653      	mov	r3, sl
9002147a:	f7f6 fcc4 	bl	90017e06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9002147e:	4621      	mov	r1, r4
90021480:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90021484:	4653      	mov	r3, sl
90021486:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90021488:	a814      	add	r0, sp, #80	@ 0x50
9002148a:	f7f6 fcd9 	bl	90017e40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9002148e:	a918      	add	r1, sp, #96	@ 0x60
90021490:	f821 0d02 	strh.w	r0, [r1, #-2]!
90021494:	a817      	add	r0, sp, #92	@ 0x5c
90021496:	f7f6 fdff 	bl	90018098 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9002149a:	f1ba 0f00 	cmp.w	sl, #0
9002149e:	f040 80f4 	bne.w	9002168a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
900214a2:	f1bb 0f01 	cmp.w	fp, #1
900214a6:	f040 80f8 	bne.w	9002169a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
900214aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900214ac:	2b00      	cmp	r3, #0
900214ae:	f040 8145 	bne.w	9002173c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
900214b2:	b2ba      	uxth	r2, r7
900214b4:	b905      	cbnz	r5, 900214b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
900214b6:	b16e      	cbz	r6, 900214d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
900214b8:	fb06 5302 	mla	r3, r6, r2, r5
900214bc:	9828      	ldr	r0, [sp, #160]	@ 0xa0
900214be:	4631      	mov	r1, r6
900214c0:	fb08 f303 	mul.w	r3, r8, r3
900214c4:	f003 0607 	and.w	r6, r3, #7
900214c8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
900214cc:	9328      	str	r3, [sp, #160]	@ 0xa0
900214ce:	eba9 0301 	sub.w	r3, r9, r1
900214d2:	930a      	str	r3, [sp, #40]	@ 0x28
900214d4:	4651      	mov	r1, sl
900214d6:	980e      	ldr	r0, [sp, #56]	@ 0x38
900214d8:	f7ff ff1c 	bl	90021314 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
900214dc:	4681      	mov	r9, r0
900214de:	980e      	ldr	r0, [sp, #56]	@ 0x38
900214e0:	f7ff ff42 	bl	90021368 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
900214e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900214e6:	9909      	ldr	r1, [sp, #36]	@ 0x24
900214e8:	4683      	mov	fp, r0
900214ea:	eba3 0a01 	sub.w	sl, r3, r1
900214ee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900214f0:	459a      	cmp	sl, r3
900214f2:	bfa8      	it	ge
900214f4:	469a      	movge	sl, r3
900214f6:	f1ba 0f00 	cmp.w	sl, #0
900214fa:	f340 811a 	ble.w	90021732 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900214fe:	1b64      	subs	r4, r4, r5
90021500:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021502:	1b1c      	subs	r4, r3, r4
90021504:	42bc      	cmp	r4, r7
90021506:	bfd4      	ite	le
90021508:	ebc5 0504 	rsble	r5, r5, r4
9002150c:	ebc5 0507 	rsbgt	r5, r5, r7
90021510:	2d00      	cmp	r5, #0
90021512:	f340 810e 	ble.w	90021732 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021516:	1b52      	subs	r2, r2, r5
90021518:	fb08 f302 	mul.w	r3, r8, r2
9002151c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002151e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021520:	2b00      	cmp	r3, #0
90021522:	f040 8116 	bne.w	90021752 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
90021526:	4b8e      	ldr	r3, [pc, #568]	@ (90021760 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90021528:	6818      	ldr	r0, [r3, #0]
9002152a:	6803      	ldr	r3, [r0, #0]
9002152c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002152e:	4798      	blx	r3
90021530:	2301      	movs	r3, #1
90021532:	4a8c      	ldr	r2, [pc, #560]	@ (90021764 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90021534:	fa03 f308 	lsl.w	r3, r3, r8
90021538:	8811      	ldrh	r1, [r2, #0]
9002153a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
9002153e:	3b01      	subs	r3, #1
90021540:	b2db      	uxtb	r3, r3
90021542:	930e      	str	r3, [sp, #56]	@ 0x38
90021544:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
90021548:	fb01 2303 	mla	r3, r1, r3, r2
9002154c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021550:	930a      	str	r3, [sp, #40]	@ 0x28
90021552:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021554:	f3c3 4307 	ubfx	r3, r3, #16, #8
90021558:	9313      	str	r3, [sp, #76]	@ 0x4c
9002155a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002155c:	0a19      	lsrs	r1, r3, #8
9002155e:	b2cb      	uxtb	r3, r1
90021560:	9312      	str	r3, [sp, #72]	@ 0x48
90021562:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021564:	b2db      	uxtb	r3, r3
90021566:	9311      	str	r3, [sp, #68]	@ 0x44
90021568:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002156a:	095a      	lsrs	r2, r3, #5
9002156c:	4b7e      	ldr	r3, [pc, #504]	@ (90021768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9002156e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021572:	400b      	ands	r3, r1
90021574:	4313      	orrs	r3, r2
90021576:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90021578:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002157c:	4313      	orrs	r3, r2
9002157e:	b29b      	uxth	r3, r3
90021580:	9310      	str	r3, [sp, #64]	@ 0x40
90021582:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021584:	781a      	ldrb	r2, [r3, #0]
90021586:	ea4f 0349 	mov.w	r3, r9, lsl #1
9002158a:	fb05 b919 	mls	r9, r5, r9, fp
9002158e:	4132      	asrs	r2, r6
90021590:	fb03 fb05 	mul.w	fp, r3, r5
90021594:	930d      	str	r3, [sp, #52]	@ 0x34
90021596:	b2d2      	uxtb	r2, r2
90021598:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9002159c:	f11a 3aff 	adds.w	sl, sl, #4294967295	@ 0xffffffff
900215a0:	f0c0 80f5 	bcc.w	9002178e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
900215a4:	46ae      	mov	lr, r5
900215a6:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
900215aa:	f11e 3eff 	adds.w	lr, lr, #4294967295	@ 0xffffffff
900215ae:	f0c0 80dd 	bcc.w	9002176c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
900215b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900215b4:	4013      	ands	r3, r2
900215b6:	d055      	beq.n	90021664 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
900215b8:	20ff      	movs	r0, #255	@ 0xff
900215ba:	990e      	ldr	r1, [sp, #56]	@ 0x38
900215bc:	fb90 f1f1 	sdiv	r1, r0, r1
900215c0:	434b      	muls	r3, r1
900215c2:	2bfe      	cmp	r3, #254	@ 0xfe
900215c4:	dd03      	ble.n	900215ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
900215c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900215c8:	4281      	cmp	r1, r0
900215ca:	f000 80c4 	beq.w	90021756 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
900215ce:	990c      	ldr	r1, [sp, #48]	@ 0x30
900215d0:	f8bc 4000 	ldrh.w	r4, [ip]
900215d4:	fb11 f303 	smulbb	r3, r1, r3
900215d8:	1220      	asrs	r0, r4, #8
900215da:	b29b      	uxth	r3, r3
900215dc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900215e0:	1c59      	adds	r1, r3, #1
900215e2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
900215e6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900215ea:	10e1      	asrs	r1, r4, #3
900215ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
900215f0:	00e4      	lsls	r4, r4, #3
900215f2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900215f6:	b29f      	uxth	r7, r3
900215f8:	43db      	mvns	r3, r3
900215fa:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
900215fe:	b2db      	uxtb	r3, r3
90021600:	b2e4      	uxtb	r4, r4
90021602:	9309      	str	r3, [sp, #36]	@ 0x24
90021604:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90021606:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002160a:	fb13 f907 	smulbb	r9, r3, r7
9002160e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021610:	fb00 9003 	mla	r0, r0, r3, r9
90021614:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90021616:	fb13 f907 	smulbb	r9, r3, r7
9002161a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002161c:	b280      	uxth	r0, r0
9002161e:	fb01 9103 	mla	r1, r1, r3, r9
90021622:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021624:	fb13 f707 	smulbb	r7, r3, r7
90021628:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002162a:	b289      	uxth	r1, r1
9002162c:	fb04 7403 	mla	r4, r4, r3, r7
90021630:	1c43      	adds	r3, r0, #1
90021632:	b2a4      	uxth	r4, r4
90021634:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90021638:	f104 0901 	add.w	r9, r4, #1
9002163c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90021640:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90021644:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90021648:	ea49 0000 	orr.w	r0, r9, r0
9002164c:	f101 0901 	add.w	r9, r1, #1
90021650:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90021654:	ea4f 1959 	mov.w	r9, r9, lsr #5
90021658:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9002165c:	ea40 0009 	orr.w	r0, r0, r9
90021660:	f8ac 0000 	strh.w	r0, [ip]
90021664:	4446      	add	r6, r8
90021666:	b2b6      	uxth	r6, r6
90021668:	2e07      	cmp	r6, #7
9002166a:	bf89      	itett	hi
9002166c:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
9002166e:	fa42 f208 	asrls.w	r2, r2, r8
90021672:	2600      	movhi	r6, #0
90021674:	785a      	ldrbhi	r2, [r3, #1]
90021676:	bf8a      	itet	hi
90021678:	3301      	addhi	r3, #1
9002167a:	b2d2      	uxtbls	r2, r2
9002167c:	9328      	strhi	r3, [sp, #160]	@ 0xa0
9002167e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021680:	449c      	add	ip, r3
90021682:	e792      	b.n	900215aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
90021684:	441c      	add	r4, r3
90021686:	b224      	sxth	r4, r4
90021688:	e6d5      	b.n	90021436 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9002168a:	f1ba 0f01 	cmp.w	sl, #1
9002168e:	f47f af0c 	bne.w	900214aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90021692:	f1bb 0f01 	cmp.w	fp, #1
90021696:	f47f af08 	bne.w	900214aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002169a:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 90021760 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9002169e:	f8db 0000 	ldr.w	r0, [fp]
900216a2:	6803      	ldr	r3, [r0, #0]
900216a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900216a6:	4798      	blx	r3
900216a8:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900216ac:	465a      	mov	r2, fp
900216ae:	d006      	beq.n	900216be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
900216b0:	f1b8 0f04 	cmp.w	r8, #4
900216b4:	d140      	bne.n	90021738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
900216b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900216b8:	3300      	adds	r3, #0
900216ba:	bf18      	it	ne
900216bc:	2301      	movne	r3, #1
900216be:	0580      	lsls	r0, r0, #22
900216c0:	d56e      	bpl.n	900217a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900216c2:	f1b8 0f08 	cmp.w	r8, #8
900216c6:	d16b      	bne.n	900217a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900216c8:	2b00      	cmp	r3, #0
900216ca:	bf0c      	ite	eq
900216cc:	f44f 7100 	moveq.w	r1, #512	@ 0x200
900216d0:	f44f 7180 	movne.w	r1, #256	@ 0x100
900216d4:	2d00      	cmp	r5, #0
900216d6:	f47f aee8 	bne.w	900214aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900216da:	2e00      	cmp	r6, #0
900216dc:	f47f aee5 	bne.w	900214aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900216e0:	19e3      	adds	r3, r4, r7
900216e2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900216e4:	4283      	cmp	r3, r0
900216e6:	f73f aee0 	bgt.w	900214aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900216ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900216ec:	980d      	ldr	r0, [sp, #52]	@ 0x34
900216ee:	444b      	add	r3, r9
900216f0:	4283      	cmp	r3, r0
900216f2:	f73f aeda 	bgt.w	900214aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900216f6:	b2bf      	uxth	r7, r7
900216f8:	f1b8 0f08 	cmp.w	r8, #8
900216fc:	6810      	ldr	r0, [r2, #0]
900216fe:	f04f 0500 	mov.w	r5, #0
90021702:	bf18      	it	ne
90021704:	3701      	addne	r7, #1
90021706:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
9002170a:	6804      	ldr	r4, [r0, #0]
9002170c:	bf18      	it	ne
9002170e:	f027 0701 	bicne.w	r7, r7, #1
90021712:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90021716:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002171a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002171c:	bf18      	it	ne
9002171e:	b2bf      	uxthne	r7, r7
90021720:	9104      	str	r1, [sp, #16]
90021722:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90021724:	e9cd 7900 	strd	r7, r9, [sp]
90021728:	e9cd 7102 	strd	r7, r1, [sp, #8]
9002172c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9002172e:	6d64      	ldr	r4, [r4, #84]	@ 0x54
90021730:	47a0      	blx	r4
90021732:	b019      	add	sp, #100	@ 0x64
90021734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021738:	2300      	movs	r3, #0
9002173a:	e7c0      	b.n	900216be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9002173c:	2208      	movs	r2, #8
9002173e:	fb92 f3f8 	sdiv	r3, r2, r8
90021742:	1e5a      	subs	r2, r3, #1
90021744:	443a      	add	r2, r7
90021746:	fb92 f2f3 	sdiv	r2, r2, r3
9002174a:	fb12 f203 	smulbb	r2, r2, r3
9002174e:	b292      	uxth	r2, r2
90021750:	e6b0      	b.n	900214b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90021752:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90021754:	e6ec      	b.n	90021530 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90021756:	9810      	ldr	r0, [sp, #64]	@ 0x40
90021758:	e782      	b.n	90021660 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9002175a:	bf00      	nop
9002175c:	24023404 	.word	0x24023404
90021760:	2402340c 	.word	0x2402340c
90021764:	24023406 	.word	0x24023406
90021768:	00fff800 	.word	0x00fff800
9002176c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002176e:	b153      	cbz	r3, 90021786 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90021770:	441e      	add	r6, r3
90021772:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021774:	b2b6      	uxth	r6, r6
90021776:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9002177a:	f006 0607 	and.w	r6, r6, #7
9002177e:	781a      	ldrb	r2, [r3, #0]
90021780:	9328      	str	r3, [sp, #160]	@ 0xa0
90021782:	4132      	asrs	r2, r6
90021784:	b2d2      	uxtb	r2, r2
90021786:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021788:	445b      	add	r3, fp
9002178a:	930a      	str	r3, [sp, #40]	@ 0x28
9002178c:	e706      	b.n	9002159c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9002178e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021790:	2b00      	cmp	r3, #0
90021792:	d1ce      	bne.n	90021732 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021794:	4b05      	ldr	r3, [pc, #20]	@ (900217ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
90021796:	6818      	ldr	r0, [r3, #0]
90021798:	6803      	ldr	r3, [r0, #0]
9002179a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002179c:	4798      	blx	r3
9002179e:	e7c8      	b.n	90021732 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900217a0:	2b00      	cmp	r3, #0
900217a2:	f43f ae82 	beq.w	900214aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900217a6:	f44f 7180 	mov.w	r1, #256	@ 0x100
900217aa:	e793      	b.n	900216d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
900217ac:	2402340c 	.word	0x2402340c

900217b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
900217b0:	b538      	push	{r3, r4, r5, lr}
900217b2:	4c15      	ldr	r4, [pc, #84]	@ (90021808 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
900217b4:	4605      	mov	r5, r0
900217b6:	7823      	ldrb	r3, [r4, #0]
900217b8:	f3bf 8f5b 	dmb	ish
900217bc:	07da      	lsls	r2, r3, #31
900217be:	d40b      	bmi.n	900217d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900217c0:	4620      	mov	r0, r4
900217c2:	f008 fc25 	bl	9002a010 <__cxa_guard_acquire>
900217c6:	b138      	cbz	r0, 900217d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900217c8:	4620      	mov	r0, r4
900217ca:	f008 fc2d 	bl	9002a028 <__cxa_guard_release>
900217ce:	4a0f      	ldr	r2, [pc, #60]	@ (9002180c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900217d0:	490f      	ldr	r1, [pc, #60]	@ (90021810 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
900217d2:	4810      	ldr	r0, [pc, #64]	@ (90021814 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900217d4:	f008 fc15 	bl	9002a002 <__aeabi_atexit>
900217d8:	4c0f      	ldr	r4, [pc, #60]	@ (90021818 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
900217da:	7823      	ldrb	r3, [r4, #0]
900217dc:	f3bf 8f5b 	dmb	ish
900217e0:	07db      	lsls	r3, r3, #31
900217e2:	d40b      	bmi.n	900217fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900217e4:	4620      	mov	r0, r4
900217e6:	f008 fc13 	bl	9002a010 <__cxa_guard_acquire>
900217ea:	b138      	cbz	r0, 900217fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900217ec:	4620      	mov	r0, r4
900217ee:	f008 fc1b 	bl	9002a028 <__cxa_guard_release>
900217f2:	4a06      	ldr	r2, [pc, #24]	@ (9002180c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900217f4:	4909      	ldr	r1, [pc, #36]	@ (9002181c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
900217f6:	480a      	ldr	r0, [pc, #40]	@ (90021820 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900217f8:	f008 fc03 	bl	9002a002 <__aeabi_atexit>
900217fc:	4b05      	ldr	r3, [pc, #20]	@ (90021814 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900217fe:	616b      	str	r3, [r5, #20]
90021800:	4b07      	ldr	r3, [pc, #28]	@ (90021820 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90021802:	61ab      	str	r3, [r5, #24]
90021804:	bd38      	pop	{r3, r4, r5, pc}
90021806:	bf00      	nop
90021808:	240234ec 	.word	0x240234ec
9002180c:	24000000 	.word	0x24000000
90021810:	9001e593 	.word	0x9001e593
90021814:	240000d4 	.word	0x240000d4
90021818:	240234f0 	.word	0x240234f0
9002181c:	9001e591 	.word	0x9001e591
90021820:	240000d8 	.word	0x240000d8

90021824 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90021824:	b538      	push	{r3, r4, r5, lr}
90021826:	4c15      	ldr	r4, [pc, #84]	@ (9002187c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90021828:	4605      	mov	r5, r0
9002182a:	7823      	ldrb	r3, [r4, #0]
9002182c:	f3bf 8f5b 	dmb	ish
90021830:	07da      	lsls	r2, r3, #31
90021832:	d40b      	bmi.n	9002184c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90021834:	4620      	mov	r0, r4
90021836:	f008 fbeb 	bl	9002a010 <__cxa_guard_acquire>
9002183a:	b138      	cbz	r0, 9002184c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9002183c:	4620      	mov	r0, r4
9002183e:	f008 fbf3 	bl	9002a028 <__cxa_guard_release>
90021842:	4a0f      	ldr	r2, [pc, #60]	@ (90021880 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021844:	490f      	ldr	r1, [pc, #60]	@ (90021884 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
90021846:	4810      	ldr	r0, [pc, #64]	@ (90021888 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90021848:	f008 fbdb 	bl	9002a002 <__aeabi_atexit>
9002184c:	4c0f      	ldr	r4, [pc, #60]	@ (9002188c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9002184e:	7823      	ldrb	r3, [r4, #0]
90021850:	f3bf 8f5b 	dmb	ish
90021854:	07db      	lsls	r3, r3, #31
90021856:	d40b      	bmi.n	90021870 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90021858:	4620      	mov	r0, r4
9002185a:	f008 fbd9 	bl	9002a010 <__cxa_guard_acquire>
9002185e:	b138      	cbz	r0, 90021870 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90021860:	4620      	mov	r0, r4
90021862:	f008 fbe1 	bl	9002a028 <__cxa_guard_release>
90021866:	4a06      	ldr	r2, [pc, #24]	@ (90021880 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021868:	4909      	ldr	r1, [pc, #36]	@ (90021890 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9002186a:	480a      	ldr	r0, [pc, #40]	@ (90021894 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002186c:	f008 fbc9 	bl	9002a002 <__aeabi_atexit>
90021870:	4b05      	ldr	r3, [pc, #20]	@ (90021888 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90021872:	60eb      	str	r3, [r5, #12]
90021874:	4b07      	ldr	r3, [pc, #28]	@ (90021894 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90021876:	612b      	str	r3, [r5, #16]
90021878:	bd38      	pop	{r3, r4, r5, pc}
9002187a:	bf00      	nop
9002187c:	240234c4 	.word	0x240234c4
90021880:	24000000 	.word	0x24000000
90021884:	9001e597 	.word	0x9001e597
90021888:	240000ac 	.word	0x240000ac
9002188c:	240234c8 	.word	0x240234c8
90021890:	9001e595 	.word	0x9001e595
90021894:	240000b0 	.word	0x240000b0

90021898 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90021898:	b510      	push	{r4, lr}
9002189a:	4604      	mov	r4, r0
9002189c:	f7ff ff88 	bl	900217b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
900218a0:	4620      	mov	r0, r4
900218a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900218a6:	f7ff bfbd 	b.w	90021824 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

900218ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
900218ac:	b538      	push	{r3, r4, r5, lr}
900218ae:	4c15      	ldr	r4, [pc, #84]	@ (90021904 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
900218b0:	4605      	mov	r5, r0
900218b2:	7823      	ldrb	r3, [r4, #0]
900218b4:	f3bf 8f5b 	dmb	ish
900218b8:	07da      	lsls	r2, r3, #31
900218ba:	d40b      	bmi.n	900218d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900218bc:	4620      	mov	r0, r4
900218be:	f008 fba7 	bl	9002a010 <__cxa_guard_acquire>
900218c2:	b138      	cbz	r0, 900218d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900218c4:	4620      	mov	r0, r4
900218c6:	f008 fbaf 	bl	9002a028 <__cxa_guard_release>
900218ca:	4a0f      	ldr	r2, [pc, #60]	@ (90021908 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900218cc:	490f      	ldr	r1, [pc, #60]	@ (9002190c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
900218ce:	4810      	ldr	r0, [pc, #64]	@ (90021910 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900218d0:	f008 fb97 	bl	9002a002 <__aeabi_atexit>
900218d4:	4c0f      	ldr	r4, [pc, #60]	@ (90021914 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
900218d6:	7823      	ldrb	r3, [r4, #0]
900218d8:	f3bf 8f5b 	dmb	ish
900218dc:	07db      	lsls	r3, r3, #31
900218de:	d40b      	bmi.n	900218f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900218e0:	4620      	mov	r0, r4
900218e2:	f008 fb95 	bl	9002a010 <__cxa_guard_acquire>
900218e6:	b138      	cbz	r0, 900218f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900218e8:	4620      	mov	r0, r4
900218ea:	f008 fb9d 	bl	9002a028 <__cxa_guard_release>
900218ee:	4a06      	ldr	r2, [pc, #24]	@ (90021908 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900218f0:	4909      	ldr	r1, [pc, #36]	@ (90021918 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
900218f2:	480a      	ldr	r0, [pc, #40]	@ (9002191c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900218f4:	f008 fb85 	bl	9002a002 <__aeabi_atexit>
900218f8:	4b05      	ldr	r3, [pc, #20]	@ (90021910 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900218fa:	626b      	str	r3, [r5, #36]	@ 0x24
900218fc:	4b07      	ldr	r3, [pc, #28]	@ (9002191c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900218fe:	62ab      	str	r3, [r5, #40]	@ 0x28
90021900:	bd38      	pop	{r3, r4, r5, pc}
90021902:	bf00      	nop
90021904:	240234f4 	.word	0x240234f4
90021908:	24000000 	.word	0x24000000
9002190c:	9001e58b 	.word	0x9001e58b
90021910:	240000dc 	.word	0x240000dc
90021914:	240234f8 	.word	0x240234f8
90021918:	9001e589 	.word	0x9001e589
9002191c:	240000e0 	.word	0x240000e0

90021920 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90021920:	b538      	push	{r3, r4, r5, lr}
90021922:	4c15      	ldr	r4, [pc, #84]	@ (90021978 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90021924:	4605      	mov	r5, r0
90021926:	7823      	ldrb	r3, [r4, #0]
90021928:	f3bf 8f5b 	dmb	ish
9002192c:	07da      	lsls	r2, r3, #31
9002192e:	d40b      	bmi.n	90021948 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90021930:	4620      	mov	r0, r4
90021932:	f008 fb6d 	bl	9002a010 <__cxa_guard_acquire>
90021936:	b138      	cbz	r0, 90021948 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90021938:	4620      	mov	r0, r4
9002193a:	f008 fb75 	bl	9002a028 <__cxa_guard_release>
9002193e:	4a0f      	ldr	r2, [pc, #60]	@ (9002197c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90021940:	490f      	ldr	r1, [pc, #60]	@ (90021980 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90021942:	4810      	ldr	r0, [pc, #64]	@ (90021984 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021944:	f008 fb5d 	bl	9002a002 <__aeabi_atexit>
90021948:	4c0f      	ldr	r4, [pc, #60]	@ (90021988 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002194a:	7823      	ldrb	r3, [r4, #0]
9002194c:	f3bf 8f5b 	dmb	ish
90021950:	07db      	lsls	r3, r3, #31
90021952:	d40b      	bmi.n	9002196c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90021954:	4620      	mov	r0, r4
90021956:	f008 fb5b 	bl	9002a010 <__cxa_guard_acquire>
9002195a:	b138      	cbz	r0, 9002196c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9002195c:	4620      	mov	r0, r4
9002195e:	f008 fb63 	bl	9002a028 <__cxa_guard_release>
90021962:	4a06      	ldr	r2, [pc, #24]	@ (9002197c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90021964:	4909      	ldr	r1, [pc, #36]	@ (9002198c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
90021966:	480a      	ldr	r0, [pc, #40]	@ (90021990 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021968:	f008 fb4b 	bl	9002a002 <__aeabi_atexit>
9002196c:	4b05      	ldr	r3, [pc, #20]	@ (90021984 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9002196e:	61eb      	str	r3, [r5, #28]
90021970:	4b07      	ldr	r3, [pc, #28]	@ (90021990 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021972:	622b      	str	r3, [r5, #32]
90021974:	bd38      	pop	{r3, r4, r5, pc}
90021976:	bf00      	nop
90021978:	240234cc 	.word	0x240234cc
9002197c:	24000000 	.word	0x24000000
90021980:	9001e58f 	.word	0x9001e58f
90021984:	240000b4 	.word	0x240000b4
90021988:	240234d0 	.word	0x240234d0
9002198c:	9001e58d 	.word	0x9001e58d
90021990:	240000b8 	.word	0x240000b8

90021994 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90021994:	b510      	push	{r4, lr}
90021996:	4604      	mov	r4, r0
90021998:	f7ff ff88 	bl	900218ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9002199c:	4620      	mov	r0, r4
9002199e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900219a2:	f7ff bfbd 	b.w	90021920 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

900219a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
900219a8:	b538      	push	{r3, r4, r5, lr}
900219aa:	4c15      	ldr	r4, [pc, #84]	@ (90021a00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
900219ac:	4605      	mov	r5, r0
900219ae:	7823      	ldrb	r3, [r4, #0]
900219b0:	f3bf 8f5b 	dmb	ish
900219b4:	07da      	lsls	r2, r3, #31
900219b6:	d40b      	bmi.n	900219d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900219b8:	4620      	mov	r0, r4
900219ba:	f008 fb29 	bl	9002a010 <__cxa_guard_acquire>
900219be:	b138      	cbz	r0, 900219d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900219c0:	4620      	mov	r0, r4
900219c2:	f008 fb31 	bl	9002a028 <__cxa_guard_release>
900219c6:	4a0f      	ldr	r2, [pc, #60]	@ (90021a04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900219c8:	490f      	ldr	r1, [pc, #60]	@ (90021a08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
900219ca:	4810      	ldr	r0, [pc, #64]	@ (90021a0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900219cc:	f008 fb19 	bl	9002a002 <__aeabi_atexit>
900219d0:	4c0f      	ldr	r4, [pc, #60]	@ (90021a10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
900219d2:	7823      	ldrb	r3, [r4, #0]
900219d4:	f3bf 8f5b 	dmb	ish
900219d8:	07db      	lsls	r3, r3, #31
900219da:	d40b      	bmi.n	900219f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900219dc:	4620      	mov	r0, r4
900219de:	f008 fb17 	bl	9002a010 <__cxa_guard_acquire>
900219e2:	b138      	cbz	r0, 900219f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900219e4:	4620      	mov	r0, r4
900219e6:	f008 fb1f 	bl	9002a028 <__cxa_guard_release>
900219ea:	4a06      	ldr	r2, [pc, #24]	@ (90021a04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900219ec:	4909      	ldr	r1, [pc, #36]	@ (90021a14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
900219ee:	480a      	ldr	r0, [pc, #40]	@ (90021a18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900219f0:	f008 fb07 	bl	9002a002 <__aeabi_atexit>
900219f4:	4b05      	ldr	r3, [pc, #20]	@ (90021a0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900219f6:	636b      	str	r3, [r5, #52]	@ 0x34
900219f8:	4b07      	ldr	r3, [pc, #28]	@ (90021a18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900219fa:	63ab      	str	r3, [r5, #56]	@ 0x38
900219fc:	bd38      	pop	{r3, r4, r5, pc}
900219fe:	bf00      	nop
90021a00:	24023504 	.word	0x24023504
90021a04:	24000000 	.word	0x24000000
90021a08:	9001e583 	.word	0x9001e583
90021a0c:	240000ec 	.word	0x240000ec
90021a10:	24023508 	.word	0x24023508
90021a14:	9001e581 	.word	0x9001e581
90021a18:	240000f0 	.word	0x240000f0

90021a1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90021a1c:	b538      	push	{r3, r4, r5, lr}
90021a1e:	4c15      	ldr	r4, [pc, #84]	@ (90021a74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90021a20:	4605      	mov	r5, r0
90021a22:	7823      	ldrb	r3, [r4, #0]
90021a24:	f3bf 8f5b 	dmb	ish
90021a28:	07da      	lsls	r2, r3, #31
90021a2a:	d40b      	bmi.n	90021a44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021a2c:	4620      	mov	r0, r4
90021a2e:	f008 faef 	bl	9002a010 <__cxa_guard_acquire>
90021a32:	b138      	cbz	r0, 90021a44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021a34:	4620      	mov	r0, r4
90021a36:	f008 faf7 	bl	9002a028 <__cxa_guard_release>
90021a3a:	4a0f      	ldr	r2, [pc, #60]	@ (90021a78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021a3c:	490f      	ldr	r1, [pc, #60]	@ (90021a7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90021a3e:	4810      	ldr	r0, [pc, #64]	@ (90021a80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021a40:	f008 fadf 	bl	9002a002 <__aeabi_atexit>
90021a44:	4c0f      	ldr	r4, [pc, #60]	@ (90021a84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
90021a46:	7823      	ldrb	r3, [r4, #0]
90021a48:	f3bf 8f5b 	dmb	ish
90021a4c:	07db      	lsls	r3, r3, #31
90021a4e:	d40b      	bmi.n	90021a68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021a50:	4620      	mov	r0, r4
90021a52:	f008 fadd 	bl	9002a010 <__cxa_guard_acquire>
90021a56:	b138      	cbz	r0, 90021a68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021a58:	4620      	mov	r0, r4
90021a5a:	f008 fae5 	bl	9002a028 <__cxa_guard_release>
90021a5e:	4a06      	ldr	r2, [pc, #24]	@ (90021a78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021a60:	4909      	ldr	r1, [pc, #36]	@ (90021a88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90021a62:	480a      	ldr	r0, [pc, #40]	@ (90021a8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021a64:	f008 facd 	bl	9002a002 <__aeabi_atexit>
90021a68:	4b05      	ldr	r3, [pc, #20]	@ (90021a80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021a6a:	62eb      	str	r3, [r5, #44]	@ 0x2c
90021a6c:	4b07      	ldr	r3, [pc, #28]	@ (90021a8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021a6e:	632b      	str	r3, [r5, #48]	@ 0x30
90021a70:	bd38      	pop	{r3, r4, r5, pc}
90021a72:	bf00      	nop
90021a74:	240234d4 	.word	0x240234d4
90021a78:	24000000 	.word	0x24000000
90021a7c:	9001e587 	.word	0x9001e587
90021a80:	240000bc 	.word	0x240000bc
90021a84:	240234d8 	.word	0x240234d8
90021a88:	9001e585 	.word	0x9001e585
90021a8c:	240000c0 	.word	0x240000c0

90021a90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90021a90:	b510      	push	{r4, lr}
90021a92:	4604      	mov	r4, r0
90021a94:	f7ff ff88 	bl	900219a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90021a98:	4620      	mov	r0, r4
90021a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021a9e:	f7ff bfbd 	b.w	90021a1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90021aa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90021aa4:	b538      	push	{r3, r4, r5, lr}
90021aa6:	4c15      	ldr	r4, [pc, #84]	@ (90021afc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90021aa8:	4605      	mov	r5, r0
90021aaa:	7823      	ldrb	r3, [r4, #0]
90021aac:	f3bf 8f5b 	dmb	ish
90021ab0:	07da      	lsls	r2, r3, #31
90021ab2:	d40b      	bmi.n	90021acc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021ab4:	4620      	mov	r0, r4
90021ab6:	f008 faab 	bl	9002a010 <__cxa_guard_acquire>
90021aba:	b138      	cbz	r0, 90021acc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021abc:	4620      	mov	r0, r4
90021abe:	f008 fab3 	bl	9002a028 <__cxa_guard_release>
90021ac2:	4a0f      	ldr	r2, [pc, #60]	@ (90021b00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021ac4:	490f      	ldr	r1, [pc, #60]	@ (90021b04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
90021ac6:	4810      	ldr	r0, [pc, #64]	@ (90021b08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021ac8:	f008 fa9b 	bl	9002a002 <__aeabi_atexit>
90021acc:	4c0f      	ldr	r4, [pc, #60]	@ (90021b0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90021ace:	7823      	ldrb	r3, [r4, #0]
90021ad0:	f3bf 8f5b 	dmb	ish
90021ad4:	07db      	lsls	r3, r3, #31
90021ad6:	d40b      	bmi.n	90021af0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021ad8:	4620      	mov	r0, r4
90021ada:	f008 fa99 	bl	9002a010 <__cxa_guard_acquire>
90021ade:	b138      	cbz	r0, 90021af0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021ae0:	4620      	mov	r0, r4
90021ae2:	f008 faa1 	bl	9002a028 <__cxa_guard_release>
90021ae6:	4a06      	ldr	r2, [pc, #24]	@ (90021b00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021ae8:	4909      	ldr	r1, [pc, #36]	@ (90021b10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90021aea:	480a      	ldr	r0, [pc, #40]	@ (90021b14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021aec:	f008 fa89 	bl	9002a002 <__aeabi_atexit>
90021af0:	4b05      	ldr	r3, [pc, #20]	@ (90021b08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021af2:	656b      	str	r3, [r5, #84]	@ 0x54
90021af4:	4b07      	ldr	r3, [pc, #28]	@ (90021b14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021af6:	65ab      	str	r3, [r5, #88]	@ 0x58
90021af8:	bd38      	pop	{r3, r4, r5, pc}
90021afa:	bf00      	nop
90021afc:	2402350c 	.word	0x2402350c
90021b00:	24000000 	.word	0x24000000
90021b04:	9001e573 	.word	0x9001e573
90021b08:	240000f4 	.word	0x240000f4
90021b0c:	24023510 	.word	0x24023510
90021b10:	9001e571 	.word	0x9001e571
90021b14:	240000f8 	.word	0x240000f8

90021b18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90021b18:	b538      	push	{r3, r4, r5, lr}
90021b1a:	4c15      	ldr	r4, [pc, #84]	@ (90021b70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90021b1c:	4605      	mov	r5, r0
90021b1e:	7823      	ldrb	r3, [r4, #0]
90021b20:	f3bf 8f5b 	dmb	ish
90021b24:	07da      	lsls	r2, r3, #31
90021b26:	d40b      	bmi.n	90021b40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021b28:	4620      	mov	r0, r4
90021b2a:	f008 fa71 	bl	9002a010 <__cxa_guard_acquire>
90021b2e:	b138      	cbz	r0, 90021b40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021b30:	4620      	mov	r0, r4
90021b32:	f008 fa79 	bl	9002a028 <__cxa_guard_release>
90021b36:	4a0f      	ldr	r2, [pc, #60]	@ (90021b74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021b38:	490f      	ldr	r1, [pc, #60]	@ (90021b78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90021b3a:	4810      	ldr	r0, [pc, #64]	@ (90021b7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021b3c:	f008 fa61 	bl	9002a002 <__aeabi_atexit>
90021b40:	4c0f      	ldr	r4, [pc, #60]	@ (90021b80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90021b42:	7823      	ldrb	r3, [r4, #0]
90021b44:	f3bf 8f5b 	dmb	ish
90021b48:	07db      	lsls	r3, r3, #31
90021b4a:	d40b      	bmi.n	90021b64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021b4c:	4620      	mov	r0, r4
90021b4e:	f008 fa5f 	bl	9002a010 <__cxa_guard_acquire>
90021b52:	b138      	cbz	r0, 90021b64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021b54:	4620      	mov	r0, r4
90021b56:	f008 fa67 	bl	9002a028 <__cxa_guard_release>
90021b5a:	4a06      	ldr	r2, [pc, #24]	@ (90021b74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021b5c:	4909      	ldr	r1, [pc, #36]	@ (90021b84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90021b5e:	480a      	ldr	r0, [pc, #40]	@ (90021b88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021b60:	f008 fa4f 	bl	9002a002 <__aeabi_atexit>
90021b64:	4b05      	ldr	r3, [pc, #20]	@ (90021b7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021b66:	64eb      	str	r3, [r5, #76]	@ 0x4c
90021b68:	4b07      	ldr	r3, [pc, #28]	@ (90021b88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021b6a:	652b      	str	r3, [r5, #80]	@ 0x50
90021b6c:	bd38      	pop	{r3, r4, r5, pc}
90021b6e:	bf00      	nop
90021b70:	24023514 	.word	0x24023514
90021b74:	24000000 	.word	0x24000000
90021b78:	9001e577 	.word	0x9001e577
90021b7c:	240000fc 	.word	0x240000fc
90021b80:	24023518 	.word	0x24023518
90021b84:	9001e575 	.word	0x9001e575
90021b88:	24000100 	.word	0x24000100

90021b8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90021b8c:	b538      	push	{r3, r4, r5, lr}
90021b8e:	4c15      	ldr	r4, [pc, #84]	@ (90021be4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90021b90:	4605      	mov	r5, r0
90021b92:	7823      	ldrb	r3, [r4, #0]
90021b94:	f3bf 8f5b 	dmb	ish
90021b98:	07da      	lsls	r2, r3, #31
90021b9a:	d40b      	bmi.n	90021bb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021b9c:	4620      	mov	r0, r4
90021b9e:	f008 fa37 	bl	9002a010 <__cxa_guard_acquire>
90021ba2:	b138      	cbz	r0, 90021bb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021ba4:	4620      	mov	r0, r4
90021ba6:	f008 fa3f 	bl	9002a028 <__cxa_guard_release>
90021baa:	4a0f      	ldr	r2, [pc, #60]	@ (90021be8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021bac:	490f      	ldr	r1, [pc, #60]	@ (90021bec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90021bae:	4810      	ldr	r0, [pc, #64]	@ (90021bf0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021bb0:	f008 fa27 	bl	9002a002 <__aeabi_atexit>
90021bb4:	4c0f      	ldr	r4, [pc, #60]	@ (90021bf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90021bb6:	7823      	ldrb	r3, [r4, #0]
90021bb8:	f3bf 8f5b 	dmb	ish
90021bbc:	07db      	lsls	r3, r3, #31
90021bbe:	d40b      	bmi.n	90021bd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021bc0:	4620      	mov	r0, r4
90021bc2:	f008 fa25 	bl	9002a010 <__cxa_guard_acquire>
90021bc6:	b138      	cbz	r0, 90021bd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021bc8:	4620      	mov	r0, r4
90021bca:	f008 fa2d 	bl	9002a028 <__cxa_guard_release>
90021bce:	4a06      	ldr	r2, [pc, #24]	@ (90021be8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021bd0:	4909      	ldr	r1, [pc, #36]	@ (90021bf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90021bd2:	480a      	ldr	r0, [pc, #40]	@ (90021bfc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021bd4:	f008 fa15 	bl	9002a002 <__aeabi_atexit>
90021bd8:	4b05      	ldr	r3, [pc, #20]	@ (90021bf0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021bda:	646b      	str	r3, [r5, #68]	@ 0x44
90021bdc:	4b07      	ldr	r3, [pc, #28]	@ (90021bfc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021bde:	64ab      	str	r3, [r5, #72]	@ 0x48
90021be0:	bd38      	pop	{r3, r4, r5, pc}
90021be2:	bf00      	nop
90021be4:	240234dc 	.word	0x240234dc
90021be8:	24000000 	.word	0x24000000
90021bec:	9001e57b 	.word	0x9001e57b
90021bf0:	240000c4 	.word	0x240000c4
90021bf4:	240234e0 	.word	0x240234e0
90021bf8:	9001e579 	.word	0x9001e579
90021bfc:	240000c8 	.word	0x240000c8

90021c00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021c00:	b538      	push	{r3, r4, r5, lr}
90021c02:	4c15      	ldr	r4, [pc, #84]	@ (90021c58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90021c04:	4605      	mov	r5, r0
90021c06:	7823      	ldrb	r3, [r4, #0]
90021c08:	f3bf 8f5b 	dmb	ish
90021c0c:	07da      	lsls	r2, r3, #31
90021c0e:	d40b      	bmi.n	90021c28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021c10:	4620      	mov	r0, r4
90021c12:	f008 f9fd 	bl	9002a010 <__cxa_guard_acquire>
90021c16:	b138      	cbz	r0, 90021c28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021c18:	4620      	mov	r0, r4
90021c1a:	f008 fa05 	bl	9002a028 <__cxa_guard_release>
90021c1e:	4a0f      	ldr	r2, [pc, #60]	@ (90021c5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021c20:	490f      	ldr	r1, [pc, #60]	@ (90021c60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90021c22:	4810      	ldr	r0, [pc, #64]	@ (90021c64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021c24:	f008 f9ed 	bl	9002a002 <__aeabi_atexit>
90021c28:	4c0f      	ldr	r4, [pc, #60]	@ (90021c68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90021c2a:	7823      	ldrb	r3, [r4, #0]
90021c2c:	f3bf 8f5b 	dmb	ish
90021c30:	07db      	lsls	r3, r3, #31
90021c32:	d40b      	bmi.n	90021c4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021c34:	4620      	mov	r0, r4
90021c36:	f008 f9eb 	bl	9002a010 <__cxa_guard_acquire>
90021c3a:	b138      	cbz	r0, 90021c4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021c3c:	4620      	mov	r0, r4
90021c3e:	f008 f9f3 	bl	9002a028 <__cxa_guard_release>
90021c42:	4a06      	ldr	r2, [pc, #24]	@ (90021c5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021c44:	4909      	ldr	r1, [pc, #36]	@ (90021c6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90021c46:	480a      	ldr	r0, [pc, #40]	@ (90021c70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021c48:	f008 f9db 	bl	9002a002 <__aeabi_atexit>
90021c4c:	4b05      	ldr	r3, [pc, #20]	@ (90021c64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021c4e:	63eb      	str	r3, [r5, #60]	@ 0x3c
90021c50:	4b07      	ldr	r3, [pc, #28]	@ (90021c70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021c52:	642b      	str	r3, [r5, #64]	@ 0x40
90021c54:	bd38      	pop	{r3, r4, r5, pc}
90021c56:	bf00      	nop
90021c58:	240234fc 	.word	0x240234fc
90021c5c:	24000000 	.word	0x24000000
90021c60:	9001e57f 	.word	0x9001e57f
90021c64:	240000e4 	.word	0x240000e4
90021c68:	24023500 	.word	0x24023500
90021c6c:	9001e57d 	.word	0x9001e57d
90021c70:	240000e8 	.word	0x240000e8

90021c74 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90021c74:	b510      	push	{r4, lr}
90021c76:	4604      	mov	r4, r0
90021c78:	f7ff ff14 	bl	90021aa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021c7c:	4620      	mov	r0, r4
90021c7e:	f7ff ff85 	bl	90021b8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90021c82:	4620      	mov	r0, r4
90021c84:	f7ff ff48 	bl	90021b18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90021c88:	4620      	mov	r0, r4
90021c8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021c8e:	f7ff bfb7 	b.w	90021c00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90021c94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90021c94:	b538      	push	{r3, r4, r5, lr}
90021c96:	4c15      	ldr	r4, [pc, #84]	@ (90021cec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90021c98:	4605      	mov	r5, r0
90021c9a:	7823      	ldrb	r3, [r4, #0]
90021c9c:	f3bf 8f5b 	dmb	ish
90021ca0:	07da      	lsls	r2, r3, #31
90021ca2:	d40b      	bmi.n	90021cbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021ca4:	4620      	mov	r0, r4
90021ca6:	f008 f9b3 	bl	9002a010 <__cxa_guard_acquire>
90021caa:	b138      	cbz	r0, 90021cbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021cac:	4620      	mov	r0, r4
90021cae:	f008 f9bb 	bl	9002a028 <__cxa_guard_release>
90021cb2:	4a0f      	ldr	r2, [pc, #60]	@ (90021cf0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021cb4:	490f      	ldr	r1, [pc, #60]	@ (90021cf4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90021cb6:	4810      	ldr	r0, [pc, #64]	@ (90021cf8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021cb8:	f008 f9a3 	bl	9002a002 <__aeabi_atexit>
90021cbc:	4c0f      	ldr	r4, [pc, #60]	@ (90021cfc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021cbe:	7823      	ldrb	r3, [r4, #0]
90021cc0:	f3bf 8f5b 	dmb	ish
90021cc4:	07db      	lsls	r3, r3, #31
90021cc6:	d40b      	bmi.n	90021ce0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021cc8:	4620      	mov	r0, r4
90021cca:	f008 f9a1 	bl	9002a010 <__cxa_guard_acquire>
90021cce:	b138      	cbz	r0, 90021ce0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021cd0:	4620      	mov	r0, r4
90021cd2:	f008 f9a9 	bl	9002a028 <__cxa_guard_release>
90021cd6:	4a06      	ldr	r2, [pc, #24]	@ (90021cf0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021cd8:	4909      	ldr	r1, [pc, #36]	@ (90021d00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90021cda:	480a      	ldr	r0, [pc, #40]	@ (90021d04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021cdc:	f008 f991 	bl	9002a002 <__aeabi_atexit>
90021ce0:	4b05      	ldr	r3, [pc, #20]	@ (90021cf8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021ce2:	666b      	str	r3, [r5, #100]	@ 0x64
90021ce4:	4b07      	ldr	r3, [pc, #28]	@ (90021d04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021ce6:	66ab      	str	r3, [r5, #104]	@ 0x68
90021ce8:	bd38      	pop	{r3, r4, r5, pc}
90021cea:	bf00      	nop
90021cec:	240234e4 	.word	0x240234e4
90021cf0:	24000000 	.word	0x24000000
90021cf4:	9001e56b 	.word	0x9001e56b
90021cf8:	240000cc 	.word	0x240000cc
90021cfc:	240234e8 	.word	0x240234e8
90021d00:	9001e569 	.word	0x9001e569
90021d04:	240000d0 	.word	0x240000d0

90021d08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90021d08:	b538      	push	{r3, r4, r5, lr}
90021d0a:	4c15      	ldr	r4, [pc, #84]	@ (90021d60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90021d0c:	4605      	mov	r5, r0
90021d0e:	7823      	ldrb	r3, [r4, #0]
90021d10:	f3bf 8f5b 	dmb	ish
90021d14:	07da      	lsls	r2, r3, #31
90021d16:	d40b      	bmi.n	90021d30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021d18:	4620      	mov	r0, r4
90021d1a:	f008 f979 	bl	9002a010 <__cxa_guard_acquire>
90021d1e:	b138      	cbz	r0, 90021d30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021d20:	4620      	mov	r0, r4
90021d22:	f008 f981 	bl	9002a028 <__cxa_guard_release>
90021d26:	4a0f      	ldr	r2, [pc, #60]	@ (90021d64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021d28:	490f      	ldr	r1, [pc, #60]	@ (90021d68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90021d2a:	4810      	ldr	r0, [pc, #64]	@ (90021d6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021d2c:	f008 f969 	bl	9002a002 <__aeabi_atexit>
90021d30:	4c0f      	ldr	r4, [pc, #60]	@ (90021d70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90021d32:	7823      	ldrb	r3, [r4, #0]
90021d34:	f3bf 8f5b 	dmb	ish
90021d38:	07db      	lsls	r3, r3, #31
90021d3a:	d40b      	bmi.n	90021d54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021d3c:	4620      	mov	r0, r4
90021d3e:	f008 f967 	bl	9002a010 <__cxa_guard_acquire>
90021d42:	b138      	cbz	r0, 90021d54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021d44:	4620      	mov	r0, r4
90021d46:	f008 f96f 	bl	9002a028 <__cxa_guard_release>
90021d4a:	4a06      	ldr	r2, [pc, #24]	@ (90021d64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021d4c:	4909      	ldr	r1, [pc, #36]	@ (90021d74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90021d4e:	480a      	ldr	r0, [pc, #40]	@ (90021d78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021d50:	f008 f957 	bl	9002a002 <__aeabi_atexit>
90021d54:	4b05      	ldr	r3, [pc, #20]	@ (90021d6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021d56:	65eb      	str	r3, [r5, #92]	@ 0x5c
90021d58:	4b07      	ldr	r3, [pc, #28]	@ (90021d78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021d5a:	662b      	str	r3, [r5, #96]	@ 0x60
90021d5c:	bd38      	pop	{r3, r4, r5, pc}
90021d5e:	bf00      	nop
90021d60:	240234bc 	.word	0x240234bc
90021d64:	24000000 	.word	0x24000000
90021d68:	9001e56f 	.word	0x9001e56f
90021d6c:	240000a4 	.word	0x240000a4
90021d70:	240234c0 	.word	0x240234c0
90021d74:	9001e56d 	.word	0x9001e56d
90021d78:	240000a8 	.word	0x240000a8

90021d7c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021d7c:	b510      	push	{r4, lr}
90021d7e:	4604      	mov	r4, r0
90021d80:	f7ff ff88 	bl	90021c94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90021d84:	4620      	mov	r0, r4
90021d86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021d8a:	f7ff bfbd 	b.w	90021d08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021d90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021d90:	b538      	push	{r3, r4, r5, lr}
90021d92:	4c15      	ldr	r4, [pc, #84]	@ (90021de8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90021d94:	4605      	mov	r5, r0
90021d96:	7823      	ldrb	r3, [r4, #0]
90021d98:	f3bf 8f5b 	dmb	ish
90021d9c:	07da      	lsls	r2, r3, #31
90021d9e:	d40b      	bmi.n	90021db8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021da0:	4620      	mov	r0, r4
90021da2:	f008 f935 	bl	9002a010 <__cxa_guard_acquire>
90021da6:	b138      	cbz	r0, 90021db8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021da8:	4620      	mov	r0, r4
90021daa:	f008 f93d 	bl	9002a028 <__cxa_guard_release>
90021dae:	4a0f      	ldr	r2, [pc, #60]	@ (90021dec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021db0:	490f      	ldr	r1, [pc, #60]	@ (90021df0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90021db2:	4810      	ldr	r0, [pc, #64]	@ (90021df4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021db4:	f008 f925 	bl	9002a002 <__aeabi_atexit>
90021db8:	4c0f      	ldr	r4, [pc, #60]	@ (90021df8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90021dba:	7823      	ldrb	r3, [r4, #0]
90021dbc:	f3bf 8f5b 	dmb	ish
90021dc0:	07db      	lsls	r3, r3, #31
90021dc2:	d40b      	bmi.n	90021ddc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021dc4:	4620      	mov	r0, r4
90021dc6:	f008 f923 	bl	9002a010 <__cxa_guard_acquire>
90021dca:	b138      	cbz	r0, 90021ddc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021dcc:	4620      	mov	r0, r4
90021dce:	f008 f92b 	bl	9002a028 <__cxa_guard_release>
90021dd2:	4a06      	ldr	r2, [pc, #24]	@ (90021dec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021dd4:	4909      	ldr	r1, [pc, #36]	@ (90021dfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90021dd6:	480a      	ldr	r0, [pc, #40]	@ (90021e00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021dd8:	f008 f913 	bl	9002a002 <__aeabi_atexit>
90021ddc:	4b05      	ldr	r3, [pc, #20]	@ (90021df4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021dde:	676b      	str	r3, [r5, #116]	@ 0x74
90021de0:	4b07      	ldr	r3, [pc, #28]	@ (90021e00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021de2:	67ab      	str	r3, [r5, #120]	@ 0x78
90021de4:	bd38      	pop	{r3, r4, r5, pc}
90021de6:	bf00      	nop
90021de8:	240234b4 	.word	0x240234b4
90021dec:	24000000 	.word	0x24000000
90021df0:	9001e563 	.word	0x9001e563
90021df4:	2400009c 	.word	0x2400009c
90021df8:	240234b8 	.word	0x240234b8
90021dfc:	9001e561 	.word	0x9001e561
90021e00:	240000a0 	.word	0x240000a0

90021e04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90021e04:	b538      	push	{r3, r4, r5, lr}
90021e06:	4c15      	ldr	r4, [pc, #84]	@ (90021e5c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90021e08:	4605      	mov	r5, r0
90021e0a:	7823      	ldrb	r3, [r4, #0]
90021e0c:	f3bf 8f5b 	dmb	ish
90021e10:	07da      	lsls	r2, r3, #31
90021e12:	d40b      	bmi.n	90021e2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021e14:	4620      	mov	r0, r4
90021e16:	f008 f8fb 	bl	9002a010 <__cxa_guard_acquire>
90021e1a:	b138      	cbz	r0, 90021e2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021e1c:	4620      	mov	r0, r4
90021e1e:	f008 f903 	bl	9002a028 <__cxa_guard_release>
90021e22:	4a0f      	ldr	r2, [pc, #60]	@ (90021e60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021e24:	490f      	ldr	r1, [pc, #60]	@ (90021e64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90021e26:	4810      	ldr	r0, [pc, #64]	@ (90021e68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021e28:	f008 f8eb 	bl	9002a002 <__aeabi_atexit>
90021e2c:	4c0f      	ldr	r4, [pc, #60]	@ (90021e6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90021e2e:	7823      	ldrb	r3, [r4, #0]
90021e30:	f3bf 8f5b 	dmb	ish
90021e34:	07db      	lsls	r3, r3, #31
90021e36:	d40b      	bmi.n	90021e50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021e38:	4620      	mov	r0, r4
90021e3a:	f008 f8e9 	bl	9002a010 <__cxa_guard_acquire>
90021e3e:	b138      	cbz	r0, 90021e50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021e40:	4620      	mov	r0, r4
90021e42:	f008 f8f1 	bl	9002a028 <__cxa_guard_release>
90021e46:	4a06      	ldr	r2, [pc, #24]	@ (90021e60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021e48:	4909      	ldr	r1, [pc, #36]	@ (90021e70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90021e4a:	480a      	ldr	r0, [pc, #40]	@ (90021e74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021e4c:	f008 f8d9 	bl	9002a002 <__aeabi_atexit>
90021e50:	4b05      	ldr	r3, [pc, #20]	@ (90021e68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021e52:	66eb      	str	r3, [r5, #108]	@ 0x6c
90021e54:	4b07      	ldr	r3, [pc, #28]	@ (90021e74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021e56:	672b      	str	r3, [r5, #112]	@ 0x70
90021e58:	bd38      	pop	{r3, r4, r5, pc}
90021e5a:	bf00      	nop
90021e5c:	240234ac 	.word	0x240234ac
90021e60:	24000000 	.word	0x24000000
90021e64:	9001e567 	.word	0x9001e567
90021e68:	24000094 	.word	0x24000094
90021e6c:	240234b0 	.word	0x240234b0
90021e70:	9001e565 	.word	0x9001e565
90021e74:	24000098 	.word	0x24000098

90021e78 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021e78:	b510      	push	{r4, lr}
90021e7a:	4604      	mov	r4, r0
90021e7c:	f7ff ff88 	bl	90021d90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021e80:	4620      	mov	r0, r4
90021e82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021e86:	f7ff bfbd 	b.w	90021e04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90021e8a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90021e8a:	b510      	push	{r4, lr}
90021e8c:	4604      	mov	r4, r0
90021e8e:	f7ff fff3 	bl	90021e78 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90021e92:	4620      	mov	r0, r4
90021e94:	f7ff ff72 	bl	90021d7c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90021e98:	4620      	mov	r0, r4
90021e9a:	f7ff fdf9 	bl	90021a90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021e9e:	4620      	mov	r0, r4
90021ea0:	f7ff fcfa 	bl	90021898 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90021ea4:	4620      	mov	r0, r4
90021ea6:	f7ff fd75 	bl	90021994 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90021eaa:	4620      	mov	r0, r4
90021eac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021eb0:	f7ff bee0 	b.w	90021c74 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90021eb4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90021eb4:	b538      	push	{r3, r4, r5, lr}
90021eb6:	4c0b      	ldr	r4, [pc, #44]	@ (90021ee4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90021eb8:	4605      	mov	r5, r0
90021eba:	7823      	ldrb	r3, [r4, #0]
90021ebc:	f3bf 8f5b 	dmb	ish
90021ec0:	07db      	lsls	r3, r3, #31
90021ec2:	d40b      	bmi.n	90021edc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021ec4:	4620      	mov	r0, r4
90021ec6:	f008 f8a3 	bl	9002a010 <__cxa_guard_acquire>
90021eca:	b138      	cbz	r0, 90021edc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021ecc:	4620      	mov	r0, r4
90021ece:	f008 f8ab 	bl	9002a028 <__cxa_guard_release>
90021ed2:	4a05      	ldr	r2, [pc, #20]	@ (90021ee8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90021ed4:	4905      	ldr	r1, [pc, #20]	@ (90021eec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90021ed6:	4806      	ldr	r0, [pc, #24]	@ (90021ef0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021ed8:	f008 f893 	bl	9002a002 <__aeabi_atexit>
90021edc:	4b04      	ldr	r3, [pc, #16]	@ (90021ef0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021ede:	67eb      	str	r3, [r5, #124]	@ 0x7c
90021ee0:	bd38      	pop	{r3, r4, r5, pc}
90021ee2:	bf00      	nop
90021ee4:	240234a0 	.word	0x240234a0
90021ee8:	24000000 	.word	0x24000000
90021eec:	9001e55f 	.word	0x9001e55f
90021ef0:	2400008c 	.word	0x2400008c

90021ef4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90021ef4:	b538      	push	{r3, r4, r5, lr}
90021ef6:	4c0b      	ldr	r4, [pc, #44]	@ (90021f24 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021ef8:	4605      	mov	r5, r0
90021efa:	7823      	ldrb	r3, [r4, #0]
90021efc:	f3bf 8f5b 	dmb	ish
90021f00:	07db      	lsls	r3, r3, #31
90021f02:	d40b      	bmi.n	90021f1c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021f04:	4620      	mov	r0, r4
90021f06:	f008 f883 	bl	9002a010 <__cxa_guard_acquire>
90021f0a:	b138      	cbz	r0, 90021f1c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021f0c:	4620      	mov	r0, r4
90021f0e:	f008 f88b 	bl	9002a028 <__cxa_guard_release>
90021f12:	4a05      	ldr	r2, [pc, #20]	@ (90021f28 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90021f14:	4905      	ldr	r1, [pc, #20]	@ (90021f2c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90021f16:	4806      	ldr	r0, [pc, #24]	@ (90021f30 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021f18:	f008 f873 	bl	9002a002 <__aeabi_atexit>
90021f1c:	4b04      	ldr	r3, [pc, #16]	@ (90021f30 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021f1e:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90021f22:	bd38      	pop	{r3, r4, r5, pc}
90021f24:	240234a4 	.word	0x240234a4
90021f28:	24000000 	.word	0x24000000
90021f2c:	9001e55d 	.word	0x9001e55d
90021f30:	24000090 	.word	0x24000090

90021f34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90021f34:	b570      	push	{r4, r5, r6, lr}
90021f36:	4d0d      	ldr	r5, [pc, #52]	@ (90021f6c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90021f38:	4606      	mov	r6, r0
90021f3a:	4c0d      	ldr	r4, [pc, #52]	@ (90021f70 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90021f3c:	782b      	ldrb	r3, [r5, #0]
90021f3e:	f3bf 8f5b 	dmb	ish
90021f42:	f013 0f01 	tst.w	r3, #1
90021f46:	d10d      	bne.n	90021f64 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021f48:	4628      	mov	r0, r5
90021f4a:	f008 f861 	bl	9002a010 <__cxa_guard_acquire>
90021f4e:	b148      	cbz	r0, 90021f64 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021f50:	4b08      	ldr	r3, [pc, #32]	@ (90021f74 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90021f52:	4628      	mov	r0, r5
90021f54:	6023      	str	r3, [r4, #0]
90021f56:	f008 f867 	bl	9002a028 <__cxa_guard_release>
90021f5a:	4a07      	ldr	r2, [pc, #28]	@ (90021f78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90021f5c:	4620      	mov	r0, r4
90021f5e:	4907      	ldr	r1, [pc, #28]	@ (90021f7c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90021f60:	f008 f84f 	bl	9002a002 <__aeabi_atexit>
90021f64:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90021f68:	bd70      	pop	{r4, r5, r6, pc}
90021f6a:	bf00      	nop
90021f6c:	240234a8 	.word	0x240234a8
90021f70:	2402351c 	.word	0x2402351c
90021f74:	9002e8b8 	.word	0x9002e8b8
90021f78:	24000000 	.word	0x24000000
90021f7c:	9001e55b 	.word	0x9001e55b

90021f80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021f80:	b510      	push	{r4, lr}
90021f82:	4604      	mov	r4, r0
90021f84:	f7ff ff96 	bl	90021eb4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90021f88:	4620      	mov	r0, r4
90021f8a:	f7ff ffb3 	bl	90021ef4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021f8e:	4620      	mov	r0, r4
90021f90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021f94:	f7ff bfce 	b.w	90021f34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90021f98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90021f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f9c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90021fa0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90021fa4:	2d00      	cmp	r5, #0
90021fa6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
90021faa:	fb05 4c0e 	mla	ip, r5, lr, r4
90021fae:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90021fb2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90021fb6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
90021fba:	eb02 0a0c 	add.w	sl, r2, ip
90021fbe:	8808      	ldrh	r0, [r1, #0]
90021fc0:	f2c0 80b0 	blt.w	90022124 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021fc4:	45ab      	cmp	fp, r5
90021fc6:	f340 80ad 	ble.w	90022124 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021fca:	2c00      	cmp	r4, #0
90021fcc:	f2c0 80a8 	blt.w	90022120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021fd0:	45a6      	cmp	lr, r4
90021fd2:	f340 80a5 	ble.w	90022120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021fd6:	f812 200c 	ldrb.w	r2, [r2, ip]
90021fda:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90021fde:	1c62      	adds	r2, r4, #1
90021fe0:	f100 80a3 	bmi.w	9002212a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021fe4:	4596      	cmp	lr, r2
90021fe6:	f340 80a0 	ble.w	9002212a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021fea:	f1b9 0f00 	cmp.w	r9, #0
90021fee:	f000 809c 	beq.w	9002212a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021ff2:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021ff6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021ffa:	3501      	adds	r5, #1
90021ffc:	f100 8099 	bmi.w	90022132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022000:	45ab      	cmp	fp, r5
90022002:	f340 8096 	ble.w	90022132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022006:	2f00      	cmp	r7, #0
90022008:	f000 8093 	beq.w	90022132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002200c:	2c00      	cmp	r4, #0
9002200e:	f2c0 808e 	blt.w	9002212e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90022012:	45a6      	cmp	lr, r4
90022014:	f340 808b 	ble.w	9002212e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90022018:	f81a 200e 	ldrb.w	r2, [sl, lr]
9002201c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90022020:	3401      	adds	r4, #1
90022022:	f100 8089 	bmi.w	90022138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022026:	45a6      	cmp	lr, r4
90022028:	f340 8086 	ble.w	90022138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002202c:	f1b9 0f00 	cmp.w	r9, #0
90022030:	f000 8082 	beq.w	90022138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022034:	44d6      	add	lr, sl
90022036:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002203a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9002203e:	ea4f 4408 	mov.w	r4, r8, lsl #16
90022042:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90022046:	fb19 fe07 	smulbb	lr, r9, r7
9002204a:	f1c7 0210 	rsb	r2, r7, #16
9002204e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022052:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90022056:	eba2 0209 	sub.w	r2, r2, r9
9002205a:	ea44 0808 	orr.w	r8, r4, r8
9002205e:	ea4f 440c 	mov.w	r4, ip, lsl #16
90022062:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022066:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002206a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002206e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90022072:	ea44 0c0c 	orr.w	ip, r4, ip
90022076:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002207a:	fb04 f40c 	mul.w	r4, r4, ip
9002207e:	fb02 4808 	mla	r8, r2, r8, r4
90022082:	041a      	lsls	r2, r3, #16
90022084:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022088:	b2b4      	uxth	r4, r6
9002208a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002208e:	43f6      	mvns	r6, r6
90022090:	4313      	orrs	r3, r2
90022092:	042a      	lsls	r2, r5, #16
90022094:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022098:	b2f6      	uxtb	r6, r6
9002209a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002209e:	fb0e 8303 	mla	r3, lr, r3, r8
900220a2:	432a      	orrs	r2, r5
900220a4:	fb07 3202 	mla	r2, r7, r2, r3
900220a8:	10c7      	asrs	r7, r0, #3
900220aa:	0d53      	lsrs	r3, r2, #21
900220ac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900220b0:	0952      	lsrs	r2, r2, #5
900220b2:	fb17 f706 	smulbb	r7, r7, r6
900220b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900220ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900220be:	431a      	orrs	r2, r3
900220c0:	b293      	uxth	r3, r2
900220c2:	1202      	asrs	r2, r0, #8
900220c4:	121d      	asrs	r5, r3, #8
900220c6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900220ca:	00c0      	lsls	r0, r0, #3
900220cc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900220d0:	fb12 f206 	smulbb	r2, r2, r6
900220d4:	b2c0      	uxtb	r0, r0
900220d6:	fb05 2504 	mla	r5, r5, r4, r2
900220da:	10da      	asrs	r2, r3, #3
900220dc:	fb10 f006 	smulbb	r0, r0, r6
900220e0:	00db      	lsls	r3, r3, #3
900220e2:	b2ad      	uxth	r5, r5
900220e4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900220e8:	b2db      	uxtb	r3, r3
900220ea:	fb02 7204 	mla	r2, r2, r4, r7
900220ee:	fb03 0004 	mla	r0, r3, r4, r0
900220f2:	1c6b      	adds	r3, r5, #1
900220f4:	b292      	uxth	r2, r2
900220f6:	b280      	uxth	r0, r0
900220f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900220fc:	1c43      	adds	r3, r0, #1
900220fe:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022102:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022106:	1c50      	adds	r0, r2, #1
90022108:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002210c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022110:	0952      	lsrs	r2, r2, #5
90022112:	432b      	orrs	r3, r5
90022114:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022118:	4313      	orrs	r3, r2
9002211a:	800b      	strh	r3, [r1, #0]
9002211c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022120:	4680      	mov	r8, r0
90022122:	e75c      	b.n	90021fde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90022124:	4684      	mov	ip, r0
90022126:	4680      	mov	r8, r0
90022128:	e767      	b.n	90021ffa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002212a:	4684      	mov	ip, r0
9002212c:	e765      	b.n	90021ffa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002212e:	4605      	mov	r5, r0
90022130:	e776      	b.n	90022020 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90022132:	4603      	mov	r3, r0
90022134:	4605      	mov	r5, r0
90022136:	e782      	b.n	9002203e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90022138:	4603      	mov	r3, r0
9002213a:	e780      	b.n	9002203e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9002213c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002213c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022140:	b099      	sub	sp, #100	@ 0x64
90022142:	9215      	str	r2, [sp, #84]	@ 0x54
90022144:	9309      	str	r3, [sp, #36]	@ 0x24
90022146:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90022148:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9002214c:	9016      	str	r0, [sp, #88]	@ 0x58
9002214e:	930d      	str	r3, [sp, #52]	@ 0x34
90022150:	6850      	ldr	r0, [r2, #4]
90022152:	910c      	str	r1, [sp, #48]	@ 0x30
90022154:	6812      	ldr	r2, [r2, #0]
90022156:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9002215a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
9002215e:	fb00 1303 	mla	r3, r0, r3, r1
90022162:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90022166:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022168:	681b      	ldr	r3, [r3, #0]
9002216a:	930b      	str	r3, [sp, #44]	@ 0x2c
9002216c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002216e:	685e      	ldr	r6, [r3, #4]
90022170:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022172:	3604      	adds	r6, #4
90022174:	43db      	mvns	r3, r3
90022176:	b2db      	uxtb	r3, r3
90022178:	930a      	str	r3, [sp, #40]	@ 0x28
9002217a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002217c:	2b00      	cmp	r3, #0
9002217e:	dc03      	bgt.n	90022188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90022180:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90022182:	2b00      	cmp	r3, #0
90022184:	f340 8225 	ble.w	900225d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90022188:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002218a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002218e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022192:	1e48      	subs	r0, r1, #1
90022194:	1e57      	subs	r7, r2, #1
90022196:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022198:	2b00      	cmp	r3, #0
9002219a:	f340 80e3 	ble.w	90022364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9002219e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
900221a2:	ea4f 4325 	mov.w	r3, r5, asr #16
900221a6:	d406      	bmi.n	900221b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900221a8:	4584      	cmp	ip, r0
900221aa:	da04      	bge.n	900221b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900221ac:	2b00      	cmp	r3, #0
900221ae:	db02      	blt.n	900221b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900221b0:	42bb      	cmp	r3, r7
900221b2:	f2c0 80d8 	blt.w	90022366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900221b6:	f11c 0c01 	adds.w	ip, ip, #1
900221ba:	f100 80c9 	bmi.w	90022350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900221be:	4561      	cmp	r1, ip
900221c0:	f2c0 80c6 	blt.w	90022350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900221c4:	3301      	adds	r3, #1
900221c6:	f100 80c3 	bmi.w	90022350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900221ca:	429a      	cmp	r2, r3
900221cc:	f2c0 80c0 	blt.w	90022350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900221d0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900221d4:	4647      	mov	r7, r8
900221d6:	f1bb 0f00 	cmp.w	fp, #0
900221da:	f340 80e3 	ble.w	900223a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
900221de:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
900221e0:	ea4f 4c25 	mov.w	ip, r5, asr #16
900221e4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900221e6:	f3ca 3003 	ubfx	r0, sl, #12, #4
900221ea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900221ee:	ea5f 422a 	movs.w	r2, sl, asr #16
900221f2:	f3c5 3103 	ubfx	r1, r5, #12, #4
900221f6:	689b      	ldr	r3, [r3, #8]
900221f8:	f100 8121 	bmi.w	9002243e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900221fc:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
90022200:	454a      	cmp	r2, r9
90022202:	f280 811c 	bge.w	9002243e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022206:	f1bc 0f00 	cmp.w	ip, #0
9002220a:	f2c0 8118 	blt.w	9002243e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002220e:	f10e 39ff 	add.w	r9, lr, #4294967295	@ 0xffffffff
90022212:	45cc      	cmp	ip, r9
90022214:	f280 8113 	bge.w	9002243e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022218:	b21b      	sxth	r3, r3
9002221a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002221c:	fb0c 2203 	mla	r2, ip, r3, r2
90022220:	eb04 0902 	add.w	r9, r4, r2
90022224:	5ca2      	ldrb	r2, [r4, r2]
90022226:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002222a:	2800      	cmp	r0, #0
9002222c:	f000 80fe 	beq.w	9002242c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90022230:	f899 2001 	ldrb.w	r2, [r9, #1]
90022234:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90022238:	9211      	str	r2, [sp, #68]	@ 0x44
9002223a:	b151      	cbz	r1, 90022252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002223c:	eb09 0203 	add.w	r2, r9, r3
90022240:	f819 3003 	ldrb.w	r3, [r9, r3]
90022244:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022248:	930f      	str	r3, [sp, #60]	@ 0x3c
9002224a:	7853      	ldrb	r3, [r2, #1]
9002224c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022250:	9312      	str	r3, [sp, #72]	@ 0x48
90022252:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022254:	fb10 f201 	smulbb	r2, r0, r1
90022258:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002225a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002225e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022262:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90022266:	10d2      	asrs	r2, r2, #3
90022268:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002226c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90022270:	ea4c 0c03 	orr.w	ip, ip, r3
90022274:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90022276:	041b      	lsls	r3, r3, #16
90022278:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002227c:	4323      	orrs	r3, r4
9002227e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022280:	4353      	muls	r3, r2
90022282:	fb09 330c 	mla	r3, r9, ip, r3
90022286:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9002228a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002228e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022292:	ea4c 0e0e 	orr.w	lr, ip, lr
90022296:	f1c1 0c10 	rsb	ip, r1, #16
9002229a:	ebac 0c00 	sub.w	ip, ip, r0
9002229e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900222a2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900222a6:	fb0c 3c0e 	mla	ip, ip, lr, r3
900222aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900222ac:	0418      	lsls	r0, r3, #16
900222ae:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900222b2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900222b6:	4318      	orrs	r0, r3
900222b8:	fb02 c200 	mla	r2, r2, r0, ip
900222bc:	8838      	ldrh	r0, [r7, #0]
900222be:	0d53      	lsrs	r3, r2, #21
900222c0:	0952      	lsrs	r2, r2, #5
900222c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900222c6:	1201      	asrs	r1, r0, #8
900222c8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900222cc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900222d0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900222d4:	00c0      	lsls	r0, r0, #3
900222d6:	431a      	orrs	r2, r3
900222d8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
900222dc:	fb11 f104 	smulbb	r1, r1, r4
900222e0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900222e4:	b292      	uxth	r2, r2
900222e6:	fb1e fe04 	smulbb	lr, lr, r4
900222ea:	b2c0      	uxtb	r0, r0
900222ec:	ea4f 2c22 	mov.w	ip, r2, asr #8
900222f0:	fb10 f004 	smulbb	r0, r0, r4
900222f4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900222f8:	fb0c 1c03 	mla	ip, ip, r3, r1
900222fc:	10d1      	asrs	r1, r2, #3
900222fe:	00d2      	lsls	r2, r2, #3
90022300:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022304:	fa1f fc8c 	uxth.w	ip, ip
90022308:	b2d2      	uxtb	r2, r2
9002230a:	fb01 e103 	mla	r1, r1, r3, lr
9002230e:	fb02 0303 	mla	r3, r2, r3, r0
90022312:	b289      	uxth	r1, r1
90022314:	b29a      	uxth	r2, r3
90022316:	f10c 0301 	add.w	r3, ip, #1
9002231a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002231e:	1c53      	adds	r3, r2, #1
90022320:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022324:	1c4a      	adds	r2, r1, #1
90022326:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002232a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002232e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022332:	0949      	lsrs	r1, r1, #5
90022334:	ea43 030c 	orr.w	r3, r3, ip
90022338:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002233c:	430b      	orrs	r3, r1
9002233e:	803b      	strh	r3, [r7, #0]
90022340:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90022342:	3702      	adds	r7, #2
90022344:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
90022348:	449a      	add	sl, r3
9002234a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002234c:	441d      	add	r5, r3
9002234e:	e742      	b.n	900221d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022350:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90022352:	f108 0802 	add.w	r8, r8, #2
90022356:	449a      	add	sl, r3
90022358:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002235a:	441d      	add	r5, r3
9002235c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002235e:	3b01      	subs	r3, #1
90022360:	9309      	str	r3, [sp, #36]	@ 0x24
90022362:	e718      	b.n	90022196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90022364:	d023      	beq.n	900223ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90022366:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022368:	9825      	ldr	r0, [sp, #148]	@ 0x94
9002236a:	3b01      	subs	r3, #1
9002236c:	fb00 a003 	mla	r0, r0, r3, sl
90022370:	1400      	asrs	r0, r0, #16
90022372:	f53f af2d 	bmi.w	900221d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022376:	3901      	subs	r1, #1
90022378:	4288      	cmp	r0, r1
9002237a:	f6bf af29 	bge.w	900221d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002237e:	9926      	ldr	r1, [sp, #152]	@ 0x98
90022380:	fb01 5303 	mla	r3, r1, r3, r5
90022384:	141b      	asrs	r3, r3, #16
90022386:	f53f af23 	bmi.w	900221d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002238a:	3a01      	subs	r2, #1
9002238c:	4293      	cmp	r3, r2
9002238e:	f6bf af1f 	bge.w	900221d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022392:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90022396:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
9002239a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
9002239e:	f1be 0f00 	cmp.w	lr, #0
900223a2:	dc6c      	bgt.n	9002247e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900223a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900223a6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900223aa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
900223ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900223b0:	2b00      	cmp	r3, #0
900223b2:	f340 810e 	ble.w	900225d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900223b6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900223ba:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900223bc:	ee30 0a04 	vadd.f32	s0, s0, s8
900223c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900223c4:	eef0 6a62 	vmov.f32	s13, s5
900223c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
900223cc:	ee31 1a05 	vadd.f32	s2, s2, s10
900223d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900223d4:	ee16 aa90 	vmov	sl, s13
900223d8:	eef0 6a43 	vmov.f32	s13, s6
900223dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900223e0:	ee16 5a90 	vmov	r5, s13
900223e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
900223e8:	ee61 7a27 	vmul.f32	s15, s2, s15
900223ec:	ee77 2a62 	vsub.f32	s5, s14, s5
900223f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900223f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900223f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900223fc:	ee12 2a90 	vmov	r2, s5
90022400:	eef0 2a47 	vmov.f32	s5, s14
90022404:	fb92 f3f3 	sdiv	r3, r2, r3
90022408:	ee13 2a10 	vmov	r2, s6
9002240c:	9325      	str	r3, [sp, #148]	@ 0x94
9002240e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022410:	eeb0 3a67 	vmov.f32	s6, s15
90022414:	fb92 f3f3 	sdiv	r3, r2, r3
90022418:	9326      	str	r3, [sp, #152]	@ 0x98
9002241a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002241c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9002241e:	3b01      	subs	r3, #1
90022420:	930c      	str	r3, [sp, #48]	@ 0x30
90022422:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022424:	bf08      	it	eq
90022426:	4613      	moveq	r3, r2
90022428:	9309      	str	r3, [sp, #36]	@ 0x24
9002242a:	e6a6      	b.n	9002217a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002242c:	2900      	cmp	r1, #0
9002242e:	f43f af10 	beq.w	90022252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022432:	f819 3003 	ldrb.w	r3, [r9, r3]
90022436:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002243a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002243c:	e709      	b.n	90022252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002243e:	f112 0901 	adds.w	r9, r2, #1
90022442:	f53f af7d 	bmi.w	90022340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022446:	454b      	cmp	r3, r9
90022448:	f6ff af7a 	blt.w	90022340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002244c:	f11c 0901 	adds.w	r9, ip, #1
90022450:	f53f af76 	bmi.w	90022340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022454:	45ce      	cmp	lr, r9
90022456:	f6ff af73 	blt.w	90022340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002245a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002245c:	b21b      	sxth	r3, r3
9002245e:	9202      	str	r2, [sp, #8]
90022460:	fa0f f28e 	sxth.w	r2, lr
90022464:	9300      	str	r3, [sp, #0]
90022466:	4633      	mov	r3, r6
90022468:	9201      	str	r2, [sp, #4]
9002246a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002246c:	e9cd 1405 	strd	r1, r4, [sp, #20]
90022470:	e9cd c003 	strd	ip, r0, [sp, #12]
90022474:	4639      	mov	r1, r7
90022476:	9816      	ldr	r0, [sp, #88]	@ 0x58
90022478:	f7ff fd8e 	bl	90021f98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9002247c:	e760      	b.n	90022340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002247e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022480:	ea4f 422a 	mov.w	r2, sl, asr #16
90022484:	1429      	asrs	r1, r5, #16
90022486:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022488:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002248c:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90022490:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022494:	fb03 2101 	mla	r1, r3, r1, r2
90022498:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002249a:	440a      	add	r2, r1
9002249c:	5c61      	ldrb	r1, [r4, r1]
9002249e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900224a2:	f1bc 0f00 	cmp.w	ip, #0
900224a6:	f000 808c 	beq.w	900225c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900224aa:	7857      	ldrb	r7, [r2, #1]
900224ac:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900224b0:	9413      	str	r4, [sp, #76]	@ 0x4c
900224b2:	b140      	cbz	r0, 900224c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900224b4:	18d7      	adds	r7, r2, r3
900224b6:	5cd3      	ldrb	r3, [r2, r3]
900224b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900224bc:	9310      	str	r3, [sp, #64]	@ 0x40
900224be:	787b      	ldrb	r3, [r7, #1]
900224c0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900224c4:	9314      	str	r3, [sp, #80]	@ 0x50
900224c6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900224c8:	fb1c f200 	smulbb	r2, ip, r0
900224cc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900224ce:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
900224d2:	041f      	lsls	r7, r3, #16
900224d4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900224d8:	10d2      	asrs	r2, r2, #3
900224da:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
900224de:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
900224e2:	431f      	orrs	r7, r3
900224e4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
900224e8:	9317      	str	r3, [sp, #92]	@ 0x5c
900224ea:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900224ec:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900224ee:	041b      	lsls	r3, r3, #16
900224f0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900224f4:	ea43 030b 	orr.w	r3, r3, fp
900224f8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900224fc:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022500:	4353      	muls	r3, r2
90022502:	fb04 3707 	mla	r7, r4, r7, r3
90022506:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002250a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002250c:	ea43 0b01 	orr.w	fp, r3, r1
90022510:	f1c0 0110 	rsb	r1, r0, #16
90022514:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022516:	eba1 0c0c 	sub.w	ip, r1, ip
9002251a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002251e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022522:	fb0c 770b 	mla	r7, ip, fp, r7
90022526:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002252a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9002252e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022532:	ea4c 0c0b 	orr.w	ip, ip, fp
90022536:	fb02 770c 	mla	r7, r2, ip, r7
9002253a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002253c:	0d79      	lsrs	r1, r7, #21
9002253e:	8812      	ldrh	r2, [r2, #0]
90022540:	097f      	lsrs	r7, r7, #5
90022542:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022546:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002254a:	430f      	orrs	r7, r1
9002254c:	1211      	asrs	r1, r2, #8
9002254e:	b2bb      	uxth	r3, r7
90022550:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90022554:	10d7      	asrs	r7, r2, #3
90022556:	fb11 f104 	smulbb	r1, r1, r4
9002255a:	1218      	asrs	r0, r3, #8
9002255c:	00d2      	lsls	r2, r2, #3
9002255e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022562:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90022566:	fb17 f704 	smulbb	r7, r7, r4
9002256a:	b2d2      	uxtb	r2, r2
9002256c:	fb00 1009 	mla	r0, r0, r9, r1
90022570:	10d9      	asrs	r1, r3, #3
90022572:	fb12 f204 	smulbb	r2, r2, r4
90022576:	00db      	lsls	r3, r3, #3
90022578:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002257c:	b280      	uxth	r0, r0
9002257e:	b2db      	uxtb	r3, r3
90022580:	fb01 7109 	mla	r1, r1, r9, r7
90022584:	fb03 2309 	mla	r3, r3, r9, r2
90022588:	1c42      	adds	r2, r0, #1
9002258a:	b289      	uxth	r1, r1
9002258c:	b29b      	uxth	r3, r3
9002258e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022592:	1c4f      	adds	r7, r1, #1
90022594:	1c5a      	adds	r2, r3, #1
90022596:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002259a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9002259e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900225a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900225a4:	0949      	lsrs	r1, r1, #5
900225a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900225aa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900225ae:	4310      	orrs	r0, r2
900225b0:	4308      	orrs	r0, r1
900225b2:	f823 0b02 	strh.w	r0, [r3], #2
900225b6:	930e      	str	r3, [sp, #56]	@ 0x38
900225b8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900225ba:	449a      	add	sl, r3
900225bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900225be:	441d      	add	r5, r3
900225c0:	e6ed      	b.n	9002239e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900225c2:	2800      	cmp	r0, #0
900225c4:	f43f af7f 	beq.w	900224c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900225c8:	5cd3      	ldrb	r3, [r2, r3]
900225ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900225ce:	9310      	str	r3, [sp, #64]	@ 0x40
900225d0:	e779      	b.n	900224c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900225d2:	b019      	add	sp, #100	@ 0x64
900225d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900225d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900225d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900225dc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
900225e0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900225e4:	f1b8 0f00 	cmp.w	r8, #0
900225e8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
900225ec:	fb08 470e 	mla	r7, r8, lr, r4
900225f0:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
900225f4:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900225f8:	eb02 0907 	add.w	r9, r2, r7
900225fc:	8808      	ldrh	r0, [r1, #0]
900225fe:	db67      	blt.n	900226d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022600:	45c2      	cmp	sl, r8
90022602:	dd65      	ble.n	900226d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022604:	2c00      	cmp	r4, #0
90022606:	db61      	blt.n	900226cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022608:	45a6      	cmp	lr, r4
9002260a:	dd5f      	ble.n	900226cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002260c:	5dd2      	ldrb	r2, [r2, r7]
9002260e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90022612:	1c62      	adds	r2, r4, #1
90022614:	d45f      	bmi.n	900226d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022616:	4596      	cmp	lr, r2
90022618:	dd5d      	ble.n	900226d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002261a:	2d00      	cmp	r5, #0
9002261c:	d05b      	beq.n	900226d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002261e:	f899 2001 	ldrb.w	r2, [r9, #1]
90022622:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90022626:	f118 0801 	adds.w	r8, r8, #1
9002262a:	d458      	bmi.n	900226de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002262c:	45c2      	cmp	sl, r8
9002262e:	dd56      	ble.n	900226de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022630:	2e00      	cmp	r6, #0
90022632:	d054      	beq.n	900226de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022634:	2c00      	cmp	r4, #0
90022636:	db50      	blt.n	900226da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022638:	45a6      	cmp	lr, r4
9002263a:	dd4e      	ble.n	900226da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002263c:	f819 200e 	ldrb.w	r2, [r9, lr]
90022640:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90022644:	3401      	adds	r4, #1
90022646:	d407      	bmi.n	90022658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022648:	45a6      	cmp	lr, r4
9002264a:	dd05      	ble.n	90022658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002264c:	b125      	cbz	r5, 90022658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002264e:	44ce      	add	lr, r9
90022650:	f89e 0001 	ldrb.w	r0, [lr, #1]
90022654:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90022658:	fb15 f406 	smulbb	r4, r5, r6
9002265c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022660:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90022664:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022668:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002266c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022670:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90022674:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022678:	ea43 0c0c 	orr.w	ip, r3, ip
9002267c:	f1c6 0310 	rsb	r3, r6, #16
90022680:	ea4e 0707 	orr.w	r7, lr, r7
90022684:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022688:	1b5b      	subs	r3, r3, r5
9002268a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002268e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90022692:	437d      	muls	r5, r7
90022694:	fb03 5c0c 	mla	ip, r3, ip, r5
90022698:	0403      	lsls	r3, r0, #16
9002269a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002269e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900226a2:	4318      	orrs	r0, r3
900226a4:	0413      	lsls	r3, r2, #16
900226a6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900226aa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900226ae:	fb04 c000 	mla	r0, r4, r0, ip
900226b2:	4313      	orrs	r3, r2
900226b4:	fb06 0003 	mla	r0, r6, r3, r0
900226b8:	0d43      	lsrs	r3, r0, #21
900226ba:	0940      	lsrs	r0, r0, #5
900226bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900226c0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900226c4:	4318      	orrs	r0, r3
900226c6:	8008      	strh	r0, [r1, #0]
900226c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900226cc:	4684      	mov	ip, r0
900226ce:	e7a0      	b.n	90022612 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900226d0:	4607      	mov	r7, r0
900226d2:	4684      	mov	ip, r0
900226d4:	e7a7      	b.n	90022626 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900226d6:	4607      	mov	r7, r0
900226d8:	e7a5      	b.n	90022626 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900226da:	4602      	mov	r2, r0
900226dc:	e7b2      	b.n	90022644 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900226de:	4602      	mov	r2, r0
900226e0:	e7ba      	b.n	90022658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

900226e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900226e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900226e6:	b093      	sub	sp, #76	@ 0x4c
900226e8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900226ec:	920f      	str	r2, [sp, #60]	@ 0x3c
900226ee:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900226f0:	9010      	str	r0, [sp, #64]	@ 0x40
900226f2:	9108      	str	r1, [sp, #32]
900226f4:	6850      	ldr	r0, [r2, #4]
900226f6:	9306      	str	r3, [sp, #24]
900226f8:	6812      	ldr	r2, [r2, #0]
900226fa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900226fe:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90022702:	fb00 1303 	mla	r3, r0, r3, r1
90022706:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002270a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002270c:	681b      	ldr	r3, [r3, #0]
9002270e:	9307      	str	r3, [sp, #28]
90022710:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022712:	685f      	ldr	r7, [r3, #4]
90022714:	3704      	adds	r7, #4
90022716:	9b08      	ldr	r3, [sp, #32]
90022718:	2b00      	cmp	r3, #0
9002271a:	dc03      	bgt.n	90022724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9002271c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002271e:	2b00      	cmp	r3, #0
90022720:	f340 81b2 	ble.w	90022a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90022724:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022726:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002272a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002272e:	1e48      	subs	r0, r1, #1
90022730:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
90022734:	9b06      	ldr	r3, [sp, #24]
90022736:	2b00      	cmp	r3, #0
90022738:	f340 80a9 	ble.w	9002288e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002273c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022740:	ea4f 4326 	mov.w	r3, r6, asr #16
90022744:	d406      	bmi.n	90022754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90022746:	4586      	cmp	lr, r0
90022748:	da04      	bge.n	90022754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002274a:	2b00      	cmp	r3, #0
9002274c:	db02      	blt.n	90022754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002274e:	4563      	cmp	r3, ip
90022750:	f2c0 809e 	blt.w	90022890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90022754:	f11e 0e01 	adds.w	lr, lr, #1
90022758:	f100 808f 	bmi.w	9002287a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002275c:	4571      	cmp	r1, lr
9002275e:	f2c0 808c 	blt.w	9002287a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022762:	3301      	adds	r3, #1
90022764:	f100 8089 	bmi.w	9002287a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022768:	429a      	cmp	r2, r3
9002276a:	f2c0 8086 	blt.w	9002287a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002276e:	f8dd b018 	ldr.w	fp, [sp, #24]
90022772:	46c8      	mov	r8, r9
90022774:	f1bb 0f00 	cmp.w	fp, #0
90022778:	f340 80a6 	ble.w	900228c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9002277c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
9002277e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90022782:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022784:	f3c4 3003 	ubfx	r0, r4, #12, #4
90022788:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002278c:	1422      	asrs	r2, r4, #16
9002278e:	f3c6 3103 	ubfx	r1, r6, #12, #4
90022792:	689b      	ldr	r3, [r3, #8]
90022794:	f100 80e3 	bmi.w	9002295e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022798:	f103 3aff 	add.w	sl, r3, #4294967295	@ 0xffffffff
9002279c:	4552      	cmp	r2, sl
9002279e:	f280 80de 	bge.w	9002295e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900227a2:	f1bc 0f00 	cmp.w	ip, #0
900227a6:	f2c0 80da 	blt.w	9002295e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900227aa:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
900227ae:	45d4      	cmp	ip, sl
900227b0:	f280 80d5 	bge.w	9002295e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900227b4:	b21b      	sxth	r3, r3
900227b6:	9d07      	ldr	r5, [sp, #28]
900227b8:	fb0c 2203 	mla	r2, ip, r3, r2
900227bc:	eb05 0a02 	add.w	sl, r5, r2
900227c0:	5caa      	ldrb	r2, [r5, r2]
900227c2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900227c6:	2800      	cmp	r0, #0
900227c8:	f000 80c0 	beq.w	9002294c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900227cc:	f89a 2001 	ldrb.w	r2, [sl, #1]
900227d0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900227d4:	920b      	str	r2, [sp, #44]	@ 0x2c
900227d6:	b151      	cbz	r1, 900227ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900227d8:	eb0a 0203 	add.w	r2, sl, r3
900227dc:	f81a 3003 	ldrb.w	r3, [sl, r3]
900227e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900227e4:	9309      	str	r3, [sp, #36]	@ 0x24
900227e6:	7853      	ldrb	r3, [r2, #1]
900227e8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900227ec:	930c      	str	r3, [sp, #48]	@ 0x30
900227ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900227f0:	fb10 f201 	smulbb	r2, r0, r1
900227f4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900227f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900227fa:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900227fe:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022802:	10d2      	asrs	r2, r2, #3
90022804:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022808:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9002280c:	ea4c 0c03 	orr.w	ip, ip, r3
90022810:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022812:	041b      	lsls	r3, r3, #16
90022814:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022818:	432b      	orrs	r3, r5
9002281a:	4353      	muls	r3, r2
9002281c:	fb0a 330c 	mla	r3, sl, ip, r3
90022820:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90022824:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022828:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002282c:	ea4c 0e0e 	orr.w	lr, ip, lr
90022830:	f1c1 0c10 	rsb	ip, r1, #16
90022834:	ebac 0c00 	sub.w	ip, ip, r0
90022838:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002283c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90022840:	fb0c 3c0e 	mla	ip, ip, lr, r3
90022844:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022846:	0418      	lsls	r0, r3, #16
90022848:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002284c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90022850:	4318      	orrs	r0, r3
90022852:	fb02 c200 	mla	r2, r2, r0, ip
90022856:	0d53      	lsrs	r3, r2, #21
90022858:	0952      	lsrs	r2, r2, #5
9002285a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002285e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022862:	431a      	orrs	r2, r3
90022864:	f8a8 2000 	strh.w	r2, [r8]
90022868:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002286a:	f108 0802 	add.w	r8, r8, #2
9002286e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
90022872:	441c      	add	r4, r3
90022874:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022876:	441e      	add	r6, r3
90022878:	e77c      	b.n	90022774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002287a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002287c:	f109 0902 	add.w	r9, r9, #2
90022880:	441c      	add	r4, r3
90022882:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022884:	441e      	add	r6, r3
90022886:	9b06      	ldr	r3, [sp, #24]
90022888:	3b01      	subs	r3, #1
9002288a:	9306      	str	r3, [sp, #24]
9002288c:	e752      	b.n	90022734 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002288e:	d020      	beq.n	900228d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90022890:	9b06      	ldr	r3, [sp, #24]
90022892:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022894:	3b01      	subs	r3, #1
90022896:	fb00 4003 	mla	r0, r0, r3, r4
9002289a:	1400      	asrs	r0, r0, #16
9002289c:	f53f af67 	bmi.w	9002276e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900228a0:	3901      	subs	r1, #1
900228a2:	4288      	cmp	r0, r1
900228a4:	f6bf af63 	bge.w	9002276e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900228a8:	9920      	ldr	r1, [sp, #128]	@ 0x80
900228aa:	fb01 6303 	mla	r3, r1, r3, r6
900228ae:	141b      	asrs	r3, r3, #16
900228b0:	f53f af5d 	bmi.w	9002276e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900228b4:	3a01      	subs	r2, #1
900228b6:	4293      	cmp	r3, r2
900228b8:	f6bf af59 	bge.w	9002276e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900228bc:	f8dd 8018 	ldr.w	r8, [sp, #24]
900228c0:	46ca      	mov	sl, r9
900228c2:	f1b8 0f00 	cmp.w	r8, #0
900228c6:	dc67      	bgt.n	90022998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900228c8:	9b06      	ldr	r3, [sp, #24]
900228ca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900228ce:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900228d2:	9b08      	ldr	r3, [sp, #32]
900228d4:	2b00      	cmp	r3, #0
900228d6:	f340 80d7 	ble.w	90022a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900228da:	ee30 0a04 	vadd.f32	s0, s0, s8
900228de:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900228e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900228e4:	eeb0 6a62 	vmov.f32	s12, s5
900228e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
900228ec:	ee31 1a05 	vadd.f32	s2, s2, s10
900228f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900228f4:	ee16 4a10 	vmov	r4, s12
900228f8:	eeb0 6a43 	vmov.f32	s12, s6
900228fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022900:	ee16 6a10 	vmov	r6, s12
90022904:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022908:	ee61 7a27 	vmul.f32	s15, s2, s15
9002290c:	ee77 2a62 	vsub.f32	s5, s14, s5
90022910:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022914:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022918:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002291c:	ee12 2a90 	vmov	r2, s5
90022920:	eef0 2a47 	vmov.f32	s5, s14
90022924:	fb92 f3f3 	sdiv	r3, r2, r3
90022928:	ee13 2a10 	vmov	r2, s6
9002292c:	931f      	str	r3, [sp, #124]	@ 0x7c
9002292e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022930:	eeb0 3a67 	vmov.f32	s6, s15
90022934:	fb92 f3f3 	sdiv	r3, r2, r3
90022938:	9320      	str	r3, [sp, #128]	@ 0x80
9002293a:	9b08      	ldr	r3, [sp, #32]
9002293c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002293e:	3b01      	subs	r3, #1
90022940:	9308      	str	r3, [sp, #32]
90022942:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022944:	bf08      	it	eq
90022946:	4613      	moveq	r3, r2
90022948:	9306      	str	r3, [sp, #24]
9002294a:	e6e4      	b.n	90022716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002294c:	2900      	cmp	r1, #0
9002294e:	f43f af4e 	beq.w	900227ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022952:	f81a 3003 	ldrb.w	r3, [sl, r3]
90022956:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002295a:	9309      	str	r3, [sp, #36]	@ 0x24
9002295c:	e747      	b.n	900227ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002295e:	f112 0a01 	adds.w	sl, r2, #1
90022962:	d481      	bmi.n	90022868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022964:	4553      	cmp	r3, sl
90022966:	f6ff af7f 	blt.w	90022868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002296a:	f11c 0a01 	adds.w	sl, ip, #1
9002296e:	f53f af7b 	bmi.w	90022868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022972:	45d6      	cmp	lr, sl
90022974:	f6ff af78 	blt.w	90022868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022978:	b21b      	sxth	r3, r3
9002297a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9002297e:	fa0f f28e 	sxth.w	r2, lr
90022982:	9300      	str	r3, [sp, #0]
90022984:	463b      	mov	r3, r7
90022986:	9201      	str	r2, [sp, #4]
90022988:	9a07      	ldr	r2, [sp, #28]
9002298a:	e9cd 0104 	strd	r0, r1, [sp, #16]
9002298e:	4641      	mov	r1, r8
90022990:	9810      	ldr	r0, [sp, #64]	@ 0x40
90022992:	f7ff fe21 	bl	900225d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90022996:	e767      	b.n	90022868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022998:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002299a:	1422      	asrs	r2, r4, #16
9002299c:	1431      	asrs	r1, r6, #16
9002299e:	9d07      	ldr	r5, [sp, #28]
900229a0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900229a4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900229a8:	f3c6 3003 	ubfx	r0, r6, #12, #4
900229ac:	fb03 2101 	mla	r1, r3, r1, r2
900229b0:	9a07      	ldr	r2, [sp, #28]
900229b2:	440a      	add	r2, r1
900229b4:	5c69      	ldrb	r1, [r5, r1]
900229b6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900229ba:	f1be 0f00 	cmp.w	lr, #0
900229be:	d05c      	beq.n	90022a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900229c0:	f892 c001 	ldrb.w	ip, [r2, #1]
900229c4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900229c8:	950d      	str	r5, [sp, #52]	@ 0x34
900229ca:	b150      	cbz	r0, 900229e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900229cc:	eb02 0c03 	add.w	ip, r2, r3
900229d0:	5cd3      	ldrb	r3, [r2, r3]
900229d2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900229d6:	930a      	str	r3, [sp, #40]	@ 0x28
900229d8:	f89c 3001 	ldrb.w	r3, [ip, #1]
900229dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900229e0:	930e      	str	r3, [sp, #56]	@ 0x38
900229e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900229e4:	fb1e f200 	smulbb	r2, lr, r0
900229e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900229ea:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
900229ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900229f2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900229f6:	10d2      	asrs	r2, r2, #3
900229f8:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
900229fc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022a00:	ea4c 0c03 	orr.w	ip, ip, r3
90022a04:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90022a08:	9311      	str	r3, [sp, #68]	@ 0x44
90022a0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022a0c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90022a0e:	041b      	lsls	r3, r3, #16
90022a10:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022a14:	ea43 030b 	orr.w	r3, r3, fp
90022a18:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022a1c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022a20:	4353      	muls	r3, r2
90022a22:	fb05 3c0c 	mla	ip, r5, ip, r3
90022a26:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90022a2a:	ea43 0b01 	orr.w	fp, r3, r1
90022a2e:	f1c0 0110 	rsb	r1, r0, #16
90022a32:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022a34:	eba1 0e0e 	sub.w	lr, r1, lr
90022a38:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90022a3c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022a40:	fb0e cc0b 	mla	ip, lr, fp, ip
90022a44:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90022a48:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90022a4c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022a50:	ea4b 0e0e 	orr.w	lr, fp, lr
90022a54:	fb02 cc0e 	mla	ip, r2, lr, ip
90022a58:	ea4f 535c 	mov.w	r3, ip, lsr #21
90022a5c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022a60:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022a64:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022a68:	ea43 0c0c 	orr.w	ip, r3, ip
90022a6c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022a6e:	441c      	add	r4, r3
90022a70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022a72:	f82a cb02 	strh.w	ip, [sl], #2
90022a76:	441e      	add	r6, r3
90022a78:	e723      	b.n	900228c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022a7a:	2800      	cmp	r0, #0
90022a7c:	d0b1      	beq.n	900229e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022a7e:	5cd3      	ldrb	r3, [r2, r3]
90022a80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022a84:	930a      	str	r3, [sp, #40]	@ 0x28
90022a86:	e7ac      	b.n	900229e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022a88:	b013      	add	sp, #76	@ 0x4c
90022a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022a8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90022a8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022a92:	880d      	ldrh	r5, [r1, #0]
90022a94:	b087      	sub	sp, #28
90022a96:	10ef      	asrs	r7, r5, #3
90022a98:	9103      	str	r1, [sp, #12]
90022a9a:	ea4f 2a25 	mov.w	sl, r5, asr #8
90022a9e:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90022aa2:	00ed      	lsls	r5, r5, #3
90022aa4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022aa8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90022aac:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90022ab0:	b2ed      	uxtb	r5, r5
90022ab2:	9701      	str	r7, [sp, #4]
90022ab4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90022ab8:	9502      	str	r5, [sp, #8]
90022aba:	9d01      	ldr	r5, [sp, #4]
90022abc:	9902      	ldr	r1, [sp, #8]
90022abe:	022d      	lsls	r5, r5, #8
90022ac0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90022ac4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90022ac8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90022acc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90022ad0:	430d      	orrs	r5, r1
90022ad2:	fb06 0709 	mla	r7, r6, r9, r0
90022ad6:	2e00      	cmp	r6, #0
90022ad8:	9505      	str	r5, [sp, #20]
90022ada:	eb02 0c07 	add.w	ip, r2, r7
90022ade:	f2c0 80b6 	blt.w	90022c4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022ae2:	45b3      	cmp	fp, r6
90022ae4:	f340 80b3 	ble.w	90022c4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022ae8:	2800      	cmp	r0, #0
90022aea:	f2c0 80ae 	blt.w	90022c4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022aee:	4581      	cmp	r9, r0
90022af0:	f340 80ab 	ble.w	90022c4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022af4:	5dd7      	ldrb	r7, [r2, r7]
90022af6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022afa:	441f      	add	r7, r3
90022afc:	1c42      	adds	r2, r0, #1
90022afe:	f100 80a9 	bmi.w	90022c54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022b02:	4591      	cmp	r9, r2
90022b04:	f340 80a6 	ble.w	90022c54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022b08:	2c00      	cmp	r4, #0
90022b0a:	f000 80a3 	beq.w	90022c54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022b0e:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022b12:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022b16:	441d      	add	r5, r3
90022b18:	3601      	adds	r6, #1
90022b1a:	f100 809f 	bmi.w	90022c5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022b1e:	45b3      	cmp	fp, r6
90022b20:	f340 809c 	ble.w	90022c5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022b24:	f1be 0f00 	cmp.w	lr, #0
90022b28:	f000 8098 	beq.w	90022c5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022b2c:	2800      	cmp	r0, #0
90022b2e:	f2c0 8093 	blt.w	90022c58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022b32:	4581      	cmp	r9, r0
90022b34:	f340 8090 	ble.w	90022c58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022b38:	f81c 6009 	ldrb.w	r6, [ip, r9]
90022b3c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022b40:	441e      	add	r6, r3
90022b42:	3001      	adds	r0, #1
90022b44:	f100 808d 	bmi.w	90022c62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022b48:	4581      	cmp	r9, r0
90022b4a:	f340 808a 	ble.w	90022c62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022b4e:	2c00      	cmp	r4, #0
90022b50:	f000 8087 	beq.w	90022c62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022b54:	44e1      	add	r9, ip
90022b56:	f899 2001 	ldrb.w	r2, [r9, #1]
90022b5a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022b5e:	4413      	add	r3, r2
90022b60:	b2a4      	uxth	r4, r4
90022b62:	f897 c002 	ldrb.w	ip, [r7, #2]
90022b66:	fa1f fe8e 	uxth.w	lr, lr
90022b6a:	9901      	ldr	r1, [sp, #4]
90022b6c:	fb04 fb0e 	mul.w	fp, r4, lr
90022b70:	0124      	lsls	r4, r4, #4
90022b72:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90022b76:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
90022b7a:	eba4 040b 	sub.w	r4, r4, fp
90022b7e:	fa1f f08e 	uxth.w	r0, lr
90022b82:	b2a2      	uxth	r2, r4
90022b84:	78ac      	ldrb	r4, [r5, #2]
90022b86:	eba9 0900 	sub.w	r9, r9, r0
90022b8a:	fa1f fe88 	uxth.w	lr, r8
90022b8e:	4354      	muls	r4, r2
90022b90:	ea6f 0808 	mvn.w	r8, r8
90022b94:	fa1f f989 	uxth.w	r9, r9
90022b98:	fa5f f888 	uxtb.w	r8, r8
90022b9c:	fb09 440c 	mla	r4, r9, ip, r4
90022ba0:	f896 c002 	ldrb.w	ip, [r6, #2]
90022ba4:	fb1a fa08 	smulbb	sl, sl, r8
90022ba8:	fb00 440c 	mla	r4, r0, ip, r4
90022bac:	f893 c002 	ldrb.w	ip, [r3, #2]
90022bb0:	fb0b 4c0c 	mla	ip, fp, ip, r4
90022bb4:	787c      	ldrb	r4, [r7, #1]
90022bb6:	783f      	ldrb	r7, [r7, #0]
90022bb8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022bbc:	fb0c ac0e 	mla	ip, ip, lr, sl
90022bc0:	f895 a001 	ldrb.w	sl, [r5, #1]
90022bc4:	782d      	ldrb	r5, [r5, #0]
90022bc6:	fb02 fa0a 	mul.w	sl, r2, sl
90022bca:	fa1f fc8c 	uxth.w	ip, ip
90022bce:	436a      	muls	r2, r5
90022bd0:	7835      	ldrb	r5, [r6, #0]
90022bd2:	fb09 aa04 	mla	sl, r9, r4, sl
90022bd6:	7874      	ldrb	r4, [r6, #1]
90022bd8:	fb09 2207 	mla	r2, r9, r7, r2
90022bdc:	fb00 aa04 	mla	sl, r0, r4, sl
90022be0:	785c      	ldrb	r4, [r3, #1]
90022be2:	fb00 2005 	mla	r0, r0, r5, r2
90022be6:	781b      	ldrb	r3, [r3, #0]
90022be8:	fb0b a404 	mla	r4, fp, r4, sl
90022bec:	fb11 fa08 	smulbb	sl, r1, r8
90022bf0:	fb0b 0b03 	mla	fp, fp, r3, r0
90022bf4:	9b02      	ldr	r3, [sp, #8]
90022bf6:	f3c4 2407 	ubfx	r4, r4, #8, #8
90022bfa:	fb13 f808 	smulbb	r8, r3, r8
90022bfe:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90022c02:	fb04 a40e 	mla	r4, r4, lr, sl
90022c06:	f10c 0301 	add.w	r3, ip, #1
90022c0a:	fb0b 8e0e 	mla	lr, fp, lr, r8
90022c0e:	b2a4      	uxth	r4, r4
90022c10:	fa1f fe8e 	uxth.w	lr, lr
90022c14:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022c18:	f104 0a01 	add.w	sl, r4, #1
90022c1c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90022c20:	f10e 0c01 	add.w	ip, lr, #1
90022c24:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90022c28:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90022c2c:	0964      	lsrs	r4, r4, #5
90022c2e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022c32:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90022c36:	ea4c 0c03 	orr.w	ip, ip, r3
90022c3a:	9b03      	ldr	r3, [sp, #12]
90022c3c:	ea4c 0c04 	orr.w	ip, ip, r4
90022c40:	f8a3 c000 	strh.w	ip, [r3]
90022c44:	b007      	add	sp, #28
90022c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022c4a:	af05      	add	r7, sp, #20
90022c4c:	e756      	b.n	90022afc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90022c4e:	ad05      	add	r5, sp, #20
90022c50:	462f      	mov	r7, r5
90022c52:	e761      	b.n	90022b18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022c54:	ad05      	add	r5, sp, #20
90022c56:	e75f      	b.n	90022b18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022c58:	ae05      	add	r6, sp, #20
90022c5a:	e772      	b.n	90022b42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90022c5c:	ab05      	add	r3, sp, #20
90022c5e:	461e      	mov	r6, r3
90022c60:	e77e      	b.n	90022b60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90022c62:	ab05      	add	r3, sp, #20
90022c64:	e77c      	b.n	90022b60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90022c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022c66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022c6a:	b095      	sub	sp, #84	@ 0x54
90022c6c:	9212      	str	r2, [sp, #72]	@ 0x48
90022c6e:	9309      	str	r3, [sp, #36]	@ 0x24
90022c70:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90022c72:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90022c76:	9013      	str	r0, [sp, #76]	@ 0x4c
90022c78:	930f      	str	r3, [sp, #60]	@ 0x3c
90022c7a:	6850      	ldr	r0, [r2, #4]
90022c7c:	910e      	str	r1, [sp, #56]	@ 0x38
90022c7e:	6812      	ldr	r2, [r2, #0]
90022c80:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90022c84:	fb00 1303 	mla	r3, r0, r3, r1
90022c88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022c8c:	930a      	str	r3, [sp, #40]	@ 0x28
90022c8e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022c90:	681b      	ldr	r3, [r3, #0]
90022c92:	930d      	str	r3, [sp, #52]	@ 0x34
90022c94:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022c96:	685c      	ldr	r4, [r3, #4]
90022c98:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022c9a:	3404      	adds	r4, #4
90022c9c:	43db      	mvns	r3, r3
90022c9e:	b2db      	uxtb	r3, r3
90022ca0:	930b      	str	r3, [sp, #44]	@ 0x2c
90022ca2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022ca4:	2b00      	cmp	r3, #0
90022ca6:	dc03      	bgt.n	90022cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022ca8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90022caa:	2b00      	cmp	r3, #0
90022cac:	f340 8255 	ble.w	9002315a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022cb0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022cb2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022cb6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022cba:	1e48      	subs	r0, r1, #1
90022cbc:	1e55      	subs	r5, r2, #1
90022cbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022cc0:	2b00      	cmp	r3, #0
90022cc2:	f340 80f9 	ble.w	90022eb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90022cc6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90022cc8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022cca:	1436      	asrs	r6, r6, #16
90022ccc:	ea4f 4323 	mov.w	r3, r3, asr #16
90022cd0:	d406      	bmi.n	90022ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022cd2:	4286      	cmp	r6, r0
90022cd4:	da04      	bge.n	90022ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022cd6:	2b00      	cmp	r3, #0
90022cd8:	db02      	blt.n	90022ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022cda:	42ab      	cmp	r3, r5
90022cdc:	f2c0 80ed 	blt.w	90022eba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022ce0:	3601      	adds	r6, #1
90022ce2:	f100 80da 	bmi.w	90022e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022ce6:	42b1      	cmp	r1, r6
90022ce8:	f2c0 80d7 	blt.w	90022e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022cec:	3301      	adds	r3, #1
90022cee:	f100 80d4 	bmi.w	90022e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022cf2:	429a      	cmp	r2, r3
90022cf4:	f2c0 80d1 	blt.w	90022e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022cf8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022cfa:	9311      	str	r3, [sp, #68]	@ 0x44
90022cfc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022cfe:	930c      	str	r3, [sp, #48]	@ 0x30
90022d00:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022d02:	2b00      	cmp	r3, #0
90022d04:	f340 80fa 	ble.w	90022efc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022d08:	9826      	ldr	r0, [sp, #152]	@ 0x98
90022d0a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022d0c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022d0e:	68c6      	ldr	r6, [r0, #12]
90022d10:	141d      	asrs	r5, r3, #16
90022d12:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022d14:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022d18:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022d1a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90022d1c:	1400      	asrs	r0, r0, #16
90022d1e:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022d22:	6892      	ldr	r2, [r2, #8]
90022d24:	f100 813e 	bmi.w	90022fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022d28:	1e57      	subs	r7, r2, #1
90022d2a:	42b8      	cmp	r0, r7
90022d2c:	f280 813a 	bge.w	90022fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022d30:	2d00      	cmp	r5, #0
90022d32:	f2c0 8137 	blt.w	90022fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022d36:	1e77      	subs	r7, r6, #1
90022d38:	42bd      	cmp	r5, r7
90022d3a:	f280 8133 	bge.w	90022fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022d3e:	b212      	sxth	r2, r2
90022d40:	fb05 0002 	mla	r0, r5, r2, r0
90022d44:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90022d46:	f815 a000 	ldrb.w	sl, [r5, r0]
90022d4a:	182e      	adds	r6, r5, r0
90022d4c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90022d50:	eb04 050a 	add.w	r5, r4, sl
90022d54:	2b00      	cmp	r3, #0
90022d56:	f000 8117 	beq.w	90022f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90022d5a:	f896 c001 	ldrb.w	ip, [r6, #1]
90022d5e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90022d62:	44a4      	add	ip, r4
90022d64:	2900      	cmp	r1, #0
90022d66:	f000 8117 	beq.w	90022f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90022d6a:	18b0      	adds	r0, r6, r2
90022d6c:	5cb2      	ldrb	r2, [r6, r2]
90022d6e:	7840      	ldrb	r0, [r0, #1]
90022d70:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022d74:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022d78:	4422      	add	r2, r4
90022d7a:	4420      	add	r0, r4
90022d7c:	b29b      	uxth	r3, r3
90022d7e:	f89c 7002 	ldrb.w	r7, [ip, #2]
90022d82:	b289      	uxth	r1, r1
90022d84:	f895 b002 	ldrb.w	fp, [r5, #2]
90022d88:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90022d8a:	fb03 f901 	mul.w	r9, r3, r1
90022d8e:	011b      	lsls	r3, r3, #4
90022d90:	f8b6 e000 	ldrh.w	lr, [r6]
90022d94:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022d98:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90022d9c:	eba3 0309 	sub.w	r3, r3, r9
90022da0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90022da4:	b289      	uxth	r1, r1
90022da6:	f814 a00a 	ldrb.w	sl, [r4, sl]
90022daa:	b29b      	uxth	r3, r3
90022dac:	eba8 0801 	sub.w	r8, r8, r1
90022db0:	435f      	muls	r7, r3
90022db2:	fa1f f888 	uxth.w	r8, r8
90022db6:	9310      	str	r3, [sp, #64]	@ 0x40
90022db8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022dba:	fb08 770b 	mla	r7, r8, fp, r7
90022dbe:	f892 b002 	ldrb.w	fp, [r2, #2]
90022dc2:	fb01 770b 	mla	r7, r1, fp, r7
90022dc6:	f890 b002 	ldrb.w	fp, [r0, #2]
90022dca:	fb09 770b 	mla	r7, r9, fp, r7
90022dce:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90022dd2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90022dd6:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022dda:	fb1b fb03 	smulbb	fp, fp, r3
90022dde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022de0:	fb07 b706 	mla	r7, r7, r6, fp
90022de4:	f895 b001 	ldrb.w	fp, [r5, #1]
90022de8:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022dec:	f89c c000 	ldrb.w	ip, [ip]
90022df0:	b2bf      	uxth	r7, r7
90022df2:	435d      	muls	r5, r3
90022df4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022df6:	fb08 550b 	mla	r5, r8, fp, r5
90022dfa:	f892 b001 	ldrb.w	fp, [r2, #1]
90022dfe:	fb01 550b 	mla	r5, r1, fp, r5
90022e02:	f890 b001 	ldrb.w	fp, [r0, #1]
90022e06:	fb09 550b 	mla	r5, r9, fp, r5
90022e0a:	ea4f 0bee 	mov.w	fp, lr, asr #3
90022e0e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022e12:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90022e16:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022e1a:	fa5f fe8e 	uxtb.w	lr, lr
90022e1e:	fb1b fb03 	smulbb	fp, fp, r3
90022e22:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022e24:	fb03 f30c 	mul.w	r3, r3, ip
90022e28:	f892 c000 	ldrb.w	ip, [r2]
90022e2c:	fb05 b506 	mla	r5, r5, r6, fp
90022e30:	fb08 330a 	mla	r3, r8, sl, r3
90022e34:	b2ad      	uxth	r5, r5
90022e36:	fb01 330c 	mla	r3, r1, ip, r3
90022e3a:	f890 c000 	ldrb.w	ip, [r0]
90022e3e:	f105 0b01 	add.w	fp, r5, #1
90022e42:	fb09 3c0c 	mla	ip, r9, ip, r3
90022e46:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022e48:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022e4c:	fb1e fe03 	smulbb	lr, lr, r3
90022e50:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022e54:	1c7b      	adds	r3, r7, #1
90022e56:	096d      	lsrs	r5, r5, #5
90022e58:	fb0c e606 	mla	r6, ip, r6, lr
90022e5c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022e60:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022e64:	b2b6      	uxth	r6, r6
90022e66:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90022e6a:	1c77      	adds	r7, r6, #1
90022e6c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022e70:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022e74:	431f      	orrs	r7, r3
90022e76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022e78:	433d      	orrs	r5, r7
90022e7a:	801d      	strh	r5, [r3, #0]
90022e7c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022e7e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022e80:	3302      	adds	r3, #2
90022e82:	930c      	str	r3, [sp, #48]	@ 0x30
90022e84:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022e86:	4413      	add	r3, r2
90022e88:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022e8a:	931f      	str	r3, [sp, #124]	@ 0x7c
90022e8c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022e8e:	4413      	add	r3, r2
90022e90:	9320      	str	r3, [sp, #128]	@ 0x80
90022e92:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022e94:	3b01      	subs	r3, #1
90022e96:	9311      	str	r3, [sp, #68]	@ 0x44
90022e98:	e732      	b.n	90022d00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022e9a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022e9c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90022e9e:	4433      	add	r3, r6
90022ea0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90022ea2:	931f      	str	r3, [sp, #124]	@ 0x7c
90022ea4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022ea6:	4433      	add	r3, r6
90022ea8:	9320      	str	r3, [sp, #128]	@ 0x80
90022eaa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022eac:	3b01      	subs	r3, #1
90022eae:	9309      	str	r3, [sp, #36]	@ 0x24
90022eb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022eb2:	3302      	adds	r3, #2
90022eb4:	930a      	str	r3, [sp, #40]	@ 0x28
90022eb6:	e702      	b.n	90022cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022eb8:	d027      	beq.n	90022f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90022eba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022ebc:	9821      	ldr	r0, [sp, #132]	@ 0x84
90022ebe:	3b01      	subs	r3, #1
90022ec0:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022ec2:	fb00 5003 	mla	r0, r0, r3, r5
90022ec6:	1400      	asrs	r0, r0, #16
90022ec8:	f53f af16 	bmi.w	90022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022ecc:	3901      	subs	r1, #1
90022ece:	4288      	cmp	r0, r1
90022ed0:	f6bf af12 	bge.w	90022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022ed4:	9922      	ldr	r1, [sp, #136]	@ 0x88
90022ed6:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022ed8:	fb01 0303 	mla	r3, r1, r3, r0
90022edc:	141b      	asrs	r3, r3, #16
90022ede:	f53f af0b 	bmi.w	90022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022ee2:	3a01      	subs	r2, #1
90022ee4:	4293      	cmp	r3, r2
90022ee6:	f6bf af07 	bge.w	90022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022eea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022eec:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90022ef0:	9311      	str	r3, [sp, #68]	@ 0x44
90022ef2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022ef4:	930c      	str	r3, [sp, #48]	@ 0x30
90022ef6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022ef8:	2b00      	cmp	r3, #0
90022efa:	dc70      	bgt.n	90022fde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022efc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022efe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022f00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022f04:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022f08:	930a      	str	r3, [sp, #40]	@ 0x28
90022f0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022f0c:	2b00      	cmp	r3, #0
90022f0e:	f340 8124 	ble.w	9002315a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022f12:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022f16:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022f18:	ee30 0a04 	vadd.f32	s0, s0, s8
90022f1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022f20:	eef0 6a62 	vmov.f32	s13, s5
90022f24:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022f28:	ee31 1a05 	vadd.f32	s2, s2, s10
90022f2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022f30:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90022f34:	eef0 6a43 	vmov.f32	s13, s6
90022f38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022f3c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90022f40:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022f44:	ee61 7a27 	vmul.f32	s15, s2, s15
90022f48:	ee77 2a62 	vsub.f32	s5, s14, s5
90022f4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022f50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022f54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022f58:	ee12 2a90 	vmov	r2, s5
90022f5c:	eef0 2a47 	vmov.f32	s5, s14
90022f60:	fb92 f3f3 	sdiv	r3, r2, r3
90022f64:	ee13 2a10 	vmov	r2, s6
90022f68:	9321      	str	r3, [sp, #132]	@ 0x84
90022f6a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022f6c:	eeb0 3a67 	vmov.f32	s6, s15
90022f70:	fb92 f3f3 	sdiv	r3, r2, r3
90022f74:	9322      	str	r3, [sp, #136]	@ 0x88
90022f76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022f78:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90022f7a:	3b01      	subs	r3, #1
90022f7c:	930e      	str	r3, [sp, #56]	@ 0x38
90022f7e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022f80:	bf08      	it	eq
90022f82:	4613      	moveq	r3, r2
90022f84:	9309      	str	r3, [sp, #36]	@ 0x24
90022f86:	e68c      	b.n	90022ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022f88:	b149      	cbz	r1, 90022f9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90022f8a:	5cb2      	ldrb	r2, [r6, r2]
90022f8c:	4628      	mov	r0, r5
90022f8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022f92:	4422      	add	r2, r4
90022f94:	46ac      	mov	ip, r5
90022f96:	e6f1      	b.n	90022d7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022f98:	4628      	mov	r0, r5
90022f9a:	462a      	mov	r2, r5
90022f9c:	e6ee      	b.n	90022d7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022f9e:	4628      	mov	r0, r5
90022fa0:	462a      	mov	r2, r5
90022fa2:	e7f7      	b.n	90022f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90022fa4:	1c47      	adds	r7, r0, #1
90022fa6:	f53f af69 	bmi.w	90022e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022faa:	42ba      	cmp	r2, r7
90022fac:	f6ff af66 	blt.w	90022e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022fb0:	1c6f      	adds	r7, r5, #1
90022fb2:	f53f af63 	bmi.w	90022e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022fb6:	42be      	cmp	r6, r7
90022fb8:	f6ff af60 	blt.w	90022e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022fbc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90022fbe:	b236      	sxth	r6, r6
90022fc0:	b212      	sxth	r2, r2
90022fc2:	9002      	str	r0, [sp, #8]
90022fc4:	9601      	str	r6, [sp, #4]
90022fc6:	9200      	str	r2, [sp, #0]
90022fc8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90022fca:	e9cd 1705 	strd	r1, r7, [sp, #20]
90022fce:	e9cd 5303 	strd	r5, r3, [sp, #12]
90022fd2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90022fd6:	4623      	mov	r3, r4
90022fd8:	f7ff fd59 	bl	90022a8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90022fdc:	e74e      	b.n	90022e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022fde:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022fe0:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022fe2:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022fe6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022fe8:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90022fea:	1400      	asrs	r0, r0, #16
90022fec:	142d      	asrs	r5, r5, #16
90022fee:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022ff0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022ff4:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022ff8:	fb02 5000 	mla	r0, r2, r0, r5
90022ffc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90022ffe:	f815 9000 	ldrb.w	r9, [r5, r0]
90023002:	182e      	adds	r6, r5, r0
90023004:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90023008:	eb04 0509 	add.w	r5, r4, r9
9002300c:	2b00      	cmp	r3, #0
9002300e:	f000 8096 	beq.w	9002313e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90023012:	7877      	ldrb	r7, [r6, #1]
90023014:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023018:	4427      	add	r7, r4
9002301a:	2900      	cmp	r1, #0
9002301c:	f000 8097 	beq.w	9002314e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90023020:	18b0      	adds	r0, r6, r2
90023022:	5cb2      	ldrb	r2, [r6, r2]
90023024:	7840      	ldrb	r0, [r0, #1]
90023026:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002302a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002302e:	4422      	add	r2, r4
90023030:	4420      	add	r0, r4
90023032:	b29b      	uxth	r3, r3
90023034:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90023036:	b289      	uxth	r1, r1
90023038:	f895 b002 	ldrb.w	fp, [r5, #2]
9002303c:	f8b6 c000 	ldrh.w	ip, [r6]
90023040:	fb03 f801 	mul.w	r8, r3, r1
90023044:	011b      	lsls	r3, r3, #4
90023046:	78be      	ldrb	r6, [r7, #2]
90023048:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9002304c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90023050:	eba3 0308 	sub.w	r3, r3, r8
90023054:	f814 9009 	ldrb.w	r9, [r4, r9]
90023058:	b289      	uxth	r1, r1
9002305a:	b29b      	uxth	r3, r3
9002305c:	ebae 0e01 	sub.w	lr, lr, r1
90023060:	435e      	muls	r6, r3
90023062:	fa1f fe8e 	uxth.w	lr, lr
90023066:	9310      	str	r3, [sp, #64]	@ 0x40
90023068:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002306a:	fb0e 660b 	mla	r6, lr, fp, r6
9002306e:	f892 b002 	ldrb.w	fp, [r2, #2]
90023072:	fb01 660b 	mla	r6, r1, fp, r6
90023076:	f890 b002 	ldrb.w	fp, [r0, #2]
9002307a:	fb08 660b 	mla	r6, r8, fp, r6
9002307e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90023082:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90023086:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002308a:	fb1b fb03 	smulbb	fp, fp, r3
9002308e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023090:	fb06 b60a 	mla	r6, r6, sl, fp
90023094:	f895 b001 	ldrb.w	fp, [r5, #1]
90023098:	787d      	ldrb	r5, [r7, #1]
9002309a:	783f      	ldrb	r7, [r7, #0]
9002309c:	b2b6      	uxth	r6, r6
9002309e:	435d      	muls	r5, r3
900230a0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900230a2:	fb0e 550b 	mla	r5, lr, fp, r5
900230a6:	f892 b001 	ldrb.w	fp, [r2, #1]
900230aa:	fb01 550b 	mla	r5, r1, fp, r5
900230ae:	f890 b001 	ldrb.w	fp, [r0, #1]
900230b2:	fb08 550b 	mla	r5, r8, fp, r5
900230b6:	ea4f 0bec 	mov.w	fp, ip, asr #3
900230ba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900230be:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900230c2:	f3c5 2507 	ubfx	r5, r5, #8, #8
900230c6:	fa5f fc8c 	uxtb.w	ip, ip
900230ca:	fb1b fb03 	smulbb	fp, fp, r3
900230ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900230d0:	437b      	muls	r3, r7
900230d2:	7817      	ldrb	r7, [r2, #0]
900230d4:	fb05 b50a 	mla	r5, r5, sl, fp
900230d8:	fb0e 3309 	mla	r3, lr, r9, r3
900230dc:	b2ad      	uxth	r5, r5
900230de:	fb01 3307 	mla	r3, r1, r7, r3
900230e2:	7807      	ldrb	r7, [r0, #0]
900230e4:	f105 0b01 	add.w	fp, r5, #1
900230e8:	fb08 3707 	mla	r7, r8, r7, r3
900230ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900230ee:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900230f2:	fb1c fc03 	smulbb	ip, ip, r3
900230f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
900230fa:	1c73      	adds	r3, r6, #1
900230fc:	096d      	lsrs	r5, r5, #5
900230fe:	fb07 c70a 	mla	r7, r7, sl, ip
90023102:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023106:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002310a:	b2bf      	uxth	r7, r7
9002310c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002310e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90023112:	1c7a      	adds	r2, r7, #1
90023114:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90023118:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002311c:	4316      	orrs	r6, r2
9002311e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023120:	432e      	orrs	r6, r5
90023122:	f823 6b02 	strh.w	r6, [r3], #2
90023126:	930c      	str	r3, [sp, #48]	@ 0x30
90023128:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002312a:	4413      	add	r3, r2
9002312c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002312e:	931f      	str	r3, [sp, #124]	@ 0x7c
90023130:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023132:	4413      	add	r3, r2
90023134:	9320      	str	r3, [sp, #128]	@ 0x80
90023136:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023138:	3b01      	subs	r3, #1
9002313a:	9311      	str	r3, [sp, #68]	@ 0x44
9002313c:	e6db      	b.n	90022ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9002313e:	b149      	cbz	r1, 90023154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90023140:	5cb2      	ldrb	r2, [r6, r2]
90023142:	4628      	mov	r0, r5
90023144:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023148:	4422      	add	r2, r4
9002314a:	462f      	mov	r7, r5
9002314c:	e771      	b.n	90023032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9002314e:	4628      	mov	r0, r5
90023150:	462a      	mov	r2, r5
90023152:	e76e      	b.n	90023032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90023154:	4628      	mov	r0, r5
90023156:	462a      	mov	r2, r5
90023158:	e7f7      	b.n	9002314a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002315a:	b015      	add	sp, #84	@ 0x54
9002315c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90023160:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023164:	880f      	ldrh	r7, [r1, #0]
90023166:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9002316a:	023c      	lsls	r4, r7, #8
9002316c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90023170:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90023174:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90023178:	017c      	lsls	r4, r7, #5
9002317a:	00ff      	lsls	r7, r7, #3
9002317c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90023180:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90023184:	b2ff      	uxtb	r7, r7
90023186:	ea4b 0404 	orr.w	r4, fp, r4
9002318a:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
9002318e:	4327      	orrs	r7, r4
90023190:	fb05 ca0e 	mla	sl, r5, lr, ip
90023194:	2d00      	cmp	r5, #0
90023196:	9701      	str	r7, [sp, #4]
90023198:	eb02 080a 	add.w	r8, r2, sl
9002319c:	db7e      	blt.n	9002329c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9002319e:	45a9      	cmp	r9, r5
900231a0:	dd7c      	ble.n	9002329c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900231a2:	f1bc 0f00 	cmp.w	ip, #0
900231a6:	db77      	blt.n	90023298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900231a8:	45e6      	cmp	lr, ip
900231aa:	dd75      	ble.n	90023298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900231ac:	f812 700a 	ldrb.w	r7, [r2, sl]
900231b0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900231b4:	441f      	add	r7, r3
900231b6:	f11c 0201 	adds.w	r2, ip, #1
900231ba:	d472      	bmi.n	900232a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900231bc:	4596      	cmp	lr, r2
900231be:	dd70      	ble.n	900232a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900231c0:	2800      	cmp	r0, #0
900231c2:	d06e      	beq.n	900232a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900231c4:	f898 4001 	ldrb.w	r4, [r8, #1]
900231c8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900231cc:	441c      	add	r4, r3
900231ce:	3501      	adds	r5, #1
900231d0:	d46b      	bmi.n	900232aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900231d2:	45a9      	cmp	r9, r5
900231d4:	dd69      	ble.n	900232aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900231d6:	2e00      	cmp	r6, #0
900231d8:	d067      	beq.n	900232aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900231da:	f1bc 0f00 	cmp.w	ip, #0
900231de:	db62      	blt.n	900232a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900231e0:	45e6      	cmp	lr, ip
900231e2:	dd60      	ble.n	900232a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900231e4:	f818 500e 	ldrb.w	r5, [r8, lr]
900231e8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900231ec:	441d      	add	r5, r3
900231ee:	f11c 0201 	adds.w	r2, ip, #1
900231f2:	d45d      	bmi.n	900232b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900231f4:	4596      	cmp	lr, r2
900231f6:	dd5b      	ble.n	900232b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900231f8:	2800      	cmp	r0, #0
900231fa:	d059      	beq.n	900232b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900231fc:	44c6      	add	lr, r8
900231fe:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023202:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023206:	4413      	add	r3, r2
90023208:	b280      	uxth	r0, r0
9002320a:	f897 e002 	ldrb.w	lr, [r7, #2]
9002320e:	b2b2      	uxth	r2, r6
90023210:	f897 9000 	ldrb.w	r9, [r7]
90023214:	787f      	ldrb	r7, [r7, #1]
90023216:	fb00 f602 	mul.w	r6, r0, r2
9002321a:	0100      	lsls	r0, r0, #4
9002321c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90023220:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90023224:	1b80      	subs	r0, r0, r6
90023226:	fa1f fc82 	uxth.w	ip, r2
9002322a:	b282      	uxth	r2, r0
9002322c:	78a0      	ldrb	r0, [r4, #2]
9002322e:	eba8 080c 	sub.w	r8, r8, ip
90023232:	4350      	muls	r0, r2
90023234:	fa1f f888 	uxth.w	r8, r8
90023238:	fb08 0e0e 	mla	lr, r8, lr, r0
9002323c:	78a8      	ldrb	r0, [r5, #2]
9002323e:	fb0c e000 	mla	r0, ip, r0, lr
90023242:	f893 e002 	ldrb.w	lr, [r3, #2]
90023246:	fb06 0e0e 	mla	lr, r6, lr, r0
9002324a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
9002324e:	f894 e000 	ldrb.w	lr, [r4]
90023252:	fb02 fe0e 	mul.w	lr, r2, lr
90023256:	fb08 e909 	mla	r9, r8, r9, lr
9002325a:	f895 e000 	ldrb.w	lr, [r5]
9002325e:	fb0c 990e 	mla	r9, ip, lr, r9
90023262:	f893 e000 	ldrb.w	lr, [r3]
90023266:	785b      	ldrb	r3, [r3, #1]
90023268:	fb06 9e0e 	mla	lr, r6, lr, r9
9002326c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90023270:	ea4e 0e00 	orr.w	lr, lr, r0
90023274:	7860      	ldrb	r0, [r4, #1]
90023276:	4350      	muls	r0, r2
90023278:	786a      	ldrb	r2, [r5, #1]
9002327a:	fb08 0007 	mla	r0, r8, r7, r0
9002327e:	fb0c 0202 	mla	r2, ip, r2, r0
90023282:	fb06 2303 	mla	r3, r6, r3, r2
90023286:	095b      	lsrs	r3, r3, #5
90023288:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002328c:	ea4e 0303 	orr.w	r3, lr, r3
90023290:	800b      	strh	r3, [r1, #0]
90023292:	b003      	add	sp, #12
90023294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023298:	af01      	add	r7, sp, #4
9002329a:	e78c      	b.n	900231b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
9002329c:	ac01      	add	r4, sp, #4
9002329e:	4627      	mov	r7, r4
900232a0:	e795      	b.n	900231ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900232a2:	ac01      	add	r4, sp, #4
900232a4:	e793      	b.n	900231ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900232a6:	ad01      	add	r5, sp, #4
900232a8:	e7a1      	b.n	900231ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
900232aa:	ab01      	add	r3, sp, #4
900232ac:	461d      	mov	r5, r3
900232ae:	e7ab      	b.n	90023208 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
900232b0:	ab01      	add	r3, sp, #4
900232b2:	e7a9      	b.n	90023208 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

900232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900232b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900232b8:	b08f      	sub	sp, #60	@ 0x3c
900232ba:	920c      	str	r2, [sp, #48]	@ 0x30
900232bc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900232be:	900d      	str	r0, [sp, #52]	@ 0x34
900232c0:	910a      	str	r1, [sp, #40]	@ 0x28
900232c2:	6850      	ldr	r0, [r2, #4]
900232c4:	9306      	str	r3, [sp, #24]
900232c6:	6812      	ldr	r2, [r2, #0]
900232c8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900232cc:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900232d0:	fb00 1303 	mla	r3, r0, r3, r1
900232d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900232d8:	9307      	str	r3, [sp, #28]
900232da:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900232dc:	681b      	ldr	r3, [r3, #0]
900232de:	9308      	str	r3, [sp, #32]
900232e0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900232e2:	685c      	ldr	r4, [r3, #4]
900232e4:	3404      	adds	r4, #4
900232e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900232e8:	2b00      	cmp	r3, #0
900232ea:	dc03      	bgt.n	900232f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900232ec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900232ee:	2b00      	cmp	r3, #0
900232f0:	f340 81d5 	ble.w	9002369e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900232f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900232f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900232fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900232fe:	1e48      	subs	r0, r1, #1
90023300:	1e56      	subs	r6, r2, #1
90023302:	9b06      	ldr	r3, [sp, #24]
90023304:	2b00      	cmp	r3, #0
90023306:	f340 80b6 	ble.w	90023476 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002330a:	ea5f 472b 	movs.w	r7, fp, asr #16
9002330e:	ea4f 4325 	mov.w	r3, r5, asr #16
90023312:	d406      	bmi.n	90023322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023314:	4287      	cmp	r7, r0
90023316:	da04      	bge.n	90023322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023318:	2b00      	cmp	r3, #0
9002331a:	db02      	blt.n	90023322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002331c:	42b3      	cmp	r3, r6
9002331e:	f2c0 80ab 	blt.w	90023478 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90023322:	3701      	adds	r7, #1
90023324:	f100 809c 	bmi.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023328:	42b9      	cmp	r1, r7
9002332a:	f2c0 8099 	blt.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002332e:	3301      	adds	r3, #1
90023330:	f100 8096 	bmi.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023334:	429a      	cmp	r2, r3
90023336:	f2c0 8093 	blt.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002333a:	9b06      	ldr	r3, [sp, #24]
9002333c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002333e:	9b07      	ldr	r3, [sp, #28]
90023340:	9309      	str	r3, [sp, #36]	@ 0x24
90023342:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023344:	2b00      	cmp	r3, #0
90023346:	f340 80b4 	ble.w	900234b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002334a:	9820      	ldr	r0, [sp, #128]	@ 0x80
9002334c:	142e      	asrs	r6, r5, #16
9002334e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90023350:	f3cb 3303 	ubfx	r3, fp, #12, #4
90023354:	68c7      	ldr	r7, [r0, #12]
90023356:	ea5f 402b 	movs.w	r0, fp, asr #16
9002335a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002335e:	6892      	ldr	r2, [r2, #8]
90023360:	f100 80fb 	bmi.w	9002355a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023364:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
90023368:	4560      	cmp	r0, ip
9002336a:	f280 80f6 	bge.w	9002355a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002336e:	2e00      	cmp	r6, #0
90023370:	f2c0 80f3 	blt.w	9002355a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023374:	f107 3cff 	add.w	ip, r7, #4294967295	@ 0xffffffff
90023378:	4566      	cmp	r6, ip
9002337a:	f280 80ee 	bge.w	9002355a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002337e:	b212      	sxth	r2, r2
90023380:	fb06 0002 	mla	r0, r6, r2, r0
90023384:	9e08      	ldr	r6, [sp, #32]
90023386:	1837      	adds	r7, r6, r0
90023388:	5c30      	ldrb	r0, [r6, r0]
9002338a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9002338e:	eb04 0c08 	add.w	ip, r4, r8
90023392:	2b00      	cmp	r3, #0
90023394:	f000 80d3 	beq.w	9002353e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90023398:	787e      	ldrb	r6, [r7, #1]
9002339a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002339e:	4426      	add	r6, r4
900233a0:	2900      	cmp	r1, #0
900233a2:	f000 80d4 	beq.w	9002354e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900233a6:	18b8      	adds	r0, r7, r2
900233a8:	5cba      	ldrb	r2, [r7, r2]
900233aa:	7840      	ldrb	r0, [r0, #1]
900233ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900233b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900233b4:	4422      	add	r2, r4
900233b6:	4420      	add	r0, r4
900233b8:	b29b      	uxth	r3, r3
900233ba:	78b7      	ldrb	r7, [r6, #2]
900233bc:	b289      	uxth	r1, r1
900233be:	f89c a002 	ldrb.w	sl, [ip, #2]
900233c2:	f89c c001 	ldrb.w	ip, [ip, #1]
900233c6:	fb03 f901 	mul.w	r9, r3, r1
900233ca:	011b      	lsls	r3, r3, #4
900233cc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900233d0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900233d4:	eba3 0309 	sub.w	r3, r3, r9
900233d8:	b289      	uxth	r1, r1
900233da:	b29b      	uxth	r3, r3
900233dc:	ebae 0e01 	sub.w	lr, lr, r1
900233e0:	435f      	muls	r7, r3
900233e2:	fa1f fe8e 	uxth.w	lr, lr
900233e6:	fb0e 770a 	mla	r7, lr, sl, r7
900233ea:	f892 a002 	ldrb.w	sl, [r2, #2]
900233ee:	fb01 770a 	mla	r7, r1, sl, r7
900233f2:	f890 a002 	ldrb.w	sl, [r0, #2]
900233f6:	fb09 7a0a 	mla	sl, r9, sl, r7
900233fa:	f814 7008 	ldrb.w	r7, [r4, r8]
900233fe:	f896 8000 	ldrb.w	r8, [r6]
90023402:	7876      	ldrb	r6, [r6, #1]
90023404:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90023408:	fb03 f808 	mul.w	r8, r3, r8
9002340c:	4373      	muls	r3, r6
9002340e:	fb0e 8807 	mla	r8, lr, r7, r8
90023412:	7817      	ldrb	r7, [r2, #0]
90023414:	fb0e 330c 	mla	r3, lr, ip, r3
90023418:	fb01 8807 	mla	r8, r1, r7, r8
9002341c:	7807      	ldrb	r7, [r0, #0]
9002341e:	fb09 8707 	mla	r7, r9, r7, r8
90023422:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023426:	ea47 070a 	orr.w	r7, r7, sl
9002342a:	f892 a001 	ldrb.w	sl, [r2, #1]
9002342e:	fb01 310a 	mla	r1, r1, sl, r3
90023432:	f890 a001 	ldrb.w	sl, [r0, #1]
90023436:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023438:	fb09 1a0a 	mla	sl, r9, sl, r1
9002343c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90023440:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90023444:	ea47 070a 	orr.w	r7, r7, sl
90023448:	801f      	strh	r7, [r3, #0]
9002344a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002344c:	3302      	adds	r3, #2
9002344e:	9309      	str	r3, [sp, #36]	@ 0x24
90023450:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023452:	449b      	add	fp, r3
90023454:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023456:	441d      	add	r5, r3
90023458:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002345a:	3b01      	subs	r3, #1
9002345c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002345e:	e770      	b.n	90023342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023460:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023462:	449b      	add	fp, r3
90023464:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023466:	441d      	add	r5, r3
90023468:	9b06      	ldr	r3, [sp, #24]
9002346a:	3b01      	subs	r3, #1
9002346c:	9306      	str	r3, [sp, #24]
9002346e:	9b07      	ldr	r3, [sp, #28]
90023470:	3302      	adds	r3, #2
90023472:	9307      	str	r3, [sp, #28]
90023474:	e745      	b.n	90023302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90023476:	d023      	beq.n	900234c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90023478:	9b06      	ldr	r3, [sp, #24]
9002347a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9002347c:	3b01      	subs	r3, #1
9002347e:	fb00 b003 	mla	r0, r0, r3, fp
90023482:	1400      	asrs	r0, r0, #16
90023484:	f53f af59 	bmi.w	9002333a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023488:	3901      	subs	r1, #1
9002348a:	4288      	cmp	r0, r1
9002348c:	f6bf af55 	bge.w	9002333a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023490:	991c      	ldr	r1, [sp, #112]	@ 0x70
90023492:	fb01 5303 	mla	r3, r1, r3, r5
90023496:	141b      	asrs	r3, r3, #16
90023498:	f53f af4f 	bmi.w	9002333a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002349c:	3a01      	subs	r2, #1
9002349e:	4293      	cmp	r3, r2
900234a0:	f6bf af4b 	bge.w	9002333a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900234a4:	9b06      	ldr	r3, [sp, #24]
900234a6:	9309      	str	r3, [sp, #36]	@ 0x24
900234a8:	9b07      	ldr	r3, [sp, #28]
900234aa:	930b      	str	r3, [sp, #44]	@ 0x2c
900234ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900234ae:	2b00      	cmp	r3, #0
900234b0:	dc70      	bgt.n	90023594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900234b2:	9b06      	ldr	r3, [sp, #24]
900234b4:	9a07      	ldr	r2, [sp, #28]
900234b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900234ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900234be:	9307      	str	r3, [sp, #28]
900234c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900234c2:	2b00      	cmp	r3, #0
900234c4:	f340 80eb 	ble.w	9002369e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900234c8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900234cc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900234ce:	ee30 0a04 	vadd.f32	s0, s0, s8
900234d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900234d6:	eef0 6a62 	vmov.f32	s13, s5
900234da:	eec7 7a00 	vdiv.f32	s15, s14, s0
900234de:	ee31 1a05 	vadd.f32	s2, s2, s10
900234e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900234e6:	ee16 ba90 	vmov	fp, s13
900234ea:	eef0 6a43 	vmov.f32	s13, s6
900234ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900234f2:	ee16 5a90 	vmov	r5, s13
900234f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900234fa:	ee61 7a27 	vmul.f32	s15, s2, s15
900234fe:	ee77 2a62 	vsub.f32	s5, s14, s5
90023502:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023506:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002350a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002350e:	ee12 2a90 	vmov	r2, s5
90023512:	eef0 2a47 	vmov.f32	s5, s14
90023516:	fb92 f3f3 	sdiv	r3, r2, r3
9002351a:	ee13 2a10 	vmov	r2, s6
9002351e:	931b      	str	r3, [sp, #108]	@ 0x6c
90023520:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023522:	eeb0 3a67 	vmov.f32	s6, s15
90023526:	fb92 f3f3 	sdiv	r3, r2, r3
9002352a:	931c      	str	r3, [sp, #112]	@ 0x70
9002352c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002352e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90023530:	3b01      	subs	r3, #1
90023532:	930a      	str	r3, [sp, #40]	@ 0x28
90023534:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023536:	bf08      	it	eq
90023538:	4613      	moveq	r3, r2
9002353a:	9306      	str	r3, [sp, #24]
9002353c:	e6d3      	b.n	900232e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9002353e:	b149      	cbz	r1, 90023554 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90023540:	5cba      	ldrb	r2, [r7, r2]
90023542:	4660      	mov	r0, ip
90023544:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023548:	4422      	add	r2, r4
9002354a:	4666      	mov	r6, ip
9002354c:	e734      	b.n	900233b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002354e:	4660      	mov	r0, ip
90023550:	4662      	mov	r2, ip
90023552:	e731      	b.n	900233b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90023554:	4660      	mov	r0, ip
90023556:	4662      	mov	r2, ip
90023558:	e7f7      	b.n	9002354a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002355a:	f110 0c01 	adds.w	ip, r0, #1
9002355e:	f53f af74 	bmi.w	9002344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023562:	4562      	cmp	r2, ip
90023564:	f6ff af71 	blt.w	9002344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023568:	f116 0c01 	adds.w	ip, r6, #1
9002356c:	f53f af6d 	bmi.w	9002344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023570:	4567      	cmp	r7, ip
90023572:	f6ff af6a 	blt.w	9002344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023576:	b23f      	sxth	r7, r7
90023578:	b212      	sxth	r2, r2
9002357a:	9701      	str	r7, [sp, #4]
9002357c:	9200      	str	r2, [sp, #0]
9002357e:	e9cd 3104 	strd	r3, r1, [sp, #16]
90023582:	e9cd 0602 	strd	r0, r6, [sp, #8]
90023586:	4623      	mov	r3, r4
90023588:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002358a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9002358e:	f7ff fde7 	bl	90023160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90023592:	e75a      	b.n	9002344a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023594:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90023596:	ea4f 462b 	mov.w	r6, fp, asr #16
9002359a:	1428      	asrs	r0, r5, #16
9002359c:	f3cb 3303 	ubfx	r3, fp, #12, #4
900235a0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900235a4:	f3c5 3103 	ubfx	r1, r5, #12, #4
900235a8:	fb02 6000 	mla	r0, r2, r0, r6
900235ac:	9e08      	ldr	r6, [sp, #32]
900235ae:	f816 8000 	ldrb.w	r8, [r6, r0]
900235b2:	1837      	adds	r7, r6, r0
900235b4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900235b8:	eb04 0c08 	add.w	ip, r4, r8
900235bc:	2b00      	cmp	r3, #0
900235be:	d060      	beq.n	90023682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900235c0:	787e      	ldrb	r6, [r7, #1]
900235c2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900235c6:	4426      	add	r6, r4
900235c8:	2900      	cmp	r1, #0
900235ca:	d062      	beq.n	90023692 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900235cc:	18b8      	adds	r0, r7, r2
900235ce:	5cba      	ldrb	r2, [r7, r2]
900235d0:	7840      	ldrb	r0, [r0, #1]
900235d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900235d6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900235da:	4422      	add	r2, r4
900235dc:	4420      	add	r0, r4
900235de:	b29b      	uxth	r3, r3
900235e0:	78b7      	ldrb	r7, [r6, #2]
900235e2:	b289      	uxth	r1, r1
900235e4:	f89c a002 	ldrb.w	sl, [ip, #2]
900235e8:	f89c c001 	ldrb.w	ip, [ip, #1]
900235ec:	fb03 f901 	mul.w	r9, r3, r1
900235f0:	011b      	lsls	r3, r3, #4
900235f2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900235f6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900235fa:	eba3 0309 	sub.w	r3, r3, r9
900235fe:	b289      	uxth	r1, r1
90023600:	b29b      	uxth	r3, r3
90023602:	ebae 0e01 	sub.w	lr, lr, r1
90023606:	435f      	muls	r7, r3
90023608:	fa1f fe8e 	uxth.w	lr, lr
9002360c:	fb0e 770a 	mla	r7, lr, sl, r7
90023610:	f892 a002 	ldrb.w	sl, [r2, #2]
90023614:	fb01 770a 	mla	r7, r1, sl, r7
90023618:	f890 a002 	ldrb.w	sl, [r0, #2]
9002361c:	fb09 7a0a 	mla	sl, r9, sl, r7
90023620:	f814 7008 	ldrb.w	r7, [r4, r8]
90023624:	f896 8000 	ldrb.w	r8, [r6]
90023628:	7876      	ldrb	r6, [r6, #1]
9002362a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002362e:	fb03 f808 	mul.w	r8, r3, r8
90023632:	4373      	muls	r3, r6
90023634:	7856      	ldrb	r6, [r2, #1]
90023636:	fb0e 8807 	mla	r8, lr, r7, r8
9002363a:	7817      	ldrb	r7, [r2, #0]
9002363c:	fb0e 330c 	mla	r3, lr, ip, r3
90023640:	fb01 8807 	mla	r8, r1, r7, r8
90023644:	7807      	ldrb	r7, [r0, #0]
90023646:	fb01 3306 	mla	r3, r1, r6, r3
9002364a:	fb09 8707 	mla	r7, r9, r7, r8
9002364e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023652:	ea47 070a 	orr.w	r7, r7, sl
90023656:	f890 a001 	ldrb.w	sl, [r0, #1]
9002365a:	fb09 3a0a 	mla	sl, r9, sl, r3
9002365e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023660:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90023664:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90023668:	ea47 070a 	orr.w	r7, r7, sl
9002366c:	f823 7b02 	strh.w	r7, [r3], #2
90023670:	930b      	str	r3, [sp, #44]	@ 0x2c
90023672:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023674:	449b      	add	fp, r3
90023676:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023678:	441d      	add	r5, r3
9002367a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002367c:	3b01      	subs	r3, #1
9002367e:	9309      	str	r3, [sp, #36]	@ 0x24
90023680:	e714      	b.n	900234ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90023682:	b149      	cbz	r1, 90023698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90023684:	5cba      	ldrb	r2, [r7, r2]
90023686:	4660      	mov	r0, ip
90023688:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002368c:	4422      	add	r2, r4
9002368e:	4666      	mov	r6, ip
90023690:	e7a5      	b.n	900235de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90023692:	4660      	mov	r0, ip
90023694:	4662      	mov	r2, ip
90023696:	e7a2      	b.n	900235de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90023698:	4660      	mov	r0, ip
9002369a:	4662      	mov	r2, ip
9002369c:	e7f7      	b.n	9002368e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9002369e:	b00f      	add	sp, #60	@ 0x3c
900236a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900236a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900236a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900236a8:	b085      	sub	sp, #20
900236aa:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
900236ae:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
900236b2:	9102      	str	r1, [sp, #8]
900236b4:	2c00      	cmp	r4, #0
900236b6:	fb04 710c 	mla	r1, r4, ip, r7
900236ba:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900236be:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900236c2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900236c6:	eb02 0e01 	add.w	lr, r2, r1
900236ca:	f2c0 8122 	blt.w	90023912 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900236ce:	45a0      	cmp	r8, r4
900236d0:	f340 811f 	ble.w	90023912 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900236d4:	2f00      	cmp	r7, #0
900236d6:	f2c0 811a 	blt.w	9002390e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900236da:	45bc      	cmp	ip, r7
900236dc:	f340 8117 	ble.w	9002390e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900236e0:	5c52      	ldrb	r2, [r2, r1]
900236e2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900236e6:	1c7a      	adds	r2, r7, #1
900236e8:	f100 8116 	bmi.w	90023918 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900236ec:	4594      	cmp	ip, r2
900236ee:	f340 8113 	ble.w	90023918 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900236f2:	2e00      	cmp	r6, #0
900236f4:	f000 8112 	beq.w	9002391c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
900236f8:	f89e 2001 	ldrb.w	r2, [lr, #1]
900236fc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023700:	3401      	adds	r4, #1
90023702:	f100 810f 	bmi.w	90023924 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90023706:	45a0      	cmp	r8, r4
90023708:	f340 810c 	ble.w	90023924 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002370c:	2800      	cmp	r0, #0
9002370e:	f000 810c 	beq.w	9002392a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90023712:	2f00      	cmp	r7, #0
90023714:	f2c0 8104 	blt.w	90023920 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90023718:	45bc      	cmp	ip, r7
9002371a:	f340 8101 	ble.w	90023920 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002371e:	f81e 200c 	ldrb.w	r2, [lr, ip]
90023722:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90023726:	3701      	adds	r7, #1
90023728:	f100 8102 	bmi.w	90023930 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002372c:	45bc      	cmp	ip, r7
9002372e:	f340 80ff 	ble.w	90023930 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90023732:	2e00      	cmp	r6, #0
90023734:	f000 80fe 	beq.w	90023934 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90023738:	44f4      	add	ip, lr
9002373a:	f89c 2001 	ldrb.w	r2, [ip, #1]
9002373e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90023742:	b2b6      	uxth	r6, r6
90023744:	b280      	uxth	r0, r0
90023746:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002374a:	fb00 fe06 	mul.w	lr, r0, r6
9002374e:	0136      	lsls	r6, r6, #4
90023750:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90023754:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90023758:	eba6 070e 	sub.w	r7, r6, lr
9002375c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90023760:	ea4f 6914 	mov.w	r9, r4, lsr #24
90023764:	b280      	uxth	r0, r0
90023766:	b2bf      	uxth	r7, r7
90023768:	1a1b      	subs	r3, r3, r0
9002376a:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002376e:	fb0a f607 	mul.w	r6, sl, r7
90023772:	b29b      	uxth	r3, r3
90023774:	fb0b 6603 	mla	r6, fp, r3, r6
90023778:	fb00 6609 	mla	r6, r0, r9, r6
9002377c:	fb0e 6608 	mla	r6, lr, r8, r6
90023780:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023784:	9600      	str	r6, [sp, #0]
90023786:	2e00      	cmp	r6, #0
90023788:	f000 80be 	beq.w	90023908 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9002378c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90023790:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90023794:	9e02      	ldr	r6, [sp, #8]
90023796:	fb0b fc0c 	mul.w	ip, fp, ip
9002379a:	fb0b f505 	mul.w	r5, fp, r5
9002379e:	8836      	ldrh	r6, [r6, #0]
900237a0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900237a4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900237a8:	9501      	str	r5, [sp, #4]
900237aa:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900237ae:	44dc      	add	ip, fp
900237b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900237b4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900237b8:	9503      	str	r5, [sp, #12]
900237ba:	9d01      	ldr	r5, [sp, #4]
900237bc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900237c0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900237c4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900237c8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900237cc:	fb0a fc0c 	mul.w	ip, sl, ip
900237d0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900237d4:	fb0a fa01 	mul.w	sl, sl, r1
900237d8:	ea4f 251c 	mov.w	r5, ip, lsr #8
900237dc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900237e0:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900237e4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900237e8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900237ec:	4465      	add	r5, ip
900237ee:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900237f2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900237f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900237fa:	fb09 fc0c 	mul.w	ip, r9, ip
900237fe:	0a2d      	lsrs	r5, r5, #8
90023800:	fb09 f904 	mul.w	r9, r9, r4
90023804:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023808:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002380c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023810:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90023814:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023818:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002381c:	437d      	muls	r5, r7
9002381e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023822:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90023826:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002382a:	4461      	add	r1, ip
9002382c:	fb08 f404 	mul.w	r4, r8, r4
90023830:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023834:	fb08 f802 	mul.w	r8, r8, r2
90023838:	0a09      	lsrs	r1, r1, #8
9002383a:	0a22      	lsrs	r2, r4, #8
9002383c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90023840:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90023844:	fb07 f70a 	mul.w	r7, r7, sl
90023848:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002384c:	4414      	add	r4, r2
9002384e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90023852:	0a24      	lsrs	r4, r4, #8
90023854:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023858:	9a03      	ldr	r2, [sp, #12]
9002385a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002385e:	fb02 5503 	mla	r5, r2, r3, r5
90023862:	ea4f 2818 	mov.w	r8, r8, lsr #8
90023866:	9a00      	ldr	r2, [sp, #0]
90023868:	fb04 540e 	mla	r4, r4, lr, r5
9002386c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90023870:	1235      	asrs	r5, r6, #8
90023872:	fb01 4100 	mla	r1, r1, r0, r4
90023876:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002387a:	0a09      	lsrs	r1, r1, #8
9002387c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90023880:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90023884:	fb03 7101 	mla	r1, r3, r1, r7
90023888:	fb0e 1e08 	mla	lr, lr, r8, r1
9002388c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90023890:	fb00 e101 	mla	r1, r0, r1, lr
90023894:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90023898:	b287      	uxth	r7, r0
9002389a:	0a09      	lsrs	r1, r1, #8
9002389c:	437a      	muls	r2, r7
9002389e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900238a2:	1c53      	adds	r3, r2, #1
900238a4:	4321      	orrs	r1, r4
900238a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900238aa:	0c0a      	lsrs	r2, r1, #16
900238ac:	f3c1 2407 	ubfx	r4, r1, #8, #8
900238b0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900238b4:	b2c8      	uxtb	r0, r1
900238b6:	fb12 f207 	smulbb	r2, r2, r7
900238ba:	fb14 f407 	smulbb	r4, r4, r7
900238be:	b2db      	uxtb	r3, r3
900238c0:	fb10 f007 	smulbb	r0, r0, r7
900238c4:	fb05 2503 	mla	r5, r5, r3, r2
900238c8:	10f2      	asrs	r2, r6, #3
900238ca:	00f6      	lsls	r6, r6, #3
900238cc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900238d0:	b2ad      	uxth	r5, r5
900238d2:	b2f6      	uxtb	r6, r6
900238d4:	fb02 4203 	mla	r2, r2, r3, r4
900238d8:	fb06 0303 	mla	r3, r6, r3, r0
900238dc:	b294      	uxth	r4, r2
900238de:	b299      	uxth	r1, r3
900238e0:	1c6b      	adds	r3, r5, #1
900238e2:	1c62      	adds	r2, r4, #1
900238e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900238e8:	1c4b      	adds	r3, r1, #1
900238ea:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900238ee:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900238f2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900238f6:	0952      	lsrs	r2, r2, #5
900238f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900238fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023900:	432b      	orrs	r3, r5
90023902:	4313      	orrs	r3, r2
90023904:	9a02      	ldr	r2, [sp, #8]
90023906:	8013      	strh	r3, [r2, #0]
90023908:	b005      	add	sp, #20
9002390a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002390e:	2500      	movs	r5, #0
90023910:	e6e9      	b.n	900236e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90023912:	2100      	movs	r1, #0
90023914:	460d      	mov	r5, r1
90023916:	e6f3      	b.n	90023700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023918:	2100      	movs	r1, #0
9002391a:	e6f1      	b.n	90023700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002391c:	4631      	mov	r1, r6
9002391e:	e6ef      	b.n	90023700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023920:	2400      	movs	r4, #0
90023922:	e700      	b.n	90023726 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90023924:	2200      	movs	r2, #0
90023926:	4614      	mov	r4, r2
90023928:	e70b      	b.n	90023742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002392a:	4602      	mov	r2, r0
9002392c:	4604      	mov	r4, r0
9002392e:	e708      	b.n	90023742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023930:	2200      	movs	r2, #0
90023932:	e706      	b.n	90023742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023934:	4632      	mov	r2, r6
90023936:	e704      	b.n	90023742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90023938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002393c:	b09f      	sub	sp, #124	@ 0x7c
9002393e:	921b      	str	r2, [sp, #108]	@ 0x6c
90023940:	9309      	str	r3, [sp, #36]	@ 0x24
90023942:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90023944:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90023948:	901d      	str	r0, [sp, #116]	@ 0x74
9002394a:	931c      	str	r3, [sp, #112]	@ 0x70
9002394c:	6850      	ldr	r0, [r2, #4]
9002394e:	9119      	str	r1, [sp, #100]	@ 0x64
90023950:	6812      	ldr	r2, [r2, #0]
90023952:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90023954:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90023958:	fb00 1303 	mla	r3, r0, r3, r1
9002395c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023960:	930c      	str	r3, [sp, #48]	@ 0x30
90023962:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023964:	681b      	ldr	r3, [r3, #0]
90023966:	9312      	str	r3, [sp, #72]	@ 0x48
90023968:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002396a:	685e      	ldr	r6, [r3, #4]
9002396c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90023970:	3604      	adds	r6, #4
90023972:	930d      	str	r3, [sp, #52]	@ 0x34
90023974:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023976:	2b00      	cmp	r3, #0
90023978:	dc03      	bgt.n	90023982 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002397a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002397c:	2b00      	cmp	r3, #0
9002397e:	f340 8387 	ble.w	90024090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023982:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023984:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023988:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002398c:	1e48      	subs	r0, r1, #1
9002398e:	1e57      	subs	r7, r2, #1
90023990:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023992:	2b00      	cmp	r3, #0
90023994:	f340 8194 	ble.w	90023cc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90023998:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002399a:	142b      	asrs	r3, r5, #16
9002399c:	ea5f 4c24 	movs.w	ip, r4, asr #16
900239a0:	d406      	bmi.n	900239b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900239a2:	4584      	cmp	ip, r0
900239a4:	da04      	bge.n	900239b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900239a6:	2b00      	cmp	r3, #0
900239a8:	db02      	blt.n	900239b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900239aa:	42bb      	cmp	r3, r7
900239ac:	f2c0 8189 	blt.w	90023cc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900239b0:	f11c 0c01 	adds.w	ip, ip, #1
900239b4:	f100 8177 	bmi.w	90023ca6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900239b8:	4561      	cmp	r1, ip
900239ba:	f2c0 8174 	blt.w	90023ca6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900239be:	3301      	adds	r3, #1
900239c0:	f100 8171 	bmi.w	90023ca6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900239c4:	429a      	cmp	r2, r3
900239c6:	f2c0 816e 	blt.w	90023ca6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900239ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900239cc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900239ce:	931a      	str	r3, [sp, #104]	@ 0x68
900239d0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900239d2:	2b00      	cmp	r3, #0
900239d4:	f340 8193 	ble.w	90023cfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900239d8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900239da:	ea4f 4c25 	mov.w	ip, r5, asr #16
900239de:	f3c5 3103 	ubfx	r1, r5, #12, #4
900239e2:	f3c3 3203 	ubfx	r2, r3, #12, #4
900239e6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900239e8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
900239ec:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900239ee:	141b      	asrs	r3, r3, #16
900239f0:	f100 81d6 	bmi.w	90023da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900239f4:	f100 38ff 	add.w	r8, r0, #4294967295	@ 0xffffffff
900239f8:	4543      	cmp	r3, r8
900239fa:	f280 81d1 	bge.w	90023da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900239fe:	f1bc 0f00 	cmp.w	ip, #0
90023a02:	f2c0 81cd 	blt.w	90023da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023a06:	f10e 38ff 	add.w	r8, lr, #4294967295	@ 0xffffffff
90023a0a:	45c4      	cmp	ip, r8
90023a0c:	f280 81c8 	bge.w	90023da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023a10:	b200      	sxth	r0, r0
90023a12:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023a14:	fb0c 3300 	mla	r3, ip, r0, r3
90023a18:	eb04 0803 	add.w	r8, r4, r3
90023a1c:	5ce3      	ldrb	r3, [r4, r3]
90023a1e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023a22:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023a26:	2a00      	cmp	r2, #0
90023a28:	f000 81af 	beq.w	90023d8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023a2c:	f898 c001 	ldrb.w	ip, [r8, #1]
90023a30:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023a34:	940e      	str	r4, [sp, #56]	@ 0x38
90023a36:	0e24      	lsrs	r4, r4, #24
90023a38:	9415      	str	r4, [sp, #84]	@ 0x54
90023a3a:	b179      	cbz	r1, 90023a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023a3c:	eb08 0c00 	add.w	ip, r8, r0
90023a40:	f818 0000 	ldrb.w	r0, [r8, r0]
90023a44:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023a48:	900a      	str	r0, [sp, #40]	@ 0x28
90023a4a:	0e00      	lsrs	r0, r0, #24
90023a4c:	9013      	str	r0, [sp, #76]	@ 0x4c
90023a4e:	f89c 0001 	ldrb.w	r0, [ip, #1]
90023a52:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023a56:	900f      	str	r0, [sp, #60]	@ 0x3c
90023a58:	0e00      	lsrs	r0, r0, #24
90023a5a:	9016      	str	r0, [sp, #88]	@ 0x58
90023a5c:	b292      	uxth	r2, r2
90023a5e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90023a60:	b289      	uxth	r1, r1
90023a62:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023a64:	fb02 f901 	mul.w	r9, r2, r1
90023a68:	0112      	lsls	r2, r2, #4
90023a6a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023a6e:	eba2 0809 	sub.w	r8, r2, r9
90023a72:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023a76:	b289      	uxth	r1, r1
90023a78:	fa1f f888 	uxth.w	r8, r8
90023a7c:	1a52      	subs	r2, r2, r1
90023a7e:	fb08 f000 	mul.w	r0, r8, r0
90023a82:	b292      	uxth	r2, r2
90023a84:	fb02 000e 	mla	r0, r2, lr, r0
90023a88:	fb01 0004 	mla	r0, r1, r4, r0
90023a8c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023a8e:	fb09 0004 	mla	r0, r9, r4, r0
90023a92:	f3c0 2007 	ubfx	r0, r0, #8, #8
90023a96:	2800      	cmp	r0, #0
90023a98:	f000 80fa 	beq.w	90023c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023a9c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023aa0:	d01b      	beq.n	90023ada <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90023aa2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023aa6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023aaa:	fb0e fa0a 	mul.w	sl, lr, sl
90023aae:	fb0e fe03 	mul.w	lr, lr, r3
90023ab2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023ab6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023aba:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90023abe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023ac2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023ac6:	4453      	add	r3, sl
90023ac8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023acc:	0a1b      	lsrs	r3, r3, #8
90023ace:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023ad2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023ad6:	ea43 030c 	orr.w	r3, r3, ip
90023ada:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023adc:	2cff      	cmp	r4, #255	@ 0xff
90023ade:	d021      	beq.n	90023b24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90023ae0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023ae2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023ae6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023ae8:	fb04 fb0b 	mul.w	fp, r4, fp
90023aec:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023aee:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023af2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023af4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023af8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023afc:	fb04 fa0a 	mul.w	sl, r4, sl
90023b00:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023b04:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023b08:	44de      	add	lr, fp
90023b0a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023b0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023b12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023b16:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023b1a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023b1e:	ea4e 040a 	orr.w	r4, lr, sl
90023b22:	940e      	str	r4, [sp, #56]	@ 0x38
90023b24:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023b26:	2cff      	cmp	r4, #255	@ 0xff
90023b28:	d021      	beq.n	90023b6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90023b2a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023b2c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023b30:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023b32:	fb04 fb0b 	mul.w	fp, r4, fp
90023b36:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023b38:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023b3c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023b3e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023b42:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023b46:	fb04 fa0a 	mul.w	sl, r4, sl
90023b4a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023b4e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023b52:	44de      	add	lr, fp
90023b54:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023b58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023b5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023b60:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023b64:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023b68:	ea4e 040a 	orr.w	r4, lr, sl
90023b6c:	940a      	str	r4, [sp, #40]	@ 0x28
90023b6e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023b70:	2cff      	cmp	r4, #255	@ 0xff
90023b72:	d021      	beq.n	90023bb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90023b74:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023b76:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023b7a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023b7c:	fb04 fb0b 	mul.w	fp, r4, fp
90023b80:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023b82:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023b86:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023b88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023b8c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023b90:	fb04 fa0a 	mul.w	sl, r4, sl
90023b94:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023b98:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023b9c:	44de      	add	lr, fp
90023b9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023ba2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023ba6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023baa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023bae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023bb2:	ea4e 040a 	orr.w	r4, lr, sl
90023bb6:	940f      	str	r4, [sp, #60]	@ 0x3c
90023bb8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023bba:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90023bbe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023bc2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023bc6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023bc8:	fb08 fc0c 	mul.w	ip, r8, ip
90023bcc:	fb02 cc0e 	mla	ip, r2, lr, ip
90023bd0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90023bd4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023bd6:	fb01 cc0e 	mla	ip, r1, lr, ip
90023bda:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90023bde:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023be0:	fb09 cc0e 	mla	ip, r9, lr, ip
90023be4:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90023be8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023bea:	fb08 f80e 	mul.w	r8, r8, lr
90023bee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023bf2:	fb02 8303 	mla	r3, r2, r3, r8
90023bf6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023bf8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023bfc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023c00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023c02:	fb01 330a 	mla	r3, r1, sl, r3
90023c06:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90023c0a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90023c0c:	fb09 3901 	mla	r9, r9, r1, r3
90023c10:	883b      	ldrh	r3, [r7, #0]
90023c12:	4342      	muls	r2, r0
90023c14:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023c18:	1c50      	adds	r0, r2, #1
90023c1a:	1219      	asrs	r1, r3, #8
90023c1c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023c20:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90023c24:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023c28:	ea4c 0c09 	orr.w	ip, ip, r9
90023c2c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023c30:	ea4f 421c 	mov.w	r2, ip, lsr #16
90023c34:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90023c38:	b2c0      	uxtb	r0, r0
90023c3a:	fb12 f204 	smulbb	r2, r2, r4
90023c3e:	fa5f fc8c 	uxtb.w	ip, ip
90023c42:	fb1e fe04 	smulbb	lr, lr, r4
90023c46:	fb01 2100 	mla	r1, r1, r0, r2
90023c4a:	10da      	asrs	r2, r3, #3
90023c4c:	fb1c fc04 	smulbb	ip, ip, r4
90023c50:	00db      	lsls	r3, r3, #3
90023c52:	b289      	uxth	r1, r1
90023c54:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023c58:	b2db      	uxtb	r3, r3
90023c5a:	fb02 e200 	mla	r2, r2, r0, lr
90023c5e:	fb03 c300 	mla	r3, r3, r0, ip
90023c62:	b292      	uxth	r2, r2
90023c64:	fa1f fc83 	uxth.w	ip, r3
90023c68:	1c4b      	adds	r3, r1, #1
90023c6a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023c6e:	f10c 0301 	add.w	r3, ip, #1
90023c72:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90023c76:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90023c7a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023c7e:	430b      	orrs	r3, r1
90023c80:	1c51      	adds	r1, r2, #1
90023c82:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90023c86:	0952      	lsrs	r2, r2, #5
90023c88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023c8c:	4313      	orrs	r3, r2
90023c8e:	803b      	strh	r3, [r7, #0]
90023c90:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023c92:	3702      	adds	r7, #2
90023c94:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023c96:	441a      	add	r2, r3
90023c98:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023c9a:	441d      	add	r5, r3
90023c9c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90023c9e:	9229      	str	r2, [sp, #164]	@ 0xa4
90023ca0:	3b01      	subs	r3, #1
90023ca2:	931a      	str	r3, [sp, #104]	@ 0x68
90023ca4:	e694      	b.n	900239d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90023ca6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023ca8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023caa:	441c      	add	r4, r3
90023cac:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023cae:	441d      	add	r5, r3
90023cb0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023cb2:	9429      	str	r4, [sp, #164]	@ 0xa4
90023cb4:	3b01      	subs	r3, #1
90023cb6:	9309      	str	r3, [sp, #36]	@ 0x24
90023cb8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023cba:	3302      	adds	r3, #2
90023cbc:	930c      	str	r3, [sp, #48]	@ 0x30
90023cbe:	e667      	b.n	90023990 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023cc0:	d024      	beq.n	90023d0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90023cc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023cc4:	982b      	ldr	r0, [sp, #172]	@ 0xac
90023cc6:	3b01      	subs	r3, #1
90023cc8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023cca:	fb00 4003 	mla	r0, r0, r3, r4
90023cce:	1400      	asrs	r0, r0, #16
90023cd0:	f53f ae7b 	bmi.w	900239ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023cd4:	3901      	subs	r1, #1
90023cd6:	4288      	cmp	r0, r1
90023cd8:	f6bf ae77 	bge.w	900239ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023cdc:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90023cde:	fb01 5303 	mla	r3, r1, r3, r5
90023ce2:	141b      	asrs	r3, r3, #16
90023ce4:	f53f ae71 	bmi.w	900239ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023ce8:	3a01      	subs	r2, #1
90023cea:	4293      	cmp	r3, r2
90023cec:	f6bf ae6d 	bge.w	900239ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023cf0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023cf4:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90023cf8:	f1bb 0f00 	cmp.w	fp, #0
90023cfc:	dc70      	bgt.n	90023de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90023cfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023d00:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023d04:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023d06:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023d0a:	930c      	str	r3, [sp, #48]	@ 0x30
90023d0c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023d0e:	2b00      	cmp	r3, #0
90023d10:	f340 81be 	ble.w	90024090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023d14:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023d18:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023d1a:	ee30 0a04 	vadd.f32	s0, s0, s8
90023d1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023d22:	eef0 6a62 	vmov.f32	s13, s5
90023d26:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023d2a:	ee31 1a05 	vadd.f32	s2, s2, s10
90023d2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d32:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90023d36:	eef0 6a43 	vmov.f32	s13, s6
90023d3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d3e:	ee16 5a90 	vmov	r5, s13
90023d42:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023d46:	ee61 7a27 	vmul.f32	s15, s2, s15
90023d4a:	ee77 2a62 	vsub.f32	s5, s14, s5
90023d4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023d52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023d56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023d5a:	ee12 2a90 	vmov	r2, s5
90023d5e:	eef0 2a47 	vmov.f32	s5, s14
90023d62:	fb92 f3f3 	sdiv	r3, r2, r3
90023d66:	ee13 2a10 	vmov	r2, s6
90023d6a:	932b      	str	r3, [sp, #172]	@ 0xac
90023d6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023d6e:	eeb0 3a67 	vmov.f32	s6, s15
90023d72:	fb92 f3f3 	sdiv	r3, r2, r3
90023d76:	932c      	str	r3, [sp, #176]	@ 0xb0
90023d78:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023d7a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90023d7c:	3b01      	subs	r3, #1
90023d7e:	9319      	str	r3, [sp, #100]	@ 0x64
90023d80:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023d82:	bf08      	it	eq
90023d84:	4613      	moveq	r3, r2
90023d86:	9309      	str	r3, [sp, #36]	@ 0x24
90023d88:	e5f4      	b.n	90023974 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023d8a:	2900      	cmp	r1, #0
90023d8c:	f43f ae66 	beq.w	90023a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023d90:	f818 0000 	ldrb.w	r0, [r8, r0]
90023d94:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023d98:	900a      	str	r0, [sp, #40]	@ 0x28
90023d9a:	0e00      	lsrs	r0, r0, #24
90023d9c:	9013      	str	r0, [sp, #76]	@ 0x4c
90023d9e:	e65d      	b.n	90023a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023da0:	f113 0801 	adds.w	r8, r3, #1
90023da4:	f53f af74 	bmi.w	90023c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023da8:	4540      	cmp	r0, r8
90023daa:	f6ff af71 	blt.w	90023c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023dae:	f11c 0801 	adds.w	r8, ip, #1
90023db2:	f53f af6d 	bmi.w	90023c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023db6:	45c6      	cmp	lr, r8
90023db8:	f6ff af6a 	blt.w	90023c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023dbc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90023dbe:	b200      	sxth	r0, r0
90023dc0:	9302      	str	r3, [sp, #8]
90023dc2:	fa0f f38e 	sxth.w	r3, lr
90023dc6:	9000      	str	r0, [sp, #0]
90023dc8:	9301      	str	r3, [sp, #4]
90023dca:	4633      	mov	r3, r6
90023dcc:	981d      	ldr	r0, [sp, #116]	@ 0x74
90023dce:	e9cd 1405 	strd	r1, r4, [sp, #20]
90023dd2:	e9cd c203 	strd	ip, r2, [sp, #12]
90023dd6:	4639      	mov	r1, r7
90023dd8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90023dda:	f7ff fc63 	bl	900236a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90023dde:	e757      	b.n	90023c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023de0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023de2:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023de6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023de8:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023dec:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023dee:	1427      	asrs	r7, r4, #16
90023df0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023df2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023df6:	142b      	asrs	r3, r5, #16
90023df8:	fb01 7303 	mla	r3, r1, r3, r7
90023dfc:	18e7      	adds	r7, r4, r3
90023dfe:	5ce3      	ldrb	r3, [r4, r3]
90023e00:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023e04:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023e08:	2a00      	cmp	r2, #0
90023e0a:	f000 8137 	beq.w	9002407c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90023e0e:	f897 e001 	ldrb.w	lr, [r7, #1]
90023e12:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023e16:	9410      	str	r4, [sp, #64]	@ 0x40
90023e18:	0e24      	lsrs	r4, r4, #24
90023e1a:	9417      	str	r4, [sp, #92]	@ 0x5c
90023e1c:	b170      	cbz	r0, 90023e3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023e1e:	eb07 0e01 	add.w	lr, r7, r1
90023e22:	5c79      	ldrb	r1, [r7, r1]
90023e24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023e28:	910b      	str	r1, [sp, #44]	@ 0x2c
90023e2a:	0e09      	lsrs	r1, r1, #24
90023e2c:	9114      	str	r1, [sp, #80]	@ 0x50
90023e2e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023e32:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023e36:	9111      	str	r1, [sp, #68]	@ 0x44
90023e38:	0e09      	lsrs	r1, r1, #24
90023e3a:	9118      	str	r1, [sp, #96]	@ 0x60
90023e3c:	b292      	uxth	r2, r2
90023e3e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90023e40:	b280      	uxth	r0, r0
90023e42:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023e44:	fb02 f800 	mul.w	r8, r2, r0
90023e48:	0112      	lsls	r2, r2, #4
90023e4a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023e4e:	eba2 0e08 	sub.w	lr, r2, r8
90023e52:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023e56:	b280      	uxth	r0, r0
90023e58:	fa1f fe8e 	uxth.w	lr, lr
90023e5c:	1a12      	subs	r2, r2, r0
90023e5e:	fb0e f101 	mul.w	r1, lr, r1
90023e62:	b292      	uxth	r2, r2
90023e64:	fb02 110c 	mla	r1, r2, ip, r1
90023e68:	fb00 1104 	mla	r1, r0, r4, r1
90023e6c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023e6e:	fb08 1104 	mla	r1, r8, r4, r1
90023e72:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023e76:	2900      	cmp	r1, #0
90023e78:	f000 80f5 	beq.w	90024066 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023e7c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023e80:	d019      	beq.n	90023eb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90023e82:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023e86:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023e8a:	fb0c fa0a 	mul.w	sl, ip, sl
90023e8e:	fb0c fc03 	mul.w	ip, ip, r3
90023e92:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023e96:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023e9a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023e9e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023ea2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023ea6:	4453      	add	r3, sl
90023ea8:	0a3f      	lsrs	r7, r7, #8
90023eaa:	0a1b      	lsrs	r3, r3, #8
90023eac:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023eb0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023eb4:	433b      	orrs	r3, r7
90023eb6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023eb8:	2cff      	cmp	r4, #255	@ 0xff
90023eba:	d020      	beq.n	90023efe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90023ebc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023ebe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023ec2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023ec4:	4367      	muls	r7, r4
90023ec6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023ec8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023ecc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023ed0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023ed2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023ed6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023eda:	fb04 fa0a 	mul.w	sl, r4, sl
90023ede:	44bc      	add	ip, r7
90023ee0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023ee4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023ee8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023eec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023ef0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023ef4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023ef8:	ea4c 040a 	orr.w	r4, ip, sl
90023efc:	9410      	str	r4, [sp, #64]	@ 0x40
90023efe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023f00:	2cff      	cmp	r4, #255	@ 0xff
90023f02:	d020      	beq.n	90023f46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90023f04:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023f06:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023f0a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023f0c:	4367      	muls	r7, r4
90023f0e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023f10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023f14:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023f18:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023f1a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023f1e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023f22:	fb04 fa0a 	mul.w	sl, r4, sl
90023f26:	44bc      	add	ip, r7
90023f28:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023f2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023f30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023f34:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023f38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023f40:	ea4c 040a 	orr.w	r4, ip, sl
90023f44:	940b      	str	r4, [sp, #44]	@ 0x2c
90023f46:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023f48:	2cff      	cmp	r4, #255	@ 0xff
90023f4a:	d020      	beq.n	90023f8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90023f4c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023f4e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023f52:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023f54:	4367      	muls	r7, r4
90023f56:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023f58:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023f5c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023f60:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023f62:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023f66:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023f6a:	fb04 fa0a 	mul.w	sl, r4, sl
90023f6e:	44bc      	add	ip, r7
90023f70:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023f74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023f78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023f7c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023f80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023f88:	ea4c 040a 	orr.w	r4, ip, sl
90023f8c:	9411      	str	r4, [sp, #68]	@ 0x44
90023f8e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023f90:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90023f94:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023f98:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023f9c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023f9e:	fb0e f707 	mul.w	r7, lr, r7
90023fa2:	fb02 770c 	mla	r7, r2, ip, r7
90023fa6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023faa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023fac:	fb00 770c 	mla	r7, r0, ip, r7
90023fb0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023fb4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023fb6:	fb08 770c 	mla	r7, r8, ip, r7
90023fba:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90023fbe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023fc0:	fb0e fe0c 	mul.w	lr, lr, ip
90023fc4:	0a3f      	lsrs	r7, r7, #8
90023fc6:	fb02 e303 	mla	r3, r2, r3, lr
90023fca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023fcc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90023fd0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023fd4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90023fd6:	fb00 330a 	mla	r3, r0, sl, r3
90023fda:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90023fde:	f8b9 0000 	ldrh.w	r0, [r9]
90023fe2:	fb08 3c0c 	mla	ip, r8, ip, r3
90023fe6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023fe8:	1202      	asrs	r2, r0, #8
90023fea:	434b      	muls	r3, r1
90023fec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023ff0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023ff4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023ff8:	1c59      	adds	r1, r3, #1
90023ffa:	ea47 070c 	orr.w	r7, r7, ip
90023ffe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024002:	0c3b      	lsrs	r3, r7, #16
90024004:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024008:	f3c7 2c07 	ubfx	ip, r7, #8, #8
9002400c:	b2ff      	uxtb	r7, r7
9002400e:	fb13 f304 	smulbb	r3, r3, r4
90024012:	b2c9      	uxtb	r1, r1
90024014:	fb1c fc04 	smulbb	ip, ip, r4
90024018:	fb02 3201 	mla	r2, r2, r1, r3
9002401c:	10c3      	asrs	r3, r0, #3
9002401e:	fb17 f704 	smulbb	r7, r7, r4
90024022:	00c0      	lsls	r0, r0, #3
90024024:	b292      	uxth	r2, r2
90024026:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002402a:	b2c0      	uxtb	r0, r0
9002402c:	fb03 c301 	mla	r3, r3, r1, ip
90024030:	f102 0c01 	add.w	ip, r2, #1
90024034:	fb00 7001 	mla	r0, r0, r1, r7
90024038:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
9002403c:	b280      	uxth	r0, r0
9002403e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90024042:	b29b      	uxth	r3, r3
90024044:	1c42      	adds	r2, r0, #1
90024046:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002404a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002404e:	ea42 020c 	orr.w	r2, r2, ip
90024052:	f103 0c01 	add.w	ip, r3, #1
90024056:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002405a:	095b      	lsrs	r3, r3, #5
9002405c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024060:	431a      	orrs	r2, r3
90024062:	f8a9 2000 	strh.w	r2, [r9]
90024066:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90024068:	f109 0902 	add.w	r9, r9, #2
9002406c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002406e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
90024072:	441a      	add	r2, r3
90024074:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024076:	9229      	str	r2, [sp, #164]	@ 0xa4
90024078:	441d      	add	r5, r3
9002407a:	e63d      	b.n	90023cf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
9002407c:	2800      	cmp	r0, #0
9002407e:	f43f aedd 	beq.w	90023e3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90024082:	5c79      	ldrb	r1, [r7, r1]
90024084:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024088:	910b      	str	r1, [sp, #44]	@ 0x2c
9002408a:	0e09      	lsrs	r1, r1, #24
9002408c:	9114      	str	r1, [sp, #80]	@ 0x50
9002408e:	e6d5      	b.n	90023e3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90024090:	b01f      	add	sp, #124	@ 0x7c
90024092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024096 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90024096:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002409a:	b089      	sub	sp, #36	@ 0x24
9002409c:	9101      	str	r1, [sp, #4]
9002409e:	9801      	ldr	r0, [sp, #4]
900240a0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
900240a4:	8800      	ldrh	r0, [r0, #0]
900240a6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
900240aa:	1206      	asrs	r6, r0, #8
900240ac:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900240b0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
900240b4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900240b8:	9602      	str	r6, [sp, #8]
900240ba:	10c6      	asrs	r6, r0, #3
900240bc:	00c0      	lsls	r0, r0, #3
900240be:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900240c2:	b2c0      	uxtb	r0, r0
900240c4:	9603      	str	r6, [sp, #12]
900240c6:	9004      	str	r0, [sp, #16]
900240c8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900240cc:	fb07 100c 	mla	r0, r7, ip, r1
900240d0:	2f00      	cmp	r7, #0
900240d2:	eb02 0e00 	add.w	lr, r2, r0
900240d6:	f2c0 810a 	blt.w	900242ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900240da:	45b8      	cmp	r8, r7
900240dc:	f340 8107 	ble.w	900242ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900240e0:	2900      	cmp	r1, #0
900240e2:	f2c0 8102 	blt.w	900242ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900240e6:	458c      	cmp	ip, r1
900240e8:	f340 80ff 	ble.w	900242ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900240ec:	5c12      	ldrb	r2, [r2, r0]
900240ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900240f2:	1c4a      	adds	r2, r1, #1
900240f4:	f100 80fe 	bmi.w	900242f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900240f8:	4594      	cmp	ip, r2
900240fa:	f340 80fb 	ble.w	900242f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900240fe:	2d00      	cmp	r5, #0
90024100:	f000 80fa 	beq.w	900242f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90024104:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024108:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9002410c:	3701      	adds	r7, #1
9002410e:	f100 80f7 	bmi.w	90024300 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024112:	45b8      	cmp	r8, r7
90024114:	f340 80f4 	ble.w	90024300 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024118:	2c00      	cmp	r4, #0
9002411a:	f000 80f4 	beq.w	90024306 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
9002411e:	2900      	cmp	r1, #0
90024120:	eb0e 020c 	add.w	r2, lr, ip
90024124:	f2c0 80ea 	blt.w	900242fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024128:	458c      	cmp	ip, r1
9002412a:	f340 80e7 	ble.w	900242fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002412e:	f81e 700c 	ldrb.w	r7, [lr, ip]
90024132:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90024136:	3101      	adds	r1, #1
90024138:	f100 80e8 	bmi.w	9002430c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002413c:	458c      	cmp	ip, r1
9002413e:	f340 80e5 	ble.w	9002430c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90024142:	2d00      	cmp	r5, #0
90024144:	f000 80e4 	beq.w	90024310 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90024148:	7852      	ldrb	r2, [r2, #1]
9002414a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9002414e:	0e0b      	lsrs	r3, r1, #24
90024150:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90024154:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90024158:	9300      	str	r3, [sp, #0]
9002415a:	b2a4      	uxth	r4, r4
9002415c:	b2ab      	uxth	r3, r5
9002415e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90024162:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90024166:	fb03 f904 	mul.w	r9, r3, r4
9002416a:	011b      	lsls	r3, r3, #4
9002416c:	fb0a f505 	mul.w	r5, sl, r5
90024170:	ea4f 6817 	mov.w	r8, r7, lsr #24
90024174:	eba3 0e09 	sub.w	lr, r3, r9
90024178:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
9002417c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90024180:	0a28      	lsrs	r0, r5, #8
90024182:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90024186:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002418a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
9002418e:	fb0a f303 	mul.w	r3, sl, r3
90024192:	fb08 f707 	mul.w	r7, r8, r7
90024196:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
9002419a:	4405      	add	r5, r0
9002419c:	fb08 fc0c 	mul.w	ip, r8, ip
900241a0:	b2a4      	uxth	r4, r4
900241a2:	0a2d      	lsrs	r5, r5, #8
900241a4:	fa1f fe8e 	uxth.w	lr, lr
900241a8:	1b12      	subs	r2, r2, r4
900241aa:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
900241ae:	b292      	uxth	r2, r2
900241b0:	9005      	str	r0, [sp, #20]
900241b2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
900241b6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900241ba:	ea4f 201c 	mov.w	r0, ip, lsr #8
900241be:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900241c2:	0a1b      	lsrs	r3, r3, #8
900241c4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900241c8:	9306      	str	r3, [sp, #24]
900241ca:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900241ce:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900241d2:	4460      	add	r0, ip
900241d4:	fb0b f303 	mul.w	r3, fp, r3
900241d8:	fb0b f606 	mul.w	r6, fp, r6
900241dc:	0a00      	lsrs	r0, r0, #8
900241de:	0a1d      	lsrs	r5, r3, #8
900241e0:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
900241e4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900241e8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900241ec:	441d      	add	r5, r3
900241ee:	f506 7380 	add.w	r3, r6, #256	@ 0x100
900241f2:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900241f6:	f507 7380 	add.w	r3, r7, #256	@ 0x100
900241fa:	0a2d      	lsrs	r5, r5, #8
900241fc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90024200:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90024204:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024208:	0a36      	lsrs	r6, r6, #8
9002420a:	0a1b      	lsrs	r3, r3, #8
9002420c:	fb05 f50e 	mul.w	r5, r5, lr
90024210:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90024214:	9307      	str	r3, [sp, #28]
90024216:	0e0b      	lsrs	r3, r1, #24
90024218:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002421c:	fb0e f606 	mul.w	r6, lr, r6
90024220:	435f      	muls	r7, r3
90024222:	4359      	muls	r1, r3
90024224:	9b05      	ldr	r3, [sp, #20]
90024226:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002422a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002422e:	fb03 5502 	mla	r5, r3, r2, r5
90024232:	9b06      	ldr	r3, [sp, #24]
90024234:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024238:	fb0e fe0b 	mul.w	lr, lr, fp
9002423c:	44bc      	add	ip, r7
9002423e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90024242:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024246:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002424a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002424e:	0a09      	lsrs	r1, r1, #8
90024250:	fb0c 5509 	mla	r5, ip, r9, r5
90024254:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024258:	fb00 5504 	mla	r5, r0, r4, r5
9002425c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90024260:	9b07      	ldr	r3, [sp, #28]
90024262:	fb02 6000 	mla	r0, r2, r0, r6
90024266:	0a2d      	lsrs	r5, r5, #8
90024268:	fb02 e20a 	mla	r2, r2, sl, lr
9002426c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024270:	fb09 0001 	mla	r0, r9, r1, r0
90024274:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024278:	fb04 0003 	mla	r0, r4, r3, r0
9002427c:	9b00      	ldr	r3, [sp, #0]
9002427e:	fb04 2408 	mla	r4, r4, r8, r2
90024282:	9a04      	ldr	r2, [sp, #16]
90024284:	0a00      	lsrs	r0, r0, #8
90024286:	fb09 4903 	mla	r9, r9, r3, r4
9002428a:	9b02      	ldr	r3, [sp, #8]
9002428c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90024290:	ea6f 2929 	mvn.w	r9, r9, asr #8
90024294:	4305      	orrs	r5, r0
90024296:	fa5f f989 	uxtb.w	r9, r9
9002429a:	fb03 f109 	mul.w	r1, r3, r9
9002429e:	9b03      	ldr	r3, [sp, #12]
900242a0:	fb03 f309 	mul.w	r3, r3, r9
900242a4:	fb02 f909 	mul.w	r9, r2, r9
900242a8:	1c4a      	adds	r2, r1, #1
900242aa:	1c58      	adds	r0, r3, #1
900242ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900242b0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900242b4:	0c2a      	lsrs	r2, r5, #16
900242b6:	0a2b      	lsrs	r3, r5, #8
900242b8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900242bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900242c0:	0212      	lsls	r2, r2, #8
900242c2:	00db      	lsls	r3, r3, #3
900242c4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900242c8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900242cc:	4313      	orrs	r3, r2
900242ce:	f109 0201 	add.w	r2, r9, #1
900242d2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900242d6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900242da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900242de:	431d      	orrs	r5, r3
900242e0:	9b01      	ldr	r3, [sp, #4]
900242e2:	801d      	strh	r5, [r3, #0]
900242e4:	b009      	add	sp, #36	@ 0x24
900242e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900242ea:	2000      	movs	r0, #0
900242ec:	e701      	b.n	900240f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900242ee:	2600      	movs	r6, #0
900242f0:	4630      	mov	r0, r6
900242f2:	e70b      	b.n	9002410c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900242f4:	2600      	movs	r6, #0
900242f6:	e709      	b.n	9002410c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900242f8:	462e      	mov	r6, r5
900242fa:	e707      	b.n	9002410c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900242fc:	2700      	movs	r7, #0
900242fe:	e71a      	b.n	90024136 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90024300:	2100      	movs	r1, #0
90024302:	460f      	mov	r7, r1
90024304:	e723      	b.n	9002414e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024306:	4621      	mov	r1, r4
90024308:	4627      	mov	r7, r4
9002430a:	e720      	b.n	9002414e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002430c:	2100      	movs	r1, #0
9002430e:	e71e      	b.n	9002414e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024310:	4629      	mov	r1, r5
90024312:	e71c      	b.n	9002414e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90024314 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024318:	b09b      	sub	sp, #108	@ 0x6c
9002431a:	9218      	str	r2, [sp, #96]	@ 0x60
9002431c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002431e:	9019      	str	r0, [sp, #100]	@ 0x64
90024320:	9116      	str	r1, [sp, #88]	@ 0x58
90024322:	6850      	ldr	r0, [r2, #4]
90024324:	9307      	str	r3, [sp, #28]
90024326:	6812      	ldr	r2, [r2, #0]
90024328:	9d26      	ldr	r5, [sp, #152]	@ 0x98
9002432a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
9002432e:	fb00 1303 	mla	r3, r0, r3, r1
90024332:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024336:	930a      	str	r3, [sp, #40]	@ 0x28
90024338:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002433a:	681b      	ldr	r3, [r3, #0]
9002433c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002433e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024340:	685e      	ldr	r6, [r3, #4]
90024342:	3604      	adds	r6, #4
90024344:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024346:	2b00      	cmp	r3, #0
90024348:	dc03      	bgt.n	90024352 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002434a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002434c:	2b00      	cmp	r3, #0
9002434e:	f340 8373 	ble.w	90024a38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90024352:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024354:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024358:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002435c:	1e48      	subs	r0, r1, #1
9002435e:	1e57      	subs	r7, r2, #1
90024360:	9b07      	ldr	r3, [sp, #28]
90024362:	2b00      	cmp	r3, #0
90024364:	f340 818f 	ble.w	90024686 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90024368:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002436a:	142b      	asrs	r3, r5, #16
9002436c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024370:	d406      	bmi.n	90024380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024372:	4584      	cmp	ip, r0
90024374:	da04      	bge.n	90024380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024376:	2b00      	cmp	r3, #0
90024378:	db02      	blt.n	90024380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002437a:	42bb      	cmp	r3, r7
9002437c:	f2c0 8184 	blt.w	90024688 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90024380:	f11c 0c01 	adds.w	ip, ip, #1
90024384:	f100 8172 	bmi.w	9002466c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024388:	4561      	cmp	r1, ip
9002438a:	f2c0 816f 	blt.w	9002466c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002438e:	3301      	adds	r3, #1
90024390:	f100 816c 	bmi.w	9002466c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024394:	429a      	cmp	r2, r3
90024396:	f2c0 8169 	blt.w	9002466c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002439a:	9b07      	ldr	r3, [sp, #28]
9002439c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9002439e:	9317      	str	r3, [sp, #92]	@ 0x5c
900243a0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900243a2:	2b00      	cmp	r3, #0
900243a4:	f340 818e 	ble.w	900246c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900243a8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900243aa:	ea4f 4c25 	mov.w	ip, r5, asr #16
900243ae:	f3c5 3003 	ubfx	r0, r5, #12, #4
900243b2:	f3c3 3203 	ubfx	r2, r3, #12, #4
900243b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900243b8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900243bc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900243be:	141b      	asrs	r3, r3, #16
900243c0:	f100 81d1 	bmi.w	90024766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900243c4:	f101 38ff 	add.w	r8, r1, #4294967295	@ 0xffffffff
900243c8:	4543      	cmp	r3, r8
900243ca:	f280 81cc 	bge.w	90024766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900243ce:	f1bc 0f00 	cmp.w	ip, #0
900243d2:	f2c0 81c8 	blt.w	90024766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900243d6:	f10e 38ff 	add.w	r8, lr, #4294967295	@ 0xffffffff
900243da:	45c4      	cmp	ip, r8
900243dc:	f280 81c3 	bge.w	90024766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900243e0:	b209      	sxth	r1, r1
900243e2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900243e4:	fb0c 3301 	mla	r3, ip, r1, r3
900243e8:	eb04 0803 	add.w	r8, r4, r3
900243ec:	5ce3      	ldrb	r3, [r4, r3]
900243ee:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900243f2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900243f6:	2a00      	cmp	r2, #0
900243f8:	f000 81aa 	beq.w	90024750 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
900243fc:	f898 c001 	ldrb.w	ip, [r8, #1]
90024400:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90024404:	940b      	str	r4, [sp, #44]	@ 0x2c
90024406:	0e24      	lsrs	r4, r4, #24
90024408:	9412      	str	r4, [sp, #72]	@ 0x48
9002440a:	b178      	cbz	r0, 9002442c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002440c:	eb08 0c01 	add.w	ip, r8, r1
90024410:	f818 1001 	ldrb.w	r1, [r8, r1]
90024414:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024418:	9108      	str	r1, [sp, #32]
9002441a:	0e09      	lsrs	r1, r1, #24
9002441c:	9110      	str	r1, [sp, #64]	@ 0x40
9002441e:	f89c 1001 	ldrb.w	r1, [ip, #1]
90024422:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024426:	910c      	str	r1, [sp, #48]	@ 0x30
90024428:	0e09      	lsrs	r1, r1, #24
9002442a:	9113      	str	r1, [sp, #76]	@ 0x4c
9002442c:	b292      	uxth	r2, r2
9002442e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024430:	b280      	uxth	r0, r0
90024432:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024434:	fb02 f900 	mul.w	r9, r2, r0
90024438:	0112      	lsls	r2, r2, #4
9002443a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002443e:	eba2 0809 	sub.w	r8, r2, r9
90024442:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90024446:	b280      	uxth	r0, r0
90024448:	fa1f f888 	uxth.w	r8, r8
9002444c:	1a12      	subs	r2, r2, r0
9002444e:	fb08 f101 	mul.w	r1, r8, r1
90024452:	b292      	uxth	r2, r2
90024454:	fb02 110e 	mla	r1, r2, lr, r1
90024458:	fb00 1104 	mla	r1, r0, r4, r1
9002445c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002445e:	fb09 1104 	mla	r1, r9, r4, r1
90024462:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024466:	2900      	cmp	r1, #0
90024468:	f000 80f5 	beq.w	90024656 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002446c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024470:	d01b      	beq.n	900244aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024472:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024476:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002447a:	fb0e fa0a 	mul.w	sl, lr, sl
9002447e:	fb0e fe03 	mul.w	lr, lr, r3
90024482:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024486:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002448a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002448e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024492:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024496:	4453      	add	r3, sl
90024498:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002449c:	0a1b      	lsrs	r3, r3, #8
9002449e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900244a2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900244a6:	ea43 030c 	orr.w	r3, r3, ip
900244aa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900244ac:	2cff      	cmp	r4, #255	@ 0xff
900244ae:	d021      	beq.n	900244f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900244b0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900244b2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900244b6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900244b8:	fb04 fb0b 	mul.w	fp, r4, fp
900244bc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900244be:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900244c2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900244c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900244c8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900244cc:	fb04 fa0a 	mul.w	sl, r4, sl
900244d0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900244d4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900244d8:	44de      	add	lr, fp
900244da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900244de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900244e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900244e6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900244ea:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900244ee:	ea4e 040a 	orr.w	r4, lr, sl
900244f2:	940b      	str	r4, [sp, #44]	@ 0x2c
900244f4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900244f6:	2cff      	cmp	r4, #255	@ 0xff
900244f8:	d021      	beq.n	9002453e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900244fa:	9c08      	ldr	r4, [sp, #32]
900244fc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024500:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024502:	fb04 fb0b 	mul.w	fp, r4, fp
90024506:	9c08      	ldr	r4, [sp, #32]
90024508:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002450c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002450e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024512:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024516:	fb04 fa0a 	mul.w	sl, r4, sl
9002451a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002451e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024522:	44de      	add	lr, fp
90024524:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024528:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002452c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024530:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024534:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024538:	ea4e 040a 	orr.w	r4, lr, sl
9002453c:	9408      	str	r4, [sp, #32]
9002453e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024540:	2cff      	cmp	r4, #255	@ 0xff
90024542:	d021      	beq.n	90024588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90024544:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90024546:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002454a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002454c:	fb04 fb0b 	mul.w	fp, r4, fp
90024550:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90024552:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024556:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024558:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002455c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024560:	fb04 fa0a 	mul.w	sl, r4, sl
90024564:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024568:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002456c:	44de      	add	lr, fp
9002456e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024572:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024576:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002457a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002457e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024582:	ea4e 040a 	orr.w	r4, lr, sl
90024586:	940c      	str	r4, [sp, #48]	@ 0x30
90024588:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002458a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
9002458e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024592:	43c9      	mvns	r1, r1
90024594:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024598:	9c08      	ldr	r4, [sp, #32]
9002459a:	fb08 fc0c 	mul.w	ip, r8, ip
9002459e:	fb02 cc0e 	mla	ip, r2, lr, ip
900245a2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900245a6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900245a8:	fb00 cc0e 	mla	ip, r0, lr, ip
900245ac:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900245b0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900245b2:	fb09 cc0e 	mla	ip, r9, lr, ip
900245b6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900245ba:	fb08 f80e 	mul.w	r8, r8, lr
900245be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900245c2:	fa5f fe81 	uxtb.w	lr, r1
900245c6:	fb02 8303 	mla	r3, r2, r3, r8
900245ca:	9a08      	ldr	r2, [sp, #32]
900245cc:	f8b7 8000 	ldrh.w	r8, [r7]
900245d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900245d4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900245d8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900245da:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900245de:	fb00 330a 	mla	r3, r0, sl, r3
900245e2:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
900245e6:	ea4f 2228 	mov.w	r2, r8, asr #8
900245ea:	fb09 3900 	mla	r9, r9, r0, r3
900245ee:	ea4f 00e8 	mov.w	r0, r8, asr #3
900245f2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900245f6:	b2c9      	uxtb	r1, r1
900245f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900245fc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024600:	fb02 f20e 	mul.w	r2, r2, lr
90024604:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024608:	fb00 f00e 	mul.w	r0, r0, lr
9002460c:	1c53      	adds	r3, r2, #1
9002460e:	fb01 f10e 	mul.w	r1, r1, lr
90024612:	ea4c 0c09 	orr.w	ip, ip, r9
90024616:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002461a:	ea4f 431c 	mov.w	r3, ip, lsr #16
9002461e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024622:	4a60      	ldr	r2, [pc, #384]	@ (900247a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90024624:	b2db      	uxtb	r3, r3
90024626:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002462a:	1c43      	adds	r3, r0, #1
9002462c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024630:	ea4f 231c 	mov.w	r3, ip, lsr #8
90024634:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024638:	00db      	lsls	r3, r3, #3
9002463a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002463e:	4313      	orrs	r3, r2
90024640:	1c4a      	adds	r2, r1, #1
90024642:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024646:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002464a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002464e:	ea4c 0c03 	orr.w	ip, ip, r3
90024652:	f8a7 c000 	strh.w	ip, [r7]
90024656:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024658:	3702      	adds	r7, #2
9002465a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002465c:	441a      	add	r2, r3
9002465e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024660:	441d      	add	r5, r3
90024662:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024664:	9225      	str	r2, [sp, #148]	@ 0x94
90024666:	3b01      	subs	r3, #1
90024668:	9317      	str	r3, [sp, #92]	@ 0x5c
9002466a:	e699      	b.n	900243a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002466c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002466e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024670:	441c      	add	r4, r3
90024672:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024674:	441d      	add	r5, r3
90024676:	9b07      	ldr	r3, [sp, #28]
90024678:	9425      	str	r4, [sp, #148]	@ 0x94
9002467a:	3b01      	subs	r3, #1
9002467c:	9307      	str	r3, [sp, #28]
9002467e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024680:	3302      	adds	r3, #2
90024682:	930a      	str	r3, [sp, #40]	@ 0x28
90024684:	e66c      	b.n	90024360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90024686:	d024      	beq.n	900246d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90024688:	9b07      	ldr	r3, [sp, #28]
9002468a:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002468c:	3b01      	subs	r3, #1
9002468e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024690:	fb00 4003 	mla	r0, r0, r3, r4
90024694:	1400      	asrs	r0, r0, #16
90024696:	f53f ae80 	bmi.w	9002439a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002469a:	3901      	subs	r1, #1
9002469c:	4288      	cmp	r0, r1
9002469e:	f6bf ae7c 	bge.w	9002439a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900246a2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900246a4:	fb01 5303 	mla	r3, r1, r3, r5
900246a8:	141b      	asrs	r3, r3, #16
900246aa:	f53f ae76 	bmi.w	9002439a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900246ae:	3a01      	subs	r2, #1
900246b0:	4293      	cmp	r3, r2
900246b2:	f6bf ae72 	bge.w	9002439a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900246b6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900246ba:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900246be:	f1bb 0f00 	cmp.w	fp, #0
900246c2:	dc71      	bgt.n	900247a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900246c4:	9b07      	ldr	r3, [sp, #28]
900246c6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900246ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900246cc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900246d0:	930a      	str	r3, [sp, #40]	@ 0x28
900246d2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900246d4:	2b00      	cmp	r3, #0
900246d6:	f340 81af 	ble.w	90024a38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900246da:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900246de:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900246e0:	ee30 0a04 	vadd.f32	s0, s0, s8
900246e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900246e8:	eef0 6a62 	vmov.f32	s13, s5
900246ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
900246f0:	ee31 1a05 	vadd.f32	s2, s2, s10
900246f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900246f8:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
900246fc:	eef0 6a43 	vmov.f32	s13, s6
90024700:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024704:	ee16 5a90 	vmov	r5, s13
90024708:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002470c:	ee61 7a27 	vmul.f32	s15, s2, s15
90024710:	ee77 2a62 	vsub.f32	s5, s14, s5
90024714:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024718:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002471c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024720:	ee12 2a90 	vmov	r2, s5
90024724:	eef0 2a47 	vmov.f32	s5, s14
90024728:	fb92 f3f3 	sdiv	r3, r2, r3
9002472c:	ee13 2a10 	vmov	r2, s6
90024730:	9327      	str	r3, [sp, #156]	@ 0x9c
90024732:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024734:	eeb0 3a67 	vmov.f32	s6, s15
90024738:	fb92 f3f3 	sdiv	r3, r2, r3
9002473c:	9328      	str	r3, [sp, #160]	@ 0xa0
9002473e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024740:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90024742:	3b01      	subs	r3, #1
90024744:	9316      	str	r3, [sp, #88]	@ 0x58
90024746:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024748:	bf08      	it	eq
9002474a:	4613      	moveq	r3, r2
9002474c:	9307      	str	r3, [sp, #28]
9002474e:	e5f9      	b.n	90024344 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90024750:	2800      	cmp	r0, #0
90024752:	f43f ae6b 	beq.w	9002442c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90024756:	f818 1001 	ldrb.w	r1, [r8, r1]
9002475a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002475e:	9108      	str	r1, [sp, #32]
90024760:	0e09      	lsrs	r1, r1, #24
90024762:	9110      	str	r1, [sp, #64]	@ 0x40
90024764:	e662      	b.n	9002442c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90024766:	f113 0801 	adds.w	r8, r3, #1
9002476a:	f53f af74 	bmi.w	90024656 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002476e:	4541      	cmp	r1, r8
90024770:	f6ff af71 	blt.w	90024656 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024774:	f11c 0801 	adds.w	r8, ip, #1
90024778:	f53f af6d 	bmi.w	90024656 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002477c:	45c6      	cmp	lr, r8
9002477e:	f6ff af6a 	blt.w	90024656 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024782:	b209      	sxth	r1, r1
90024784:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90024788:	fa0f f38e 	sxth.w	r3, lr
9002478c:	9100      	str	r1, [sp, #0]
9002478e:	4639      	mov	r1, r7
90024790:	9301      	str	r3, [sp, #4]
90024792:	4633      	mov	r3, r6
90024794:	e9cd 2004 	strd	r2, r0, [sp, #16]
90024798:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002479a:	9819      	ldr	r0, [sp, #100]	@ 0x64
9002479c:	f7ff fc7b 	bl	90024096 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900247a0:	e759      	b.n	90024656 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900247a2:	bf00      	nop
900247a4:	fffff800 	.word	0xfffff800
900247a8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900247aa:	f3c5 3003 	ubfx	r0, r5, #12, #4
900247ae:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900247b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
900247b4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900247b6:	1427      	asrs	r7, r4, #16
900247b8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900247ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900247be:	142b      	asrs	r3, r5, #16
900247c0:	fb01 7303 	mla	r3, r1, r3, r7
900247c4:	18e7      	adds	r7, r4, r3
900247c6:	5ce3      	ldrb	r3, [r4, r3]
900247c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900247cc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900247d0:	2a00      	cmp	r2, #0
900247d2:	f000 8127 	beq.w	90024a24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900247d6:	f897 e001 	ldrb.w	lr, [r7, #1]
900247da:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900247de:	940d      	str	r4, [sp, #52]	@ 0x34
900247e0:	0e24      	lsrs	r4, r4, #24
900247e2:	9414      	str	r4, [sp, #80]	@ 0x50
900247e4:	b170      	cbz	r0, 90024804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900247e6:	eb07 0e01 	add.w	lr, r7, r1
900247ea:	5c79      	ldrb	r1, [r7, r1]
900247ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900247f0:	9109      	str	r1, [sp, #36]	@ 0x24
900247f2:	0e09      	lsrs	r1, r1, #24
900247f4:	9111      	str	r1, [sp, #68]	@ 0x44
900247f6:	f89e 1001 	ldrb.w	r1, [lr, #1]
900247fa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900247fe:	910e      	str	r1, [sp, #56]	@ 0x38
90024800:	0e09      	lsrs	r1, r1, #24
90024802:	9115      	str	r1, [sp, #84]	@ 0x54
90024804:	b292      	uxth	r2, r2
90024806:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024808:	b280      	uxth	r0, r0
9002480a:	fb02 f800 	mul.w	r8, r2, r0
9002480e:	0112      	lsls	r2, r2, #4
90024810:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024814:	eba2 0e08 	sub.w	lr, r2, r8
90024818:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
9002481c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002481e:	b280      	uxth	r0, r0
90024820:	fa1f fe8e 	uxth.w	lr, lr
90024824:	1a09      	subs	r1, r1, r0
90024826:	fb0e f202 	mul.w	r2, lr, r2
9002482a:	b289      	uxth	r1, r1
9002482c:	fb01 220c 	mla	r2, r1, ip, r2
90024830:	fb00 2204 	mla	r2, r0, r4, r2
90024834:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024836:	fb08 2204 	mla	r2, r8, r4, r2
9002483a:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002483e:	2a00      	cmp	r2, #0
90024840:	f000 80e5 	beq.w	90024a0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90024844:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90024848:	d019      	beq.n	9002487e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002484a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002484e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024852:	fb0c fa0a 	mul.w	sl, ip, sl
90024856:	fb0c fc03 	mul.w	ip, ip, r3
9002485a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002485e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024862:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90024866:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002486a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002486e:	4453      	add	r3, sl
90024870:	0a3f      	lsrs	r7, r7, #8
90024872:	0a1b      	lsrs	r3, r3, #8
90024874:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024878:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002487c:	433b      	orrs	r3, r7
9002487e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024880:	2cff      	cmp	r4, #255	@ 0xff
90024882:	d020      	beq.n	900248c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90024884:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024886:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002488a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002488c:	4367      	muls	r7, r4
9002488e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024890:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024894:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024898:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002489a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002489e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900248a2:	fb04 fa0a 	mul.w	sl, r4, sl
900248a6:	44bc      	add	ip, r7
900248a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900248ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900248b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900248b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900248b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900248bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900248c0:	ea4c 040a 	orr.w	r4, ip, sl
900248c4:	940d      	str	r4, [sp, #52]	@ 0x34
900248c6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900248c8:	2cff      	cmp	r4, #255	@ 0xff
900248ca:	d020      	beq.n	9002490e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900248cc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900248ce:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900248d2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900248d4:	4367      	muls	r7, r4
900248d6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900248d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900248dc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900248e0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900248e2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900248e6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900248ea:	fb04 fa0a 	mul.w	sl, r4, sl
900248ee:	44bc      	add	ip, r7
900248f0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900248f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900248f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900248fc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024900:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024904:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024908:	ea4c 040a 	orr.w	r4, ip, sl
9002490c:	9409      	str	r4, [sp, #36]	@ 0x24
9002490e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024910:	2cff      	cmp	r4, #255	@ 0xff
90024912:	d020      	beq.n	90024956 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90024914:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024916:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002491a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002491c:	4367      	muls	r7, r4
9002491e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024920:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024924:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024928:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002492a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002492e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024932:	fb04 fa0a 	mul.w	sl, r4, sl
90024936:	44bc      	add	ip, r7
90024938:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002493c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024940:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024944:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024948:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002494c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024950:	ea4c 040a 	orr.w	r4, ip, sl
90024954:	940e      	str	r4, [sp, #56]	@ 0x38
90024956:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024958:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002495c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024960:	43d2      	mvns	r2, r2
90024962:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024966:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90024968:	b2d2      	uxtb	r2, r2
9002496a:	fb0e f707 	mul.w	r7, lr, r7
9002496e:	fb01 770c 	mla	r7, r1, ip, r7
90024972:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024976:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024978:	fb00 770c 	mla	r7, r0, ip, r7
9002497c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024980:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024982:	fb08 770c 	mla	r7, r8, ip, r7
90024986:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
9002498a:	fb0e fe0c 	mul.w	lr, lr, ip
9002498e:	0a3f      	lsrs	r7, r7, #8
90024990:	fb01 e303 	mla	r3, r1, r3, lr
90024994:	9909      	ldr	r1, [sp, #36]	@ 0x24
90024996:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
9002499a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002499e:	990e      	ldr	r1, [sp, #56]	@ 0x38
900249a0:	fb00 330a 	mla	r3, r0, sl, r3
900249a4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900249a8:	fb08 3c0c 	mla	ip, r8, ip, r3
900249ac:	f8b9 3000 	ldrh.w	r3, [r9]
900249b0:	1218      	asrs	r0, r3, #8
900249b2:	10d9      	asrs	r1, r3, #3
900249b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900249b8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900249bc:	00db      	lsls	r3, r3, #3
900249be:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900249c2:	4350      	muls	r0, r2
900249c4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900249c8:	b2db      	uxtb	r3, r3
900249ca:	4351      	muls	r1, r2
900249cc:	ea47 070c 	orr.w	r7, r7, ip
900249d0:	4353      	muls	r3, r2
900249d2:	1c42      	adds	r2, r0, #1
900249d4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900249d8:	0c3a      	lsrs	r2, r7, #16
900249da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900249de:	4a18      	ldr	r2, [pc, #96]	@ (90024a40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900249e0:	b2c0      	uxtb	r0, r0
900249e2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900249e6:	1c4a      	adds	r2, r1, #1
900249e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900249ec:	0a3a      	lsrs	r2, r7, #8
900249ee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900249f2:	00c9      	lsls	r1, r1, #3
900249f4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900249f8:	4301      	orrs	r1, r0
900249fa:	1c58      	adds	r0, r3, #1
900249fc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024a00:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024a04:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90024a08:	4308      	orrs	r0, r1
90024a0a:	f8a9 0000 	strh.w	r0, [r9]
90024a0e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024a10:	f109 0902 	add.w	r9, r9, #2
90024a14:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024a16:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
90024a1a:	441a      	add	r2, r3
90024a1c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024a1e:	9225      	str	r2, [sp, #148]	@ 0x94
90024a20:	441d      	add	r5, r3
90024a22:	e64c      	b.n	900246be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024a24:	2800      	cmp	r0, #0
90024a26:	f43f aeed 	beq.w	90024804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024a2a:	5c79      	ldrb	r1, [r7, r1]
90024a2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024a30:	9109      	str	r1, [sp, #36]	@ 0x24
90024a32:	0e09      	lsrs	r1, r1, #24
90024a34:	9111      	str	r1, [sp, #68]	@ 0x44
90024a36:	e6e5      	b.n	90024804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024a38:	b01b      	add	sp, #108	@ 0x6c
90024a3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024a3e:	bf00      	nop
90024a40:	fffff800 	.word	0xfffff800

90024a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90024a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024a48:	b085      	sub	sp, #20
90024a4a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90024a4e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024a52:	2800      	cmp	r0, #0
90024a54:	9103      	str	r1, [sp, #12]
90024a56:	fb00 7406 	mla	r4, r0, r6, r7
90024a5a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90024a5e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024a62:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90024a66:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90024a6a:	eb03 0904 	add.w	r9, r3, r4
90024a6e:	9501      	str	r5, [sp, #4]
90024a70:	f2c0 8150 	blt.w	90024d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024a74:	4583      	cmp	fp, r0
90024a76:	f340 814d 	ble.w	90024d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024a7a:	2f00      	cmp	r7, #0
90024a7c:	f2c0 8146 	blt.w	90024d0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024a80:	42be      	cmp	r6, r7
90024a82:	f340 8143 	ble.w	90024d0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024a86:	f813 c004 	ldrb.w	ip, [r3, r4]
90024a8a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90024a8e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90024a92:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024a96:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90024a9a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024a9e:	4355      	muls	r5, r2
90024aa0:	fb0c f203 	mul.w	r2, ip, r3
90024aa4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024aa8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90024aac:	441d      	add	r5, r3
90024aae:	f102 0320 	add.w	r3, r2, #32
90024ab2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024ab6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024aba:	0a1b      	lsrs	r3, r3, #8
90024abc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024ac0:	431c      	orrs	r4, r3
90024ac2:	1c7b      	adds	r3, r7, #1
90024ac4:	f100 812b 	bmi.w	90024d1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024ac8:	429e      	cmp	r6, r3
90024aca:	f340 8128 	ble.w	90024d1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024ace:	2900      	cmp	r1, #0
90024ad0:	f000 8128 	beq.w	90024d24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90024ad4:	9a01      	ldr	r2, [sp, #4]
90024ad6:	f899 3001 	ldrb.w	r3, [r9, #1]
90024ada:	8855      	ldrh	r5, [r2, #2]
90024adc:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024ae0:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90024ae4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024ae8:	fb08 f802 	mul.w	r8, r8, r2
90024aec:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90024af0:	435d      	muls	r5, r3
90024af2:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024af6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024afa:	44d0      	add	r8, sl
90024afc:	f105 0a20 	add.w	sl, r5, #32
90024b00:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024b04:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024b08:	0a2d      	lsrs	r5, r5, #8
90024b0a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024b0e:	432a      	orrs	r2, r5
90024b10:	3001      	adds	r0, #1
90024b12:	f100 810d 	bmi.w	90024d30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024b16:	4583      	cmp	fp, r0
90024b18:	f340 810a 	ble.w	90024d30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024b1c:	f1be 0f00 	cmp.w	lr, #0
90024b20:	f000 810b 	beq.w	90024d3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90024b24:	2f00      	cmp	r7, #0
90024b26:	f2c0 8100 	blt.w	90024d2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024b2a:	42be      	cmp	r6, r7
90024b2c:	f340 80fd 	ble.w	90024d2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024b30:	9801      	ldr	r0, [sp, #4]
90024b32:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90024b36:	f819 5006 	ldrb.w	r5, [r9, r6]
90024b3a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024b3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024b42:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90024b46:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90024b4a:	fb0a fa00 	mul.w	sl, sl, r0
90024b4e:	fb05 f808 	mul.w	r8, r5, r8
90024b52:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024b56:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90024b5a:	4482      	add	sl, r0
90024b5c:	f108 0020 	add.w	r0, r8, #32
90024b60:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024b64:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024b68:	0a00      	lsrs	r0, r0, #8
90024b6a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024b6e:	ea4b 0b00 	orr.w	fp, fp, r0
90024b72:	3701      	adds	r7, #1
90024b74:	f100 80e6 	bmi.w	90024d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024b78:	42be      	cmp	r6, r7
90024b7a:	f340 80e3 	ble.w	90024d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024b7e:	2900      	cmp	r1, #0
90024b80:	f000 80e3 	beq.w	90024d4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90024b84:	3601      	adds	r6, #1
90024b86:	9801      	ldr	r0, [sp, #4]
90024b88:	f819 7006 	ldrb.w	r7, [r9, r6]
90024b8c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024b90:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024b94:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90024b98:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024b9c:	fb09 f906 	mul.w	r9, r9, r6
90024ba0:	fb07 f800 	mul.w	r8, r7, r0
90024ba4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90024ba8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024bac:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90024bb0:	44d1      	add	r9, sl
90024bb2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024bb6:	f108 0020 	add.w	r0, r8, #32
90024bba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024bbe:	0a00      	lsrs	r0, r0, #8
90024bc0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024bc4:	4330      	orrs	r0, r6
90024bc6:	b28e      	uxth	r6, r1
90024bc8:	fa1f f98e 	uxth.w	r9, lr
90024bcc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024bd0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90024bd4:	fb06 f809 	mul.w	r8, r6, r9
90024bd8:	0136      	lsls	r6, r6, #4
90024bda:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024bde:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024be2:	9601      	str	r6, [sp, #4]
90024be4:	ea4a 0404 	orr.w	r4, sl, r4
90024be8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024bec:	fa1f f689 	uxth.w	r6, r9
90024bf0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024bf4:	fb11 f90e 	smulbb	r9, r1, lr
90024bf8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024bfc:	9602      	str	r6, [sp, #8]
90024bfe:	4626      	mov	r6, r4
90024c00:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024c04:	f1ce 0410 	rsb	r4, lr, #16
90024c08:	ea4a 0202 	orr.w	r2, sl, r2
90024c0c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024c10:	1a64      	subs	r4, r4, r1
90024c12:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024c16:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024c1a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024c1e:	434a      	muls	r2, r1
90024c20:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024c24:	ea4a 0000 	orr.w	r0, sl, r0
90024c28:	9903      	ldr	r1, [sp, #12]
90024c2a:	fb04 2406 	mla	r4, r4, r6, r2
90024c2e:	9e02      	ldr	r6, [sp, #8]
90024c30:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024c34:	fb09 4200 	mla	r2, r9, r0, r4
90024c38:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024c3c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024c40:	8808      	ldrh	r0, [r1, #0]
90024c42:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024c46:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90024c4a:	ea44 0b0b 	orr.w	fp, r4, fp
90024c4e:	9c01      	ldr	r4, [sp, #4]
90024c50:	b289      	uxth	r1, r1
90024c52:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90024c56:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024c5a:	1ba4      	subs	r4, r4, r6
90024c5c:	9e01      	ldr	r6, [sp, #4]
90024c5e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024c62:	eba6 0608 	sub.w	r6, r6, r8
90024c66:	b2a4      	uxth	r4, r4
90024c68:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024c6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024c70:	b2b6      	uxth	r6, r6
90024c72:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024c76:	4373      	muls	r3, r6
90024c78:	ea42 0e0e 	orr.w	lr, r2, lr
90024c7c:	fb0c 3304 	mla	r3, ip, r4, r3
90024c80:	9c02      	ldr	r4, [sp, #8]
90024c82:	fa1f f28e 	uxth.w	r2, lr
90024c86:	fb04 3505 	mla	r5, r4, r5, r3
90024c8a:	10d4      	asrs	r4, r2, #3
90024c8c:	fb08 5707 	mla	r7, r8, r7, r5
90024c90:	1215      	asrs	r5, r2, #8
90024c92:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90024c96:	00d2      	lsls	r2, r2, #3
90024c98:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024c9c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024ca0:	b2d2      	uxtb	r2, r2
90024ca2:	434f      	muls	r7, r1
90024ca4:	1c7b      	adds	r3, r7, #1
90024ca6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90024caa:	1203      	asrs	r3, r0, #8
90024cac:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90024cb0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024cb4:	b2ff      	uxtb	r7, r7
90024cb6:	fb13 f307 	smulbb	r3, r3, r7
90024cba:	fb05 3501 	mla	r5, r5, r1, r3
90024cbe:	10c3      	asrs	r3, r0, #3
90024cc0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024cc4:	b2ad      	uxth	r5, r5
90024cc6:	fb13 f307 	smulbb	r3, r3, r7
90024cca:	fb04 3401 	mla	r4, r4, r1, r3
90024cce:	00c3      	lsls	r3, r0, #3
90024cd0:	b2db      	uxtb	r3, r3
90024cd2:	b2a4      	uxth	r4, r4
90024cd4:	fb13 f307 	smulbb	r3, r3, r7
90024cd8:	fb02 3101 	mla	r1, r2, r1, r3
90024cdc:	1c6b      	adds	r3, r5, #1
90024cde:	1c62      	adds	r2, r4, #1
90024ce0:	b289      	uxth	r1, r1
90024ce2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024ce6:	1c4b      	adds	r3, r1, #1
90024ce8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024cec:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024cf0:	9a03      	ldr	r2, [sp, #12]
90024cf2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024cf6:	0964      	lsrs	r4, r4, #5
90024cf8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024cfc:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90024d00:	432b      	orrs	r3, r5
90024d02:	4323      	orrs	r3, r4
90024d04:	8013      	strh	r3, [r2, #0]
90024d06:	b005      	add	sp, #20
90024d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024d0c:	f04f 0c00 	mov.w	ip, #0
90024d10:	4664      	mov	r4, ip
90024d12:	e6d6      	b.n	90024ac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90024d14:	2300      	movs	r3, #0
90024d16:	469c      	mov	ip, r3
90024d18:	461a      	mov	r2, r3
90024d1a:	461c      	mov	r4, r3
90024d1c:	e6f8      	b.n	90024b10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024d1e:	2300      	movs	r3, #0
90024d20:	461a      	mov	r2, r3
90024d22:	e6f5      	b.n	90024b10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024d24:	460b      	mov	r3, r1
90024d26:	460a      	mov	r2, r1
90024d28:	e6f2      	b.n	90024b10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024d2a:	2500      	movs	r5, #0
90024d2c:	46ab      	mov	fp, r5
90024d2e:	e720      	b.n	90024b72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90024d30:	2700      	movs	r7, #0
90024d32:	463d      	mov	r5, r7
90024d34:	4638      	mov	r0, r7
90024d36:	46bb      	mov	fp, r7
90024d38:	e745      	b.n	90024bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024d3a:	4677      	mov	r7, lr
90024d3c:	4675      	mov	r5, lr
90024d3e:	4670      	mov	r0, lr
90024d40:	46f3      	mov	fp, lr
90024d42:	e740      	b.n	90024bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024d44:	2700      	movs	r7, #0
90024d46:	4638      	mov	r0, r7
90024d48:	e73d      	b.n	90024bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024d4a:	460f      	mov	r7, r1
90024d4c:	4608      	mov	r0, r1
90024d4e:	e73a      	b.n	90024bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90024d50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024d54:	b097      	sub	sp, #92	@ 0x5c
90024d56:	9214      	str	r2, [sp, #80]	@ 0x50
90024d58:	9308      	str	r3, [sp, #32]
90024d5a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024d5c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90024d60:	9015      	str	r0, [sp, #84]	@ 0x54
90024d62:	9312      	str	r3, [sp, #72]	@ 0x48
90024d64:	6850      	ldr	r0, [r2, #4]
90024d66:	9111      	str	r1, [sp, #68]	@ 0x44
90024d68:	6812      	ldr	r2, [r2, #0]
90024d6a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90024d6e:	fb00 1303 	mla	r3, r0, r3, r1
90024d72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024d76:	9309      	str	r3, [sp, #36]	@ 0x24
90024d78:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024d7a:	681b      	ldr	r3, [r3, #0]
90024d7c:	930b      	str	r3, [sp, #44]	@ 0x2c
90024d7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024d80:	685b      	ldr	r3, [r3, #4]
90024d82:	930c      	str	r3, [sp, #48]	@ 0x30
90024d84:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90024d88:	930a      	str	r3, [sp, #40]	@ 0x28
90024d8a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024d8c:	2b00      	cmp	r3, #0
90024d8e:	dc03      	bgt.n	90024d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024d90:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90024d92:	2b00      	cmp	r3, #0
90024d94:	f340 83cd 	ble.w	90025532 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024d98:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024d9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024d9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024da2:	1e48      	subs	r0, r1, #1
90024da4:	1e55      	subs	r5, r2, #1
90024da6:	9b08      	ldr	r3, [sp, #32]
90024da8:	2b00      	cmp	r3, #0
90024daa:	f340 81a5 	ble.w	900250f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90024dae:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90024db0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024db2:	1436      	asrs	r6, r6, #16
90024db4:	ea4f 4323 	mov.w	r3, r3, asr #16
90024db8:	d406      	bmi.n	90024dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024dba:	4286      	cmp	r6, r0
90024dbc:	da04      	bge.n	90024dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024dbe:	2b00      	cmp	r3, #0
90024dc0:	db02      	blt.n	90024dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024dc2:	42ab      	cmp	r3, r5
90024dc4:	f2c0 8199 	blt.w	900250fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024dc8:	3601      	adds	r6, #1
90024dca:	f100 8186 	bmi.w	900250da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024dce:	42b1      	cmp	r1, r6
90024dd0:	f2c0 8183 	blt.w	900250da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024dd4:	3301      	adds	r3, #1
90024dd6:	f100 8180 	bmi.w	900250da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024dda:	429a      	cmp	r2, r3
90024ddc:	f2c0 817d 	blt.w	900250da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024de0:	9b08      	ldr	r3, [sp, #32]
90024de2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024de6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90024de8:	9313      	str	r3, [sp, #76]	@ 0x4c
90024dea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024dec:	2b00      	cmp	r3, #0
90024dee:	f340 81a6 	ble.w	9002513e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024df2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024df4:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024df6:	1418      	asrs	r0, r3, #16
90024df8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024dfa:	142d      	asrs	r5, r5, #16
90024dfc:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024e00:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024e02:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024e06:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024e08:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024e0c:	f100 81fa 	bmi.w	90025204 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024e10:	f102 3eff 	add.w	lr, r2, #4294967295	@ 0xffffffff
90024e14:	4575      	cmp	r5, lr
90024e16:	f280 81f5 	bge.w	90025204 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024e1a:	2800      	cmp	r0, #0
90024e1c:	f2c0 81f2 	blt.w	90025204 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024e20:	f103 3eff 	add.w	lr, r3, #4294967295	@ 0xffffffff
90024e24:	4570      	cmp	r0, lr
90024e26:	f280 81ed 	bge.w	90025204 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024e2a:	b212      	sxth	r2, r2
90024e2c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024e2e:	fa1f fe81 	uxth.w	lr, r1
90024e32:	fb00 5002 	mla	r0, r0, r2, r5
90024e36:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024e3a:	eb03 0a00 	add.w	sl, r3, r0
90024e3e:	f813 9000 	ldrb.w	r9, [r3, r0]
90024e42:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024e46:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024e4a:	b29b      	uxth	r3, r3
90024e4c:	f1bc 0f00 	cmp.w	ip, #0
90024e50:	f000 81bb 	beq.w	900251ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90024e54:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024e58:	eb0a 0b02 	add.w	fp, sl, r2
90024e5c:	fa1f fa8c 	uxth.w	sl, ip
90024e60:	940d      	str	r4, [sp, #52]	@ 0x34
90024e62:	fb0a fe0e 	mul.w	lr, sl, lr
90024e66:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024e6a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024e6e:	eba5 050e 	sub.w	r5, r5, lr
90024e72:	940e      	str	r4, [sp, #56]	@ 0x38
90024e74:	fa1f fa8a 	uxth.w	sl, sl
90024e78:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024e7a:	b2ad      	uxth	r5, r5
90024e7c:	eba3 030a 	sub.w	r3, r3, sl
90024e80:	fb08 f505 	mul.w	r5, r8, r5
90024e84:	b29b      	uxth	r3, r3
90024e86:	fb09 5303 	mla	r3, r9, r3, r5
90024e8a:	fb0a 3304 	mla	r3, sl, r4, r3
90024e8e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024e90:	fb0e 3304 	mla	r3, lr, r4, r3
90024e94:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024e98:	2b00      	cmp	r3, #0
90024e9a:	f000 8111 	beq.w	900250c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e9e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024ea0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024ea4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024ea8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024eac:	f000 8192 	beq.w	900251d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024eb0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024eb4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024eb8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024ebc:	fb0a fe0e 	mul.w	lr, sl, lr
90024ec0:	fb09 f000 	mul.w	r0, r9, r0
90024ec4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024ec8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024ecc:	f100 0b20 	add.w	fp, r0, #32
90024ed0:	44ce      	add	lr, r9
90024ed2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90024ed6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024eda:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024ede:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024ee2:	ea4e 0909 	orr.w	r9, lr, r9
90024ee6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024eea:	8868      	ldrh	r0, [r5, #2]
90024eec:	d019      	beq.n	90024f22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024eee:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024ef2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024ef6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024efa:	fb0a fe0e 	mul.w	lr, sl, lr
90024efe:	fb08 f800 	mul.w	r8, r8, r0
90024f02:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024f06:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024f0a:	f108 0b20 	add.w	fp, r8, #32
90024f0e:	4486      	add	lr, r0
90024f10:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90024f14:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024f18:	0a00      	lsrs	r0, r0, #8
90024f1a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024f1e:	ea4e 0000 	orr.w	r0, lr, r0
90024f22:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024f26:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024f2a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024f2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024f32:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024f36:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024f3a:	ea4e 0909 	orr.w	r9, lr, r9
90024f3e:	ea4a 0000 	orr.w	r0, sl, r0
90024f42:	f1bc 0f00 	cmp.w	ip, #0
90024f46:	f000 8147 	beq.w	900251d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90024f4a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90024f4e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024f50:	3a01      	subs	r2, #1
90024f52:	2cff      	cmp	r4, #255	@ 0xff
90024f54:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024f58:	f102 0202 	add.w	r2, r2, #2
90024f5c:	eb05 0e02 	add.w	lr, r5, r2
90024f60:	5aaa      	ldrh	r2, [r5, r2]
90024f62:	d018      	beq.n	90024f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90024f64:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90024f68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024f6c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024f70:	fb04 fa02 	mul.w	sl, r4, r2
90024f74:	fb08 f805 	mul.w	r8, r8, r5
90024f78:	f10a 0520 	add.w	r5, sl, #32
90024f7c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024f80:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024f84:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024f88:	4442      	add	r2, r8
90024f8a:	0a2d      	lsrs	r5, r5, #8
90024f8c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024f90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024f94:	432a      	orrs	r2, r5
90024f96:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024f98:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024f9c:	2cff      	cmp	r4, #255	@ 0xff
90024f9e:	d01a      	beq.n	90024fd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90024fa0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90024fa4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024fa8:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024fac:	fb04 fa05 	mul.w	sl, r4, r5
90024fb0:	fb08 f80e 	mul.w	r8, r8, lr
90024fb4:	f10a 0e20 	add.w	lr, sl, #32
90024fb8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024fbc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024fc0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90024fc4:	4445      	add	r5, r8
90024fc6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024fca:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90024fce:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90024fd2:	ea45 050e 	orr.w	r5, r5, lr
90024fd6:	fb1c fe01 	smulbb	lr, ip, r1
90024fda:	f1cc 0810 	rsb	r8, ip, #16
90024fde:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024fe2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024fe6:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024fea:	eba8 0801 	sub.w	r8, r8, r1
90024fee:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90024ff2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024ff6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024ffa:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024ffe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90025002:	ea4a 0202 	orr.w	r2, sl, r2
90025006:	4341      	muls	r1, r0
90025008:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9002500c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025010:	fb09 1108 	mla	r1, r9, r8, r1
90025014:	ea4b 0505 	orr.w	r5, fp, r5
90025018:	fb0c 1102 	mla	r1, ip, r2, r1
9002501c:	fb0e 1e05 	mla	lr, lr, r5, r1
90025020:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025024:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025028:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002502c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025030:	ea42 0e0e 	orr.w	lr, r2, lr
90025034:	fa1f f28e 	uxth.w	r2, lr
90025038:	2bff      	cmp	r3, #255	@ 0xff
9002503a:	d103      	bne.n	90025044 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002503c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002503e:	29ff      	cmp	r1, #255	@ 0xff
90025040:	f000 80de 	beq.w	90025200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90025044:	990a      	ldr	r1, [sp, #40]	@ 0x28
90025046:	1215      	asrs	r5, r2, #8
90025048:	8838      	ldrh	r0, [r7, #0]
9002504a:	434b      	muls	r3, r1
9002504c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025050:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025052:	f103 0c01 	add.w	ip, r3, #1
90025056:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9002505a:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002505e:	fa5f fc83 	uxtb.w	ip, r3
90025062:	1203      	asrs	r3, r0, #8
90025064:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025068:	fb13 f30c 	smulbb	r3, r3, ip
9002506c:	fb05 3501 	mla	r5, r5, r1, r3
90025070:	10c3      	asrs	r3, r0, #3
90025072:	10d1      	asrs	r1, r2, #3
90025074:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025078:	00d2      	lsls	r2, r2, #3
9002507a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002507e:	b2ad      	uxth	r5, r5
90025080:	fb13 f30c 	smulbb	r3, r3, ip
90025084:	b2d2      	uxtb	r2, r2
90025086:	fb01 3104 	mla	r1, r1, r4, r3
9002508a:	00c3      	lsls	r3, r0, #3
9002508c:	b2db      	uxtb	r3, r3
9002508e:	b289      	uxth	r1, r1
90025090:	fb13 f30c 	smulbb	r3, r3, ip
90025094:	fb02 3304 	mla	r3, r2, r4, r3
90025098:	b29a      	uxth	r2, r3
9002509a:	1c6b      	adds	r3, r5, #1
9002509c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900250a0:	1c53      	adds	r3, r2, #1
900250a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900250a6:	1c4a      	adds	r2, r1, #1
900250a8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900250ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900250b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900250b4:	0949      	lsrs	r1, r1, #5
900250b6:	432b      	orrs	r3, r5
900250b8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900250bc:	430b      	orrs	r3, r1
900250be:	803b      	strh	r3, [r7, #0]
900250c0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900250c2:	3702      	adds	r7, #2
900250c4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900250c6:	4413      	add	r3, r2
900250c8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900250ca:	9321      	str	r3, [sp, #132]	@ 0x84
900250cc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900250ce:	441a      	add	r2, r3
900250d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900250d2:	3b01      	subs	r3, #1
900250d4:	9222      	str	r2, [sp, #136]	@ 0x88
900250d6:	9313      	str	r3, [sp, #76]	@ 0x4c
900250d8:	e687      	b.n	90024dea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900250da:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900250dc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
900250de:	9c22      	ldr	r4, [sp, #136]	@ 0x88
900250e0:	4433      	add	r3, r6
900250e2:	9321      	str	r3, [sp, #132]	@ 0x84
900250e4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900250e6:	441c      	add	r4, r3
900250e8:	9b08      	ldr	r3, [sp, #32]
900250ea:	3b01      	subs	r3, #1
900250ec:	9422      	str	r4, [sp, #136]	@ 0x88
900250ee:	9308      	str	r3, [sp, #32]
900250f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900250f2:	3302      	adds	r3, #2
900250f4:	9309      	str	r3, [sp, #36]	@ 0x24
900250f6:	e656      	b.n	90024da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900250f8:	d028      	beq.n	9002514c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900250fa:	9b08      	ldr	r3, [sp, #32]
900250fc:	9823      	ldr	r0, [sp, #140]	@ 0x8c
900250fe:	3b01      	subs	r3, #1
90025100:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90025102:	fb00 5003 	mla	r0, r0, r3, r5
90025106:	1400      	asrs	r0, r0, #16
90025108:	f53f ae6a 	bmi.w	90024de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002510c:	3901      	subs	r1, #1
9002510e:	4288      	cmp	r0, r1
90025110:	f6bf ae66 	bge.w	90024de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025114:	9924      	ldr	r1, [sp, #144]	@ 0x90
90025116:	9822      	ldr	r0, [sp, #136]	@ 0x88
90025118:	fb01 0303 	mla	r3, r1, r3, r0
9002511c:	141b      	asrs	r3, r3, #16
9002511e:	f53f ae5f 	bmi.w	90024de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025122:	3a01      	subs	r2, #1
90025124:	4293      	cmp	r3, r2
90025126:	f6bf ae5b 	bge.w	90024de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002512a:	9b08      	ldr	r3, [sp, #32]
9002512c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025130:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90025134:	9313      	str	r3, [sp, #76]	@ 0x4c
90025136:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90025138:	2b00      	cmp	r3, #0
9002513a:	f300 8082 	bgt.w	90025242 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
9002513e:	9b08      	ldr	r3, [sp, #32]
90025140:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025144:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025146:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002514a:	9309      	str	r3, [sp, #36]	@ 0x24
9002514c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002514e:	2b00      	cmp	r3, #0
90025150:	f340 81ef 	ble.w	90025532 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90025154:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025158:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002515a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002515e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025162:	eef0 6a62 	vmov.f32	s13, s5
90025166:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002516a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002516e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025172:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90025176:	eef0 6a43 	vmov.f32	s13, s6
9002517a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002517e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90025182:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025186:	ee61 7a27 	vmul.f32	s15, s2, s15
9002518a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002518e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025192:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025196:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002519a:	ee12 2a90 	vmov	r2, s5
9002519e:	eef0 2a47 	vmov.f32	s5, s14
900251a2:	fb92 f3f3 	sdiv	r3, r2, r3
900251a6:	ee13 2a10 	vmov	r2, s6
900251aa:	9323      	str	r3, [sp, #140]	@ 0x8c
900251ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900251ae:	eeb0 3a67 	vmov.f32	s6, s15
900251b2:	fb92 f3f3 	sdiv	r3, r2, r3
900251b6:	9324      	str	r3, [sp, #144]	@ 0x90
900251b8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900251ba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900251bc:	3b01      	subs	r3, #1
900251be:	9311      	str	r3, [sp, #68]	@ 0x44
900251c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900251c2:	bf08      	it	eq
900251c4:	4613      	moveq	r3, r2
900251c6:	9308      	str	r3, [sp, #32]
900251c8:	e5df      	b.n	90024d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900251ca:	fb08 f505 	mul.w	r5, r8, r5
900251ce:	fb09 5303 	mla	r3, r9, r3, r5
900251d2:	e65f      	b.n	90024e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900251d4:	4681      	mov	r9, r0
900251d6:	e686      	b.n	90024ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900251d8:	f1c1 0210 	rsb	r2, r1, #16
900251dc:	4341      	muls	r1, r0
900251de:	fb09 1902 	mla	r9, r9, r2, r1
900251e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900251e6:	ea4f 5259 	mov.w	r2, r9, lsr #21
900251ea:	ea4f 1959 	mov.w	r9, r9, lsr #5
900251ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900251f2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900251f6:	ea42 0909 	orr.w	r9, r2, r9
900251fa:	fa1f f289 	uxth.w	r2, r9
900251fe:	e71b      	b.n	90025038 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90025200:	803a      	strh	r2, [r7, #0]
90025202:	e75d      	b.n	900250c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025204:	f115 0e01 	adds.w	lr, r5, #1
90025208:	f53f af5a 	bmi.w	900250c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002520c:	4572      	cmp	r2, lr
9002520e:	f6ff af57 	blt.w	900250c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025212:	f110 0e01 	adds.w	lr, r0, #1
90025216:	f53f af53 	bmi.w	900250c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002521a:	4573      	cmp	r3, lr
9002521c:	f6ff af50 	blt.w	900250c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025220:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025222:	b21b      	sxth	r3, r3
90025224:	b212      	sxth	r2, r2
90025226:	9502      	str	r5, [sp, #8]
90025228:	9301      	str	r3, [sp, #4]
9002522a:	9200      	str	r2, [sp, #0]
9002522c:	e9cd 0103 	strd	r0, r1, [sp, #12]
90025230:	e9cd c405 	strd	ip, r4, [sp, #20]
90025234:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90025238:	4639      	mov	r1, r7
9002523a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002523c:	f7ff fc02 	bl	90024a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90025240:	e73e      	b.n	900250c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025242:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025244:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025248:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002524a:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002524e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025250:	fa1f fc82 	uxth.w	ip, r2
90025254:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025258:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002525a:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002525e:	141f      	asrs	r7, r3, #16
90025260:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025262:	141b      	asrs	r3, r3, #16
90025264:	fb01 3707 	mla	r7, r1, r7, r3
90025268:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002526a:	eb03 0a07 	add.w	sl, r3, r7
9002526e:	f813 9007 	ldrb.w	r9, [r3, r7]
90025272:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90025276:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002527a:	b29b      	uxth	r3, r3
9002527c:	2d00      	cmp	r5, #0
9002527e:	f000 813d 	beq.w	900254fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90025282:	f81a 4001 	ldrb.w	r4, [sl, r1]
90025286:	eb0a 0b01 	add.w	fp, sl, r1
9002528a:	fa1f fa85 	uxth.w	sl, r5
9002528e:	940f      	str	r4, [sp, #60]	@ 0x3c
90025290:	fb0a fc0c 	mul.w	ip, sl, ip
90025294:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025298:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
9002529c:	eba0 000c 	sub.w	r0, r0, ip
900252a0:	9410      	str	r4, [sp, #64]	@ 0x40
900252a2:	fa1f fa8a 	uxth.w	sl, sl
900252a6:	b280      	uxth	r0, r0
900252a8:	eba3 030a 	sub.w	r3, r3, sl
900252ac:	fb08 f000 	mul.w	r0, r8, r0
900252b0:	b29b      	uxth	r3, r3
900252b2:	fb09 0303 	mla	r3, r9, r3, r0
900252b6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900252b8:	fb0a 3300 	mla	r3, sl, r0, r3
900252bc:	fb0c 3304 	mla	r3, ip, r4, r3
900252c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900252c4:	2b00      	cmp	r3, #0
900252c6:	f000 810b 	beq.w	900254e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900252ca:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900252cc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900252d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900252d2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900252d6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900252da:	f000 8114 	beq.w	90025506 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900252de:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900252e2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900252e6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900252ea:	fb0a fc0c 	mul.w	ip, sl, ip
900252ee:	fb09 f707 	mul.w	r7, r9, r7
900252f2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900252f6:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900252fa:	f107 0b20 	add.w	fp, r7, #32
900252fe:	44cc      	add	ip, r9
90025300:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025304:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025308:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002530c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025310:	ea4c 0909 	orr.w	r9, ip, r9
90025314:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90025318:	8847      	ldrh	r7, [r0, #2]
9002531a:	d019      	beq.n	90025350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
9002531c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025320:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025324:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025328:	fb0a fc0c 	mul.w	ip, sl, ip
9002532c:	fb08 f807 	mul.w	r8, r8, r7
90025330:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025334:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025338:	f108 0b20 	add.w	fp, r8, #32
9002533c:	44bc      	add	ip, r7
9002533e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025342:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025346:	0a3f      	lsrs	r7, r7, #8
90025348:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002534c:	ea4c 0707 	orr.w	r7, ip, r7
90025350:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025354:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025358:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9002535c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025360:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90025364:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025368:	ea4c 0909 	orr.w	r9, ip, r9
9002536c:	ea4a 0707 	orr.w	r7, sl, r7
90025370:	2d00      	cmp	r5, #0
90025372:	f000 80ca 	beq.w	9002550a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90025376:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002537a:	3901      	subs	r1, #1
9002537c:	0049      	lsls	r1, r1, #1
9002537e:	3102      	adds	r1, #2
90025380:	eb00 0c01 	add.w	ip, r0, r1
90025384:	5a41      	ldrh	r1, [r0, r1]
90025386:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90025388:	28ff      	cmp	r0, #255	@ 0xff
9002538a:	d019      	beq.n	900253c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
9002538c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90025390:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025392:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025396:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002539a:	fb04 fa01 	mul.w	sl, r4, r1
9002539e:	fb08 f800 	mul.w	r8, r8, r0
900253a2:	f10a 0020 	add.w	r0, sl, #32
900253a6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900253aa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900253ae:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900253b2:	4441      	add	r1, r8
900253b4:	0a00      	lsrs	r0, r0, #8
900253b6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900253ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900253be:	4301      	orrs	r1, r0
900253c0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900253c2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900253c6:	2cff      	cmp	r4, #255	@ 0xff
900253c8:	d01a      	beq.n	90025400 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900253ca:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900253ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900253d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900253d6:	fb04 fa00 	mul.w	sl, r4, r0
900253da:	fb08 f80c 	mul.w	r8, r8, ip
900253de:	f10a 0c20 	add.w	ip, sl, #32
900253e2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900253e6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900253ea:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900253ee:	4440      	add	r0, r8
900253f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900253f4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900253f8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900253fc:	ea40 000c 	orr.w	r0, r0, ip
90025400:	fb15 fc02 	smulbb	ip, r5, r2
90025404:	f1c5 0810 	rsb	r8, r5, #16
90025408:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002540c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025410:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025414:	eba8 0802 	sub.w	r8, r8, r2
90025418:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9002541c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025420:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025424:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025428:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
9002542c:	ea4a 0101 	orr.w	r1, sl, r1
90025430:	437a      	muls	r2, r7
90025432:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025436:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002543a:	fb09 2208 	mla	r2, r9, r8, r2
9002543e:	ea4b 0000 	orr.w	r0, fp, r0
90025442:	fb05 2201 	mla	r2, r5, r1, r2
90025446:	fb0c 2200 	mla	r2, ip, r0, r2
9002544a:	0d57      	lsrs	r7, r2, #21
9002544c:	0952      	lsrs	r2, r2, #5
9002544e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025452:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025456:	433a      	orrs	r2, r7
90025458:	2bff      	cmp	r3, #255	@ 0xff
9002545a:	b292      	uxth	r2, r2
9002545c:	d102      	bne.n	90025464 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002545e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025460:	29ff      	cmp	r1, #255	@ 0xff
90025462:	d063      	beq.n	9002552c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90025464:	980a      	ldr	r0, [sp, #40]	@ 0x28
90025466:	1215      	asrs	r5, r2, #8
90025468:	f8be 1000 	ldrh.w	r1, [lr]
9002546c:	4343      	muls	r3, r0
9002546e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025470:	10cf      	asrs	r7, r1, #3
90025472:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025476:	1c58      	adds	r0, r3, #1
90025478:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002547c:	eb00 2323 	add.w	r3, r0, r3, asr #8
90025480:	1208      	asrs	r0, r1, #8
90025482:	ea6f 2323 	mvn.w	r3, r3, asr #8
90025486:	00c9      	lsls	r1, r1, #3
90025488:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002548c:	b2db      	uxtb	r3, r3
9002548e:	b2c9      	uxtb	r1, r1
90025490:	fb10 f003 	smulbb	r0, r0, r3
90025494:	fb11 f103 	smulbb	r1, r1, r3
90025498:	fb05 0504 	mla	r5, r5, r4, r0
9002549c:	10d0      	asrs	r0, r2, #3
9002549e:	fb17 f703 	smulbb	r7, r7, r3
900254a2:	00d2      	lsls	r2, r2, #3
900254a4:	b2ad      	uxth	r5, r5
900254a6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900254aa:	b2d2      	uxtb	r2, r2
900254ac:	fb00 7004 	mla	r0, r0, r4, r7
900254b0:	1c6b      	adds	r3, r5, #1
900254b2:	fb02 1204 	mla	r2, r2, r4, r1
900254b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900254ba:	b292      	uxth	r2, r2
900254bc:	b280      	uxth	r0, r0
900254be:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900254c2:	1c57      	adds	r7, r2, #1
900254c4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900254c8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900254cc:	433d      	orrs	r5, r7
900254ce:	1c47      	adds	r7, r0, #1
900254d0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900254d4:	097f      	lsrs	r7, r7, #5
900254d6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900254da:	433d      	orrs	r5, r7
900254dc:	f8ae 5000 	strh.w	r5, [lr]
900254e0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900254e2:	f10e 0e02 	add.w	lr, lr, #2
900254e6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900254e8:	4413      	add	r3, r2
900254ea:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900254ec:	9321      	str	r3, [sp, #132]	@ 0x84
900254ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900254f0:	441a      	add	r2, r3
900254f2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900254f4:	3b01      	subs	r3, #1
900254f6:	9222      	str	r2, [sp, #136]	@ 0x88
900254f8:	9313      	str	r3, [sp, #76]	@ 0x4c
900254fa:	e61c      	b.n	90025136 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900254fc:	fb08 f000 	mul.w	r0, r8, r0
90025500:	fb09 0303 	mla	r3, r9, r3, r0
90025504:	e6dc      	b.n	900252c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90025506:	46b9      	mov	r9, r7
90025508:	e704      	b.n	90025314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002550a:	f1c2 0110 	rsb	r1, r2, #16
9002550e:	437a      	muls	r2, r7
90025510:	fb09 2901 	mla	r9, r9, r1, r2
90025514:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025518:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002551c:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025520:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025524:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025528:	4302      	orrs	r2, r0
9002552a:	e795      	b.n	90025458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
9002552c:	f8ae 2000 	strh.w	r2, [lr]
90025530:	e7d6      	b.n	900254e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90025532:	b017      	add	sp, #92	@ 0x5c
90025534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025538 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90025538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002553c:	b085      	sub	sp, #20
9002553e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90025542:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90025546:	2800      	cmp	r0, #0
90025548:	9103      	str	r1, [sp, #12]
9002554a:	fb00 7406 	mla	r4, r0, r6, r7
9002554e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90025552:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90025556:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002555a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002555e:	eb02 0904 	add.w	r9, r2, r4
90025562:	9501      	str	r5, [sp, #4]
90025564:	f2c0 8141 	blt.w	900257ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90025568:	4583      	cmp	fp, r0
9002556a:	f340 813e 	ble.w	900257ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002556e:	2f00      	cmp	r7, #0
90025570:	f2c0 8137 	blt.w	900257e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90025574:	42be      	cmp	r6, r7
90025576:	f340 8134 	ble.w	900257e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002557a:	f812 c004 	ldrb.w	ip, [r2, r4]
9002557e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90025582:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90025586:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002558a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
9002558e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025592:	4355      	muls	r5, r2
90025594:	fb0c f203 	mul.w	r2, ip, r3
90025598:	ea04 1355 	and.w	r3, r4, r5, lsr #5
9002559c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900255a0:	441d      	add	r5, r3
900255a2:	f102 0320 	add.w	r3, r2, #32
900255a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900255aa:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900255ae:	0a1b      	lsrs	r3, r3, #8
900255b0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900255b4:	431c      	orrs	r4, r3
900255b6:	1c7b      	adds	r3, r7, #1
900255b8:	f100 811c 	bmi.w	900257f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900255bc:	429e      	cmp	r6, r3
900255be:	f340 8119 	ble.w	900257f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900255c2:	2900      	cmp	r1, #0
900255c4:	f000 8119 	beq.w	900257fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900255c8:	9a01      	ldr	r2, [sp, #4]
900255ca:	f899 3001 	ldrb.w	r3, [r9, #1]
900255ce:	8855      	ldrh	r5, [r2, #2]
900255d0:	ea4f 08e3 	mov.w	r8, r3, asr #3
900255d4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900255d8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900255dc:	fb08 f802 	mul.w	r8, r8, r2
900255e0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900255e4:	435d      	muls	r5, r3
900255e6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900255ea:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900255ee:	44d0      	add	r8, sl
900255f0:	f105 0a20 	add.w	sl, r5, #32
900255f4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900255f8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900255fc:	0a2d      	lsrs	r5, r5, #8
900255fe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025602:	432a      	orrs	r2, r5
90025604:	3001      	adds	r0, #1
90025606:	f100 80fe 	bmi.w	90025806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002560a:	4583      	cmp	fp, r0
9002560c:	f340 80fb 	ble.w	90025806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025610:	f1be 0f00 	cmp.w	lr, #0
90025614:	f000 80fc 	beq.w	90025810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90025618:	2f00      	cmp	r7, #0
9002561a:	f2c0 80f1 	blt.w	90025800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002561e:	42be      	cmp	r6, r7
90025620:	f340 80ee 	ble.w	90025800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025624:	9801      	ldr	r0, [sp, #4]
90025626:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002562a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002562e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90025632:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90025636:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002563a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002563e:	fb0a fa00 	mul.w	sl, sl, r0
90025642:	fb05 f808 	mul.w	r8, r5, r8
90025646:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002564a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002564e:	4482      	add	sl, r0
90025650:	f108 0020 	add.w	r0, r8, #32
90025654:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025658:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
9002565c:	0a00      	lsrs	r0, r0, #8
9002565e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025662:	ea4b 0b00 	orr.w	fp, fp, r0
90025666:	3701      	adds	r7, #1
90025668:	f100 80d7 	bmi.w	9002581a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
9002566c:	42be      	cmp	r6, r7
9002566e:	f340 80d4 	ble.w	9002581a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90025672:	2900      	cmp	r1, #0
90025674:	f000 80d4 	beq.w	90025820 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90025678:	3601      	adds	r6, #1
9002567a:	9801      	ldr	r0, [sp, #4]
9002567c:	f819 7006 	ldrb.w	r7, [r9, r6]
90025680:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90025684:	ea4f 09e7 	mov.w	r9, r7, asr #3
90025688:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
9002568c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025690:	fb09 f906 	mul.w	r9, r9, r6
90025694:	fb07 f800 	mul.w	r8, r7, r0
90025698:	f64f 001f 	movw	r0, #63519	@ 0xf81f
9002569c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900256a0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900256a4:	44d1      	add	r9, sl
900256a6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900256aa:	f108 0020 	add.w	r0, r8, #32
900256ae:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900256b2:	0a00      	lsrs	r0, r0, #8
900256b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900256b8:	4330      	orrs	r0, r6
900256ba:	b28e      	uxth	r6, r1
900256bc:	fa1f f98e 	uxth.w	r9, lr
900256c0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900256c4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900256c8:	fb06 f809 	mul.w	r8, r6, r9
900256cc:	0136      	lsls	r6, r6, #4
900256ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900256d2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900256d6:	9601      	str	r6, [sp, #4]
900256d8:	ea4a 0404 	orr.w	r4, sl, r4
900256dc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900256e0:	fa1f f689 	uxth.w	r6, r9
900256e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900256e8:	fb11 f90e 	smulbb	r9, r1, lr
900256ec:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900256f0:	9602      	str	r6, [sp, #8]
900256f2:	4626      	mov	r6, r4
900256f4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900256f8:	f1ce 0410 	rsb	r4, lr, #16
900256fc:	ea4a 0202 	orr.w	r2, sl, r2
90025700:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025704:	1a64      	subs	r4, r4, r1
90025706:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002570a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002570e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025712:	434a      	muls	r2, r1
90025714:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90025718:	ea4a 0000 	orr.w	r0, sl, r0
9002571c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025720:	fb04 2406 	mla	r4, r4, r6, r2
90025724:	9903      	ldr	r1, [sp, #12]
90025726:	fb09 4200 	mla	r2, r9, r0, r4
9002572a:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002572e:	9801      	ldr	r0, [sp, #4]
90025730:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90025734:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025738:	8809      	ldrh	r1, [r1, #0]
9002573a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
9002573e:	ea44 0b0b 	orr.w	fp, r4, fp
90025742:	9c02      	ldr	r4, [sp, #8]
90025744:	1b00      	subs	r0, r0, r4
90025746:	9c01      	ldr	r4, [sp, #4]
90025748:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002574c:	eba4 0608 	sub.w	r6, r4, r8
90025750:	b280      	uxth	r0, r0
90025752:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025756:	b2b6      	uxth	r6, r6
90025758:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002575c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025760:	4373      	muls	r3, r6
90025762:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025766:	fb0c 3300 	mla	r3, ip, r0, r3
9002576a:	9802      	ldr	r0, [sp, #8]
9002576c:	ea42 0e0e 	orr.w	lr, r2, lr
90025770:	fb00 3505 	mla	r5, r0, r5, r3
90025774:	120b      	asrs	r3, r1, #8
90025776:	10c8      	asrs	r0, r1, #3
90025778:	fb08 5707 	mla	r7, r8, r7, r5
9002577c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025780:	00c9      	lsls	r1, r1, #3
90025782:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025786:	ea6f 2727 	mvn.w	r7, r7, asr #8
9002578a:	fa1f f28e 	uxth.w	r2, lr
9002578e:	b2c9      	uxtb	r1, r1
90025790:	b2ff      	uxtb	r7, r7
90025792:	437b      	muls	r3, r7
90025794:	4378      	muls	r0, r7
90025796:	434f      	muls	r7, r1
90025798:	1c59      	adds	r1, r3, #1
9002579a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002579e:	1213      	asrs	r3, r2, #8
900257a0:	f023 0307 	bic.w	r3, r3, #7
900257a4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900257a8:	1c41      	adds	r1, r0, #1
900257aa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900257ae:	10d1      	asrs	r1, r2, #3
900257b0:	021b      	lsls	r3, r3, #8
900257b2:	f021 0103 	bic.w	r1, r1, #3
900257b6:	00d2      	lsls	r2, r2, #3
900257b8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900257bc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900257c0:	00c9      	lsls	r1, r1, #3
900257c2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900257c6:	430b      	orrs	r3, r1
900257c8:	1c79      	adds	r1, r7, #1
900257ca:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900257ce:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900257d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900257d6:	431a      	orrs	r2, r3
900257d8:	9b03      	ldr	r3, [sp, #12]
900257da:	801a      	strh	r2, [r3, #0]
900257dc:	b005      	add	sp, #20
900257de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900257e2:	f04f 0c00 	mov.w	ip, #0
900257e6:	4664      	mov	r4, ip
900257e8:	e6e5      	b.n	900255b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
900257ea:	2300      	movs	r3, #0
900257ec:	469c      	mov	ip, r3
900257ee:	461a      	mov	r2, r3
900257f0:	461c      	mov	r4, r3
900257f2:	e707      	b.n	90025604 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900257f4:	2300      	movs	r3, #0
900257f6:	461a      	mov	r2, r3
900257f8:	e704      	b.n	90025604 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900257fa:	460b      	mov	r3, r1
900257fc:	460a      	mov	r2, r1
900257fe:	e701      	b.n	90025604 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025800:	2500      	movs	r5, #0
90025802:	46ab      	mov	fp, r5
90025804:	e72f      	b.n	90025666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90025806:	2700      	movs	r7, #0
90025808:	463d      	mov	r5, r7
9002580a:	4638      	mov	r0, r7
9002580c:	46bb      	mov	fp, r7
9002580e:	e754      	b.n	900256ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025810:	4677      	mov	r7, lr
90025812:	4675      	mov	r5, lr
90025814:	4670      	mov	r0, lr
90025816:	46f3      	mov	fp, lr
90025818:	e74f      	b.n	900256ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002581a:	2700      	movs	r7, #0
9002581c:	4638      	mov	r0, r7
9002581e:	e74c      	b.n	900256ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025820:	460f      	mov	r7, r1
90025822:	4608      	mov	r0, r1
90025824:	e749      	b.n	900256ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90025828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002582c:	b093      	sub	sp, #76	@ 0x4c
9002582e:	9210      	str	r2, [sp, #64]	@ 0x40
90025830:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90025832:	9011      	str	r0, [sp, #68]	@ 0x44
90025834:	910e      	str	r1, [sp, #56]	@ 0x38
90025836:	6850      	ldr	r0, [r2, #4]
90025838:	9306      	str	r3, [sp, #24]
9002583a:	6812      	ldr	r2, [r2, #0]
9002583c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90025840:	fb00 1303 	mla	r3, r0, r3, r1
90025844:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025848:	9307      	str	r3, [sp, #28]
9002584a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002584c:	681b      	ldr	r3, [r3, #0]
9002584e:	9308      	str	r3, [sp, #32]
90025850:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025852:	685b      	ldr	r3, [r3, #4]
90025854:	9309      	str	r3, [sp, #36]	@ 0x24
90025856:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025858:	2b00      	cmp	r3, #0
9002585a:	dc03      	bgt.n	90025864 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002585c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002585e:	2b00      	cmp	r3, #0
90025860:	f340 83b6 	ble.w	90025fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025864:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025866:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002586a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002586e:	1e48      	subs	r0, r1, #1
90025870:	1e55      	subs	r5, r2, #1
90025872:	9b06      	ldr	r3, [sp, #24]
90025874:	2b00      	cmp	r3, #0
90025876:	f340 8165 	ble.w	90025b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002587a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
9002587c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002587e:	1436      	asrs	r6, r6, #16
90025880:	ea4f 4323 	mov.w	r3, r3, asr #16
90025884:	d406      	bmi.n	90025894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025886:	4286      	cmp	r6, r0
90025888:	da04      	bge.n	90025894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002588a:	2b00      	cmp	r3, #0
9002588c:	db02      	blt.n	90025894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002588e:	42ab      	cmp	r3, r5
90025890:	f2c0 8159 	blt.w	90025b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90025894:	3601      	adds	r6, #1
90025896:	f100 8146 	bmi.w	90025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002589a:	42b1      	cmp	r1, r6
9002589c:	f2c0 8143 	blt.w	90025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900258a0:	3301      	adds	r3, #1
900258a2:	f100 8140 	bmi.w	90025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900258a6:	429a      	cmp	r2, r3
900258a8:	f2c0 813d 	blt.w	90025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900258ac:	9b06      	ldr	r3, [sp, #24]
900258ae:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900258b2:	9f07      	ldr	r7, [sp, #28]
900258b4:	930f      	str	r3, [sp, #60]	@ 0x3c
900258b6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900258b8:	2b00      	cmp	r3, #0
900258ba:	f340 8166 	ble.w	90025b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900258be:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900258c0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900258c2:	1418      	asrs	r0, r3, #16
900258c4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900258c6:	142d      	asrs	r5, r5, #16
900258c8:	f3c3 3103 	ubfx	r1, r3, #12, #4
900258cc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900258ce:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900258d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900258d4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900258d8:	f100 81f0 	bmi.w	90025cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900258dc:	f102 3eff 	add.w	lr, r2, #4294967295	@ 0xffffffff
900258e0:	4575      	cmp	r5, lr
900258e2:	f280 81eb 	bge.w	90025cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900258e6:	2800      	cmp	r0, #0
900258e8:	f2c0 81e8 	blt.w	90025cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900258ec:	f103 3eff 	add.w	lr, r3, #4294967295	@ 0xffffffff
900258f0:	4570      	cmp	r0, lr
900258f2:	f280 81e3 	bge.w	90025cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900258f6:	b212      	sxth	r2, r2
900258f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900258fa:	fa1f fe81 	uxth.w	lr, r1
900258fe:	fb00 5002 	mla	r0, r0, r2, r5
90025902:	ea4f 150e 	mov.w	r5, lr, lsl #4
90025906:	eb03 0a00 	add.w	sl, r3, r0
9002590a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002590e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90025912:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025916:	b29b      	uxth	r3, r3
90025918:	f1bc 0f00 	cmp.w	ip, #0
9002591c:	f000 817b 	beq.w	90025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90025920:	f81a 4002 	ldrb.w	r4, [sl, r2]
90025924:	eb0a 0b02 	add.w	fp, sl, r2
90025928:	fa1f fa8c 	uxth.w	sl, ip
9002592c:	940a      	str	r4, [sp, #40]	@ 0x28
9002592e:	fb0a fe0e 	mul.w	lr, sl, lr
90025932:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025936:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002593a:	eba5 050e 	sub.w	r5, r5, lr
9002593e:	940b      	str	r4, [sp, #44]	@ 0x2c
90025940:	fa1f fa8a 	uxth.w	sl, sl
90025944:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025946:	b2ad      	uxth	r5, r5
90025948:	eba3 030a 	sub.w	r3, r3, sl
9002594c:	fb08 f505 	mul.w	r5, r8, r5
90025950:	b29b      	uxth	r3, r3
90025952:	fb09 5303 	mla	r3, r9, r3, r5
90025956:	fb0a 3304 	mla	r3, sl, r4, r3
9002595a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002595c:	fb0e 3304 	mla	r3, lr, r4, r3
90025960:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025964:	2b00      	cmp	r3, #0
90025966:	f000 80d1 	beq.w	90025b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002596a:	9c08      	ldr	r4, [sp, #32]
9002596c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025970:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90025974:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025978:	f000 8152 	beq.w	90025c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002597c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90025980:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025984:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025988:	fb0a fe0e 	mul.w	lr, sl, lr
9002598c:	fb09 f000 	mul.w	r0, r9, r0
90025990:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90025994:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025998:	f100 0b20 	add.w	fp, r0, #32
9002599c:	44ce      	add	lr, r9
9002599e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900259a2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900259a6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900259aa:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900259ae:	ea4e 0909 	orr.w	r9, lr, r9
900259b2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900259b6:	8868      	ldrh	r0, [r5, #2]
900259b8:	d019      	beq.n	900259ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900259ba:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900259be:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900259c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900259c6:	fb0a fe0e 	mul.w	lr, sl, lr
900259ca:	fb08 f800 	mul.w	r8, r8, r0
900259ce:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900259d2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900259d6:	f108 0b20 	add.w	fp, r8, #32
900259da:	4486      	add	lr, r0
900259dc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900259e0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900259e4:	0a00      	lsrs	r0, r0, #8
900259e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900259ea:	ea4e 0000 	orr.w	r0, lr, r0
900259ee:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900259f2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900259f6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900259fa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900259fe:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90025a02:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025a06:	ea4e 0909 	orr.w	r9, lr, r9
90025a0a:	ea4a 0000 	orr.w	r0, sl, r0
90025a0e:	f1bc 0f00 	cmp.w	ip, #0
90025a12:	f000 8107 	beq.w	90025c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90025a16:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90025a1a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025a1c:	3a01      	subs	r2, #1
90025a1e:	2cff      	cmp	r4, #255	@ 0xff
90025a20:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025a24:	f102 0202 	add.w	r2, r2, #2
90025a28:	eb05 0e02 	add.w	lr, r5, r2
90025a2c:	5aaa      	ldrh	r2, [r5, r2]
90025a2e:	d018      	beq.n	90025a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90025a30:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90025a34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025a38:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025a3c:	fb04 fa02 	mul.w	sl, r4, r2
90025a40:	fb08 f805 	mul.w	r8, r8, r5
90025a44:	f10a 0520 	add.w	r5, sl, #32
90025a48:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90025a4c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025a50:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90025a54:	4442      	add	r2, r8
90025a56:	0a2d      	lsrs	r5, r5, #8
90025a58:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90025a5c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025a60:	432a      	orrs	r2, r5
90025a62:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025a64:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025a68:	2cff      	cmp	r4, #255	@ 0xff
90025a6a:	d01a      	beq.n	90025aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90025a6c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90025a70:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025a74:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025a78:	fb04 fa05 	mul.w	sl, r4, r5
90025a7c:	fb08 f80e 	mul.w	r8, r8, lr
90025a80:	f10a 0e20 	add.w	lr, sl, #32
90025a84:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90025a88:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025a8c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90025a90:	4445      	add	r5, r8
90025a92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025a96:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90025a9a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90025a9e:	ea45 050e 	orr.w	r5, r5, lr
90025aa2:	fb1c fe01 	smulbb	lr, ip, r1
90025aa6:	f1cc 0810 	rsb	r8, ip, #16
90025aaa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025aae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025ab2:	ea4f 0eee 	mov.w	lr, lr, asr #3
90025ab6:	eba8 0801 	sub.w	r8, r8, r1
90025aba:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90025abe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025ac2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90025ac6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90025aca:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90025ace:	ea4a 0202 	orr.w	r2, sl, r2
90025ad2:	4341      	muls	r1, r0
90025ad4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025ad8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025adc:	fb09 1108 	mla	r1, r9, r8, r1
90025ae0:	ea4b 0505 	orr.w	r5, fp, r5
90025ae4:	fb0c 1102 	mla	r1, ip, r2, r1
90025ae8:	fb0e 1e05 	mla	lr, lr, r5, r1
90025aec:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025af0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025af4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025af8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025afc:	ea42 0e0e 	orr.w	lr, r2, lr
90025b00:	fa1f f28e 	uxth.w	r2, lr
90025b04:	2bff      	cmp	r3, #255	@ 0xff
90025b06:	f040 80a1 	bne.w	90025c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90025b0a:	803a      	strh	r2, [r7, #0]
90025b0c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025b0e:	3702      	adds	r7, #2
90025b10:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90025b12:	4413      	add	r3, r2
90025b14:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025b16:	931d      	str	r3, [sp, #116]	@ 0x74
90025b18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025b1a:	441a      	add	r2, r3
90025b1c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025b1e:	3b01      	subs	r3, #1
90025b20:	921e      	str	r2, [sp, #120]	@ 0x78
90025b22:	930f      	str	r3, [sp, #60]	@ 0x3c
90025b24:	e6c7      	b.n	900258b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025b26:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025b28:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90025b2a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90025b2c:	4433      	add	r3, r6
90025b2e:	931d      	str	r3, [sp, #116]	@ 0x74
90025b30:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025b32:	441c      	add	r4, r3
90025b34:	9b06      	ldr	r3, [sp, #24]
90025b36:	3b01      	subs	r3, #1
90025b38:	941e      	str	r4, [sp, #120]	@ 0x78
90025b3a:	9306      	str	r3, [sp, #24]
90025b3c:	9b07      	ldr	r3, [sp, #28]
90025b3e:	3302      	adds	r3, #2
90025b40:	9307      	str	r3, [sp, #28]
90025b42:	e696      	b.n	90025872 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90025b44:	d028      	beq.n	90025b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025b46:	9b06      	ldr	r3, [sp, #24]
90025b48:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90025b4a:	3b01      	subs	r3, #1
90025b4c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90025b4e:	fb00 5003 	mla	r0, r0, r3, r5
90025b52:	1400      	asrs	r0, r0, #16
90025b54:	f53f aeaa 	bmi.w	900258ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025b58:	3901      	subs	r1, #1
90025b5a:	4288      	cmp	r0, r1
90025b5c:	f6bf aea6 	bge.w	900258ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025b60:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025b62:	981e      	ldr	r0, [sp, #120]	@ 0x78
90025b64:	fb01 0303 	mla	r3, r1, r3, r0
90025b68:	141b      	asrs	r3, r3, #16
90025b6a:	f53f ae9f 	bmi.w	900258ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025b6e:	3a01      	subs	r2, #1
90025b70:	4293      	cmp	r3, r2
90025b72:	f6bf ae9b 	bge.w	900258ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025b76:	9b06      	ldr	r3, [sp, #24]
90025b78:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025b7c:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025b80:	930f      	str	r3, [sp, #60]	@ 0x3c
90025b82:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025b84:	2b00      	cmp	r3, #0
90025b86:	f300 80b6 	bgt.w	90025cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90025b8a:	9b06      	ldr	r3, [sp, #24]
90025b8c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025b90:	9b07      	ldr	r3, [sp, #28]
90025b92:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025b96:	9307      	str	r3, [sp, #28]
90025b98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025b9a:	2b00      	cmp	r3, #0
90025b9c:	f340 8218 	ble.w	90025fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025ba0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025ba4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025ba6:	ee30 0a04 	vadd.f32	s0, s0, s8
90025baa:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025bae:	eef0 6a62 	vmov.f32	s13, s5
90025bb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025bb6:	ee31 1a05 	vadd.f32	s2, s2, s10
90025bba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025bbe:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90025bc2:	eef0 6a43 	vmov.f32	s13, s6
90025bc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025bca:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
90025bce:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025bd2:	ee61 7a27 	vmul.f32	s15, s2, s15
90025bd6:	ee77 2a62 	vsub.f32	s5, s14, s5
90025bda:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025bde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025be2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025be6:	ee12 2a90 	vmov	r2, s5
90025bea:	eef0 2a47 	vmov.f32	s5, s14
90025bee:	fb92 f3f3 	sdiv	r3, r2, r3
90025bf2:	ee13 2a10 	vmov	r2, s6
90025bf6:	931f      	str	r3, [sp, #124]	@ 0x7c
90025bf8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025bfa:	eeb0 3a67 	vmov.f32	s6, s15
90025bfe:	fb92 f3f3 	sdiv	r3, r2, r3
90025c02:	9320      	str	r3, [sp, #128]	@ 0x80
90025c04:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025c06:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025c08:	3b01      	subs	r3, #1
90025c0a:	930e      	str	r3, [sp, #56]	@ 0x38
90025c0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025c0e:	bf08      	it	eq
90025c10:	4613      	moveq	r3, r2
90025c12:	9306      	str	r3, [sp, #24]
90025c14:	e61f      	b.n	90025856 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90025c16:	fb08 f505 	mul.w	r5, r8, r5
90025c1a:	fb09 5303 	mla	r3, r9, r3, r5
90025c1e:	e69f      	b.n	90025960 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90025c20:	4681      	mov	r9, r0
90025c22:	e6c6      	b.n	900259b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90025c24:	f1c1 0210 	rsb	r2, r1, #16
90025c28:	4341      	muls	r1, r0
90025c2a:	fb09 1902 	mla	r9, r9, r2, r1
90025c2e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025c32:	ea4f 5259 	mov.w	r2, r9, lsr #21
90025c36:	ea4f 1959 	mov.w	r9, r9, lsr #5
90025c3a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025c3e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025c42:	ea42 0909 	orr.w	r9, r2, r9
90025c46:	fa1f f289 	uxth.w	r2, r9
90025c4a:	e75b      	b.n	90025b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90025c4c:	f8b7 c000 	ldrh.w	ip, [r7]
90025c50:	43db      	mvns	r3, r3
90025c52:	ea4f 202c 	mov.w	r0, ip, asr #8
90025c56:	fa5f fe83 	uxtb.w	lr, r3
90025c5a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025c5e:	ea4f 05ec 	mov.w	r5, ip, asr #3
90025c62:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90025c66:	fb00 f00e 	mul.w	r0, r0, lr
90025c6a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90025c6e:	b2db      	uxtb	r3, r3
90025c70:	1c41      	adds	r1, r0, #1
90025c72:	fb05 f50e 	mul.w	r5, r5, lr
90025c76:	fb03 f30e 	mul.w	r3, r3, lr
90025c7a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025c7e:	1211      	asrs	r1, r2, #8
90025c80:	f021 0107 	bic.w	r1, r1, #7
90025c84:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025c88:	48d3      	ldr	r0, [pc, #844]	@ (90025fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025c8a:	b2c9      	uxtb	r1, r1
90025c8c:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90025c90:	1c69      	adds	r1, r5, #1
90025c92:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90025c96:	10d1      	asrs	r1, r2, #3
90025c98:	00d2      	lsls	r2, r2, #3
90025c9a:	f021 0103 	bic.w	r1, r1, #3
90025c9e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025ca2:	00c9      	lsls	r1, r1, #3
90025ca4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025ca8:	4301      	orrs	r1, r0
90025caa:	1c58      	adds	r0, r3, #1
90025cac:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025cb0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025cb4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025cb8:	430a      	orrs	r2, r1
90025cba:	e726      	b.n	90025b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90025cbc:	f115 0e01 	adds.w	lr, r5, #1
90025cc0:	f53f af24 	bmi.w	90025b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025cc4:	4572      	cmp	r2, lr
90025cc6:	f6ff af21 	blt.w	90025b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025cca:	f110 0e01 	adds.w	lr, r0, #1
90025cce:	f53f af1d 	bmi.w	90025b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025cd2:	4573      	cmp	r3, lr
90025cd4:	f6ff af1a 	blt.w	90025b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025cd8:	b21b      	sxth	r3, r3
90025cda:	b212      	sxth	r2, r2
90025cdc:	9301      	str	r3, [sp, #4]
90025cde:	9200      	str	r2, [sp, #0]
90025ce0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90025ce4:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025ce8:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90025cec:	4639      	mov	r1, r7
90025cee:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025cf0:	f7ff fc22 	bl	90025538 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90025cf4:	e70a      	b.n	90025b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025cf6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025cf8:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025cfc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90025cfe:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025d02:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025d04:	fa1f fc82 	uxth.w	ip, r2
90025d08:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025d0c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90025d0e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90025d12:	141f      	asrs	r7, r3, #16
90025d14:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025d16:	141b      	asrs	r3, r3, #16
90025d18:	fb01 3707 	mla	r7, r1, r7, r3
90025d1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025d1e:	eb03 0a07 	add.w	sl, r3, r7
90025d22:	f813 9007 	ldrb.w	r9, [r3, r7]
90025d26:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90025d2a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025d2e:	b29b      	uxth	r3, r3
90025d30:	2d00      	cmp	r5, #0
90025d32:	f000 80fe 	beq.w	90025f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90025d36:	f81a 4001 	ldrb.w	r4, [sl, r1]
90025d3a:	eb0a 0b01 	add.w	fp, sl, r1
90025d3e:	fa1f fa85 	uxth.w	sl, r5
90025d42:	940c      	str	r4, [sp, #48]	@ 0x30
90025d44:	fb0a fc0c 	mul.w	ip, sl, ip
90025d48:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025d4c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025d50:	eba0 000c 	sub.w	r0, r0, ip
90025d54:	940d      	str	r4, [sp, #52]	@ 0x34
90025d56:	fa1f fa8a 	uxth.w	sl, sl
90025d5a:	b280      	uxth	r0, r0
90025d5c:	eba3 030a 	sub.w	r3, r3, sl
90025d60:	fb08 f000 	mul.w	r0, r8, r0
90025d64:	b29b      	uxth	r3, r3
90025d66:	fb09 0303 	mla	r3, r9, r3, r0
90025d6a:	980c      	ldr	r0, [sp, #48]	@ 0x30
90025d6c:	fb0a 3300 	mla	r3, sl, r0, r3
90025d70:	fb0c 3304 	mla	r3, ip, r4, r3
90025d74:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025d78:	2b00      	cmp	r3, #0
90025d7a:	f000 80cc 	beq.w	90025f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025d7e:	9808      	ldr	r0, [sp, #32]
90025d80:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025d84:	9c08      	ldr	r4, [sp, #32]
90025d86:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90025d8a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90025d8e:	f000 80d5 	beq.w	90025f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90025d92:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025d96:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025d9a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025d9e:	fb0a fc0c 	mul.w	ip, sl, ip
90025da2:	fb09 f707 	mul.w	r7, r9, r7
90025da6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90025daa:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025dae:	f107 0b20 	add.w	fp, r7, #32
90025db2:	44cc      	add	ip, r9
90025db4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025db8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025dbc:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025dc0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025dc4:	ea4c 0909 	orr.w	r9, ip, r9
90025dc8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90025dcc:	8847      	ldrh	r7, [r0, #2]
90025dce:	d019      	beq.n	90025e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90025dd0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90025dd4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025dd8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025ddc:	fb0a fc0c 	mul.w	ip, sl, ip
90025de0:	fb08 f807 	mul.w	r8, r8, r7
90025de4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025de8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025dec:	f108 0b20 	add.w	fp, r8, #32
90025df0:	44bc      	add	ip, r7
90025df2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025df6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025dfa:	0a3f      	lsrs	r7, r7, #8
90025dfc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025e00:	ea4c 0707 	orr.w	r7, ip, r7
90025e04:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025e08:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025e0c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025e10:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025e14:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90025e18:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025e1c:	ea4c 0909 	orr.w	r9, ip, r9
90025e20:	ea4a 0707 	orr.w	r7, sl, r7
90025e24:	2d00      	cmp	r5, #0
90025e26:	f000 808b 	beq.w	90025f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90025e2a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90025e2e:	3901      	subs	r1, #1
90025e30:	0049      	lsls	r1, r1, #1
90025e32:	3102      	adds	r1, #2
90025e34:	eb00 0c01 	add.w	ip, r0, r1
90025e38:	5a41      	ldrh	r1, [r0, r1]
90025e3a:	980c      	ldr	r0, [sp, #48]	@ 0x30
90025e3c:	28ff      	cmp	r0, #255	@ 0xff
90025e3e:	d019      	beq.n	90025e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90025e40:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90025e44:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025e46:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025e4a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025e4e:	fb04 fa01 	mul.w	sl, r4, r1
90025e52:	fb08 f800 	mul.w	r8, r8, r0
90025e56:	f10a 0020 	add.w	r0, sl, #32
90025e5a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90025e5e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025e62:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90025e66:	4441      	add	r1, r8
90025e68:	0a00      	lsrs	r0, r0, #8
90025e6a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025e6e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025e72:	4301      	orrs	r1, r0
90025e74:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025e76:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025e7a:	2cff      	cmp	r4, #255	@ 0xff
90025e7c:	d01a      	beq.n	90025eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025e7e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90025e82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025e86:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025e8a:	fb04 fa00 	mul.w	sl, r4, r0
90025e8e:	fb08 f80c 	mul.w	r8, r8, ip
90025e92:	f10a 0c20 	add.w	ip, sl, #32
90025e96:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025e9a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025e9e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025ea2:	4440      	add	r0, r8
90025ea4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025ea8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025eac:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025eb0:	ea40 000c 	orr.w	r0, r0, ip
90025eb4:	fb15 fc02 	smulbb	ip, r5, r2
90025eb8:	f1c5 0810 	rsb	r8, r5, #16
90025ebc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025ec0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025ec4:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025ec8:	eba8 0802 	sub.w	r8, r8, r2
90025ecc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025ed0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025ed4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025ed8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025edc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025ee0:	ea4a 0101 	orr.w	r1, sl, r1
90025ee4:	437a      	muls	r2, r7
90025ee6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025eea:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025eee:	fb09 2208 	mla	r2, r9, r8, r2
90025ef2:	ea4b 0000 	orr.w	r0, fp, r0
90025ef6:	fb05 2201 	mla	r2, r5, r1, r2
90025efa:	fb0c 2200 	mla	r2, ip, r0, r2
90025efe:	0d57      	lsrs	r7, r2, #21
90025f00:	0952      	lsrs	r2, r2, #5
90025f02:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025f06:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025f0a:	433a      	orrs	r2, r7
90025f0c:	2bff      	cmp	r3, #255	@ 0xff
90025f0e:	b292      	uxth	r2, r2
90025f10:	d127      	bne.n	90025f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90025f12:	f8ae 2000 	strh.w	r2, [lr]
90025f16:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025f18:	f10e 0e02 	add.w	lr, lr, #2
90025f1c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90025f1e:	4413      	add	r3, r2
90025f20:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025f22:	931d      	str	r3, [sp, #116]	@ 0x74
90025f24:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025f26:	441a      	add	r2, r3
90025f28:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025f2a:	3b01      	subs	r3, #1
90025f2c:	921e      	str	r2, [sp, #120]	@ 0x78
90025f2e:	930f      	str	r3, [sp, #60]	@ 0x3c
90025f30:	e627      	b.n	90025b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90025f32:	fb08 f000 	mul.w	r0, r8, r0
90025f36:	fb09 0303 	mla	r3, r9, r3, r0
90025f3a:	e71b      	b.n	90025d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90025f3c:	46b9      	mov	r9, r7
90025f3e:	e743      	b.n	90025dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90025f40:	f1c2 0110 	rsb	r1, r2, #16
90025f44:	437a      	muls	r2, r7
90025f46:	fb09 2901 	mla	r9, r9, r1, r2
90025f4a:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025f4e:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025f52:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025f56:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025f5a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025f5e:	4302      	orrs	r2, r0
90025f60:	e7d4      	b.n	90025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90025f62:	f8be 7000 	ldrh.w	r7, [lr]
90025f66:	43db      	mvns	r3, r3
90025f68:	4c1b      	ldr	r4, [pc, #108]	@ (90025fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025f6a:	1238      	asrs	r0, r7, #8
90025f6c:	fa5f fc83 	uxtb.w	ip, r3
90025f70:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025f74:	10fd      	asrs	r5, r7, #3
90025f76:	00fb      	lsls	r3, r7, #3
90025f78:	fb00 f00c 	mul.w	r0, r0, ip
90025f7c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90025f80:	b2db      	uxtb	r3, r3
90025f82:	fb05 f10c 	mul.w	r1, r5, ip
90025f86:	1c45      	adds	r5, r0, #1
90025f88:	fb03 f30c 	mul.w	r3, r3, ip
90025f8c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025f90:	1215      	asrs	r5, r2, #8
90025f92:	f025 0507 	bic.w	r5, r5, #7
90025f96:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025f9a:	1c4d      	adds	r5, r1, #1
90025f9c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025fa0:	10d1      	asrs	r1, r2, #3
90025fa2:	b2c0      	uxtb	r0, r0
90025fa4:	f021 0103 	bic.w	r1, r1, #3
90025fa8:	00d2      	lsls	r2, r2, #3
90025faa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90025fae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025fb2:	00c9      	lsls	r1, r1, #3
90025fb4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025fb8:	4308      	orrs	r0, r1
90025fba:	1c59      	adds	r1, r3, #1
90025fbc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025fc0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025fc4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90025fc8:	4318      	orrs	r0, r3
90025fca:	f8ae 0000 	strh.w	r0, [lr]
90025fce:	e7a2      	b.n	90025f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025fd0:	b013      	add	sp, #76	@ 0x4c
90025fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025fd6:	bf00      	nop
90025fd8:	fffff800 	.word	0xfffff800

90025fdc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90025fdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025fe0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90025fe4:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025fe8:	fb05 4c03 	mla	ip, r5, r3, r4
90025fec:	2d00      	cmp	r5, #0
90025fee:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90025ff2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90025ff6:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90025ffa:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90025ffe:	8808      	ldrh	r0, [r1, #0]
90026000:	f2c0 80a7 	blt.w	90026152 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90026004:	45aa      	cmp	sl, r5
90026006:	f340 80a4 	ble.w	90026152 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002600a:	2c00      	cmp	r4, #0
9002600c:	f2c0 809f 	blt.w	9002614e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90026010:	42a3      	cmp	r3, r4
90026012:	f340 809c 	ble.w	9002614e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90026016:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
9002601a:	1c62      	adds	r2, r4, #1
9002601c:	f100 809c 	bmi.w	90026158 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026020:	4293      	cmp	r3, r2
90026022:	f340 8099 	ble.w	90026158 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026026:	f1b9 0f00 	cmp.w	r9, #0
9002602a:	f000 8095 	beq.w	90026158 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002602e:	f8be c002 	ldrh.w	ip, [lr, #2]
90026032:	3501      	adds	r5, #1
90026034:	f100 8094 	bmi.w	90026160 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026038:	45aa      	cmp	sl, r5
9002603a:	f340 8091 	ble.w	90026160 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002603e:	2f00      	cmp	r7, #0
90026040:	f000 808e 	beq.w	90026160 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026044:	2c00      	cmp	r4, #0
90026046:	f2c0 8089 	blt.w	9002615c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002604a:	42a3      	cmp	r3, r4
9002604c:	f340 8086 	ble.w	9002615c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90026050:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90026054:	3401      	adds	r4, #1
90026056:	f100 8086 	bmi.w	90026166 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002605a:	42a3      	cmp	r3, r4
9002605c:	f340 8083 	ble.w	90026166 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026060:	f1b9 0f00 	cmp.w	r9, #0
90026064:	d07f      	beq.n	90026166 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026066:	3301      	adds	r3, #1
90026068:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
9002606c:	ea4f 4408 	mov.w	r4, r8, lsl #16
90026070:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90026074:	fb19 fe07 	smulbb	lr, r9, r7
90026078:	f1c7 0210 	rsb	r2, r7, #16
9002607c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026080:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90026084:	eba2 0209 	sub.w	r2, r2, r9
90026088:	ea44 0808 	orr.w	r8, r4, r8
9002608c:	ea4f 440c 	mov.w	r4, ip, lsl #16
90026090:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026094:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90026098:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002609c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900260a0:	ea44 0c0c 	orr.w	ip, r4, ip
900260a4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900260a8:	fb04 f40c 	mul.w	r4, r4, ip
900260ac:	fb02 4808 	mla	r8, r2, r8, r4
900260b0:	041a      	lsls	r2, r3, #16
900260b2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900260b6:	b2b4      	uxth	r4, r6
900260b8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900260bc:	43f6      	mvns	r6, r6
900260be:	4313      	orrs	r3, r2
900260c0:	042a      	lsls	r2, r5, #16
900260c2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900260c6:	b2f6      	uxtb	r6, r6
900260c8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900260cc:	fb0e 8303 	mla	r3, lr, r3, r8
900260d0:	432a      	orrs	r2, r5
900260d2:	fb07 3202 	mla	r2, r7, r2, r3
900260d6:	10c7      	asrs	r7, r0, #3
900260d8:	0d53      	lsrs	r3, r2, #21
900260da:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900260de:	0952      	lsrs	r2, r2, #5
900260e0:	fb17 f706 	smulbb	r7, r7, r6
900260e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900260e8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900260ec:	431a      	orrs	r2, r3
900260ee:	b293      	uxth	r3, r2
900260f0:	1202      	asrs	r2, r0, #8
900260f2:	121d      	asrs	r5, r3, #8
900260f4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900260f8:	00c0      	lsls	r0, r0, #3
900260fa:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900260fe:	fb12 f206 	smulbb	r2, r2, r6
90026102:	b2c0      	uxtb	r0, r0
90026104:	fb05 2504 	mla	r5, r5, r4, r2
90026108:	10da      	asrs	r2, r3, #3
9002610a:	fb10 f006 	smulbb	r0, r0, r6
9002610e:	00db      	lsls	r3, r3, #3
90026110:	b2ad      	uxth	r5, r5
90026112:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026116:	b2db      	uxtb	r3, r3
90026118:	fb02 7204 	mla	r2, r2, r4, r7
9002611c:	fb03 0004 	mla	r0, r3, r4, r0
90026120:	1c6b      	adds	r3, r5, #1
90026122:	b292      	uxth	r2, r2
90026124:	b280      	uxth	r0, r0
90026126:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002612a:	1c43      	adds	r3, r0, #1
9002612c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026130:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90026134:	1c50      	adds	r0, r2, #1
90026136:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002613a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002613e:	0952      	lsrs	r2, r2, #5
90026140:	432b      	orrs	r3, r5
90026142:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026146:	4313      	orrs	r3, r2
90026148:	800b      	strh	r3, [r1, #0]
9002614a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002614e:	4680      	mov	r8, r0
90026150:	e763      	b.n	9002601a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90026152:	4684      	mov	ip, r0
90026154:	4680      	mov	r8, r0
90026156:	e76c      	b.n	90026032 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90026158:	4684      	mov	ip, r0
9002615a:	e76a      	b.n	90026032 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002615c:	4605      	mov	r5, r0
9002615e:	e779      	b.n	90026054 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90026160:	4603      	mov	r3, r0
90026162:	4605      	mov	r5, r0
90026164:	e782      	b.n	9002606c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90026166:	4603      	mov	r3, r0
90026168:	e780      	b.n	9002606c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

9002616a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002616a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002616e:	b093      	sub	sp, #76	@ 0x4c
90026170:	461d      	mov	r5, r3
90026172:	9210      	str	r2, [sp, #64]	@ 0x40
90026174:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026176:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
9002617a:	910a      	str	r1, [sp, #40]	@ 0x28
9002617c:	920b      	str	r2, [sp, #44]	@ 0x2c
9002617e:	6859      	ldr	r1, [r3, #4]
90026180:	681b      	ldr	r3, [r3, #0]
90026182:	9011      	str	r0, [sp, #68]	@ 0x44
90026184:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90026188:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
9002618c:	fb01 2707 	mla	r7, r1, r7, r2
90026190:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90026194:	9307      	str	r3, [sp, #28]
90026196:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026198:	681b      	ldr	r3, [r3, #0]
9002619a:	9309      	str	r3, [sp, #36]	@ 0x24
9002619c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002619e:	43db      	mvns	r3, r3
900261a0:	b2db      	uxtb	r3, r3
900261a2:	9308      	str	r3, [sp, #32]
900261a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900261a6:	2b00      	cmp	r3, #0
900261a8:	dc03      	bgt.n	900261b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900261aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900261ac:	2b00      	cmp	r3, #0
900261ae:	f340 8205 	ble.w	900265bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900261b2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900261b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900261b8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900261bc:	1e48      	subs	r0, r1, #1
900261be:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
900261c2:	2d00      	cmp	r5, #0
900261c4:	f340 80da 	ble.w	9002637c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900261c8:	ea5f 4e24 	movs.w	lr, r4, asr #16
900261cc:	ea4f 4326 	mov.w	r3, r6, asr #16
900261d0:	d406      	bmi.n	900261e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900261d2:	4586      	cmp	lr, r0
900261d4:	da04      	bge.n	900261e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900261d6:	2b00      	cmp	r3, #0
900261d8:	db02      	blt.n	900261e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900261da:	4563      	cmp	r3, ip
900261dc:	f2c0 80cf 	blt.w	9002637e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900261e0:	f11e 0e01 	adds.w	lr, lr, #1
900261e4:	f100 80c1 	bmi.w	9002636a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900261e8:	4571      	cmp	r1, lr
900261ea:	f2c0 80be 	blt.w	9002636a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900261ee:	3301      	adds	r3, #1
900261f0:	f100 80bb 	bmi.w	9002636a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900261f4:	429a      	cmp	r2, r3
900261f6:	f2c0 80b8 	blt.w	9002636a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900261fa:	46a9      	mov	r9, r5
900261fc:	f8dd 801c 	ldr.w	r8, [sp, #28]
90026200:	f1b9 0f00 	cmp.w	r9, #0
90026204:	f340 80d8 	ble.w	900263b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90026208:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002620a:	1421      	asrs	r1, r4, #16
9002620c:	ea4f 4026 	mov.w	r0, r6, asr #16
90026210:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026214:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90026218:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002621c:	f100 8112 	bmi.w	90026444 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026220:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
90026224:	4551      	cmp	r1, sl
90026226:	f280 810d 	bge.w	90026444 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002622a:	2800      	cmp	r0, #0
9002622c:	f2c0 810a 	blt.w	90026444 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026230:	f103 3aff 	add.w	sl, r3, #4294967295	@ 0xffffffff
90026234:	4550      	cmp	r0, sl
90026236:	f280 8105 	bge.w	90026444 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002623a:	fa0f f38e 	sxth.w	r3, lr
9002623e:	fb00 1103 	mla	r1, r0, r3, r1
90026242:	9809      	ldr	r0, [sp, #36]	@ 0x24
90026244:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90026248:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
9002624c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90026250:	f1bc 0f00 	cmp.w	ip, #0
90026254:	d007      	beq.n	90026266 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90026256:	005b      	lsls	r3, r3, #1
90026258:	eb0a 0003 	add.w	r0, sl, r3
9002625c:	f83a 3003 	ldrh.w	r3, [sl, r3]
90026260:	930c      	str	r3, [sp, #48]	@ 0x30
90026262:	8843      	ldrh	r3, [r0, #2]
90026264:	930d      	str	r3, [sp, #52]	@ 0x34
90026266:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002626a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002626e:	fb12 f30c 	smulbb	r3, r2, ip
90026272:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90026276:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002627a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002627e:	10db      	asrs	r3, r3, #3
90026280:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026284:	ea40 000e 	orr.w	r0, r0, lr
90026288:	f1cc 0e10 	rsb	lr, ip, #16
9002628c:	ea4a 0101 	orr.w	r1, sl, r1
90026290:	9f08      	ldr	r7, [sp, #32]
90026292:	ebae 0e02 	sub.w	lr, lr, r2
90026296:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002629a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002629e:	4351      	muls	r1, r2
900262a0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900262a2:	fb0e 1e00 	mla	lr, lr, r0, r1
900262a6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900262a8:	0410      	lsls	r0, r2, #16
900262aa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900262ae:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900262b2:	4310      	orrs	r0, r2
900262b4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900262b6:	0412      	lsls	r2, r2, #16
900262b8:	fb03 e000 	mla	r0, r3, r0, lr
900262bc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900262c0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900262c4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900262c8:	ea42 020e 	orr.w	r2, r2, lr
900262cc:	fb03 0302 	mla	r3, r3, r2, r0
900262d0:	f8b8 0000 	ldrh.w	r0, [r8]
900262d4:	0d5a      	lsrs	r2, r3, #21
900262d6:	095b      	lsrs	r3, r3, #5
900262d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900262dc:	1201      	asrs	r1, r0, #8
900262de:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900262e2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900262e6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900262ea:	00c0      	lsls	r0, r0, #3
900262ec:	4313      	orrs	r3, r2
900262ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900262f2:	fb11 f107 	smulbb	r1, r1, r7
900262f6:	b2c0      	uxtb	r0, r0
900262f8:	b29b      	uxth	r3, r3
900262fa:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900262fe:	fb10 f007 	smulbb	r0, r0, r7
90026302:	fb1e fe07 	smulbb	lr, lr, r7
90026306:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002630a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002630e:	fb0c 1c02 	mla	ip, ip, r2, r1
90026312:	10d9      	asrs	r1, r3, #3
90026314:	00db      	lsls	r3, r3, #3
90026316:	fa1f fc8c 	uxth.w	ip, ip
9002631a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002631e:	b2db      	uxtb	r3, r3
90026320:	fb01 e102 	mla	r1, r1, r2, lr
90026324:	fb03 0302 	mla	r3, r3, r2, r0
90026328:	b289      	uxth	r1, r1
9002632a:	b29a      	uxth	r2, r3
9002632c:	f10c 0301 	add.w	r3, ip, #1
90026330:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90026334:	1c53      	adds	r3, r2, #1
90026336:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002633a:	1c4a      	adds	r2, r1, #1
9002633c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90026340:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90026344:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026348:	0949      	lsrs	r1, r1, #5
9002634a:	ea43 030c 	orr.w	r3, r3, ip
9002634e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026352:	430b      	orrs	r3, r1
90026354:	f8a8 3000 	strh.w	r3, [r8]
90026358:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002635a:	f108 0802 	add.w	r8, r8, #2
9002635e:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
90026362:	441c      	add	r4, r3
90026364:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026366:	441e      	add	r6, r3
90026368:	e74a      	b.n	90026200 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002636a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002636c:	3d01      	subs	r5, #1
9002636e:	441c      	add	r4, r3
90026370:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026372:	441e      	add	r6, r3
90026374:	9b07      	ldr	r3, [sp, #28]
90026376:	3302      	adds	r3, #2
90026378:	9307      	str	r3, [sp, #28]
9002637a:	e722      	b.n	900261c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002637c:	d022      	beq.n	900263c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
9002637e:	1e6b      	subs	r3, r5, #1
90026380:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90026382:	fb00 4003 	mla	r0, r0, r3, r4
90026386:	1400      	asrs	r0, r0, #16
90026388:	f53f af37 	bmi.w	900261fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002638c:	3901      	subs	r1, #1
9002638e:	4288      	cmp	r0, r1
90026390:	f6bf af33 	bge.w	900261fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026394:	9920      	ldr	r1, [sp, #128]	@ 0x80
90026396:	fb01 6303 	mla	r3, r1, r3, r6
9002639a:	141b      	asrs	r3, r3, #16
9002639c:	f53f af2d 	bmi.w	900261fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900263a0:	3a01      	subs	r2, #1
900263a2:	4293      	cmp	r3, r2
900263a4:	f6bf af29 	bge.w	900261fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900263a8:	46a8      	mov	r8, r5
900263aa:	f8dd 901c 	ldr.w	r9, [sp, #28]
900263ae:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900263b2:	f1b8 0f00 	cmp.w	r8, #0
900263b6:	dc60      	bgt.n	9002647a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900263b8:	9b07      	ldr	r3, [sp, #28]
900263ba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900263be:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900263c2:	9307      	str	r3, [sp, #28]
900263c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900263c6:	2b00      	cmp	r3, #0
900263c8:	f340 80f8 	ble.w	900265bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900263cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900263d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900263d2:	ee30 0a04 	vadd.f32	s0, s0, s8
900263d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900263da:	eef0 6a62 	vmov.f32	s13, s5
900263de:	eec7 7a00 	vdiv.f32	s15, s14, s0
900263e2:	ee31 1a05 	vadd.f32	s2, s2, s10
900263e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900263ea:	ee16 4a90 	vmov	r4, s13
900263ee:	eef0 6a43 	vmov.f32	s13, s6
900263f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900263f6:	ee16 6a90 	vmov	r6, s13
900263fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
900263fe:	ee61 7a27 	vmul.f32	s15, s2, s15
90026402:	ee77 2a62 	vsub.f32	s5, s14, s5
90026406:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002640a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002640e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026412:	ee12 2a90 	vmov	r2, s5
90026416:	eef0 2a47 	vmov.f32	s5, s14
9002641a:	fb92 f3f3 	sdiv	r3, r2, r3
9002641e:	ee13 2a10 	vmov	r2, s6
90026422:	931f      	str	r3, [sp, #124]	@ 0x7c
90026424:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026426:	eeb0 3a67 	vmov.f32	s6, s15
9002642a:	fb92 f3f3 	sdiv	r3, r2, r3
9002642e:	9320      	str	r3, [sp, #128]	@ 0x80
90026430:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026432:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026434:	3b01      	subs	r3, #1
90026436:	930a      	str	r3, [sp, #40]	@ 0x28
90026438:	bf08      	it	eq
9002643a:	4615      	moveq	r5, r2
9002643c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002643e:	bf18      	it	ne
90026440:	461d      	movne	r5, r3
90026442:	e6af      	b.n	900261a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026444:	f111 0a01 	adds.w	sl, r1, #1
90026448:	d486      	bmi.n	90026358 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002644a:	45d6      	cmp	lr, sl
9002644c:	db84      	blt.n	90026358 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002644e:	f110 0a01 	adds.w	sl, r0, #1
90026452:	d481      	bmi.n	90026358 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026454:	4553      	cmp	r3, sl
90026456:	f6ff af7f 	blt.w	90026358 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002645a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9002645c:	b21b      	sxth	r3, r3
9002645e:	9101      	str	r1, [sp, #4]
90026460:	4641      	mov	r1, r8
90026462:	9300      	str	r3, [sp, #0]
90026464:	fa0f f38e 	sxth.w	r3, lr
90026468:	e9cd 0202 	strd	r0, r2, [sp, #8]
9002646c:	e9cd c704 	strd	ip, r7, [sp, #16]
90026470:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026472:	9811      	ldr	r0, [sp, #68]	@ 0x44
90026474:	f7ff fdb2 	bl	90025fdc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90026478:	e76e      	b.n	90026358 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002647a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002647c:	1430      	asrs	r0, r6, #16
9002647e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90026480:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90026484:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026488:	1423      	asrs	r3, r4, #16
9002648a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002648e:	fb01 3000 	mla	r0, r1, r0, r3
90026492:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026494:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90026498:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
9002649c:	8858      	ldrh	r0, [r3, #2]
9002649e:	f1be 0f00 	cmp.w	lr, #0
900264a2:	d00b      	beq.n	900264bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900264a4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900264a8:	3901      	subs	r1, #1
900264aa:	0049      	lsls	r1, r1, #1
900264ac:	3102      	adds	r1, #2
900264ae:	eb03 0b01 	add.w	fp, r3, r1
900264b2:	5a5b      	ldrh	r3, [r3, r1]
900264b4:	930e      	str	r3, [sp, #56]	@ 0x38
900264b6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900264ba:	930f      	str	r3, [sp, #60]	@ 0x3c
900264bc:	ea4f 410c 	mov.w	r1, ip, lsl #16
900264c0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900264c4:	fb12 f30e 	smulbb	r3, r2, lr
900264c8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900264cc:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900264d0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900264d4:	10db      	asrs	r3, r3, #3
900264d6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900264da:	ea41 010c 	orr.w	r1, r1, ip
900264de:	f1ce 0c10 	rsb	ip, lr, #16
900264e2:	ea4b 0000 	orr.w	r0, fp, r0
900264e6:	9f08      	ldr	r7, [sp, #32]
900264e8:	ebac 0c02 	sub.w	ip, ip, r2
900264ec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900264f0:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
900264f4:	4350      	muls	r0, r2
900264f6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900264fa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900264fc:	fb0c 0c01 	mla	ip, ip, r1, r0
90026500:	980e      	ldr	r0, [sp, #56]	@ 0x38
90026502:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026506:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002650a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002650c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026510:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026514:	0412      	lsls	r2, r2, #16
90026516:	ea4b 0101 	orr.w	r1, fp, r1
9002651a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002651e:	fb03 c101 	mla	r1, r3, r1, ip
90026522:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90026526:	4302      	orrs	r2, r0
90026528:	fb03 1202 	mla	r2, r3, r2, r1
9002652c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90026530:	0952      	lsrs	r2, r2, #5
90026532:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90026536:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002653a:	f8b9 2000 	ldrh.w	r2, [r9]
9002653e:	ea4b 0303 	orr.w	r3, fp, r3
90026542:	1211      	asrs	r1, r2, #8
90026544:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90026548:	b29b      	uxth	r3, r3
9002654a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002654e:	00d2      	lsls	r2, r2, #3
90026550:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90026554:	fb11 f107 	smulbb	r1, r1, r7
90026558:	1218      	asrs	r0, r3, #8
9002655a:	fb1c fc07 	smulbb	ip, ip, r7
9002655e:	b2d2      	uxtb	r2, r2
90026560:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026564:	fb12 f207 	smulbb	r2, r2, r7
90026568:	fb00 100a 	mla	r0, r0, sl, r1
9002656c:	10d9      	asrs	r1, r3, #3
9002656e:	00db      	lsls	r3, r3, #3
90026570:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026574:	b280      	uxth	r0, r0
90026576:	b2db      	uxtb	r3, r3
90026578:	fb01 c10a 	mla	r1, r1, sl, ip
9002657c:	fb03 230a 	mla	r3, r3, sl, r2
90026580:	1c42      	adds	r2, r0, #1
90026582:	b289      	uxth	r1, r1
90026584:	b29b      	uxth	r3, r3
90026586:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002658a:	f101 0c01 	add.w	ip, r1, #1
9002658e:	1c5a      	adds	r2, r3, #1
90026590:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90026594:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90026598:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002659c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002659e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900265a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900265a6:	441c      	add	r4, r3
900265a8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900265ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900265ae:	4310      	orrs	r0, r2
900265b0:	441e      	add	r6, r3
900265b2:	ea40 000c 	orr.w	r0, r0, ip
900265b6:	f829 0b02 	strh.w	r0, [r9], #2
900265ba:	e6fa      	b.n	900263b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900265bc:	b013      	add	sp, #76	@ 0x4c
900265be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900265c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900265c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900265c6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900265ca:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900265ce:	fb0e 4703 	mla	r7, lr, r3, r4
900265d2:	f1be 0f00 	cmp.w	lr, #0
900265d6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900265da:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
900265de:	eb02 0847 	add.w	r8, r2, r7, lsl #1
900265e2:	8808      	ldrh	r0, [r1, #0]
900265e4:	db60      	blt.n	900266a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900265e6:	45f1      	cmp	r9, lr
900265e8:	dd5e      	ble.n	900266a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900265ea:	2c00      	cmp	r4, #0
900265ec:	db5a      	blt.n	900266a4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900265ee:	42a3      	cmp	r3, r4
900265f0:	dd58      	ble.n	900266a4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900265f2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
900265f6:	1c62      	adds	r2, r4, #1
900265f8:	d459      	bmi.n	900266ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900265fa:	4293      	cmp	r3, r2
900265fc:	dd57      	ble.n	900266ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900265fe:	2d00      	cmp	r5, #0
90026600:	d055      	beq.n	900266ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026602:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90026606:	f11e 0e01 	adds.w	lr, lr, #1
9002660a:	d454      	bmi.n	900266b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002660c:	45f1      	cmp	r9, lr
9002660e:	dd52      	ble.n	900266b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026610:	2e00      	cmp	r6, #0
90026612:	d050      	beq.n	900266b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026614:	2c00      	cmp	r4, #0
90026616:	db4c      	blt.n	900266b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026618:	42a3      	cmp	r3, r4
9002661a:	dd4a      	ble.n	900266b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002661c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90026620:	3401      	adds	r4, #1
90026622:	d405      	bmi.n	90026630 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026624:	42a3      	cmp	r3, r4
90026626:	dd03      	ble.n	90026630 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026628:	b115      	cbz	r5, 90026630 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002662a:	3301      	adds	r3, #1
9002662c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90026630:	fb15 f406 	smulbb	r4, r5, r6
90026634:	ea4f 430c 	mov.w	r3, ip, lsl #16
90026638:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9002663c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026640:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90026644:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90026648:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002664c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90026650:	ea43 0c0c 	orr.w	ip, r3, ip
90026654:	f1c6 0310 	rsb	r3, r6, #16
90026658:	ea4e 0707 	orr.w	r7, lr, r7
9002665c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90026660:	1b5b      	subs	r3, r3, r5
90026662:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90026666:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002666a:	437d      	muls	r5, r7
9002666c:	fb03 5c0c 	mla	ip, r3, ip, r5
90026670:	0403      	lsls	r3, r0, #16
90026672:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026676:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002667a:	4318      	orrs	r0, r3
9002667c:	0413      	lsls	r3, r2, #16
9002667e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026682:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90026686:	fb04 c000 	mla	r0, r4, r0, ip
9002668a:	4313      	orrs	r3, r2
9002668c:	fb06 0003 	mla	r0, r6, r3, r0
90026690:	0d43      	lsrs	r3, r0, #21
90026692:	0940      	lsrs	r0, r0, #5
90026694:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026698:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002669c:	4318      	orrs	r0, r3
9002669e:	8008      	strh	r0, [r1, #0]
900266a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900266a4:	4684      	mov	ip, r0
900266a6:	e7a6      	b.n	900265f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900266a8:	4607      	mov	r7, r0
900266aa:	4684      	mov	ip, r0
900266ac:	e7ab      	b.n	90026606 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900266ae:	4607      	mov	r7, r0
900266b0:	e7a9      	b.n	90026606 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900266b2:	4602      	mov	r2, r0
900266b4:	e7b4      	b.n	90026620 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900266b6:	4602      	mov	r2, r0
900266b8:	e7ba      	b.n	90026630 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900266ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900266ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900266be:	b08f      	sub	sp, #60	@ 0x3c
900266c0:	461d      	mov	r5, r3
900266c2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900266c4:	9107      	str	r1, [sp, #28]
900266c6:	920c      	str	r2, [sp, #48]	@ 0x30
900266c8:	6859      	ldr	r1, [r3, #4]
900266ca:	681b      	ldr	r3, [r3, #0]
900266cc:	900d      	str	r0, [sp, #52]	@ 0x34
900266ce:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
900266d2:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
900266d6:	fb01 2707 	mla	r7, r1, r7, r2
900266da:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900266de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900266e0:	f8d3 8000 	ldr.w	r8, [r3]
900266e4:	9b07      	ldr	r3, [sp, #28]
900266e6:	2b00      	cmp	r3, #0
900266e8:	dc03      	bgt.n	900266f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900266ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900266ec:	2b00      	cmp	r3, #0
900266ee:	f340 8182 	ble.w	900269f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900266f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900266f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900266f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900266fc:	1e48      	subs	r0, r1, #1
900266fe:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
90026702:	2d00      	cmp	r5, #0
90026704:	f340 809b 	ble.w	9002683e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90026708:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002670c:	ea4f 4326 	mov.w	r3, r6, asr #16
90026710:	d406      	bmi.n	90026720 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90026712:	4586      	cmp	lr, r0
90026714:	da04      	bge.n	90026720 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90026716:	2b00      	cmp	r3, #0
90026718:	db02      	blt.n	90026720 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002671a:	4563      	cmp	r3, ip
9002671c:	f2c0 8090 	blt.w	90026840 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90026720:	f11e 0e01 	adds.w	lr, lr, #1
90026724:	f100 8084 	bmi.w	90026830 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026728:	4571      	cmp	r1, lr
9002672a:	f2c0 8081 	blt.w	90026830 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002672e:	3301      	adds	r3, #1
90026730:	d47e      	bmi.n	90026830 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026732:	429a      	cmp	r2, r3
90026734:	db7c      	blt.n	90026830 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026736:	46aa      	mov	sl, r5
90026738:	46b9      	mov	r9, r7
9002673a:	f1ba 0f00 	cmp.w	sl, #0
9002673e:	f340 8099 	ble.w	90026874 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90026742:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026744:	1421      	asrs	r1, r4, #16
90026746:	ea4f 4026 	mov.w	r0, r6, asr #16
9002674a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002674e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90026752:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90026756:	f100 80d1 	bmi.w	900268fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002675a:	f10e 3bff 	add.w	fp, lr, #4294967295	@ 0xffffffff
9002675e:	4559      	cmp	r1, fp
90026760:	f280 80cc 	bge.w	900268fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026764:	2800      	cmp	r0, #0
90026766:	f2c0 80c9 	blt.w	900268fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002676a:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
9002676e:	4558      	cmp	r0, fp
90026770:	f280 80c4 	bge.w	900268fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026774:	fa0f fe8e 	sxth.w	lr, lr
90026778:	fb00 110e 	mla	r1, r0, lr, r1
9002677c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026780:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90026784:	8841      	ldrh	r1, [r0, #2]
90026786:	f1bc 0f00 	cmp.w	ip, #0
9002678a:	d00b      	beq.n	900267a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
9002678c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90026790:	3b01      	subs	r3, #1
90026792:	005b      	lsls	r3, r3, #1
90026794:	3302      	adds	r3, #2
90026796:	eb00 0e03 	add.w	lr, r0, r3
9002679a:	5ac3      	ldrh	r3, [r0, r3]
9002679c:	9308      	str	r3, [sp, #32]
9002679e:	f8be 3002 	ldrh.w	r3, [lr, #2]
900267a2:	9309      	str	r3, [sp, #36]	@ 0x24
900267a4:	ea4f 400b 	mov.w	r0, fp, lsl #16
900267a8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900267ac:	fb12 f30c 	smulbb	r3, r2, ip
900267b0:	f1cc 0e10 	rsb	lr, ip, #16
900267b4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900267b8:	10db      	asrs	r3, r3, #3
900267ba:	ebae 0e02 	sub.w	lr, lr, r2
900267be:	ea40 000b 	orr.w	r0, r0, fp
900267c2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900267c6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900267ca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900267ce:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900267d2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900267d6:	ea4b 0101 	orr.w	r1, fp, r1
900267da:	4351      	muls	r1, r2
900267dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900267de:	fb0e 1e00 	mla	lr, lr, r0, r1
900267e2:	0410      	lsls	r0, r2, #16
900267e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900267e8:	9908      	ldr	r1, [sp, #32]
900267ea:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900267ee:	4310      	orrs	r0, r2
900267f0:	9a08      	ldr	r2, [sp, #32]
900267f2:	0412      	lsls	r2, r2, #16
900267f4:	fb03 e000 	mla	r0, r3, r0, lr
900267f8:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900267fc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026800:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90026804:	ea42 020e 	orr.w	r2, r2, lr
90026808:	fb03 0302 	mla	r3, r3, r2, r0
9002680c:	0d5a      	lsrs	r2, r3, #21
9002680e:	095b      	lsrs	r3, r3, #5
90026810:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026814:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90026818:	4313      	orrs	r3, r2
9002681a:	f8a9 3000 	strh.w	r3, [r9]
9002681e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90026820:	f109 0902 	add.w	r9, r9, #2
90026824:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
90026828:	441c      	add	r4, r3
9002682a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002682c:	441e      	add	r6, r3
9002682e:	e784      	b.n	9002673a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90026830:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90026832:	3d01      	subs	r5, #1
90026834:	3702      	adds	r7, #2
90026836:	441c      	add	r4, r3
90026838:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002683a:	441e      	add	r6, r3
9002683c:	e761      	b.n	90026702 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002683e:	d01d      	beq.n	9002687c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026840:	1e6b      	subs	r3, r5, #1
90026842:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90026844:	fb00 4003 	mla	r0, r0, r3, r4
90026848:	1400      	asrs	r0, r0, #16
9002684a:	f53f af74 	bmi.w	90026736 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002684e:	3901      	subs	r1, #1
90026850:	4288      	cmp	r0, r1
90026852:	f6bf af70 	bge.w	90026736 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026856:	991c      	ldr	r1, [sp, #112]	@ 0x70
90026858:	fb01 6303 	mla	r3, r1, r3, r6
9002685c:	141b      	asrs	r3, r3, #16
9002685e:	f53f af6a 	bmi.w	90026736 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026862:	3a01      	subs	r2, #1
90026864:	4293      	cmp	r3, r2
90026866:	f6bf af66 	bge.w	90026736 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002686a:	46a9      	mov	r9, r5
9002686c:	46ba      	mov	sl, r7
9002686e:	f1b9 0f00 	cmp.w	r9, #0
90026872:	dc5b      	bgt.n	9002692c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90026874:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026878:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9002687c:	9b07      	ldr	r3, [sp, #28]
9002687e:	2b00      	cmp	r3, #0
90026880:	f340 80b9 	ble.w	900269f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90026884:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026888:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002688a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002688e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026892:	eef0 6a62 	vmov.f32	s13, s5
90026896:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002689a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002689e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900268a2:	ee16 4a90 	vmov	r4, s13
900268a6:	eef0 6a43 	vmov.f32	s13, s6
900268aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900268ae:	ee16 6a90 	vmov	r6, s13
900268b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900268b6:	ee61 7a27 	vmul.f32	s15, s2, s15
900268ba:	ee77 2a62 	vsub.f32	s5, s14, s5
900268be:	ee37 3ac3 	vsub.f32	s6, s15, s6
900268c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900268c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900268ca:	ee12 2a90 	vmov	r2, s5
900268ce:	eef0 2a47 	vmov.f32	s5, s14
900268d2:	fb92 f3f3 	sdiv	r3, r2, r3
900268d6:	ee13 2a10 	vmov	r2, s6
900268da:	931b      	str	r3, [sp, #108]	@ 0x6c
900268dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900268de:	eeb0 3a67 	vmov.f32	s6, s15
900268e2:	fb92 f3f3 	sdiv	r3, r2, r3
900268e6:	931c      	str	r3, [sp, #112]	@ 0x70
900268e8:	9b07      	ldr	r3, [sp, #28]
900268ea:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900268ec:	3b01      	subs	r3, #1
900268ee:	9307      	str	r3, [sp, #28]
900268f0:	bf08      	it	eq
900268f2:	4615      	moveq	r5, r2
900268f4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900268f6:	bf18      	it	ne
900268f8:	461d      	movne	r5, r3
900268fa:	e6f3      	b.n	900266e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
900268fc:	f111 0b01 	adds.w	fp, r1, #1
90026900:	d48d      	bmi.n	9002681e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026902:	45de      	cmp	lr, fp
90026904:	db8b      	blt.n	9002681e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026906:	f110 0b01 	adds.w	fp, r0, #1
9002690a:	d488      	bmi.n	9002681e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002690c:	455b      	cmp	r3, fp
9002690e:	db86      	blt.n	9002681e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026910:	b21b      	sxth	r3, r3
90026912:	e9cd 1001 	strd	r1, r0, [sp, #4]
90026916:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002691a:	9300      	str	r3, [sp, #0]
9002691c:	4642      	mov	r2, r8
9002691e:	fa0f f38e 	sxth.w	r3, lr
90026922:	4649      	mov	r1, r9
90026924:	980d      	ldr	r0, [sp, #52]	@ 0x34
90026926:	f7ff fe4c 	bl	900265c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002692a:	e778      	b.n	9002681e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002692c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002692e:	1420      	asrs	r0, r4, #16
90026930:	1431      	asrs	r1, r6, #16
90026932:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90026936:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002693a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002693e:	fb03 0101 	mla	r1, r3, r1, r0
90026942:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026946:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002694a:	8841      	ldrh	r1, [r0, #2]
9002694c:	f1be 0f00 	cmp.w	lr, #0
90026950:	d00b      	beq.n	9002696a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90026952:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90026956:	3b01      	subs	r3, #1
90026958:	005b      	lsls	r3, r3, #1
9002695a:	3302      	adds	r3, #2
9002695c:	eb00 0b03 	add.w	fp, r0, r3
90026960:	5ac3      	ldrh	r3, [r0, r3]
90026962:	930a      	str	r3, [sp, #40]	@ 0x28
90026964:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90026968:	930b      	str	r3, [sp, #44]	@ 0x2c
9002696a:	ea4f 400c 	mov.w	r0, ip, lsl #16
9002696e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026972:	fb12 f30e 	smulbb	r3, r2, lr
90026976:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002697a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002697e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026982:	10db      	asrs	r3, r3, #3
90026984:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026988:	ea40 000c 	orr.w	r0, r0, ip
9002698c:	f1ce 0c10 	rsb	ip, lr, #16
90026990:	ea4b 0101 	orr.w	r1, fp, r1
90026994:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
90026998:	ebac 0c02 	sub.w	ip, ip, r2
9002699c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900269a0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900269a4:	4351      	muls	r1, r2
900269a6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900269a8:	fb0c 1c00 	mla	ip, ip, r0, r1
900269ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
900269ae:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900269b2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
900269b6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900269b8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900269bc:	0412      	lsls	r2, r2, #16
900269be:	ea4b 0000 	orr.w	r0, fp, r0
900269c2:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900269c6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900269ca:	fb03 c000 	mla	r0, r3, r0, ip
900269ce:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900269d2:	ea42 0b0b 	orr.w	fp, r2, fp
900269d6:	fb03 000b 	mla	r0, r3, fp, r0
900269da:	0d43      	lsrs	r3, r0, #21
900269dc:	0940      	lsrs	r0, r0, #5
900269de:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900269e2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900269e6:	4318      	orrs	r0, r3
900269e8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900269ea:	441c      	add	r4, r3
900269ec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900269ee:	f82a 0b02 	strh.w	r0, [sl], #2
900269f2:	441e      	add	r6, r3
900269f4:	e73b      	b.n	9002686e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
900269f6:	b00f      	add	sp, #60	@ 0x3c
900269f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900269fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
900269fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026a00:	b085      	sub	sp, #20
90026a02:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90026a06:	9102      	str	r1, [sp, #8]
90026a08:	2c00      	cmp	r4, #0
90026a0a:	fb04 7103 	mla	r1, r4, r3, r7
90026a0e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90026a12:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90026a16:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026a1a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90026a1e:	f2c0 811b 	blt.w	90026c58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026a22:	45a6      	cmp	lr, r4
90026a24:	f340 8118 	ble.w	90026c58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026a28:	2f00      	cmp	r7, #0
90026a2a:	f2c0 8113 	blt.w	90026c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026a2e:	42bb      	cmp	r3, r7
90026a30:	f340 8110 	ble.w	90026c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026a34:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026a38:	1c7a      	adds	r2, r7, #1
90026a3a:	f100 8110 	bmi.w	90026c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026a3e:	4293      	cmp	r3, r2
90026a40:	f340 810d 	ble.w	90026c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026a44:	2e00      	cmp	r6, #0
90026a46:	f000 810c 	beq.w	90026c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90026a4a:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026a4e:	3401      	adds	r4, #1
90026a50:	f100 810b 	bmi.w	90026c6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90026a54:	45a6      	cmp	lr, r4
90026a56:	f340 8108 	ble.w	90026c6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90026a5a:	2800      	cmp	r0, #0
90026a5c:	f000 8108 	beq.w	90026c70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90026a60:	2f00      	cmp	r7, #0
90026a62:	f2c0 8100 	blt.w	90026c66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026a66:	42bb      	cmp	r3, r7
90026a68:	f340 80fd 	ble.w	90026c66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026a6c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026a70:	3701      	adds	r7, #1
90026a72:	f100 8100 	bmi.w	90026c76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026a76:	42bb      	cmp	r3, r7
90026a78:	f340 80fd 	ble.w	90026c76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026a7c:	2e00      	cmp	r6, #0
90026a7e:	f000 80fc 	beq.w	90026c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90026a82:	3301      	adds	r3, #1
90026a84:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90026a88:	b2b6      	uxth	r6, r6
90026a8a:	b280      	uxth	r0, r0
90026a8c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026a90:	fb00 fe06 	mul.w	lr, r0, r6
90026a94:	0136      	lsls	r6, r6, #4
90026a96:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026a9a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026a9e:	eba6 070e 	sub.w	r7, r6, lr
90026aa2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90026aa6:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026aaa:	b280      	uxth	r0, r0
90026aac:	b2bf      	uxth	r7, r7
90026aae:	1a1b      	subs	r3, r3, r0
90026ab0:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026ab4:	fb0a f607 	mul.w	r6, sl, r7
90026ab8:	b29b      	uxth	r3, r3
90026aba:	fb0b 6603 	mla	r6, fp, r3, r6
90026abe:	fb00 6609 	mla	r6, r0, r9, r6
90026ac2:	fb0e 6608 	mla	r6, lr, r8, r6
90026ac6:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026aca:	9600      	str	r6, [sp, #0]
90026acc:	2e00      	cmp	r6, #0
90026ace:	f000 80be 	beq.w	90026c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90026ad2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026ad6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90026ada:	9e02      	ldr	r6, [sp, #8]
90026adc:	fb0b fc0c 	mul.w	ip, fp, ip
90026ae0:	fb0b f505 	mul.w	r5, fp, r5
90026ae4:	8836      	ldrh	r6, [r6, #0]
90026ae6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026aea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026aee:	9501      	str	r5, [sp, #4]
90026af0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90026af4:	44dc      	add	ip, fp
90026af6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026afa:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90026afe:	9503      	str	r5, [sp, #12]
90026b00:	9d01      	ldr	r5, [sp, #4]
90026b02:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90026b06:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026b0a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90026b0e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026b12:	fb0a fc0c 	mul.w	ip, sl, ip
90026b16:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026b1a:	fb0a fa01 	mul.w	sl, sl, r1
90026b1e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026b22:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026b26:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90026b2a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026b2e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026b32:	4465      	add	r5, ip
90026b34:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026b38:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90026b3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026b40:	fb09 fc0c 	mul.w	ip, r9, ip
90026b44:	0a2d      	lsrs	r5, r5, #8
90026b46:	fb09 f904 	mul.w	r9, r9, r4
90026b4a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026b4e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026b52:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026b56:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90026b5a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026b5e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026b62:	437d      	muls	r5, r7
90026b64:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026b68:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90026b6c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026b70:	4461      	add	r1, ip
90026b72:	fb08 f404 	mul.w	r4, r8, r4
90026b76:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026b7a:	fb08 f802 	mul.w	r8, r8, r2
90026b7e:	0a09      	lsrs	r1, r1, #8
90026b80:	0a22      	lsrs	r2, r4, #8
90026b82:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90026b86:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026b8a:	fb07 f70a 	mul.w	r7, r7, sl
90026b8e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026b92:	4414      	add	r4, r2
90026b94:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90026b98:	0a24      	lsrs	r4, r4, #8
90026b9a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026b9e:	9a03      	ldr	r2, [sp, #12]
90026ba0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90026ba4:	fb02 5503 	mla	r5, r2, r3, r5
90026ba8:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026bac:	9a00      	ldr	r2, [sp, #0]
90026bae:	fb04 540e 	mla	r4, r4, lr, r5
90026bb2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90026bb6:	1235      	asrs	r5, r6, #8
90026bb8:	fb01 4100 	mla	r1, r1, r0, r4
90026bbc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026bc0:	0a09      	lsrs	r1, r1, #8
90026bc2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90026bc6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90026bca:	fb03 7101 	mla	r1, r3, r1, r7
90026bce:	fb0e 1e08 	mla	lr, lr, r8, r1
90026bd2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90026bd6:	fb00 e101 	mla	r1, r0, r1, lr
90026bda:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90026bde:	b287      	uxth	r7, r0
90026be0:	0a09      	lsrs	r1, r1, #8
90026be2:	437a      	muls	r2, r7
90026be4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026be8:	1c53      	adds	r3, r2, #1
90026bea:	4321      	orrs	r1, r4
90026bec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026bf0:	0c0a      	lsrs	r2, r1, #16
90026bf2:	f3c1 2407 	ubfx	r4, r1, #8, #8
90026bf6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90026bfa:	b2c8      	uxtb	r0, r1
90026bfc:	fb12 f207 	smulbb	r2, r2, r7
90026c00:	fb14 f407 	smulbb	r4, r4, r7
90026c04:	b2db      	uxtb	r3, r3
90026c06:	fb10 f007 	smulbb	r0, r0, r7
90026c0a:	fb05 2503 	mla	r5, r5, r3, r2
90026c0e:	10f2      	asrs	r2, r6, #3
90026c10:	00f6      	lsls	r6, r6, #3
90026c12:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026c16:	b2ad      	uxth	r5, r5
90026c18:	b2f6      	uxtb	r6, r6
90026c1a:	fb02 4203 	mla	r2, r2, r3, r4
90026c1e:	fb06 0303 	mla	r3, r6, r3, r0
90026c22:	b294      	uxth	r4, r2
90026c24:	b299      	uxth	r1, r3
90026c26:	1c6b      	adds	r3, r5, #1
90026c28:	1c62      	adds	r2, r4, #1
90026c2a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026c2e:	1c4b      	adds	r3, r1, #1
90026c30:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90026c34:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026c38:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026c3c:	0952      	lsrs	r2, r2, #5
90026c3e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026c42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026c46:	432b      	orrs	r3, r5
90026c48:	4313      	orrs	r3, r2
90026c4a:	9a02      	ldr	r2, [sp, #8]
90026c4c:	8013      	strh	r3, [r2, #0]
90026c4e:	b005      	add	sp, #20
90026c50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026c54:	2500      	movs	r5, #0
90026c56:	e6ef      	b.n	90026a38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90026c58:	2100      	movs	r1, #0
90026c5a:	460d      	mov	r5, r1
90026c5c:	e6f7      	b.n	90026a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026c5e:	2100      	movs	r1, #0
90026c60:	e6f5      	b.n	90026a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026c62:	4631      	mov	r1, r6
90026c64:	e6f3      	b.n	90026a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026c66:	2400      	movs	r4, #0
90026c68:	e702      	b.n	90026a70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90026c6a:	2200      	movs	r2, #0
90026c6c:	4614      	mov	r4, r2
90026c6e:	e70b      	b.n	90026a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026c70:	4602      	mov	r2, r0
90026c72:	4604      	mov	r4, r0
90026c74:	e708      	b.n	90026a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026c76:	2200      	movs	r2, #0
90026c78:	e706      	b.n	90026a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026c7a:	4632      	mov	r2, r6
90026c7c:	e704      	b.n	90026a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90026c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026c7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026c82:	b09d      	sub	sp, #116	@ 0x74
90026c84:	9219      	str	r2, [sp, #100]	@ 0x64
90026c86:	9307      	str	r3, [sp, #28]
90026c88:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90026c8a:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90026c8e:	901b      	str	r0, [sp, #108]	@ 0x6c
90026c90:	931a      	str	r3, [sp, #104]	@ 0x68
90026c92:	6850      	ldr	r0, [r2, #4]
90026c94:	9117      	str	r1, [sp, #92]	@ 0x5c
90026c96:	6812      	ldr	r2, [r2, #0]
90026c98:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90026c9c:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90026ca0:	fb00 1303 	mla	r3, r0, r3, r1
90026ca4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026ca8:	930a      	str	r3, [sp, #40]	@ 0x28
90026caa:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026cac:	681b      	ldr	r3, [r3, #0]
90026cae:	9310      	str	r3, [sp, #64]	@ 0x40
90026cb0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90026cb4:	930b      	str	r3, [sp, #44]	@ 0x2c
90026cb6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026cb8:	2b00      	cmp	r3, #0
90026cba:	dc03      	bgt.n	90026cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90026cbc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90026cbe:	2b00      	cmp	r3, #0
90026cc0:	f340 8375 	ble.w	900273ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026cc4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026cc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026cca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026cce:	1e48      	subs	r0, r1, #1
90026cd0:	1e57      	subs	r7, r2, #1
90026cd2:	9b07      	ldr	r3, [sp, #28]
90026cd4:	2b00      	cmp	r3, #0
90026cd6:	f340 818e 	ble.w	90026ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90026cda:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026cde:	ea4f 4326 	mov.w	r3, r6, asr #16
90026ce2:	d406      	bmi.n	90026cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026ce4:	4584      	cmp	ip, r0
90026ce6:	da04      	bge.n	90026cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026ce8:	2b00      	cmp	r3, #0
90026cea:	db02      	blt.n	90026cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026cec:	42bb      	cmp	r3, r7
90026cee:	f2c0 8183 	blt.w	90026ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90026cf2:	f11c 0c01 	adds.w	ip, ip, #1
90026cf6:	f100 8173 	bmi.w	90026fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026cfa:	4561      	cmp	r1, ip
90026cfc:	f2c0 8170 	blt.w	90026fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026d00:	3301      	adds	r3, #1
90026d02:	f100 816d 	bmi.w	90026fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026d06:	429a      	cmp	r2, r3
90026d08:	f2c0 816a 	blt.w	90026fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026d0c:	9b07      	ldr	r3, [sp, #28]
90026d0e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90026d10:	9318      	str	r3, [sp, #96]	@ 0x60
90026d12:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026d14:	2b00      	cmp	r3, #0
90026d16:	f340 818c 	ble.w	90027032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90026d1a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90026d1c:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026d20:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026d22:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026d26:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026d2a:	1422      	asrs	r2, r4, #16
90026d2c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026d30:	689b      	ldr	r3, [r3, #8]
90026d32:	f100 81cd 	bmi.w	900270d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026d36:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
90026d3a:	4542      	cmp	r2, r8
90026d3c:	f280 81c8 	bge.w	900270d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026d40:	f1bc 0f00 	cmp.w	ip, #0
90026d44:	f2c0 81c4 	blt.w	900270d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026d48:	f10e 38ff 	add.w	r8, lr, #4294967295	@ 0xffffffff
90026d4c:	45c4      	cmp	ip, r8
90026d4e:	f280 81bf 	bge.w	900270d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026d52:	b21b      	sxth	r3, r3
90026d54:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026d56:	fb0c 2203 	mla	r2, ip, r3, r2
90026d5a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026d5e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026d62:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026d66:	2800      	cmp	r0, #0
90026d68:	f000 81a9 	beq.w	900270be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90026d6c:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026d70:	950c      	str	r5, [sp, #48]	@ 0x30
90026d72:	0e2d      	lsrs	r5, r5, #24
90026d74:	9513      	str	r5, [sp, #76]	@ 0x4c
90026d76:	b181      	cbz	r1, 90026d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026d78:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90026d7c:	3b01      	subs	r3, #1
90026d7e:	009b      	lsls	r3, r3, #2
90026d80:	3304      	adds	r3, #4
90026d82:	eb08 0c03 	add.w	ip, r8, r3
90026d86:	f858 3003 	ldr.w	r3, [r8, r3]
90026d8a:	9308      	str	r3, [sp, #32]
90026d8c:	0e1b      	lsrs	r3, r3, #24
90026d8e:	9311      	str	r3, [sp, #68]	@ 0x44
90026d90:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026d94:	930d      	str	r3, [sp, #52]	@ 0x34
90026d96:	0e1b      	lsrs	r3, r3, #24
90026d98:	9314      	str	r3, [sp, #80]	@ 0x50
90026d9a:	b280      	uxth	r0, r0
90026d9c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026d9e:	b289      	uxth	r1, r1
90026da0:	fb00 f901 	mul.w	r9, r0, r1
90026da4:	0100      	lsls	r0, r0, #4
90026da6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90026daa:	eba0 0809 	sub.w	r8, r0, r9
90026dae:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026db2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90026db4:	b289      	uxth	r1, r1
90026db6:	fa1f f888 	uxth.w	r8, r8
90026dba:	1a5b      	subs	r3, r3, r1
90026dbc:	fb08 f000 	mul.w	r0, r8, r0
90026dc0:	b29b      	uxth	r3, r3
90026dc2:	fb03 000e 	mla	r0, r3, lr, r0
90026dc6:	fb01 0005 	mla	r0, r1, r5, r0
90026dca:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026dcc:	fb09 0005 	mla	r0, r9, r5, r0
90026dd0:	f3c0 2007 	ubfx	r0, r0, #8, #8
90026dd4:	2800      	cmp	r0, #0
90026dd6:	f000 80fa 	beq.w	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026dda:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90026dde:	d01b      	beq.n	90026e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026de0:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026de4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026de8:	fb0e fa0a 	mul.w	sl, lr, sl
90026dec:	fb0e fe02 	mul.w	lr, lr, r2
90026df0:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026df4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026df8:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90026dfc:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026e00:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026e04:	4452      	add	r2, sl
90026e06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026e0a:	0a12      	lsrs	r2, r2, #8
90026e0c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026e10:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026e14:	ea42 020c 	orr.w	r2, r2, ip
90026e18:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026e1a:	2dff      	cmp	r5, #255	@ 0xff
90026e1c:	d021      	beq.n	90026e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90026e1e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026e20:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026e24:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026e26:	fb05 fb0b 	mul.w	fp, r5, fp
90026e2a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026e2c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026e30:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026e32:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026e36:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026e3a:	fb05 fa0a 	mul.w	sl, r5, sl
90026e3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026e42:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026e46:	44de      	add	lr, fp
90026e48:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026e4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026e50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026e54:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026e58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026e5c:	ea4e 050a 	orr.w	r5, lr, sl
90026e60:	950c      	str	r5, [sp, #48]	@ 0x30
90026e62:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026e64:	2dff      	cmp	r5, #255	@ 0xff
90026e66:	d021      	beq.n	90026eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026e68:	9d08      	ldr	r5, [sp, #32]
90026e6a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026e6e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026e70:	fb05 fb0b 	mul.w	fp, r5, fp
90026e74:	9d08      	ldr	r5, [sp, #32]
90026e76:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026e7a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026e7c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026e80:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026e84:	fb05 fa0a 	mul.w	sl, r5, sl
90026e88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026e8c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026e90:	44de      	add	lr, fp
90026e92:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026e96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026e9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026e9e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026ea2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026ea6:	ea4e 050a 	orr.w	r5, lr, sl
90026eaa:	9508      	str	r5, [sp, #32]
90026eac:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026eae:	2dff      	cmp	r5, #255	@ 0xff
90026eb0:	d021      	beq.n	90026ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90026eb2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026eb4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026eb8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026eba:	fb05 fb0b 	mul.w	fp, r5, fp
90026ebe:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026ec0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026ec4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026ec6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026eca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026ece:	fb05 fa0a 	mul.w	sl, r5, sl
90026ed2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026ed6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026eda:	44de      	add	lr, fp
90026edc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026ee0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026ee4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026ee8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026eec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026ef0:	ea4e 050a 	orr.w	r5, lr, sl
90026ef4:	950d      	str	r5, [sp, #52]	@ 0x34
90026ef6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026ef8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90026efc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026f00:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026f04:	9d08      	ldr	r5, [sp, #32]
90026f06:	fb08 fc0c 	mul.w	ip, r8, ip
90026f0a:	fb03 cc0e 	mla	ip, r3, lr, ip
90026f0e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026f12:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026f14:	fb01 cc0e 	mla	ip, r1, lr, ip
90026f18:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026f1c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026f1e:	fb09 cc0e 	mla	ip, r9, lr, ip
90026f22:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026f26:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026f28:	fb08 f80e 	mul.w	r8, r8, lr
90026f2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026f30:	fb03 8202 	mla	r2, r3, r2, r8
90026f34:	9b08      	ldr	r3, [sp, #32]
90026f36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026f3a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90026f3e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026f40:	fb01 220a 	mla	r2, r1, sl, r2
90026f44:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90026f48:	883b      	ldrh	r3, [r7, #0]
90026f4a:	fb09 2901 	mla	r9, r9, r1, r2
90026f4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026f50:	1219      	asrs	r1, r3, #8
90026f52:	4342      	muls	r2, r0
90026f54:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026f58:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026f5c:	1c50      	adds	r0, r2, #1
90026f5e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026f62:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90026f66:	ea4c 0c09 	orr.w	ip, ip, r9
90026f6a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026f6e:	ea4f 421c 	mov.w	r2, ip, lsr #16
90026f72:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90026f76:	fa5f fc8c 	uxtb.w	ip, ip
90026f7a:	fb12 f205 	smulbb	r2, r2, r5
90026f7e:	b2c0      	uxtb	r0, r0
90026f80:	fb1c fc05 	smulbb	ip, ip, r5
90026f84:	fb01 2100 	mla	r1, r1, r0, r2
90026f88:	10da      	asrs	r2, r3, #3
90026f8a:	fb1e fe05 	smulbb	lr, lr, r5
90026f8e:	00db      	lsls	r3, r3, #3
90026f90:	b289      	uxth	r1, r1
90026f92:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026f96:	b2db      	uxtb	r3, r3
90026f98:	fb02 e200 	mla	r2, r2, r0, lr
90026f9c:	fb03 c300 	mla	r3, r3, r0, ip
90026fa0:	b292      	uxth	r2, r2
90026fa2:	fa1f fc83 	uxth.w	ip, r3
90026fa6:	1c4b      	adds	r3, r1, #1
90026fa8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026fac:	f10c 0301 	add.w	r3, ip, #1
90026fb0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90026fb4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90026fb8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026fbc:	430b      	orrs	r3, r1
90026fbe:	1c51      	adds	r1, r2, #1
90026fc0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026fc4:	0952      	lsrs	r2, r2, #5
90026fc6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026fca:	4313      	orrs	r3, r2
90026fcc:	803b      	strh	r3, [r7, #0]
90026fce:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026fd0:	3702      	adds	r7, #2
90026fd2:	441c      	add	r4, r3
90026fd4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026fd6:	441e      	add	r6, r3
90026fd8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026fda:	3b01      	subs	r3, #1
90026fdc:	9318      	str	r3, [sp, #96]	@ 0x60
90026fde:	e698      	b.n	90026d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90026fe0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026fe2:	441c      	add	r4, r3
90026fe4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026fe6:	441e      	add	r6, r3
90026fe8:	9b07      	ldr	r3, [sp, #28]
90026fea:	3b01      	subs	r3, #1
90026fec:	9307      	str	r3, [sp, #28]
90026fee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026ff0:	3302      	adds	r3, #2
90026ff2:	930a      	str	r3, [sp, #40]	@ 0x28
90026ff4:	e66d      	b.n	90026cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90026ff6:	d023      	beq.n	90027040 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026ff8:	9b07      	ldr	r3, [sp, #28]
90026ffa:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90026ffc:	3b01      	subs	r3, #1
90026ffe:	fb00 4003 	mla	r0, r0, r3, r4
90027002:	1400      	asrs	r0, r0, #16
90027004:	f53f ae82 	bmi.w	90026d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027008:	3901      	subs	r1, #1
9002700a:	4288      	cmp	r0, r1
9002700c:	f6bf ae7e 	bge.w	90026d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027010:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90027012:	fb01 6303 	mla	r3, r1, r3, r6
90027016:	141b      	asrs	r3, r3, #16
90027018:	f53f ae78 	bmi.w	90026d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002701c:	3a01      	subs	r2, #1
9002701e:	4293      	cmp	r3, r2
90027020:	f6bf ae74 	bge.w	90026d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027024:	f8dd b01c 	ldr.w	fp, [sp, #28]
90027028:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
9002702c:	f1bb 0f00 	cmp.w	fp, #0
90027030:	dc6c      	bgt.n	9002710c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90027032:	9b07      	ldr	r3, [sp, #28]
90027034:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027038:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002703a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002703e:	930a      	str	r3, [sp, #40]	@ 0x28
90027040:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027042:	2b00      	cmp	r3, #0
90027044:	f340 81b3 	ble.w	900273ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90027048:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002704c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002704e:	ee30 0a04 	vadd.f32	s0, s0, s8
90027052:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027056:	eef0 6a62 	vmov.f32	s13, s5
9002705a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002705e:	ee31 1a05 	vadd.f32	s2, s2, s10
90027062:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027066:	ee16 4a90 	vmov	r4, s13
9002706a:	eef0 6a43 	vmov.f32	s13, s6
9002706e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027072:	ee16 6a90 	vmov	r6, s13
90027076:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002707a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002707e:	ee77 2a62 	vsub.f32	s5, s14, s5
90027082:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027086:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002708a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002708e:	ee12 2a90 	vmov	r2, s5
90027092:	eef0 2a47 	vmov.f32	s5, s14
90027096:	fb92 f3f3 	sdiv	r3, r2, r3
9002709a:	ee13 2a10 	vmov	r2, s6
9002709e:	9329      	str	r3, [sp, #164]	@ 0xa4
900270a0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900270a2:	eeb0 3a67 	vmov.f32	s6, s15
900270a6:	fb92 f3f3 	sdiv	r3, r2, r3
900270aa:	932a      	str	r3, [sp, #168]	@ 0xa8
900270ac:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900270ae:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900270b0:	3b01      	subs	r3, #1
900270b2:	9317      	str	r3, [sp, #92]	@ 0x5c
900270b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900270b6:	bf08      	it	eq
900270b8:	4613      	moveq	r3, r2
900270ba:	9307      	str	r3, [sp, #28]
900270bc:	e5fb      	b.n	90026cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900270be:	2900      	cmp	r1, #0
900270c0:	f43f ae6b 	beq.w	90026d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900270c4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900270c8:	9308      	str	r3, [sp, #32]
900270ca:	0e1b      	lsrs	r3, r3, #24
900270cc:	9311      	str	r3, [sp, #68]	@ 0x44
900270ce:	e664      	b.n	90026d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900270d0:	f112 0801 	adds.w	r8, r2, #1
900270d4:	f53f af7b 	bmi.w	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900270d8:	4543      	cmp	r3, r8
900270da:	f6ff af78 	blt.w	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900270de:	f11c 0801 	adds.w	r8, ip, #1
900270e2:	f53f af74 	bmi.w	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900270e6:	45c6      	cmp	lr, r8
900270e8:	f6ff af71 	blt.w	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900270ec:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
900270ee:	b21b      	sxth	r3, r3
900270f0:	9201      	str	r2, [sp, #4]
900270f2:	fa0f f28e 	sxth.w	r2, lr
900270f6:	e9cd 1504 	strd	r1, r5, [sp, #16]
900270fa:	e9cd c002 	strd	ip, r0, [sp, #8]
900270fe:	9200      	str	r2, [sp, #0]
90027100:	4639      	mov	r1, r7
90027102:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027104:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90027106:	f7ff fc79 	bl	900269fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002710a:	e760      	b.n	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002710c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002710e:	1427      	asrs	r7, r4, #16
90027110:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027112:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027116:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002711a:	1433      	asrs	r3, r6, #16
9002711c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027120:	fb01 7303 	mla	r3, r1, r3, r7
90027124:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90027128:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9002712c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027130:	2a00      	cmp	r2, #0
90027132:	f000 8133 	beq.w	9002739c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90027136:	687d      	ldr	r5, [r7, #4]
90027138:	950e      	str	r5, [sp, #56]	@ 0x38
9002713a:	0e2d      	lsrs	r5, r5, #24
9002713c:	9515      	str	r5, [sp, #84]	@ 0x54
9002713e:	b178      	cbz	r0, 90027160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027140:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90027144:	3901      	subs	r1, #1
90027146:	0089      	lsls	r1, r1, #2
90027148:	3104      	adds	r1, #4
9002714a:	eb07 0e01 	add.w	lr, r7, r1
9002714e:	5879      	ldr	r1, [r7, r1]
90027150:	9109      	str	r1, [sp, #36]	@ 0x24
90027152:	0e09      	lsrs	r1, r1, #24
90027154:	9112      	str	r1, [sp, #72]	@ 0x48
90027156:	f8de 1004 	ldr.w	r1, [lr, #4]
9002715a:	910f      	str	r1, [sp, #60]	@ 0x3c
9002715c:	0e09      	lsrs	r1, r1, #24
9002715e:	9116      	str	r1, [sp, #88]	@ 0x58
90027160:	b292      	uxth	r2, r2
90027162:	9915      	ldr	r1, [sp, #84]	@ 0x54
90027164:	b280      	uxth	r0, r0
90027166:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027168:	fb02 f800 	mul.w	r8, r2, r0
9002716c:	0112      	lsls	r2, r2, #4
9002716e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90027172:	eba2 0e08 	sub.w	lr, r2, r8
90027176:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002717a:	b280      	uxth	r0, r0
9002717c:	fa1f fe8e 	uxth.w	lr, lr
90027180:	1a12      	subs	r2, r2, r0
90027182:	fb0e f101 	mul.w	r1, lr, r1
90027186:	b292      	uxth	r2, r2
90027188:	fb02 110c 	mla	r1, r2, ip, r1
9002718c:	fb00 1105 	mla	r1, r0, r5, r1
90027190:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90027192:	fb08 1105 	mla	r1, r8, r5, r1
90027196:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002719a:	2900      	cmp	r1, #0
9002719c:	f000 80f5 	beq.w	9002738a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
900271a0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900271a4:	d019      	beq.n	900271da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900271a6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900271aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900271ae:	fb0c fa0a 	mul.w	sl, ip, sl
900271b2:	fb0c fc03 	mul.w	ip, ip, r3
900271b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900271ba:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900271be:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900271c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900271c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900271ca:	4453      	add	r3, sl
900271cc:	0a3f      	lsrs	r7, r7, #8
900271ce:	0a1b      	lsrs	r3, r3, #8
900271d0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900271d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900271d8:	433b      	orrs	r3, r7
900271da:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900271dc:	2dff      	cmp	r5, #255	@ 0xff
900271de:	d020      	beq.n	90027222 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900271e0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900271e2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900271e6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900271e8:	436f      	muls	r7, r5
900271ea:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900271ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900271f0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900271f4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900271f6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900271fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900271fe:	fb05 fa0a 	mul.w	sl, r5, sl
90027202:	44bc      	add	ip, r7
90027204:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027208:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002720c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027210:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027214:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027218:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002721c:	ea4c 050a 	orr.w	r5, ip, sl
90027220:	950e      	str	r5, [sp, #56]	@ 0x38
90027222:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027224:	2dff      	cmp	r5, #255	@ 0xff
90027226:	d020      	beq.n	9002726a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90027228:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002722a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002722e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027230:	436f      	muls	r7, r5
90027232:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027234:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027238:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002723c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002723e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027242:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027246:	fb05 fa0a 	mul.w	sl, r5, sl
9002724a:	44bc      	add	ip, r7
9002724c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027250:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027254:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027258:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002725c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027260:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027264:	ea4c 050a 	orr.w	r5, ip, sl
90027268:	9509      	str	r5, [sp, #36]	@ 0x24
9002726a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002726c:	2dff      	cmp	r5, #255	@ 0xff
9002726e:	d020      	beq.n	900272b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90027270:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027272:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027276:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90027278:	436f      	muls	r7, r5
9002727a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002727c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027280:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027284:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90027286:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002728a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002728e:	fb05 fa0a 	mul.w	sl, r5, sl
90027292:	44bc      	add	ip, r7
90027294:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027298:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002729c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900272a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900272a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900272a8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900272ac:	ea4c 050a 	orr.w	r5, ip, sl
900272b0:	950f      	str	r5, [sp, #60]	@ 0x3c
900272b2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900272b4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900272b8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900272bc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900272c0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900272c2:	fb0e f707 	mul.w	r7, lr, r7
900272c6:	fb02 770c 	mla	r7, r2, ip, r7
900272ca:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900272ce:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900272d0:	fb00 770c 	mla	r7, r0, ip, r7
900272d4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900272d8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900272da:	fb08 770c 	mla	r7, r8, ip, r7
900272de:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900272e2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900272e4:	fb0e fe0c 	mul.w	lr, lr, ip
900272e8:	0a3f      	lsrs	r7, r7, #8
900272ea:	fb02 e303 	mla	r3, r2, r3, lr
900272ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900272f0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900272f4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900272f8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900272fa:	fb00 330a 	mla	r3, r0, sl, r3
900272fe:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90027302:	f8b9 0000 	ldrh.w	r0, [r9]
90027306:	fb08 3c0c 	mla	ip, r8, ip, r3
9002730a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002730c:	1202      	asrs	r2, r0, #8
9002730e:	4359      	muls	r1, r3
90027310:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027314:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90027318:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002731c:	1c4b      	adds	r3, r1, #1
9002731e:	ea47 070c 	orr.w	r7, r7, ip
90027322:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90027326:	0c3b      	lsrs	r3, r7, #16
90027328:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9002732c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90027330:	b2ff      	uxtb	r7, r7
90027332:	fb13 f305 	smulbb	r3, r3, r5
90027336:	b2c9      	uxtb	r1, r1
90027338:	fb17 f705 	smulbb	r7, r7, r5
9002733c:	fb02 3201 	mla	r2, r2, r1, r3
90027340:	10c3      	asrs	r3, r0, #3
90027342:	fb1c fc05 	smulbb	ip, ip, r5
90027346:	00c0      	lsls	r0, r0, #3
90027348:	b292      	uxth	r2, r2
9002734a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002734e:	b2c0      	uxtb	r0, r0
90027350:	fb03 c301 	mla	r3, r3, r1, ip
90027354:	fb00 7001 	mla	r0, r0, r1, r7
90027358:	1c51      	adds	r1, r2, #1
9002735a:	b29b      	uxth	r3, r3
9002735c:	b280      	uxth	r0, r0
9002735e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027362:	f100 0c01 	add.w	ip, r0, #1
90027366:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002736a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
9002736e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90027372:	ea4c 0202 	orr.w	r2, ip, r2
90027376:	f103 0c01 	add.w	ip, r3, #1
9002737a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002737e:	095b      	lsrs	r3, r3, #5
90027380:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027384:	431a      	orrs	r2, r3
90027386:	f8a9 2000 	strh.w	r2, [r9]
9002738a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002738c:	f109 0902 	add.w	r9, r9, #2
90027390:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
90027394:	441c      	add	r4, r3
90027396:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90027398:	441e      	add	r6, r3
9002739a:	e647      	b.n	9002702c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
9002739c:	2800      	cmp	r0, #0
9002739e:	f43f aedf 	beq.w	90027160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900273a2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
900273a6:	9109      	str	r1, [sp, #36]	@ 0x24
900273a8:	0e09      	lsrs	r1, r1, #24
900273aa:	9112      	str	r1, [sp, #72]	@ 0x48
900273ac:	e6d8      	b.n	90027160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900273ae:	b01d      	add	sp, #116	@ 0x74
900273b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900273b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900273b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900273b8:	b085      	sub	sp, #20
900273ba:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900273be:	9102      	str	r1, [sp, #8]
900273c0:	2c00      	cmp	r4, #0
900273c2:	fb04 7103 	mla	r1, r4, r3, r7
900273c6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900273ca:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900273ce:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900273d2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900273d6:	f2c0 810c 	blt.w	900275f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900273da:	45a6      	cmp	lr, r4
900273dc:	f340 8109 	ble.w	900275f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900273e0:	2f00      	cmp	r7, #0
900273e2:	f2c0 8104 	blt.w	900275ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900273e6:	42bb      	cmp	r3, r7
900273e8:	f340 8101 	ble.w	900275ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900273ec:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900273f0:	1c7a      	adds	r2, r7, #1
900273f2:	f100 8101 	bmi.w	900275f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900273f6:	4293      	cmp	r3, r2
900273f8:	f340 80fe 	ble.w	900275f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900273fc:	2e00      	cmp	r6, #0
900273fe:	f000 80fd 	beq.w	900275fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90027402:	f8dc 1004 	ldr.w	r1, [ip, #4]
90027406:	3401      	adds	r4, #1
90027408:	f100 80fc 	bmi.w	90027604 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002740c:	45a6      	cmp	lr, r4
9002740e:	f340 80f9 	ble.w	90027604 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90027412:	2800      	cmp	r0, #0
90027414:	f000 80f9 	beq.w	9002760a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90027418:	2f00      	cmp	r7, #0
9002741a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
9002741e:	f2c0 80ef 	blt.w	90027600 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027422:	42bb      	cmp	r3, r7
90027424:	f340 80ec 	ble.w	90027600 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027428:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002742c:	3701      	adds	r7, #1
9002742e:	f100 80ef 	bmi.w	90027610 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027432:	42bb      	cmp	r3, r7
90027434:	f340 80ec 	ble.w	90027610 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027438:	2e00      	cmp	r6, #0
9002743a:	f000 80eb 	beq.w	90027614 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
9002743e:	6852      	ldr	r2, [r2, #4]
90027440:	b2b6      	uxth	r6, r6
90027442:	b280      	uxth	r0, r0
90027444:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90027448:	fb00 fe06 	mul.w	lr, r0, r6
9002744c:	0136      	lsls	r6, r6, #4
9002744e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90027452:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90027456:	eba6 070e 	sub.w	r7, r6, lr
9002745a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002745e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90027462:	b280      	uxth	r0, r0
90027464:	b2bf      	uxth	r7, r7
90027466:	1a1b      	subs	r3, r3, r0
90027468:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002746c:	fb07 f60a 	mul.w	r6, r7, sl
90027470:	b29b      	uxth	r3, r3
90027472:	fb0b 6603 	mla	r6, fp, r3, r6
90027476:	fb00 6609 	mla	r6, r0, r9, r6
9002747a:	fb0e 6608 	mla	r6, lr, r8, r6
9002747e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90027482:	9600      	str	r6, [sp, #0]
90027484:	2e00      	cmp	r6, #0
90027486:	f000 80af 	beq.w	900275e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
9002748a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002748e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90027492:	9e02      	ldr	r6, [sp, #8]
90027494:	fb0b fc0c 	mul.w	ip, fp, ip
90027498:	fb0b f505 	mul.w	r5, fp, r5
9002749c:	8836      	ldrh	r6, [r6, #0]
9002749e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900274a2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900274a6:	9501      	str	r5, [sp, #4]
900274a8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900274ac:	44dc      	add	ip, fp
900274ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900274b2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900274b6:	9503      	str	r5, [sp, #12]
900274b8:	9d01      	ldr	r5, [sp, #4]
900274ba:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900274be:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900274c2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900274c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900274ca:	fb0a fc0c 	mul.w	ip, sl, ip
900274ce:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900274d2:	fb0a fa01 	mul.w	sl, sl, r1
900274d6:	ea4f 251c 	mov.w	r5, ip, lsr #8
900274da:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900274de:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900274e2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900274e6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900274ea:	4465      	add	r5, ip
900274ec:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900274f0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900274f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900274f8:	fb09 fc0c 	mul.w	ip, r9, ip
900274fc:	0a2d      	lsrs	r5, r5, #8
900274fe:	fb09 f904 	mul.w	r9, r9, r4
90027502:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027506:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002750a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002750e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90027512:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90027516:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002751a:	437d      	muls	r5, r7
9002751c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90027520:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90027524:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027528:	4461      	add	r1, ip
9002752a:	fb08 f404 	mul.w	r4, r8, r4
9002752e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027532:	fb08 f802 	mul.w	r8, r8, r2
90027536:	0a09      	lsrs	r1, r1, #8
90027538:	0a22      	lsrs	r2, r4, #8
9002753a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002753e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90027542:	fb07 f70a 	mul.w	r7, r7, sl
90027546:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002754a:	4414      	add	r4, r2
9002754c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90027550:	0a24      	lsrs	r4, r4, #8
90027552:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90027556:	9a03      	ldr	r2, [sp, #12]
90027558:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002755c:	fb02 5503 	mla	r5, r2, r3, r5
90027560:	ea4f 2818 	mov.w	r8, r8, lsr #8
90027564:	fb04 540e 	mla	r4, r4, lr, r5
90027568:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002756c:	fb01 4100 	mla	r1, r1, r0, r4
90027570:	0a09      	lsrs	r1, r1, #8
90027572:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90027576:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002757a:	fb03 7101 	mla	r1, r3, r1, r7
9002757e:	9b00      	ldr	r3, [sp, #0]
90027580:	fb0e 1e08 	mla	lr, lr, r8, r1
90027584:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90027588:	43da      	mvns	r2, r3
9002758a:	1233      	asrs	r3, r6, #8
9002758c:	fb00 e101 	mla	r1, r0, r1, lr
90027590:	10f0      	asrs	r0, r6, #3
90027592:	b2d2      	uxtb	r2, r2
90027594:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90027598:	0a09      	lsrs	r1, r1, #8
9002759a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002759e:	00f6      	lsls	r6, r6, #3
900275a0:	4353      	muls	r3, r2
900275a2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900275a6:	4350      	muls	r0, r2
900275a8:	b2f6      	uxtb	r6, r6
900275aa:	4321      	orrs	r1, r4
900275ac:	4356      	muls	r6, r2
900275ae:	1c5a      	adds	r2, r3, #1
900275b0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900275b4:	0c0b      	lsrs	r3, r1, #16
900275b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900275ba:	1c42      	adds	r2, r0, #1
900275bc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900275c0:	0a0a      	lsrs	r2, r1, #8
900275c2:	021b      	lsls	r3, r3, #8
900275c4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900275c8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900275cc:	00d2      	lsls	r2, r2, #3
900275ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900275d2:	4313      	orrs	r3, r2
900275d4:	1c72      	adds	r2, r6, #1
900275d6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900275da:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900275de:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900275e2:	4319      	orrs	r1, r3
900275e4:	9b02      	ldr	r3, [sp, #8]
900275e6:	8019      	strh	r1, [r3, #0]
900275e8:	b005      	add	sp, #20
900275ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900275ee:	2500      	movs	r5, #0
900275f0:	e6fe      	b.n	900273f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
900275f2:	2100      	movs	r1, #0
900275f4:	460d      	mov	r5, r1
900275f6:	e706      	b.n	90027406 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900275f8:	2100      	movs	r1, #0
900275fa:	e704      	b.n	90027406 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900275fc:	4631      	mov	r1, r6
900275fe:	e702      	b.n	90027406 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027600:	2400      	movs	r4, #0
90027602:	e713      	b.n	9002742c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90027604:	2200      	movs	r2, #0
90027606:	4614      	mov	r4, r2
90027608:	e71a      	b.n	90027440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002760a:	4602      	mov	r2, r0
9002760c:	4604      	mov	r4, r0
9002760e:	e717      	b.n	90027440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027610:	2200      	movs	r2, #0
90027612:	e715      	b.n	90027440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027614:	4632      	mov	r2, r6
90027616:	e713      	b.n	90027440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90027618 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002761c:	b09b      	sub	sp, #108	@ 0x6c
9002761e:	9218      	str	r2, [sp, #96]	@ 0x60
90027620:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90027622:	9019      	str	r0, [sp, #100]	@ 0x64
90027624:	9116      	str	r1, [sp, #88]	@ 0x58
90027626:	6850      	ldr	r0, [r2, #4]
90027628:	9307      	str	r3, [sp, #28]
9002762a:	6812      	ldr	r2, [r2, #0]
9002762c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90027630:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90027634:	fb00 1303 	mla	r3, r0, r3, r1
90027638:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002763c:	930a      	str	r3, [sp, #40]	@ 0x28
9002763e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027640:	681b      	ldr	r3, [r3, #0]
90027642:	930f      	str	r3, [sp, #60]	@ 0x3c
90027644:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027646:	2b00      	cmp	r3, #0
90027648:	dc03      	bgt.n	90027652 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002764a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002764c:	2b00      	cmp	r3, #0
9002764e:	f340 8387 	ble.w	90027d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027652:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027654:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027658:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002765c:	1e48      	subs	r0, r1, #1
9002765e:	1e57      	subs	r7, r2, #1
90027660:	9b07      	ldr	r3, [sp, #28]
90027662:	2b00      	cmp	r3, #0
90027664:	f340 8166 	ble.w	90027934 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90027668:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002766c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027670:	d406      	bmi.n	90027680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027672:	4584      	cmp	ip, r0
90027674:	da04      	bge.n	90027680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027676:	2b00      	cmp	r3, #0
90027678:	db02      	blt.n	90027680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002767a:	42bb      	cmp	r3, r7
9002767c:	f2c0 815b 	blt.w	90027936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90027680:	f11c 0c01 	adds.w	ip, ip, #1
90027684:	f100 814b 	bmi.w	9002791e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027688:	4561      	cmp	r1, ip
9002768a:	f2c0 8148 	blt.w	9002791e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002768e:	3301      	adds	r3, #1
90027690:	f100 8145 	bmi.w	9002791e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027694:	429a      	cmp	r2, r3
90027696:	f2c0 8142 	blt.w	9002791e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002769a:	9b07      	ldr	r3, [sp, #28]
9002769c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9002769e:	9317      	str	r3, [sp, #92]	@ 0x5c
900276a0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900276a2:	2b00      	cmp	r3, #0
900276a4:	f340 8165 	ble.w	90027972 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900276a8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
900276aa:	ea4f 4c26 	mov.w	ip, r6, asr #16
900276ae:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900276b0:	f3c4 3103 	ubfx	r1, r4, #12, #4
900276b4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900276b8:	1422      	asrs	r2, r4, #16
900276ba:	f3c6 3003 	ubfx	r0, r6, #12, #4
900276be:	689b      	ldr	r3, [r3, #8]
900276c0:	f100 81d5 	bmi.w	90027a6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900276c4:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
900276c8:	4542      	cmp	r2, r8
900276ca:	f280 81d0 	bge.w	90027a6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900276ce:	f1bc 0f00 	cmp.w	ip, #0
900276d2:	f2c0 81cc 	blt.w	90027a6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900276d6:	f10e 38ff 	add.w	r8, lr, #4294967295	@ 0xffffffff
900276da:	45c4      	cmp	ip, r8
900276dc:	f280 81c7 	bge.w	90027a6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900276e0:	b21b      	sxth	r3, r3
900276e2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900276e4:	fb0c 2203 	mla	r2, ip, r3, r2
900276e8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900276ec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900276f0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900276f4:	2900      	cmp	r1, #0
900276f6:	f000 8182 	beq.w	900279fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900276fa:	f8d8 5004 	ldr.w	r5, [r8, #4]
900276fe:	950b      	str	r5, [sp, #44]	@ 0x2c
90027700:	0e2d      	lsrs	r5, r5, #24
90027702:	9512      	str	r5, [sp, #72]	@ 0x48
90027704:	b180      	cbz	r0, 90027728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027706:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002770a:	3b01      	subs	r3, #1
9002770c:	009b      	lsls	r3, r3, #2
9002770e:	3304      	adds	r3, #4
90027710:	eb08 0c03 	add.w	ip, r8, r3
90027714:	f858 3003 	ldr.w	r3, [r8, r3]
90027718:	9308      	str	r3, [sp, #32]
9002771a:	0e1b      	lsrs	r3, r3, #24
9002771c:	9310      	str	r3, [sp, #64]	@ 0x40
9002771e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90027722:	930c      	str	r3, [sp, #48]	@ 0x30
90027724:	0e1b      	lsrs	r3, r3, #24
90027726:	9313      	str	r3, [sp, #76]	@ 0x4c
90027728:	b289      	uxth	r1, r1
9002772a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002772c:	b280      	uxth	r0, r0
9002772e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027730:	fb01 f900 	mul.w	r9, r1, r0
90027734:	0109      	lsls	r1, r1, #4
90027736:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002773a:	eba1 0809 	sub.w	r8, r1, r9
9002773e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90027742:	b280      	uxth	r0, r0
90027744:	fa1f f888 	uxth.w	r8, r8
90027748:	1a09      	subs	r1, r1, r0
9002774a:	fb08 f303 	mul.w	r3, r8, r3
9002774e:	b289      	uxth	r1, r1
90027750:	fb01 330e 	mla	r3, r1, lr, r3
90027754:	fb00 3305 	mla	r3, r0, r5, r3
90027758:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002775a:	fb09 3305 	mla	r3, r9, r5, r3
9002775e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027762:	2b00      	cmp	r3, #0
90027764:	f000 80d2 	beq.w	9002790c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027768:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002776c:	d01b      	beq.n	900277a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
9002776e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90027772:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027776:	fb0e fa0a 	mul.w	sl, lr, sl
9002777a:	fb0e fe02 	mul.w	lr, lr, r2
9002777e:	ea4f 221a 	mov.w	r2, sl, lsr #8
90027782:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90027786:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002778a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002778e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90027792:	4452      	add	r2, sl
90027794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027798:	0a12      	lsrs	r2, r2, #8
9002779a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002779e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900277a2:	ea42 020c 	orr.w	r2, r2, ip
900277a6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900277a8:	2dff      	cmp	r5, #255	@ 0xff
900277aa:	d021      	beq.n	900277f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900277ac:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900277ae:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900277b2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900277b4:	fb05 fb0b 	mul.w	fp, r5, fp
900277b8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900277ba:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900277be:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900277c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900277c4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900277c8:	fb05 fa0a 	mul.w	sl, r5, sl
900277cc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900277d0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900277d4:	44de      	add	lr, fp
900277d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900277da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900277de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900277e2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900277e6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900277ea:	ea4e 050a 	orr.w	r5, lr, sl
900277ee:	950b      	str	r5, [sp, #44]	@ 0x2c
900277f0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900277f2:	2dff      	cmp	r5, #255	@ 0xff
900277f4:	d021      	beq.n	9002783a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
900277f6:	9d08      	ldr	r5, [sp, #32]
900277f8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900277fc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900277fe:	fb05 fb0b 	mul.w	fp, r5, fp
90027802:	9d08      	ldr	r5, [sp, #32]
90027804:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90027808:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002780a:	fb05 fa0e 	mul.w	sl, r5, lr
9002780e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027812:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90027816:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002781a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002781e:	44de      	add	lr, fp
90027820:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027824:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027828:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002782c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027830:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027834:	ea4e 050a 	orr.w	r5, lr, sl
90027838:	9508      	str	r5, [sp, #32]
9002783a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002783c:	2dff      	cmp	r5, #255	@ 0xff
9002783e:	d021      	beq.n	90027884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90027840:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027842:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90027846:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027848:	fb05 fb0b 	mul.w	fp, r5, fp
9002784c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002784e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027852:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027854:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027858:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002785c:	fb05 fa0a 	mul.w	sl, r5, sl
90027860:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027864:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027868:	44de      	add	lr, fp
9002786a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002786e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027872:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027876:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002787a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002787e:	ea4e 050a 	orr.w	r5, lr, sl
90027882:	950c      	str	r5, [sp, #48]	@ 0x30
90027884:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90027886:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002788a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002788e:	2bff      	cmp	r3, #255	@ 0xff
90027890:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027894:	9d08      	ldr	r5, [sp, #32]
90027896:	fb08 fc0c 	mul.w	ip, r8, ip
9002789a:	fb01 cc0e 	mla	ip, r1, lr, ip
9002789e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900278a2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900278a4:	fb00 cc0e 	mla	ip, r0, lr, ip
900278a8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900278ac:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900278ae:	fb09 cc0e 	mla	ip, r9, lr, ip
900278b2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900278b6:	fb08 f80e 	mul.w	r8, r8, lr
900278ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900278be:	fb01 8202 	mla	r2, r1, r2, r8
900278c2:	9908      	ldr	r1, [sp, #32]
900278c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900278c8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900278cc:	990c      	ldr	r1, [sp, #48]	@ 0x30
900278ce:	fb00 220a 	mla	r2, r0, sl, r2
900278d2:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
900278d6:	fb09 2900 	mla	r9, r9, r0, r2
900278da:	ea4f 2919 	mov.w	r9, r9, lsr #8
900278de:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900278e2:	ea4c 0c09 	orr.w	ip, ip, r9
900278e6:	ea4f 221c 	mov.w	r2, ip, lsr #8
900278ea:	f040 8091 	bne.w	90027a10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900278ee:	ea4f 135c 	mov.w	r3, ip, lsr #5
900278f2:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
900278f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900278fa:	f022 0207 	bic.w	r2, r2, #7
900278fe:	431a      	orrs	r2, r3
90027900:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90027904:	ea4c 0c02 	orr.w	ip, ip, r2
90027908:	f8a7 c000 	strh.w	ip, [r7]
9002790c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002790e:	3702      	adds	r7, #2
90027910:	441c      	add	r4, r3
90027912:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027914:	441e      	add	r6, r3
90027916:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027918:	3b01      	subs	r3, #1
9002791a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002791c:	e6c0      	b.n	900276a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002791e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027920:	441c      	add	r4, r3
90027922:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027924:	441e      	add	r6, r3
90027926:	9b07      	ldr	r3, [sp, #28]
90027928:	3b01      	subs	r3, #1
9002792a:	9307      	str	r3, [sp, #28]
9002792c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002792e:	3302      	adds	r3, #2
90027930:	930a      	str	r3, [sp, #40]	@ 0x28
90027932:	e695      	b.n	90027660 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027934:	d024      	beq.n	90027980 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90027936:	9b07      	ldr	r3, [sp, #28]
90027938:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002793a:	3b01      	subs	r3, #1
9002793c:	fb00 4003 	mla	r0, r0, r3, r4
90027940:	1400      	asrs	r0, r0, #16
90027942:	f53f aeaa 	bmi.w	9002769a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027946:	3901      	subs	r1, #1
90027948:	4288      	cmp	r0, r1
9002794a:	f6bf aea6 	bge.w	9002769a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002794e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90027950:	fb01 6303 	mla	r3, r1, r3, r6
90027954:	141b      	asrs	r3, r3, #16
90027956:	f53f aea0 	bmi.w	9002769a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002795a:	3a01      	subs	r2, #1
9002795c:	4293      	cmp	r3, r2
9002795e:	f6bf ae9c 	bge.w	9002769a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027962:	f8dd b01c 	ldr.w	fp, [sp, #28]
90027966:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9002796a:	f1bb 0f00 	cmp.w	fp, #0
9002796e:	f300 809a 	bgt.w	90027aa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90027972:	9b07      	ldr	r3, [sp, #28]
90027974:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027978:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002797a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002797e:	930a      	str	r3, [sp, #40]	@ 0x28
90027980:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027982:	2b00      	cmp	r3, #0
90027984:	f340 81ec 	ble.w	90027d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027988:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002798c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002798e:	ee30 0a04 	vadd.f32	s0, s0, s8
90027992:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027996:	eef0 6a62 	vmov.f32	s13, s5
9002799a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002799e:	ee31 1a05 	vadd.f32	s2, s2, s10
900279a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900279a6:	ee16 4a90 	vmov	r4, s13
900279aa:	eef0 6a43 	vmov.f32	s13, s6
900279ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900279b2:	ee16 6a90 	vmov	r6, s13
900279b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900279ba:	ee61 7a27 	vmul.f32	s15, s2, s15
900279be:	ee77 2a62 	vsub.f32	s5, s14, s5
900279c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900279c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900279ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900279ce:	ee12 2a90 	vmov	r2, s5
900279d2:	eef0 2a47 	vmov.f32	s5, s14
900279d6:	fb92 f3f3 	sdiv	r3, r2, r3
900279da:	ee13 2a10 	vmov	r2, s6
900279de:	9327      	str	r3, [sp, #156]	@ 0x9c
900279e0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900279e2:	eeb0 3a67 	vmov.f32	s6, s15
900279e6:	fb92 f3f3 	sdiv	r3, r2, r3
900279ea:	9328      	str	r3, [sp, #160]	@ 0xa0
900279ec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900279ee:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900279f0:	3b01      	subs	r3, #1
900279f2:	9316      	str	r3, [sp, #88]	@ 0x58
900279f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900279f6:	bf08      	it	eq
900279f8:	4613      	moveq	r3, r2
900279fa:	9307      	str	r3, [sp, #28]
900279fc:	e622      	b.n	90027644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
900279fe:	2800      	cmp	r0, #0
90027a00:	f43f ae92 	beq.w	90027728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027a04:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90027a08:	9308      	str	r3, [sp, #32]
90027a0a:	0e1b      	lsrs	r3, r3, #24
90027a0c:	9310      	str	r3, [sp, #64]	@ 0x40
90027a0e:	e68b      	b.n	90027728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027a10:	8839      	ldrh	r1, [r7, #0]
90027a12:	43db      	mvns	r3, r3
90027a14:	4dd4      	ldr	r5, [pc, #848]	@ (90027d68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027a16:	ea4f 2e21 	mov.w	lr, r1, asr #8
90027a1a:	fa5f f883 	uxtb.w	r8, r3
90027a1e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90027a22:	10c8      	asrs	r0, r1, #3
90027a24:	00cb      	lsls	r3, r1, #3
90027a26:	fb0e fe08 	mul.w	lr, lr, r8
90027a2a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027a2e:	b2db      	uxtb	r3, r3
90027a30:	f10e 0101 	add.w	r1, lr, #1
90027a34:	fb00 f008 	mul.w	r0, r0, r8
90027a38:	fb03 f308 	mul.w	r3, r3, r8
90027a3c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90027a40:	ea4f 411c 	mov.w	r1, ip, lsr #16
90027a44:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90027a48:	f100 0e01 	add.w	lr, r0, #1
90027a4c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90027a50:	b2c9      	uxtb	r1, r1
90027a52:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90027a56:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90027a5a:	00d2      	lsls	r2, r2, #3
90027a5c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027a60:	430a      	orrs	r2, r1
90027a62:	1c59      	adds	r1, r3, #1
90027a64:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027a68:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90027a6c:	e748      	b.n	90027900 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90027a6e:	f112 0801 	adds.w	r8, r2, #1
90027a72:	f53f af4b 	bmi.w	9002790c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027a76:	4543      	cmp	r3, r8
90027a78:	f6ff af48 	blt.w	9002790c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027a7c:	f11c 0801 	adds.w	r8, ip, #1
90027a80:	f53f af44 	bmi.w	9002790c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027a84:	45c6      	cmp	lr, r8
90027a86:	f6ff af41 	blt.w	9002790c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027a8a:	b21b      	sxth	r3, r3
90027a8c:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90027a90:	fa0f f28e 	sxth.w	r2, lr
90027a94:	e9cd 1003 	strd	r1, r0, [sp, #12]
90027a98:	9200      	str	r2, [sp, #0]
90027a9a:	4639      	mov	r1, r7
90027a9c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027a9e:	9819      	ldr	r0, [sp, #100]	@ 0x64
90027aa0:	f7ff fc88 	bl	900273b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90027aa4:	e732      	b.n	9002790c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027aa6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027aa8:	1421      	asrs	r1, r4, #16
90027aaa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027aac:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027ab0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90027ab4:	1433      	asrs	r3, r6, #16
90027ab6:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027aba:	fb07 1303 	mla	r3, r7, r3, r1
90027abe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90027ac0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90027ac4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027ac8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027acc:	2a00      	cmp	r2, #0
90027ace:	f000 8108 	beq.w	90027ce2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90027ad2:	684d      	ldr	r5, [r1, #4]
90027ad4:	950d      	str	r5, [sp, #52]	@ 0x34
90027ad6:	0e2d      	lsrs	r5, r5, #24
90027ad8:	9514      	str	r5, [sp, #80]	@ 0x50
90027ada:	b178      	cbz	r0, 90027afc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027adc:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90027ae0:	3f01      	subs	r7, #1
90027ae2:	00bf      	lsls	r7, r7, #2
90027ae4:	3704      	adds	r7, #4
90027ae6:	eb01 0e07 	add.w	lr, r1, r7
90027aea:	59c9      	ldr	r1, [r1, r7]
90027aec:	9109      	str	r1, [sp, #36]	@ 0x24
90027aee:	0e09      	lsrs	r1, r1, #24
90027af0:	9111      	str	r1, [sp, #68]	@ 0x44
90027af2:	f8de 1004 	ldr.w	r1, [lr, #4]
90027af6:	910e      	str	r1, [sp, #56]	@ 0x38
90027af8:	0e09      	lsrs	r1, r1, #24
90027afa:	9115      	str	r1, [sp, #84]	@ 0x54
90027afc:	b292      	uxth	r2, r2
90027afe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027b00:	b280      	uxth	r0, r0
90027b02:	fb02 f900 	mul.w	r9, r2, r0
90027b06:	0112      	lsls	r2, r2, #4
90027b08:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90027b0c:	eba2 0e09 	sub.w	lr, r2, r9
90027b10:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90027b14:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90027b16:	b280      	uxth	r0, r0
90027b18:	fa1f fe8e 	uxth.w	lr, lr
90027b1c:	1a09      	subs	r1, r1, r0
90027b1e:	fb0e f202 	mul.w	r2, lr, r2
90027b22:	b289      	uxth	r1, r1
90027b24:	fb01 220c 	mla	r2, r1, ip, r2
90027b28:	fb00 2205 	mla	r2, r0, r5, r2
90027b2c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027b2e:	fb09 2205 	mla	r2, r9, r5, r2
90027b32:	f3c2 2207 	ubfx	r2, r2, #8, #8
90027b36:	2a00      	cmp	r2, #0
90027b38:	f000 80ca 	beq.w	90027cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027b3c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90027b40:	d019      	beq.n	90027b76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90027b42:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90027b46:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90027b4a:	fb0c fa0a 	mul.w	sl, ip, sl
90027b4e:	fb0c fc03 	mul.w	ip, ip, r3
90027b52:	ea4f 231a 	mov.w	r3, sl, lsr #8
90027b56:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90027b5a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90027b5e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027b62:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90027b66:	4453      	add	r3, sl
90027b68:	0a3f      	lsrs	r7, r7, #8
90027b6a:	0a1b      	lsrs	r3, r3, #8
90027b6c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90027b70:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027b74:	433b      	orrs	r3, r7
90027b76:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027b78:	2dff      	cmp	r5, #255	@ 0xff
90027b7a:	d020      	beq.n	90027bbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90027b7c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027b7e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027b82:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027b84:	436f      	muls	r7, r5
90027b86:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027b88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027b8c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027b90:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027b92:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027b96:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027b9a:	fb05 fa0a 	mul.w	sl, r5, sl
90027b9e:	44bc      	add	ip, r7
90027ba0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027ba4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027ba8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027bac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027bb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027bb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027bb8:	ea4c 050a 	orr.w	r5, ip, sl
90027bbc:	950d      	str	r5, [sp, #52]	@ 0x34
90027bbe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027bc0:	2dff      	cmp	r5, #255	@ 0xff
90027bc2:	d020      	beq.n	90027c06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90027bc4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027bc6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027bca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027bcc:	436f      	muls	r7, r5
90027bce:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027bd0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90027bd4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027bd6:	fb05 fa0c 	mul.w	sl, r5, ip
90027bda:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027bde:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027be2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027be6:	44bc      	add	ip, r7
90027be8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027bec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027bf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027bf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027bf8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027bfc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027c00:	ea4c 050a 	orr.w	r5, ip, sl
90027c04:	9509      	str	r5, [sp, #36]	@ 0x24
90027c06:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027c08:	2dff      	cmp	r5, #255	@ 0xff
90027c0a:	d020      	beq.n	90027c4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90027c0c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027c0e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027c12:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027c14:	436f      	muls	r7, r5
90027c16:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027c18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027c1c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027c20:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027c22:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027c26:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027c2a:	fb05 fa0a 	mul.w	sl, r5, sl
90027c2e:	44bc      	add	ip, r7
90027c30:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027c34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027c38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027c3c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027c40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027c44:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027c48:	ea4c 050a 	orr.w	r5, ip, sl
90027c4c:	950e      	str	r5, [sp, #56]	@ 0x38
90027c4e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027c50:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90027c54:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90027c58:	2aff      	cmp	r2, #255	@ 0xff
90027c5a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027c5e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027c60:	fb0e f707 	mul.w	r7, lr, r7
90027c64:	fb01 770c 	mla	r7, r1, ip, r7
90027c68:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027c6c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027c6e:	fb00 770c 	mla	r7, r0, ip, r7
90027c72:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027c76:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027c78:	fb09 770c 	mla	r7, r9, ip, r7
90027c7c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90027c80:	fb0e fe0c 	mul.w	lr, lr, ip
90027c84:	ea4f 2717 	mov.w	r7, r7, lsr #8
90027c88:	fb01 e303 	mla	r3, r1, r3, lr
90027c8c:	9909      	ldr	r1, [sp, #36]	@ 0x24
90027c8e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90027c92:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90027c96:	990e      	ldr	r1, [sp, #56]	@ 0x38
90027c98:	fb00 330a 	mla	r3, r0, sl, r3
90027c9c:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90027ca0:	fb09 3c0c 	mla	ip, r9, ip, r3
90027ca4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027ca8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90027cac:	ea47 070c 	orr.w	r7, r7, ip
90027cb0:	ea4f 2317 	mov.w	r3, r7, lsr #8
90027cb4:	d11e      	bne.n	90027cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90027cb6:	097a      	lsrs	r2, r7, #5
90027cb8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90027cbc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027cc0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027cc4:	f023 0307 	bic.w	r3, r3, #7
90027cc8:	4313      	orrs	r3, r2
90027cca:	431f      	orrs	r7, r3
90027ccc:	f8a8 7000 	strh.w	r7, [r8]
90027cd0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027cd2:	f108 0802 	add.w	r8, r8, #2
90027cd6:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
90027cda:	441c      	add	r4, r3
90027cdc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027cde:	441e      	add	r6, r3
90027ce0:	e643      	b.n	9002796a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027ce2:	2800      	cmp	r0, #0
90027ce4:	f43f af0a 	beq.w	90027afc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027ce8:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90027cec:	9109      	str	r1, [sp, #36]	@ 0x24
90027cee:	0e09      	lsrs	r1, r1, #24
90027cf0:	9111      	str	r1, [sp, #68]	@ 0x44
90027cf2:	e703      	b.n	90027afc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027cf4:	f8b8 1000 	ldrh.w	r1, [r8]
90027cf8:	43d2      	mvns	r2, r2
90027cfa:	ea4f 2c21 	mov.w	ip, r1, asr #8
90027cfe:	fa5f fe82 	uxtb.w	lr, r2
90027d02:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027d06:	10c8      	asrs	r0, r1, #3
90027d08:	00ca      	lsls	r2, r1, #3
90027d0a:	fb0c fc0e 	mul.w	ip, ip, lr
90027d0e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027d12:	b2d2      	uxtb	r2, r2
90027d14:	f10c 0101 	add.w	r1, ip, #1
90027d18:	fb00 f00e 	mul.w	r0, r0, lr
90027d1c:	fb02 f20e 	mul.w	r2, r2, lr
90027d20:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027d24:	0c39      	lsrs	r1, r7, #16
90027d26:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027d2a:	490f      	ldr	r1, [pc, #60]	@ (90027d68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027d2c:	fa5f fc8c 	uxtb.w	ip, ip
90027d30:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90027d34:	1c41      	adds	r1, r0, #1
90027d36:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90027d3a:	1c51      	adds	r1, r2, #1
90027d3c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027d40:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027d44:	00c0      	lsls	r0, r0, #3
90027d46:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90027d4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027d4e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027d52:	ea4c 0c00 	orr.w	ip, ip, r0
90027d56:	ea47 0c0c 	orr.w	ip, r7, ip
90027d5a:	f8a8 c000 	strh.w	ip, [r8]
90027d5e:	e7b7      	b.n	90027cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027d60:	b01b      	add	sp, #108	@ 0x6c
90027d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027d66:	bf00      	nop
90027d68:	fffff800 	.word	0xfffff800

90027d6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90027d6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027d70:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90027d74:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027d78:	2d00      	cmp	r5, #0
90027d7a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90027d7e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027d82:	fb05 0e03 	mla	lr, r5, r3, r0
90027d86:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90027d8a:	f2c0 808c 	blt.w	90027ea6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027d8e:	45a9      	cmp	r9, r5
90027d90:	f340 8089 	ble.w	90027ea6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027d94:	2800      	cmp	r0, #0
90027d96:	f2c0 8084 	blt.w	90027ea2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027d9a:	4580      	cmp	r8, r0
90027d9c:	f340 8081 	ble.w	90027ea2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027da0:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027da4:	f01e 0f01 	tst.w	lr, #1
90027da8:	5d16      	ldrb	r6, [r2, r4]
90027daa:	bf0c      	ite	eq
90027dac:	f006 060f 	andeq.w	r6, r6, #15
90027db0:	1136      	asrne	r6, r6, #4
90027db2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027db6:	b2f6      	uxtb	r6, r6
90027db8:	1c44      	adds	r4, r0, #1
90027dba:	d477      	bmi.n	90027eac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027dbc:	45a0      	cmp	r8, r4
90027dbe:	dd75      	ble.n	90027eac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027dc0:	2f00      	cmp	r7, #0
90027dc2:	d075      	beq.n	90027eb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90027dc4:	f10e 0a01 	add.w	sl, lr, #1
90027dc8:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027dcc:	f01a 0f01 	tst.w	sl, #1
90027dd0:	5d14      	ldrb	r4, [r2, r4]
90027dd2:	bf0c      	ite	eq
90027dd4:	f004 040f 	andeq.w	r4, r4, #15
90027dd8:	1124      	asrne	r4, r4, #4
90027dda:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027dde:	b2e4      	uxtb	r4, r4
90027de0:	3501      	adds	r5, #1
90027de2:	d469      	bmi.n	90027eb8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027de4:	45a9      	cmp	r9, r5
90027de6:	dd67      	ble.n	90027eb8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027de8:	f1bc 0f00 	cmp.w	ip, #0
90027dec:	d067      	beq.n	90027ebe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90027dee:	2800      	cmp	r0, #0
90027df0:	db60      	blt.n	90027eb4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027df2:	4580      	cmp	r8, r0
90027df4:	dd5e      	ble.n	90027eb4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027df6:	eb03 090e 	add.w	r9, r3, lr
90027dfa:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027dfe:	f019 0f01 	tst.w	r9, #1
90027e02:	5d55      	ldrb	r5, [r2, r5]
90027e04:	bf0c      	ite	eq
90027e06:	f005 050f 	andeq.w	r5, r5, #15
90027e0a:	112d      	asrne	r5, r5, #4
90027e0c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027e10:	b2ed      	uxtb	r5, r5
90027e12:	3001      	adds	r0, #1
90027e14:	d456      	bmi.n	90027ec4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027e16:	4580      	cmp	r8, r0
90027e18:	dd54      	ble.n	90027ec4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027e1a:	2f00      	cmp	r7, #0
90027e1c:	d054      	beq.n	90027ec8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90027e1e:	3301      	adds	r3, #1
90027e20:	449e      	add	lr, r3
90027e22:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027e26:	f01e 0f01 	tst.w	lr, #1
90027e2a:	5cd0      	ldrb	r0, [r2, r3]
90027e2c:	bf0c      	ite	eq
90027e2e:	f000 000f 	andeq.w	r0, r0, #15
90027e32:	1100      	asrne	r0, r0, #4
90027e34:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027e38:	b2c3      	uxtb	r3, r0
90027e3a:	b2ba      	uxth	r2, r7
90027e3c:	fa1f fc8c 	uxth.w	ip, ip
90027e40:	fb02 f00c 	mul.w	r0, r2, ip
90027e44:	0112      	lsls	r2, r2, #4
90027e46:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027e4a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90027e4e:	1a12      	subs	r2, r2, r0
90027e50:	fa1f fc8c 	uxth.w	ip, ip
90027e54:	b292      	uxth	r2, r2
90027e56:	eba7 070c 	sub.w	r7, r7, ip
90027e5a:	4362      	muls	r2, r4
90027e5c:	b2bf      	uxth	r7, r7
90027e5e:	fb06 2207 	mla	r2, r6, r7, r2
90027e62:	fb0c 2505 	mla	r5, ip, r5, r2
90027e66:	fb00 5303 	mla	r3, r0, r3, r5
90027e6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027e6e:	b1b3      	cbz	r3, 90027e9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027e70:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90027e74:	435a      	muls	r2, r3
90027e76:	1c53      	adds	r3, r2, #1
90027e78:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027e7c:	4a2d      	ldr	r2, [pc, #180]	@ (90027f34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027e7e:	121b      	asrs	r3, r3, #8
90027e80:	6812      	ldr	r2, [r2, #0]
90027e82:	2bff      	cmp	r3, #255	@ 0xff
90027e84:	ea4f 2612 	mov.w	r6, r2, lsr #8
90027e88:	d120      	bne.n	90027ecc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90027e8a:	0950      	lsrs	r0, r2, #5
90027e8c:	4b2a      	ldr	r3, [pc, #168]	@ (90027f38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027e8e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027e92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027e96:	4033      	ands	r3, r6
90027e98:	4318      	orrs	r0, r3
90027e9a:	4302      	orrs	r2, r0
90027e9c:	800a      	strh	r2, [r1, #0]
90027e9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027ea2:	2600      	movs	r6, #0
90027ea4:	e788      	b.n	90027db8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90027ea6:	2400      	movs	r4, #0
90027ea8:	4626      	mov	r6, r4
90027eaa:	e799      	b.n	90027de0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027eac:	2400      	movs	r4, #0
90027eae:	e797      	b.n	90027de0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027eb0:	463c      	mov	r4, r7
90027eb2:	e795      	b.n	90027de0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027eb4:	2500      	movs	r5, #0
90027eb6:	e7ac      	b.n	90027e12 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90027eb8:	2300      	movs	r3, #0
90027eba:	461d      	mov	r5, r3
90027ebc:	e7bd      	b.n	90027e3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027ebe:	4663      	mov	r3, ip
90027ec0:	4665      	mov	r5, ip
90027ec2:	e7ba      	b.n	90027e3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027ec4:	2300      	movs	r3, #0
90027ec6:	e7b8      	b.n	90027e3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027ec8:	463b      	mov	r3, r7
90027eca:	e7b6      	b.n	90027e3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027ecc:	880d      	ldrh	r5, [r1, #0]
90027ece:	b29f      	uxth	r7, r3
90027ed0:	f3c2 4007 	ubfx	r0, r2, #16, #8
90027ed4:	43db      	mvns	r3, r3
90027ed6:	122c      	asrs	r4, r5, #8
90027ed8:	fb10 f007 	smulbb	r0, r0, r7
90027edc:	b2db      	uxtb	r3, r3
90027ede:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027ee2:	b2f6      	uxtb	r6, r6
90027ee4:	b2d2      	uxtb	r2, r2
90027ee6:	fb04 0403 	mla	r4, r4, r3, r0
90027eea:	10e8      	asrs	r0, r5, #3
90027eec:	fb12 f207 	smulbb	r2, r2, r7
90027ef0:	00ed      	lsls	r5, r5, #3
90027ef2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027ef6:	b2a4      	uxth	r4, r4
90027ef8:	fb16 f607 	smulbb	r6, r6, r7
90027efc:	b2ed      	uxtb	r5, r5
90027efe:	fb00 6603 	mla	r6, r0, r3, r6
90027f02:	fb05 2303 	mla	r3, r5, r3, r2
90027f06:	b2b0      	uxth	r0, r6
90027f08:	b29a      	uxth	r2, r3
90027f0a:	1c63      	adds	r3, r4, #1
90027f0c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027f10:	1c53      	adds	r3, r2, #1
90027f12:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027f16:	1c42      	adds	r2, r0, #1
90027f18:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027f1c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027f20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027f24:	0940      	lsrs	r0, r0, #5
90027f26:	4323      	orrs	r3, r4
90027f28:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027f2c:	4303      	orrs	r3, r0
90027f2e:	800b      	strh	r3, [r1, #0]
90027f30:	e7b5      	b.n	90027e9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027f32:	bf00      	nop
90027f34:	2402341c 	.word	0x2402341c
90027f38:	00fff800 	.word	0x00fff800

90027f3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027f40:	b097      	sub	sp, #92	@ 0x5c
90027f42:	9214      	str	r2, [sp, #80]	@ 0x50
90027f44:	9309      	str	r3, [sp, #36]	@ 0x24
90027f46:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90027f48:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90027f4c:	9015      	str	r0, [sp, #84]	@ 0x54
90027f4e:	910d      	str	r1, [sp, #52]	@ 0x34
90027f50:	6850      	ldr	r0, [r2, #4]
90027f52:	930f      	str	r3, [sp, #60]	@ 0x3c
90027f54:	6812      	ldr	r2, [r2, #0]
90027f56:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90027f5a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90027f5e:	fb00 1303 	mla	r3, r0, r3, r1
90027f62:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027f66:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027f68:	689b      	ldr	r3, [r3, #8]
90027f6a:	3301      	adds	r3, #1
90027f6c:	f023 0301 	bic.w	r3, r3, #1
90027f70:	930a      	str	r3, [sp, #40]	@ 0x28
90027f72:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027f74:	681f      	ldr	r7, [r3, #0]
90027f76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027f78:	2b00      	cmp	r3, #0
90027f7a:	dc03      	bgt.n	90027f84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027f7c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90027f7e:	2b00      	cmp	r3, #0
90027f80:	f340 8289 	ble.w	90028496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027f84:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027f86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027f8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027f8e:	1e48      	subs	r0, r1, #1
90027f90:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
90027f94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027f96:	2b00      	cmp	r3, #0
90027f98:	f340 80c5 	ble.w	90028126 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90027f9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027fa0:	ea4f 4326 	mov.w	r3, r6, asr #16
90027fa4:	d406      	bmi.n	90027fb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027fa6:	4586      	cmp	lr, r0
90027fa8:	da04      	bge.n	90027fb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027faa:	2b00      	cmp	r3, #0
90027fac:	db02      	blt.n	90027fb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027fae:	4563      	cmp	r3, ip
90027fb0:	f2c0 80ba 	blt.w	90028128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90027fb4:	f11e 0e01 	adds.w	lr, lr, #1
90027fb8:	f100 80ab 	bmi.w	90028112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027fbc:	4571      	cmp	r1, lr
90027fbe:	f2c0 80a8 	blt.w	90028112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027fc2:	3301      	adds	r3, #1
90027fc4:	f100 80a5 	bmi.w	90028112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027fc8:	429a      	cmp	r2, r3
90027fca:	f2c0 80a2 	blt.w	90028112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027fce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027fd0:	46c8      	mov	r8, r9
90027fd2:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90027fd6:	930e      	str	r3, [sp, #56]	@ 0x38
90027fd8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027fda:	2b00      	cmp	r3, #0
90027fdc:	f340 80c4 	ble.w	90028168 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90027fe0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027fe2:	1430      	asrs	r0, r6, #16
90027fe4:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027fe8:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027fec:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027ff0:	1423      	asrs	r3, r4, #16
90027ff2:	f100 814f 	bmi.w	90028294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027ff6:	f10c 3bff 	add.w	fp, ip, #4294967295	@ 0xffffffff
90027ffa:	455b      	cmp	r3, fp
90027ffc:	f280 814a 	bge.w	90028294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028000:	2800      	cmp	r0, #0
90028002:	f2c0 8147 	blt.w	90028294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028006:	f10e 3bff 	add.w	fp, lr, #4294967295	@ 0xffffffff
9002800a:	4558      	cmp	r0, fp
9002800c:	f280 8142 	bge.w	90028294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028010:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90028012:	fb00 3305 	mla	r3, r0, r5, r3
90028016:	0858      	lsrs	r0, r3, #1
90028018:	07dd      	lsls	r5, r3, #31
9002801a:	f817 c000 	ldrb.w	ip, [r7, r0]
9002801e:	bf54      	ite	pl
90028020:	f00c 0c0f 	andpl.w	ip, ip, #15
90028024:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028028:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002802c:	fa5f fc8c 	uxtb.w	ip, ip
90028030:	2a00      	cmp	r2, #0
90028032:	f000 80dd 	beq.w	900281f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90028036:	1c58      	adds	r0, r3, #1
90028038:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002803c:	07c0      	lsls	r0, r0, #31
9002803e:	f817 e00e 	ldrb.w	lr, [r7, lr]
90028042:	bf54      	ite	pl
90028044:	f00e 0e0f 	andpl.w	lr, lr, #15
90028048:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002804c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90028050:	fa5f f08e 	uxtb.w	r0, lr
90028054:	9010      	str	r0, [sp, #64]	@ 0x40
90028056:	b1d9      	cbz	r1, 90028090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028058:	4453      	add	r3, sl
9002805a:	0858      	lsrs	r0, r3, #1
9002805c:	07dd      	lsls	r5, r3, #31
9002805e:	f103 0301 	add.w	r3, r3, #1
90028062:	5c38      	ldrb	r0, [r7, r0]
90028064:	bf54      	ite	pl
90028066:	f000 000f 	andpl.w	r0, r0, #15
9002806a:	1100      	asrmi	r0, r0, #4
9002806c:	07dd      	lsls	r5, r3, #31
9002806e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028072:	b2c0      	uxtb	r0, r0
90028074:	900b      	str	r0, [sp, #44]	@ 0x2c
90028076:	ea4f 0053 	mov.w	r0, r3, lsr #1
9002807a:	f817 e000 	ldrb.w	lr, [r7, r0]
9002807e:	bf54      	ite	pl
90028080:	f00e 030f 	andpl.w	r3, lr, #15
90028084:	ea4f 132e 	movmi.w	r3, lr, asr #4
90028088:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002808c:	b2db      	uxtb	r3, r3
9002808e:	9311      	str	r3, [sp, #68]	@ 0x44
90028090:	b292      	uxth	r2, r2
90028092:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028094:	b289      	uxth	r1, r1
90028096:	fb02 f301 	mul.w	r3, r2, r1
9002809a:	0112      	lsls	r2, r2, #4
9002809c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900280a0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900280a4:	1ad2      	subs	r2, r2, r3
900280a6:	b289      	uxth	r1, r1
900280a8:	b292      	uxth	r2, r2
900280aa:	1a40      	subs	r0, r0, r1
900280ac:	436a      	muls	r2, r5
900280ae:	b280      	uxth	r0, r0
900280b0:	fb0c 2c00 	mla	ip, ip, r0, r2
900280b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900280b6:	fb01 c102 	mla	r1, r1, r2, ip
900280ba:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900280bc:	fb03 1302 	mla	r3, r3, r2, r1
900280c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900280c4:	b1db      	cbz	r3, 900280fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900280c6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900280c8:	4353      	muls	r3, r2
900280ca:	1c5a      	adds	r2, r3, #1
900280cc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900280d0:	4ac6      	ldr	r2, [pc, #792]	@ (900283ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900280d2:	121b      	asrs	r3, r3, #8
900280d4:	6812      	ldr	r2, [r2, #0]
900280d6:	2bff      	cmp	r3, #255	@ 0xff
900280d8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900280dc:	f040 8099 	bne.w	90028212 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900280e0:	0953      	lsrs	r3, r2, #5
900280e2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900280e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900280ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900280ee:	f02c 0c07 	bic.w	ip, ip, #7
900280f2:	ea43 0c0c 	orr.w	ip, r3, ip
900280f6:	ea4c 0202 	orr.w	r2, ip, r2
900280fa:	f8a8 2000 	strh.w	r2, [r8]
900280fe:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90028100:	f108 0802 	add.w	r8, r8, #2
90028104:	441c      	add	r4, r3
90028106:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028108:	441e      	add	r6, r3
9002810a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002810c:	3b01      	subs	r3, #1
9002810e:	930e      	str	r3, [sp, #56]	@ 0x38
90028110:	e762      	b.n	90027fd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90028112:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90028114:	f109 0902 	add.w	r9, r9, #2
90028118:	441c      	add	r4, r3
9002811a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002811c:	441e      	add	r6, r3
9002811e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028120:	3b01      	subs	r3, #1
90028122:	9309      	str	r3, [sp, #36]	@ 0x24
90028124:	e736      	b.n	90027f94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90028126:	d024      	beq.n	90028172 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90028128:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002812a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002812c:	3b01      	subs	r3, #1
9002812e:	fb00 4003 	mla	r0, r0, r3, r4
90028132:	1400      	asrs	r0, r0, #16
90028134:	f53f af4b 	bmi.w	90027fce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028138:	3901      	subs	r1, #1
9002813a:	4288      	cmp	r0, r1
9002813c:	f6bf af47 	bge.w	90027fce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028140:	9924      	ldr	r1, [sp, #144]	@ 0x90
90028142:	fb01 6303 	mla	r3, r1, r3, r6
90028146:	141b      	asrs	r3, r3, #16
90028148:	f53f af41 	bmi.w	90027fce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002814c:	3a01      	subs	r2, #1
9002814e:	4293      	cmp	r3, r2
90028150:	f6bf af3d 	bge.w	90027fce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028154:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90028158:	46c8      	mov	r8, r9
9002815a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9002815e:	930e      	str	r3, [sp, #56]	@ 0x38
90028160:	f1bb 0f00 	cmp.w	fp, #0
90028164:	f300 80b7 	bgt.w	900282d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90028168:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002816a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002816e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90028172:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90028174:	2b00      	cmp	r3, #0
90028176:	f340 818e 	ble.w	90028496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002817a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002817e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028180:	ee30 0a04 	vadd.f32	s0, s0, s8
90028184:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028188:	eef0 6a62 	vmov.f32	s13, s5
9002818c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028190:	ee31 1a05 	vadd.f32	s2, s2, s10
90028194:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028198:	ee16 4a90 	vmov	r4, s13
9002819c:	eef0 6a43 	vmov.f32	s13, s6
900281a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900281a4:	ee16 6a90 	vmov	r6, s13
900281a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900281ac:	ee61 7a27 	vmul.f32	s15, s2, s15
900281b0:	ee77 2a62 	vsub.f32	s5, s14, s5
900281b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900281b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900281bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900281c0:	ee12 2a90 	vmov	r2, s5
900281c4:	eef0 2a47 	vmov.f32	s5, s14
900281c8:	fb92 f3f3 	sdiv	r3, r2, r3
900281cc:	ee13 2a10 	vmov	r2, s6
900281d0:	9323      	str	r3, [sp, #140]	@ 0x8c
900281d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900281d4:	eeb0 3a67 	vmov.f32	s6, s15
900281d8:	fb92 f3f3 	sdiv	r3, r2, r3
900281dc:	9324      	str	r3, [sp, #144]	@ 0x90
900281de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900281e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900281e2:	3b01      	subs	r3, #1
900281e4:	930d      	str	r3, [sp, #52]	@ 0x34
900281e6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900281e8:	bf08      	it	eq
900281ea:	4613      	moveq	r3, r2
900281ec:	9309      	str	r3, [sp, #36]	@ 0x24
900281ee:	e6c2      	b.n	90027f76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900281f0:	2900      	cmp	r1, #0
900281f2:	f43f af4d 	beq.w	90028090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900281f6:	eb0a 0003 	add.w	r0, sl, r3
900281fa:	0843      	lsrs	r3, r0, #1
900281fc:	07c0      	lsls	r0, r0, #31
900281fe:	5cfb      	ldrb	r3, [r7, r3]
90028200:	bf54      	ite	pl
90028202:	f003 030f 	andpl.w	r3, r3, #15
90028206:	111b      	asrmi	r3, r3, #4
90028208:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002820c:	b2db      	uxtb	r3, r3
9002820e:	930b      	str	r3, [sp, #44]	@ 0x2c
90028210:	e73e      	b.n	90028090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028212:	f8b8 e000 	ldrh.w	lr, [r8]
90028216:	fa1f fb83 	uxth.w	fp, r3
9002821a:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002821e:	43db      	mvns	r3, r3
90028220:	ea4f 202e 	mov.w	r0, lr, asr #8
90028224:	fb11 f10b 	smulbb	r1, r1, fp
90028228:	b2db      	uxtb	r3, r3
9002822a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002822e:	fa5f fc8c 	uxtb.w	ip, ip
90028232:	b2d2      	uxtb	r2, r2
90028234:	fb00 1003 	mla	r0, r0, r3, r1
90028238:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002823c:	fb1c fc0b 	smulbb	ip, ip, fp
90028240:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028244:	b280      	uxth	r0, r0
90028246:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002824a:	fb12 fb0b 	smulbb	fp, r2, fp
9002824e:	fa5f fe8e 	uxtb.w	lr, lr
90028252:	fb01 cc03 	mla	ip, r1, r3, ip
90028256:	fb0e bb03 	mla	fp, lr, r3, fp
9002825a:	1c43      	adds	r3, r0, #1
9002825c:	fa1f fc8c 	uxth.w	ip, ip
90028260:	fa1f fb8b 	uxth.w	fp, fp
90028264:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028268:	f10c 0101 	add.w	r1, ip, #1
9002826c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90028270:	f10b 0001 	add.w	r0, fp, #1
90028274:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028278:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9002827c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90028280:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028284:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90028288:	4318      	orrs	r0, r3
9002828a:	ea40 000c 	orr.w	r0, r0, ip
9002828e:	f8a8 0000 	strh.w	r0, [r8]
90028292:	e734      	b.n	900280fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028294:	f113 0b01 	adds.w	fp, r3, #1
90028298:	f53f af31 	bmi.w	900280fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002829c:	45dc      	cmp	ip, fp
9002829e:	f6ff af2e 	blt.w	900280fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900282a2:	f110 0b01 	adds.w	fp, r0, #1
900282a6:	f53f af2a 	bmi.w	900280fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900282aa:	45de      	cmp	lr, fp
900282ac:	f6ff af27 	blt.w	900280fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900282b0:	9302      	str	r3, [sp, #8]
900282b2:	fa0f f38e 	sxth.w	r3, lr
900282b6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900282b8:	9301      	str	r3, [sp, #4]
900282ba:	fa0f f38c 	sxth.w	r3, ip
900282be:	e9cd 0203 	strd	r0, r2, [sp, #12]
900282c2:	e9cd 1505 	strd	r1, r5, [sp, #20]
900282c6:	9300      	str	r3, [sp, #0]
900282c8:	463a      	mov	r2, r7
900282ca:	4653      	mov	r3, sl
900282cc:	4641      	mov	r1, r8
900282ce:	9815      	ldr	r0, [sp, #84]	@ 0x54
900282d0:	f7ff fd4c 	bl	90027d6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900282d4:	e713      	b.n	900280fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900282d6:	1422      	asrs	r2, r4, #16
900282d8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900282da:	1433      	asrs	r3, r6, #16
900282dc:	f3c4 3103 	ubfx	r1, r4, #12, #4
900282e0:	f3c6 3003 	ubfx	r0, r6, #12, #4
900282e4:	fb05 2303 	mla	r3, r5, r3, r2
900282e8:	085a      	lsrs	r2, r3, #1
900282ea:	07dd      	lsls	r5, r3, #31
900282ec:	5cba      	ldrb	r2, [r7, r2]
900282ee:	bf54      	ite	pl
900282f0:	f002 020f 	andpl.w	r2, r2, #15
900282f4:	1112      	asrmi	r2, r2, #4
900282f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900282fa:	b2d2      	uxtb	r2, r2
900282fc:	2900      	cmp	r1, #0
900282fe:	d077      	beq.n	900283f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90028300:	f103 0e01 	add.w	lr, r3, #1
90028304:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90028308:	f01e 0f01 	tst.w	lr, #1
9002830c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028310:	bf0c      	ite	eq
90028312:	f00c 0c0f 	andeq.w	ip, ip, #15
90028316:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002831a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002831e:	fa5f f58c 	uxtb.w	r5, ip
90028322:	9512      	str	r5, [sp, #72]	@ 0x48
90028324:	b308      	cbz	r0, 9002836a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028326:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028328:	442b      	add	r3, r5
9002832a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002832e:	07dd      	lsls	r5, r3, #31
90028330:	f103 0301 	add.w	r3, r3, #1
90028334:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028338:	bf54      	ite	pl
9002833a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002833e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028342:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028346:	fa5f f58c 	uxtb.w	r5, ip
9002834a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002834e:	950c      	str	r5, [sp, #48]	@ 0x30
90028350:	07dd      	lsls	r5, r3, #31
90028352:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028356:	bf54      	ite	pl
90028358:	f00c 0c0f 	andpl.w	ip, ip, #15
9002835c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028360:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028364:	fa5f f38c 	uxtb.w	r3, ip
90028368:	9313      	str	r3, [sp, #76]	@ 0x4c
9002836a:	b289      	uxth	r1, r1
9002836c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002836e:	b280      	uxth	r0, r0
90028370:	fb01 f300 	mul.w	r3, r1, r0
90028374:	0109      	lsls	r1, r1, #4
90028376:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9002837a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
9002837e:	1ac9      	subs	r1, r1, r3
90028380:	b280      	uxth	r0, r0
90028382:	b289      	uxth	r1, r1
90028384:	ebac 0c00 	sub.w	ip, ip, r0
90028388:	4369      	muls	r1, r5
9002838a:	fa1f fc8c 	uxth.w	ip, ip
9002838e:	fb02 120c 	mla	r2, r2, ip, r1
90028392:	990c      	ldr	r1, [sp, #48]	@ 0x30
90028394:	fb00 2001 	mla	r0, r0, r1, r2
90028398:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9002839a:	fb03 0302 	mla	r3, r3, r2, r0
9002839e:	f3c3 2307 	ubfx	r3, r3, #8, #8
900283a2:	b1d3      	cbz	r3, 900283da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900283a4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900283a6:	4353      	muls	r3, r2
900283a8:	1c5a      	adds	r2, r3, #1
900283aa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900283ae:	4a0f      	ldr	r2, [pc, #60]	@ (900283ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900283b0:	121b      	asrs	r3, r3, #8
900283b2:	6812      	ldr	r2, [r2, #0]
900283b4:	2bff      	cmp	r3, #255	@ 0xff
900283b6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900283ba:	d12d      	bne.n	90028418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900283bc:	0953      	lsrs	r3, r2, #5
900283be:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900283c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900283c6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900283ca:	f02c 0c07 	bic.w	ip, ip, #7
900283ce:	ea43 0c0c 	orr.w	ip, r3, ip
900283d2:	ea4c 0202 	orr.w	r2, ip, r2
900283d6:	f8a8 2000 	strh.w	r2, [r8]
900283da:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900283dc:	f108 0802 	add.w	r8, r8, #2
900283e0:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
900283e4:	441c      	add	r4, r3
900283e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900283e8:	441e      	add	r6, r3
900283ea:	e6b9      	b.n	90028160 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
900283ec:	2402341c 	.word	0x2402341c
900283f0:	2800      	cmp	r0, #0
900283f2:	d0ba      	beq.n	9002836a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900283f4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900283f6:	442b      	add	r3, r5
900283f8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900283fc:	07db      	lsls	r3, r3, #31
900283fe:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028402:	bf54      	ite	pl
90028404:	f00c 0c0f 	andpl.w	ip, ip, #15
90028408:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002840c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028410:	fa5f f38c 	uxtb.w	r3, ip
90028414:	930c      	str	r3, [sp, #48]	@ 0x30
90028416:	e7a8      	b.n	9002836a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028418:	f8b8 e000 	ldrh.w	lr, [r8]
9002841c:	fa1f fa83 	uxth.w	sl, r3
90028420:	f3c2 4107 	ubfx	r1, r2, #16, #8
90028424:	43db      	mvns	r3, r3
90028426:	ea4f 202e 	mov.w	r0, lr, asr #8
9002842a:	fb11 f10a 	smulbb	r1, r1, sl
9002842e:	b2db      	uxtb	r3, r3
90028430:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028434:	b2d2      	uxtb	r2, r2
90028436:	fa5f fc8c 	uxtb.w	ip, ip
9002843a:	fb00 1003 	mla	r0, r0, r3, r1
9002843e:	ea4f 01ee 	mov.w	r1, lr, asr #3
90028442:	fb12 f20a 	smulbb	r2, r2, sl
90028446:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002844a:	b280      	uxth	r0, r0
9002844c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90028450:	fb1c fc0a 	smulbb	ip, ip, sl
90028454:	fa5f fe8e 	uxtb.w	lr, lr
90028458:	fb0e 2203 	mla	r2, lr, r3, r2
9002845c:	fb01 cc03 	mla	ip, r1, r3, ip
90028460:	1c43      	adds	r3, r0, #1
90028462:	b292      	uxth	r2, r2
90028464:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028468:	1c51      	adds	r1, r2, #1
9002846a:	fa1f fc8c 	uxth.w	ip, ip
9002846e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90028472:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90028476:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002847a:	4308      	orrs	r0, r1
9002847c:	f10c 0101 	add.w	r1, ip, #1
90028480:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028484:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90028488:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002848c:	ea40 000c 	orr.w	r0, r0, ip
90028490:	f8a8 0000 	strh.w	r0, [r8]
90028494:	e7a1      	b.n	900283da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90028496:	b017      	add	sp, #92	@ 0x5c
90028498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002849c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
9002849c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900284a0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900284a4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900284a8:	2d00      	cmp	r5, #0
900284aa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900284ae:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900284b2:	fb05 0e03 	mla	lr, r5, r3, r0
900284b6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900284ba:	f2c0 80b0 	blt.w	9002861e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900284be:	45a9      	cmp	r9, r5
900284c0:	f340 80ad 	ble.w	9002861e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900284c4:	2800      	cmp	r0, #0
900284c6:	f2c0 80a8 	blt.w	9002861a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900284ca:	4580      	cmp	r8, r0
900284cc:	f340 80a5 	ble.w	9002861a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900284d0:	ea4f 045e 	mov.w	r4, lr, lsr #1
900284d4:	f01e 0f01 	tst.w	lr, #1
900284d8:	5d16      	ldrb	r6, [r2, r4]
900284da:	bf0c      	ite	eq
900284dc:	f006 060f 	andeq.w	r6, r6, #15
900284e0:	1136      	asrne	r6, r6, #4
900284e2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900284e6:	b2f6      	uxtb	r6, r6
900284e8:	1c44      	adds	r4, r0, #1
900284ea:	f100 809b 	bmi.w	90028624 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900284ee:	45a0      	cmp	r8, r4
900284f0:	f340 8098 	ble.w	90028624 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900284f4:	2f00      	cmp	r7, #0
900284f6:	f000 8097 	beq.w	90028628 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
900284fa:	f10e 0a01 	add.w	sl, lr, #1
900284fe:	ea4f 045a 	mov.w	r4, sl, lsr #1
90028502:	f01a 0f01 	tst.w	sl, #1
90028506:	5d14      	ldrb	r4, [r2, r4]
90028508:	bf0c      	ite	eq
9002850a:	f004 040f 	andeq.w	r4, r4, #15
9002850e:	1124      	asrne	r4, r4, #4
90028510:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90028514:	b2e4      	uxtb	r4, r4
90028516:	3501      	adds	r5, #1
90028518:	f100 808a 	bmi.w	90028630 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002851c:	45a9      	cmp	r9, r5
9002851e:	f340 8087 	ble.w	90028630 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90028522:	f1bc 0f00 	cmp.w	ip, #0
90028526:	f000 8086 	beq.w	90028636 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002852a:	2800      	cmp	r0, #0
9002852c:	db7e      	blt.n	9002862c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002852e:	4580      	cmp	r8, r0
90028530:	dd7c      	ble.n	9002862c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90028532:	eb03 090e 	add.w	r9, r3, lr
90028536:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002853a:	f019 0f01 	tst.w	r9, #1
9002853e:	5d55      	ldrb	r5, [r2, r5]
90028540:	bf0c      	ite	eq
90028542:	f005 050f 	andeq.w	r5, r5, #15
90028546:	112d      	asrne	r5, r5, #4
90028548:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002854c:	b2ed      	uxtb	r5, r5
9002854e:	3001      	adds	r0, #1
90028550:	d474      	bmi.n	9002863c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90028552:	4580      	cmp	r8, r0
90028554:	dd72      	ble.n	9002863c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90028556:	2f00      	cmp	r7, #0
90028558:	d072      	beq.n	90028640 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002855a:	3301      	adds	r3, #1
9002855c:	449e      	add	lr, r3
9002855e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90028562:	f01e 0f01 	tst.w	lr, #1
90028566:	5cd0      	ldrb	r0, [r2, r3]
90028568:	bf0c      	ite	eq
9002856a:	f000 000f 	andeq.w	r0, r0, #15
9002856e:	1100      	asrne	r0, r0, #4
90028570:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028574:	b2c3      	uxtb	r3, r0
90028576:	b2ba      	uxth	r2, r7
90028578:	fa1f fc8c 	uxth.w	ip, ip
9002857c:	fb02 f00c 	mul.w	r0, r2, ip
90028580:	0112      	lsls	r2, r2, #4
90028582:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90028586:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002858a:	1a12      	subs	r2, r2, r0
9002858c:	fa1f fc8c 	uxth.w	ip, ip
90028590:	b292      	uxth	r2, r2
90028592:	eba7 070c 	sub.w	r7, r7, ip
90028596:	4362      	muls	r2, r4
90028598:	b2bf      	uxth	r7, r7
9002859a:	fb06 2207 	mla	r2, r6, r7, r2
9002859e:	fb0c 2505 	mla	r5, ip, r5, r2
900285a2:	fb00 5303 	mla	r3, r0, r3, r5
900285a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900285aa:	b3a3      	cbz	r3, 90028616 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900285ac:	4a25      	ldr	r2, [pc, #148]	@ (90028644 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900285ae:	880e      	ldrh	r6, [r1, #0]
900285b0:	6815      	ldr	r5, [r2, #0]
900285b2:	b29a      	uxth	r2, r3
900285b4:	1234      	asrs	r4, r6, #8
900285b6:	43db      	mvns	r3, r3
900285b8:	f3c5 4007 	ubfx	r0, r5, #16, #8
900285bc:	f3c5 2707 	ubfx	r7, r5, #8, #8
900285c0:	b2db      	uxtb	r3, r3
900285c2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900285c6:	fb10 f002 	smulbb	r0, r0, r2
900285ca:	b2ed      	uxtb	r5, r5
900285cc:	fb17 f702 	smulbb	r7, r7, r2
900285d0:	fb04 0403 	mla	r4, r4, r3, r0
900285d4:	10f0      	asrs	r0, r6, #3
900285d6:	fb15 f202 	smulbb	r2, r5, r2
900285da:	00f6      	lsls	r6, r6, #3
900285dc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900285e0:	b2a4      	uxth	r4, r4
900285e2:	b2f6      	uxtb	r6, r6
900285e4:	fb00 7003 	mla	r0, r0, r3, r7
900285e8:	fb06 2303 	mla	r3, r6, r3, r2
900285ec:	b280      	uxth	r0, r0
900285ee:	b29a      	uxth	r2, r3
900285f0:	1c63      	adds	r3, r4, #1
900285f2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900285f6:	1c53      	adds	r3, r2, #1
900285f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900285fc:	1c42      	adds	r2, r0, #1
900285fe:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028602:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028606:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002860a:	0940      	lsrs	r0, r0, #5
9002860c:	4323      	orrs	r3, r4
9002860e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028612:	4303      	orrs	r3, r0
90028614:	800b      	strh	r3, [r1, #0]
90028616:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002861a:	2600      	movs	r6, #0
9002861c:	e764      	b.n	900284e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
9002861e:	2400      	movs	r4, #0
90028620:	4626      	mov	r6, r4
90028622:	e778      	b.n	90028516 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028624:	2400      	movs	r4, #0
90028626:	e776      	b.n	90028516 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028628:	463c      	mov	r4, r7
9002862a:	e774      	b.n	90028516 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002862c:	2500      	movs	r5, #0
9002862e:	e78e      	b.n	9002854e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90028630:	2300      	movs	r3, #0
90028632:	461d      	mov	r5, r3
90028634:	e79f      	b.n	90028576 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028636:	4663      	mov	r3, ip
90028638:	4665      	mov	r5, ip
9002863a:	e79c      	b.n	90028576 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002863c:	2300      	movs	r3, #0
9002863e:	e79a      	b.n	90028576 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028640:	463b      	mov	r3, r7
90028642:	e798      	b.n	90028576 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028644:	2402341c 	.word	0x2402341c

90028648 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002864c:	b093      	sub	sp, #76	@ 0x4c
9002864e:	461d      	mov	r5, r3
90028650:	920c      	str	r2, [sp, #48]	@ 0x30
90028652:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90028654:	9011      	str	r0, [sp, #68]	@ 0x44
90028656:	9107      	str	r1, [sp, #28]
90028658:	6850      	ldr	r0, [r2, #4]
9002865a:	6812      	ldr	r2, [r2, #0]
9002865c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90028660:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90028664:	fb00 1303 	mla	r3, r0, r3, r1
90028668:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002866c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002866e:	689b      	ldr	r3, [r3, #8]
90028670:	3301      	adds	r3, #1
90028672:	f023 0301 	bic.w	r3, r3, #1
90028676:	9306      	str	r3, [sp, #24]
90028678:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002867a:	681f      	ldr	r7, [r3, #0]
9002867c:	9b07      	ldr	r3, [sp, #28]
9002867e:	2b00      	cmp	r3, #0
90028680:	dc03      	bgt.n	9002868a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90028682:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90028684:	2b00      	cmp	r3, #0
90028686:	f340 8267 	ble.w	90028b58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002868a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002868c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028690:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028694:	1e48      	subs	r0, r1, #1
90028696:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
9002869a:	2d00      	cmp	r5, #0
9002869c:	f340 80b7 	ble.w	9002880e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900286a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900286a4:	ea4f 4326 	mov.w	r3, r6, asr #16
900286a8:	d406      	bmi.n	900286b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900286aa:	4586      	cmp	lr, r0
900286ac:	da04      	bge.n	900286b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900286ae:	2b00      	cmp	r3, #0
900286b0:	db02      	blt.n	900286b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900286b2:	4563      	cmp	r3, ip
900286b4:	f2c0 80ac 	blt.w	90028810 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900286b8:	f11e 0e01 	adds.w	lr, lr, #1
900286bc:	f100 809f 	bmi.w	900287fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900286c0:	4571      	cmp	r1, lr
900286c2:	f2c0 809c 	blt.w	900287fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900286c6:	3301      	adds	r3, #1
900286c8:	f100 8099 	bmi.w	900287fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900286cc:	429a      	cmp	r2, r3
900286ce:	f2c0 8096 	blt.w	900287fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900286d2:	46c8      	mov	r8, r9
900286d4:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900286d8:	9509      	str	r5, [sp, #36]	@ 0x24
900286da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900286dc:	2b00      	cmp	r3, #0
900286de:	f340 80b5 	ble.w	9002884c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900286e2:	f3c4 3303 	ubfx	r3, r4, #12, #4
900286e6:	1430      	asrs	r0, r6, #16
900286e8:	f3c6 3103 	ubfx	r1, r6, #12, #4
900286ec:	9308      	str	r3, [sp, #32]
900286ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900286f0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900286f4:	1423      	asrs	r3, r4, #16
900286f6:	f100 813f 	bmi.w	90028978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900286fa:	f10c 3bff 	add.w	fp, ip, #4294967295	@ 0xffffffff
900286fe:	455b      	cmp	r3, fp
90028700:	f280 813a 	bge.w	90028978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028704:	2800      	cmp	r0, #0
90028706:	f2c0 8137 	blt.w	90028978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002870a:	f10e 3bff 	add.w	fp, lr, #4294967295	@ 0xffffffff
9002870e:	4558      	cmp	r0, fp
90028710:	f280 8132 	bge.w	90028978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028714:	9a06      	ldr	r2, [sp, #24]
90028716:	fb00 3302 	mla	r3, r0, r2, r3
9002871a:	0858      	lsrs	r0, r3, #1
9002871c:	07da      	lsls	r2, r3, #31
9002871e:	9a08      	ldr	r2, [sp, #32]
90028720:	f817 c000 	ldrb.w	ip, [r7, r0]
90028724:	bf54      	ite	pl
90028726:	f00c 0c0f 	andpl.w	ip, ip, #15
9002872a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002872e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028732:	fa5f fc8c 	uxtb.w	ip, ip
90028736:	2a00      	cmp	r2, #0
90028738:	f000 80cc 	beq.w	900288d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9002873c:	1c58      	adds	r0, r3, #1
9002873e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90028742:	07c0      	lsls	r0, r0, #31
90028744:	f817 e00e 	ldrb.w	lr, [r7, lr]
90028748:	bf54      	ite	pl
9002874a:	f00e 0e0f 	andpl.w	lr, lr, #15
9002874e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90028752:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90028756:	fa5f fe8e 	uxtb.w	lr, lr
9002875a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
9002875e:	b1b9      	cbz	r1, 90028790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028760:	4453      	add	r3, sl
90028762:	0858      	lsrs	r0, r3, #1
90028764:	07da      	lsls	r2, r3, #31
90028766:	5c38      	ldrb	r0, [r7, r0]
90028768:	bf54      	ite	pl
9002876a:	f000 000f 	andpl.w	r0, r0, #15
9002876e:	1100      	asrmi	r0, r0, #4
90028770:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028774:	b2c0      	uxtb	r0, r0
90028776:	900a      	str	r0, [sp, #40]	@ 0x28
90028778:	1c58      	adds	r0, r3, #1
9002877a:	0843      	lsrs	r3, r0, #1
9002877c:	07c2      	lsls	r2, r0, #31
9002877e:	5cfb      	ldrb	r3, [r7, r3]
90028780:	bf54      	ite	pl
90028782:	f003 030f 	andpl.w	r3, r3, #15
90028786:	111b      	asrmi	r3, r3, #4
90028788:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002878c:	b2db      	uxtb	r3, r3
9002878e:	930e      	str	r3, [sp, #56]	@ 0x38
90028790:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90028794:	b289      	uxth	r1, r1
90028796:	fb02 f301 	mul.w	r3, r2, r1
9002879a:	0112      	lsls	r2, r2, #4
9002879c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900287a0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900287a4:	1ad2      	subs	r2, r2, r3
900287a6:	b289      	uxth	r1, r1
900287a8:	b292      	uxth	r2, r2
900287aa:	1a40      	subs	r0, r0, r1
900287ac:	fa1f fe80 	uxth.w	lr, r0
900287b0:	980d      	ldr	r0, [sp, #52]	@ 0x34
900287b2:	4342      	muls	r2, r0
900287b4:	fb0c 2c0e 	mla	ip, ip, lr, r2
900287b8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900287ba:	fb01 c102 	mla	r1, r1, r2, ip
900287be:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900287c0:	fb03 1302 	mla	r3, r3, r2, r1
900287c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900287c8:	2bff      	cmp	r3, #255	@ 0xff
900287ca:	f040 8094 	bne.w	900288f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900287ce:	4bbf      	ldr	r3, [pc, #764]	@ (90028acc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900287d0:	681a      	ldr	r2, [r3, #0]
900287d2:	4bbf      	ldr	r3, [pc, #764]	@ (90028ad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900287d4:	0951      	lsrs	r1, r2, #5
900287d6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900287da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900287de:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900287e2:	430b      	orrs	r3, r1
900287e4:	4313      	orrs	r3, r2
900287e6:	f8a8 3000 	strh.w	r3, [r8]
900287ea:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900287ec:	f108 0802 	add.w	r8, r8, #2
900287f0:	441c      	add	r4, r3
900287f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900287f4:	441e      	add	r6, r3
900287f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900287f8:	3b01      	subs	r3, #1
900287fa:	9309      	str	r3, [sp, #36]	@ 0x24
900287fc:	e76d      	b.n	900286da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900287fe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90028800:	3d01      	subs	r5, #1
90028802:	f109 0902 	add.w	r9, r9, #2
90028806:	441c      	add	r4, r3
90028808:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002880a:	441e      	add	r6, r3
9002880c:	e745      	b.n	9002869a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002880e:	d021      	beq.n	90028854 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90028810:	1e6b      	subs	r3, r5, #1
90028812:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90028814:	fb00 4003 	mla	r0, r0, r3, r4
90028818:	1400      	asrs	r0, r0, #16
9002881a:	f53f af5a 	bmi.w	900286d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002881e:	3901      	subs	r1, #1
90028820:	4288      	cmp	r0, r1
90028822:	f6bf af56 	bge.w	900286d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028826:	9920      	ldr	r1, [sp, #128]	@ 0x80
90028828:	fb01 6303 	mla	r3, r1, r3, r6
9002882c:	141b      	asrs	r3, r3, #16
9002882e:	f53f af50 	bmi.w	900286d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028832:	3a01      	subs	r2, #1
90028834:	4293      	cmp	r3, r2
90028836:	f6bf af4c 	bge.w	900286d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002883a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002883e:	46a8      	mov	r8, r5
90028840:	46ce      	mov	lr, r9
90028842:	9308      	str	r3, [sp, #32]
90028844:	f1b8 0f00 	cmp.w	r8, #0
90028848:	f300 80b6 	bgt.w	900289b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002884c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90028850:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90028854:	9b07      	ldr	r3, [sp, #28]
90028856:	2b00      	cmp	r3, #0
90028858:	f340 817e 	ble.w	90028b58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002885c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028860:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90028862:	ee30 0a04 	vadd.f32	s0, s0, s8
90028866:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002886a:	eef0 6a62 	vmov.f32	s13, s5
9002886e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028872:	ee31 1a05 	vadd.f32	s2, s2, s10
90028876:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002887a:	ee16 4a90 	vmov	r4, s13
9002887e:	eef0 6a43 	vmov.f32	s13, s6
90028882:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028886:	ee16 6a90 	vmov	r6, s13
9002888a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002888e:	ee61 7a27 	vmul.f32	s15, s2, s15
90028892:	ee77 2a62 	vsub.f32	s5, s14, s5
90028896:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002889a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002889e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900288a2:	ee12 2a90 	vmov	r2, s5
900288a6:	eef0 2a47 	vmov.f32	s5, s14
900288aa:	fb92 f3f3 	sdiv	r3, r2, r3
900288ae:	ee13 2a10 	vmov	r2, s6
900288b2:	931f      	str	r3, [sp, #124]	@ 0x7c
900288b4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900288b6:	eeb0 3a67 	vmov.f32	s6, s15
900288ba:	fb92 f3f3 	sdiv	r3, r2, r3
900288be:	9320      	str	r3, [sp, #128]	@ 0x80
900288c0:	9b07      	ldr	r3, [sp, #28]
900288c2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900288c4:	3b01      	subs	r3, #1
900288c6:	9307      	str	r3, [sp, #28]
900288c8:	bf08      	it	eq
900288ca:	4615      	moveq	r5, r2
900288cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900288ce:	bf18      	it	ne
900288d0:	461d      	movne	r5, r3
900288d2:	e6d3      	b.n	9002867c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900288d4:	2900      	cmp	r1, #0
900288d6:	f43f af5b 	beq.w	90028790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900288da:	eb0a 0003 	add.w	r0, sl, r3
900288de:	0843      	lsrs	r3, r0, #1
900288e0:	07c0      	lsls	r0, r0, #31
900288e2:	5cfb      	ldrb	r3, [r7, r3]
900288e4:	bf54      	ite	pl
900288e6:	f003 030f 	andpl.w	r3, r3, #15
900288ea:	111b      	asrmi	r3, r3, #4
900288ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900288f0:	b2db      	uxtb	r3, r3
900288f2:	930a      	str	r3, [sp, #40]	@ 0x28
900288f4:	e74c      	b.n	90028790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900288f6:	2b00      	cmp	r3, #0
900288f8:	f43f af77 	beq.w	900287ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900288fc:	4a73      	ldr	r2, [pc, #460]	@ (90028acc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900288fe:	fa1f fe83 	uxth.w	lr, r3
90028902:	f8b8 c000 	ldrh.w	ip, [r8]
90028906:	43db      	mvns	r3, r3
90028908:	6810      	ldr	r0, [r2, #0]
9002890a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002890e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028912:	b2db      	uxtb	r3, r3
90028914:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028918:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002891c:	fb12 f20e 	smulbb	r2, r2, lr
90028920:	b2c0      	uxtb	r0, r0
90028922:	fb1b fb0e 	smulbb	fp, fp, lr
90028926:	fb01 2103 	mla	r1, r1, r3, r2
9002892a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002892e:	fb10 fe0e 	smulbb	lr, r0, lr
90028932:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90028936:	b289      	uxth	r1, r1
90028938:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002893c:	fa5f fc8c 	uxtb.w	ip, ip
90028940:	fb02 b203 	mla	r2, r2, r3, fp
90028944:	1c48      	adds	r0, r1, #1
90028946:	fb0c e303 	mla	r3, ip, r3, lr
9002894a:	b292      	uxth	r2, r2
9002894c:	b29b      	uxth	r3, r3
9002894e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90028952:	f102 0b01 	add.w	fp, r2, #1
90028956:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002895a:	1c59      	adds	r1, r3, #1
9002895c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028960:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90028964:	0952      	lsrs	r2, r2, #5
90028966:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002896a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002896e:	4301      	orrs	r1, r0
90028970:	4311      	orrs	r1, r2
90028972:	f8a8 1000 	strh.w	r1, [r8]
90028976:	e738      	b.n	900287ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028978:	f113 0b01 	adds.w	fp, r3, #1
9002897c:	f53f af35 	bmi.w	900287ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028980:	45dc      	cmp	ip, fp
90028982:	f6ff af32 	blt.w	900287ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028986:	f110 0b01 	adds.w	fp, r0, #1
9002898a:	f53f af2e 	bmi.w	900287ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002898e:	45de      	cmp	lr, fp
90028990:	f6ff af2b 	blt.w	900287ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028994:	9302      	str	r3, [sp, #8]
90028996:	fa0f f38e 	sxth.w	r3, lr
9002899a:	9a08      	ldr	r2, [sp, #32]
9002899c:	9301      	str	r3, [sp, #4]
9002899e:	fa0f f38c 	sxth.w	r3, ip
900289a2:	9105      	str	r1, [sp, #20]
900289a4:	4641      	mov	r1, r8
900289a6:	9300      	str	r3, [sp, #0]
900289a8:	4653      	mov	r3, sl
900289aa:	e9cd 0203 	strd	r0, r2, [sp, #12]
900289ae:	463a      	mov	r2, r7
900289b0:	9811      	ldr	r0, [sp, #68]	@ 0x44
900289b2:	f7ff fd73 	bl	9002849c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900289b6:	e718      	b.n	900287ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900289b8:	1422      	asrs	r2, r4, #16
900289ba:	9906      	ldr	r1, [sp, #24]
900289bc:	1433      	asrs	r3, r6, #16
900289be:	f3c4 3003 	ubfx	r0, r4, #12, #4
900289c2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900289c6:	fb01 2303 	mla	r3, r1, r3, r2
900289ca:	085a      	lsrs	r2, r3, #1
900289cc:	07d9      	lsls	r1, r3, #31
900289ce:	5cba      	ldrb	r2, [r7, r2]
900289d0:	bf54      	ite	pl
900289d2:	f002 020f 	andpl.w	r2, r2, #15
900289d6:	1112      	asrmi	r2, r2, #4
900289d8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900289dc:	b2d2      	uxtb	r2, r2
900289de:	2800      	cmp	r0, #0
900289e0:	d063      	beq.n	90028aaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900289e2:	f103 0a01 	add.w	sl, r3, #1
900289e6:	ea4f 015a 	mov.w	r1, sl, lsr #1
900289ea:	f01a 0f01 	tst.w	sl, #1
900289ee:	5c79      	ldrb	r1, [r7, r1]
900289f0:	bf0c      	ite	eq
900289f2:	f001 010f 	andeq.w	r1, r1, #15
900289f6:	1109      	asrne	r1, r1, #4
900289f8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900289fc:	b2c9      	uxtb	r1, r1
900289fe:	910f      	str	r1, [sp, #60]	@ 0x3c
90028a00:	f1bc 0f00 	cmp.w	ip, #0
90028a04:	d01a      	beq.n	90028a3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028a06:	9908      	ldr	r1, [sp, #32]
90028a08:	440b      	add	r3, r1
90028a0a:	0859      	lsrs	r1, r3, #1
90028a0c:	f013 0f01 	tst.w	r3, #1
90028a10:	f103 0301 	add.w	r3, r3, #1
90028a14:	5c79      	ldrb	r1, [r7, r1]
90028a16:	bf0c      	ite	eq
90028a18:	f001 010f 	andeq.w	r1, r1, #15
90028a1c:	1109      	asrne	r1, r1, #4
90028a1e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028a22:	b2c9      	uxtb	r1, r1
90028a24:	910b      	str	r1, [sp, #44]	@ 0x2c
90028a26:	0859      	lsrs	r1, r3, #1
90028a28:	07db      	lsls	r3, r3, #31
90028a2a:	5c79      	ldrb	r1, [r7, r1]
90028a2c:	bf54      	ite	pl
90028a2e:	f001 010f 	andpl.w	r1, r1, #15
90028a32:	1109      	asrmi	r1, r1, #4
90028a34:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028a38:	b2c9      	uxtb	r1, r1
90028a3a:	9110      	str	r1, [sp, #64]	@ 0x40
90028a3c:	b280      	uxth	r0, r0
90028a3e:	fa1f fc8c 	uxth.w	ip, ip
90028a42:	fb00 f30c 	mul.w	r3, r0, ip
90028a46:	0100      	lsls	r0, r0, #4
90028a48:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90028a4c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90028a50:	1ac0      	subs	r0, r0, r3
90028a52:	fa1f fc8c 	uxth.w	ip, ip
90028a56:	b280      	uxth	r0, r0
90028a58:	eba1 010c 	sub.w	r1, r1, ip
90028a5c:	fa1f fa81 	uxth.w	sl, r1
90028a60:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90028a62:	4348      	muls	r0, r1
90028a64:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90028a66:	fb02 020a 	mla	r2, r2, sl, r0
90028a6a:	fb0c 2c01 	mla	ip, ip, r1, r2
90028a6e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028a70:	fb03 c302 	mla	r3, r3, r2, ip
90028a74:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028a78:	2bff      	cmp	r3, #255	@ 0xff
90028a7a:	d12b      	bne.n	90028ad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90028a7c:	4b13      	ldr	r3, [pc, #76]	@ (90028acc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028a7e:	681a      	ldr	r2, [r3, #0]
90028a80:	4b13      	ldr	r3, [pc, #76]	@ (90028ad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90028a82:	0951      	lsrs	r1, r2, #5
90028a84:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90028a88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028a8c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90028a90:	430b      	orrs	r3, r1
90028a92:	4313      	orrs	r3, r2
90028a94:	f8ae 3000 	strh.w	r3, [lr]
90028a98:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90028a9a:	f10e 0e02 	add.w	lr, lr, #2
90028a9e:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
90028aa2:	441c      	add	r4, r3
90028aa4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028aa6:	441e      	add	r6, r3
90028aa8:	e6cc      	b.n	90028844 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90028aaa:	f1bc 0f00 	cmp.w	ip, #0
90028aae:	d0c5      	beq.n	90028a3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028ab0:	9908      	ldr	r1, [sp, #32]
90028ab2:	440b      	add	r3, r1
90028ab4:	0859      	lsrs	r1, r3, #1
90028ab6:	07db      	lsls	r3, r3, #31
90028ab8:	5c79      	ldrb	r1, [r7, r1]
90028aba:	bf54      	ite	pl
90028abc:	f001 010f 	andpl.w	r1, r1, #15
90028ac0:	1109      	asrmi	r1, r1, #4
90028ac2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028ac6:	b2c9      	uxtb	r1, r1
90028ac8:	910b      	str	r1, [sp, #44]	@ 0x2c
90028aca:	e7b7      	b.n	90028a3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028acc:	2402341c 	.word	0x2402341c
90028ad0:	fffff800 	.word	0xfffff800
90028ad4:	2b00      	cmp	r3, #0
90028ad6:	d0df      	beq.n	90028a98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028ad8:	4a21      	ldr	r2, [pc, #132]	@ (90028b60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90028ada:	fa1f fa83 	uxth.w	sl, r3
90028ade:	f8be c000 	ldrh.w	ip, [lr]
90028ae2:	43db      	mvns	r3, r3
90028ae4:	6810      	ldr	r0, [r2, #0]
90028ae6:	ea4f 212c 	mov.w	r1, ip, asr #8
90028aea:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028aee:	b2db      	uxtb	r3, r3
90028af0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028af4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028af8:	fb12 f20a 	smulbb	r2, r2, sl
90028afc:	b2c0      	uxtb	r0, r0
90028afe:	fb1b fb0a 	smulbb	fp, fp, sl
90028b02:	fb01 2103 	mla	r1, r1, r3, r2
90028b06:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028b0a:	fb10 f00a 	smulbb	r0, r0, sl
90028b0e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90028b12:	b289      	uxth	r1, r1
90028b14:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028b18:	fa5f fc8c 	uxtb.w	ip, ip
90028b1c:	fb02 b203 	mla	r2, r2, r3, fp
90028b20:	fb0c 0003 	mla	r0, ip, r3, r0
90028b24:	1c4b      	adds	r3, r1, #1
90028b26:	b292      	uxth	r2, r2
90028b28:	b280      	uxth	r0, r0
90028b2a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028b2e:	f100 0b01 	add.w	fp, r0, #1
90028b32:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90028b36:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90028b3a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90028b3e:	ea4b 0101 	orr.w	r1, fp, r1
90028b42:	f102 0b01 	add.w	fp, r2, #1
90028b46:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028b4a:	0952      	lsrs	r2, r2, #5
90028b4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028b50:	4311      	orrs	r1, r2
90028b52:	f8ae 1000 	strh.w	r1, [lr]
90028b56:	e79f      	b.n	90028a98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028b58:	b013      	add	sp, #76	@ 0x4c
90028b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028b5e:	bf00      	nop
90028b60:	2402341c 	.word	0x2402341c

90028b64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90028b64:	b570      	push	{r4, r5, r6, lr}
90028b66:	1208      	asrs	r0, r1, #8
90028b68:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90028b6c:	b29e      	uxth	r6, r3
90028b6e:	1213      	asrs	r3, r2, #8
90028b70:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028b74:	10cc      	asrs	r4, r1, #3
90028b76:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90028b7a:	00c9      	lsls	r1, r1, #3
90028b7c:	fb10 f006 	smulbb	r0, r0, r6
90028b80:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90028b84:	fb13 f305 	smulbb	r3, r3, r5
90028b88:	fb14 f406 	smulbb	r4, r4, r6
90028b8c:	4418      	add	r0, r3
90028b8e:	10d3      	asrs	r3, r2, #3
90028b90:	00d2      	lsls	r2, r2, #3
90028b92:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90028b96:	b280      	uxth	r0, r0
90028b98:	b2d2      	uxtb	r2, r2
90028b9a:	fb13 f305 	smulbb	r3, r3, r5
90028b9e:	fb12 f205 	smulbb	r2, r2, r5
90028ba2:	441c      	add	r4, r3
90028ba4:	b2cb      	uxtb	r3, r1
90028ba6:	fb13 f306 	smulbb	r3, r3, r6
90028baa:	b2a4      	uxth	r4, r4
90028bac:	4413      	add	r3, r2
90028bae:	1c42      	adds	r2, r0, #1
90028bb0:	b29b      	uxth	r3, r3
90028bb2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028bb6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
90028bba:	1c58      	adds	r0, r3, #1
90028bbc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028bc0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028bc4:	4310      	orrs	r0, r2
90028bc6:	1c62      	adds	r2, r4, #1
90028bc8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028bcc:	0964      	lsrs	r4, r4, #5
90028bce:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028bd2:	4320      	orrs	r0, r4
90028bd4:	bd70      	pop	{r4, r5, r6, pc}
	...

90028bd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90028bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028bdc:	b08f      	sub	sp, #60	@ 0x3c
90028bde:	461c      	mov	r4, r3
90028be0:	460d      	mov	r5, r1
90028be2:	4616      	mov	r6, r2
90028be4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028be8:	9004      	str	r0, [sp, #16]
90028bea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028bec:	2f00      	cmp	r7, #0
90028bee:	f000 80f6 	beq.w	90028dde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90028bf2:	6820      	ldr	r0, [r4, #0]
90028bf4:	aa0a      	add	r2, sp, #40	@ 0x28
90028bf6:	6861      	ldr	r1, [r4, #4]
90028bf8:	f04f 0802 	mov.w	r8, #2
90028bfc:	3604      	adds	r6, #4
90028bfe:	c203      	stmia	r2!, {r0, r1}
90028c00:	6818      	ldr	r0, [r3, #0]
90028c02:	aa0c      	add	r2, sp, #48	@ 0x30
90028c04:	6859      	ldr	r1, [r3, #4]
90028c06:	c203      	stmia	r2!, {r0, r1}
90028c08:	a80a      	add	r0, sp, #40	@ 0x28
90028c0a:	f7ef fa87 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028c0e:	4621      	mov	r1, r4
90028c10:	a80c      	add	r0, sp, #48	@ 0x30
90028c12:	f7ef faab 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028c16:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90028c1a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90028c1e:	f002 0301 	and.w	r3, r2, #1
90028c22:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90028c26:	9306      	str	r3, [sp, #24]
90028c28:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028c2c:	f003 0101 	and.w	r1, r3, #1
90028c30:	9105      	str	r1, [sp, #20]
90028c32:	9805      	ldr	r0, [sp, #20]
90028c34:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90028c38:	4403      	add	r3, r0
90028c3a:	fb01 2303 	mla	r3, r1, r3, r2
90028c3e:	fb93 f3f8 	sdiv	r3, r3, r8
90028c42:	441d      	add	r5, r3
90028c44:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90028c48:	441a      	add	r2, r3
90028c4a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90028c4e:	4419      	add	r1, r3
90028c50:	4b64      	ldr	r3, [pc, #400]	@ (90028de4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028c52:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028c56:	6818      	ldr	r0, [r3, #0]
90028c58:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90028c5c:	6803      	ldr	r3, [r0, #0]
90028c5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90028c60:	4798      	blx	r3
90028c62:	4a61      	ldr	r2, [pc, #388]	@ (90028de8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90028c64:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90028c68:	2fff      	cmp	r7, #255	@ 0xff
90028c6a:	8813      	ldrh	r3, [r2, #0]
90028c6c:	4611      	mov	r1, r2
90028c6e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90028c72:	fb03 fb0b 	mul.w	fp, r3, fp
90028c76:	fb03 a404 	mla	r4, r3, r4, sl
90028c7a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028c7e:	d06b      	beq.n	90028d58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028c80:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90028c84:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028c88:	9303      	str	r3, [sp, #12]
90028c8a:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90028c8e:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028c92:	9b07      	ldr	r3, [sp, #28]
90028c94:	42a3      	cmp	r3, r4
90028c96:	f240 809d 	bls.w	90028dd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028c9a:	9b06      	ldr	r3, [sp, #24]
90028c9c:	2b00      	cmp	r3, #0
90028c9e:	d039      	beq.n	90028d14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90028ca0:	782b      	ldrb	r3, [r5, #0]
90028ca2:	f105 0801 	add.w	r8, r5, #1
90028ca6:	f109 3bff 	add.w	fp, r9, #4294967295	@ 0xffffffff
90028caa:	8822      	ldrh	r2, [r4, #0]
90028cac:	f003 030f 	and.w	r3, r3, #15
90028cb0:	9804      	ldr	r0, [sp, #16]
90028cb2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028cb6:	9b03      	ldr	r3, [sp, #12]
90028cb8:	9300      	str	r3, [sp, #0]
90028cba:	463b      	mov	r3, r7
90028cbc:	f7ff ff52 	bl	90028b64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028cc0:	f824 0b02 	strh.w	r0, [r4], #2
90028cc4:	f1bb 0f01 	cmp.w	fp, #1
90028cc8:	46a2      	mov	sl, r4
90028cca:	f104 0404 	add.w	r4, r4, #4
90028cce:	dd24      	ble.n	90028d1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90028cd0:	f898 3000 	ldrb.w	r3, [r8]
90028cd4:	f1ab 0b02 	sub.w	fp, fp, #2
90028cd8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028cdc:	091b      	lsrs	r3, r3, #4
90028cde:	9804      	ldr	r0, [sp, #16]
90028ce0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028ce4:	9b03      	ldr	r3, [sp, #12]
90028ce6:	9300      	str	r3, [sp, #0]
90028ce8:	463b      	mov	r3, r7
90028cea:	f7ff ff3b 	bl	90028b64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028cee:	f824 0c04 	strh.w	r0, [r4, #-4]
90028cf2:	f818 3b01 	ldrb.w	r3, [r8], #1
90028cf6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028cfa:	f003 030f 	and.w	r3, r3, #15
90028cfe:	9804      	ldr	r0, [sp, #16]
90028d00:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028d04:	9b03      	ldr	r3, [sp, #12]
90028d06:	9300      	str	r3, [sp, #0]
90028d08:	463b      	mov	r3, r7
90028d0a:	f7ff ff2b 	bl	90028b64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028d0e:	f824 0c02 	strh.w	r0, [r4, #-2]
90028d12:	e7d7      	b.n	90028cc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028d14:	46a8      	mov	r8, r5
90028d16:	46cb      	mov	fp, r9
90028d18:	e7d4      	b.n	90028cc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028d1a:	d10e      	bne.n	90028d3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90028d1c:	f898 3000 	ldrb.w	r3, [r8]
90028d20:	f8ba 2000 	ldrh.w	r2, [sl]
90028d24:	091b      	lsrs	r3, r3, #4
90028d26:	9804      	ldr	r0, [sp, #16]
90028d28:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028d2c:	9b03      	ldr	r3, [sp, #12]
90028d2e:	9300      	str	r3, [sp, #0]
90028d30:	463b      	mov	r3, r7
90028d32:	f7ff ff17 	bl	90028b64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028d36:	f82a 0b02 	strh.w	r0, [sl], #2
90028d3a:	9b08      	ldr	r3, [sp, #32]
90028d3c:	9a05      	ldr	r2, [sp, #20]
90028d3e:	881c      	ldrh	r4, [r3, #0]
90028d40:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028d44:	eba4 0409 	sub.w	r4, r4, r9
90028d48:	4413      	add	r3, r2
90028d4a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028d4c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90028d50:	fb93 f3f2 	sdiv	r3, r3, r2
90028d54:	441d      	add	r5, r3
90028d56:	e79c      	b.n	90028c92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90028d58:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90028d5c:	45a3      	cmp	fp, r4
90028d5e:	d939      	bls.n	90028dd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028d60:	9b06      	ldr	r3, [sp, #24]
90028d62:	b1fb      	cbz	r3, 90028da4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90028d64:	782b      	ldrb	r3, [r5, #0]
90028d66:	1c6a      	adds	r2, r5, #1
90028d68:	f109 30ff 	add.w	r0, r9, #4294967295	@ 0xffffffff
90028d6c:	3402      	adds	r4, #2
90028d6e:	f003 030f 	and.w	r3, r3, #15
90028d72:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028d76:	f824 3c02 	strh.w	r3, [r4, #-2]
90028d7a:	2801      	cmp	r0, #1
90028d7c:	4623      	mov	r3, r4
90028d7e:	f104 0404 	add.w	r4, r4, #4
90028d82:	dd12      	ble.n	90028daa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90028d84:	7813      	ldrb	r3, [r2, #0]
90028d86:	3802      	subs	r0, #2
90028d88:	091b      	lsrs	r3, r3, #4
90028d8a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028d8e:	f824 3c04 	strh.w	r3, [r4, #-4]
90028d92:	f812 3b01 	ldrb.w	r3, [r2], #1
90028d96:	f003 030f 	and.w	r3, r3, #15
90028d9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028d9e:	f824 3c02 	strh.w	r3, [r4, #-2]
90028da2:	e7ea      	b.n	90028d7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028da4:	462a      	mov	r2, r5
90028da6:	4648      	mov	r0, r9
90028da8:	e7e7      	b.n	90028d7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028daa:	d106      	bne.n	90028dba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90028dac:	7812      	ldrb	r2, [r2, #0]
90028dae:	3302      	adds	r3, #2
90028db0:	0912      	lsrs	r2, r2, #4
90028db2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90028db6:	f823 2c02 	strh.w	r2, [r3, #-2]
90028dba:	880c      	ldrh	r4, [r1, #0]
90028dbc:	9a05      	ldr	r2, [sp, #20]
90028dbe:	eba4 0409 	sub.w	r4, r4, r9
90028dc2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90028dc6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028dca:	4413      	add	r3, r2
90028dcc:	fb93 f3f8 	sdiv	r3, r3, r8
90028dd0:	441d      	add	r5, r3
90028dd2:	e7c3      	b.n	90028d5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90028dd4:	4b03      	ldr	r3, [pc, #12]	@ (90028de4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028dd6:	6818      	ldr	r0, [r3, #0]
90028dd8:	6803      	ldr	r3, [r0, #0]
90028dda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028ddc:	4798      	blx	r3
90028dde:	b00f      	add	sp, #60	@ 0x3c
90028de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028de4:	2402340c 	.word	0x2402340c
90028de8:	24023406 	.word	0x24023406

90028dec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90028dec:	b5f0      	push	{r4, r5, r6, r7, lr}
90028dee:	f89d 5014 	ldrb.w	r5, [sp, #20]
90028df2:	0a0f      	lsrs	r7, r1, #8
90028df4:	2dff      	cmp	r5, #255	@ 0xff
90028df6:	d10c      	bne.n	90028e12 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028df8:	2bff      	cmp	r3, #255	@ 0xff
90028dfa:	d10a      	bne.n	90028e12 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028dfc:	0948      	lsrs	r0, r1, #5
90028dfe:	4b25      	ldr	r3, [pc, #148]	@ (90028e94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028e00:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028e04:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028e08:	403b      	ands	r3, r7
90028e0a:	4318      	orrs	r0, r3
90028e0c:	4308      	orrs	r0, r1
90028e0e:	b280      	uxth	r0, r0
90028e10:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028e12:	fb15 f503 	smulbb	r5, r5, r3
90028e16:	1214      	asrs	r4, r2, #8
90028e18:	10d6      	asrs	r6, r2, #3
90028e1a:	b2ab      	uxth	r3, r5
90028e1c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028e20:	00d0      	lsls	r0, r2, #3
90028e22:	f3c1 4207 	ubfx	r2, r1, #16, #8
90028e26:	1c5d      	adds	r5, r3, #1
90028e28:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028e2c:	b2c0      	uxtb	r0, r0
90028e2e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90028e32:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90028e36:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90028e3a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90028e3e:	fa1f fc85 	uxth.w	ip, r5
90028e42:	43ed      	mvns	r5, r5
90028e44:	fb12 f20c 	smulbb	r2, r2, ip
90028e48:	b2eb      	uxtb	r3, r5
90028e4a:	b2fd      	uxtb	r5, r7
90028e4c:	fb04 2403 	mla	r4, r4, r3, r2
90028e50:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90028e54:	fb15 f50c 	smulbb	r5, r5, ip
90028e58:	b2c8      	uxtb	r0, r1
90028e5a:	b2a4      	uxth	r4, r4
90028e5c:	fb10 f00c 	smulbb	r0, r0, ip
90028e60:	fb06 5503 	mla	r5, r6, r3, r5
90028e64:	fb02 0003 	mla	r0, r2, r3, r0
90028e68:	b2ad      	uxth	r5, r5
90028e6a:	b283      	uxth	r3, r0
90028e6c:	1c60      	adds	r0, r4, #1
90028e6e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90028e72:	1c58      	adds	r0, r3, #1
90028e74:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028e78:	1c6b      	adds	r3, r5, #1
90028e7a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028e7e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90028e82:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028e86:	096d      	lsrs	r5, r5, #5
90028e88:	4320      	orrs	r0, r4
90028e8a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90028e8e:	4328      	orrs	r0, r5
90028e90:	e7be      	b.n	90028e10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90028e92:	bf00      	nop
90028e94:	00fff800 	.word	0x00fff800

90028e98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90028e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028e9c:	461c      	mov	r4, r3
90028e9e:	b08d      	sub	sp, #52	@ 0x34
90028ea0:	460d      	mov	r5, r1
90028ea2:	4616      	mov	r6, r2
90028ea4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028ea6:	4680      	mov	r8, r0
90028ea8:	6861      	ldr	r1, [r4, #4]
90028eaa:	aa08      	add	r2, sp, #32
90028eac:	6820      	ldr	r0, [r4, #0]
90028eae:	f04f 0a02 	mov.w	sl, #2
90028eb2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90028eb6:	3604      	adds	r6, #4
90028eb8:	c203      	stmia	r2!, {r0, r1}
90028eba:	6818      	ldr	r0, [r3, #0]
90028ebc:	aa0a      	add	r2, sp, #40	@ 0x28
90028ebe:	6859      	ldr	r1, [r3, #4]
90028ec0:	c203      	stmia	r2!, {r0, r1}
90028ec2:	a808      	add	r0, sp, #32
90028ec4:	f7ef f92a 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028ec8:	4621      	mov	r1, r4
90028eca:	a80a      	add	r0, sp, #40	@ 0x28
90028ecc:	f7ef f94e 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028ed0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90028ed4:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90028ed8:	f002 0301 	and.w	r3, r2, #1
90028edc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90028ee0:	9303      	str	r3, [sp, #12]
90028ee2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028ee6:	f003 0101 	and.w	r1, r3, #1
90028eea:	9102      	str	r1, [sp, #8]
90028eec:	9802      	ldr	r0, [sp, #8]
90028eee:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90028ef2:	4403      	add	r3, r0
90028ef4:	fb01 2303 	mla	r3, r1, r3, r2
90028ef8:	fb93 f3fa 	sdiv	r3, r3, sl
90028efc:	441d      	add	r5, r3
90028efe:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90028f02:	441a      	add	r2, r3
90028f04:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90028f08:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90028f0c:	4419      	add	r1, r3
90028f0e:	4a3e      	ldr	r2, [pc, #248]	@ (90029008 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90028f10:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90028f14:	6810      	ldr	r0, [r2, #0]
90028f16:	9205      	str	r2, [sp, #20]
90028f18:	6803      	ldr	r3, [r0, #0]
90028f1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90028f1c:	4798      	blx	r3
90028f1e:	4b3b      	ldr	r3, [pc, #236]	@ (9002900c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90028f20:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90028f24:	8819      	ldrh	r1, [r3, #0]
90028f26:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90028f2a:	434f      	muls	r7, r1
90028f2c:	fb01 c404 	mla	r4, r1, r4, ip
90028f30:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028f34:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90028f38:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90028f3c:	9204      	str	r2, [sp, #16]
90028f3e:	9b04      	ldr	r3, [sp, #16]
90028f40:	429c      	cmp	r4, r3
90028f42:	d258      	bcs.n	90028ff6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90028f44:	9b03      	ldr	r3, [sp, #12]
90028f46:	2b00      	cmp	r3, #0
90028f48:	d034      	beq.n	90028fb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90028f4a:	782b      	ldrb	r3, [r5, #0]
90028f4c:	1c6f      	adds	r7, r5, #1
90028f4e:	f003 030f 	and.w	r3, r3, #15
90028f52:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028f56:	0e0b      	lsrs	r3, r1, #24
90028f58:	d006      	beq.n	90028f68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90028f5a:	8822      	ldrh	r2, [r4, #0]
90028f5c:	4640      	mov	r0, r8
90028f5e:	9300      	str	r3, [sp, #0]
90028f60:	464b      	mov	r3, r9
90028f62:	f7ff ff43 	bl	90028dec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028f66:	8020      	strh	r0, [r4, #0]
90028f68:	3402      	adds	r4, #2
90028f6a:	f10b 3aff 	add.w	sl, fp, #4294967295	@ 0xffffffff
90028f6e:	f1ba 0f01 	cmp.w	sl, #1
90028f72:	dd22      	ble.n	90028fba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90028f74:	783b      	ldrb	r3, [r7, #0]
90028f76:	091b      	lsrs	r3, r3, #4
90028f78:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028f7c:	0e0b      	lsrs	r3, r1, #24
90028f7e:	d006      	beq.n	90028f8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028f80:	8822      	ldrh	r2, [r4, #0]
90028f82:	4640      	mov	r0, r8
90028f84:	9300      	str	r3, [sp, #0]
90028f86:	464b      	mov	r3, r9
90028f88:	f7ff ff30 	bl	90028dec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028f8c:	8020      	strh	r0, [r4, #0]
90028f8e:	f817 3b01 	ldrb.w	r3, [r7], #1
90028f92:	f003 030f 	and.w	r3, r3, #15
90028f96:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028f9a:	0e0b      	lsrs	r3, r1, #24
90028f9c:	d006      	beq.n	90028fac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90028f9e:	8862      	ldrh	r2, [r4, #2]
90028fa0:	4640      	mov	r0, r8
90028fa2:	9300      	str	r3, [sp, #0]
90028fa4:	464b      	mov	r3, r9
90028fa6:	f7ff ff21 	bl	90028dec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028faa:	8060      	strh	r0, [r4, #2]
90028fac:	3404      	adds	r4, #4
90028fae:	f1aa 0a02 	sub.w	sl, sl, #2
90028fb2:	e7dc      	b.n	90028f6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028fb4:	462f      	mov	r7, r5
90028fb6:	46da      	mov	sl, fp
90028fb8:	e7d9      	b.n	90028f6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028fba:	d10d      	bne.n	90028fd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90028fbc:	783b      	ldrb	r3, [r7, #0]
90028fbe:	091b      	lsrs	r3, r3, #4
90028fc0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028fc4:	0e0b      	lsrs	r3, r1, #24
90028fc6:	d006      	beq.n	90028fd6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90028fc8:	8822      	ldrh	r2, [r4, #0]
90028fca:	4640      	mov	r0, r8
90028fcc:	9300      	str	r3, [sp, #0]
90028fce:	464b      	mov	r3, r9
90028fd0:	f7ff ff0c 	bl	90028dec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028fd4:	8020      	strh	r0, [r4, #0]
90028fd6:	3402      	adds	r4, #2
90028fd8:	9b06      	ldr	r3, [sp, #24]
90028fda:	9a02      	ldr	r2, [sp, #8]
90028fdc:	881b      	ldrh	r3, [r3, #0]
90028fde:	eba3 030b 	sub.w	r3, r3, fp
90028fe2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90028fe6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028fea:	4413      	add	r3, r2
90028fec:	9a07      	ldr	r2, [sp, #28]
90028fee:	fb93 f3f2 	sdiv	r3, r3, r2
90028ff2:	441d      	add	r5, r3
90028ff4:	e7a3      	b.n	90028f3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90028ff6:	9b05      	ldr	r3, [sp, #20]
90028ff8:	6818      	ldr	r0, [r3, #0]
90028ffa:	6803      	ldr	r3, [r0, #0]
90028ffc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028ffe:	4798      	blx	r3
90029000:	b00d      	add	sp, #52	@ 0x34
90029002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029006:	bf00      	nop
90029008:	2402340c 	.word	0x2402340c
9002900c:	24023406 	.word	0x24023406

90029010 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90029010:	b570      	push	{r4, r5, r6, lr}
90029012:	1214      	asrs	r4, r2, #8
90029014:	788d      	ldrb	r5, [r1, #2]
90029016:	f89d 6010 	ldrb.w	r6, [sp, #16]
9002901a:	10d0      	asrs	r0, r2, #3
9002901c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029020:	00d2      	lsls	r2, r2, #3
90029022:	fb15 f503 	smulbb	r5, r5, r3
90029026:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002902a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002902e:	b2d2      	uxtb	r2, r2
90029030:	fb04 5506 	mla	r5, r4, r6, r5
90029034:	784c      	ldrb	r4, [r1, #1]
90029036:	7809      	ldrb	r1, [r1, #0]
90029038:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
9002903c:	fb14 f403 	smulbb	r4, r4, r3
90029040:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90029044:	fb11 f303 	smulbb	r3, r1, r3
90029048:	b2ad      	uxth	r5, r5
9002904a:	fb00 4406 	mla	r4, r0, r6, r4
9002904e:	fb02 3306 	mla	r3, r2, r6, r3
90029052:	1c68      	adds	r0, r5, #1
90029054:	b2a4      	uxth	r4, r4
90029056:	b29b      	uxth	r3, r3
90029058:	eb00 2515 	add.w	r5, r0, r5, lsr #8
9002905c:	1c62      	adds	r2, r4, #1
9002905e:	1c58      	adds	r0, r3, #1
90029060:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90029064:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90029068:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002906c:	0964      	lsrs	r4, r4, #5
9002906e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90029072:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90029076:	4328      	orrs	r0, r5
90029078:	4320      	orrs	r0, r4
9002907a:	bd70      	pop	{r4, r5, r6, pc}

9002907c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9002907c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029080:	b08f      	sub	sp, #60	@ 0x3c
90029082:	461c      	mov	r4, r3
90029084:	4682      	mov	sl, r0
90029086:	460e      	mov	r6, r1
90029088:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
9002908c:	4615      	mov	r5, r2
9002908e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90029090:	2f00      	cmp	r7, #0
90029092:	f000 8141 	beq.w	90029318 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90029096:	6820      	ldr	r0, [r4, #0]
90029098:	aa0a      	add	r2, sp, #40	@ 0x28
9002909a:	6861      	ldr	r1, [r4, #4]
9002909c:	f04f 0802 	mov.w	r8, #2
900290a0:	3504      	adds	r5, #4
900290a2:	c203      	stmia	r2!, {r0, r1}
900290a4:	6818      	ldr	r0, [r3, #0]
900290a6:	aa0c      	add	r2, sp, #48	@ 0x30
900290a8:	6859      	ldr	r1, [r3, #4]
900290aa:	c203      	stmia	r2!, {r0, r1}
900290ac:	a80a      	add	r0, sp, #40	@ 0x28
900290ae:	f7ef f835 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900290b2:	4621      	mov	r1, r4
900290b4:	a80c      	add	r0, sp, #48	@ 0x30
900290b6:	f7ef f859 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900290ba:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900290be:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900290c2:	f002 0301 	and.w	r3, r2, #1
900290c6:	9306      	str	r3, [sp, #24]
900290c8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900290cc:	f003 0101 	and.w	r1, r3, #1
900290d0:	9105      	str	r1, [sp, #20]
900290d2:	9805      	ldr	r0, [sp, #20]
900290d4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900290d8:	4403      	add	r3, r0
900290da:	fb01 2303 	mla	r3, r1, r3, r2
900290de:	fb93 f3f8 	sdiv	r3, r3, r8
900290e2:	441e      	add	r6, r3
900290e4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900290e8:	441a      	add	r2, r3
900290ea:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900290ee:	4419      	add	r1, r3
900290f0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900290f4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900290f8:	9303      	str	r3, [sp, #12]
900290fa:	4b89      	ldr	r3, [pc, #548]	@ (90029320 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900290fc:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90029100:	6818      	ldr	r0, [r3, #0]
90029102:	6803      	ldr	r3, [r0, #0]
90029104:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90029106:	4798      	blx	r3
90029108:	4a86      	ldr	r2, [pc, #536]	@ (90029324 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002910a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002910e:	2fff      	cmp	r7, #255	@ 0xff
90029110:	8813      	ldrh	r3, [r2, #0]
90029112:	4694      	mov	ip, r2
90029114:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90029118:	fb03 9404 	mla	r4, r3, r4, r9
9002911c:	fb03 f30b 	mul.w	r3, r3, fp
90029120:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90029124:	d071      	beq.n	9002920a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90029126:	43f9      	mvns	r1, r7
90029128:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002912c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90029130:	b2c9      	uxtb	r1, r1
90029132:	e9cd 3207 	strd	r3, r2, [sp, #28]
90029136:	9104      	str	r1, [sp, #16]
90029138:	9b07      	ldr	r3, [sp, #28]
9002913a:	42a3      	cmp	r3, r4
9002913c:	f240 80e7 	bls.w	9002930e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90029140:	9b06      	ldr	r3, [sp, #24]
90029142:	2b00      	cmp	r3, #0
90029144:	d03d      	beq.n	900291c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90029146:	7831      	ldrb	r1, [r6, #0]
90029148:	4650      	mov	r0, sl
9002914a:	9b04      	ldr	r3, [sp, #16]
9002914c:	f106 0801 	add.w	r8, r6, #1
90029150:	f001 010f 	and.w	r1, r1, #15
90029154:	8822      	ldrh	r2, [r4, #0]
90029156:	9300      	str	r3, [sp, #0]
90029158:	463b      	mov	r3, r7
9002915a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002915e:	4429      	add	r1, r5
90029160:	f7ff ff56 	bl	90029010 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90029164:	9b03      	ldr	r3, [sp, #12]
90029166:	f824 0b02 	strh.w	r0, [r4], #2
9002916a:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
9002916e:	f1bb 0f01 	cmp.w	fp, #1
90029172:	46a1      	mov	r9, r4
90029174:	f104 0404 	add.w	r4, r4, #4
90029178:	dd27      	ble.n	900291ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002917a:	f898 1000 	ldrb.w	r1, [r8]
9002917e:	4650      	mov	r0, sl
90029180:	9b04      	ldr	r3, [sp, #16]
90029182:	f1ab 0b02 	sub.w	fp, fp, #2
90029186:	0909      	lsrs	r1, r1, #4
90029188:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002918c:	9300      	str	r3, [sp, #0]
9002918e:	463b      	mov	r3, r7
90029190:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90029194:	4429      	add	r1, r5
90029196:	f7ff ff3b 	bl	90029010 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002919a:	f824 0c04 	strh.w	r0, [r4, #-4]
9002919e:	f818 1b01 	ldrb.w	r1, [r8], #1
900291a2:	4650      	mov	r0, sl
900291a4:	9b04      	ldr	r3, [sp, #16]
900291a6:	f001 010f 	and.w	r1, r1, #15
900291aa:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900291ae:	9300      	str	r3, [sp, #0]
900291b0:	463b      	mov	r3, r7
900291b2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900291b6:	4429      	add	r1, r5
900291b8:	f7ff ff2a 	bl	90029010 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900291bc:	f824 0c02 	strh.w	r0, [r4, #-2]
900291c0:	e7d5      	b.n	9002916e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900291c2:	46b0      	mov	r8, r6
900291c4:	f8dd b00c 	ldr.w	fp, [sp, #12]
900291c8:	e7d1      	b.n	9002916e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900291ca:	d10f      	bne.n	900291ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900291cc:	f898 1000 	ldrb.w	r1, [r8]
900291d0:	4650      	mov	r0, sl
900291d2:	9b04      	ldr	r3, [sp, #16]
900291d4:	0909      	lsrs	r1, r1, #4
900291d6:	f8b9 2000 	ldrh.w	r2, [r9]
900291da:	9300      	str	r3, [sp, #0]
900291dc:	463b      	mov	r3, r7
900291de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900291e2:	4429      	add	r1, r5
900291e4:	f7ff ff14 	bl	90029010 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900291e8:	f829 0b02 	strh.w	r0, [r9], #2
900291ec:	9b08      	ldr	r3, [sp, #32]
900291ee:	9a05      	ldr	r2, [sp, #20]
900291f0:	881c      	ldrh	r4, [r3, #0]
900291f2:	9b03      	ldr	r3, [sp, #12]
900291f4:	1ae4      	subs	r4, r4, r3
900291f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900291fa:	4413      	add	r3, r2
900291fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900291fe:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90029202:	fb93 f3f2 	sdiv	r3, r3, r2
90029206:	441e      	add	r6, r3
90029208:	e796      	b.n	90029138 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002920a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002920e:	4f46      	ldr	r7, [pc, #280]	@ (90029328 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90029210:	42a3      	cmp	r3, r4
90029212:	d97c      	bls.n	9002930e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90029214:	9a06      	ldr	r2, [sp, #24]
90029216:	2a00      	cmp	r2, #0
90029218:	d054      	beq.n	900292c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002921a:	7830      	ldrb	r0, [r6, #0]
9002921c:	1c71      	adds	r1, r6, #1
9002921e:	f000 000f 	and.w	r0, r0, #15
90029222:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90029226:	eb05 0e00 	add.w	lr, r5, r0
9002922a:	5c28      	ldrb	r0, [r5, r0]
9002922c:	f89e 2002 	ldrb.w	r2, [lr, #2]
90029230:	f89e e001 	ldrb.w	lr, [lr, #1]
90029234:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90029238:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002923c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90029240:	ea42 020e 	orr.w	r2, r2, lr
90029244:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90029248:	f824 2b02 	strh.w	r2, [r4], #2
9002924c:	9a03      	ldr	r2, [sp, #12]
9002924e:	f102 3eff 	add.w	lr, r2, #4294967295	@ 0xffffffff
90029252:	f1be 0f01 	cmp.w	lr, #1
90029256:	4620      	mov	r0, r4
90029258:	f104 0404 	add.w	r4, r4, #4
9002925c:	dd36      	ble.n	900292cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002925e:	7808      	ldrb	r0, [r1, #0]
90029260:	f1ae 0e02 	sub.w	lr, lr, #2
90029264:	0900      	lsrs	r0, r0, #4
90029266:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002926a:	eb05 0a00 	add.w	sl, r5, r0
9002926e:	f89a 2001 	ldrb.w	r2, [sl, #1]
90029272:	f89a 9002 	ldrb.w	r9, [sl, #2]
90029276:	00d2      	lsls	r2, r2, #3
90029278:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002927c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90029280:	ea49 0202 	orr.w	r2, r9, r2
90029284:	f815 9000 	ldrb.w	r9, [r5, r0]
90029288:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002928c:	f824 2c04 	strh.w	r2, [r4, #-4]
90029290:	f811 0b01 	ldrb.w	r0, [r1], #1
90029294:	f000 000f 	and.w	r0, r0, #15
90029298:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002929c:	eb05 0a00 	add.w	sl, r5, r0
900292a0:	f89a 2001 	ldrb.w	r2, [sl, #1]
900292a4:	f89a 9002 	ldrb.w	r9, [sl, #2]
900292a8:	00d2      	lsls	r2, r2, #3
900292aa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900292ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900292b2:	ea49 0202 	orr.w	r2, r9, r2
900292b6:	f815 9000 	ldrb.w	r9, [r5, r0]
900292ba:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900292be:	f824 2c02 	strh.w	r2, [r4, #-2]
900292c2:	e7c6      	b.n	90029252 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900292c4:	4631      	mov	r1, r6
900292c6:	f8dd e00c 	ldr.w	lr, [sp, #12]
900292ca:	e7c2      	b.n	90029252 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900292cc:	d111      	bne.n	900292f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900292ce:	7809      	ldrb	r1, [r1, #0]
900292d0:	0909      	lsrs	r1, r1, #4
900292d2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900292d6:	186c      	adds	r4, r5, r1
900292d8:	5c69      	ldrb	r1, [r5, r1]
900292da:	78a2      	ldrb	r2, [r4, #2]
900292dc:	7864      	ldrb	r4, [r4, #1]
900292de:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900292e2:	00e4      	lsls	r4, r4, #3
900292e4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900292e8:	4322      	orrs	r2, r4
900292ea:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900292ee:	f820 2b02 	strh.w	r2, [r0], #2
900292f2:	9a03      	ldr	r2, [sp, #12]
900292f4:	f8bc 4000 	ldrh.w	r4, [ip]
900292f8:	9905      	ldr	r1, [sp, #20]
900292fa:	1aa4      	subs	r4, r4, r2
900292fc:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90029300:	440a      	add	r2, r1
90029302:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90029306:	fb92 f2f8 	sdiv	r2, r2, r8
9002930a:	4416      	add	r6, r2
9002930c:	e780      	b.n	90029210 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002930e:	4b04      	ldr	r3, [pc, #16]	@ (90029320 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90029310:	6818      	ldr	r0, [r3, #0]
90029312:	6803      	ldr	r3, [r0, #0]
90029314:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90029316:	4798      	blx	r3
90029318:	b00f      	add	sp, #60	@ 0x3c
9002931a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002931e:	bf00      	nop
90029320:	2402340c 	.word	0x2402340c
90029324:	24023406 	.word	0x24023406
90029328:	fffff800 	.word	0xfffff800

9002932c <CRC_Lock>:
9002932c:	4a20      	ldr	r2, [pc, #128]	@ (900293b0 <CRC_Lock+0x84>)
9002932e:	b530      	push	{r4, r5, lr}
90029330:	6813      	ldr	r3, [r2, #0]
90029332:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
90029336:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002933a:	f023 0301 	bic.w	r3, r3, #1
9002933e:	6013      	str	r3, [r2, #0]
90029340:	4b1c      	ldr	r3, [pc, #112]	@ (900293b4 <CRC_Lock+0x88>)
90029342:	681a      	ldr	r2, [r3, #0]
90029344:	4022      	ands	r2, r4
90029346:	42aa      	cmp	r2, r5
90029348:	d005      	beq.n	90029356 <CRC_Lock+0x2a>
9002934a:	681b      	ldr	r3, [r3, #0]
9002934c:	f24c 2270 	movw	r2, #49776	@ 0xc270
90029350:	4023      	ands	r3, r4
90029352:	4293      	cmp	r3, r2
90029354:	d124      	bne.n	900293a0 <CRC_Lock+0x74>
90029356:	4b18      	ldr	r3, [pc, #96]	@ (900293b8 <CRC_Lock+0x8c>)
90029358:	681b      	ldr	r3, [r3, #0]
9002935a:	bb0b      	cbnz	r3, 900293a0 <CRC_Lock+0x74>
9002935c:	4b17      	ldr	r3, [pc, #92]	@ (900293bc <CRC_Lock+0x90>)
9002935e:	681a      	ldr	r2, [r3, #0]
90029360:	f3c2 020b 	ubfx	r2, r2, #0, #12
90029364:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90029368:	d00d      	beq.n	90029386 <CRC_Lock+0x5a>
9002936a:	681a      	ldr	r2, [r3, #0]
9002936c:	f240 4483 	movw	r4, #1155	@ 0x483
90029370:	f3c2 020b 	ubfx	r2, r2, #0, #12
90029374:	42a2      	cmp	r2, r4
90029376:	d006      	beq.n	90029386 <CRC_Lock+0x5a>
90029378:	681b      	ldr	r3, [r3, #0]
9002937a:	f240 4285 	movw	r2, #1157	@ 0x485
9002937e:	f3c3 030b 	ubfx	r3, r3, #0, #12
90029382:	4293      	cmp	r3, r2
90029384:	d10c      	bne.n	900293a0 <CRC_Lock+0x74>
90029386:	4b0e      	ldr	r3, [pc, #56]	@ (900293c0 <CRC_Lock+0x94>)
90029388:	2201      	movs	r2, #1
9002938a:	601a      	str	r2, [r3, #0]
9002938c:	681a      	ldr	r2, [r3, #0]
9002938e:	2a00      	cmp	r2, #0
90029390:	d1fc      	bne.n	9002938c <CRC_Lock+0x60>
90029392:	4b0c      	ldr	r3, [pc, #48]	@ (900293c4 <CRC_Lock+0x98>)
90029394:	6018      	str	r0, [r3, #0]
90029396:	6818      	ldr	r0, [r3, #0]
90029398:	1a43      	subs	r3, r0, r1
9002939a:	4258      	negs	r0, r3
9002939c:	4158      	adcs	r0, r3
9002939e:	bd30      	pop	{r4, r5, pc}
900293a0:	4b09      	ldr	r3, [pc, #36]	@ (900293c8 <CRC_Lock+0x9c>)
900293a2:	2201      	movs	r2, #1
900293a4:	601a      	str	r2, [r3, #0]
900293a6:	681a      	ldr	r2, [r3, #0]
900293a8:	2a00      	cmp	r2, #0
900293aa:	d1fc      	bne.n	900293a6 <CRC_Lock+0x7a>
900293ac:	4b07      	ldr	r3, [pc, #28]	@ (900293cc <CRC_Lock+0xa0>)
900293ae:	e7f1      	b.n	90029394 <CRC_Lock+0x68>
900293b0:	e0002000 	.word	0xe0002000
900293b4:	e000ed00 	.word	0xe000ed00
900293b8:	e0042000 	.word	0xe0042000
900293bc:	5c001000 	.word	0x5c001000
900293c0:	58024c08 	.word	0x58024c08
900293c4:	58024c00 	.word	0x58024c00
900293c8:	40023008 	.word	0x40023008
900293cc:	40023000 	.word	0x40023000

900293d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
900293d0:	6101      	str	r1, [r0, #16]
900293d2:	4770      	bx	lr

900293d4 <_ZN8touchgfx8Gestures4tickEv>:
900293d4:	7b83      	ldrb	r3, [r0, #14]
900293d6:	b14b      	cbz	r3, 900293ec <_ZN8touchgfx8Gestures4tickEv+0x18>
900293d8:	8903      	ldrh	r3, [r0, #8]
900293da:	3301      	adds	r3, #1
900293dc:	b29b      	uxth	r3, r3
900293de:	2b07      	cmp	r3, #7
900293e0:	8103      	strh	r3, [r0, #8]
900293e2:	bf81      	itttt	hi
900293e4:	2300      	movhi	r3, #0
900293e6:	8143      	strhhi	r3, [r0, #10]
900293e8:	8183      	strhhi	r3, [r0, #12]
900293ea:	7383      	strbhi	r3, [r0, #14]
900293ec:	4770      	bx	lr
	...

900293f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
900293f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900293f4:	4698      	mov	r8, r3
900293f6:	8883      	ldrh	r3, [r0, #4]
900293f8:	4604      	mov	r4, r0
900293fa:	4617      	mov	r7, r2
900293fc:	f8ad 3006 	strh.w	r3, [sp, #6]
90029400:	eba8 0303 	sub.w	r3, r8, r3
90029404:	4a19      	ldr	r2, [pc, #100]	@ (9002946c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90029406:	460e      	mov	r6, r1
90029408:	b21b      	sxth	r3, r3
9002940a:	88c1      	ldrh	r1, [r0, #6]
9002940c:	9200      	str	r2, [sp, #0]
9002940e:	2000      	movs	r0, #0
90029410:	2b00      	cmp	r3, #0
90029412:	8aa2      	ldrh	r2, [r4, #20]
90029414:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90029418:	bfb8      	it	lt
9002941a:	425b      	neglt	r3, r3
9002941c:	f88d 0004 	strb.w	r0, [sp, #4]
90029420:	f8ad 1008 	strh.w	r1, [sp, #8]
90029424:	b21b      	sxth	r3, r3
90029426:	f8ad 800a 	strh.w	r8, [sp, #10]
9002942a:	f8ad 500c 	strh.w	r5, [sp, #12]
9002942e:	4293      	cmp	r3, r2
90029430:	dc07      	bgt.n	90029442 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90029432:	1a69      	subs	r1, r5, r1
90029434:	b209      	sxth	r1, r1
90029436:	2900      	cmp	r1, #0
90029438:	bfb8      	it	lt
9002943a:	4249      	neglt	r1, r1
9002943c:	b209      	sxth	r1, r1
9002943e:	428a      	cmp	r2, r1
90029440:	da10      	bge.n	90029464 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90029442:	6920      	ldr	r0, [r4, #16]
90029444:	4669      	mov	r1, sp
90029446:	eba8 0606 	sub.w	r6, r8, r6
9002944a:	1bef      	subs	r7, r5, r7
9002944c:	6803      	ldr	r3, [r0, #0]
9002944e:	685b      	ldr	r3, [r3, #4]
90029450:	4798      	blx	r3
90029452:	2300      	movs	r3, #0
90029454:	2001      	movs	r0, #1
90029456:	8166      	strh	r6, [r4, #10]
90029458:	8123      	strh	r3, [r4, #8]
9002945a:	81a7      	strh	r7, [r4, #12]
9002945c:	f8a4 8004 	strh.w	r8, [r4, #4]
90029460:	80e5      	strh	r5, [r4, #6]
90029462:	73a0      	strb	r0, [r4, #14]
90029464:	b004      	add	sp, #16
90029466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002946a:	bf00      	nop
9002946c:	9002e824 	.word	0x9002e824

90029470 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90029470:	b5f0      	push	{r4, r5, r6, r7, lr}
90029472:	461e      	mov	r6, r3
90029474:	1e4b      	subs	r3, r1, #1
90029476:	b085      	sub	sp, #20
90029478:	4604      	mov	r4, r0
9002947a:	2b01      	cmp	r3, #1
9002947c:	460d      	mov	r5, r1
9002947e:	4617      	mov	r7, r2
90029480:	d84b      	bhi.n	9002951a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90029482:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90029486:	1cd3      	adds	r3, r2, #3
90029488:	b29b      	uxth	r3, r3
9002948a:	2b06      	cmp	r3, #6
9002948c:	d916      	bls.n	900294bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9002948e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90029530 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90029492:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029496:	f8cd c004 	str.w	ip, [sp, #4]
9002949a:	f04f 0c00 	mov.w	ip, #0
9002949e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900294a2:	6900      	ldr	r0, [r0, #16]
900294a4:	f8ad 100c 	strh.w	r1, [sp, #12]
900294a8:	a901      	add	r1, sp, #4
900294aa:	f88d c008 	strb.w	ip, [sp, #8]
900294ae:	f8ad 200a 	strh.w	r2, [sp, #10]
900294b2:	f8ad 300e 	strh.w	r3, [sp, #14]
900294b6:	6803      	ldr	r3, [r0, #0]
900294b8:	689b      	ldr	r3, [r3, #8]
900294ba:	4798      	blx	r3
900294bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900294c0:	1cd3      	adds	r3, r2, #3
900294c2:	b29b      	uxth	r3, r3
900294c4:	2b06      	cmp	r3, #6
900294c6:	d916      	bls.n	900294f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900294c8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90029530 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900294cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900294d0:	f8cd c004 	str.w	ip, [sp, #4]
900294d4:	f04f 0c01 	mov.w	ip, #1
900294d8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900294dc:	6920      	ldr	r0, [r4, #16]
900294de:	f8ad 100c 	strh.w	r1, [sp, #12]
900294e2:	a901      	add	r1, sp, #4
900294e4:	f88d c008 	strb.w	ip, [sp, #8]
900294e8:	f8ad 200a 	strh.w	r2, [sp, #10]
900294ec:	f8ad 300e 	strh.w	r3, [sp, #14]
900294f0:	6803      	ldr	r3, [r0, #0]
900294f2:	689b      	ldr	r3, [r3, #8]
900294f4:	4798      	blx	r3
900294f6:	4b0d      	ldr	r3, [pc, #52]	@ (9002952c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
900294f8:	a901      	add	r1, sp, #4
900294fa:	6920      	ldr	r0, [r4, #16]
900294fc:	9301      	str	r3, [sp, #4]
900294fe:	2300      	movs	r3, #0
90029500:	f88d 5008 	strb.w	r5, [sp, #8]
90029504:	f8ad 700a 	strh.w	r7, [sp, #10]
90029508:	f8ad 600c 	strh.w	r6, [sp, #12]
9002950c:	f8ad 300e 	strh.w	r3, [sp, #14]
90029510:	6803      	ldr	r3, [r0, #0]
90029512:	681b      	ldr	r3, [r3, #0]
90029514:	4798      	blx	r3
90029516:	b005      	add	sp, #20
90029518:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002951a:	2900      	cmp	r1, #0
9002951c:	d1eb      	bne.n	900294f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002951e:	80a2      	strh	r2, [r4, #4]
90029520:	80c6      	strh	r6, [r0, #6]
90029522:	60a1      	str	r1, [r4, #8]
90029524:	81a1      	strh	r1, [r4, #12]
90029526:	73a1      	strb	r1, [r4, #14]
90029528:	e7e5      	b.n	900294f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002952a:	bf00      	nop
9002952c:	9002e810 	.word	0x9002e810
90029530:	9002e838 	.word	0x9002e838

90029534 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90029534:	10c9      	asrs	r1, r1, #3
90029536:	2900      	cmp	r1, #0
90029538:	bfb8      	it	lt
9002953a:	4249      	neglt	r1, r1
9002953c:	2801      	cmp	r0, #1
9002953e:	d108      	bne.n	90029552 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90029540:	f3c1 0008 	ubfx	r0, r1, #0, #9
90029544:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90029548:	4601      	mov	r1, r0
9002954a:	dd02      	ble.n	90029552 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002954c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90029550:	4770      	bx	lr
90029552:	29ff      	cmp	r1, #255	@ 0xff
90029554:	bfa8      	it	ge
90029556:	21ff      	movge	r1, #255	@ 0xff
90029558:	4608      	mov	r0, r1
9002955a:	4770      	bx	lr

9002955c <_ZN8touchgfx10Rasterizer6lineToEii>:
9002955c:	b410      	push	{r4}
9002955e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90029562:	429c      	cmp	r4, r3
90029564:	d803      	bhi.n	9002956e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90029566:	f85d 4b04 	ldr.w	r4, [sp], #4
9002956a:	f7ed b8cd 	b.w	90016708 <_ZN8touchgfx7Outline6lineToEii>
9002956e:	f85d 4b04 	ldr.w	r4, [sp], #4
90029572:	4770      	bx	lr

90029574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90029574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029578:	b08b      	sub	sp, #44	@ 0x2c
9002957a:	4606      	mov	r6, r0
9002957c:	468a      	mov	sl, r1
9002957e:	e9cd 2306 	strd	r2, r3, [sp, #24]
90029582:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90029586:	9308      	str	r3, [sp, #32]
90029588:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9002958c:	9309      	str	r3, [sp, #36]	@ 0x24
9002958e:	f7ed fa26 	bl	900169de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90029592:	68b5      	ldr	r5, [r6, #8]
90029594:	4604      	mov	r4, r0
90029596:	2d00      	cmp	r5, #0
90029598:	d044      	beq.n	90029624 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002959a:	6873      	ldr	r3, [r6, #4]
9002959c:	42ab      	cmp	r3, r5
9002959e:	d33d      	bcc.n	9002961c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
900295a0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900295a4:	f04f 0800 	mov.w	r8, #0
900295a8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
900295ac:	eb02 0b03 	add.w	fp, r2, r3
900295b0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
900295b4:	fb02 1203 	mla	r2, r2, r3, r1
900295b8:	9205      	str	r2, [sp, #20]
900295ba:	1e6a      	subs	r2, r5, #1
900295bc:	9204      	str	r2, [sp, #16]
900295be:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
900295c2:	f9b4 7000 	ldrsh.w	r7, [r4]
900295c6:	454b      	cmp	r3, r9
900295c8:	463a      	mov	r2, r7
900295ca:	d008      	beq.n	900295de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
900295cc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
900295d0:	eb03 0b09 	add.w	fp, r3, r9
900295d4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
900295d8:	fb03 1309 	mla	r3, r3, r9, r1
900295dc:	9305      	str	r3, [sp, #20]
900295de:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900295e2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900295e6:	4498      	add	r8, r3
900295e8:	9b04      	ldr	r3, [sp, #16]
900295ea:	3b01      	subs	r3, #1
900295ec:	9304      	str	r3, [sp, #16]
900295ee:	9b04      	ldr	r3, [sp, #16]
900295f0:	3301      	adds	r3, #1
900295f2:	d015      	beq.n	90029620 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
900295f4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
900295f8:	42bb      	cmp	r3, r7
900295fa:	d117      	bne.n	9002962c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
900295fc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90029600:	9b04      	ldr	r3, [sp, #16]
90029602:	4548      	cmp	r0, r9
90029604:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
90029608:	d17d      	bne.n	90029706 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002960a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002960e:	4401      	add	r1, r0
90029610:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90029614:	4480      	add	r8, r0
90029616:	e7e9      	b.n	900295ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90029618:	461f      	mov	r7, r3
9002961a:	e042      	b.n	900296a2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002961c:	2000      	movs	r0, #0
9002961e:	e002      	b.n	90029626 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90029620:	2900      	cmp	r1, #0
90029622:	d16d      	bne.n	90029700 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90029624:	2001      	movs	r0, #1
90029626:	b00b      	add	sp, #44	@ 0x2c
90029628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002962c:	b379      	cbz	r1, 9002968e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002962e:	2f00      	cmp	r7, #0
90029630:	db29      	blt.n	90029686 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029632:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90029636:	42bb      	cmp	r3, r7
90029638:	dd25      	ble.n	90029686 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002963a:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002963e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90029642:	f7ff ff77 	bl	90029534 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90029646:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029648:	fb10 f003 	smulbb	r0, r0, r3
9002964c:	b280      	uxth	r0, r0
9002964e:	1c41      	adds	r1, r0, #1
90029650:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90029654:	1209      	asrs	r1, r1, #8
90029656:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002965a:	d014      	beq.n	90029686 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002965c:	b2c9      	uxtb	r1, r1
9002965e:	9808      	ldr	r0, [sp, #32]
90029660:	b2ba      	uxth	r2, r7
90029662:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90029664:	9102      	str	r1, [sp, #8]
90029666:	2101      	movs	r1, #1
90029668:	4413      	add	r3, r2
9002966a:	4402      	add	r2, r0
9002966c:	9101      	str	r1, [sp, #4]
9002966e:	fa0f f18b 	sxth.w	r1, fp
90029672:	f8da 0000 	ldr.w	r0, [sl]
90029676:	b21b      	sxth	r3, r3
90029678:	9100      	str	r1, [sp, #0]
9002967a:	b212      	sxth	r2, r2
9002967c:	6941      	ldr	r1, [r0, #20]
9002967e:	4650      	mov	r0, sl
90029680:	460d      	mov	r5, r1
90029682:	9905      	ldr	r1, [sp, #20]
90029684:	47a8      	blx	r5
90029686:	9b04      	ldr	r3, [sp, #16]
90029688:	1c7a      	adds	r2, r7, #1
9002968a:	3301      	adds	r3, #1
9002968c:	d0ca      	beq.n	90029624 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002968e:	f9b4 7000 	ldrsh.w	r7, [r4]
90029692:	1abb      	subs	r3, r7, r2
90029694:	2b00      	cmp	r3, #0
90029696:	dd31      	ble.n	900296fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029698:	2a00      	cmp	r2, #0
9002969a:	dabd      	bge.n	90029618 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002969c:	2f00      	cmp	r7, #0
9002969e:	dd2d      	ble.n	900296fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900296a0:	2200      	movs	r2, #0
900296a2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
900296a6:	19d1      	adds	r1, r2, r7
900296a8:	4299      	cmp	r1, r3
900296aa:	db02      	blt.n	900296b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
900296ac:	1a9f      	subs	r7, r3, r2
900296ae:	2f00      	cmp	r7, #0
900296b0:	dd24      	ble.n	900296fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900296b2:	ea4f 1188 	mov.w	r1, r8, lsl #6
900296b6:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
900296ba:	f7ff ff3b 	bl	90029534 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900296be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900296c0:	fb10 f003 	smulbb	r0, r0, r3
900296c4:	b280      	uxth	r0, r0
900296c6:	1c41      	adds	r1, r0, #1
900296c8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900296cc:	1209      	asrs	r1, r1, #8
900296ce:	f011 0fff 	tst.w	r1, #255	@ 0xff
900296d2:	d013      	beq.n	900296fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900296d4:	b292      	uxth	r2, r2
900296d6:	9808      	ldr	r0, [sp, #32]
900296d8:	b2c9      	uxtb	r1, r1
900296da:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
900296dc:	b23f      	sxth	r7, r7
900296de:	4413      	add	r3, r2
900296e0:	9102      	str	r1, [sp, #8]
900296e2:	4402      	add	r2, r0
900296e4:	fa0f f18b 	sxth.w	r1, fp
900296e8:	f8da 0000 	ldr.w	r0, [sl]
900296ec:	b21b      	sxth	r3, r3
900296ee:	9100      	str	r1, [sp, #0]
900296f0:	b212      	sxth	r2, r2
900296f2:	9701      	str	r7, [sp, #4]
900296f4:	9905      	ldr	r1, [sp, #20]
900296f6:	6947      	ldr	r7, [r0, #20]
900296f8:	4650      	mov	r0, sl
900296fa:	47b8      	blx	r7
900296fc:	464b      	mov	r3, r9
900296fe:	e75e      	b.n	900295be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90029700:	2f00      	cmp	r7, #0
90029702:	da96      	bge.n	90029632 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90029704:	e78e      	b.n	90029624 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90029706:	2900      	cmp	r1, #0
90029708:	d0f8      	beq.n	900296fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002970a:	e790      	b.n	9002962e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002970c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002970c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029710:	461e      	mov	r6, r3
90029712:	4b36      	ldr	r3, [pc, #216]	@ (900297ec <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90029714:	2500      	movs	r5, #0
90029716:	f100 0814 	add.w	r8, r0, #20
9002971a:	4604      	mov	r4, r0
9002971c:	4617      	mov	r7, r2
9002971e:	e9c0 3100 	strd	r3, r1, [r0]
90029722:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90029726:	8185      	strh	r5, [r0, #12]
90029728:	8103      	strh	r3, [r0, #8]
9002972a:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002972e:	81c5      	strh	r5, [r0, #14]
90029730:	7283      	strb	r3, [r0, #10]
90029732:	8205      	strh	r5, [r0, #16]
90029734:	8245      	strh	r5, [r0, #18]
90029736:	4640      	mov	r0, r8
90029738:	f7ec fb2c 	bl	90015d94 <_ZN8touchgfx7OutlineC1Ev>
9002973c:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90029740:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90029744:	466b      	mov	r3, sp
90029746:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002974a:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
9002974e:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
90029752:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
90029756:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
9002975a:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
9002975e:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
90029762:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
90029766:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
9002976a:	6830      	ldr	r0, [r6, #0]
9002976c:	6871      	ldr	r1, [r6, #4]
9002976e:	8872      	ldrh	r2, [r6, #2]
90029770:	8835      	ldrh	r5, [r6, #0]
90029772:	c303      	stmia	r3!, {r0, r1}
90029774:	887b      	ldrh	r3, [r7, #2]
90029776:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
9002977a:	4413      	add	r3, r2
9002977c:	883a      	ldrh	r2, [r7, #0]
9002977e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90029782:	442a      	add	r2, r5
90029784:	81e3      	strh	r3, [r4, #14]
90029786:	8220      	strh	r0, [r4, #16]
90029788:	4668      	mov	r0, sp
9002978a:	81a2      	strh	r2, [r4, #12]
9002978c:	8261      	strh	r1, [r4, #18]
9002978e:	4639      	mov	r1, r7
90029790:	f7ee fcec 	bl	9001816c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90029794:	f104 000c 	add.w	r0, r4, #12
90029798:	f7ee fcc0 	bl	9001811c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002979c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900297a0:	f8bd 2000 	ldrh.w	r2, [sp]
900297a4:	4640      	mov	r0, r8
900297a6:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
900297aa:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
900297ae:	f7ec fad5 	bl	90015d5c <_ZN8touchgfx7Outline5resetEv>
900297b2:	f9bd 3000 	ldrsh.w	r3, [sp]
900297b6:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
900297ba:	4620      	mov	r0, r4
900297bc:	015b      	lsls	r3, r3, #5
900297be:	64e3      	str	r3, [r4, #76]	@ 0x4c
900297c0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900297c4:	015b      	lsls	r3, r3, #5
900297c6:	6523      	str	r3, [r4, #80]	@ 0x50
900297c8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900297cc:	015b      	lsls	r3, r3, #5
900297ce:	6563      	str	r3, [r4, #84]	@ 0x54
900297d0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900297d4:	015b      	lsls	r3, r3, #5
900297d6:	65a3      	str	r3, [r4, #88]	@ 0x58
900297d8:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
900297dc:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
900297e0:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
900297e4:	b002      	add	sp, #8
900297e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900297ea:	bf00      	nop
900297ec:	9002eb5c 	.word	0x9002eb5c

900297f0 <_ZN8touchgfx6Canvas5closeEv>:
900297f0:	b538      	push	{r3, r4, r5, lr}
900297f2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
900297f6:	4604      	mov	r4, r0
900297f8:	b193      	cbz	r3, 90029820 <_ZN8touchgfx6Canvas5closeEv+0x30>
900297fa:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
900297fe:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90029802:	4213      	tst	r3, r2
90029804:	d10c      	bne.n	90029820 <_ZN8touchgfx6Canvas5closeEv+0x30>
90029806:	f100 0514 	add.w	r5, r0, #20
9002980a:	b123      	cbz	r3, 90029816 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002980c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90029810:	4628      	mov	r0, r5
90029812:	f7ff fea3 	bl	9002955c <_ZN8touchgfx10Rasterizer6lineToEii>
90029816:	4628      	mov	r0, r5
90029818:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002981c:	f7ff fe9e 	bl	9002955c <_ZN8touchgfx10Rasterizer6lineToEii>
90029820:	2300      	movs	r3, #0
90029822:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029826:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002982a:	4298      	cmp	r0, r3
9002982c:	bf34      	ite	cc
9002982e:	2000      	movcc	r0, #0
90029830:	2001      	movcs	r0, #1
90029832:	bd38      	pop	{r3, r4, r5, pc}

90029834 <_ZN8touchgfx6Canvas6renderEh>:
90029834:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029838:	7a85      	ldrb	r5, [r0, #10]
9002983a:	4604      	mov	r4, r0
9002983c:	4369      	muls	r1, r5
9002983e:	1c4d      	adds	r5, r1, #1
90029840:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90029844:	122d      	asrs	r5, r5, #8
90029846:	f000 8098 	beq.w	9002997a <_ZN8touchgfx6Canvas6renderEh+0x146>
9002984a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
9002984e:	2b00      	cmp	r3, #0
90029850:	f000 8093 	beq.w	9002997a <_ZN8touchgfx6Canvas6renderEh+0x146>
90029854:	f7ff ffcc 	bl	900297f0 <_ZN8touchgfx6Canvas5closeEv>
90029858:	4607      	mov	r7, r0
9002985a:	2800      	cmp	r0, #0
9002985c:	d045      	beq.n	900298ea <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002985e:	6860      	ldr	r0, [r4, #4]
90029860:	4e47      	ldr	r6, [pc, #284]	@ (90029980 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90029862:	6803      	ldr	r3, [r0, #0]
90029864:	6837      	ldr	r7, [r6, #0]
90029866:	689b      	ldr	r3, [r3, #8]
90029868:	4798      	blx	r3
9002986a:	4601      	mov	r1, r0
9002986c:	4638      	mov	r0, r7
9002986e:	f7e9 fbd5 	bl	9001301c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90029872:	4607      	mov	r7, r0
90029874:	f7e8 ff96 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90029878:	6803      	ldr	r3, [r0, #0]
9002987a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002987c:	4798      	blx	r3
9002987e:	4680      	mov	r8, r0
90029880:	f7e8 ff90 	bl	900127a4 <_ZN8touchgfx3HAL3lcdEv>
90029884:	6803      	ldr	r3, [r0, #0]
90029886:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90029888:	4798      	blx	r3
9002988a:	280b      	cmp	r0, #11
9002988c:	d85a      	bhi.n	90029944 <_ZN8touchgfx6Canvas6renderEh+0x110>
9002988e:	e8df f000 	tbb	[pc, r0]
90029892:	5b50      	.short	0x5b50
90029894:	3059066b 	.word	0x3059066b
90029898:	64646440 	.word	0x64646440
9002989c:	6464      	.short	0x6464
9002989e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900298a2:	2208      	movs	r2, #8
900298a4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900298a8:	fb91 f2f2 	sdiv	r2, r1, r2
900298ac:	fb08 2303 	mla	r3, r8, r3, r2
900298b0:	441f      	add	r7, r3
900298b2:	424b      	negs	r3, r1
900298b4:	f001 0107 	and.w	r1, r1, #7
900298b8:	f003 0307 	and.w	r3, r3, #7
900298bc:	bf58      	it	pl
900298be:	4259      	negpl	r1, r3
900298c0:	b2c9      	uxtb	r1, r1
900298c2:	b2ed      	uxtb	r5, r5
900298c4:	463a      	mov	r2, r7
900298c6:	fa0f f388 	sxth.w	r3, r8
900298ca:	f104 0014 	add.w	r0, r4, #20
900298ce:	e9cd 1500 	strd	r1, r5, [sp]
900298d2:	6861      	ldr	r1, [r4, #4]
900298d4:	f7ff fe4e 	bl	90029574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
900298d8:	4607      	mov	r7, r0
900298da:	6860      	ldr	r0, [r4, #4]
900298dc:	6803      	ldr	r3, [r0, #0]
900298de:	691b      	ldr	r3, [r3, #16]
900298e0:	4798      	blx	r3
900298e2:	6830      	ldr	r0, [r6, #0]
900298e4:	6803      	ldr	r3, [r0, #0]
900298e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900298e8:	4798      	blx	r3
900298ea:	4638      	mov	r0, r7
900298ec:	b002      	add	sp, #8
900298ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900298f2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900298f6:	2204      	movs	r2, #4
900298f8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900298fc:	fb91 f2f2 	sdiv	r2, r1, r2
90029900:	fb08 2303 	mla	r3, r8, r3, r2
90029904:	441f      	add	r7, r3
90029906:	424b      	negs	r3, r1
90029908:	f001 0103 	and.w	r1, r1, #3
9002990c:	f003 0303 	and.w	r3, r3, #3
90029910:	e7d4      	b.n	900298bc <_ZN8touchgfx6Canvas6renderEh+0x88>
90029912:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029916:	2202      	movs	r2, #2
90029918:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002991c:	2900      	cmp	r1, #0
9002991e:	fb91 f2f2 	sdiv	r2, r1, r2
90029922:	f001 0101 	and.w	r1, r1, #1
90029926:	fb08 2303 	mla	r3, r8, r3, r2
9002992a:	bfb8      	it	lt
9002992c:	4249      	neglt	r1, r1
9002992e:	441f      	add	r7, r3
90029930:	e7c6      	b.n	900298c0 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90029932:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029936:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002993a:	fb08 f303 	mul.w	r3, r8, r3
9002993e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90029942:	441f      	add	r7, r3
90029944:	2100      	movs	r1, #0
90029946:	e7bc      	b.n	900298c2 <_ZN8touchgfx6Canvas6renderEh+0x8e>
90029948:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002994c:	2103      	movs	r1, #3
9002994e:	fb08 f203 	mul.w	r2, r8, r3
90029952:	89a3      	ldrh	r3, [r4, #12]
90029954:	fb13 2301 	smlabb	r3, r3, r1, r2
90029958:	e7f3      	b.n	90029942 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002995a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002995e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029962:	fb08 2303 	mla	r3, r8, r3, r2
90029966:	e7ec      	b.n	90029942 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90029968:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002996c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029970:	fb08 f303 	mul.w	r3, r8, r3
90029974:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90029978:	e7e3      	b.n	90029942 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002997a:	2701      	movs	r7, #1
9002997c:	e7b5      	b.n	900298ea <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002997e:	bf00      	nop
90029980:	2402340c 	.word	0x2402340c

90029984 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90029984:	4b06      	ldr	r3, [pc, #24]	@ (900299a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90029986:	b510      	push	{r4, lr}
90029988:	781b      	ldrb	r3, [r3, #0]
9002998a:	2b01      	cmp	r3, #1
9002998c:	d107      	bne.n	9002999e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002998e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90029992:	680b      	ldr	r3, [r1, #0]
90029994:	6814      	ldr	r4, [r2, #0]
90029996:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002999a:	6013      	str	r3, [r2, #0]
9002999c:	600c      	str	r4, [r1, #0]
9002999e:	bd10      	pop	{r4, pc}
900299a0:	24023404 	.word	0x24023404

900299a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900299a4:	b513      	push	{r0, r1, r4, lr}
900299a6:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
900299aa:	4604      	mov	r4, r0
900299ac:	e9cd 2100 	strd	r2, r1, [sp]
900299b0:	b9a3      	cbnz	r3, 900299dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
900299b2:	466a      	mov	r2, sp
900299b4:	a901      	add	r1, sp, #4
900299b6:	4620      	mov	r0, r4
900299b8:	f7ff ffe4 	bl	90029984 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900299bc:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900299be:	9901      	ldr	r1, [sp, #4]
900299c0:	9a00      	ldr	r2, [sp, #0]
900299c2:	1ac9      	subs	r1, r1, r3
900299c4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900299c6:	1ad2      	subs	r2, r2, r3
900299c8:	9101      	str	r1, [sp, #4]
900299ca:	2a00      	cmp	r2, #0
900299cc:	9200      	str	r2, [sp, #0]
900299ce:	da0b      	bge.n	900299e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
900299d0:	2301      	movs	r3, #1
900299d2:	2900      	cmp	r1, #0
900299d4:	da0e      	bge.n	900299f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
900299d6:	f043 0304 	orr.w	r3, r3, #4
900299da:	e013      	b.n	90029a04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
900299dc:	f7ff ff08 	bl	900297f0 <_ZN8touchgfx6Canvas5closeEv>
900299e0:	2800      	cmp	r0, #0
900299e2:	d1e6      	bne.n	900299b2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
900299e4:	b002      	add	sp, #8
900299e6:	bd10      	pop	{r4, pc}
900299e8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900299ea:	429a      	cmp	r2, r3
900299ec:	bfac      	ite	ge
900299ee:	2302      	movge	r3, #2
900299f0:	2300      	movlt	r3, #0
900299f2:	e7ee      	b.n	900299d2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
900299f4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
900299f6:	4281      	cmp	r1, r0
900299f8:	bfac      	ite	ge
900299fa:	2008      	movge	r0, #8
900299fc:	2000      	movlt	r0, #0
900299fe:	4318      	orrs	r0, r3
90029a00:	b2c3      	uxtb	r3, r0
90029a02:	b158      	cbz	r0, 90029a1c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029a04:	2200      	movs	r2, #0
90029a06:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
90029a0a:	9901      	ldr	r1, [sp, #4]
90029a0c:	9a00      	ldr	r2, [sp, #0]
90029a0e:	66e1      	str	r1, [r4, #108]	@ 0x6c
90029a10:	6722      	str	r2, [r4, #112]	@ 0x70
90029a12:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90029a16:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
90029a1a:	e7e3      	b.n	900299e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90029a1c:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029a20:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029a24:	4298      	cmp	r0, r3
90029a26:	d803      	bhi.n	90029a30 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90029a28:	f104 0014 	add.w	r0, r4, #20
90029a2c:	f7ec fe86 	bl	9001673c <_ZN8touchgfx7Outline6moveToEii>
90029a30:	2301      	movs	r3, #1
90029a32:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029a36:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90029a3a:	2300      	movs	r3, #0
90029a3c:	e7e5      	b.n	90029a0a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90029a3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029a40:	ab02      	add	r3, sp, #8
90029a42:	4604      	mov	r4, r0
90029a44:	9101      	str	r1, [sp, #4]
90029a46:	a901      	add	r1, sp, #4
90029a48:	f843 2d08 	str.w	r2, [r3, #-8]!
90029a4c:	461a      	mov	r2, r3
90029a4e:	f7ff ff99 	bl	90029984 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029a52:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90029a54:	9901      	ldr	r1, [sp, #4]
90029a56:	9a00      	ldr	r2, [sp, #0]
90029a58:	1ac9      	subs	r1, r1, r3
90029a5a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90029a5c:	1ad2      	subs	r2, r2, r3
90029a5e:	9101      	str	r1, [sp, #4]
90029a60:	2a00      	cmp	r2, #0
90029a62:	9200      	str	r2, [sp, #0]
90029a64:	db1c      	blt.n	90029aa0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90029a66:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90029a68:	429a      	cmp	r2, r3
90029a6a:	bfac      	ite	ge
90029a6c:	2002      	movge	r0, #2
90029a6e:	2000      	movlt	r0, #0
90029a70:	2900      	cmp	r1, #0
90029a72:	db17      	blt.n	90029aa4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90029a74:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90029a76:	4299      	cmp	r1, r3
90029a78:	bfac      	ite	ge
90029a7a:	2308      	movge	r3, #8
90029a7c:	2300      	movlt	r3, #0
90029a7e:	4303      	orrs	r3, r0
90029a80:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90029a84:	b2dd      	uxtb	r5, r3
90029a86:	b978      	cbnz	r0, 90029aa8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90029a88:	f104 0014 	add.w	r0, r4, #20
90029a8c:	f7ff fd66 	bl	9002955c <_ZN8touchgfx10Rasterizer6lineToEii>
90029a90:	9b01      	ldr	r3, [sp, #4]
90029a92:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90029a96:	6623      	str	r3, [r4, #96]	@ 0x60
90029a98:	9b00      	ldr	r3, [sp, #0]
90029a9a:	6663      	str	r3, [r4, #100]	@ 0x64
90029a9c:	b002      	add	sp, #8
90029a9e:	bd70      	pop	{r4, r5, r6, pc}
90029aa0:	2001      	movs	r0, #1
90029aa2:	e7e5      	b.n	90029a70 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90029aa4:	2304      	movs	r3, #4
90029aa6:	e7ea      	b.n	90029a7e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90029aa8:	b113      	cbz	r3, 90029ab0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90029aaa:	ea10 0305 	ands.w	r3, r0, r5
90029aae:	d11c      	bne.n	90029aea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90029ab0:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90029ab4:	f104 0614 	add.w	r6, r4, #20
90029ab8:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
90029abc:	b98b      	cbnz	r3, 90029ae2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90029abe:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029ac2:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029ac6:	4298      	cmp	r0, r3
90029ac8:	d802      	bhi.n	90029ad0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90029aca:	4630      	mov	r0, r6
90029acc:	f7ec fe36 	bl	9001673c <_ZN8touchgfx7Outline6moveToEii>
90029ad0:	2301      	movs	r3, #1
90029ad2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029ad6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90029ada:	4630      	mov	r0, r6
90029adc:	e9dd 2100 	ldrd	r2, r1, [sp]
90029ae0:	e7d4      	b.n	90029a8c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90029ae2:	4630      	mov	r0, r6
90029ae4:	f7ff fd3a 	bl	9002955c <_ZN8touchgfx10Rasterizer6lineToEii>
90029ae8:	e7f7      	b.n	90029ada <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90029aea:	461d      	mov	r5, r3
90029aec:	e7d0      	b.n	90029a90 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90029af0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90029af0:	b538      	push	{r3, r4, r5, lr}
90029af2:	ed2d 8b10 	vpush	{d8-d15}
90029af6:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
90029afa:	4605      	mov	r5, r0
90029afc:	eeb0 ca40 	vmov.f32	s24, s0
90029b00:	460c      	mov	r4, r1
90029b02:	eef0 ca60 	vmov.f32	s25, s1
90029b06:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90029c64 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
90029b0a:	eeb0 da41 	vmov.f32	s26, s2
90029b0e:	eef0 da61 	vmov.f32	s27, s3
90029b12:	eeb0 ea42 	vmov.f32	s28, s4
90029b16:	eef0 ea62 	vmov.f32	s29, s5
90029b1a:	eef0 aa6b 	vmov.f32	s21, s23
90029b1e:	2c08      	cmp	r4, #8
90029b20:	d86e      	bhi.n	90029c00 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90029b22:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90029b26:	ee7d 7aee 	vsub.f32	s15, s27, s29
90029b2a:	ee3d 6a4e 	vsub.f32	s12, s26, s28
90029b2e:	ee3e 7aec 	vsub.f32	s14, s29, s25
90029b32:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90029b36:	ee3c fa0d 	vadd.f32	s30, s24, s26
90029b3a:	ee7c faad 	vadd.f32	s31, s25, s27
90029b3e:	eee6 7a07 	vfma.f32	s15, s12, s14
90029b42:	ee7d 9a0e 	vadd.f32	s19, s26, s28
90029b46:	ee3d aaae 	vadd.f32	s20, s27, s29
90029b4a:	ee2f fa2b 	vmul.f32	s30, s30, s23
90029b4e:	ee6f faab 	vmul.f32	s31, s31, s23
90029b52:	ee69 9aab 	vmul.f32	s19, s19, s23
90029b56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90029b5a:	ee2a aa2b 	vmul.f32	s20, s20, s23
90029b5e:	ee7f 8a29 	vadd.f32	s17, s30, s19
90029b62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b66:	ee3f 9a8a 	vadd.f32	s18, s31, s20
90029b6a:	ee68 8aab 	vmul.f32	s17, s17, s23
90029b6e:	bf48      	it	mi
90029b70:	eef1 7a67 	vnegmi.f32	s15, s15
90029b74:	ee29 9a2b 	vmul.f32	s18, s18, s23
90029b78:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
90029b7c:	eef4 7acb 	vcmpe.f32	s15, s22
90029b80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b84:	dd3f      	ble.n	90029c06 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90029b86:	ee27 7a07 	vmul.f32	s14, s14, s14
90029b8a:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029b8e:	eea6 7aa6 	vfma.f32	s14, s13, s13
90029b92:	ee27 7a06 	vmul.f32	s14, s14, s12
90029b96:	eef4 7ac7 	vcmpe.f32	s15, s14
90029b9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b9e:	d847      	bhi.n	90029c30 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029ba0:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90029ba4:	ee3e 0aed 	vsub.f32	s0, s29, s27
90029ba8:	f000 fa57 	bl	9002a05a <atan2f>
90029bac:	eeb0 8a40 	vmov.f32	s16, s0
90029bb0:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90029bb4:	ee3d 0aec 	vsub.f32	s0, s27, s25
90029bb8:	f000 fa4f 	bl	9002a05a <atan2f>
90029bbc:	ee38 0a40 	vsub.f32	s0, s16, s0
90029bc0:	eddf 7a29 	vldr	s15, [pc, #164]	@ 90029c68 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90029bc4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029bc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029bcc:	bf48      	it	mi
90029bce:	eeb1 0a40 	vnegmi.f32	s0, s0
90029bd2:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029bd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029bda:	bfa4      	itt	ge
90029bdc:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90029c6c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90029be0:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029be4:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90029c70 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90029be8:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029bf0:	d51e      	bpl.n	90029c30 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029bf2:	eef0 0a49 	vmov.f32	s1, s18
90029bf6:	4628      	mov	r0, r5
90029bf8:	eeb0 0a68 	vmov.f32	s0, s17
90029bfc:	f7ea fb82 	bl	90014304 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029c00:	ecbd 8b10 	vpop	{d8-d15}
90029c04:	bd38      	pop	{r3, r4, r5, pc}
90029c06:	ee7c 7a0e 	vadd.f32	s15, s24, s28
90029c0a:	eeb0 7a68 	vmov.f32	s14, s17
90029c0e:	eef0 6a49 	vmov.f32	s13, s18
90029c12:	eea7 7aea 	vfms.f32	s14, s15, s21
90029c16:	ee7c 7aae 	vadd.f32	s15, s25, s29
90029c1a:	eee7 6aea 	vfms.f32	s13, s15, s21
90029c1e:	ee66 7aa6 	vmul.f32	s15, s13, s13
90029c22:	eee7 7a07 	vfma.f32	s15, s14, s14
90029c26:	eef4 7ac6 	vcmpe.f32	s15, s12
90029c2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029c2e:	d9e0      	bls.n	90029bf2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90029c30:	3401      	adds	r4, #1
90029c32:	eef0 0a6c 	vmov.f32	s1, s25
90029c36:	eeb0 0a4c 	vmov.f32	s0, s24
90029c3a:	4628      	mov	r0, r5
90029c3c:	4621      	mov	r1, r4
90029c3e:	eef0 2a49 	vmov.f32	s5, s18
90029c42:	eeb0 2a68 	vmov.f32	s4, s17
90029c46:	eef0 1a6f 	vmov.f32	s3, s31
90029c4a:	eeb0 1a4f 	vmov.f32	s2, s30
90029c4e:	f7ff ff4f 	bl	90029af0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90029c52:	eef0 da4a 	vmov.f32	s27, s20
90029c56:	eeb0 da69 	vmov.f32	s26, s19
90029c5a:	eef0 ca49 	vmov.f32	s25, s18
90029c5e:	eeb0 ca68 	vmov.f32	s24, s17
90029c62:	e75c      	b.n	90029b1e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90029c64:	2edbe6ff 	.word	0x2edbe6ff
90029c68:	40490fdb 	.word	0x40490fdb
90029c6c:	40c90fdb 	.word	0x40c90fdb
90029c70:	3dcccccd 	.word	0x3dcccccd

90029c74 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90029c74:	b530      	push	{r4, r5, lr}
90029c76:	ed2d 8b10 	vpush	{d8-d15}
90029c7a:	eef0 8a40 	vmov.f32	s17, s0
90029c7e:	b085      	sub	sp, #20
90029c80:	eef0 9a60 	vmov.f32	s19, s1
90029c84:	4604      	mov	r4, r0
90029c86:	eef0 fa41 	vmov.f32	s31, s2
90029c8a:	460d      	mov	r5, r1
90029c8c:	eeb0 fa61 	vmov.f32	s30, s3
90029c90:	eef0 ba42 	vmov.f32	s23, s4
90029c94:	eeb0 ca62 	vmov.f32	s24, s5
90029c98:	eef0 aa43 	vmov.f32	s21, s6
90029c9c:	eeb0 ba63 	vmov.f32	s22, s7
90029ca0:	2d08      	cmp	r5, #8
90029ca2:	f200 8113 	bhi.w	90029ecc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90029ca6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90029caa:	ee3b 6aaa 	vadd.f32	s12, s23, s21
90029cae:	ee7f 6aab 	vadd.f32	s13, s31, s23
90029cb2:	ee38 daaf 	vadd.f32	s26, s17, s31
90029cb6:	ee26 6a27 	vmul.f32	s12, s12, s15
90029cba:	ee7c ca0b 	vadd.f32	s25, s24, s22
90029cbe:	ee2d da27 	vmul.f32	s26, s26, s15
90029cc2:	ed8d 6a01 	vstr	s12, [sp, #4]
90029cc6:	eea6 6aa7 	vfma.f32	s12, s13, s15
90029cca:	ee6c caa7 	vmul.f32	s25, s25, s15
90029cce:	eeb0 ea4d 	vmov.f32	s28, s26
90029cd2:	ee79 da8f 	vadd.f32	s27, s19, s30
90029cd6:	ee3f 7a0c 	vadd.f32	s14, s30, s24
90029cda:	eea6 eaa7 	vfma.f32	s28, s13, s15
90029cde:	ee66 6a27 	vmul.f32	s13, s12, s15
90029ce2:	ee6d daa7 	vmul.f32	s27, s27, s15
90029ce6:	edcd 6a03 	vstr	s13, [sp, #12]
90029cea:	eef0 6a6c 	vmov.f32	s13, s25
90029cee:	eef0 ea6d 	vmov.f32	s29, s27
90029cf2:	ee2e ea27 	vmul.f32	s28, s28, s15
90029cf6:	eee7 6a27 	vfma.f32	s13, s14, s15
90029cfa:	eee7 ea27 	vfma.f32	s29, s14, s15
90029cfe:	ee26 7aa7 	vmul.f32	s14, s13, s15
90029d02:	ee6e eaa7 	vmul.f32	s29, s29, s15
90029d06:	eef0 6a67 	vmov.f32	s13, s15
90029d0a:	ed8d 7a02 	vstr	s14, [sp, #8]
90029d0e:	ed9d 7a03 	vldr	s14, [sp, #12]
90029d12:	ee3e 9a07 	vadd.f32	s18, s28, s14
90029d16:	ed9d 7a02 	vldr	s14, [sp, #8]
90029d1a:	ee3e aa87 	vadd.f32	s20, s29, s14
90029d1e:	ee29 9a27 	vmul.f32	s18, s18, s15
90029d22:	ee2a aa27 	vmul.f32	s20, s20, s15
90029d26:	2d00      	cmp	r5, #0
90029d28:	f000 810b 	beq.w	90029f42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029d2c:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90029d30:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90029f88 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029d34:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90029d38:	ee7b 7a69 	vsub.f32	s15, s22, s19
90029d3c:	ee3f 6aea 	vsub.f32	s12, s31, s21
90029d40:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90029d44:	ee3b 5aea 	vsub.f32	s10, s23, s21
90029d48:	eea6 7a27 	vfma.f32	s14, s12, s15
90029d4c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90029d50:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90029d54:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90029d58:	eea5 6a27 	vfma.f32	s12, s10, s15
90029d5c:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90029d60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d64:	bf48      	it	mi
90029d66:	eeb1 7a47 	vnegmi.f32	s14, s14
90029d6a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
90029d6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d72:	eeb4 7ae4 	vcmpe.f32	s14, s9
90029d76:	bf48      	it	mi
90029d78:	eeb1 6a46 	vnegmi.f32	s12, s12
90029d7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d80:	f340 80a8 	ble.w	90029ed4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90029d84:	eeb4 6ae4 	vcmpe.f32	s12, s9
90029d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029d8c:	dd5a      	ble.n	90029e44 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
90029d8e:	ee65 5aa5 	vmul.f32	s11, s11, s11
90029d92:	ee37 7a06 	vadd.f32	s14, s14, s12
90029d96:	eee7 5aa7 	vfma.f32	s11, s15, s15
90029d9a:	ee27 7a07 	vmul.f32	s14, s14, s14
90029d9e:	ee65 7a85 	vmul.f32	s15, s11, s10
90029da2:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029da6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029daa:	f200 80ca 	bhi.w	90029f42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029dae:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029db2:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029db6:	f000 f950 	bl	9002a05a <atan2f>
90029dba:	eeb0 8a40 	vmov.f32	s16, s0
90029dbe:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029dc2:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029dc6:	f000 f948 	bl	9002a05a <atan2f>
90029dca:	ee38 fa40 	vsub.f32	s30, s16, s0
90029dce:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029dd2:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029dd6:	eeb5 fac0 	vcmpe.f32	s30, #0.0
90029dda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029dde:	bf48      	it	mi
90029de0:	eeb1 fa4f 	vnegmi.f32	s30, s30
90029de4:	f000 f939 	bl	9002a05a <atan2f>
90029de8:	ee30 0a48 	vsub.f32	s0, s0, s16
90029dec:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90029f8c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029df0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029df4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029df8:	eeb4 fae7 	vcmpe.f32	s30, s15
90029dfc:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90029f8c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029e00:	bf48      	it	mi
90029e02:	eeb1 0a40 	vnegmi.f32	s0, s0
90029e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029e0a:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029e0e:	eddf 7a60 	vldr	s15, [pc, #384]	@ 90029f90 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029e12:	bfa4      	itt	ge
90029e14:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90029f94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029e18:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90029e1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029e20:	bfa4      	itt	ge
90029e22:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90029f94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029e26:	ee37 0a40 	vsubge.f32	s0, s14, s0
90029e2a:	ee3f 0a00 	vadd.f32	s0, s30, s0
90029e2e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029e32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029e36:	f140 8084 	bpl.w	90029f42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029e3a:	eef0 0a4a 	vmov.f32	s1, s20
90029e3e:	eeb0 0a49 	vmov.f32	s0, s18
90029e42:	e040      	b.n	90029ec6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90029e44:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029e48:	ee27 7a07 	vmul.f32	s14, s14, s14
90029e4c:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029e50:	ee67 7a85 	vmul.f32	s15, s15, s10
90029e54:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029e58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029e5c:	d871      	bhi.n	90029f42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029e5e:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029e62:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029e66:	f000 f8f8 	bl	9002a05a <atan2f>
90029e6a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029e6e:	eeb0 8a40 	vmov.f32	s16, s0
90029e72:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029e76:	f000 f8f0 	bl	9002a05a <atan2f>
90029e7a:	ee38 0a40 	vsub.f32	s0, s16, s0
90029e7e:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90029f8c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029e82:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029e86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029e8a:	bf48      	it	mi
90029e8c:	eeb1 0a40 	vnegmi.f32	s0, s0
90029e90:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029e94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029e98:	bfa4      	itt	ge
90029e9a:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90029f94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029e9e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029ea2:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90029f90 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029ea6:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029eaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029eae:	d548      	bpl.n	90029f42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029eb0:	eef0 0a4f 	vmov.f32	s1, s30
90029eb4:	4620      	mov	r0, r4
90029eb6:	eeb0 0a6f 	vmov.f32	s0, s31
90029eba:	f7ea fa23 	bl	90014304 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029ebe:	eef0 0a4c 	vmov.f32	s1, s24
90029ec2:	eeb0 0a6b 	vmov.f32	s0, s23
90029ec6:	4620      	mov	r0, r4
90029ec8:	f7ea fa1c 	bl	90014304 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029ecc:	b005      	add	sp, #20
90029ece:	ecbd 8b10 	vpop	{d8-d15}
90029ed2:	bd30      	pop	{r4, r5, pc}
90029ed4:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90029f88 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029ed8:	eeb4 6ac7 	vcmpe.f32	s12, s14
90029edc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029ee0:	dd19      	ble.n	90029f16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90029ee2:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029ee6:	ee26 7a06 	vmul.f32	s14, s12, s12
90029eea:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029eee:	ee67 7a85 	vmul.f32	s15, s15, s10
90029ef2:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029ef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029efa:	d822      	bhi.n	90029f42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029efc:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029f00:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029f04:	f000 f8a9 	bl	9002a05a <atan2f>
90029f08:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029f0c:	eeb0 8a40 	vmov.f32	s16, s0
90029f10:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029f14:	e7af      	b.n	90029e76 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90029f16:	ee78 7aaa 	vadd.f32	s15, s17, s21
90029f1a:	eeb0 7a49 	vmov.f32	s14, s18
90029f1e:	eeb0 6a4a 	vmov.f32	s12, s20
90029f22:	eea7 7ae6 	vfms.f32	s14, s15, s13
90029f26:	ee79 7a8b 	vadd.f32	s15, s19, s22
90029f2a:	eea7 6ae6 	vfms.f32	s12, s15, s13
90029f2e:	ee66 7a06 	vmul.f32	s15, s12, s12
90029f32:	eee7 7a07 	vfma.f32	s15, s14, s14
90029f36:	eef4 7ac5 	vcmpe.f32	s15, s10
90029f3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029f3e:	f67f af7c 	bls.w	90029e3a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90029f42:	3501      	adds	r5, #1
90029f44:	eef0 0a69 	vmov.f32	s1, s19
90029f48:	eeb0 0a68 	vmov.f32	s0, s17
90029f4c:	4620      	mov	r0, r4
90029f4e:	4629      	mov	r1, r5
90029f50:	eef0 3a4a 	vmov.f32	s7, s20
90029f54:	eeb0 3a49 	vmov.f32	s6, s18
90029f58:	eef0 2a6e 	vmov.f32	s5, s29
90029f5c:	eeb0 2a4e 	vmov.f32	s4, s28
90029f60:	eef0 1a6d 	vmov.f32	s3, s27
90029f64:	eeb0 1a4d 	vmov.f32	s2, s26
90029f68:	f7ff fe84 	bl	90029c74 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90029f6c:	eeb0 ca6c 	vmov.f32	s24, s25
90029f70:	eddd ba01 	vldr	s23, [sp, #4]
90029f74:	eef0 9a4a 	vmov.f32	s19, s20
90029f78:	ed9d fa02 	vldr	s30, [sp, #8]
90029f7c:	eef0 8a49 	vmov.f32	s17, s18
90029f80:	eddd fa03 	vldr	s31, [sp, #12]
90029f84:	e68c      	b.n	90029ca0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90029f86:	bf00      	nop
90029f88:	2edbe6ff 	.word	0x2edbe6ff
90029f8c:	40490fdb 	.word	0x40490fdb
90029f90:	3dcccccd 	.word	0x3dcccccd
90029f94:	40c90fdb 	.word	0x40c90fdb

90029f98 <_ZN8touchgfx6CanvasD1Ev>:
90029f98:	4b04      	ldr	r3, [pc, #16]	@ (90029fac <_ZN8touchgfx6CanvasD1Ev+0x14>)
90029f9a:	b510      	push	{r4, lr}
90029f9c:	4604      	mov	r4, r0
90029f9e:	f840 3b14 	str.w	r3, [r0], #20
90029fa2:	f7eb fed3 	bl	90015d4c <_ZN8touchgfx7OutlineD1Ev>
90029fa6:	4620      	mov	r0, r4
90029fa8:	bd10      	pop	{r4, pc}
90029faa:	bf00      	nop
90029fac:	9002eb5c 	.word	0x9002eb5c

90029fb0 <_ZN8touchgfx6CanvasD0Ev>:
90029fb0:	b510      	push	{r4, lr}
90029fb2:	4604      	mov	r4, r0
90029fb4:	f7ff fff0 	bl	90029f98 <_ZN8touchgfx6CanvasD1Ev>
90029fb8:	2174      	movs	r1, #116	@ 0x74
90029fba:	4620      	mov	r0, r4
90029fbc:	f000 f826 	bl	9002a00c <_ZdlPvj>
90029fc0:	4620      	mov	r0, r4
90029fc2:	bd10      	pop	{r4, pc}

90029fc4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90029fc4:	790b      	ldrb	r3, [r1, #4]
90029fc6:	2b00      	cmp	r3, #0
90029fc8:	bf0c      	ite	eq
90029fca:	2301      	moveq	r3, #1
90029fcc:	2300      	movne	r3, #0
90029fce:	b570      	push	{r4, r5, r6, lr}
90029fd0:	4604      	mov	r4, r0
90029fd2:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
90029fd6:	460e      	mov	r6, r1
90029fd8:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
90029fdc:	d109      	bne.n	90029ff2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90029fde:	b14d      	cbz	r5, 90029ff4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90029fe0:	7933      	ldrb	r3, [r6, #4]
90029fe2:	2b01      	cmp	r3, #1
90029fe4:	d10c      	bne.n	9002a000 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029fe6:	6823      	ldr	r3, [r4, #0]
90029fe8:	4620      	mov	r0, r4
90029fea:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90029fec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029ff0:	4718      	bx	r3
90029ff2:	b12d      	cbz	r5, 9002a000 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029ff4:	6823      	ldr	r3, [r4, #0]
90029ff6:	4620      	mov	r0, r4
90029ff8:	695b      	ldr	r3, [r3, #20]
90029ffa:	4798      	blx	r3
90029ffc:	2d00      	cmp	r5, #0
90029ffe:	d1ef      	bne.n	90029fe0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
9002a000:	bd70      	pop	{r4, r5, r6, pc}

9002a002 <__aeabi_atexit>:
9002a002:	460b      	mov	r3, r1
9002a004:	4601      	mov	r1, r0
9002a006:	4618      	mov	r0, r3
9002a008:	f000 bf7e 	b.w	9002af08 <__cxa_atexit>

9002a00c <_ZdlPvj>:
9002a00c:	f000 b812 	b.w	9002a034 <_ZdlPv>

9002a010 <__cxa_guard_acquire>:
9002a010:	6802      	ldr	r2, [r0, #0]
9002a012:	07d2      	lsls	r2, r2, #31
9002a014:	4603      	mov	r3, r0
9002a016:	d405      	bmi.n	9002a024 <__cxa_guard_acquire+0x14>
9002a018:	7842      	ldrb	r2, [r0, #1]
9002a01a:	b102      	cbz	r2, 9002a01e <__cxa_guard_acquire+0xe>
9002a01c:	deff      	udf	#255	@ 0xff
9002a01e:	2001      	movs	r0, #1
9002a020:	7058      	strb	r0, [r3, #1]
9002a022:	4770      	bx	lr
9002a024:	2000      	movs	r0, #0
9002a026:	4770      	bx	lr

9002a028 <__cxa_guard_release>:
9002a028:	2301      	movs	r3, #1
9002a02a:	6003      	str	r3, [r0, #0]
9002a02c:	4770      	bx	lr

9002a02e <__cxa_pure_virtual>:
9002a02e:	b508      	push	{r3, lr}
9002a030:	f000 f80e 	bl	9002a050 <_ZSt9terminatev>

9002a034 <_ZdlPv>:
9002a034:	f000 bb90 	b.w	9002a758 <free>

9002a038 <_ZN10__cxxabiv111__terminateEPFvvE>:
9002a038:	b508      	push	{r3, lr}
9002a03a:	4780      	blx	r0
9002a03c:	f000 fb59 	bl	9002a6f2 <abort>

9002a040 <_ZSt13get_terminatev>:
9002a040:	4b02      	ldr	r3, [pc, #8]	@ (9002a04c <_ZSt13get_terminatev+0xc>)
9002a042:	6818      	ldr	r0, [r3, #0]
9002a044:	f3bf 8f5b 	dmb	ish
9002a048:	4770      	bx	lr
9002a04a:	bf00      	nop
9002a04c:	24000104 	.word	0x24000104

9002a050 <_ZSt9terminatev>:
9002a050:	b508      	push	{r3, lr}
9002a052:	f7ff fff5 	bl	9002a040 <_ZSt13get_terminatev>
9002a056:	f7ff ffef 	bl	9002a038 <_ZN10__cxxabiv111__terminateEPFvvE>

9002a05a <atan2f>:
9002a05a:	f000 b9cd 	b.w	9002a3f8 <__ieee754_atan2f>

9002a05e <sinf_poly>:
9002a05e:	07cb      	lsls	r3, r1, #31
9002a060:	d412      	bmi.n	9002a088 <sinf_poly+0x2a>
9002a062:	ee21 5b00 	vmul.f64	d5, d1, d0
9002a066:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002a06a:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002a06e:	eea6 7b01 	vfma.f64	d7, d6, d1
9002a072:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002a076:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a07a:	eea6 0b05 	vfma.f64	d0, d6, d5
9002a07e:	eea7 0b01 	vfma.f64	d0, d7, d1
9002a082:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002a086:	4770      	bx	lr
9002a088:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002a08c:	ee21 5b01 	vmul.f64	d5, d1, d1
9002a090:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002a094:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002a098:	eea1 7b06 	vfma.f64	d7, d1, d6
9002a09c:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002a0a0:	eea1 0b06 	vfma.f64	d0, d1, d6
9002a0a4:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002a0a8:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a0ac:	eea5 0b06 	vfma.f64	d0, d5, d6
9002a0b0:	e7e5      	b.n	9002a07e <sinf_poly+0x20>
9002a0b2:	0000      	movs	r0, r0
9002a0b4:	0000      	movs	r0, r0
	...

9002a0b8 <sinf>:
9002a0b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002a0ba:	ee10 4a10 	vmov	r4, s0
9002a0be:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002a0c2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002a0c6:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002a0ca:	eef0 7a40 	vmov.f32	s15, s0
9002a0ce:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002a0d2:	d218      	bcs.n	9002a106 <sinf+0x4e>
9002a0d4:	ee26 1b06 	vmul.f64	d1, d6, d6
9002a0d8:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002a0dc:	d20a      	bcs.n	9002a0f4 <sinf+0x3c>
9002a0de:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
9002a0e2:	d103      	bne.n	9002a0ec <sinf+0x34>
9002a0e4:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002a0e8:	ed8d 1a01 	vstr	s2, [sp, #4]
9002a0ec:	eeb0 0a67 	vmov.f32	s0, s15
9002a0f0:	b003      	add	sp, #12
9002a0f2:	bd30      	pop	{r4, r5, pc}
9002a0f4:	483a      	ldr	r0, [pc, #232]	@ (9002a1e0 <sinf+0x128>)
9002a0f6:	eeb0 0b46 	vmov.f64	d0, d6
9002a0fa:	2100      	movs	r1, #0
9002a0fc:	b003      	add	sp, #12
9002a0fe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002a102:	f7ff bfac 	b.w	9002a05e <sinf_poly>
9002a106:	f240 422e 	movw	r2, #1070	@ 0x42e
9002a10a:	4293      	cmp	r3, r2
9002a10c:	d824      	bhi.n	9002a158 <sinf+0xa0>
9002a10e:	4b34      	ldr	r3, [pc, #208]	@ (9002a1e0 <sinf+0x128>)
9002a110:	ed93 7b08 	vldr	d7, [r3, #32]
9002a114:	ee26 7b07 	vmul.f64	d7, d6, d7
9002a118:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002a11c:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a120:	ee17 1a90 	vmov	r1, s15
9002a124:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002a128:	1609      	asrs	r1, r1, #24
9002a12a:	ee07 1a90 	vmov	s15, r1
9002a12e:	f001 0203 	and.w	r2, r1, #3
9002a132:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a136:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002a13a:	ed92 0b00 	vldr	d0, [r2]
9002a13e:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002a142:	f011 0f02 	tst.w	r1, #2
9002a146:	eea5 6b47 	vfms.f64	d6, d5, d7
9002a14a:	bf08      	it	eq
9002a14c:	4618      	moveq	r0, r3
9002a14e:	ee26 1b06 	vmul.f64	d1, d6, d6
9002a152:	ee20 0b06 	vmul.f64	d0, d0, d6
9002a156:	e7d1      	b.n	9002a0fc <sinf+0x44>
9002a158:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002a15c:	d237      	bcs.n	9002a1ce <sinf+0x116>
9002a15e:	4921      	ldr	r1, [pc, #132]	@ (9002a1e4 <sinf+0x12c>)
9002a160:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002a164:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002a168:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002a16c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002a170:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002a174:	6a10      	ldr	r0, [r2, #32]
9002a176:	6912      	ldr	r2, [r2, #16]
9002a178:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002a17c:	40ab      	lsls	r3, r5
9002a17e:	fba0 5003 	umull	r5, r0, r0, r3
9002a182:	4359      	muls	r1, r3
9002a184:	fbe3 0102 	umlal	r0, r1, r3, r2
9002a188:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002a18c:	0f9d      	lsrs	r5, r3, #30
9002a18e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002a192:	1ac9      	subs	r1, r1, r3
9002a194:	f7d6 fa82 	bl	9000069c <__aeabi_l2d>
9002a198:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002a19c:	4b10      	ldr	r3, [pc, #64]	@ (9002a1e0 <sinf+0x128>)
9002a19e:	f004 0203 	and.w	r2, r4, #3
9002a1a2:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a1a6:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 9002a1d8 <sinf+0x120>
9002a1aa:	ed92 0b00 	vldr	d0, [r2]
9002a1ae:	ec41 0b17 	vmov	d7, r0, r1
9002a1b2:	f014 0f02 	tst.w	r4, #2
9002a1b6:	ee27 7b06 	vmul.f64	d7, d7, d6
9002a1ba:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a1be:	4629      	mov	r1, r5
9002a1c0:	bf08      	it	eq
9002a1c2:	4618      	moveq	r0, r3
9002a1c4:	ee27 1b07 	vmul.f64	d1, d7, d7
9002a1c8:	ee20 0b07 	vmul.f64	d0, d0, d7
9002a1cc:	e796      	b.n	9002a0fc <sinf+0x44>
9002a1ce:	b003      	add	sp, #12
9002a1d0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002a1d4:	f000 b8e2 	b.w	9002a39c <__math_invalidf>
9002a1d8:	54442d18 	.word	0x54442d18
9002a1dc:	3c1921fb 	.word	0x3c1921fb
9002a1e0:	9002ebc8 	.word	0x9002ebc8
9002a1e4:	9002eb68 	.word	0x9002eb68

9002a1e8 <sinf_poly>:
9002a1e8:	07cb      	lsls	r3, r1, #31
9002a1ea:	d412      	bmi.n	9002a212 <sinf_poly+0x2a>
9002a1ec:	ee21 5b00 	vmul.f64	d5, d1, d0
9002a1f0:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002a1f4:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002a1f8:	eea6 7b01 	vfma.f64	d7, d6, d1
9002a1fc:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002a200:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a204:	eea6 0b05 	vfma.f64	d0, d6, d5
9002a208:	eea7 0b01 	vfma.f64	d0, d7, d1
9002a20c:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002a210:	4770      	bx	lr
9002a212:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002a216:	ee21 5b01 	vmul.f64	d5, d1, d1
9002a21a:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002a21e:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002a222:	eea1 7b06 	vfma.f64	d7, d1, d6
9002a226:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002a22a:	eea1 0b06 	vfma.f64	d0, d1, d6
9002a22e:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002a232:	ee21 1b05 	vmul.f64	d1, d1, d5
9002a236:	eea5 0b06 	vfma.f64	d0, d5, d6
9002a23a:	e7e5      	b.n	9002a208 <sinf_poly+0x20>
9002a23c:	0000      	movs	r0, r0
	...

9002a240 <cosf>:
9002a240:	b538      	push	{r3, r4, r5, lr}
9002a242:	ee10 4a10 	vmov	r4, s0
9002a246:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002a24a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002a24e:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002a252:	d21f      	bcs.n	9002a294 <cosf+0x54>
9002a254:	ee27 7b07 	vmul.f64	d7, d7, d7
9002a258:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002a25c:	f0c0 8082 	bcc.w	9002a364 <cosf+0x124>
9002a260:	ee27 4b07 	vmul.f64	d4, d7, d7
9002a264:	4b44      	ldr	r3, [pc, #272]	@ (9002a378 <cosf+0x138>)
9002a266:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
9002a26a:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
9002a26e:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002a272:	eea7 6b05 	vfma.f64	d6, d7, d5
9002a276:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
9002a27a:	eea7 0b05 	vfma.f64	d0, d7, d5
9002a27e:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002a282:	ee27 7b04 	vmul.f64	d7, d7, d4
9002a286:	eea4 0b05 	vfma.f64	d0, d4, d5
9002a28a:	eea6 0b07 	vfma.f64	d0, d6, d7
9002a28e:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002a292:	bd38      	pop	{r3, r4, r5, pc}
9002a294:	f240 422e 	movw	r2, #1070	@ 0x42e
9002a298:	4293      	cmp	r3, r2
9002a29a:	d829      	bhi.n	9002a2f0 <cosf+0xb0>
9002a29c:	4b36      	ldr	r3, [pc, #216]	@ (9002a378 <cosf+0x138>)
9002a29e:	ed93 6b08 	vldr	d6, [r3, #32]
9002a2a2:	ee27 6b06 	vmul.f64	d6, d7, d6
9002a2a6:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002a2aa:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a2ae:	ee16 1a90 	vmov	r1, s13
9002a2b2:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002a2b6:	1609      	asrs	r1, r1, #24
9002a2b8:	ee06 1a90 	vmov	s13, r1
9002a2bc:	f001 0203 	and.w	r2, r1, #3
9002a2c0:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a2c4:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002a2c8:	ed92 0b00 	vldr	d0, [r2]
9002a2cc:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
9002a2d0:	f011 0f02 	tst.w	r1, #2
9002a2d4:	f081 0101 	eor.w	r1, r1, #1
9002a2d8:	eea5 7b46 	vfms.f64	d7, d5, d6
9002a2dc:	bf08      	it	eq
9002a2de:	4618      	moveq	r0, r3
9002a2e0:	ee27 1b07 	vmul.f64	d1, d7, d7
9002a2e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a2e8:	ee20 0b07 	vmul.f64	d0, d0, d7
9002a2ec:	f7ff bf7c 	b.w	9002a1e8 <sinf_poly>
9002a2f0:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002a2f4:	d232      	bcs.n	9002a35c <cosf+0x11c>
9002a2f6:	4921      	ldr	r1, [pc, #132]	@ (9002a37c <cosf+0x13c>)
9002a2f8:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002a2fc:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002a300:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002a304:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002a308:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002a30c:	6a10      	ldr	r0, [r2, #32]
9002a30e:	6912      	ldr	r2, [r2, #16]
9002a310:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002a314:	40ab      	lsls	r3, r5
9002a316:	fba0 5003 	umull	r5, r0, r0, r3
9002a31a:	4359      	muls	r1, r3
9002a31c:	fbe3 0102 	umlal	r0, r1, r3, r2
9002a320:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002a324:	0f9d      	lsrs	r5, r3, #30
9002a326:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002a32a:	1ac9      	subs	r1, r1, r3
9002a32c:	f7d6 f9b6 	bl	9000069c <__aeabi_l2d>
9002a330:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002a334:	4b10      	ldr	r3, [pc, #64]	@ (9002a378 <cosf+0x138>)
9002a336:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002a370 <cosf+0x130>
9002a33a:	ec41 0b17 	vmov	d7, r0, r1
9002a33e:	f004 0203 	and.w	r2, r4, #3
9002a342:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002a346:	ed92 0b00 	vldr	d0, [r2]
9002a34a:	ee27 7b06 	vmul.f64	d7, d7, d6
9002a34e:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002a352:	f014 0f02 	tst.w	r4, #2
9002a356:	f085 0101 	eor.w	r1, r5, #1
9002a35a:	e7bf      	b.n	9002a2dc <cosf+0x9c>
9002a35c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a360:	f000 b81c 	b.w	9002a39c <__math_invalidf>
9002a364:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002a368:	e793      	b.n	9002a292 <cosf+0x52>
9002a36a:	bf00      	nop
9002a36c:	f3af 8000 	nop.w
9002a370:	54442d18 	.word	0x54442d18
9002a374:	3c1921fb 	.word	0x3c1921fb
9002a378:	9002ebc8 	.word	0x9002ebc8
9002a37c:	9002eb68 	.word	0x9002eb68

9002a380 <with_errnof>:
9002a380:	b510      	push	{r4, lr}
9002a382:	ed2d 8b02 	vpush	{d8}
9002a386:	eeb0 8a40 	vmov.f32	s16, s0
9002a38a:	4604      	mov	r4, r0
9002a38c:	f000 fd8e 	bl	9002aeac <__errno>
9002a390:	eeb0 0a48 	vmov.f32	s0, s16
9002a394:	ecbd 8b02 	vpop	{d8}
9002a398:	6004      	str	r4, [r0, #0]
9002a39a:	bd10      	pop	{r4, pc}

9002a39c <__math_invalidf>:
9002a39c:	eef0 7a40 	vmov.f32	s15, s0
9002a3a0:	ee30 7a40 	vsub.f32	s14, s0, s0
9002a3a4:	eef4 7a67 	vcmp.f32	s15, s15
9002a3a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a3ac:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002a3b0:	d602      	bvs.n	9002a3b8 <__math_invalidf+0x1c>
9002a3b2:	2021      	movs	r0, #33	@ 0x21
9002a3b4:	f7ff bfe4 	b.w	9002a380 <with_errnof>
9002a3b8:	4770      	bx	lr
	...

9002a3bc <sqrtf>:
9002a3bc:	b508      	push	{r3, lr}
9002a3be:	ed2d 8b02 	vpush	{d8}
9002a3c2:	eeb0 8a40 	vmov.f32	s16, s0
9002a3c6:	f000 f8b5 	bl	9002a534 <__ieee754_sqrtf>
9002a3ca:	eeb4 8a48 	vcmp.f32	s16, s16
9002a3ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a3d2:	d60c      	bvs.n	9002a3ee <sqrtf+0x32>
9002a3d4:	eddf 8a07 	vldr	s17, [pc, #28]	@ 9002a3f4 <sqrtf+0x38>
9002a3d8:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002a3dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a3e0:	d505      	bpl.n	9002a3ee <sqrtf+0x32>
9002a3e2:	f000 fd63 	bl	9002aeac <__errno>
9002a3e6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002a3ea:	2321      	movs	r3, #33	@ 0x21
9002a3ec:	6003      	str	r3, [r0, #0]
9002a3ee:	ecbd 8b02 	vpop	{d8}
9002a3f2:	bd08      	pop	{r3, pc}
9002a3f4:	00000000 	.word	0x00000000

9002a3f8 <__ieee754_atan2f>:
9002a3f8:	ee10 2a90 	vmov	r2, s1
9002a3fc:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
9002a400:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002a404:	b510      	push	{r4, lr}
9002a406:	eef0 7a40 	vmov.f32	s15, s0
9002a40a:	d806      	bhi.n	9002a41a <__ieee754_atan2f+0x22>
9002a40c:	ee10 0a10 	vmov	r0, s0
9002a410:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002a414:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a418:	d904      	bls.n	9002a424 <__ieee754_atan2f+0x2c>
9002a41a:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002a41e:	eeb0 0a67 	vmov.f32	s0, s15
9002a422:	bd10      	pop	{r4, pc}
9002a424:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002a428:	d103      	bne.n	9002a432 <__ieee754_atan2f+0x3a>
9002a42a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a42e:	f000 b885 	b.w	9002a53c <atanf>
9002a432:	1794      	asrs	r4, r2, #30
9002a434:	f004 0402 	and.w	r4, r4, #2
9002a438:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002a43c:	b93b      	cbnz	r3, 9002a44e <__ieee754_atan2f+0x56>
9002a43e:	2c02      	cmp	r4, #2
9002a440:	d05c      	beq.n	9002a4fc <__ieee754_atan2f+0x104>
9002a442:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a510 <__ieee754_atan2f+0x118>
9002a446:	2c03      	cmp	r4, #3
9002a448:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002a44c:	e7e7      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a44e:	b939      	cbnz	r1, 9002a460 <__ieee754_atan2f+0x68>
9002a450:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002a514 <__ieee754_atan2f+0x11c>
9002a454:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a518 <__ieee754_atan2f+0x120>
9002a458:	2800      	cmp	r0, #0
9002a45a:	fe67 7a87 	vselge.f32	s15, s15, s14
9002a45e:	e7de      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a460:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002a464:	d110      	bne.n	9002a488 <__ieee754_atan2f+0x90>
9002a466:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a46a:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
9002a46e:	d107      	bne.n	9002a480 <__ieee754_atan2f+0x88>
9002a470:	2c02      	cmp	r4, #2
9002a472:	d846      	bhi.n	9002a502 <__ieee754_atan2f+0x10a>
9002a474:	4b29      	ldr	r3, [pc, #164]	@ (9002a51c <__ieee754_atan2f+0x124>)
9002a476:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002a47a:	edd3 7a00 	vldr	s15, [r3]
9002a47e:	e7ce      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a480:	2c02      	cmp	r4, #2
9002a482:	d841      	bhi.n	9002a508 <__ieee754_atan2f+0x110>
9002a484:	4b26      	ldr	r3, [pc, #152]	@ (9002a520 <__ieee754_atan2f+0x128>)
9002a486:	e7f6      	b.n	9002a476 <__ieee754_atan2f+0x7e>
9002a488:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a48c:	d0e0      	beq.n	9002a450 <__ieee754_atan2f+0x58>
9002a48e:	1a5b      	subs	r3, r3, r1
9002a490:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002a494:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002a498:	da1a      	bge.n	9002a4d0 <__ieee754_atan2f+0xd8>
9002a49a:	2a00      	cmp	r2, #0
9002a49c:	da01      	bge.n	9002a4a2 <__ieee754_atan2f+0xaa>
9002a49e:	313c      	adds	r1, #60	@ 0x3c
9002a4a0:	db19      	blt.n	9002a4d6 <__ieee754_atan2f+0xde>
9002a4a2:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002a4a6:	f000 f91d 	bl	9002a6e4 <fabsf>
9002a4aa:	f000 f847 	bl	9002a53c <atanf>
9002a4ae:	eef0 7a40 	vmov.f32	s15, s0
9002a4b2:	2c01      	cmp	r4, #1
9002a4b4:	d012      	beq.n	9002a4dc <__ieee754_atan2f+0xe4>
9002a4b6:	2c02      	cmp	r4, #2
9002a4b8:	d017      	beq.n	9002a4ea <__ieee754_atan2f+0xf2>
9002a4ba:	2c00      	cmp	r4, #0
9002a4bc:	d0af      	beq.n	9002a41e <__ieee754_atan2f+0x26>
9002a4be:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002a524 <__ieee754_atan2f+0x12c>
9002a4c2:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a4c6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002a528 <__ieee754_atan2f+0x130>
9002a4ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a4ce:	e7a6      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a4d0:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9002a514 <__ieee754_atan2f+0x11c>
9002a4d4:	e7ed      	b.n	9002a4b2 <__ieee754_atan2f+0xba>
9002a4d6:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002a52c <__ieee754_atan2f+0x134>
9002a4da:	e7ea      	b.n	9002a4b2 <__ieee754_atan2f+0xba>
9002a4dc:	ee17 3a90 	vmov	r3, s15
9002a4e0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002a4e4:	ee07 3a90 	vmov	s15, r3
9002a4e8:	e799      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a4ea:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002a524 <__ieee754_atan2f+0x12c>
9002a4ee:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a4f2:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002a528 <__ieee754_atan2f+0x130>
9002a4f6:	ee77 7a67 	vsub.f32	s15, s14, s15
9002a4fa:	e790      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a4fc:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002a528 <__ieee754_atan2f+0x130>
9002a500:	e78d      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a502:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002a530 <__ieee754_atan2f+0x138>
9002a506:	e78a      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a508:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002a52c <__ieee754_atan2f+0x134>
9002a50c:	e787      	b.n	9002a41e <__ieee754_atan2f+0x26>
9002a50e:	bf00      	nop
9002a510:	c0490fdb 	.word	0xc0490fdb
9002a514:	3fc90fdb 	.word	0x3fc90fdb
9002a518:	bfc90fdb 	.word	0xbfc90fdb
9002a51c:	9002ecb4 	.word	0x9002ecb4
9002a520:	9002eca8 	.word	0x9002eca8
9002a524:	33bbbd2e 	.word	0x33bbbd2e
9002a528:	40490fdb 	.word	0x40490fdb
9002a52c:	00000000 	.word	0x00000000
9002a530:	3f490fdb 	.word	0x3f490fdb

9002a534 <__ieee754_sqrtf>:
9002a534:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002a538:	4770      	bx	lr
	...

9002a53c <atanf>:
9002a53c:	b538      	push	{r3, r4, r5, lr}
9002a53e:	ee10 5a10 	vmov	r5, s0
9002a542:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002a546:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002a54a:	eef0 7a40 	vmov.f32	s15, s0
9002a54e:	d30f      	bcc.n	9002a570 <atanf+0x34>
9002a550:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002a554:	d904      	bls.n	9002a560 <atanf+0x24>
9002a556:	ee70 7a00 	vadd.f32	s15, s0, s0
9002a55a:	eeb0 0a67 	vmov.f32	s0, s15
9002a55e:	bd38      	pop	{r3, r4, r5, pc}
9002a560:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002a698 <atanf+0x15c>
9002a564:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002a69c <atanf+0x160>
9002a568:	2d00      	cmp	r5, #0
9002a56a:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002a56e:	e7f4      	b.n	9002a55a <atanf+0x1e>
9002a570:	4b4b      	ldr	r3, [pc, #300]	@ (9002a6a0 <atanf+0x164>)
9002a572:	429c      	cmp	r4, r3
9002a574:	d810      	bhi.n	9002a598 <atanf+0x5c>
9002a576:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002a57a:	d20a      	bcs.n	9002a592 <atanf+0x56>
9002a57c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002a6a4 <atanf+0x168>
9002a580:	ee30 7a07 	vadd.f32	s14, s0, s14
9002a584:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002a588:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002a58c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a590:	dce3      	bgt.n	9002a55a <atanf+0x1e>
9002a592:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
9002a596:	e013      	b.n	9002a5c0 <atanf+0x84>
9002a598:	f000 f8a4 	bl	9002a6e4 <fabsf>
9002a59c:	4b42      	ldr	r3, [pc, #264]	@ (9002a6a8 <atanf+0x16c>)
9002a59e:	429c      	cmp	r4, r3
9002a5a0:	d84f      	bhi.n	9002a642 <atanf+0x106>
9002a5a2:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002a5a6:	429c      	cmp	r4, r3
9002a5a8:	d841      	bhi.n	9002a62e <atanf+0xf2>
9002a5aa:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002a5ae:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a5b2:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a5b6:	2300      	movs	r3, #0
9002a5b8:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a5bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a5c0:	1c5a      	adds	r2, r3, #1
9002a5c2:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002a5c6:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002a6ac <atanf+0x170>
9002a5ca:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002a6b0 <atanf+0x174>
9002a5ce:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002a6b4 <atanf+0x178>
9002a5d2:	ee66 6a06 	vmul.f32	s13, s12, s12
9002a5d6:	eee6 5a87 	vfma.f32	s11, s13, s14
9002a5da:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002a6b8 <atanf+0x17c>
9002a5de:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a5e2:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002a6bc <atanf+0x180>
9002a5e6:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a5ea:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002a6c0 <atanf+0x184>
9002a5ee:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a5f2:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002a6c4 <atanf+0x188>
9002a5f6:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a5fa:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a6c8 <atanf+0x18c>
9002a5fe:	eea6 5a87 	vfma.f32	s10, s13, s14
9002a602:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002a6cc <atanf+0x190>
9002a606:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a60a:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002a6d0 <atanf+0x194>
9002a60e:	eea7 5a26 	vfma.f32	s10, s14, s13
9002a612:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a6d4 <atanf+0x198>
9002a616:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a61a:	ee27 7a26 	vmul.f32	s14, s14, s13
9002a61e:	eea5 7a86 	vfma.f32	s14, s11, s12
9002a622:	ee27 7a87 	vmul.f32	s14, s15, s14
9002a626:	d121      	bne.n	9002a66c <atanf+0x130>
9002a628:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a62c:	e795      	b.n	9002a55a <atanf+0x1e>
9002a62e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002a632:	ee30 7a67 	vsub.f32	s14, s0, s15
9002a636:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a63a:	2301      	movs	r3, #1
9002a63c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a640:	e7be      	b.n	9002a5c0 <atanf+0x84>
9002a642:	4b25      	ldr	r3, [pc, #148]	@ (9002a6d8 <atanf+0x19c>)
9002a644:	429c      	cmp	r4, r3
9002a646:	d80b      	bhi.n	9002a660 <atanf+0x124>
9002a648:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002a64c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a650:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a654:	2302      	movs	r3, #2
9002a656:	ee70 6a67 	vsub.f32	s13, s0, s15
9002a65a:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002a65e:	e7af      	b.n	9002a5c0 <atanf+0x84>
9002a660:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a664:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a668:	2303      	movs	r3, #3
9002a66a:	e7a9      	b.n	9002a5c0 <atanf+0x84>
9002a66c:	4a1b      	ldr	r2, [pc, #108]	@ (9002a6dc <atanf+0x1a0>)
9002a66e:	491c      	ldr	r1, [pc, #112]	@ (9002a6e0 <atanf+0x1a4>)
9002a670:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002a674:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002a678:	edd3 6a00 	vldr	s13, [r3]
9002a67c:	ee37 7a66 	vsub.f32	s14, s14, s13
9002a680:	2d00      	cmp	r5, #0
9002a682:	ee37 7a67 	vsub.f32	s14, s14, s15
9002a686:	edd2 7a00 	vldr	s15, [r2]
9002a68a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a68e:	bfb8      	it	lt
9002a690:	eef1 7a67 	vneglt.f32	s15, s15
9002a694:	e761      	b.n	9002a55a <atanf+0x1e>
9002a696:	bf00      	nop
9002a698:	bfc90fdb 	.word	0xbfc90fdb
9002a69c:	3fc90fdb 	.word	0x3fc90fdb
9002a6a0:	3edfffff 	.word	0x3edfffff
9002a6a4:	7149f2ca 	.word	0x7149f2ca
9002a6a8:	3f97ffff 	.word	0x3f97ffff
9002a6ac:	3c8569d7 	.word	0x3c8569d7
9002a6b0:	3d4bda59 	.word	0x3d4bda59
9002a6b4:	bd6ef16b 	.word	0xbd6ef16b
9002a6b8:	3d886b35 	.word	0x3d886b35
9002a6bc:	3dba2e6e 	.word	0x3dba2e6e
9002a6c0:	3e124925 	.word	0x3e124925
9002a6c4:	3eaaaaab 	.word	0x3eaaaaab
9002a6c8:	bd15a221 	.word	0xbd15a221
9002a6cc:	bd9d8795 	.word	0xbd9d8795
9002a6d0:	bde38e38 	.word	0xbde38e38
9002a6d4:	be4ccccd 	.word	0xbe4ccccd
9002a6d8:	401bffff 	.word	0x401bffff
9002a6dc:	9002ecd0 	.word	0x9002ecd0
9002a6e0:	9002ecc0 	.word	0x9002ecc0

9002a6e4 <fabsf>:
9002a6e4:	ee10 3a10 	vmov	r3, s0
9002a6e8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002a6ec:	ee00 3a10 	vmov	s0, r3
9002a6f0:	4770      	bx	lr

9002a6f2 <abort>:
9002a6f2:	b508      	push	{r3, lr}
9002a6f4:	2006      	movs	r0, #6
9002a6f6:	f000 fbad 	bl	9002ae54 <raise>
9002a6fa:	2001      	movs	r0, #1
9002a6fc:	f7da fa50 	bl	90004ba0 <_exit>

9002a700 <__assert_func>:
9002a700:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002a702:	4614      	mov	r4, r2
9002a704:	461a      	mov	r2, r3
9002a706:	4b09      	ldr	r3, [pc, #36]	@ (9002a72c <__assert_func+0x2c>)
9002a708:	681b      	ldr	r3, [r3, #0]
9002a70a:	4605      	mov	r5, r0
9002a70c:	68d8      	ldr	r0, [r3, #12]
9002a70e:	b954      	cbnz	r4, 9002a726 <__assert_func+0x26>
9002a710:	4b07      	ldr	r3, [pc, #28]	@ (9002a730 <__assert_func+0x30>)
9002a712:	461c      	mov	r4, r3
9002a714:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002a718:	9100      	str	r1, [sp, #0]
9002a71a:	462b      	mov	r3, r5
9002a71c:	4905      	ldr	r1, [pc, #20]	@ (9002a734 <__assert_func+0x34>)
9002a71e:	f000 f9e1 	bl	9002aae4 <fiprintf>
9002a722:	f7ff ffe6 	bl	9002a6f2 <abort>
9002a726:	4b04      	ldr	r3, [pc, #16]	@ (9002a738 <__assert_func+0x38>)
9002a728:	e7f4      	b.n	9002a714 <__assert_func+0x14>
9002a72a:	bf00      	nop
9002a72c:	24000114 	.word	0x24000114
9002a730:	9002ed1b 	.word	0x9002ed1b
9002a734:	9002eced 	.word	0x9002eced
9002a738:	9002ece0 	.word	0x9002ece0

9002a73c <atexit>:
9002a73c:	2300      	movs	r3, #0
9002a73e:	4601      	mov	r1, r0
9002a740:	461a      	mov	r2, r3
9002a742:	4618      	mov	r0, r3
9002a744:	f000 bbfc 	b.w	9002af40 <__register_exitproc>

9002a748 <malloc>:
9002a748:	4b02      	ldr	r3, [pc, #8]	@ (9002a754 <malloc+0xc>)
9002a74a:	4601      	mov	r1, r0
9002a74c:	6818      	ldr	r0, [r3, #0]
9002a74e:	f000 b82d 	b.w	9002a7ac <_malloc_r>
9002a752:	bf00      	nop
9002a754:	24000114 	.word	0x24000114

9002a758 <free>:
9002a758:	4b02      	ldr	r3, [pc, #8]	@ (9002a764 <free+0xc>)
9002a75a:	4601      	mov	r1, r0
9002a75c:	6818      	ldr	r0, [r3, #0]
9002a75e:	f000 bc4b 	b.w	9002aff8 <_free_r>
9002a762:	bf00      	nop
9002a764:	24000114 	.word	0x24000114

9002a768 <sbrk_aligned>:
9002a768:	b570      	push	{r4, r5, r6, lr}
9002a76a:	4e0f      	ldr	r6, [pc, #60]	@ (9002a7a8 <sbrk_aligned+0x40>)
9002a76c:	460c      	mov	r4, r1
9002a76e:	6831      	ldr	r1, [r6, #0]
9002a770:	4605      	mov	r5, r0
9002a772:	b911      	cbnz	r1, 9002a77a <sbrk_aligned+0x12>
9002a774:	f000 fb8a 	bl	9002ae8c <_sbrk_r>
9002a778:	6030      	str	r0, [r6, #0]
9002a77a:	4621      	mov	r1, r4
9002a77c:	4628      	mov	r0, r5
9002a77e:	f000 fb85 	bl	9002ae8c <_sbrk_r>
9002a782:	1c43      	adds	r3, r0, #1
9002a784:	d103      	bne.n	9002a78e <sbrk_aligned+0x26>
9002a786:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
9002a78a:	4620      	mov	r0, r4
9002a78c:	bd70      	pop	{r4, r5, r6, pc}
9002a78e:	1cc4      	adds	r4, r0, #3
9002a790:	f024 0403 	bic.w	r4, r4, #3
9002a794:	42a0      	cmp	r0, r4
9002a796:	d0f8      	beq.n	9002a78a <sbrk_aligned+0x22>
9002a798:	1a21      	subs	r1, r4, r0
9002a79a:	4628      	mov	r0, r5
9002a79c:	f000 fb76 	bl	9002ae8c <_sbrk_r>
9002a7a0:	3001      	adds	r0, #1
9002a7a2:	d1f2      	bne.n	9002a78a <sbrk_aligned+0x22>
9002a7a4:	e7ef      	b.n	9002a786 <sbrk_aligned+0x1e>
9002a7a6:	bf00      	nop
9002a7a8:	24023d60 	.word	0x24023d60

9002a7ac <_malloc_r>:
9002a7ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a7b0:	1ccd      	adds	r5, r1, #3
9002a7b2:	f025 0503 	bic.w	r5, r5, #3
9002a7b6:	3508      	adds	r5, #8
9002a7b8:	2d0c      	cmp	r5, #12
9002a7ba:	bf38      	it	cc
9002a7bc:	250c      	movcc	r5, #12
9002a7be:	2d00      	cmp	r5, #0
9002a7c0:	4606      	mov	r6, r0
9002a7c2:	db01      	blt.n	9002a7c8 <_malloc_r+0x1c>
9002a7c4:	42a9      	cmp	r1, r5
9002a7c6:	d904      	bls.n	9002a7d2 <_malloc_r+0x26>
9002a7c8:	230c      	movs	r3, #12
9002a7ca:	6033      	str	r3, [r6, #0]
9002a7cc:	2000      	movs	r0, #0
9002a7ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a7d2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002a8a8 <_malloc_r+0xfc>
9002a7d6:	f000 f869 	bl	9002a8ac <__malloc_lock>
9002a7da:	f8d8 3000 	ldr.w	r3, [r8]
9002a7de:	461c      	mov	r4, r3
9002a7e0:	bb44      	cbnz	r4, 9002a834 <_malloc_r+0x88>
9002a7e2:	4629      	mov	r1, r5
9002a7e4:	4630      	mov	r0, r6
9002a7e6:	f7ff ffbf 	bl	9002a768 <sbrk_aligned>
9002a7ea:	1c43      	adds	r3, r0, #1
9002a7ec:	4604      	mov	r4, r0
9002a7ee:	d158      	bne.n	9002a8a2 <_malloc_r+0xf6>
9002a7f0:	f8d8 4000 	ldr.w	r4, [r8]
9002a7f4:	4627      	mov	r7, r4
9002a7f6:	2f00      	cmp	r7, #0
9002a7f8:	d143      	bne.n	9002a882 <_malloc_r+0xd6>
9002a7fa:	2c00      	cmp	r4, #0
9002a7fc:	d04b      	beq.n	9002a896 <_malloc_r+0xea>
9002a7fe:	6823      	ldr	r3, [r4, #0]
9002a800:	4639      	mov	r1, r7
9002a802:	4630      	mov	r0, r6
9002a804:	eb04 0903 	add.w	r9, r4, r3
9002a808:	f000 fb40 	bl	9002ae8c <_sbrk_r>
9002a80c:	4581      	cmp	r9, r0
9002a80e:	d142      	bne.n	9002a896 <_malloc_r+0xea>
9002a810:	6821      	ldr	r1, [r4, #0]
9002a812:	1a6d      	subs	r5, r5, r1
9002a814:	4629      	mov	r1, r5
9002a816:	4630      	mov	r0, r6
9002a818:	f7ff ffa6 	bl	9002a768 <sbrk_aligned>
9002a81c:	3001      	adds	r0, #1
9002a81e:	d03a      	beq.n	9002a896 <_malloc_r+0xea>
9002a820:	6823      	ldr	r3, [r4, #0]
9002a822:	442b      	add	r3, r5
9002a824:	6023      	str	r3, [r4, #0]
9002a826:	f8d8 3000 	ldr.w	r3, [r8]
9002a82a:	685a      	ldr	r2, [r3, #4]
9002a82c:	bb62      	cbnz	r2, 9002a888 <_malloc_r+0xdc>
9002a82e:	f8c8 7000 	str.w	r7, [r8]
9002a832:	e00f      	b.n	9002a854 <_malloc_r+0xa8>
9002a834:	6822      	ldr	r2, [r4, #0]
9002a836:	1b52      	subs	r2, r2, r5
9002a838:	d420      	bmi.n	9002a87c <_malloc_r+0xd0>
9002a83a:	2a0b      	cmp	r2, #11
9002a83c:	d917      	bls.n	9002a86e <_malloc_r+0xc2>
9002a83e:	1961      	adds	r1, r4, r5
9002a840:	42a3      	cmp	r3, r4
9002a842:	6025      	str	r5, [r4, #0]
9002a844:	bf18      	it	ne
9002a846:	6059      	strne	r1, [r3, #4]
9002a848:	6863      	ldr	r3, [r4, #4]
9002a84a:	bf08      	it	eq
9002a84c:	f8c8 1000 	streq.w	r1, [r8]
9002a850:	5162      	str	r2, [r4, r5]
9002a852:	604b      	str	r3, [r1, #4]
9002a854:	4630      	mov	r0, r6
9002a856:	f000 f82f 	bl	9002a8b8 <__malloc_unlock>
9002a85a:	f104 000b 	add.w	r0, r4, #11
9002a85e:	1d23      	adds	r3, r4, #4
9002a860:	f020 0007 	bic.w	r0, r0, #7
9002a864:	1ac2      	subs	r2, r0, r3
9002a866:	bf1c      	itt	ne
9002a868:	1a1b      	subne	r3, r3, r0
9002a86a:	50a3      	strne	r3, [r4, r2]
9002a86c:	e7af      	b.n	9002a7ce <_malloc_r+0x22>
9002a86e:	6862      	ldr	r2, [r4, #4]
9002a870:	42a3      	cmp	r3, r4
9002a872:	bf0c      	ite	eq
9002a874:	f8c8 2000 	streq.w	r2, [r8]
9002a878:	605a      	strne	r2, [r3, #4]
9002a87a:	e7eb      	b.n	9002a854 <_malloc_r+0xa8>
9002a87c:	4623      	mov	r3, r4
9002a87e:	6864      	ldr	r4, [r4, #4]
9002a880:	e7ae      	b.n	9002a7e0 <_malloc_r+0x34>
9002a882:	463c      	mov	r4, r7
9002a884:	687f      	ldr	r7, [r7, #4]
9002a886:	e7b6      	b.n	9002a7f6 <_malloc_r+0x4a>
9002a888:	461a      	mov	r2, r3
9002a88a:	685b      	ldr	r3, [r3, #4]
9002a88c:	42a3      	cmp	r3, r4
9002a88e:	d1fb      	bne.n	9002a888 <_malloc_r+0xdc>
9002a890:	2300      	movs	r3, #0
9002a892:	6053      	str	r3, [r2, #4]
9002a894:	e7de      	b.n	9002a854 <_malloc_r+0xa8>
9002a896:	230c      	movs	r3, #12
9002a898:	6033      	str	r3, [r6, #0]
9002a89a:	4630      	mov	r0, r6
9002a89c:	f000 f80c 	bl	9002a8b8 <__malloc_unlock>
9002a8a0:	e794      	b.n	9002a7cc <_malloc_r+0x20>
9002a8a2:	6005      	str	r5, [r0, #0]
9002a8a4:	e7d6      	b.n	9002a854 <_malloc_r+0xa8>
9002a8a6:	bf00      	nop
9002a8a8:	24023d64 	.word	0x24023d64

9002a8ac <__malloc_lock>:
9002a8ac:	4801      	ldr	r0, [pc, #4]	@ (9002a8b4 <__malloc_lock+0x8>)
9002a8ae:	f000 bb28 	b.w	9002af02 <__retarget_lock_acquire_recursive>
9002a8b2:	bf00      	nop
9002a8b4:	24023ea4 	.word	0x24023ea4

9002a8b8 <__malloc_unlock>:
9002a8b8:	4801      	ldr	r0, [pc, #4]	@ (9002a8c0 <__malloc_unlock+0x8>)
9002a8ba:	f000 bb23 	b.w	9002af04 <__retarget_lock_release_recursive>
9002a8be:	bf00      	nop
9002a8c0:	24023ea4 	.word	0x24023ea4

9002a8c4 <srand>:
9002a8c4:	b538      	push	{r3, r4, r5, lr}
9002a8c6:	4b10      	ldr	r3, [pc, #64]	@ (9002a908 <srand+0x44>)
9002a8c8:	681d      	ldr	r5, [r3, #0]
9002a8ca:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
9002a8cc:	4604      	mov	r4, r0
9002a8ce:	b9b3      	cbnz	r3, 9002a8fe <srand+0x3a>
9002a8d0:	2018      	movs	r0, #24
9002a8d2:	f7ff ff39 	bl	9002a748 <malloc>
9002a8d6:	4602      	mov	r2, r0
9002a8d8:	6328      	str	r0, [r5, #48]	@ 0x30
9002a8da:	b920      	cbnz	r0, 9002a8e6 <srand+0x22>
9002a8dc:	4b0b      	ldr	r3, [pc, #44]	@ (9002a90c <srand+0x48>)
9002a8de:	480c      	ldr	r0, [pc, #48]	@ (9002a910 <srand+0x4c>)
9002a8e0:	2146      	movs	r1, #70	@ 0x46
9002a8e2:	f7ff ff0d 	bl	9002a700 <__assert_func>
9002a8e6:	490b      	ldr	r1, [pc, #44]	@ (9002a914 <srand+0x50>)
9002a8e8:	4b0b      	ldr	r3, [pc, #44]	@ (9002a918 <srand+0x54>)
9002a8ea:	e9c0 1300 	strd	r1, r3, [r0]
9002a8ee:	4b0b      	ldr	r3, [pc, #44]	@ (9002a91c <srand+0x58>)
9002a8f0:	6083      	str	r3, [r0, #8]
9002a8f2:	230b      	movs	r3, #11
9002a8f4:	8183      	strh	r3, [r0, #12]
9002a8f6:	2100      	movs	r1, #0
9002a8f8:	2001      	movs	r0, #1
9002a8fa:	e9c2 0104 	strd	r0, r1, [r2, #16]
9002a8fe:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
9002a900:	2200      	movs	r2, #0
9002a902:	611c      	str	r4, [r3, #16]
9002a904:	615a      	str	r2, [r3, #20]
9002a906:	bd38      	pop	{r3, r4, r5, pc}
9002a908:	24000114 	.word	0x24000114
9002a90c:	9002ed1c 	.word	0x9002ed1c
9002a910:	9002ed33 	.word	0x9002ed33
9002a914:	abcd330e 	.word	0xabcd330e
9002a918:	e66d1234 	.word	0xe66d1234
9002a91c:	0005deec 	.word	0x0005deec

9002a920 <rand>:
9002a920:	4b16      	ldr	r3, [pc, #88]	@ (9002a97c <rand+0x5c>)
9002a922:	b510      	push	{r4, lr}
9002a924:	681c      	ldr	r4, [r3, #0]
9002a926:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9002a928:	b9b3      	cbnz	r3, 9002a958 <rand+0x38>
9002a92a:	2018      	movs	r0, #24
9002a92c:	f7ff ff0c 	bl	9002a748 <malloc>
9002a930:	4602      	mov	r2, r0
9002a932:	6320      	str	r0, [r4, #48]	@ 0x30
9002a934:	b920      	cbnz	r0, 9002a940 <rand+0x20>
9002a936:	4b12      	ldr	r3, [pc, #72]	@ (9002a980 <rand+0x60>)
9002a938:	4812      	ldr	r0, [pc, #72]	@ (9002a984 <rand+0x64>)
9002a93a:	2152      	movs	r1, #82	@ 0x52
9002a93c:	f7ff fee0 	bl	9002a700 <__assert_func>
9002a940:	4911      	ldr	r1, [pc, #68]	@ (9002a988 <rand+0x68>)
9002a942:	4b12      	ldr	r3, [pc, #72]	@ (9002a98c <rand+0x6c>)
9002a944:	e9c0 1300 	strd	r1, r3, [r0]
9002a948:	4b11      	ldr	r3, [pc, #68]	@ (9002a990 <rand+0x70>)
9002a94a:	6083      	str	r3, [r0, #8]
9002a94c:	230b      	movs	r3, #11
9002a94e:	8183      	strh	r3, [r0, #12]
9002a950:	2100      	movs	r1, #0
9002a952:	2001      	movs	r0, #1
9002a954:	e9c2 0104 	strd	r0, r1, [r2, #16]
9002a958:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9002a95a:	480e      	ldr	r0, [pc, #56]	@ (9002a994 <rand+0x74>)
9002a95c:	690b      	ldr	r3, [r1, #16]
9002a95e:	694c      	ldr	r4, [r1, #20]
9002a960:	4a0d      	ldr	r2, [pc, #52]	@ (9002a998 <rand+0x78>)
9002a962:	4358      	muls	r0, r3
9002a964:	fb02 0004 	mla	r0, r2, r4, r0
9002a968:	fba3 3202 	umull	r3, r2, r3, r2
9002a96c:	3301      	adds	r3, #1
9002a96e:	eb40 0002 	adc.w	r0, r0, r2
9002a972:	e9c1 3004 	strd	r3, r0, [r1, #16]
9002a976:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
9002a97a:	bd10      	pop	{r4, pc}
9002a97c:	24000114 	.word	0x24000114
9002a980:	9002ed1c 	.word	0x9002ed1c
9002a984:	9002ed33 	.word	0x9002ed33
9002a988:	abcd330e 	.word	0xabcd330e
9002a98c:	e66d1234 	.word	0xe66d1234
9002a990:	0005deec 	.word	0x0005deec
9002a994:	5851f42d 	.word	0x5851f42d
9002a998:	4c957f2d 	.word	0x4c957f2d

9002a99c <std>:
9002a99c:	2300      	movs	r3, #0
9002a99e:	b510      	push	{r4, lr}
9002a9a0:	4604      	mov	r4, r0
9002a9a2:	e9c0 3300 	strd	r3, r3, [r0]
9002a9a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002a9aa:	6083      	str	r3, [r0, #8]
9002a9ac:	8181      	strh	r1, [r0, #12]
9002a9ae:	6643      	str	r3, [r0, #100]	@ 0x64
9002a9b0:	81c2      	strh	r2, [r0, #14]
9002a9b2:	6183      	str	r3, [r0, #24]
9002a9b4:	4619      	mov	r1, r3
9002a9b6:	2208      	movs	r2, #8
9002a9b8:	305c      	adds	r0, #92	@ 0x5c
9002a9ba:	f000 f9cb 	bl	9002ad54 <memset>
9002a9be:	4b0d      	ldr	r3, [pc, #52]	@ (9002a9f4 <std+0x58>)
9002a9c0:	6263      	str	r3, [r4, #36]	@ 0x24
9002a9c2:	4b0d      	ldr	r3, [pc, #52]	@ (9002a9f8 <std+0x5c>)
9002a9c4:	62a3      	str	r3, [r4, #40]	@ 0x28
9002a9c6:	4b0d      	ldr	r3, [pc, #52]	@ (9002a9fc <std+0x60>)
9002a9c8:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002a9ca:	4b0d      	ldr	r3, [pc, #52]	@ (9002aa00 <std+0x64>)
9002a9cc:	6323      	str	r3, [r4, #48]	@ 0x30
9002a9ce:	4b0d      	ldr	r3, [pc, #52]	@ (9002aa04 <std+0x68>)
9002a9d0:	6224      	str	r4, [r4, #32]
9002a9d2:	429c      	cmp	r4, r3
9002a9d4:	d006      	beq.n	9002a9e4 <std+0x48>
9002a9d6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002a9da:	4294      	cmp	r4, r2
9002a9dc:	d002      	beq.n	9002a9e4 <std+0x48>
9002a9de:	33d0      	adds	r3, #208	@ 0xd0
9002a9e0:	429c      	cmp	r4, r3
9002a9e2:	d105      	bne.n	9002a9f0 <std+0x54>
9002a9e4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002a9e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a9ec:	f000 ba88 	b.w	9002af00 <__retarget_lock_init_recursive>
9002a9f0:	bd10      	pop	{r4, pc}
9002a9f2:	bf00      	nop
9002a9f4:	9002b785 	.word	0x9002b785
9002a9f8:	9002b7a7 	.word	0x9002b7a7
9002a9fc:	9002b7df 	.word	0x9002b7df
9002aa00:	9002b803 	.word	0x9002b803
9002aa04:	24023d68 	.word	0x24023d68

9002aa08 <stdio_exit_handler>:
9002aa08:	4a02      	ldr	r2, [pc, #8]	@ (9002aa14 <stdio_exit_handler+0xc>)
9002aa0a:	4903      	ldr	r1, [pc, #12]	@ (9002aa18 <stdio_exit_handler+0x10>)
9002aa0c:	4803      	ldr	r0, [pc, #12]	@ (9002aa1c <stdio_exit_handler+0x14>)
9002aa0e:	f000 b87b 	b.w	9002ab08 <_fwalk_sglue>
9002aa12:	bf00      	nop
9002aa14:	24000108 	.word	0x24000108
9002aa18:	9002b735 	.word	0x9002b735
9002aa1c:	24000118 	.word	0x24000118

9002aa20 <cleanup_stdio>:
9002aa20:	6841      	ldr	r1, [r0, #4]
9002aa22:	4b0c      	ldr	r3, [pc, #48]	@ (9002aa54 <cleanup_stdio+0x34>)
9002aa24:	4299      	cmp	r1, r3
9002aa26:	b510      	push	{r4, lr}
9002aa28:	4604      	mov	r4, r0
9002aa2a:	d001      	beq.n	9002aa30 <cleanup_stdio+0x10>
9002aa2c:	f000 fe82 	bl	9002b734 <_fflush_r>
9002aa30:	68a1      	ldr	r1, [r4, #8]
9002aa32:	4b09      	ldr	r3, [pc, #36]	@ (9002aa58 <cleanup_stdio+0x38>)
9002aa34:	4299      	cmp	r1, r3
9002aa36:	d002      	beq.n	9002aa3e <cleanup_stdio+0x1e>
9002aa38:	4620      	mov	r0, r4
9002aa3a:	f000 fe7b 	bl	9002b734 <_fflush_r>
9002aa3e:	68e1      	ldr	r1, [r4, #12]
9002aa40:	4b06      	ldr	r3, [pc, #24]	@ (9002aa5c <cleanup_stdio+0x3c>)
9002aa42:	4299      	cmp	r1, r3
9002aa44:	d004      	beq.n	9002aa50 <cleanup_stdio+0x30>
9002aa46:	4620      	mov	r0, r4
9002aa48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002aa4c:	f000 be72 	b.w	9002b734 <_fflush_r>
9002aa50:	bd10      	pop	{r4, pc}
9002aa52:	bf00      	nop
9002aa54:	24023d68 	.word	0x24023d68
9002aa58:	24023dd0 	.word	0x24023dd0
9002aa5c:	24023e38 	.word	0x24023e38

9002aa60 <global_stdio_init.part.0>:
9002aa60:	b510      	push	{r4, lr}
9002aa62:	4b0b      	ldr	r3, [pc, #44]	@ (9002aa90 <global_stdio_init.part.0+0x30>)
9002aa64:	4c0b      	ldr	r4, [pc, #44]	@ (9002aa94 <global_stdio_init.part.0+0x34>)
9002aa66:	4a0c      	ldr	r2, [pc, #48]	@ (9002aa98 <global_stdio_init.part.0+0x38>)
9002aa68:	601a      	str	r2, [r3, #0]
9002aa6a:	4620      	mov	r0, r4
9002aa6c:	2200      	movs	r2, #0
9002aa6e:	2104      	movs	r1, #4
9002aa70:	f7ff ff94 	bl	9002a99c <std>
9002aa74:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002aa78:	2201      	movs	r2, #1
9002aa7a:	2109      	movs	r1, #9
9002aa7c:	f7ff ff8e 	bl	9002a99c <std>
9002aa80:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002aa84:	2202      	movs	r2, #2
9002aa86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002aa8a:	2112      	movs	r1, #18
9002aa8c:	f7ff bf86 	b.w	9002a99c <std>
9002aa90:	24023ea0 	.word	0x24023ea0
9002aa94:	24023d68 	.word	0x24023d68
9002aa98:	9002aa09 	.word	0x9002aa09

9002aa9c <__sfp_lock_acquire>:
9002aa9c:	4801      	ldr	r0, [pc, #4]	@ (9002aaa4 <__sfp_lock_acquire+0x8>)
9002aa9e:	f000 ba30 	b.w	9002af02 <__retarget_lock_acquire_recursive>
9002aaa2:	bf00      	nop
9002aaa4:	24023ea6 	.word	0x24023ea6

9002aaa8 <__sfp_lock_release>:
9002aaa8:	4801      	ldr	r0, [pc, #4]	@ (9002aab0 <__sfp_lock_release+0x8>)
9002aaaa:	f000 ba2b 	b.w	9002af04 <__retarget_lock_release_recursive>
9002aaae:	bf00      	nop
9002aab0:	24023ea6 	.word	0x24023ea6

9002aab4 <__sinit>:
9002aab4:	b510      	push	{r4, lr}
9002aab6:	4604      	mov	r4, r0
9002aab8:	f7ff fff0 	bl	9002aa9c <__sfp_lock_acquire>
9002aabc:	6a23      	ldr	r3, [r4, #32]
9002aabe:	b11b      	cbz	r3, 9002aac8 <__sinit+0x14>
9002aac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002aac4:	f7ff bff0 	b.w	9002aaa8 <__sfp_lock_release>
9002aac8:	4b04      	ldr	r3, [pc, #16]	@ (9002aadc <__sinit+0x28>)
9002aaca:	6223      	str	r3, [r4, #32]
9002aacc:	4b04      	ldr	r3, [pc, #16]	@ (9002aae0 <__sinit+0x2c>)
9002aace:	681b      	ldr	r3, [r3, #0]
9002aad0:	2b00      	cmp	r3, #0
9002aad2:	d1f5      	bne.n	9002aac0 <__sinit+0xc>
9002aad4:	f7ff ffc4 	bl	9002aa60 <global_stdio_init.part.0>
9002aad8:	e7f2      	b.n	9002aac0 <__sinit+0xc>
9002aada:	bf00      	nop
9002aadc:	9002aa21 	.word	0x9002aa21
9002aae0:	24023ea0 	.word	0x24023ea0

9002aae4 <fiprintf>:
9002aae4:	b40e      	push	{r1, r2, r3}
9002aae6:	b503      	push	{r0, r1, lr}
9002aae8:	4601      	mov	r1, r0
9002aaea:	ab03      	add	r3, sp, #12
9002aaec:	4805      	ldr	r0, [pc, #20]	@ (9002ab04 <fiprintf+0x20>)
9002aaee:	f853 2b04 	ldr.w	r2, [r3], #4
9002aaf2:	6800      	ldr	r0, [r0, #0]
9002aaf4:	9301      	str	r3, [sp, #4]
9002aaf6:	f000 faf3 	bl	9002b0e0 <_vfiprintf_r>
9002aafa:	b002      	add	sp, #8
9002aafc:	f85d eb04 	ldr.w	lr, [sp], #4
9002ab00:	b003      	add	sp, #12
9002ab02:	4770      	bx	lr
9002ab04:	24000114 	.word	0x24000114

9002ab08 <_fwalk_sglue>:
9002ab08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002ab0c:	4607      	mov	r7, r0
9002ab0e:	4688      	mov	r8, r1
9002ab10:	4614      	mov	r4, r2
9002ab12:	2600      	movs	r6, #0
9002ab14:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002ab18:	f1b9 0901 	subs.w	r9, r9, #1
9002ab1c:	d505      	bpl.n	9002ab2a <_fwalk_sglue+0x22>
9002ab1e:	6824      	ldr	r4, [r4, #0]
9002ab20:	2c00      	cmp	r4, #0
9002ab22:	d1f7      	bne.n	9002ab14 <_fwalk_sglue+0xc>
9002ab24:	4630      	mov	r0, r6
9002ab26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002ab2a:	89ab      	ldrh	r3, [r5, #12]
9002ab2c:	2b01      	cmp	r3, #1
9002ab2e:	d907      	bls.n	9002ab40 <_fwalk_sglue+0x38>
9002ab30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002ab34:	3301      	adds	r3, #1
9002ab36:	d003      	beq.n	9002ab40 <_fwalk_sglue+0x38>
9002ab38:	4629      	mov	r1, r5
9002ab3a:	4638      	mov	r0, r7
9002ab3c:	47c0      	blx	r8
9002ab3e:	4306      	orrs	r6, r0
9002ab40:	3568      	adds	r5, #104	@ 0x68
9002ab42:	e7e9      	b.n	9002ab18 <_fwalk_sglue+0x10>

9002ab44 <__swbuf_r>:
9002ab44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002ab46:	460e      	mov	r6, r1
9002ab48:	4614      	mov	r4, r2
9002ab4a:	4605      	mov	r5, r0
9002ab4c:	b118      	cbz	r0, 9002ab56 <__swbuf_r+0x12>
9002ab4e:	6a03      	ldr	r3, [r0, #32]
9002ab50:	b90b      	cbnz	r3, 9002ab56 <__swbuf_r+0x12>
9002ab52:	f7ff ffaf 	bl	9002aab4 <__sinit>
9002ab56:	69a3      	ldr	r3, [r4, #24]
9002ab58:	60a3      	str	r3, [r4, #8]
9002ab5a:	89a3      	ldrh	r3, [r4, #12]
9002ab5c:	071a      	lsls	r2, r3, #28
9002ab5e:	d501      	bpl.n	9002ab64 <__swbuf_r+0x20>
9002ab60:	6923      	ldr	r3, [r4, #16]
9002ab62:	b943      	cbnz	r3, 9002ab76 <__swbuf_r+0x32>
9002ab64:	4621      	mov	r1, r4
9002ab66:	4628      	mov	r0, r5
9002ab68:	f000 f82a 	bl	9002abc0 <__swsetup_r>
9002ab6c:	b118      	cbz	r0, 9002ab76 <__swbuf_r+0x32>
9002ab6e:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
9002ab72:	4638      	mov	r0, r7
9002ab74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002ab76:	6823      	ldr	r3, [r4, #0]
9002ab78:	6922      	ldr	r2, [r4, #16]
9002ab7a:	1a98      	subs	r0, r3, r2
9002ab7c:	6963      	ldr	r3, [r4, #20]
9002ab7e:	b2f6      	uxtb	r6, r6
9002ab80:	4283      	cmp	r3, r0
9002ab82:	4637      	mov	r7, r6
9002ab84:	dc05      	bgt.n	9002ab92 <__swbuf_r+0x4e>
9002ab86:	4621      	mov	r1, r4
9002ab88:	4628      	mov	r0, r5
9002ab8a:	f000 fdd3 	bl	9002b734 <_fflush_r>
9002ab8e:	2800      	cmp	r0, #0
9002ab90:	d1ed      	bne.n	9002ab6e <__swbuf_r+0x2a>
9002ab92:	68a3      	ldr	r3, [r4, #8]
9002ab94:	3b01      	subs	r3, #1
9002ab96:	60a3      	str	r3, [r4, #8]
9002ab98:	6823      	ldr	r3, [r4, #0]
9002ab9a:	1c5a      	adds	r2, r3, #1
9002ab9c:	6022      	str	r2, [r4, #0]
9002ab9e:	701e      	strb	r6, [r3, #0]
9002aba0:	6962      	ldr	r2, [r4, #20]
9002aba2:	1c43      	adds	r3, r0, #1
9002aba4:	429a      	cmp	r2, r3
9002aba6:	d004      	beq.n	9002abb2 <__swbuf_r+0x6e>
9002aba8:	89a3      	ldrh	r3, [r4, #12]
9002abaa:	07db      	lsls	r3, r3, #31
9002abac:	d5e1      	bpl.n	9002ab72 <__swbuf_r+0x2e>
9002abae:	2e0a      	cmp	r6, #10
9002abb0:	d1df      	bne.n	9002ab72 <__swbuf_r+0x2e>
9002abb2:	4621      	mov	r1, r4
9002abb4:	4628      	mov	r0, r5
9002abb6:	f000 fdbd 	bl	9002b734 <_fflush_r>
9002abba:	2800      	cmp	r0, #0
9002abbc:	d0d9      	beq.n	9002ab72 <__swbuf_r+0x2e>
9002abbe:	e7d6      	b.n	9002ab6e <__swbuf_r+0x2a>

9002abc0 <__swsetup_r>:
9002abc0:	b538      	push	{r3, r4, r5, lr}
9002abc2:	4b29      	ldr	r3, [pc, #164]	@ (9002ac68 <__swsetup_r+0xa8>)
9002abc4:	4605      	mov	r5, r0
9002abc6:	6818      	ldr	r0, [r3, #0]
9002abc8:	460c      	mov	r4, r1
9002abca:	b118      	cbz	r0, 9002abd4 <__swsetup_r+0x14>
9002abcc:	6a03      	ldr	r3, [r0, #32]
9002abce:	b90b      	cbnz	r3, 9002abd4 <__swsetup_r+0x14>
9002abd0:	f7ff ff70 	bl	9002aab4 <__sinit>
9002abd4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002abd8:	0719      	lsls	r1, r3, #28
9002abda:	d422      	bmi.n	9002ac22 <__swsetup_r+0x62>
9002abdc:	06da      	lsls	r2, r3, #27
9002abde:	d407      	bmi.n	9002abf0 <__swsetup_r+0x30>
9002abe0:	2209      	movs	r2, #9
9002abe2:	602a      	str	r2, [r5, #0]
9002abe4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002abe8:	81a3      	strh	r3, [r4, #12]
9002abea:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002abee:	e033      	b.n	9002ac58 <__swsetup_r+0x98>
9002abf0:	0758      	lsls	r0, r3, #29
9002abf2:	d512      	bpl.n	9002ac1a <__swsetup_r+0x5a>
9002abf4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002abf6:	b141      	cbz	r1, 9002ac0a <__swsetup_r+0x4a>
9002abf8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002abfc:	4299      	cmp	r1, r3
9002abfe:	d002      	beq.n	9002ac06 <__swsetup_r+0x46>
9002ac00:	4628      	mov	r0, r5
9002ac02:	f000 f9f9 	bl	9002aff8 <_free_r>
9002ac06:	2300      	movs	r3, #0
9002ac08:	6363      	str	r3, [r4, #52]	@ 0x34
9002ac0a:	89a3      	ldrh	r3, [r4, #12]
9002ac0c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002ac10:	81a3      	strh	r3, [r4, #12]
9002ac12:	2300      	movs	r3, #0
9002ac14:	6063      	str	r3, [r4, #4]
9002ac16:	6923      	ldr	r3, [r4, #16]
9002ac18:	6023      	str	r3, [r4, #0]
9002ac1a:	89a3      	ldrh	r3, [r4, #12]
9002ac1c:	f043 0308 	orr.w	r3, r3, #8
9002ac20:	81a3      	strh	r3, [r4, #12]
9002ac22:	6923      	ldr	r3, [r4, #16]
9002ac24:	b94b      	cbnz	r3, 9002ac3a <__swsetup_r+0x7a>
9002ac26:	89a3      	ldrh	r3, [r4, #12]
9002ac28:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002ac2c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002ac30:	d003      	beq.n	9002ac3a <__swsetup_r+0x7a>
9002ac32:	4621      	mov	r1, r4
9002ac34:	4628      	mov	r0, r5
9002ac36:	f000 f83f 	bl	9002acb8 <__smakebuf_r>
9002ac3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002ac3e:	f013 0201 	ands.w	r2, r3, #1
9002ac42:	d00a      	beq.n	9002ac5a <__swsetup_r+0x9a>
9002ac44:	2200      	movs	r2, #0
9002ac46:	60a2      	str	r2, [r4, #8]
9002ac48:	6962      	ldr	r2, [r4, #20]
9002ac4a:	4252      	negs	r2, r2
9002ac4c:	61a2      	str	r2, [r4, #24]
9002ac4e:	6922      	ldr	r2, [r4, #16]
9002ac50:	b942      	cbnz	r2, 9002ac64 <__swsetup_r+0xa4>
9002ac52:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002ac56:	d1c5      	bne.n	9002abe4 <__swsetup_r+0x24>
9002ac58:	bd38      	pop	{r3, r4, r5, pc}
9002ac5a:	0799      	lsls	r1, r3, #30
9002ac5c:	bf58      	it	pl
9002ac5e:	6962      	ldrpl	r2, [r4, #20]
9002ac60:	60a2      	str	r2, [r4, #8]
9002ac62:	e7f4      	b.n	9002ac4e <__swsetup_r+0x8e>
9002ac64:	2000      	movs	r0, #0
9002ac66:	e7f7      	b.n	9002ac58 <__swsetup_r+0x98>
9002ac68:	24000114 	.word	0x24000114

9002ac6c <__swhatbuf_r>:
9002ac6c:	b570      	push	{r4, r5, r6, lr}
9002ac6e:	460c      	mov	r4, r1
9002ac70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ac74:	2900      	cmp	r1, #0
9002ac76:	b096      	sub	sp, #88	@ 0x58
9002ac78:	4615      	mov	r5, r2
9002ac7a:	461e      	mov	r6, r3
9002ac7c:	da0d      	bge.n	9002ac9a <__swhatbuf_r+0x2e>
9002ac7e:	89a3      	ldrh	r3, [r4, #12]
9002ac80:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002ac84:	f04f 0100 	mov.w	r1, #0
9002ac88:	bf14      	ite	ne
9002ac8a:	2340      	movne	r3, #64	@ 0x40
9002ac8c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002ac90:	2000      	movs	r0, #0
9002ac92:	6031      	str	r1, [r6, #0]
9002ac94:	602b      	str	r3, [r5, #0]
9002ac96:	b016      	add	sp, #88	@ 0x58
9002ac98:	bd70      	pop	{r4, r5, r6, pc}
9002ac9a:	466a      	mov	r2, sp
9002ac9c:	f000 f87e 	bl	9002ad9c <_fstat_r>
9002aca0:	2800      	cmp	r0, #0
9002aca2:	dbec      	blt.n	9002ac7e <__swhatbuf_r+0x12>
9002aca4:	9901      	ldr	r1, [sp, #4]
9002aca6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002acaa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002acae:	4259      	negs	r1, r3
9002acb0:	4159      	adcs	r1, r3
9002acb2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002acb6:	e7eb      	b.n	9002ac90 <__swhatbuf_r+0x24>

9002acb8 <__smakebuf_r>:
9002acb8:	898b      	ldrh	r3, [r1, #12]
9002acba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002acbc:	079d      	lsls	r5, r3, #30
9002acbe:	4606      	mov	r6, r0
9002acc0:	460c      	mov	r4, r1
9002acc2:	d507      	bpl.n	9002acd4 <__smakebuf_r+0x1c>
9002acc4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002acc8:	6023      	str	r3, [r4, #0]
9002acca:	6123      	str	r3, [r4, #16]
9002accc:	2301      	movs	r3, #1
9002acce:	6163      	str	r3, [r4, #20]
9002acd0:	b003      	add	sp, #12
9002acd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002acd4:	ab01      	add	r3, sp, #4
9002acd6:	466a      	mov	r2, sp
9002acd8:	f7ff ffc8 	bl	9002ac6c <__swhatbuf_r>
9002acdc:	9f00      	ldr	r7, [sp, #0]
9002acde:	4605      	mov	r5, r0
9002ace0:	4639      	mov	r1, r7
9002ace2:	4630      	mov	r0, r6
9002ace4:	f7ff fd62 	bl	9002a7ac <_malloc_r>
9002ace8:	b948      	cbnz	r0, 9002acfe <__smakebuf_r+0x46>
9002acea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002acee:	059a      	lsls	r2, r3, #22
9002acf0:	d4ee      	bmi.n	9002acd0 <__smakebuf_r+0x18>
9002acf2:	f023 0303 	bic.w	r3, r3, #3
9002acf6:	f043 0302 	orr.w	r3, r3, #2
9002acfa:	81a3      	strh	r3, [r4, #12]
9002acfc:	e7e2      	b.n	9002acc4 <__smakebuf_r+0xc>
9002acfe:	89a3      	ldrh	r3, [r4, #12]
9002ad00:	6020      	str	r0, [r4, #0]
9002ad02:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002ad06:	81a3      	strh	r3, [r4, #12]
9002ad08:	9b01      	ldr	r3, [sp, #4]
9002ad0a:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002ad0e:	b15b      	cbz	r3, 9002ad28 <__smakebuf_r+0x70>
9002ad10:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002ad14:	4630      	mov	r0, r6
9002ad16:	f000 f865 	bl	9002ade4 <_isatty_r>
9002ad1a:	b128      	cbz	r0, 9002ad28 <__smakebuf_r+0x70>
9002ad1c:	89a3      	ldrh	r3, [r4, #12]
9002ad1e:	f023 0303 	bic.w	r3, r3, #3
9002ad22:	f043 0301 	orr.w	r3, r3, #1
9002ad26:	81a3      	strh	r3, [r4, #12]
9002ad28:	89a3      	ldrh	r3, [r4, #12]
9002ad2a:	431d      	orrs	r5, r3
9002ad2c:	81a5      	strh	r5, [r4, #12]
9002ad2e:	e7cf      	b.n	9002acd0 <__smakebuf_r+0x18>

9002ad30 <strncmp>:
9002ad30:	b510      	push	{r4, lr}
9002ad32:	b16a      	cbz	r2, 9002ad50 <strncmp+0x20>
9002ad34:	3901      	subs	r1, #1
9002ad36:	1884      	adds	r4, r0, r2
9002ad38:	f810 2b01 	ldrb.w	r2, [r0], #1
9002ad3c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002ad40:	429a      	cmp	r2, r3
9002ad42:	d103      	bne.n	9002ad4c <strncmp+0x1c>
9002ad44:	42a0      	cmp	r0, r4
9002ad46:	d001      	beq.n	9002ad4c <strncmp+0x1c>
9002ad48:	2a00      	cmp	r2, #0
9002ad4a:	d1f5      	bne.n	9002ad38 <strncmp+0x8>
9002ad4c:	1ad0      	subs	r0, r2, r3
9002ad4e:	bd10      	pop	{r4, pc}
9002ad50:	4610      	mov	r0, r2
9002ad52:	e7fc      	b.n	9002ad4e <strncmp+0x1e>

9002ad54 <memset>:
9002ad54:	4402      	add	r2, r0
9002ad56:	4603      	mov	r3, r0
9002ad58:	4293      	cmp	r3, r2
9002ad5a:	d100      	bne.n	9002ad5e <memset+0xa>
9002ad5c:	4770      	bx	lr
9002ad5e:	f803 1b01 	strb.w	r1, [r3], #1
9002ad62:	e7f9      	b.n	9002ad58 <memset+0x4>

9002ad64 <time>:
9002ad64:	b5df      	push	{r0, r1, r2, r3, r4, r6, r7, lr}
9002ad66:	4b0c      	ldr	r3, [pc, #48]	@ (9002ad98 <time+0x34>)
9002ad68:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
9002ad6c:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
9002ad70:	4669      	mov	r1, sp
9002ad72:	4604      	mov	r4, r0
9002ad74:	2200      	movs	r2, #0
9002ad76:	6818      	ldr	r0, [r3, #0]
9002ad78:	e9cd 6700 	strd	r6, r7, [sp]
9002ad7c:	f000 f820 	bl	9002adc0 <_gettimeofday_r>
9002ad80:	2800      	cmp	r0, #0
9002ad82:	bfb8      	it	lt
9002ad84:	e9cd 6700 	strdlt	r6, r7, [sp]
9002ad88:	e9dd 0100 	ldrd	r0, r1, [sp]
9002ad8c:	b10c      	cbz	r4, 9002ad92 <time+0x2e>
9002ad8e:	e9c4 0100 	strd	r0, r1, [r4]
9002ad92:	b004      	add	sp, #16
9002ad94:	bdd0      	pop	{r4, r6, r7, pc}
9002ad96:	bf00      	nop
9002ad98:	24000114 	.word	0x24000114

9002ad9c <_fstat_r>:
9002ad9c:	b538      	push	{r3, r4, r5, lr}
9002ad9e:	4d07      	ldr	r5, [pc, #28]	@ (9002adbc <_fstat_r+0x20>)
9002ada0:	2300      	movs	r3, #0
9002ada2:	4604      	mov	r4, r0
9002ada4:	4608      	mov	r0, r1
9002ada6:	4611      	mov	r1, r2
9002ada8:	602b      	str	r3, [r5, #0]
9002adaa:	f7d9 ff1f 	bl	90004bec <_fstat>
9002adae:	1c43      	adds	r3, r0, #1
9002adb0:	d102      	bne.n	9002adb8 <_fstat_r+0x1c>
9002adb2:	682b      	ldr	r3, [r5, #0]
9002adb4:	b103      	cbz	r3, 9002adb8 <_fstat_r+0x1c>
9002adb6:	6023      	str	r3, [r4, #0]
9002adb8:	bd38      	pop	{r3, r4, r5, pc}
9002adba:	bf00      	nop
9002adbc:	24024040 	.word	0x24024040

9002adc0 <_gettimeofday_r>:
9002adc0:	b538      	push	{r3, r4, r5, lr}
9002adc2:	4d07      	ldr	r5, [pc, #28]	@ (9002ade0 <_gettimeofday_r+0x20>)
9002adc4:	2300      	movs	r3, #0
9002adc6:	4604      	mov	r4, r0
9002adc8:	4608      	mov	r0, r1
9002adca:	4611      	mov	r1, r2
9002adcc:	602b      	str	r3, [r5, #0]
9002adce:	f000 fd63 	bl	9002b898 <_gettimeofday>
9002add2:	1c43      	adds	r3, r0, #1
9002add4:	d102      	bne.n	9002addc <_gettimeofday_r+0x1c>
9002add6:	682b      	ldr	r3, [r5, #0]
9002add8:	b103      	cbz	r3, 9002addc <_gettimeofday_r+0x1c>
9002adda:	6023      	str	r3, [r4, #0]
9002addc:	bd38      	pop	{r3, r4, r5, pc}
9002adde:	bf00      	nop
9002ade0:	24024040 	.word	0x24024040

9002ade4 <_isatty_r>:
9002ade4:	b538      	push	{r3, r4, r5, lr}
9002ade6:	4d06      	ldr	r5, [pc, #24]	@ (9002ae00 <_isatty_r+0x1c>)
9002ade8:	2300      	movs	r3, #0
9002adea:	4604      	mov	r4, r0
9002adec:	4608      	mov	r0, r1
9002adee:	602b      	str	r3, [r5, #0]
9002adf0:	f7d9 ff02 	bl	90004bf8 <_isatty>
9002adf4:	1c43      	adds	r3, r0, #1
9002adf6:	d102      	bne.n	9002adfe <_isatty_r+0x1a>
9002adf8:	682b      	ldr	r3, [r5, #0]
9002adfa:	b103      	cbz	r3, 9002adfe <_isatty_r+0x1a>
9002adfc:	6023      	str	r3, [r4, #0]
9002adfe:	bd38      	pop	{r3, r4, r5, pc}
9002ae00:	24024040 	.word	0x24024040

9002ae04 <_raise_r>:
9002ae04:	291f      	cmp	r1, #31
9002ae06:	b538      	push	{r3, r4, r5, lr}
9002ae08:	4605      	mov	r5, r0
9002ae0a:	460c      	mov	r4, r1
9002ae0c:	d904      	bls.n	9002ae18 <_raise_r+0x14>
9002ae0e:	2316      	movs	r3, #22
9002ae10:	6003      	str	r3, [r0, #0]
9002ae12:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002ae16:	bd38      	pop	{r3, r4, r5, pc}
9002ae18:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002ae1a:	b112      	cbz	r2, 9002ae22 <_raise_r+0x1e>
9002ae1c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002ae20:	b94b      	cbnz	r3, 9002ae36 <_raise_r+0x32>
9002ae22:	4628      	mov	r0, r5
9002ae24:	f000 f830 	bl	9002ae88 <_getpid_r>
9002ae28:	4622      	mov	r2, r4
9002ae2a:	4601      	mov	r1, r0
9002ae2c:	4628      	mov	r0, r5
9002ae2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002ae32:	f000 b817 	b.w	9002ae64 <_kill_r>
9002ae36:	2b01      	cmp	r3, #1
9002ae38:	d00a      	beq.n	9002ae50 <_raise_r+0x4c>
9002ae3a:	1c59      	adds	r1, r3, #1
9002ae3c:	d103      	bne.n	9002ae46 <_raise_r+0x42>
9002ae3e:	2316      	movs	r3, #22
9002ae40:	6003      	str	r3, [r0, #0]
9002ae42:	2001      	movs	r0, #1
9002ae44:	e7e7      	b.n	9002ae16 <_raise_r+0x12>
9002ae46:	2100      	movs	r1, #0
9002ae48:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002ae4c:	4620      	mov	r0, r4
9002ae4e:	4798      	blx	r3
9002ae50:	2000      	movs	r0, #0
9002ae52:	e7e0      	b.n	9002ae16 <_raise_r+0x12>

9002ae54 <raise>:
9002ae54:	4b02      	ldr	r3, [pc, #8]	@ (9002ae60 <raise+0xc>)
9002ae56:	4601      	mov	r1, r0
9002ae58:	6818      	ldr	r0, [r3, #0]
9002ae5a:	f7ff bfd3 	b.w	9002ae04 <_raise_r>
9002ae5e:	bf00      	nop
9002ae60:	24000114 	.word	0x24000114

9002ae64 <_kill_r>:
9002ae64:	b538      	push	{r3, r4, r5, lr}
9002ae66:	4d07      	ldr	r5, [pc, #28]	@ (9002ae84 <_kill_r+0x20>)
9002ae68:	2300      	movs	r3, #0
9002ae6a:	4604      	mov	r4, r0
9002ae6c:	4608      	mov	r0, r1
9002ae6e:	4611      	mov	r1, r2
9002ae70:	602b      	str	r3, [r5, #0]
9002ae72:	f7d9 fe8b 	bl	90004b8c <_kill>
9002ae76:	1c43      	adds	r3, r0, #1
9002ae78:	d102      	bne.n	9002ae80 <_kill_r+0x1c>
9002ae7a:	682b      	ldr	r3, [r5, #0]
9002ae7c:	b103      	cbz	r3, 9002ae80 <_kill_r+0x1c>
9002ae7e:	6023      	str	r3, [r4, #0]
9002ae80:	bd38      	pop	{r3, r4, r5, pc}
9002ae82:	bf00      	nop
9002ae84:	24024040 	.word	0x24024040

9002ae88 <_getpid_r>:
9002ae88:	f7d9 be7e 	b.w	90004b88 <_getpid>

9002ae8c <_sbrk_r>:
9002ae8c:	b538      	push	{r3, r4, r5, lr}
9002ae8e:	4d06      	ldr	r5, [pc, #24]	@ (9002aea8 <_sbrk_r+0x1c>)
9002ae90:	2300      	movs	r3, #0
9002ae92:	4604      	mov	r4, r0
9002ae94:	4608      	mov	r0, r1
9002ae96:	602b      	str	r3, [r5, #0]
9002ae98:	f7d9 feb2 	bl	90004c00 <_sbrk>
9002ae9c:	1c43      	adds	r3, r0, #1
9002ae9e:	d102      	bne.n	9002aea6 <_sbrk_r+0x1a>
9002aea0:	682b      	ldr	r3, [r5, #0]
9002aea2:	b103      	cbz	r3, 9002aea6 <_sbrk_r+0x1a>
9002aea4:	6023      	str	r3, [r4, #0]
9002aea6:	bd38      	pop	{r3, r4, r5, pc}
9002aea8:	24024040 	.word	0x24024040

9002aeac <__errno>:
9002aeac:	4b01      	ldr	r3, [pc, #4]	@ (9002aeb4 <__errno+0x8>)
9002aeae:	6818      	ldr	r0, [r3, #0]
9002aeb0:	4770      	bx	lr
9002aeb2:	bf00      	nop
9002aeb4:	24000114 	.word	0x24000114

9002aeb8 <__libc_init_array>:
9002aeb8:	b570      	push	{r4, r5, r6, lr}
9002aeba:	4d0d      	ldr	r5, [pc, #52]	@ (9002aef0 <__libc_init_array+0x38>)
9002aebc:	4c0d      	ldr	r4, [pc, #52]	@ (9002aef4 <__libc_init_array+0x3c>)
9002aebe:	1b64      	subs	r4, r4, r5
9002aec0:	10a4      	asrs	r4, r4, #2
9002aec2:	2600      	movs	r6, #0
9002aec4:	42a6      	cmp	r6, r4
9002aec6:	d109      	bne.n	9002aedc <__libc_init_array+0x24>
9002aec8:	4d0b      	ldr	r5, [pc, #44]	@ (9002aef8 <__libc_init_array+0x40>)
9002aeca:	4c0c      	ldr	r4, [pc, #48]	@ (9002aefc <__libc_init_array+0x44>)
9002aecc:	f000 fcec 	bl	9002b8a8 <_init>
9002aed0:	1b64      	subs	r4, r4, r5
9002aed2:	10a4      	asrs	r4, r4, #2
9002aed4:	2600      	movs	r6, #0
9002aed6:	42a6      	cmp	r6, r4
9002aed8:	d105      	bne.n	9002aee6 <__libc_init_array+0x2e>
9002aeda:	bd70      	pop	{r4, r5, r6, pc}
9002aedc:	f855 3b04 	ldr.w	r3, [r5], #4
9002aee0:	4798      	blx	r3
9002aee2:	3601      	adds	r6, #1
9002aee4:	e7ee      	b.n	9002aec4 <__libc_init_array+0xc>
9002aee6:	f855 3b04 	ldr.w	r3, [r5], #4
9002aeea:	4798      	blx	r3
9002aeec:	3601      	adds	r6, #1
9002aeee:	e7f2      	b.n	9002aed6 <__libc_init_array+0x1e>
9002aef0:	9002f294 	.word	0x9002f294
9002aef4:	9002f294 	.word	0x9002f294
9002aef8:	9002f294 	.word	0x9002f294
9002aefc:	9002f2ac 	.word	0x9002f2ac

9002af00 <__retarget_lock_init_recursive>:
9002af00:	4770      	bx	lr

9002af02 <__retarget_lock_acquire_recursive>:
9002af02:	4770      	bx	lr

9002af04 <__retarget_lock_release_recursive>:
9002af04:	4770      	bx	lr
	...

9002af08 <__cxa_atexit>:
9002af08:	b510      	push	{r4, lr}
9002af0a:	4604      	mov	r4, r0
9002af0c:	4804      	ldr	r0, [pc, #16]	@ (9002af20 <__cxa_atexit+0x18>)
9002af0e:	4613      	mov	r3, r2
9002af10:	b120      	cbz	r0, 9002af1c <__cxa_atexit+0x14>
9002af12:	460a      	mov	r2, r1
9002af14:	2002      	movs	r0, #2
9002af16:	4621      	mov	r1, r4
9002af18:	f000 f812 	bl	9002af40 <__register_exitproc>
9002af1c:	bd10      	pop	{r4, pc}
9002af1e:	bf00      	nop
9002af20:	9002af41 	.word	0x9002af41

9002af24 <memcpy>:
9002af24:	440a      	add	r2, r1
9002af26:	4291      	cmp	r1, r2
9002af28:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
9002af2c:	d100      	bne.n	9002af30 <memcpy+0xc>
9002af2e:	4770      	bx	lr
9002af30:	b510      	push	{r4, lr}
9002af32:	f811 4b01 	ldrb.w	r4, [r1], #1
9002af36:	f803 4f01 	strb.w	r4, [r3, #1]!
9002af3a:	4291      	cmp	r1, r2
9002af3c:	d1f9      	bne.n	9002af32 <memcpy+0xe>
9002af3e:	bd10      	pop	{r4, pc}

9002af40 <__register_exitproc>:
9002af40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002af44:	4d27      	ldr	r5, [pc, #156]	@ (9002afe4 <__register_exitproc+0xa4>)
9002af46:	4607      	mov	r7, r0
9002af48:	6828      	ldr	r0, [r5, #0]
9002af4a:	4691      	mov	r9, r2
9002af4c:	460e      	mov	r6, r1
9002af4e:	4698      	mov	r8, r3
9002af50:	f7ff ffd7 	bl	9002af02 <__retarget_lock_acquire_recursive>
9002af54:	4a24      	ldr	r2, [pc, #144]	@ (9002afe8 <__register_exitproc+0xa8>)
9002af56:	6814      	ldr	r4, [r2, #0]
9002af58:	b93c      	cbnz	r4, 9002af6a <__register_exitproc+0x2a>
9002af5a:	4b24      	ldr	r3, [pc, #144]	@ (9002afec <__register_exitproc+0xac>)
9002af5c:	6013      	str	r3, [r2, #0]
9002af5e:	4a24      	ldr	r2, [pc, #144]	@ (9002aff0 <__register_exitproc+0xb0>)
9002af60:	b112      	cbz	r2, 9002af68 <__register_exitproc+0x28>
9002af62:	6812      	ldr	r2, [r2, #0]
9002af64:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002af68:	4c20      	ldr	r4, [pc, #128]	@ (9002afec <__register_exitproc+0xac>)
9002af6a:	6863      	ldr	r3, [r4, #4]
9002af6c:	2b1f      	cmp	r3, #31
9002af6e:	dd06      	ble.n	9002af7e <__register_exitproc+0x3e>
9002af70:	6828      	ldr	r0, [r5, #0]
9002af72:	f7ff ffc7 	bl	9002af04 <__retarget_lock_release_recursive>
9002af76:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002af7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002af7e:	b32f      	cbz	r7, 9002afcc <__register_exitproc+0x8c>
9002af80:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002af84:	b968      	cbnz	r0, 9002afa2 <__register_exitproc+0x62>
9002af86:	4b1b      	ldr	r3, [pc, #108]	@ (9002aff4 <__register_exitproc+0xb4>)
9002af88:	2b00      	cmp	r3, #0
9002af8a:	d0f1      	beq.n	9002af70 <__register_exitproc+0x30>
9002af8c:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002af90:	f7ff fbda 	bl	9002a748 <malloc>
9002af94:	2800      	cmp	r0, #0
9002af96:	d0eb      	beq.n	9002af70 <__register_exitproc+0x30>
9002af98:	2300      	movs	r3, #0
9002af9a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002af9e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002afa2:	6863      	ldr	r3, [r4, #4]
9002afa4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002afa8:	2201      	movs	r2, #1
9002afaa:	409a      	lsls	r2, r3
9002afac:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002afb0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002afb4:	4313      	orrs	r3, r2
9002afb6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002afba:	2f02      	cmp	r7, #2
9002afbc:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002afc0:	bf02      	ittt	eq
9002afc2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002afc6:	4313      	orreq	r3, r2
9002afc8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002afcc:	6863      	ldr	r3, [r4, #4]
9002afce:	6828      	ldr	r0, [r5, #0]
9002afd0:	1c5a      	adds	r2, r3, #1
9002afd2:	3302      	adds	r3, #2
9002afd4:	6062      	str	r2, [r4, #4]
9002afd6:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002afda:	f7ff ff93 	bl	9002af04 <__retarget_lock_release_recursive>
9002afde:	2000      	movs	r0, #0
9002afe0:	e7cb      	b.n	9002af7a <__register_exitproc+0x3a>
9002afe2:	bf00      	nop
9002afe4:	24000164 	.word	0x24000164
9002afe8:	24023f34 	.word	0x24023f34
9002afec:	24023ea8 	.word	0x24023ea8
9002aff0:	9002edc0 	.word	0x9002edc0
9002aff4:	9002a749 	.word	0x9002a749

9002aff8 <_free_r>:
9002aff8:	b538      	push	{r3, r4, r5, lr}
9002affa:	4605      	mov	r5, r0
9002affc:	2900      	cmp	r1, #0
9002affe:	d041      	beq.n	9002b084 <_free_r+0x8c>
9002b000:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002b004:	1f0c      	subs	r4, r1, #4
9002b006:	2b00      	cmp	r3, #0
9002b008:	bfb8      	it	lt
9002b00a:	18e4      	addlt	r4, r4, r3
9002b00c:	f7ff fc4e 	bl	9002a8ac <__malloc_lock>
9002b010:	4a1d      	ldr	r2, [pc, #116]	@ (9002b088 <_free_r+0x90>)
9002b012:	6813      	ldr	r3, [r2, #0]
9002b014:	b933      	cbnz	r3, 9002b024 <_free_r+0x2c>
9002b016:	6063      	str	r3, [r4, #4]
9002b018:	6014      	str	r4, [r2, #0]
9002b01a:	4628      	mov	r0, r5
9002b01c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b020:	f7ff bc4a 	b.w	9002a8b8 <__malloc_unlock>
9002b024:	42a3      	cmp	r3, r4
9002b026:	d908      	bls.n	9002b03a <_free_r+0x42>
9002b028:	6820      	ldr	r0, [r4, #0]
9002b02a:	1821      	adds	r1, r4, r0
9002b02c:	428b      	cmp	r3, r1
9002b02e:	bf01      	itttt	eq
9002b030:	6819      	ldreq	r1, [r3, #0]
9002b032:	685b      	ldreq	r3, [r3, #4]
9002b034:	1809      	addeq	r1, r1, r0
9002b036:	6021      	streq	r1, [r4, #0]
9002b038:	e7ed      	b.n	9002b016 <_free_r+0x1e>
9002b03a:	461a      	mov	r2, r3
9002b03c:	685b      	ldr	r3, [r3, #4]
9002b03e:	b10b      	cbz	r3, 9002b044 <_free_r+0x4c>
9002b040:	42a3      	cmp	r3, r4
9002b042:	d9fa      	bls.n	9002b03a <_free_r+0x42>
9002b044:	6811      	ldr	r1, [r2, #0]
9002b046:	1850      	adds	r0, r2, r1
9002b048:	42a0      	cmp	r0, r4
9002b04a:	d10b      	bne.n	9002b064 <_free_r+0x6c>
9002b04c:	6820      	ldr	r0, [r4, #0]
9002b04e:	4401      	add	r1, r0
9002b050:	1850      	adds	r0, r2, r1
9002b052:	4283      	cmp	r3, r0
9002b054:	6011      	str	r1, [r2, #0]
9002b056:	d1e0      	bne.n	9002b01a <_free_r+0x22>
9002b058:	6818      	ldr	r0, [r3, #0]
9002b05a:	685b      	ldr	r3, [r3, #4]
9002b05c:	6053      	str	r3, [r2, #4]
9002b05e:	4408      	add	r0, r1
9002b060:	6010      	str	r0, [r2, #0]
9002b062:	e7da      	b.n	9002b01a <_free_r+0x22>
9002b064:	d902      	bls.n	9002b06c <_free_r+0x74>
9002b066:	230c      	movs	r3, #12
9002b068:	602b      	str	r3, [r5, #0]
9002b06a:	e7d6      	b.n	9002b01a <_free_r+0x22>
9002b06c:	6820      	ldr	r0, [r4, #0]
9002b06e:	1821      	adds	r1, r4, r0
9002b070:	428b      	cmp	r3, r1
9002b072:	bf04      	itt	eq
9002b074:	6819      	ldreq	r1, [r3, #0]
9002b076:	685b      	ldreq	r3, [r3, #4]
9002b078:	6063      	str	r3, [r4, #4]
9002b07a:	bf04      	itt	eq
9002b07c:	1809      	addeq	r1, r1, r0
9002b07e:	6021      	streq	r1, [r4, #0]
9002b080:	6054      	str	r4, [r2, #4]
9002b082:	e7ca      	b.n	9002b01a <_free_r+0x22>
9002b084:	bd38      	pop	{r3, r4, r5, pc}
9002b086:	bf00      	nop
9002b088:	24023d64 	.word	0x24023d64

9002b08c <__sfputc_r>:
9002b08c:	6893      	ldr	r3, [r2, #8]
9002b08e:	3b01      	subs	r3, #1
9002b090:	2b00      	cmp	r3, #0
9002b092:	b410      	push	{r4}
9002b094:	6093      	str	r3, [r2, #8]
9002b096:	da08      	bge.n	9002b0aa <__sfputc_r+0x1e>
9002b098:	6994      	ldr	r4, [r2, #24]
9002b09a:	42a3      	cmp	r3, r4
9002b09c:	db01      	blt.n	9002b0a2 <__sfputc_r+0x16>
9002b09e:	290a      	cmp	r1, #10
9002b0a0:	d103      	bne.n	9002b0aa <__sfputc_r+0x1e>
9002b0a2:	f85d 4b04 	ldr.w	r4, [sp], #4
9002b0a6:	f7ff bd4d 	b.w	9002ab44 <__swbuf_r>
9002b0aa:	6813      	ldr	r3, [r2, #0]
9002b0ac:	1c58      	adds	r0, r3, #1
9002b0ae:	6010      	str	r0, [r2, #0]
9002b0b0:	7019      	strb	r1, [r3, #0]
9002b0b2:	4608      	mov	r0, r1
9002b0b4:	f85d 4b04 	ldr.w	r4, [sp], #4
9002b0b8:	4770      	bx	lr

9002b0ba <__sfputs_r>:
9002b0ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b0bc:	4606      	mov	r6, r0
9002b0be:	460f      	mov	r7, r1
9002b0c0:	4614      	mov	r4, r2
9002b0c2:	18d5      	adds	r5, r2, r3
9002b0c4:	42ac      	cmp	r4, r5
9002b0c6:	d101      	bne.n	9002b0cc <__sfputs_r+0x12>
9002b0c8:	2000      	movs	r0, #0
9002b0ca:	e007      	b.n	9002b0dc <__sfputs_r+0x22>
9002b0cc:	f814 1b01 	ldrb.w	r1, [r4], #1
9002b0d0:	463a      	mov	r2, r7
9002b0d2:	4630      	mov	r0, r6
9002b0d4:	f7ff ffda 	bl	9002b08c <__sfputc_r>
9002b0d8:	1c43      	adds	r3, r0, #1
9002b0da:	d1f3      	bne.n	9002b0c4 <__sfputs_r+0xa>
9002b0dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002b0e0 <_vfiprintf_r>:
9002b0e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002b0e4:	460d      	mov	r5, r1
9002b0e6:	b09d      	sub	sp, #116	@ 0x74
9002b0e8:	4614      	mov	r4, r2
9002b0ea:	4698      	mov	r8, r3
9002b0ec:	4606      	mov	r6, r0
9002b0ee:	b118      	cbz	r0, 9002b0f8 <_vfiprintf_r+0x18>
9002b0f0:	6a03      	ldr	r3, [r0, #32]
9002b0f2:	b90b      	cbnz	r3, 9002b0f8 <_vfiprintf_r+0x18>
9002b0f4:	f7ff fcde 	bl	9002aab4 <__sinit>
9002b0f8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002b0fa:	07d9      	lsls	r1, r3, #31
9002b0fc:	d405      	bmi.n	9002b10a <_vfiprintf_r+0x2a>
9002b0fe:	89ab      	ldrh	r3, [r5, #12]
9002b100:	059a      	lsls	r2, r3, #22
9002b102:	d402      	bmi.n	9002b10a <_vfiprintf_r+0x2a>
9002b104:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002b106:	f7ff fefc 	bl	9002af02 <__retarget_lock_acquire_recursive>
9002b10a:	89ab      	ldrh	r3, [r5, #12]
9002b10c:	071b      	lsls	r3, r3, #28
9002b10e:	d501      	bpl.n	9002b114 <_vfiprintf_r+0x34>
9002b110:	692b      	ldr	r3, [r5, #16]
9002b112:	b99b      	cbnz	r3, 9002b13c <_vfiprintf_r+0x5c>
9002b114:	4629      	mov	r1, r5
9002b116:	4630      	mov	r0, r6
9002b118:	f7ff fd52 	bl	9002abc0 <__swsetup_r>
9002b11c:	b170      	cbz	r0, 9002b13c <_vfiprintf_r+0x5c>
9002b11e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002b120:	07dc      	lsls	r4, r3, #31
9002b122:	d504      	bpl.n	9002b12e <_vfiprintf_r+0x4e>
9002b124:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002b128:	b01d      	add	sp, #116	@ 0x74
9002b12a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002b12e:	89ab      	ldrh	r3, [r5, #12]
9002b130:	0598      	lsls	r0, r3, #22
9002b132:	d4f7      	bmi.n	9002b124 <_vfiprintf_r+0x44>
9002b134:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002b136:	f7ff fee5 	bl	9002af04 <__retarget_lock_release_recursive>
9002b13a:	e7f3      	b.n	9002b124 <_vfiprintf_r+0x44>
9002b13c:	2300      	movs	r3, #0
9002b13e:	9309      	str	r3, [sp, #36]	@ 0x24
9002b140:	2320      	movs	r3, #32
9002b142:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002b146:	f8cd 800c 	str.w	r8, [sp, #12]
9002b14a:	2330      	movs	r3, #48	@ 0x30
9002b14c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002b2fc <_vfiprintf_r+0x21c>
9002b150:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002b154:	f04f 0901 	mov.w	r9, #1
9002b158:	4623      	mov	r3, r4
9002b15a:	469a      	mov	sl, r3
9002b15c:	f813 2b01 	ldrb.w	r2, [r3], #1
9002b160:	b10a      	cbz	r2, 9002b166 <_vfiprintf_r+0x86>
9002b162:	2a25      	cmp	r2, #37	@ 0x25
9002b164:	d1f9      	bne.n	9002b15a <_vfiprintf_r+0x7a>
9002b166:	ebba 0b04 	subs.w	fp, sl, r4
9002b16a:	d00b      	beq.n	9002b184 <_vfiprintf_r+0xa4>
9002b16c:	465b      	mov	r3, fp
9002b16e:	4622      	mov	r2, r4
9002b170:	4629      	mov	r1, r5
9002b172:	4630      	mov	r0, r6
9002b174:	f7ff ffa1 	bl	9002b0ba <__sfputs_r>
9002b178:	3001      	adds	r0, #1
9002b17a:	f000 80a7 	beq.w	9002b2cc <_vfiprintf_r+0x1ec>
9002b17e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002b180:	445a      	add	r2, fp
9002b182:	9209      	str	r2, [sp, #36]	@ 0x24
9002b184:	f89a 3000 	ldrb.w	r3, [sl]
9002b188:	2b00      	cmp	r3, #0
9002b18a:	f000 809f 	beq.w	9002b2cc <_vfiprintf_r+0x1ec>
9002b18e:	2300      	movs	r3, #0
9002b190:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
9002b194:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002b198:	f10a 0a01 	add.w	sl, sl, #1
9002b19c:	9304      	str	r3, [sp, #16]
9002b19e:	9307      	str	r3, [sp, #28]
9002b1a0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002b1a4:	931a      	str	r3, [sp, #104]	@ 0x68
9002b1a6:	4654      	mov	r4, sl
9002b1a8:	2205      	movs	r2, #5
9002b1aa:	f814 1b01 	ldrb.w	r1, [r4], #1
9002b1ae:	4853      	ldr	r0, [pc, #332]	@ (9002b2fc <_vfiprintf_r+0x21c>)
9002b1b0:	f7d5 f896 	bl	900002e0 <memchr>
9002b1b4:	9a04      	ldr	r2, [sp, #16]
9002b1b6:	b9d8      	cbnz	r0, 9002b1f0 <_vfiprintf_r+0x110>
9002b1b8:	06d1      	lsls	r1, r2, #27
9002b1ba:	bf44      	itt	mi
9002b1bc:	2320      	movmi	r3, #32
9002b1be:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002b1c2:	0713      	lsls	r3, r2, #28
9002b1c4:	bf44      	itt	mi
9002b1c6:	232b      	movmi	r3, #43	@ 0x2b
9002b1c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002b1cc:	f89a 3000 	ldrb.w	r3, [sl]
9002b1d0:	2b2a      	cmp	r3, #42	@ 0x2a
9002b1d2:	d015      	beq.n	9002b200 <_vfiprintf_r+0x120>
9002b1d4:	9a07      	ldr	r2, [sp, #28]
9002b1d6:	4654      	mov	r4, sl
9002b1d8:	2000      	movs	r0, #0
9002b1da:	f04f 0c0a 	mov.w	ip, #10
9002b1de:	4621      	mov	r1, r4
9002b1e0:	f811 3b01 	ldrb.w	r3, [r1], #1
9002b1e4:	3b30      	subs	r3, #48	@ 0x30
9002b1e6:	2b09      	cmp	r3, #9
9002b1e8:	d94b      	bls.n	9002b282 <_vfiprintf_r+0x1a2>
9002b1ea:	b1b0      	cbz	r0, 9002b21a <_vfiprintf_r+0x13a>
9002b1ec:	9207      	str	r2, [sp, #28]
9002b1ee:	e014      	b.n	9002b21a <_vfiprintf_r+0x13a>
9002b1f0:	eba0 0308 	sub.w	r3, r0, r8
9002b1f4:	fa09 f303 	lsl.w	r3, r9, r3
9002b1f8:	4313      	orrs	r3, r2
9002b1fa:	9304      	str	r3, [sp, #16]
9002b1fc:	46a2      	mov	sl, r4
9002b1fe:	e7d2      	b.n	9002b1a6 <_vfiprintf_r+0xc6>
9002b200:	9b03      	ldr	r3, [sp, #12]
9002b202:	1d19      	adds	r1, r3, #4
9002b204:	681b      	ldr	r3, [r3, #0]
9002b206:	9103      	str	r1, [sp, #12]
9002b208:	2b00      	cmp	r3, #0
9002b20a:	bfbb      	ittet	lt
9002b20c:	425b      	neglt	r3, r3
9002b20e:	f042 0202 	orrlt.w	r2, r2, #2
9002b212:	9307      	strge	r3, [sp, #28]
9002b214:	9307      	strlt	r3, [sp, #28]
9002b216:	bfb8      	it	lt
9002b218:	9204      	strlt	r2, [sp, #16]
9002b21a:	7823      	ldrb	r3, [r4, #0]
9002b21c:	2b2e      	cmp	r3, #46	@ 0x2e
9002b21e:	d10a      	bne.n	9002b236 <_vfiprintf_r+0x156>
9002b220:	7863      	ldrb	r3, [r4, #1]
9002b222:	2b2a      	cmp	r3, #42	@ 0x2a
9002b224:	d132      	bne.n	9002b28c <_vfiprintf_r+0x1ac>
9002b226:	9b03      	ldr	r3, [sp, #12]
9002b228:	1d1a      	adds	r2, r3, #4
9002b22a:	681b      	ldr	r3, [r3, #0]
9002b22c:	9203      	str	r2, [sp, #12]
9002b22e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002b232:	3402      	adds	r4, #2
9002b234:	9305      	str	r3, [sp, #20]
9002b236:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002b30c <_vfiprintf_r+0x22c>
9002b23a:	7821      	ldrb	r1, [r4, #0]
9002b23c:	2203      	movs	r2, #3
9002b23e:	4650      	mov	r0, sl
9002b240:	f7d5 f84e 	bl	900002e0 <memchr>
9002b244:	b138      	cbz	r0, 9002b256 <_vfiprintf_r+0x176>
9002b246:	9b04      	ldr	r3, [sp, #16]
9002b248:	eba0 000a 	sub.w	r0, r0, sl
9002b24c:	2240      	movs	r2, #64	@ 0x40
9002b24e:	4082      	lsls	r2, r0
9002b250:	4313      	orrs	r3, r2
9002b252:	3401      	adds	r4, #1
9002b254:	9304      	str	r3, [sp, #16]
9002b256:	f814 1b01 	ldrb.w	r1, [r4], #1
9002b25a:	4829      	ldr	r0, [pc, #164]	@ (9002b300 <_vfiprintf_r+0x220>)
9002b25c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002b260:	2206      	movs	r2, #6
9002b262:	f7d5 f83d 	bl	900002e0 <memchr>
9002b266:	2800      	cmp	r0, #0
9002b268:	d03f      	beq.n	9002b2ea <_vfiprintf_r+0x20a>
9002b26a:	4b26      	ldr	r3, [pc, #152]	@ (9002b304 <_vfiprintf_r+0x224>)
9002b26c:	bb1b      	cbnz	r3, 9002b2b6 <_vfiprintf_r+0x1d6>
9002b26e:	9b03      	ldr	r3, [sp, #12]
9002b270:	3307      	adds	r3, #7
9002b272:	f023 0307 	bic.w	r3, r3, #7
9002b276:	3308      	adds	r3, #8
9002b278:	9303      	str	r3, [sp, #12]
9002b27a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002b27c:	443b      	add	r3, r7
9002b27e:	9309      	str	r3, [sp, #36]	@ 0x24
9002b280:	e76a      	b.n	9002b158 <_vfiprintf_r+0x78>
9002b282:	fb0c 3202 	mla	r2, ip, r2, r3
9002b286:	460c      	mov	r4, r1
9002b288:	2001      	movs	r0, #1
9002b28a:	e7a8      	b.n	9002b1de <_vfiprintf_r+0xfe>
9002b28c:	2300      	movs	r3, #0
9002b28e:	3401      	adds	r4, #1
9002b290:	9305      	str	r3, [sp, #20]
9002b292:	4619      	mov	r1, r3
9002b294:	f04f 0c0a 	mov.w	ip, #10
9002b298:	4620      	mov	r0, r4
9002b29a:	f810 2b01 	ldrb.w	r2, [r0], #1
9002b29e:	3a30      	subs	r2, #48	@ 0x30
9002b2a0:	2a09      	cmp	r2, #9
9002b2a2:	d903      	bls.n	9002b2ac <_vfiprintf_r+0x1cc>
9002b2a4:	2b00      	cmp	r3, #0
9002b2a6:	d0c6      	beq.n	9002b236 <_vfiprintf_r+0x156>
9002b2a8:	9105      	str	r1, [sp, #20]
9002b2aa:	e7c4      	b.n	9002b236 <_vfiprintf_r+0x156>
9002b2ac:	fb0c 2101 	mla	r1, ip, r1, r2
9002b2b0:	4604      	mov	r4, r0
9002b2b2:	2301      	movs	r3, #1
9002b2b4:	e7f0      	b.n	9002b298 <_vfiprintf_r+0x1b8>
9002b2b6:	ab03      	add	r3, sp, #12
9002b2b8:	9300      	str	r3, [sp, #0]
9002b2ba:	462a      	mov	r2, r5
9002b2bc:	4b12      	ldr	r3, [pc, #72]	@ (9002b308 <_vfiprintf_r+0x228>)
9002b2be:	a904      	add	r1, sp, #16
9002b2c0:	4630      	mov	r0, r6
9002b2c2:	f3af 8000 	nop.w
9002b2c6:	4607      	mov	r7, r0
9002b2c8:	1c78      	adds	r0, r7, #1
9002b2ca:	d1d6      	bne.n	9002b27a <_vfiprintf_r+0x19a>
9002b2cc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002b2ce:	07d9      	lsls	r1, r3, #31
9002b2d0:	d405      	bmi.n	9002b2de <_vfiprintf_r+0x1fe>
9002b2d2:	89ab      	ldrh	r3, [r5, #12]
9002b2d4:	059a      	lsls	r2, r3, #22
9002b2d6:	d402      	bmi.n	9002b2de <_vfiprintf_r+0x1fe>
9002b2d8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002b2da:	f7ff fe13 	bl	9002af04 <__retarget_lock_release_recursive>
9002b2de:	89ab      	ldrh	r3, [r5, #12]
9002b2e0:	065b      	lsls	r3, r3, #25
9002b2e2:	f53f af1f 	bmi.w	9002b124 <_vfiprintf_r+0x44>
9002b2e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002b2e8:	e71e      	b.n	9002b128 <_vfiprintf_r+0x48>
9002b2ea:	ab03      	add	r3, sp, #12
9002b2ec:	9300      	str	r3, [sp, #0]
9002b2ee:	462a      	mov	r2, r5
9002b2f0:	4b05      	ldr	r3, [pc, #20]	@ (9002b308 <_vfiprintf_r+0x228>)
9002b2f2:	a904      	add	r1, sp, #16
9002b2f4:	4630      	mov	r0, r6
9002b2f6:	f000 f879 	bl	9002b3ec <_printf_i>
9002b2fa:	e7e4      	b.n	9002b2c6 <_vfiprintf_r+0x1e6>
9002b2fc:	9002ed8b 	.word	0x9002ed8b
9002b300:	9002ed95 	.word	0x9002ed95
9002b304:	00000000 	.word	0x00000000
9002b308:	9002b0bb 	.word	0x9002b0bb
9002b30c:	9002ed91 	.word	0x9002ed91

9002b310 <_printf_common>:
9002b310:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002b314:	4616      	mov	r6, r2
9002b316:	4698      	mov	r8, r3
9002b318:	688a      	ldr	r2, [r1, #8]
9002b31a:	690b      	ldr	r3, [r1, #16]
9002b31c:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002b320:	4293      	cmp	r3, r2
9002b322:	bfb8      	it	lt
9002b324:	4613      	movlt	r3, r2
9002b326:	6033      	str	r3, [r6, #0]
9002b328:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002b32c:	4607      	mov	r7, r0
9002b32e:	460c      	mov	r4, r1
9002b330:	b10a      	cbz	r2, 9002b336 <_printf_common+0x26>
9002b332:	3301      	adds	r3, #1
9002b334:	6033      	str	r3, [r6, #0]
9002b336:	6823      	ldr	r3, [r4, #0]
9002b338:	0699      	lsls	r1, r3, #26
9002b33a:	bf42      	ittt	mi
9002b33c:	6833      	ldrmi	r3, [r6, #0]
9002b33e:	3302      	addmi	r3, #2
9002b340:	6033      	strmi	r3, [r6, #0]
9002b342:	6825      	ldr	r5, [r4, #0]
9002b344:	f015 0506 	ands.w	r5, r5, #6
9002b348:	d106      	bne.n	9002b358 <_printf_common+0x48>
9002b34a:	f104 0a19 	add.w	sl, r4, #25
9002b34e:	68e3      	ldr	r3, [r4, #12]
9002b350:	6832      	ldr	r2, [r6, #0]
9002b352:	1a9b      	subs	r3, r3, r2
9002b354:	42ab      	cmp	r3, r5
9002b356:	dc26      	bgt.n	9002b3a6 <_printf_common+0x96>
9002b358:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002b35c:	6822      	ldr	r2, [r4, #0]
9002b35e:	3b00      	subs	r3, #0
9002b360:	bf18      	it	ne
9002b362:	2301      	movne	r3, #1
9002b364:	0692      	lsls	r2, r2, #26
9002b366:	d42b      	bmi.n	9002b3c0 <_printf_common+0xb0>
9002b368:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002b36c:	4641      	mov	r1, r8
9002b36e:	4638      	mov	r0, r7
9002b370:	47c8      	blx	r9
9002b372:	3001      	adds	r0, #1
9002b374:	d01e      	beq.n	9002b3b4 <_printf_common+0xa4>
9002b376:	6823      	ldr	r3, [r4, #0]
9002b378:	6922      	ldr	r2, [r4, #16]
9002b37a:	f003 0306 	and.w	r3, r3, #6
9002b37e:	2b04      	cmp	r3, #4
9002b380:	bf02      	ittt	eq
9002b382:	68e5      	ldreq	r5, [r4, #12]
9002b384:	6833      	ldreq	r3, [r6, #0]
9002b386:	1aed      	subeq	r5, r5, r3
9002b388:	68a3      	ldr	r3, [r4, #8]
9002b38a:	bf0c      	ite	eq
9002b38c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002b390:	2500      	movne	r5, #0
9002b392:	4293      	cmp	r3, r2
9002b394:	bfc4      	itt	gt
9002b396:	1a9b      	subgt	r3, r3, r2
9002b398:	18ed      	addgt	r5, r5, r3
9002b39a:	2600      	movs	r6, #0
9002b39c:	341a      	adds	r4, #26
9002b39e:	42b5      	cmp	r5, r6
9002b3a0:	d11a      	bne.n	9002b3d8 <_printf_common+0xc8>
9002b3a2:	2000      	movs	r0, #0
9002b3a4:	e008      	b.n	9002b3b8 <_printf_common+0xa8>
9002b3a6:	2301      	movs	r3, #1
9002b3a8:	4652      	mov	r2, sl
9002b3aa:	4641      	mov	r1, r8
9002b3ac:	4638      	mov	r0, r7
9002b3ae:	47c8      	blx	r9
9002b3b0:	3001      	adds	r0, #1
9002b3b2:	d103      	bne.n	9002b3bc <_printf_common+0xac>
9002b3b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002b3b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002b3bc:	3501      	adds	r5, #1
9002b3be:	e7c6      	b.n	9002b34e <_printf_common+0x3e>
9002b3c0:	18e1      	adds	r1, r4, r3
9002b3c2:	1c5a      	adds	r2, r3, #1
9002b3c4:	2030      	movs	r0, #48	@ 0x30
9002b3c6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002b3ca:	4422      	add	r2, r4
9002b3cc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002b3d0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002b3d4:	3302      	adds	r3, #2
9002b3d6:	e7c7      	b.n	9002b368 <_printf_common+0x58>
9002b3d8:	2301      	movs	r3, #1
9002b3da:	4622      	mov	r2, r4
9002b3dc:	4641      	mov	r1, r8
9002b3de:	4638      	mov	r0, r7
9002b3e0:	47c8      	blx	r9
9002b3e2:	3001      	adds	r0, #1
9002b3e4:	d0e6      	beq.n	9002b3b4 <_printf_common+0xa4>
9002b3e6:	3601      	adds	r6, #1
9002b3e8:	e7d9      	b.n	9002b39e <_printf_common+0x8e>
	...

9002b3ec <_printf_i>:
9002b3ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002b3f0:	7e0f      	ldrb	r7, [r1, #24]
9002b3f2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002b3f4:	2f78      	cmp	r7, #120	@ 0x78
9002b3f6:	4691      	mov	r9, r2
9002b3f8:	4680      	mov	r8, r0
9002b3fa:	460c      	mov	r4, r1
9002b3fc:	469a      	mov	sl, r3
9002b3fe:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002b402:	d807      	bhi.n	9002b414 <_printf_i+0x28>
9002b404:	2f62      	cmp	r7, #98	@ 0x62
9002b406:	d80a      	bhi.n	9002b41e <_printf_i+0x32>
9002b408:	2f00      	cmp	r7, #0
9002b40a:	f000 80d2 	beq.w	9002b5b2 <_printf_i+0x1c6>
9002b40e:	2f58      	cmp	r7, #88	@ 0x58
9002b410:	f000 80b9 	beq.w	9002b586 <_printf_i+0x19a>
9002b414:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002b418:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002b41c:	e03a      	b.n	9002b494 <_printf_i+0xa8>
9002b41e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002b422:	2b15      	cmp	r3, #21
9002b424:	d8f6      	bhi.n	9002b414 <_printf_i+0x28>
9002b426:	a101      	add	r1, pc, #4	@ (adr r1, 9002b42c <_printf_i+0x40>)
9002b428:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002b42c:	9002b485 	.word	0x9002b485
9002b430:	9002b499 	.word	0x9002b499
9002b434:	9002b415 	.word	0x9002b415
9002b438:	9002b415 	.word	0x9002b415
9002b43c:	9002b415 	.word	0x9002b415
9002b440:	9002b415 	.word	0x9002b415
9002b444:	9002b499 	.word	0x9002b499
9002b448:	9002b415 	.word	0x9002b415
9002b44c:	9002b415 	.word	0x9002b415
9002b450:	9002b415 	.word	0x9002b415
9002b454:	9002b415 	.word	0x9002b415
9002b458:	9002b599 	.word	0x9002b599
9002b45c:	9002b4c3 	.word	0x9002b4c3
9002b460:	9002b553 	.word	0x9002b553
9002b464:	9002b415 	.word	0x9002b415
9002b468:	9002b415 	.word	0x9002b415
9002b46c:	9002b5bb 	.word	0x9002b5bb
9002b470:	9002b415 	.word	0x9002b415
9002b474:	9002b4c3 	.word	0x9002b4c3
9002b478:	9002b415 	.word	0x9002b415
9002b47c:	9002b415 	.word	0x9002b415
9002b480:	9002b55b 	.word	0x9002b55b
9002b484:	6833      	ldr	r3, [r6, #0]
9002b486:	1d1a      	adds	r2, r3, #4
9002b488:	681b      	ldr	r3, [r3, #0]
9002b48a:	6032      	str	r2, [r6, #0]
9002b48c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002b490:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002b494:	2301      	movs	r3, #1
9002b496:	e09d      	b.n	9002b5d4 <_printf_i+0x1e8>
9002b498:	6833      	ldr	r3, [r6, #0]
9002b49a:	6820      	ldr	r0, [r4, #0]
9002b49c:	1d19      	adds	r1, r3, #4
9002b49e:	6031      	str	r1, [r6, #0]
9002b4a0:	0606      	lsls	r6, r0, #24
9002b4a2:	d501      	bpl.n	9002b4a8 <_printf_i+0xbc>
9002b4a4:	681d      	ldr	r5, [r3, #0]
9002b4a6:	e003      	b.n	9002b4b0 <_printf_i+0xc4>
9002b4a8:	0645      	lsls	r5, r0, #25
9002b4aa:	d5fb      	bpl.n	9002b4a4 <_printf_i+0xb8>
9002b4ac:	f9b3 5000 	ldrsh.w	r5, [r3]
9002b4b0:	2d00      	cmp	r5, #0
9002b4b2:	da03      	bge.n	9002b4bc <_printf_i+0xd0>
9002b4b4:	232d      	movs	r3, #45	@ 0x2d
9002b4b6:	426d      	negs	r5, r5
9002b4b8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002b4bc:	4859      	ldr	r0, [pc, #356]	@ (9002b624 <_printf_i+0x238>)
9002b4be:	230a      	movs	r3, #10
9002b4c0:	e011      	b.n	9002b4e6 <_printf_i+0xfa>
9002b4c2:	6821      	ldr	r1, [r4, #0]
9002b4c4:	6833      	ldr	r3, [r6, #0]
9002b4c6:	0608      	lsls	r0, r1, #24
9002b4c8:	f853 5b04 	ldr.w	r5, [r3], #4
9002b4cc:	d402      	bmi.n	9002b4d4 <_printf_i+0xe8>
9002b4ce:	0649      	lsls	r1, r1, #25
9002b4d0:	bf48      	it	mi
9002b4d2:	b2ad      	uxthmi	r5, r5
9002b4d4:	2f6f      	cmp	r7, #111	@ 0x6f
9002b4d6:	4853      	ldr	r0, [pc, #332]	@ (9002b624 <_printf_i+0x238>)
9002b4d8:	6033      	str	r3, [r6, #0]
9002b4da:	bf14      	ite	ne
9002b4dc:	230a      	movne	r3, #10
9002b4de:	2308      	moveq	r3, #8
9002b4e0:	2100      	movs	r1, #0
9002b4e2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002b4e6:	6866      	ldr	r6, [r4, #4]
9002b4e8:	60a6      	str	r6, [r4, #8]
9002b4ea:	2e00      	cmp	r6, #0
9002b4ec:	bfa2      	ittt	ge
9002b4ee:	6821      	ldrge	r1, [r4, #0]
9002b4f0:	f021 0104 	bicge.w	r1, r1, #4
9002b4f4:	6021      	strge	r1, [r4, #0]
9002b4f6:	b90d      	cbnz	r5, 9002b4fc <_printf_i+0x110>
9002b4f8:	2e00      	cmp	r6, #0
9002b4fa:	d04b      	beq.n	9002b594 <_printf_i+0x1a8>
9002b4fc:	4616      	mov	r6, r2
9002b4fe:	fbb5 f1f3 	udiv	r1, r5, r3
9002b502:	fb03 5711 	mls	r7, r3, r1, r5
9002b506:	5dc7      	ldrb	r7, [r0, r7]
9002b508:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002b50c:	462f      	mov	r7, r5
9002b50e:	42bb      	cmp	r3, r7
9002b510:	460d      	mov	r5, r1
9002b512:	d9f4      	bls.n	9002b4fe <_printf_i+0x112>
9002b514:	2b08      	cmp	r3, #8
9002b516:	d10b      	bne.n	9002b530 <_printf_i+0x144>
9002b518:	6823      	ldr	r3, [r4, #0]
9002b51a:	07df      	lsls	r7, r3, #31
9002b51c:	d508      	bpl.n	9002b530 <_printf_i+0x144>
9002b51e:	6923      	ldr	r3, [r4, #16]
9002b520:	6861      	ldr	r1, [r4, #4]
9002b522:	4299      	cmp	r1, r3
9002b524:	bfde      	ittt	le
9002b526:	2330      	movle	r3, #48	@ 0x30
9002b528:	f806 3c01 	strble.w	r3, [r6, #-1]
9002b52c:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
9002b530:	1b92      	subs	r2, r2, r6
9002b532:	6122      	str	r2, [r4, #16]
9002b534:	f8cd a000 	str.w	sl, [sp]
9002b538:	464b      	mov	r3, r9
9002b53a:	aa03      	add	r2, sp, #12
9002b53c:	4621      	mov	r1, r4
9002b53e:	4640      	mov	r0, r8
9002b540:	f7ff fee6 	bl	9002b310 <_printf_common>
9002b544:	3001      	adds	r0, #1
9002b546:	d14a      	bne.n	9002b5de <_printf_i+0x1f2>
9002b548:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002b54c:	b004      	add	sp, #16
9002b54e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002b552:	6823      	ldr	r3, [r4, #0]
9002b554:	f043 0320 	orr.w	r3, r3, #32
9002b558:	6023      	str	r3, [r4, #0]
9002b55a:	4833      	ldr	r0, [pc, #204]	@ (9002b628 <_printf_i+0x23c>)
9002b55c:	2778      	movs	r7, #120	@ 0x78
9002b55e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002b562:	6823      	ldr	r3, [r4, #0]
9002b564:	6831      	ldr	r1, [r6, #0]
9002b566:	061f      	lsls	r7, r3, #24
9002b568:	f851 5b04 	ldr.w	r5, [r1], #4
9002b56c:	d402      	bmi.n	9002b574 <_printf_i+0x188>
9002b56e:	065f      	lsls	r7, r3, #25
9002b570:	bf48      	it	mi
9002b572:	b2ad      	uxthmi	r5, r5
9002b574:	6031      	str	r1, [r6, #0]
9002b576:	07d9      	lsls	r1, r3, #31
9002b578:	bf44      	itt	mi
9002b57a:	f043 0320 	orrmi.w	r3, r3, #32
9002b57e:	6023      	strmi	r3, [r4, #0]
9002b580:	b11d      	cbz	r5, 9002b58a <_printf_i+0x19e>
9002b582:	2310      	movs	r3, #16
9002b584:	e7ac      	b.n	9002b4e0 <_printf_i+0xf4>
9002b586:	4827      	ldr	r0, [pc, #156]	@ (9002b624 <_printf_i+0x238>)
9002b588:	e7e9      	b.n	9002b55e <_printf_i+0x172>
9002b58a:	6823      	ldr	r3, [r4, #0]
9002b58c:	f023 0320 	bic.w	r3, r3, #32
9002b590:	6023      	str	r3, [r4, #0]
9002b592:	e7f6      	b.n	9002b582 <_printf_i+0x196>
9002b594:	4616      	mov	r6, r2
9002b596:	e7bd      	b.n	9002b514 <_printf_i+0x128>
9002b598:	6833      	ldr	r3, [r6, #0]
9002b59a:	6825      	ldr	r5, [r4, #0]
9002b59c:	6961      	ldr	r1, [r4, #20]
9002b59e:	1d18      	adds	r0, r3, #4
9002b5a0:	6030      	str	r0, [r6, #0]
9002b5a2:	062e      	lsls	r6, r5, #24
9002b5a4:	681b      	ldr	r3, [r3, #0]
9002b5a6:	d501      	bpl.n	9002b5ac <_printf_i+0x1c0>
9002b5a8:	6019      	str	r1, [r3, #0]
9002b5aa:	e002      	b.n	9002b5b2 <_printf_i+0x1c6>
9002b5ac:	0668      	lsls	r0, r5, #25
9002b5ae:	d5fb      	bpl.n	9002b5a8 <_printf_i+0x1bc>
9002b5b0:	8019      	strh	r1, [r3, #0]
9002b5b2:	2300      	movs	r3, #0
9002b5b4:	6123      	str	r3, [r4, #16]
9002b5b6:	4616      	mov	r6, r2
9002b5b8:	e7bc      	b.n	9002b534 <_printf_i+0x148>
9002b5ba:	6833      	ldr	r3, [r6, #0]
9002b5bc:	1d1a      	adds	r2, r3, #4
9002b5be:	6032      	str	r2, [r6, #0]
9002b5c0:	681e      	ldr	r6, [r3, #0]
9002b5c2:	6862      	ldr	r2, [r4, #4]
9002b5c4:	2100      	movs	r1, #0
9002b5c6:	4630      	mov	r0, r6
9002b5c8:	f7d4 fe8a 	bl	900002e0 <memchr>
9002b5cc:	b108      	cbz	r0, 9002b5d2 <_printf_i+0x1e6>
9002b5ce:	1b80      	subs	r0, r0, r6
9002b5d0:	6060      	str	r0, [r4, #4]
9002b5d2:	6863      	ldr	r3, [r4, #4]
9002b5d4:	6123      	str	r3, [r4, #16]
9002b5d6:	2300      	movs	r3, #0
9002b5d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002b5dc:	e7aa      	b.n	9002b534 <_printf_i+0x148>
9002b5de:	6923      	ldr	r3, [r4, #16]
9002b5e0:	4632      	mov	r2, r6
9002b5e2:	4649      	mov	r1, r9
9002b5e4:	4640      	mov	r0, r8
9002b5e6:	47d0      	blx	sl
9002b5e8:	3001      	adds	r0, #1
9002b5ea:	d0ad      	beq.n	9002b548 <_printf_i+0x15c>
9002b5ec:	6823      	ldr	r3, [r4, #0]
9002b5ee:	079b      	lsls	r3, r3, #30
9002b5f0:	d413      	bmi.n	9002b61a <_printf_i+0x22e>
9002b5f2:	68e0      	ldr	r0, [r4, #12]
9002b5f4:	9b03      	ldr	r3, [sp, #12]
9002b5f6:	4298      	cmp	r0, r3
9002b5f8:	bfb8      	it	lt
9002b5fa:	4618      	movlt	r0, r3
9002b5fc:	e7a6      	b.n	9002b54c <_printf_i+0x160>
9002b5fe:	2301      	movs	r3, #1
9002b600:	4632      	mov	r2, r6
9002b602:	4649      	mov	r1, r9
9002b604:	4640      	mov	r0, r8
9002b606:	47d0      	blx	sl
9002b608:	3001      	adds	r0, #1
9002b60a:	d09d      	beq.n	9002b548 <_printf_i+0x15c>
9002b60c:	3501      	adds	r5, #1
9002b60e:	68e3      	ldr	r3, [r4, #12]
9002b610:	9903      	ldr	r1, [sp, #12]
9002b612:	1a5b      	subs	r3, r3, r1
9002b614:	42ab      	cmp	r3, r5
9002b616:	dcf2      	bgt.n	9002b5fe <_printf_i+0x212>
9002b618:	e7eb      	b.n	9002b5f2 <_printf_i+0x206>
9002b61a:	2500      	movs	r5, #0
9002b61c:	f104 0619 	add.w	r6, r4, #25
9002b620:	e7f5      	b.n	9002b60e <_printf_i+0x222>
9002b622:	bf00      	nop
9002b624:	9002ed9c 	.word	0x9002ed9c
9002b628:	9002edad 	.word	0x9002edad

9002b62c <__sflush_r>:
9002b62c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002b630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b634:	0716      	lsls	r6, r2, #28
9002b636:	4605      	mov	r5, r0
9002b638:	460c      	mov	r4, r1
9002b63a:	d454      	bmi.n	9002b6e6 <__sflush_r+0xba>
9002b63c:	684b      	ldr	r3, [r1, #4]
9002b63e:	2b00      	cmp	r3, #0
9002b640:	dc02      	bgt.n	9002b648 <__sflush_r+0x1c>
9002b642:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002b644:	2b00      	cmp	r3, #0
9002b646:	dd48      	ble.n	9002b6da <__sflush_r+0xae>
9002b648:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b64a:	2e00      	cmp	r6, #0
9002b64c:	d045      	beq.n	9002b6da <__sflush_r+0xae>
9002b64e:	2300      	movs	r3, #0
9002b650:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002b654:	682f      	ldr	r7, [r5, #0]
9002b656:	6a21      	ldr	r1, [r4, #32]
9002b658:	602b      	str	r3, [r5, #0]
9002b65a:	d030      	beq.n	9002b6be <__sflush_r+0x92>
9002b65c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002b65e:	89a3      	ldrh	r3, [r4, #12]
9002b660:	0759      	lsls	r1, r3, #29
9002b662:	d505      	bpl.n	9002b670 <__sflush_r+0x44>
9002b664:	6863      	ldr	r3, [r4, #4]
9002b666:	1ad2      	subs	r2, r2, r3
9002b668:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002b66a:	b10b      	cbz	r3, 9002b670 <__sflush_r+0x44>
9002b66c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002b66e:	1ad2      	subs	r2, r2, r3
9002b670:	2300      	movs	r3, #0
9002b672:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b674:	6a21      	ldr	r1, [r4, #32]
9002b676:	4628      	mov	r0, r5
9002b678:	47b0      	blx	r6
9002b67a:	1c43      	adds	r3, r0, #1
9002b67c:	89a3      	ldrh	r3, [r4, #12]
9002b67e:	d106      	bne.n	9002b68e <__sflush_r+0x62>
9002b680:	6829      	ldr	r1, [r5, #0]
9002b682:	291d      	cmp	r1, #29
9002b684:	d82b      	bhi.n	9002b6de <__sflush_r+0xb2>
9002b686:	4a2a      	ldr	r2, [pc, #168]	@ (9002b730 <__sflush_r+0x104>)
9002b688:	410a      	asrs	r2, r1
9002b68a:	07d6      	lsls	r6, r2, #31
9002b68c:	d427      	bmi.n	9002b6de <__sflush_r+0xb2>
9002b68e:	2200      	movs	r2, #0
9002b690:	6062      	str	r2, [r4, #4]
9002b692:	04d9      	lsls	r1, r3, #19
9002b694:	6922      	ldr	r2, [r4, #16]
9002b696:	6022      	str	r2, [r4, #0]
9002b698:	d504      	bpl.n	9002b6a4 <__sflush_r+0x78>
9002b69a:	1c42      	adds	r2, r0, #1
9002b69c:	d101      	bne.n	9002b6a2 <__sflush_r+0x76>
9002b69e:	682b      	ldr	r3, [r5, #0]
9002b6a0:	b903      	cbnz	r3, 9002b6a4 <__sflush_r+0x78>
9002b6a2:	6560      	str	r0, [r4, #84]	@ 0x54
9002b6a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002b6a6:	602f      	str	r7, [r5, #0]
9002b6a8:	b1b9      	cbz	r1, 9002b6da <__sflush_r+0xae>
9002b6aa:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002b6ae:	4299      	cmp	r1, r3
9002b6b0:	d002      	beq.n	9002b6b8 <__sflush_r+0x8c>
9002b6b2:	4628      	mov	r0, r5
9002b6b4:	f7ff fca0 	bl	9002aff8 <_free_r>
9002b6b8:	2300      	movs	r3, #0
9002b6ba:	6363      	str	r3, [r4, #52]	@ 0x34
9002b6bc:	e00d      	b.n	9002b6da <__sflush_r+0xae>
9002b6be:	2301      	movs	r3, #1
9002b6c0:	4628      	mov	r0, r5
9002b6c2:	47b0      	blx	r6
9002b6c4:	4602      	mov	r2, r0
9002b6c6:	1c50      	adds	r0, r2, #1
9002b6c8:	d1c9      	bne.n	9002b65e <__sflush_r+0x32>
9002b6ca:	682b      	ldr	r3, [r5, #0]
9002b6cc:	2b00      	cmp	r3, #0
9002b6ce:	d0c6      	beq.n	9002b65e <__sflush_r+0x32>
9002b6d0:	2b1d      	cmp	r3, #29
9002b6d2:	d001      	beq.n	9002b6d8 <__sflush_r+0xac>
9002b6d4:	2b16      	cmp	r3, #22
9002b6d6:	d11e      	bne.n	9002b716 <__sflush_r+0xea>
9002b6d8:	602f      	str	r7, [r5, #0]
9002b6da:	2000      	movs	r0, #0
9002b6dc:	e022      	b.n	9002b724 <__sflush_r+0xf8>
9002b6de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b6e2:	b21b      	sxth	r3, r3
9002b6e4:	e01b      	b.n	9002b71e <__sflush_r+0xf2>
9002b6e6:	690f      	ldr	r7, [r1, #16]
9002b6e8:	2f00      	cmp	r7, #0
9002b6ea:	d0f6      	beq.n	9002b6da <__sflush_r+0xae>
9002b6ec:	0793      	lsls	r3, r2, #30
9002b6ee:	680e      	ldr	r6, [r1, #0]
9002b6f0:	bf08      	it	eq
9002b6f2:	694b      	ldreq	r3, [r1, #20]
9002b6f4:	600f      	str	r7, [r1, #0]
9002b6f6:	bf18      	it	ne
9002b6f8:	2300      	movne	r3, #0
9002b6fa:	eba6 0807 	sub.w	r8, r6, r7
9002b6fe:	608b      	str	r3, [r1, #8]
9002b700:	f1b8 0f00 	cmp.w	r8, #0
9002b704:	dde9      	ble.n	9002b6da <__sflush_r+0xae>
9002b706:	6a21      	ldr	r1, [r4, #32]
9002b708:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002b70a:	4643      	mov	r3, r8
9002b70c:	463a      	mov	r2, r7
9002b70e:	4628      	mov	r0, r5
9002b710:	47b0      	blx	r6
9002b712:	2800      	cmp	r0, #0
9002b714:	dc08      	bgt.n	9002b728 <__sflush_r+0xfc>
9002b716:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b71a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b71e:	81a3      	strh	r3, [r4, #12]
9002b720:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002b724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b728:	4407      	add	r7, r0
9002b72a:	eba8 0800 	sub.w	r8, r8, r0
9002b72e:	e7e7      	b.n	9002b700 <__sflush_r+0xd4>
9002b730:	dfbffffe 	.word	0xdfbffffe

9002b734 <_fflush_r>:
9002b734:	b538      	push	{r3, r4, r5, lr}
9002b736:	690b      	ldr	r3, [r1, #16]
9002b738:	4605      	mov	r5, r0
9002b73a:	460c      	mov	r4, r1
9002b73c:	b913      	cbnz	r3, 9002b744 <_fflush_r+0x10>
9002b73e:	2500      	movs	r5, #0
9002b740:	4628      	mov	r0, r5
9002b742:	bd38      	pop	{r3, r4, r5, pc}
9002b744:	b118      	cbz	r0, 9002b74e <_fflush_r+0x1a>
9002b746:	6a03      	ldr	r3, [r0, #32]
9002b748:	b90b      	cbnz	r3, 9002b74e <_fflush_r+0x1a>
9002b74a:	f7ff f9b3 	bl	9002aab4 <__sinit>
9002b74e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b752:	2b00      	cmp	r3, #0
9002b754:	d0f3      	beq.n	9002b73e <_fflush_r+0xa>
9002b756:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002b758:	07d0      	lsls	r0, r2, #31
9002b75a:	d404      	bmi.n	9002b766 <_fflush_r+0x32>
9002b75c:	0599      	lsls	r1, r3, #22
9002b75e:	d402      	bmi.n	9002b766 <_fflush_r+0x32>
9002b760:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b762:	f7ff fbce 	bl	9002af02 <__retarget_lock_acquire_recursive>
9002b766:	4628      	mov	r0, r5
9002b768:	4621      	mov	r1, r4
9002b76a:	f7ff ff5f 	bl	9002b62c <__sflush_r>
9002b76e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002b770:	07da      	lsls	r2, r3, #31
9002b772:	4605      	mov	r5, r0
9002b774:	d4e4      	bmi.n	9002b740 <_fflush_r+0xc>
9002b776:	89a3      	ldrh	r3, [r4, #12]
9002b778:	059b      	lsls	r3, r3, #22
9002b77a:	d4e1      	bmi.n	9002b740 <_fflush_r+0xc>
9002b77c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b77e:	f7ff fbc1 	bl	9002af04 <__retarget_lock_release_recursive>
9002b782:	e7dd      	b.n	9002b740 <_fflush_r+0xc>

9002b784 <__sread>:
9002b784:	b510      	push	{r4, lr}
9002b786:	460c      	mov	r4, r1
9002b788:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b78c:	f000 f860 	bl	9002b850 <_read_r>
9002b790:	2800      	cmp	r0, #0
9002b792:	bfab      	itete	ge
9002b794:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002b796:	89a3      	ldrhlt	r3, [r4, #12]
9002b798:	181b      	addge	r3, r3, r0
9002b79a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002b79e:	bfac      	ite	ge
9002b7a0:	6563      	strge	r3, [r4, #84]	@ 0x54
9002b7a2:	81a3      	strhlt	r3, [r4, #12]
9002b7a4:	bd10      	pop	{r4, pc}

9002b7a6 <__swrite>:
9002b7a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b7aa:	461f      	mov	r7, r3
9002b7ac:	898b      	ldrh	r3, [r1, #12]
9002b7ae:	05db      	lsls	r3, r3, #23
9002b7b0:	4605      	mov	r5, r0
9002b7b2:	460c      	mov	r4, r1
9002b7b4:	4616      	mov	r6, r2
9002b7b6:	d505      	bpl.n	9002b7c4 <__swrite+0x1e>
9002b7b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b7bc:	2302      	movs	r3, #2
9002b7be:	2200      	movs	r2, #0
9002b7c0:	f000 f834 	bl	9002b82c <_lseek_r>
9002b7c4:	89a3      	ldrh	r3, [r4, #12]
9002b7c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002b7ca:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002b7ce:	81a3      	strh	r3, [r4, #12]
9002b7d0:	4632      	mov	r2, r6
9002b7d2:	463b      	mov	r3, r7
9002b7d4:	4628      	mov	r0, r5
9002b7d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002b7da:	f000 b84b 	b.w	9002b874 <_write_r>

9002b7de <__sseek>:
9002b7de:	b510      	push	{r4, lr}
9002b7e0:	460c      	mov	r4, r1
9002b7e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b7e6:	f000 f821 	bl	9002b82c <_lseek_r>
9002b7ea:	1c43      	adds	r3, r0, #1
9002b7ec:	89a3      	ldrh	r3, [r4, #12]
9002b7ee:	bf15      	itete	ne
9002b7f0:	6560      	strne	r0, [r4, #84]	@ 0x54
9002b7f2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002b7f6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002b7fa:	81a3      	strheq	r3, [r4, #12]
9002b7fc:	bf18      	it	ne
9002b7fe:	81a3      	strhne	r3, [r4, #12]
9002b800:	bd10      	pop	{r4, pc}

9002b802 <__sclose>:
9002b802:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b806:	f000 b801 	b.w	9002b80c <_close_r>
	...

9002b80c <_close_r>:
9002b80c:	b538      	push	{r3, r4, r5, lr}
9002b80e:	4d06      	ldr	r5, [pc, #24]	@ (9002b828 <_close_r+0x1c>)
9002b810:	2300      	movs	r3, #0
9002b812:	4604      	mov	r4, r0
9002b814:	4608      	mov	r0, r1
9002b816:	602b      	str	r3, [r5, #0]
9002b818:	f7d9 f9e4 	bl	90004be4 <_close>
9002b81c:	1c43      	adds	r3, r0, #1
9002b81e:	d102      	bne.n	9002b826 <_close_r+0x1a>
9002b820:	682b      	ldr	r3, [r5, #0]
9002b822:	b103      	cbz	r3, 9002b826 <_close_r+0x1a>
9002b824:	6023      	str	r3, [r4, #0]
9002b826:	bd38      	pop	{r3, r4, r5, pc}
9002b828:	24024040 	.word	0x24024040

9002b82c <_lseek_r>:
9002b82c:	b538      	push	{r3, r4, r5, lr}
9002b82e:	4d07      	ldr	r5, [pc, #28]	@ (9002b84c <_lseek_r+0x20>)
9002b830:	4604      	mov	r4, r0
9002b832:	4608      	mov	r0, r1
9002b834:	4611      	mov	r1, r2
9002b836:	2200      	movs	r2, #0
9002b838:	602a      	str	r2, [r5, #0]
9002b83a:	461a      	mov	r2, r3
9002b83c:	f7d9 f9de 	bl	90004bfc <_lseek>
9002b840:	1c43      	adds	r3, r0, #1
9002b842:	d102      	bne.n	9002b84a <_lseek_r+0x1e>
9002b844:	682b      	ldr	r3, [r5, #0]
9002b846:	b103      	cbz	r3, 9002b84a <_lseek_r+0x1e>
9002b848:	6023      	str	r3, [r4, #0]
9002b84a:	bd38      	pop	{r3, r4, r5, pc}
9002b84c:	24024040 	.word	0x24024040

9002b850 <_read_r>:
9002b850:	b538      	push	{r3, r4, r5, lr}
9002b852:	4d07      	ldr	r5, [pc, #28]	@ (9002b870 <_read_r+0x20>)
9002b854:	4604      	mov	r4, r0
9002b856:	4608      	mov	r0, r1
9002b858:	4611      	mov	r1, r2
9002b85a:	2200      	movs	r2, #0
9002b85c:	602a      	str	r2, [r5, #0]
9002b85e:	461a      	mov	r2, r3
9002b860:	f7d9 f9a4 	bl	90004bac <_read>
9002b864:	1c43      	adds	r3, r0, #1
9002b866:	d102      	bne.n	9002b86e <_read_r+0x1e>
9002b868:	682b      	ldr	r3, [r5, #0]
9002b86a:	b103      	cbz	r3, 9002b86e <_read_r+0x1e>
9002b86c:	6023      	str	r3, [r4, #0]
9002b86e:	bd38      	pop	{r3, r4, r5, pc}
9002b870:	24024040 	.word	0x24024040

9002b874 <_write_r>:
9002b874:	b538      	push	{r3, r4, r5, lr}
9002b876:	4d07      	ldr	r5, [pc, #28]	@ (9002b894 <_write_r+0x20>)
9002b878:	4604      	mov	r4, r0
9002b87a:	4608      	mov	r0, r1
9002b87c:	4611      	mov	r1, r2
9002b87e:	2200      	movs	r2, #0
9002b880:	602a      	str	r2, [r5, #0]
9002b882:	461a      	mov	r2, r3
9002b884:	f7d9 f9a0 	bl	90004bc8 <_write>
9002b888:	1c43      	adds	r3, r0, #1
9002b88a:	d102      	bne.n	9002b892 <_write_r+0x1e>
9002b88c:	682b      	ldr	r3, [r5, #0]
9002b88e:	b103      	cbz	r3, 9002b892 <_write_r+0x1e>
9002b890:	6023      	str	r3, [r4, #0]
9002b892:	bd38      	pop	{r3, r4, r5, pc}
9002b894:	24024040 	.word	0x24024040

9002b898 <_gettimeofday>:
9002b898:	4b02      	ldr	r3, [pc, #8]	@ (9002b8a4 <_gettimeofday+0xc>)
9002b89a:	2258      	movs	r2, #88	@ 0x58
9002b89c:	601a      	str	r2, [r3, #0]
9002b89e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
9002b8a2:	4770      	bx	lr
9002b8a4:	24024040 	.word	0x24024040

9002b8a8 <_init>:
9002b8a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b8aa:	bf00      	nop
9002b8ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b8ae:	bc08      	pop	{r3}
9002b8b0:	469e      	mov	lr, r3
9002b8b2:	4770      	bx	lr

9002b8b4 <_fini>:
9002b8b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b8b6:	bf00      	nop
9002b8b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b8ba:	bc08      	pop	{r3}
9002b8bc:	469e      	mov	lr, r3
9002b8be:	4770      	bx	lr
